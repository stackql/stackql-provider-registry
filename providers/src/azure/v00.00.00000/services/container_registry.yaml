openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Container Registry
  description: Azure Container Registry is a managed Docker registry service for storing and managing your private Docker container images and other artifacts. Push Docker container images to a private registry as part of your development workflows. Pull images from a registry to your container deployments with orchestration tools or other Azure services.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    RegistryNameParameter:
      name: registryName
      in: path
      description: The name of the container registry.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    TaskNameParameter:
      name: taskName
      in: path
      description: The name of the container registry task.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9-_]*$
        type: string
    AgentPoolNameParameter:
      name: agentPoolName
      in: path
      description: The name of the agent pool.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 20
        minLength: 3
        pattern: ^[a-zA-Z0-9-]*$
        type: string
    TaskRunNameParameter:
      name: taskRunName
      in: path
      description: The name of the task run.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9-]*$
        type: string
    WebhookNameParameter:
      name: webhookName
      in: path
      description: The name of the webhook.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ReplicationNameParameter:
      name: replicationName
      in: path
      description: The name of the replication.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ScopeMapNameParameter:
      name: scopeMapName
      in: path
      description: The name of the scope map.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9-_]*$
        type: string
    TokenNameParameter:
      name: tokenName
      in: path
      description: The name of the token.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9-]*$
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GroupNameParameter:
      name: groupName
      in: path
      description: The name of the private link resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ExportPipelineNameParameter:
      name: exportPipelineName
      in: path
      description: The name of the export pipeline.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ImportPipelineNameParameter:
      name: importPipelineName
      in: path
      description: The name of the import pipeline.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9]*$
        type: string
    PipelineRunNameParameter:
      name: pipelineRunName
      in: path
      description: The name of the pipeline run.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ConnectedRegistryNameParameter:
      name: connectedRegistryName
      in: path
      description: The name of the connected registry.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ConnectedRegistryFilterParameter:
      name: $filter
      in: query
      description: An OData filter expression that describes a subset of connectedRegistries to return. The parameters that can be filtered are parent.id (the resource id of the connectedRegistry parent), mode, and connectionState. The supported operator is eq.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    PackageTypeParameter:
      name: packageType
      in: path
      description: The type of the package resource.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 3
        pattern: ^[a-zA-Z]*$
        type: string
    ArchiveNameParameter:
      name: archiveName
      in: path
      description: The name of the archive resource.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 200
        minLength: 5
        pattern: ^[a-zA-Z0-9-]*$
        type: string
    ArchiveVersionNameParameter:
      name: archiveVersionName
      in: path
      description: The name of the archive version resource.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 200
        minLength: 5
        pattern: ^[a-zA-Z0-9-]*$
        type: string
    CredentialSetNameParameter:
      name: credentialSetName
      in: path
      description: The name of the credential set.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9-]*$
        type: string
    CacheRuleNameParameter:
      name: cacheRuleName
      in: path
      description: The name of the cache rule.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9-]*$
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    AgentPool:
      description: "The agentpool that has the ARM resource and properties. \r\nThe agentpool will have all information to create an agent pool."
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/AgentPoolProperties'
          description: The properties associated with the agent pool
          x-ms-client-flatten: true
      type: object
    AgentPoolProperties:
      description: The properties of agent pool.
      type: object
      properties:
        count:
          format: int32
          description: The count of agent machine
          type: integer
        tier:
          description: The Tier of agent machine
          type: string
        os:
          description: The OS of agent machine
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            name: OS
            modelAsString: true
        virtualNetworkSubnetResourceId:
          description: The Virtual Network Subnet Resource Id of the agent machine
          type: string
        provisioningState:
          description: The provisioning state of this agent pool
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    AgentPoolUpdateParameters:
      description: The parameters for updating an agent pool.
      properties:
        properties:
          $ref: '#/components/schemas/AgentPoolPropertiesUpdateParameters'
          description: The properties associated with the agent pool
          x-ms-client-flatten: true
        tags:
          description: The ARM resource tags.
          type: object
          additionalProperties:
            type: string
      type: object
    AgentPoolPropertiesUpdateParameters:
      type: object
      properties:
        count:
          format: int32
          description: The count of agent machine
          type: integer
    AgentPoolListResult:
      description: The collection of agent pools.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/AgentPool'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    AgentPoolQueueStatus:
      description: The QueueStatus of Agent Pool
      type: object
      properties:
        count:
          format: int32
          description: The number of pending runs in the queue
          type: integer
    RunRequest:
      description: The request parameters for scheduling a run.
      required:
        - type
      type: object
      properties:
        type:
          description: The type of the run request.
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled for the run or not.
          default: false
          type: boolean
        agentPoolName:
          description: The dedicated agent pool for the run.
          type: string
        logTemplate:
          description: The template that describes the repository and tag information for run log artifact.
          type: string
      discriminator:
        propertyName: type
    Run:
      description: Run resource properties
      properties:
        properties:
          $ref: '#/components/schemas/RunProperties'
          description: The properties of a run.
          x-ms-client-flatten: true
      type: object
    RunProperties:
      description: The properties for a run.
      type: object
      properties:
        runId:
          description: The unique identifier for the run.
          type: string
        status:
          description: The current status of the run.
          enum:
            - Queued
            - Started
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Error
            - Timeout
          type: string
          x-ms-enum:
            name: RunStatus
            modelAsString: true
        lastUpdatedTime:
          format: date-time
          description: The last updated time for the run.
          type: string
        runType:
          description: The type of run.
          enum:
            - QuickBuild
            - QuickRun
            - AutoBuild
            - AutoRun
          type: string
          x-ms-enum:
            name: RunType
            modelAsString: true
        agentPoolName:
          description: The dedicated agent pool for the run.
          type: string
        createTime:
          format: date-time
          description: The time the run was scheduled.
          type: string
        startTime:
          format: date-time
          description: The time the run started.
          type: string
        finishTime:
          format: date-time
          description: The time the run finished.
          type: string
        outputImages:
          description: The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.
          type: array
          items:
            $ref: '#/components/schemas/ImageDescriptor'
          x-ms-identifiers:
            - registry
        task:
          description: The task against which run was scheduled.
          type: string
        imageUpdateTrigger:
          $ref: '#/components/schemas/ImageUpdateTrigger'
          description: The image update trigger that caused the run. This is applicable if the task has base image trigger configured.
        sourceTrigger:
          $ref: '#/components/schemas/SourceTriggerDescriptor'
          description: The source trigger that caused the run.
        timerTrigger:
          $ref: '#/components/schemas/TimerTriggerDescriptor'
          description: The timer trigger that caused the run.
        platform:
          $ref: '#/components/schemas/PlatformProperties'
          description: The platform properties against which the run will happen.
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
          description: The machine configuration of the run agent.
        sourceRegistryAuth:
          description: The scope of the credentials that were used to login to the source registry during this run.
          type: string
        customRegistries:
          description: The list of custom registries that were logged in during this run.
          type: array
          items:
            type: string
        runErrorMessage:
          description: The error message received from backend systems after the run is scheduled.
          type: string
          readOnly: true
        updateTriggerToken:
          description: The update trigger token passed for the Run.
          type: string
        logArtifact:
          $ref: '#/components/schemas/ImageDescriptor'
          description: The image description for the log artifact.
          readOnly: true
        provisioningState:
          description: The provisioning state of a run.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled or not.
          default: false
          type: boolean
    ImageDescriptor:
      description: Properties for a registry image.
      type: object
      properties:
        registry:
          description: The registry login server.
          type: string
        repository:
          description: The repository name.
          type: string
        tag:
          description: The tag name.
          type: string
        digest:
          description: The sha256-based digest of the image manifest.
          type: string
    ImageUpdateTrigger:
      description: The image update trigger that caused a build.
      type: object
      properties:
        id:
          description: The unique ID of the trigger.
          type: string
        timestamp:
          format: date-time
          description: The timestamp when the image update happened.
          type: string
        images:
          description: The list of image updates that caused the build.
          type: array
          items:
            $ref: '#/components/schemas/ImageDescriptor'
          x-ms-identifiers:
            - registry
    SourceTriggerDescriptor:
      description: The source trigger that caused a run.
      type: object
      properties:
        id:
          description: The unique ID of the trigger.
          type: string
        eventType:
          description: The event type of the trigger.
          type: string
        commitId:
          description: The unique ID that identifies a commit.
          type: string
        pullRequestId:
          description: The unique ID that identifies pull request.
          type: string
        repositoryUrl:
          description: The repository URL.
          type: string
        branchName:
          description: The branch name in the repository.
          type: string
        providerType:
          description: The source control provider type.
          type: string
    TimerTriggerDescriptor:
      type: object
      properties:
        timerTriggerName:
          description: The timer trigger name that caused the run.
          type: string
        scheduleOccurrence:
          description: The occurrence that triggered the run.
          type: string
    PlatformProperties:
      description: The platform properties against which the run has to happen.
      required:
        - os
      type: object
      properties:
        os:
          description: The operating system type required for the run.
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            name: OS
            modelAsString: true
        architecture:
          description: The OS architecture.
          enum:
            - amd64
            - x86
            - '386'
            - arm
            - arm64
          type: string
          x-ms-enum:
            name: Architecture
            modelAsString: true
        variant:
          description: Variant of the CPU.
          enum:
            - v6
            - v7
            - v8
          type: string
          x-ms-enum:
            name: Variant
            modelAsString: true
    AgentProperties:
      description: The properties that determine the run agent configuration.
      type: object
      properties:
        cpu:
          format: int32
          description: The CPU configuration in terms of number of cores required for the run.
          type: integer
    SourceUploadDefinition:
      description: The properties of a response to source upload request.
      type: object
      properties:
        uploadUrl:
          description: The URL where the client can upload the source.
          type: string
        relativePath:
          description: The relative path to the source. This is used to submit the subsequent queue build request.
          type: string
    RunListResult:
      description: Collection of runs.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/Run'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    RunFilter:
      description: Properties that are enabled for Odata querying on runs.
      type: object
      properties:
        runId:
          description: The unique identifier for the run.
          type: string
        runType:
          description: The type of run.
          enum:
            - QuickBuild
            - QuickRun
            - AutoBuild
            - AutoRun
          type: string
          x-ms-enum:
            name: RunType
            modelAsString: true
        status:
          description: The current status of the run.
          enum:
            - Queued
            - Started
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Error
            - Timeout
          type: string
          x-ms-enum:
            name: RunStatus
            modelAsString: true
        createTime:
          format: date-time
          description: The create time for a run.
          type: string
        finishTime:
          format: date-time
          description: The time the run finished.
          type: string
        outputImageManifests:
          description: "The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of\r\nbuild type."
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
        taskName:
          description: The name of the task that the run corresponds to.
          type: string
        agentPoolName:
          description: The name of the agent pool that the run corresponds to.
          type: string
    RunUpdateParameters:
      description: The set of run properties that can be updated.
      type: object
      properties:
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
    RunGetLogResult:
      description: The result of get log link operation.
      type: object
      properties:
        logLink:
          description: The link to logs for a run on a azure container registry.
          type: string
        logArtifactLink:
          description: The link to logs in registry for a run on a azure container registry.
          type: string
    TaskRun:
      description: "The task run that has the ARM resource and properties. \r\nThe task run will have the information of request and result of a run."
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Identity for the resource.
        properties:
          $ref: '#/components/schemas/TaskRunProperties'
          description: The properties associated with the task run, i.e., request and result of the run
          x-ms-client-flatten: true
        location:
          description: The location of the resource
          type: string
      type: object
    IdentityProperties:
      description: Managed identity for the resource.
      type: object
      properties:
        principalId:
          description: The principal ID of resource identity.
          type: string
          readOnly: true
        tenantId:
          description: The tenant ID of resource.
          type: string
          readOnly: true
        type:
          description: The identity type.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          type: string
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          description: "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserIdentityProperties'
    TaskRunProperties:
      description: The properties of task run.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of this task run
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        runRequest:
          $ref: '#/components/schemas/RunRequest'
          description: The request (parameters) for the run
        runResult:
          $ref: '#/components/schemas/Run'
          description: The result of this task run
          readOnly: true
        forceUpdateTag:
          description: How the run should be forced to rerun even if the run request configuration has not changed
          type: string
    UserIdentityProperties:
      type: object
      properties:
        principalId:
          description: The principal id of user assigned identity.
          type: string
          readOnly: true
        clientId:
          description: The client id of user assigned identity.
          type: string
          readOnly: true
    TaskRunUpdateParameters:
      description: The parameters for updating a task run.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Identity for the resource.
        properties:
          $ref: '#/components/schemas/TaskRunPropertiesUpdateParameters'
          description: The properties for updating a task run.
          x-ms-client-flatten: true
        location:
          description: The location of the resource
          type: string
        tags:
          description: The ARM resource tags.
          type: object
          additionalProperties:
            type: string
      type: object
    TaskRunPropertiesUpdateParameters:
      description: The properties of a task run update parameters.
      type: object
      properties:
        runRequest:
          $ref: '#/components/schemas/RunRequest'
          description: The request (parameters) for the new run
        forceUpdateTag:
          description: How the run should be forced to rerun even if the run request configuration has not changed
          type: string
    TaskRunListResult:
      description: The collection of task runs.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/TaskRun'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    TaskListResult:
      description: The collection of tasks.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/Task'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    Task:
      description: "The task that has the ARM resource and task properties. \r\nThe task will have all information to schedule a run against it."
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Identity for the resource.
        properties:
          $ref: '#/components/schemas/TaskProperties'
          description: The properties of a task.
          x-ms-client-flatten: true
      type: object
    TaskProperties:
      description: The properties of a task.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the task.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        creationDate:
          format: date-time
          description: The creation date of task.
          type: string
          readOnly: true
        status:
          description: The current status of task.
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TaskStatus
            modelAsString: true
        platform:
          $ref: '#/components/schemas/PlatformProperties'
          description: The platform properties against which the run has to happen.
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
          description: The machine configuration of the run agent.
        agentPoolName:
          description: The dedicated agent pool for the task.
          type: string
        timeout:
          format: int32
          description: Run timeout in seconds.
          default: 3600
          maximum: 28800
          minimum: 300
          type: integer
        step:
          $ref: '#/components/schemas/TaskStepProperties'
          description: The properties of a task step.
        trigger:
          $ref: '#/components/schemas/TriggerProperties'
          description: The properties that describe all triggers for the task.
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: The properties that describes a set of credentials that will be used when this run is invoked.
        logTemplate:
          description: The template that describes the repository and tag information for run log artifact.
          type: string
        isSystemTask:
          description: The value of this property indicates whether the task resource is system task or not.
          default: false
          type: boolean
    TaskStepProperties:
      description: Base properties for any task step.
      required:
        - type
      type: object
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        baseImageDependencies:
          description: List of base image dependencies for a step.
          type: array
          items:
            $ref: '#/components/schemas/BaseImageDependency'
          x-ms-identifiers: []
          readOnly: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
      discriminator:
        propertyName: type
    TriggerProperties:
      description: The properties of a trigger.
      type: object
      properties:
        timerTriggers:
          description: The collection of timer triggers.
          type: array
          items:
            $ref: '#/components/schemas/TimerTrigger'
          x-ms-identifiers:
            - name
        sourceTriggers:
          description: The collection of triggers based on source code repository.
          type: array
          items:
            $ref: '#/components/schemas/SourceTrigger'
          x-ms-identifiers:
            - name
            - sourceRepository/repositoryUrl
        baseImageTrigger:
          $ref: '#/components/schemas/BaseImageTrigger'
          description: The trigger based on base image dependencies.
    Credentials:
      description: The parameters that describes a set of credentials that will be used when a run is invoked.
      type: object
      properties:
        sourceRegistry:
          $ref: '#/components/schemas/SourceRegistryCredentials'
          description: Describes the credential parameters for accessing the source registry.
        customRegistries:
          description: "Describes the credential parameters for accessing other custom registries. The key\r\nfor the dictionary item will be the registry login server (myregistry.azurecr.io) and\r\nthe value of the item will be the registry credentials for accessing the registry."
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CustomRegistryCredentials'
    BaseImageDependency:
      description: Properties that describe a base image dependency.
      type: object
      properties:
        type:
          description: The type of the base image dependency.
          enum:
            - BuildTime
            - RunTime
          type: string
          x-ms-enum:
            name: BaseImageDependencyType
            modelAsString: true
        registry:
          description: The registry login server.
          type: string
        repository:
          description: The repository name.
          type: string
        tag:
          description: The tag name.
          type: string
        digest:
          description: The sha256-based digest of the image manifest.
          type: string
    TimerTrigger:
      description: The properties of a timer trigger.
      required:
        - schedule
        - name
      type: object
      properties:
        schedule:
          description: The CRON expression for the task schedule
          type: string
        status:
          description: The current status of trigger.
          default: Enabled
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TriggerStatus
            modelAsString: true
        name:
          description: The name of the trigger.
          type: string
    SourceTrigger:
      description: The properties of a source based trigger.
      required:
        - sourceRepository
        - sourceTriggerEvents
        - name
      type: object
      properties:
        sourceRepository:
          $ref: '#/components/schemas/SourceProperties'
          description: The properties that describes the source(code) for the task.
        sourceTriggerEvents:
          description: The source event corresponding to the trigger.
          type: array
          items:
            enum:
              - commit
              - pullrequest
            type: string
            x-ms-enum:
              name: SourceTriggerEvent
              modelAsString: true
        status:
          description: The current status of trigger.
          default: Enabled
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TriggerStatus
            modelAsString: true
        name:
          description: The name of the trigger.
          type: string
    BaseImageTrigger:
      description: The trigger based on base image dependency.
      required:
        - baseImageTriggerType
        - name
      type: object
      properties:
        baseImageTriggerType:
          description: The type of the auto trigger for base image dependency updates.
          enum:
            - All
            - Runtime
          type: string
          x-ms-enum:
            name: BaseImageTriggerType
            modelAsString: true
        updateTriggerEndpoint:
          description: The endpoint URL for receiving update triggers.
          type: string
        updateTriggerPayloadType:
          description: Type of Payload body for Base image update triggers.
          enum:
            - Default
            - Token
          type: string
          x-ms-enum:
            name: UpdateTriggerPayloadType
            modelAsString: true
        status:
          description: The current status of trigger.
          default: Enabled
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TriggerStatus
            modelAsString: true
        name:
          description: The name of the trigger.
          type: string
    SourceRegistryCredentials:
      description: Describes the credential parameters for accessing the source registry.
      type: object
      properties:
        loginMode:
          description: "The authentication mode which determines the source registry login scope. The credentials for the source registry\r\nwill be generated using the given scope. These credentials will be used to login to\r\nthe source registry during the run."
          enum:
            - None
            - Default
          type: string
          x-ms-enum:
            name: SourceRegistryLoginMode
            modelAsString: true
    CustomRegistryCredentials:
      description: Describes the credentials that will be used to access a custom registry during a run.
      type: object
      properties:
        userName:
          $ref: '#/components/schemas/SecretObject'
          description: The username for logging into the custom registry.
        password:
          $ref: '#/components/schemas/SecretObject'
          description: "The password for logging into the custom registry. The password is a secret \r\nobject that allows multiple ways of providing the value for it."
        identity:
          description: "Indicates the managed identity assigned to the custom credential. If a user-assigned identity\r\nthis value is the Client ID. If a system-assigned identity, the value will be `system`. In\r\nthe case of a system-assigned identity, the Client ID will be determined by the runner. This\r\nidentity may be used to authenticate to key vault to retrieve credentials or it may be the only \r\nsource of authentication used for accessing the registry."
          type: string
    SourceProperties:
      description: The properties of the source code repository.
      required:
        - sourceControlType
        - repositoryUrl
      type: object
      properties:
        sourceControlType:
          description: The type of source control service.
          enum:
            - Github
            - VisualStudioTeamService
          type: string
          x-ms-enum:
            name: SourceControlType
            modelAsString: true
        repositoryUrl:
          description: The full URL to the source code repository
          type: string
        branch:
          description: The branch name of the source code.
          type: string
        sourceControlAuthProperties:
          $ref: '#/components/schemas/AuthInfo'
          description: "The authorization properties for accessing the source code repository and to set up\r\nwebhooks for notifications."
    SecretObject:
      description: Describes the properties of a secret object value.
      type: object
      properties:
        value:
          description: "The value of the secret. The format of this value will be determined\r\nbased on the type of the secret object. If the type is Opaque, the value will be\r\nused as is without any modification."
          type: string
        type:
          description: "The type of the secret object which determines how the value of the secret object has to be\r\ninterpreted."
          enum:
            - Opaque
            - Vaultsecret
          type: string
          x-ms-enum:
            name: SecretObjectType
            modelAsString: true
    AuthInfo:
      description: The authorization properties for accessing the source code repository.
      required:
        - tokenType
        - token
      type: object
      properties:
        tokenType:
          description: The type of Auth token.
          enum:
            - PAT
            - OAuth
          type: string
          x-ms-enum:
            name: TokenType
            modelAsString: true
        token:
          description: The access token used to access the source control provider.
          type: string
        refreshToken:
          description: The refresh token used to refresh the access token.
          type: string
        scope:
          description: The scope of the access token.
          type: string
        expiresIn:
          format: int32
          description: Time in seconds that the token remains valid
          type: integer
    TaskUpdateParameters:
      description: The parameters for updating a task.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Identity for the resource.
        properties:
          $ref: '#/components/schemas/TaskPropertiesUpdateParameters'
          description: The properties for updating a task.
          x-ms-client-flatten: true
        tags:
          description: The ARM resource tags.
          type: object
          additionalProperties:
            type: string
      type: object
    TaskPropertiesUpdateParameters:
      description: The properties for updating a task.
      type: object
      properties:
        status:
          description: The current status of task.
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TaskStatus
            modelAsString: true
        platform:
          $ref: '#/components/schemas/PlatformUpdateParameters'
          description: The platform properties against which the run has to happen.
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
          description: The machine configuration of the run agent.
        agentPoolName:
          description: The dedicated agent pool for the task.
          type: string
        timeout:
          format: int32
          description: Run timeout in seconds.
          type: integer
        step:
          $ref: '#/components/schemas/TaskStepUpdateParameters'
          description: The properties for updating a task step.
        trigger:
          $ref: '#/components/schemas/TriggerUpdateParameters'
          description: The properties for updating trigger properties.
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: The parameters that describes a set of credentials that will be used when this run is invoked.
        logTemplate:
          description: The template that describes the repository and tag information for run log artifact.
          type: string
    PlatformUpdateParameters:
      description: The properties for updating the platform configuration.
      type: object
      properties:
        os:
          description: The operating system type required for the run.
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            name: OS
            modelAsString: true
        architecture:
          description: The OS architecture.
          enum:
            - amd64
            - x86
            - '386'
            - arm
            - arm64
          type: string
          x-ms-enum:
            name: Architecture
            modelAsString: true
        variant:
          description: Variant of the CPU.
          enum:
            - v6
            - v7
            - v8
          type: string
          x-ms-enum:
            name: Variant
            modelAsString: true
    TaskStepUpdateParameters:
      description: Base properties for updating any task step.
      required:
        - type
      type: object
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
      discriminator:
        propertyName: type
    TriggerUpdateParameters:
      description: The properties for updating triggers.
      type: object
      properties:
        timerTriggers:
          description: The collection of timer triggers.
          type: array
          items:
            $ref: '#/components/schemas/TimerTriggerUpdateParameters'
          x-ms-identifiers:
            - name
        sourceTriggers:
          description: The collection of triggers based on source code repository.
          type: array
          items:
            $ref: '#/components/schemas/SourceTriggerUpdateParameters'
          x-ms-identifiers:
            - name
        baseImageTrigger:
          $ref: '#/components/schemas/BaseImageTriggerUpdateParameters'
          description: The trigger based on base image dependencies.
    TimerTriggerUpdateParameters:
      description: The properties for updating a timer trigger.
      required:
        - name
      type: object
      properties:
        schedule:
          description: The CRON expression for the task schedule
          type: string
        status:
          description: The current status of trigger.
          default: Enabled
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TriggerStatus
            modelAsString: true
        name:
          description: The name of the trigger.
          type: string
    SourceTriggerUpdateParameters:
      description: The properties for updating a source based trigger.
      required:
        - name
      type: object
      properties:
        sourceRepository:
          $ref: '#/components/schemas/SourceUpdateParameters'
          description: The properties that describes the source(code) for the task.
        sourceTriggerEvents:
          description: The source event corresponding to the trigger.
          type: array
          items:
            enum:
              - commit
              - pullrequest
            type: string
            x-ms-enum:
              name: SourceTriggerEvent
              modelAsString: true
        status:
          description: The current status of trigger.
          default: Enabled
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TriggerStatus
            modelAsString: true
        name:
          description: The name of the trigger.
          type: string
    BaseImageTriggerUpdateParameters:
      description: The properties for updating base image dependency trigger.
      required:
        - name
      type: object
      properties:
        baseImageTriggerType:
          description: The type of the auto trigger for base image dependency updates.
          enum:
            - All
            - Runtime
          type: string
          x-ms-enum:
            name: BaseImageTriggerType
            modelAsString: true
        updateTriggerEndpoint:
          description: The endpoint URL for receiving update triggers.
          type: string
        updateTriggerPayloadType:
          description: Type of Payload body for Base image update triggers.
          enum:
            - Default
            - Token
          type: string
          x-ms-enum:
            name: UpdateTriggerPayloadType
            modelAsString: true
        status:
          description: The current status of trigger.
          default: Enabled
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: TriggerStatus
            modelAsString: true
        name:
          description: The name of the trigger.
          type: string
    SourceUpdateParameters:
      description: The properties for updating the source code repository.
      type: object
      properties:
        sourceControlType:
          description: The type of source control service.
          enum:
            - Github
            - VisualStudioTeamService
          type: string
          x-ms-enum:
            name: SourceControlType
            modelAsString: true
        repositoryUrl:
          description: The full URL to the source code repository
          type: string
        branch:
          description: The branch name of the source code.
          type: string
        sourceControlAuthProperties:
          $ref: '#/components/schemas/AuthInfoUpdateParameters'
          description: "The authorization properties for accessing the source code repository and to set up\r\nwebhooks for notifications."
    AuthInfoUpdateParameters:
      description: The authorization properties for accessing the source code repository.
      type: object
      properties:
        tokenType:
          description: The type of Auth token.
          enum:
            - PAT
            - OAuth
          type: string
          x-ms-enum:
            name: TokenType
            modelAsString: true
        token:
          description: The access token used to access the source control provider.
          type: string
        refreshToken:
          description: The refresh token used to refresh the access token.
          type: string
        scope:
          description: The scope of the access token.
          type: string
        expiresIn:
          format: int32
          description: Time in seconds that the token remains valid
          type: integer
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      properties:
        createdBy:
          description: The identity that created the resource.
          type: string
        createdByType:
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          format: date-time
          description: The timestamp of resource creation (UTC).
          type: string
        lastModifiedBy:
          description: The identity that last modified the resource.
          type: string
        lastModifiedByType:
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: lastModifiedByType
            modelAsString: true
        lastModifiedAt:
          format: date-time
          description: The timestamp of resource modification (UTC).
          type: string
      readOnly: true
    ErrorResponseBody:
      description: An error response from the Azure Container Registry service.
      required:
        - code
        - message
      properties:
        code:
          description: error code.
          type: string
        message:
          description: error message.
          type: string
        target:
          description: target of the particular error.
          type: string
        details:
          description: an array of additional nested error response info objects, as described by this contract.
          type: array
          items:
            $ref: '#/components/schemas/InnerErrorDescription'
          x-ms-identifiers:
            - message
            - target
      type: object
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    InnerErrorDescription:
      description: inner error.
      required:
        - code
        - message
      properties:
        code:
          description: error code.
          type: string
        message:
          description: error message.
          type: string
        target:
          description: target of the particular error.
          type: string
      type: object
    DockerBuildRequest:
      description: The parameters for a docker quick build.
      required:
        - type
        - dockerFilePath
        - platform
      x-ms-discriminator-value: DockerBuildRequest
      properties:
        type:
          description: The type of the run request.
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled for the run or not.
          default: false
          type: boolean
        agentPoolName:
          description: The dedicated agent pool for the run.
          type: string
        logTemplate:
          description: The template that describes the repository and tag information for run log artifact.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and tag.
          type: array
          items:
            type: string
        isPushEnabled:
          description: The value of this property indicates whether the image built should be pushed to the registry or not.
          default: true
          type: boolean
        noCache:
          description: The value of this property indicates whether the image cache is enabled or not.
          default: false
          type: boolean
        dockerFilePath:
          description: The Docker file path relative to the source location.
          type: string
        target:
          description: The name of the target build stage for the docker build.
          type: string
        arguments:
          description: The collection of override arguments to be used when executing the run.
          type: array
          items:
            $ref: '#/components/schemas/Argument'
          x-ms-identifiers:
            - name
        timeout:
          format: int32
          description: Run timeout in seconds.
          default: 3600
          maximum: 28800
          minimum: 300
          type: integer
        platform:
          $ref: '#/components/schemas/PlatformProperties'
          description: The platform properties against which the run has to happen.
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
          description: The machine configuration of the run agent.
        sourceLocation:
          description: "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
          type: string
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: The properties that describes a set of credentials that will be used when this run is invoked.
      type: object
    Argument:
      description: The properties of a run argument.
      required:
        - name
        - value
      type: object
      properties:
        name:
          description: The name of the argument.
          type: string
        value:
          description: The value of the argument.
          type: string
        isSecret:
          description: Flag to indicate whether the argument represents a secret and want to be removed from build logs.
          default: false
          type: boolean
    FileTaskRunRequest:
      description: The request parameters for a scheduling run against a task file.
      required:
        - type
        - taskFilePath
        - platform
      x-ms-discriminator-value: FileTaskRunRequest
      properties:
        type:
          description: The type of the run request.
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled for the run or not.
          default: false
          type: boolean
        agentPoolName:
          description: The dedicated agent pool for the run.
          type: string
        logTemplate:
          description: The template that describes the repository and tag information for run log artifact.
          type: string
        taskFilePath:
          description: The template/definition file path relative to the source.
          type: string
        valuesFilePath:
          description: The values/parameters file path relative to the source.
          type: string
        values:
          description: The collection of overridable values that can be passed when running a task.
          type: array
          items:
            $ref: '#/components/schemas/SetValue'
          x-ms-identifiers: []
        timeout:
          format: int32
          description: Run timeout in seconds.
          default: 3600
          maximum: 28800
          minimum: 300
          type: integer
        platform:
          $ref: '#/components/schemas/PlatformProperties'
          description: The platform properties against which the run has to happen.
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
          description: The machine configuration of the run agent.
        sourceLocation:
          description: "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
          type: string
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: The properties that describes a set of credentials that will be used when this run is invoked.
      type: object
    SetValue:
      description: The properties of a overridable value that can be passed to a task template.
      required:
        - name
        - value
      type: object
      properties:
        name:
          description: The name of the overridable value.
          type: string
        value:
          description: The overridable value.
          type: string
        isSecret:
          description: Flag to indicate whether the value represents a secret or not.
          default: false
          type: boolean
    TaskRunRequest:
      description: The parameters for a task run request.
      required:
        - type
        - taskId
      x-ms-discriminator-value: TaskRunRequest
      properties:
        type:
          description: The type of the run request.
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled for the run or not.
          default: false
          type: boolean
        agentPoolName:
          description: The dedicated agent pool for the run.
          type: string
        logTemplate:
          description: The template that describes the repository and tag information for run log artifact.
          type: string
        taskId:
          description: The resource ID of task against which run has to be queued.
          type: string
        overrideTaskStepProperties:
          $ref: '#/components/schemas/OverrideTaskStepProperties'
          description: Set of overridable parameters that can be passed when running a Task.
      type: object
    OverrideTaskStepProperties:
      type: object
      properties:
        contextPath:
          description: The source context against which run has to be queued.
          type: string
        file:
          description: The file against which run has to be queued.
          type: string
        arguments:
          description: "Gets or sets the collection of override arguments to be used when\r\nexecuting a build step."
          type: array
          items:
            $ref: '#/components/schemas/Argument'
          x-ms-identifiers:
            - name
        target:
          description: The name of the target build stage for the docker build.
          type: string
        values:
          description: The collection of overridable values that can be passed when running a Task.
          type: array
          items:
            $ref: '#/components/schemas/SetValue'
          x-ms-identifiers: []
        updateTriggerToken:
          description: Base64 encoded update trigger token that will be attached with the base image trigger webhook.
          type: string
    EncodedTaskRunRequest:
      description: The parameters for a quick task run request.
      required:
        - type
        - encodedTaskContent
        - platform
      x-ms-discriminator-value: EncodedTaskRunRequest
      properties:
        type:
          description: The type of the run request.
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled for the run or not.
          default: false
          type: boolean
        agentPoolName:
          description: The dedicated agent pool for the run.
          type: string
        logTemplate:
          description: The template that describes the repository and tag information for run log artifact.
          type: string
        encodedTaskContent:
          description: Base64 encoded value of the template/definition file content.
          type: string
        encodedValuesContent:
          description: Base64 encoded value of the parameters/values file content.
          type: string
        values:
          description: The collection of overridable values that can be passed when running a task.
          type: array
          items:
            $ref: '#/components/schemas/SetValue'
          x-ms-identifiers: []
        timeout:
          format: int32
          description: Run timeout in seconds.
          default: 3600
          maximum: 28800
          minimum: 300
          type: integer
        platform:
          $ref: '#/components/schemas/PlatformProperties'
          description: The platform properties against which the run has to happen.
        agentConfiguration:
          $ref: '#/components/schemas/AgentProperties'
          description: The machine configuration of the run agent.
        sourceLocation:
          description: "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
          type: string
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: The properties that describes a set of credentials that will be used when this run is invoked.
      type: object
    DockerBuildStep:
      description: The Docker build step.
      required:
        - dockerFilePath
        - type
      x-ms-discriminator-value: Docker
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        baseImageDependencies:
          description: List of base image dependencies for a step.
          type: array
          items:
            $ref: '#/components/schemas/BaseImageDependency'
          x-ms-identifiers: []
          readOnly: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and tag.
          type: array
          items:
            type: string
        isPushEnabled:
          description: The value of this property indicates whether the image built should be pushed to the registry or not.
          default: true
          type: boolean
        noCache:
          description: The value of this property indicates whether the image cache is enabled or not.
          default: false
          type: boolean
        dockerFilePath:
          description: The Docker file path relative to the source context.
          type: string
        target:
          description: The name of the target build stage for the docker build.
          type: string
        arguments:
          description: The collection of override arguments to be used when executing this build step.
          type: array
          items:
            $ref: '#/components/schemas/Argument'
          x-ms-identifiers:
            - name
      type: object
    FileTaskStep:
      description: The properties of a task step.
      required:
        - taskFilePath
        - type
      x-ms-discriminator-value: FileTask
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        baseImageDependencies:
          description: List of base image dependencies for a step.
          type: array
          items:
            $ref: '#/components/schemas/BaseImageDependency'
          x-ms-identifiers: []
          readOnly: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
        taskFilePath:
          description: The task template/definition file path relative to the source context.
          type: string
        valuesFilePath:
          description: The task values/parameters file path relative to the source context.
          type: string
        values:
          description: The collection of overridable values that can be passed when running a task.
          type: array
          items:
            $ref: '#/components/schemas/SetValue'
          x-ms-identifiers: []
      type: object
    EncodedTaskStep:
      description: The properties of a encoded task step.
      required:
        - encodedTaskContent
        - type
      x-ms-discriminator-value: EncodedTask
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        baseImageDependencies:
          description: List of base image dependencies for a step.
          type: array
          items:
            $ref: '#/components/schemas/BaseImageDependency'
          x-ms-identifiers: []
          readOnly: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
        encodedTaskContent:
          description: Base64 encoded value of the template/definition file content.
          type: string
        encodedValuesContent:
          description: Base64 encoded value of the parameters/values file content.
          type: string
        values:
          description: The collection of overridable values that can be passed when running a task.
          type: array
          items:
            $ref: '#/components/schemas/SetValue'
          x-ms-identifiers: []
      type: object
    DockerBuildStepUpdateParameters:
      description: The properties for updating a docker build step.
      required:
        - type
      x-ms-discriminator-value: Docker
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and tag.
          type: array
          items:
            type: string
        isPushEnabled:
          description: The value of this property indicates whether the image built should be pushed to the registry or not.
          type: boolean
        noCache:
          description: The value of this property indicates whether the image cache is enabled or not.
          type: boolean
        dockerFilePath:
          description: The Docker file path relative to the source context.
          type: string
        arguments:
          description: The collection of override arguments to be used when executing this build step.
          type: array
          items:
            $ref: '#/components/schemas/Argument'
          x-ms-identifiers:
            - name
        target:
          description: The name of the target build stage for the docker build.
          type: string
      type: object
    FileTaskStepUpdateParameters:
      description: The properties of updating a task step.
      required:
        - type
      x-ms-discriminator-value: FileTask
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
        taskFilePath:
          description: The task template/definition file path relative to the source context.
          type: string
        valuesFilePath:
          description: The values/parameters file path relative to the source context.
          type: string
        values:
          description: The collection of overridable values that can be passed when running a task.
          type: array
          items:
            $ref: '#/components/schemas/SetValue'
          x-ms-identifiers: []
      type: object
    EncodedTaskStepUpdateParameters:
      description: The properties for updating encoded task step.
      required:
        - type
      x-ms-discriminator-value: EncodedTask
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
            - FileTask
            - EncodedTask
          type: string
          x-ms-enum:
            name: StepType
            modelAsString: true
        contextPath:
          description: The URL(absolute or relative) of the source context for the task step.
          type: string
        contextAccessToken:
          description: The token (git PAT or SAS token of storage account blob) associated with the context for a step.
          type: string
        encodedTaskContent:
          description: Base64 encoded value of the template/definition file content.
          type: string
        encodedValuesContent:
          description: Base64 encoded value of the parameters/values file content.
          type: string
        values:
          description: The collection of overridable values that can be passed when running a task.
          type: array
          items:
            $ref: '#/components/schemas/SetValue'
          x-ms-identifiers: []
      type: object
    ArchiveListResult:
      description: The result of a request to list archives for a container registry.
      type: object
      properties:
        value:
          description: The list of archives. Since this list may be incomplete, the nextLink field should be used to request the next list of distributions.
          type: array
          items:
            $ref: '#/components/schemas/Archive'
        nextLink:
          description: The URI that can be used to request the next list of archives.
          type: string
    Archive:
      description: An object that represents a archive for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/ArchiveProperties'
          description: The properties of the archive.
          x-ms-client-flatten: true
      type: object
    ArchiveProperties:
      description: The properties of a archive.
      type: object
      properties:
        packageSource:
          $ref: '#/components/schemas/ArchivePackageSourceProperties'
          description: The package source of the archive.
        publishedVersion:
          description: The published version of the archive.
          type: string
        repositoryEndpointPrefix:
          type: string
        repositoryEndpoint:
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state of the archive at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    ArchivePackageSourceProperties:
      description: The properties of the archive package source.
      type: object
      properties:
        type:
          description: The type of package source for a archive.
          enum:
            - remote
          type: string
          x-ms-enum:
            name: PackageSourceType
            modelAsString: true
        url:
          description: The external repository url.
          type: string
    ArchiveUpdateParameters:
      description: The parameters for updating a archive.
      properties:
        properties:
          $ref: '#/components/schemas/ArchiveUpdateProperties'
          description: The properties of the connected registry update parameters.
          x-ms-client-flatten: true
      type: object
    ArchiveUpdateProperties:
      description: The properties of a archive.
      type: object
      properties:
        publishedVersion:
          description: The published version of the archive.
          type: string
    ArchiveVersionListResult:
      description: The result of a request to list export pipelines for a container registry.
      type: object
      properties:
        value:
          description: The list of export pipelines. Since this list may be incomplete, the nextLink field should be used to request the next list of export pipelines.
          type: array
          items:
            $ref: '#/components/schemas/ArchiveVersion'
        nextLink:
          description: The URI that can be used to request the next list of pipeline runs.
          type: string
    ArchiveVersion:
      description: An object that represents an export pipeline for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/ArchiveVersionProperties'
          description: The properties of the archive.
          x-ms-client-flatten: true
      type: object
    ArchiveVersionProperties:
      description: The properties of an export pipeline.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the archive at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        archiveVersionErrorMessage:
          description: The detailed error message for the archive version in the case of failure.
          type: string
    CacheRulesListResult:
      description: The result of a request to list cache rules for a container registry.
      type: object
      properties:
        value:
          description: The list of cache rules.
          type: array
          items:
            $ref: '#/components/schemas/CacheRule'
        nextLink:
          description: If provided, client must use NextLink URI to request next list of cache rules.
          type: string
    CacheRule:
      description: An object that represents a cache rule for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/CacheRuleProperties'
          description: The properties of the cache rule.
          x-ms-client-flatten: true
      type: object
    CacheRuleProperties:
      description: The properties of a cache rule.
      type: object
      properties:
        credentialSetResourceId:
          description: The ARM resource ID of the credential store which is associated with the cache rule.
          type: string
        sourceRepository:
          description: Source repository pulled from upstream.
          type: string
        targetRepository:
          description: "Target repository specified in docker pull command.\r\nEg: docker pull myregistry.azurecr.io/{targetRepository}:{tag}"
          type: string
        creationDate:
          format: date-time
          description: The creation date of the cache rule.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    CacheRuleUpdateParameters:
      description: The parameters for updating a cache rule.
      properties:
        properties:
          $ref: '#/components/schemas/CacheRuleUpdateProperties'
          description: The properties of the cache rule update parameters.
          x-ms-client-flatten: true
      type: object
    CacheRuleUpdateProperties:
      description: The parameters for updating cache rule properties.
      type: object
      properties:
        credentialSetResourceId:
          description: The ARM resource ID of the credential store which is associated with the Cache rule.
          type: string
    ConnectedRegistryListResult:
      description: The result of a request to list connected registries for a container registry.
      type: object
      properties:
        value:
          description: The list of connected registries. Since this list may be incomplete, the nextLink field should be used to request the next list of connected registries.
          type: array
          items:
            $ref: '#/components/schemas/ConnectedRegistry'
        nextLink:
          description: The URI that can be used to request the next list of connected registries.
          type: string
    ConnectedRegistry:
      description: An object that represents a connected registry for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/ConnectedRegistryProperties'
          description: The properties of the connected registry.
          x-ms-client-flatten: true
      type: object
    ConnectedRegistryProperties:
      description: The properties of a connected registry.
      required:
        - mode
        - parent
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        mode:
          description: The mode of the connected registry resource that indicates the permissions of the registry.
          enum:
            - ReadWrite
            - ReadOnly
            - Registry
            - Mirror
          type: string
          x-ms-enum:
            name: ConnectedRegistryMode
            modelAsString: true
        version:
          description: The current version of ACR runtime on the connected registry.
          type: string
          readOnly: true
        connectionState:
          description: The current connection state of the connected registry.
          enum:
            - Online
            - Offline
            - Syncing
            - Unhealthy
          type: string
          readOnly: true
          x-ms-enum:
            name: ConnectionState
            modelAsString: true
        lastActivityTime:
          format: date-time
          description: The last activity time of the connected registry.
          type: string
          readOnly: true
        activation:
          $ref: '#/components/schemas/ActivationProperties'
          description: The activation properties of the connected registry.
          readOnly: true
        parent:
          $ref: '#/components/schemas/ParentProperties'
          description: The parent of the connected registry.
        clientTokenIds:
          description: The list of the ACR token resource IDs used to authenticate clients to the connected registry.
          type: array
          items:
            type: string
        loginServer:
          $ref: '#/components/schemas/LoginServerProperties'
          description: The login server properties of the connected registry.
        logging:
          $ref: '#/components/schemas/LoggingProperties'
          description: The logging properties of the connected registry.
        statusDetails:
          description: The list of current statuses of the connected registry.
          type: array
          items:
            $ref: '#/components/schemas/StatusDetailProperties'
          readOnly: true
          x-ms-identifiers:
            - correlationId
        notificationsList:
          description: The list of notifications subscription information for the connected registry.
          type: array
          items:
            type: string
    ActivationProperties:
      description: The activation properties of the connected registry.
      type: object
      properties:
        status:
          description: The activation status of the connected registry.
          enum:
            - Active
            - Inactive
          type: string
          readOnly: true
          x-ms-enum:
            name: ActivationStatus
            modelAsString: true
    ParentProperties:
      description: The properties of the connected registry parent.
      required:
        - syncProperties
      type: object
      properties:
        id:
          description: The resource ID of the parent to which the connected registry will be associated.
          type: string
        syncProperties:
          $ref: '#/components/schemas/SyncProperties'
          description: The sync properties of the connected registry with its parent.
    LoginServerProperties:
      description: The login server properties of the connected registry.
      type: object
      properties:
        host:
          description: The host of the connected registry. Can be FQDN or IP.
          type: string
          readOnly: true
        tls:
          $ref: '#/components/schemas/TlsProperties'
          description: The TLS properties of the connected registry login server.
          readOnly: true
    LoggingProperties:
      description: The logging properties of the connected registry.
      type: object
      properties:
        logLevel:
          description: The verbosity of logs persisted on the connected registry.
          default: Information
          enum:
            - Debug
            - Information
            - Warning
            - Error
            - None
          type: string
          x-ms-enum:
            name: LogLevel
            modelAsString: true
        auditLogStatus:
          description: Indicates whether audit logs are enabled on the connected registry.
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: AuditLogStatus
            modelAsString: true
    StatusDetailProperties:
      description: The status detail properties of the connected registry.
      type: object
      properties:
        type:
          description: The component of the connected registry corresponding to the status.
          type: string
          readOnly: true
        code:
          description: The code of the status.
          type: string
          readOnly: true
        description:
          description: The description of the status.
          type: string
          readOnly: true
        timestamp:
          format: date-time
          description: The timestamp of the status.
          type: string
          readOnly: true
        correlationId:
          description: The correlation ID of the status.
          type: string
          readOnly: true
    SyncProperties:
      description: The sync properties of the connected registry with its parent.
      required:
        - tokenId
        - messageTtl
      type: object
      properties:
        tokenId:
          description: The resource ID of the ACR token used to authenticate the connected registry to its parent during sync.
          type: string
        schedule:
          description: The cron expression indicating the schedule that the connected registry will sync with its parent.
          type: string
        syncWindow:
          format: duration
          description: The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
          type: string
        messageTtl:
          format: duration
          description: The period of time for which a message is available to sync before it is expired. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
          type: string
        lastSyncTime:
          format: date-time
          description: The last time a sync occurred between the connected registry and its parent.
          type: string
          readOnly: true
        gatewayEndpoint:
          description: The gateway endpoint used by the connected registry to communicate with its parent.
          type: string
          readOnly: true
    TlsProperties:
      description: The TLS properties of the connected registry login server.
      type: object
      properties:
        status:
          description: Indicates whether HTTPS is enabled for the login server.
          enum:
            - Enabled
            - Disabled
          type: string
          readOnly: true
          x-ms-enum:
            name: TlsStatus
            modelAsString: true
        certificate:
          $ref: '#/components/schemas/TlsCertificateProperties'
          description: The certificate used to configure HTTPS for the login server.
          readOnly: true
    TlsCertificateProperties:
      description: The TLS certificate properties of the connected registry login server.
      type: object
      properties:
        type:
          description: The type of certificate location.
          enum:
            - LocalDirectory
          type: string
          readOnly: true
          x-ms-enum:
            name: CertificateType
            modelAsString: true
        location:
          description: Indicates the location of the certificates.
          type: string
          readOnly: true
    ConnectedRegistryUpdateParameters:
      description: The parameters for updating a connected registry.
      properties:
        properties:
          $ref: '#/components/schemas/ConnectedRegistryUpdateProperties'
          description: The properties of the connected registry update parameters.
          x-ms-client-flatten: true
      type: object
    ConnectedRegistryUpdateProperties:
      description: The parameters for updating token properties.
      type: object
      properties:
        syncProperties:
          $ref: '#/components/schemas/SyncUpdateProperties'
          description: The sync properties of the connected registry with its parent.
        logging:
          $ref: '#/components/schemas/LoggingProperties'
          description: The logging properties of the connected registry.
        clientTokenIds:
          description: The list of the ACR token resource IDs used to authenticate clients to the connected registry.
          type: array
          items:
            type: string
        notificationsList:
          description: The list of notifications subscription information for the connected registry.
          type: array
          items:
            type: string
    SyncUpdateProperties:
      description: The parameters for updating the sync properties of the connected registry with its parent.
      type: object
      properties:
        schedule:
          description: The cron expression indicating the schedule that the connected registry will sync with its parent.
          type: string
        syncWindow:
          format: duration
          description: The time window during which sync is enabled for each schedule occurrence. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
          type: string
        messageTtl:
          format: duration
          description: The period of time for which a message is available to sync before it is expired. Specify the duration using the format P[n]Y[n]M[n]DT[n]H[n]M[n]S as per ISO8601.
          type: string
    CredentialSetListResult:
      description: The result of a request to list credential sets for a container registry.
      type: object
      properties:
        value:
          description: The list of credential sets. Since this list may be incomplete, the nextLink field should be used to request the next list of credential sets.
          type: array
          items:
            $ref: '#/components/schemas/CredentialSet'
        nextLink:
          description: The URI that can be used to request the next list of credential sets.
          type: string
    CredentialSet:
      description: An object that represents a credential set resource for a container registry.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Identities associated with the resource. This is used to access the KeyVault secrets.
        properties:
          $ref: '#/components/schemas/CredentialSetProperties'
          description: The properties of the credential set.
          x-ms-client-flatten: true
      type: object
    CredentialSetProperties:
      description: The properties of a credential set resource.
      type: object
      properties:
        loginServer:
          description: The credentials are stored for this upstream or login server.
          type: string
        authCredentials:
          description: "List of authentication credentials stored for an upstream.\r\nUsually consists of a primary and an optional secondary credential."
          type: array
          items:
            $ref: '#/components/schemas/AuthCredential'
          x-ms-identifiers:
            - name
        creationDate:
          format: date-time
          description: The creation date of credential store resource.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    AuthCredential:
      description: Authentication credential stored for an upstream.
      type: object
      properties:
        name:
          description: The name of the credential.
          enum:
            - Credential1
          type: string
          x-ms-enum:
            name: CredentialName
            modelAsString: true
        usernameSecretIdentifier:
          description: KeyVault Secret URI for accessing the username.
          type: string
        passwordSecretIdentifier:
          description: KeyVault Secret URI for accessing the password.
          type: string
        credentialHealth:
          $ref: '#/components/schemas/CredentialHealth'
          description: This provides data pertaining to the health of the auth credential.
          readOnly: true
    CredentialHealth:
      description: The health of the auth credential.
      type: object
      properties:
        status:
          description: The health status of credential.
          enum:
            - Healthy
            - Unhealthy
          type: string
          x-ms-enum:
            name: CredentialHealthStatus
            modelAsString: true
        errorCode:
          description: Error code representing the health check error.
          type: string
        errorMessage:
          description: Descriptive message representing the health check error.
          type: string
    DebianArchiveProperties:
      description: The properties of the Debian package Archive.
      properties:
        packageSource:
          $ref: '#/components/schemas/ArchivePackageSourceProperties'
          description: The package source of the archive.
        publishedVersion:
          description: The published version of the archive.
          type: string
        repositoryEndpointPrefix:
          type: string
        repositoryEndpoint:
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state of the archive at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        distributionName:
          description: Debian distribution Name.
          type: string
      type: object
    DebianArchivePackageSourceProperties:
      description: The properties of the archive package source.
      properties:
        type:
          description: The type of package source for a archive.
          enum:
            - remote
          type: string
          x-ms-enum:
            name: PackageSourceType
            modelAsString: true
        url:
          description: The external repository url.
          type: string
        distributionName:
          description: Upstream Debian distribution Name.
          type: string
      type: object
    CredentialSetUpdateParameters:
      description: The parameters for updating a credential set
      properties:
        properties:
          $ref: '#/components/schemas/CredentialSetUpdateProperties'
          description: The properties of the credential set update parameters
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: Identities associated with the resource. This is used to access the KeyVault secrets.
      type: object
    CredentialSetUpdateProperties:
      description: The parameters for updating credential set properties.
      type: object
      properties:
        authCredentials:
          description: "List of authentication credentials stored for an upstream.\r\nUsually consists of a primary and an optional secondary credential."
          type: array
          items:
            $ref: '#/components/schemas/AuthCredential'
          x-ms-identifiers:
            - name
    ExportPipelineListResult:
      description: The result of a request to list export pipelines for a container registry.
      type: object
      properties:
        value:
          description: The list of export pipelines. Since this list may be incomplete, the nextLink field should be used to request the next list of export pipelines.
          type: array
          items:
            $ref: '#/components/schemas/ExportPipeline'
        nextLink:
          description: The URI that can be used to request the next list of pipeline runs.
          type: string
    ExportPipeline:
      description: An object that represents an export pipeline for a container registry.
      properties:
        location:
          description: The location of the export pipeline.
          type: string
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: The identity of the export pipeline.
        properties:
          $ref: '#/components/schemas/ExportPipelineProperties'
          description: The properties of the export pipeline.
          x-ms-client-flatten: true
      type: object
    ExportPipelineProperties:
      description: The properties of an export pipeline.
      required:
        - target
      type: object
      properties:
        target:
          $ref: '#/components/schemas/ExportPipelineTargetProperties'
          description: The target properties of the export pipeline.
        options:
          description: The list of all options configured for the pipeline.
          type: array
          items:
            enum:
              - OverwriteTags
              - OverwriteBlobs
              - DeleteSourceBlobOnSuccess
              - ContinueOnErrors
            type: string
            x-ms-enum:
              name: PipelineOptions
              modelAsString: true
        provisioningState:
          description: The provisioning state of the pipeline at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    ExportPipelineTargetProperties:
      description: The properties of the export pipeline target.
      required:
        - keyVaultUri
      type: object
      properties:
        type:
          description: The type of target for the export pipeline.
          type: string
        uri:
          description: "The target uri of the export pipeline.\r\nWhen 'AzureStorageBlob': \"https://accountName.blob.core.windows.net/containerName/blobName\"\r\nWhen 'AzureStorageBlobContainer':  \"https://accountName.blob.core.windows.net/containerName\""
          type: string
        keyVaultUri:
          description: They key vault secret uri to obtain the target storage SAS token.
          type: string
    ImportImageParameters:
      required:
        - source
      type: object
      properties:
        source:
          $ref: '#/components/schemas/ImportSource'
          description: The source of the image.
        targetTags:
          description: List of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted).
          type: array
          items:
            type: string
        untaggedTargetRepositories:
          description: List of strings of repository names to do a manifest only copy. No tag will be created.
          type: array
          items:
            type: string
        mode:
          description: When Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins.
          default: NoForce
          enum:
            - NoForce
            - Force
          type: string
          x-ms-enum:
            name: ImportMode
            modelAsString: true
    ImportSource:
      required:
        - sourceImage
      type: object
      properties:
        resourceId:
          description: The resource identifier of the source Azure Container Registry.
          type: string
        registryUri:
          description: The address of the source registry (e.g. 'mcr.microsoft.com').
          type: string
        credentials:
          $ref: '#/components/schemas/ImportSourceCredentials'
          description: Credentials used when importing from a registry uri.
        sourceImage:
          description: "Repository name of the source image.\r\nSpecify an image by repository ('hello-world'). This will use the 'latest' tag.\r\nSpecify an image by tag ('hello-world:latest').\r\nSpecify an image by sha256-based manifest digest ('hello-world@sha256:abc123')."
          type: string
    ImportSourceCredentials:
      required:
        - password
      type: object
      properties:
        username:
          description: The username to authenticate with the source registry.
          type: string
        password:
          description: The password used to authenticate with the source registry.
          type: string
    ImportPipelineListResult:
      description: The result of a request to list import pipelines for a container registry.
      type: object
      properties:
        value:
          description: The list of import pipelines. Since this list may be incomplete, the nextLink field should be used to request the next list of import pipelines.
          type: array
          items:
            $ref: '#/components/schemas/ImportPipeline'
        nextLink:
          description: The URI that can be used to request the next list of pipeline runs.
          type: string
    ImportPipeline:
      description: An object that represents an import pipeline for a container registry.
      properties:
        location:
          description: The location of the import pipeline.
          type: string
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: The identity of the import pipeline.
        properties:
          $ref: '#/components/schemas/ImportPipelineProperties'
          description: The properties of the import pipeline.
          x-ms-client-flatten: true
      type: object
    ImportPipelineProperties:
      description: The properties of an import pipeline.
      required:
        - source
      type: object
      properties:
        source:
          $ref: '#/components/schemas/ImportPipelineSourceProperties'
          description: The source properties of the import pipeline.
        trigger:
          $ref: '#/components/schemas/PipelineTriggerProperties'
          description: The properties that describe the trigger of the import pipeline.
        options:
          description: The list of all options configured for the pipeline.
          type: array
          items:
            enum:
              - OverwriteTags
              - OverwriteBlobs
              - DeleteSourceBlobOnSuccess
              - ContinueOnErrors
            type: string
            x-ms-enum:
              name: PipelineOptions
              modelAsString: true
        provisioningState:
          description: The provisioning state of the pipeline at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    ImportPipelineSourceProperties:
      description: The properties of the import pipeline source.
      required:
        - keyVaultUri
      type: object
      properties:
        type:
          description: The type of source for the import pipeline.
          default: AzureStorageBlobContainer
          enum:
            - AzureStorageBlobContainer
          type: string
          x-ms-enum:
            name: PipelineSourceType
            modelAsString: true
        uri:
          description: "The source uri of the import pipeline.\r\nWhen 'AzureStorageBlob': \"https://accountName.blob.core.windows.net/containerName/blobName\"\r\nWhen 'AzureStorageBlobContainer': \"https://accountName.blob.core.windows.net/containerName\""
          type: string
        keyVaultUri:
          description: They key vault secret uri to obtain the source storage SAS token.
          type: string
    PipelineTriggerProperties:
      type: object
      properties:
        sourceTrigger:
          $ref: '#/components/schemas/PipelineSourceTriggerProperties'
          description: The source trigger properties of the pipeline.
    PipelineSourceTriggerProperties:
      required:
        - status
      type: object
      properties:
        status:
          description: The current status of the source trigger.
          default: Enabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: TriggerStatus
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationDefinition:
      description: The definition of a container registry operation.
      properties:
        origin:
          description: The origin information of the container registry operation.
          type: string
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        display:
          $ref: '#/components/schemas/OperationDisplayDefinition'
          description: The display information for the container registry operation.
        properties:
          $ref: '#/components/schemas/OperationPropertiesDefinition'
          description: The properties information for the container registry operation.
          x-ms-client-flatten: true
        isDataAction:
          description: "This property indicates if the operation is an action or a data action\r\nref: https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#management-and-data-operations"
          type: boolean
      type: object
    OperationDisplayDefinition:
      description: The display information for a container registry operation.
      type: object
      properties:
        provider:
          description: 'The resource provider name: Microsoft.ContainerRegistry.'
          type: string
        resource:
          description: The resource on which the operation is performed.
          type: string
        operation:
          description: The operation that users can perform.
          type: string
        description:
          description: The description for the operation.
          type: string
    OperationPropertiesDefinition:
      description: The definition of Azure Monitoring properties.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/OperationServiceSpecificationDefinition'
          description: The definition of Azure Monitoring service.
    OperationServiceSpecificationDefinition:
      description: The definition of Azure Monitoring list.
      type: object
      properties:
        metricSpecifications:
          description: A list of Azure Monitoring metrics definition.
          type: array
          items:
            $ref: '#/components/schemas/OperationMetricSpecificationDefinition'
          x-ms-identifiers:
            - name
        logSpecifications:
          description: A list of Azure Monitoring log definitions.
          type: array
          items:
            $ref: '#/components/schemas/OperationLogSpecificationDefinition'
          x-ms-identifiers:
            - name
    OperationMetricSpecificationDefinition:
      description: The definition of Azure Monitoring metric.
      type: object
      properties:
        name:
          description: Metric name.
          type: string
        displayName:
          description: Metric display name.
          type: string
        displayDescription:
          description: Metric description.
          type: string
        unit:
          description: Metric unit.
          type: string
        aggregationType:
          description: Metric aggregation type.
          type: string
        internalMetricName:
          description: Internal metric name.
          type: string
    OperationLogSpecificationDefinition:
      description: The definition of Azure Monitoring log.
      type: object
      properties:
        name:
          description: Log name.
          type: string
        displayName:
          description: Log display name.
          type: string
        blobDuration:
          description: Log blob duration.
          type: string
    RegistryNameCheckRequest:
      description: A request to check whether a container registry name is available.
      required:
        - name
        - type
      type: object
      properties:
        name:
          description: The name of the container registry.
          maxLength: 50
          minLength: 5
          pattern: ^[a-zA-Z0-9]*$
          type: string
        type:
          description: The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'.
          enum:
            - Microsoft.ContainerRegistry/registries
          type: string
          x-ms-enum:
            name: ContainerRegistryResourceType
            modelAsString: false
    RegistryNameStatus:
      description: The result of a request to check the availability of a container registry name.
      type: object
      properties:
        nameAvailable:
          description: The value that indicates whether the name is available.
          type: boolean
        reason:
          description: If any, the reason that the name is not available.
          type: string
        message:
          description: If any, the error message that provides more detail for the reason that the name is not available.
          type: string
    PipelineRunListResult:
      description: The result of a request to list pipeline runs for a container registry.
      type: object
      properties:
        value:
          description: The list of pipeline runs. Since this list may be incomplete, the nextLink field should be used to request the next list of pipeline runs.
          type: array
          items:
            $ref: '#/components/schemas/PipelineRun'
        nextLink:
          description: The URI that can be used to request the next list of pipeline runs.
          type: string
    PipelineRun:
      description: An object that represents a pipeline run for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/PipelineRunProperties'
          description: The properties of a pipeline run.
          x-ms-client-flatten: true
      type: object
    PipelineRunProperties:
      description: The properties of a pipeline run.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of a pipeline run.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        request:
          $ref: '#/components/schemas/PipelineRunRequest'
          description: The request parameters for a pipeline run.
        response:
          $ref: '#/components/schemas/PipelineRunResponse'
          description: The response of a pipeline run.
          readOnly: true
        forceUpdateTag:
          description: How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.
          type: string
    PipelineRunRequest:
      description: The request properties provided for a pipeline run.
      type: object
      properties:
        pipelineResourceId:
          description: The resource ID of the pipeline to run.
          type: string
        artifacts:
          description: "List of source artifacts to be transferred by the pipeline. \r\nSpecify an image by repository ('hello-world'). This will use the 'latest' tag.\r\nSpecify an image by tag ('hello-world:latest').\r\nSpecify an image by sha256-based manifest digest ('hello-world@sha256:abc123')."
          type: array
          items:
            type: string
        source:
          $ref: '#/components/schemas/PipelineRunSourceProperties'
          description: The source properties of the pipeline run.
        target:
          $ref: '#/components/schemas/PipelineRunTargetProperties'
          description: The target properties of the pipeline run.
        catalogDigest:
          description: The digest of the tar used to transfer the artifacts.
          type: string
    PipelineRunResponse:
      description: The response properties returned for a pipeline run.
      type: object
      properties:
        status:
          description: The current status of the pipeline run.
          type: string
        importedArtifacts:
          description: The artifacts imported in the pipeline run.
          type: array
          items:
            type: string
        progress:
          $ref: '#/components/schemas/ProgressProperties'
          description: The current progress of the copy operation.
        startTime:
          format: date-time
          description: The time the pipeline run started.
          type: string
        finishTime:
          format: date-time
          description: The time the pipeline run finished.
          type: string
        source:
          $ref: '#/components/schemas/ImportPipelineSourceProperties'
          description: The source of the pipeline run.
        target:
          $ref: '#/components/schemas/ExportPipelineTargetProperties'
          description: The target of the pipeline run.
        catalogDigest:
          description: The digest of the tar used to transfer the artifacts.
          type: string
        trigger:
          $ref: '#/components/schemas/PipelineTriggerDescriptor'
          description: The trigger that caused the pipeline run.
        pipelineRunErrorMessage:
          description: The detailed error message for the pipeline run in the case of failure.
          type: string
    PipelineRunSourceProperties:
      type: object
      properties:
        type:
          description: The type of the source.
          default: AzureStorageBlob
          enum:
            - AzureStorageBlob
          type: string
          x-ms-enum:
            name: PipelineRunSourceType
            modelAsString: true
        name:
          description: The name of the source.
          type: string
    PipelineRunTargetProperties:
      type: object
      properties:
        type:
          description: The type of the target.
          default: AzureStorageBlob
          enum:
            - AzureStorageBlob
          type: string
          x-ms-enum:
            name: PipelineRunTargetType
            modelAsString: true
        name:
          description: The name of the target.
          type: string
    ProgressProperties:
      type: object
      properties:
        percentage:
          description: The percentage complete of the copy operation.
          type: string
    PipelineTriggerDescriptor:
      type: object
      properties:
        sourceTrigger:
          $ref: '#/components/schemas/PipelineSourceTriggerDescriptor'
          description: The source trigger that caused the pipeline run.
    PipelineSourceTriggerDescriptor:
      type: object
      properties:
        timestamp:
          format: date-time
          description: The timestamp when the source update happened.
          type: string
    PrivateEndpointConnectionListResult:
      description: The result of a request to list private endpoint connections for a container registry.
      type: object
      properties:
        value:
          description: The list of private endpoint connections. Since this list may be incomplete, the nextLink field should be used to request the next list of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          description: The URI that can be used to request the next list of private endpoint connections.
          type: string
    PrivateEndpointConnection:
      description: An object that represents a private endpoint connection for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: The properties of a private endpoint connection.
          x-ms-client-flatten: true
      type: object
    PrivateEndpointConnectionProperties:
      description: The properties of a private endpoint connection.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private endpoint.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          description: The provisioning state of private endpoint connection resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    PrivateEndpoint:
      description: The Private Endpoint resource.
      type: object
      properties:
        id:
          description: This is private endpoint resource created with Microsoft.Network resource provider.
          type: string
    PrivateLinkServiceConnectionState:
      description: The state of a private link service connection.
      type: object
      properties:
        status:
          description: The private link service connection status.
          enum:
            - Approved
            - Pending
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: ConnectionStatus
            modelAsString: true
        description:
          description: The description for connection status. For example if connection is rejected it can indicate reason for rejection.
          type: string
        actionsRequired:
          description: A message indicating if changes on the service provider require any updates on the consumer.
          enum:
            - None
            - Recreate
          type: string
          x-ms-enum:
            name: ActionsRequired
            modelAsString: true
    RegistryListResult:
      description: The result of a request to list container registries.
      type: object
      properties:
        value:
          description: The list of container registries. Since this list may be incomplete, the nextLink field should be used to request the next list of container registries.
          type: array
          items:
            $ref: '#/components/schemas/Registry'
        nextLink:
          description: The URI that can be used to request the next list of container registries.
          type: string
    Registry:
      description: An object that represents a container registry.
      required:
        - sku
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the container registry.
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: The identity of the container registry.
        properties:
          $ref: '#/components/schemas/RegistryProperties'
          description: The properties of the container registry.
          x-ms-client-flatten: true
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    RegistryProperties:
      description: The properties of a container registry.
      type: object
      properties:
        loginServer:
          description: The URL that can be used to log into the container registry.
          type: string
          readOnly: true
        creationDate:
          format: date-time
          description: The creation date of the container registry in ISO8601 format.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state of the container registry at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the container registry at the time the operation was called.
          readOnly: true
        adminUserEnabled:
          description: The value that indicates whether the admin user is enabled.
          default: false
          type: boolean
        networkRuleSet:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: The network rule set for a container registry.
        policies:
          $ref: '#/components/schemas/Policies'
          description: The policies for a container registry.
        encryption:
          $ref: '#/components/schemas/EncryptionProperty'
          description: The encryption settings of container registry.
        dataEndpointEnabled:
          description: Enable a single data endpoint per region for serving data.
          type: boolean
        dataEndpointHostNames:
          description: List of host names that will serve data when dataEndpointEnabled is true.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpointConnections:
          description: List of private endpoint connections for a container registry.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        publicNetworkAccess:
          description: Whether or not public network access is allowed for the container registry.
          default: Enabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        networkRuleBypassOptions:
          description: Whether to allow trusted Azure services to access a network restricted registry.
          default: AzureServices
          enum:
            - AzureServices
            - None
          type: string
          x-ms-enum:
            name: NetworkRuleBypassOptions
            modelAsString: true
        zoneRedundancy:
          description: Whether or not zone redundancy is enabled for this container registry
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ZoneRedundancy
            modelAsString: true
        anonymousPullEnabled:
          description: Enables registry-wide pull from unauthenticated clients.
          default: false
          type: boolean
        metadataSearch:
          description: Determines whether registry artifacts are indexed for metadata search.
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: MetadataSearch
            modelAsString: true
    Status:
      description: The status of an Azure resource at the time the operation was called.
      type: object
      properties:
        displayStatus:
          description: The short label for the status.
          type: string
          readOnly: true
        message:
          description: The detailed message for the status, including alerts and error messages.
          type: string
          readOnly: true
        timestamp:
          format: date-time
          description: The timestamp when the status was changed to the current value.
          type: string
          readOnly: true
    StorageAccountProperties:
      description: The properties of a storage account for a container registry. Only applicable to Classic SKU.
      required:
        - id
      type: object
      properties:
        id:
          description: The resource ID of the storage account.
          type: string
    NetworkRuleSet:
      description: The network rule set for a container registry.
      required:
        - defaultAction
      type: object
      properties:
        defaultAction:
          description: The default action of allow or deny when no other rules match.
          default: Allow
          enum:
            - Allow
            - Deny
          type: string
          x-ms-enum:
            name: DefaultAction
            modelAsString: true
        ipRules:
          description: The IP ACL rules.
          type: array
          items:
            $ref: '#/components/schemas/IPRule'
          x-ms-identifiers: []
    Policies:
      description: The policies for a container registry.
      type: object
      properties:
        quarantinePolicy:
          $ref: '#/components/schemas/QuarantinePolicy'
          description: The quarantine policy for a container registry.
        trustPolicy:
          $ref: '#/components/schemas/TrustPolicy'
          description: The content trust policy for a container registry.
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
          description: The retention policy for a container registry.
        exportPolicy:
          $ref: '#/components/schemas/ExportPolicy'
          description: The export policy for a container registry.
        azureADAuthenticationAsArmPolicy:
          $ref: '#/components/schemas/AzureADAuthenticationAsArmPolicy'
          description: The policy for using ARM audience token for a container registry.
        softDeletePolicy:
          $ref: '#/components/schemas/SoftDeletePolicy'
          description: The soft delete policy for a container registry.
    EncryptionProperty:
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    PackageType:
      description: The properties of a package type.
      type: object
      properties:
        name:
          description: The name of the package type.
          type: string
        endpoint:
          description: The endpoint of the package type.
          type: string
          readOnly: true
    IPRule:
      description: IP rule with specific IP or IP range in CIDR format.
      required:
        - value
      type: object
      properties:
        action:
          description: The action of IP ACL rule.
          default: Allow
          enum:
            - Allow
          type: string
          x-ms-enum:
            name: Action
            modelAsString: true
        value:
          description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
          type: string
          x-ms-client-name: IPAddressOrRange
    QuarantinePolicy:
      description: The quarantine policy for a container registry.
      type: object
      properties:
        status:
          description: The value that indicates whether the policy is enabled or not.
          default: disabled
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: PolicyStatus
            modelAsString: true
    TrustPolicy:
      description: The content trust policy for a container registry.
      type: object
      properties:
        type:
          description: The type of trust policy.
          default: Notary
          enum:
            - Notary
          type: string
          x-ms-enum:
            name: TrustPolicyType
            modelAsString: true
        status:
          description: The value that indicates whether the policy is enabled or not.
          default: disabled
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: PolicyStatus
            modelAsString: true
    RetentionPolicy:
      description: The retention policy for a container registry.
      type: object
      properties:
        days:
          format: int32
          description: The number of days to retain an untagged manifest after which it gets purged.
          default: 7
          type: integer
        lastUpdatedTime:
          format: date-time
          description: The timestamp when the policy was last updated.
          type: string
          readOnly: true
        status:
          description: The value that indicates whether the policy is enabled or not.
          default: disabled
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: PolicyStatus
            modelAsString: true
    ExportPolicy:
      description: The export policy for a container registry.
      type: object
      properties:
        status:
          description: The value that indicates whether the policy is enabled or not.
          default: enabled
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: ExportPolicyStatus
            modelAsString: true
    AzureADAuthenticationAsArmPolicy:
      description: The policy for using ARM audience token for a container registry.
      type: object
      properties:
        status:
          description: The value that indicates whether the policy is enabled or not.
          default: enabled
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: AzureADAuthenticationAsArmPolicyStatus
            modelAsString: true
    SoftDeletePolicy:
      description: The soft delete policy for a container registry
      type: object
      properties:
        retentionDays:
          format: int32
          description: The number of days after which a soft-deleted item is permanently deleted.
          default: 7
          type: integer
        lastUpdatedTime:
          format: date-time
          description: The timestamp when the policy was last updated.
          type: string
          readOnly: true
        status:
          description: The value that indicates whether the policy is enabled or not.
          default: disabled
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: PolicyStatus
            modelAsString: true
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    RegistryUpdateParameters:
      description: The parameters for updating a container registry.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: The identity of the container registry.
        tags:
          description: The tags for the container registry.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the container registry.
        properties:
          $ref: '#/components/schemas/RegistryPropertiesUpdateParameters'
          description: The properties that the container registry will be updated with.
          x-ms-client-flatten: true
      type: object
    RegistryPropertiesUpdateParameters:
      description: The parameters for updating the properties of a container registry.
      type: object
      properties:
        adminUserEnabled:
          description: The value that indicates whether the admin user is enabled.
          type: boolean
        networkRuleSet:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: The network rule set for a container registry.
        policies:
          $ref: '#/components/schemas/Policies'
          description: The policies for a container registry.
        encryption:
          $ref: '#/components/schemas/EncryptionProperty'
          description: The encryption settings of container registry.
        dataEndpointEnabled:
          description: Enable a single data endpoint per region for serving data.
          type: boolean
        publicNetworkAccess:
          description: Whether or not public network access is allowed for the container registry.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        networkRuleBypassOptions:
          description: Whether to allow trusted Azure services to access a network restricted registry.
          default: AzureServices
          enum:
            - AzureServices
            - None
          type: string
          x-ms-enum:
            name: NetworkRuleBypassOptions
            modelAsString: true
        anonymousPullEnabled:
          description: Enables registry-wide pull from unauthenticated clients.
          type: boolean
        metadataSearch:
          description: Determines whether registry artifacts are indexed for metadata search.
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: MetadataSearch
            modelAsString: true
    RegistryUsageListResult:
      description: The result of a request to get container registry quota usages.
      type: object
      properties:
        value:
          description: The list of container registry quota usages.
          type: array
          items:
            $ref: '#/components/schemas/RegistryUsage'
          x-ms-identifiers:
            - name
    RegistryUsage:
      description: The quota usage for a container registry.
      type: object
      properties:
        name:
          description: The name of the usage.
          type: string
        limit:
          format: int64
          description: The limit of the usage.
          type: integer
        currentValue:
          format: int64
          description: The current value of the usage.
          type: integer
        unit:
          description: The unit of measurement.
          enum:
            - Count
            - Bytes
          type: string
          x-ms-enum:
            name: RegistryUsageUnit
            modelAsString: true
    PrivateLinkResourceListResult:
      description: The result of a request to list private link resources for a container registry.
      type: object
      properties:
        value:
          description: The list of private link resources. Since this list may be incomplete, the nextLink field should be used to request the next list of private link resources.
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: The URI that can be used to request the next list of private link resources.
          type: string
    PrivateLinkResource:
      description: A resource that supports private link capabilities.
      properties:
        type:
          description: The resource type is private link resource.
          type: string
          readOnly: true
        id:
          description: The resource ID.
          type: string
        name:
          description: The name of the resource.
          type: string
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: A resource that supports private link capabilities.
          x-ms-client-flatten: true
      type: object
    PrivateLinkResourceProperties:
      description: The properties of a private link resource.
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
        requiredZoneNames:
          description: The private link resource Private link DNS zone name.
          type: array
          items:
            type: string
    RegistryListCredentialsResult:
      description: The response from the ListCredentials operation.
      type: object
      properties:
        username:
          description: The username for a container registry.
          type: string
        passwords:
          description: The list of passwords for a container registry.
          type: array
          items:
            $ref: '#/components/schemas/RegistryPassword'
          x-ms-identifiers: []
    RegistryPassword:
      description: The login password for the container registry.
      type: object
      properties:
        name:
          description: The password name.
          enum:
            - password
            - password2
          type: string
          x-ms-enum:
            name: PasswordName
            modelAsString: false
        value:
          description: The password value.
          type: string
    RegenerateCredentialParameters:
      description: The parameters used to regenerate the login credential.
      required:
        - name
      type: object
      properties:
        name:
          description: Specifies name of the password which should be regenerated -- password or password2.
          enum:
            - password
            - password2
          type: string
          x-ms-enum:
            name: PasswordName
            modelAsString: false
    ReplicationListResult:
      description: The result of a request to list replications for a container registry.
      type: object
      properties:
        value:
          description: The list of replications. Since this list may be incomplete, the nextLink field should be used to request the next list of replications.
          type: array
          items:
            $ref: '#/components/schemas/Replication'
        nextLink:
          description: The URI that can be used to request the next list of replications.
          type: string
    Replication:
      description: An object that represents a replication for a container registry.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/ReplicationProperties'
          description: The properties of the replication.
          x-ms-client-flatten: true
      type: object
    ReplicationProperties:
      description: The properties of a replication.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the replication at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        status:
          $ref: '#/components/schemas/Status'
          description: The status of the replication at the time the operation was called.
          readOnly: true
        regionEndpointEnabled:
          description: Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications.
          default: true
          type: boolean
        zoneRedundancy:
          description: Whether or not zone redundancy is enabled for this container registry replication
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ZoneRedundancy
            modelAsString: true
    ReplicationUpdateParameters:
      description: The parameters for updating a replication.
      properties:
        tags:
          description: The tags for the replication.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ReplicationUpdateParametersProperties'
          description: The parameters for updating a replication's properties
          x-ms-client-flatten: true
      type: object
    ReplicationUpdateParametersProperties:
      type: object
      properties:
        regionEndpointEnabled:
          description: Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications.
          type: boolean
    ScopeMapListResult:
      description: The result of a request to list scope maps for a container registry.
      type: object
      properties:
        value:
          description: The list of scope maps. Since this list may be incomplete, the nextLink field should be used to request the next list of scope maps.
          type: array
          items:
            $ref: '#/components/schemas/ScopeMap'
        nextLink:
          description: The URI that can be used to request the next list of scope maps.
          type: string
    ScopeMap:
      description: An object that represents a scope map for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/ScopeMapProperties'
          description: The properties of the scope map.
          x-ms-client-flatten: true
      type: object
    ScopeMapProperties:
      description: The properties of a scope map.
      required:
        - actions
      type: object
      properties:
        description:
          description: The user friendly description of the scope map.
          type: string
        type:
          description: The type of the scope map. E.g. BuildIn scope map.
          type: string
          readOnly: true
        creationDate:
          format: date-time
          description: The creation date of scope map.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        actions:
          description: "The list of scoped permissions for registry artifacts.\r\nE.g. repositories/repository-name/content/read,\r\nrepositories/repository-name/metadata/write"
          type: array
          items:
            type: string
    ScopeMapUpdateParameters:
      description: The properties for updating the scope map.
      properties:
        properties:
          $ref: '#/components/schemas/ScopeMapPropertiesUpdateParameters'
          description: The update parameters for scope map properties.
          x-ms-client-flatten: true
      type: object
    ScopeMapPropertiesUpdateParameters:
      description: The update parameters for scope map properties.
      type: object
      properties:
        description:
          description: The user friendly description of the scope map.
          type: string
        actions:
          description: "The list of scope permissions for registry artifacts.\r\nE.g. repositories/repository-name/pull, \r\nrepositories/repository-name/delete"
          type: array
          items:
            type: string
    TokenListResult:
      description: The result of a request to list tokens for a container registry.
      type: object
      properties:
        value:
          description: The list of tokens. Since this list may be incomplete, the nextLink field should be used to request the next list of tokens.
          type: array
          items:
            $ref: '#/components/schemas/Token'
        nextLink:
          description: The URI that can be used to request the next list of tokens.
          type: string
    Token:
      description: An object that represents a token for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/TokenProperties'
          description: The properties of the token.
          x-ms-client-flatten: true
      type: object
    TokenProperties:
      description: The properties of a token.
      type: object
      properties:
        creationDate:
          format: date-time
          description: The creation date of scope map.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        scopeMapId:
          description: The resource ID of the scope map to which the token will be associated with.
          type: string
        credentials:
          $ref: '#/components/schemas/TokenCredentialsProperties'
          description: The credentials that can be used for authenticating the token.
        status:
          description: The status of the token example enabled or disabled.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: TokenStatus
            modelAsString: true
    TokenCredentialsProperties:
      description: The properties of the credentials that can be used for authenticating the token.
      type: object
      properties:
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/TokenCertificate'
          x-ms-identifiers:
            - thumbprint
        passwords:
          type: array
          items:
            $ref: '#/components/schemas/TokenPassword'
          x-ms-identifiers: []
    ActiveDirectoryObject:
      description: The Active Directory Object that will be used for authenticating the token of a container registry.
      type: object
      properties:
        objectId:
          description: The user/group/application object ID for Active Directory Object that will be used for authenticating the token of a container registry.
          type: string
        tenantId:
          description: The tenant ID of user/group/application object Active Directory Object that will be used for authenticating the token of a container registry.
          type: string
    TokenCertificate:
      description: The properties of a certificate used for authenticating a token.
      type: object
      properties:
        name:
          enum:
            - certificate1
            - certificate2
          type: string
          x-ms-enum:
            name: TokenCertificateName
            modelAsString: true
        expiry:
          format: date-time
          description: The expiry datetime of the certificate.
          type: string
        thumbprint:
          description: The thumbprint of the certificate.
          type: string
        encodedPemCertificate:
          description: Base 64 encoded string of the public certificate1 in PEM format that will be used for authenticating the token.
          type: string
    TokenPassword:
      description: The password that will be used for authenticating the token of a container registry.
      type: object
      properties:
        creationTime:
          format: date-time
          description: The creation datetime of the password.
          type: string
        expiry:
          format: date-time
          description: The expiry datetime of the password.
          type: string
        name:
          description: The password name "password1" or "password2"
          enum:
            - password1
            - password2
          type: string
          x-ms-enum:
            name: TokenPasswordName
            modelAsString: true
        value:
          description: The password value.
          type: string
          readOnly: true
    TokenUpdateParameters:
      description: The parameters for updating a token.
      properties:
        properties:
          $ref: '#/components/schemas/TokenUpdateProperties'
          description: The properties of the token update parameters.
          x-ms-client-flatten: true
      type: object
    TokenUpdateProperties:
      description: The parameters for updating token properties.
      type: object
      properties:
        scopeMapId:
          description: The resource ID of the scope map to which the token will be associated with.
          type: string
        status:
          description: The status of the token example enabled or disabled.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: TokenStatus
            modelAsString: true
        credentials:
          $ref: '#/components/schemas/TokenCredentialsProperties'
          description: The credentials that can be used for authenticating the token.
    GenerateCredentialsParameters:
      description: The parameters used to generate credentials for a specified token or user of a container registry.
      type: object
      properties:
        tokenId:
          description: The resource ID of the token for which credentials have to be generated.
          type: string
        expiry:
          format: date-time
          description: The expiry date of the generated credentials after which the credentials become invalid.
          type: string
        name:
          description: Specifies name of the password which should be regenerated if any -- password1 or password2.
          enum:
            - password1
            - password2
          type: string
          x-ms-enum:
            name: TokenPasswordName
            modelAsString: true
    GenerateCredentialsResult:
      description: The response from the GenerateCredentials operation.
      type: object
      properties:
        username:
          description: The username for a container registry.
          type: string
        passwords:
          description: The list of passwords for a container registry.
          type: array
          items:
            $ref: '#/components/schemas/TokenPassword'
          x-ms-identifiers: []
    WebhookListResult:
      description: The result of a request to list webhooks for a container registry.
      type: object
      properties:
        value:
          description: The list of webhooks. Since this list may be incomplete, the nextLink field should be used to request the next list of webhooks.
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
        nextLink:
          description: The URI that can be used to request the next list of webhooks.
          type: string
    Webhook:
      description: An object that represents a webhook for a container registry.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/WebhookProperties'
          description: The properties of the webhook.
          x-ms-client-flatten: true
      type: object
    WebhookProperties:
      description: The properties of a webhook.
      required:
        - actions
      type: object
      properties:
        status:
          description: The status of the webhook at the time the operation was called.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: WebhookStatus
            modelAsString: true
        scope:
          description: The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
          type: string
        actions:
          description: The list of actions that trigger the webhook to post notifications.
          type: array
          items:
            enum:
              - push
              - delete
              - quarantine
              - chart_push
              - chart_delete
            type: string
            x-ms-enum:
              name: WebhookAction
              modelAsString: true
        provisioningState:
          description: The provisioning state of the webhook at the time the operation was called.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    WebhookCreateParameters:
      description: The parameters for creating a webhook.
      required:
        - location
      properties:
        tags:
          description: The tags for the webhook.
          type: object
          additionalProperties:
            type: string
        location:
          description: The location of the webhook. This cannot be changed after the resource is created.
          type: string
        properties:
          $ref: '#/components/schemas/WebhookPropertiesCreateParameters'
          description: The properties that the webhook will be created with.
          x-ms-client-flatten: true
      type: object
    WebhookPropertiesCreateParameters:
      description: The parameters for creating the properties of a webhook.
      required:
        - serviceUri
        - actions
      type: object
      properties:
        serviceUri:
          description: The service URI for the webhook to post notifications.
          type: string
          x-ms-secret: true
        customHeaders:
          description: Custom headers that will be added to the webhook notifications.
          type: object
          additionalProperties:
            type: string
          x-ms-secret: true
        status:
          description: The status of the webhook at the time the operation was called.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: WebhookStatus
            modelAsString: true
        scope:
          description: The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
          type: string
        actions:
          description: The list of actions that trigger the webhook to post notifications.
          type: array
          items:
            enum:
              - push
              - delete
              - quarantine
              - chart_push
              - chart_delete
            type: string
            x-ms-enum:
              name: WebhookAction
              modelAsString: true
    WebhookUpdateParameters:
      description: The parameters for updating a webhook.
      properties:
        tags:
          description: The tags for the webhook.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/WebhookPropertiesUpdateParameters'
          description: The properties that the webhook will be updated with.
          x-ms-client-flatten: true
      type: object
    WebhookPropertiesUpdateParameters:
      description: The parameters for updating the properties of a webhook.
      type: object
      properties:
        serviceUri:
          description: The service URI for the webhook to post notifications.
          type: string
          x-ms-secret: true
        customHeaders:
          description: Custom headers that will be added to the webhook notifications.
          type: object
          additionalProperties:
            type: string
          x-ms-secret: true
        status:
          description: The status of the webhook at the time the operation was called.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: WebhookStatus
            modelAsString: true
        scope:
          description: The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.
          type: string
        actions:
          description: The list of actions that trigger the webhook to post notifications.
          type: array
          items:
            enum:
              - push
              - delete
              - quarantine
              - chart_push
              - chart_delete
            type: string
            x-ms-enum:
              name: WebhookAction
              modelAsString: true
    EventInfo:
      description: The basic information of an event.
      type: object
      properties:
        id:
          description: The event ID.
          type: string
    EventListResult:
      description: The result of a request to list events for a webhook.
      type: object
      properties:
        value:
          description: The list of events. Since this list may be incomplete, the nextLink field should be used to request the next list of events.
          type: array
          items:
            $ref: '#/components/schemas/Event'
        nextLink:
          description: The URI that can be used to request the next list of events.
          type: string
    Event:
      description: The event for a webhook.
      properties:
        id:
          description: The event ID.
          type: string
        eventRequestMessage:
          $ref: '#/components/schemas/EventRequestMessage'
          description: The event request message sent to the service URI.
        eventResponseMessage:
          $ref: '#/components/schemas/EventResponseMessage'
          description: The event response message received from the service URI.
      type: object
    EventRequestMessage:
      description: The event request message sent to the service URI.
      type: object
      properties:
        content:
          $ref: '#/components/schemas/EventContent'
          description: The content of the event request message.
        headers:
          description: The headers of the event request message.
          type: object
          additionalProperties:
            type: string
        method:
          description: The HTTP method used to send the event request message.
          type: string
        requestUri:
          description: The URI used to send the event request message.
          type: string
        version:
          description: The HTTP message version.
          type: string
    EventResponseMessage:
      description: The event response message received from the service URI.
      type: object
      properties:
        content:
          description: The content of the event response message.
          type: string
        headers:
          description: The headers of the event response message.
          type: object
          additionalProperties:
            type: string
        reasonPhrase:
          description: The reason phrase of the event response message.
          type: string
        statusCode:
          description: The status code of the event response message.
          type: string
        version:
          description: The HTTP message version.
          type: string
    EventContent:
      description: The content of the event request message.
      type: object
      properties:
        id:
          description: The event ID.
          type: string
        timestamp:
          format: date-time
          description: The time at which the event occurred.
          type: string
        action:
          description: The action that encompasses the provided event.
          type: string
        target:
          $ref: '#/components/schemas/Target'
          description: The target of the event.
        request:
          $ref: '#/components/schemas/Request'
          description: The request that generated the event.
        actor:
          $ref: '#/components/schemas/Actor'
          description: The agent that initiated the event. For most situations, this could be from the authorization context of the request.
        source:
          $ref: '#/components/schemas/Source'
          description: The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
    Target:
      description: The target of the event.
      type: object
      properties:
        mediaType:
          description: The MIME type of the referenced object.
          type: string
        size:
          format: int64
          description: The number of bytes of the content. Same as Length field.
          type: integer
        digest:
          description: The digest of the content, as defined by the Registry V2 HTTP API Specification.
          type: string
        length:
          format: int64
          description: The number of bytes of the content. Same as Size field.
          type: integer
        repository:
          description: The repository name.
          type: string
        url:
          description: The direct URL to the content.
          type: string
        tag:
          description: The tag name.
          type: string
        name:
          description: The name of the artifact.
          type: string
        version:
          description: The version of the artifact.
          type: string
    Request:
      description: The request that generated the event.
      type: object
      properties:
        id:
          description: The ID of the request that initiated the event.
          type: string
        addr:
          description: The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request.
          type: string
        host:
          description: The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests.
          type: string
        method:
          description: The request method that generated the event.
          type: string
        useragent:
          description: The user agent header of the request.
          type: string
    Actor:
      description: The agent that initiated the event. For most situations, this could be from the authorization context of the request.
      type: object
      properties:
        name:
          description: The subject or username associated with the request context that generated the event.
          type: string
    Source:
      description: The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.
      type: object
      properties:
        addr:
          description: The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port.
          type: string
        instanceID:
          description: The running instance of an application. Changes after each restart.
          type: string
    CallbackConfig:
      description: The configuration of service URI and custom headers for the webhook.
      required:
        - serviceUri
      type: object
      properties:
        serviceUri:
          description: The service URI for the webhook to post notifications.
          type: string
        customHeaders:
          description: Custom headers that will be added to the webhook notifications.
          type: object
          additionalProperties:
            type: string
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    agent_pools:
      id: azure.container_registry.agent_pools
      name: agent_pools
      title: agent_pools
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1agentPools~1{agentPoolName}~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1agentPools~1{agentPoolName}~1?api-version=2019-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1agentPools~1{agentPoolName}~1?api-version=2019-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1agentPools~1{agentPoolName}~1?api-version=2019-06-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1agentPools~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/delete'
    agent_pools_queue_status:
      id: azure.container_registry.agent_pools_queue_status
      name: agent_pools_queue_status
      title: agent_pools_queue_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1agentPools~1{agentPoolName}~1listQueueStatus~1?api-version=2019-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/agent_pools_queue_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    registries:
      id: azure.container_registry.registries
      name: registries
      title: registries
      methods:
        schedule_run:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1scheduleRun~1?api-version=2019-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import_image:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1importImage~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry~1checkNameAvailability~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerRegistry~1registries~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_credential:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1regenerateCredential~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_credentials:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1generateCredentials~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries/methods/get'
          - $ref: '#/components/x-stackQL-resources/registries/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/registries/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/registries/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/registries/methods/delete'
    registries_build_source_upload_url:
      id: azure.container_registry.registries_build_source_upload_url
      name: registries_build_source_upload_url
      title: registries_build_source_upload_url
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1listBuildSourceUploadUrl~1?api-version=2019-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries_build_source_upload_url/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    runs:
      id: azure.container_registry.runs
      name: runs
      title: runs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1runs~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1runs~1{runId}~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1runs~1{runId}~1?api-version=2019-06-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1runs~1{runId}~1cancel~1?api-version=2019-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/runs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    runs_log_sas_url:
      id: azure.container_registry.runs_log_sas_url
      name: runs_log_sas_url
      title: runs_log_sas_url
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1runs~1{runId}~1listLogSasUrl~1?api-version=2019-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/runs_log_sas_url/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    task_runs:
      id: azure.container_registry.task_runs
      name: task_runs
      title: task_runs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1taskRuns~1{taskRunName}~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1taskRuns~1{taskRunName}~1?api-version=2019-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1taskRuns~1{taskRunName}~1?api-version=2019-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1taskRuns~1{taskRunName}~1?api-version=2019-06-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1taskRuns~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/task_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/task_runs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/task_runs/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/task_runs/methods/delete'
    task_runs_details:
      id: azure.container_registry.task_runs_details
      name: task_runs_details
      title: task_runs_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1taskRuns~1{taskRunName}~1listDetails~1?api-version=2019-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/task_runs_details/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    tasks:
      id: azure.container_registry.tasks
      name: tasks
      title: tasks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tasks~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tasks~1{taskName}~1?api-version=2019-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tasks~1{taskName}~1?api-version=2019-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tasks~1{taskName}~1?api-version=2019-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tasks~1{taskName}~1?api-version=2019-06-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/get'
          - $ref: '#/components/x-stackQL-resources/tasks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/delete'
    tasks_details:
      id: azure.container_registry.tasks_details
      name: tasks_details
      title: tasks_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tasks~1{taskName}~1listDetails~1?api-version=2019-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks_details/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    archives:
      id: azure.container_registry.archives
      name: archives
      title: archives
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/archives/methods/get'
          - $ref: '#/components/x-stackQL-resources/archives/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/archives/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/archives/methods/delete'
    archive_versions:
      id: azure.container_registry.archive_versions
      name: archive_versions
      title: archive_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1versions~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1versions~1{archiveVersionName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1versions~1{archiveVersionName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1packages~1{packageType}~1archives~1{archiveName}~1versions~1{archiveVersionName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/archive_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/archive_versions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/archive_versions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/archive_versions/methods/delete'
    cache_rules:
      id: azure.container_registry.cache_rules
      name: cache_rules
      title: cache_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1cacheRules~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1cacheRules~1{cacheRuleName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1cacheRules~1{cacheRuleName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1cacheRules~1{cacheRuleName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1cacheRules~1{cacheRuleName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cache_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/cache_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cache_rules/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cache_rules/methods/delete'
    connected_registries:
      id: azure.container_registry.connected_registries
      name: connected_registries
      title: connected_registries
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1connectedRegistries~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1connectedRegistries~1{connectedRegistryName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1connectedRegistries~1{connectedRegistryName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1connectedRegistries~1{connectedRegistryName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1connectedRegistries~1{connectedRegistryName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1connectedRegistries~1{connectedRegistryName}~1deactivate~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_registries/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_registries/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_registries/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_registries/methods/delete'
    credential_sets:
      id: azure.container_registry.credential_sets
      name: credential_sets
      title: credential_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1credentialSets~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1credentialSets~1{credentialSetName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1credentialSets~1{credentialSetName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1credentialSets~1{credentialSetName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1credentialSets~1{credentialSetName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/credential_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/credential_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/credential_sets/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/credential_sets/methods/delete'
    export_pipelines:
      id: azure.container_registry.export_pipelines
      name: export_pipelines
      title: export_pipelines
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1exportPipelines~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1exportPipelines~1{exportPipelineName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1exportPipelines~1{exportPipelineName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1exportPipelines~1{exportPipelineName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/export_pipelines/methods/get'
          - $ref: '#/components/x-stackQL-resources/export_pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/export_pipelines/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/export_pipelines/methods/delete'
    import_pipelines:
      id: azure.container_registry.import_pipelines
      name: import_pipelines
      title: import_pipelines
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1importPipelines~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1importPipelines~1{importPipelineName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1importPipelines~1{importPipelineName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1importPipelines~1{importPipelineName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_pipelines/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_pipelines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_pipelines/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_pipelines/methods/delete'
    operations:
      id: azure.container_registry.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ContainerRegistry~1operations~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    pipeline_runs:
      id: azure.container_registry.pipeline_runs
      name: pipeline_runs
      title: pipeline_runs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1pipelineRuns~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1pipelineRuns~1{pipelineRunName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1pipelineRuns~1{pipelineRunName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1pipelineRuns~1{pipelineRunName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipeline_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/pipeline_runs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipeline_runs/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipeline_runs/methods/delete'
    private_endpoint_connections:
      id: azure.container_registry.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1privateEndpointConnections~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    registries_usages:
      id: azure.container_registry.registries_usages
      name: registries_usages
      title: registries_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1listUsages~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    registries_private_link_resources:
      id: azure.container_registry.registries_private_link_resources
      name: registries_private_link_resources
      title: registries_private_link_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1privateLinkResources~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries_private_link_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    registries_private_link_resource:
      id: azure.container_registry.registries_private_link_resource
      name: registries_private_link_resource
      title: registries_private_link_resource
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1privateLinkResources~1{groupName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries_private_link_resource/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    registries_credentials:
      id: azure.container_registry.registries_credentials
      name: registries_credentials
      title: registries_credentials
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1listCredentials~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/registries_credentials/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    replications:
      id: azure.container_registry.replications
      name: replications
      title: replications
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1replications~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1replications~1{replicationName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1replications~1{replicationName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1replications~1{replicationName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1replications~1{replicationName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replications/methods/get'
          - $ref: '#/components/x-stackQL-resources/replications/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/replications/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/replications/methods/delete'
    scope_maps:
      id: azure.container_registry.scope_maps
      name: scope_maps
      title: scope_maps
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1scopeMaps~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1scopeMaps~1{scopeMapName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1scopeMaps~1{scopeMapName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1scopeMaps~1{scopeMapName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1scopeMaps~1{scopeMapName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_maps/methods/get'
          - $ref: '#/components/x-stackQL-resources/scope_maps/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scope_maps/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scope_maps/methods/delete'
    tokens:
      id: azure.container_registry.tokens
      name: tokens
      title: tokens
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tokens~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tokens~1{tokenName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tokens~1{tokenName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tokens~1{tokenName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1tokens~1{tokenName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tokens/methods/get'
          - $ref: '#/components/x-stackQL-resources/tokens/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tokens/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tokens/methods/delete'
    webhooks:
      id: azure.container_registry.webhooks
      name: webhooks
      title: webhooks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1{webhookName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1{webhookName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1{webhookName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1{webhookName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ping:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1{webhookName}~1ping~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/get'
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/webhooks/methods/delete'
    webhooks_events:
      id: azure.container_registry.webhooks_events
      name: webhooks_events
      title: webhooks_events
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1{webhookName}~1listEvents~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhooks_events/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    webhooks_callback_config:
      id: azure.container_registry.webhooks_callback_config
      name: webhooks_callback_config
      title: webhooks_callback_config
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerRegistry~1registries~1{registryName}~1webhooks~1{webhookName}~1getCallbackConfig~1?api-version=2023-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/webhooks_callback_config/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_agent_pools:
      id: azure.container_registry.vw_agent_pools
      name: vw_agent_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.count') as count,
              JSON_EXTRACT(properties, '$.tier') as tier,
              JSON_EXTRACT(properties, '$.os') as os,
              JSON_EXTRACT(properties, '$.virtualNetworkSubnetResourceId') as virtual_network_subnet_resource_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              agentPoolName
              FROM azure.container_registry.agent_pools
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.count') as count,
                JSON_EXTRACT(properties, '$.tier') as tier,
                JSON_EXTRACT(properties, '$.os') as os,
                JSON_EXTRACT(properties, '$.virtualNetworkSubnetResourceId') as virtual_network_subnet_resource_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                agentPoolName
                FROM azure.container_registry.agent_pools
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_registries:
      id: azure.container_registry.vw_registries
      name: vw_registries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              sku as sku,
              identity as identity,
              JSON_EXTRACT(properties, '$.loginServer') as login_server,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.adminUserEnabled') as admin_user_enabled,
              JSON_EXTRACT(properties, '$.networkRuleSet') as network_rule_set,
              JSON_EXTRACT(properties, '$.policies') as policies,
              JSON_EXTRACT(properties, '$.encryption') as encryption,
              JSON_EXTRACT(properties, '$.dataEndpointEnabled') as data_endpoint_enabled,
              JSON_EXTRACT(properties, '$.dataEndpointHostNames') as data_endpoint_host_names,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
              JSON_EXTRACT(properties, '$.networkRuleBypassOptions') as network_rule_bypass_options,
              JSON_EXTRACT(properties, '$.zoneRedundancy') as zone_redundancy,
              JSON_EXTRACT(properties, '$.anonymousPullEnabled') as anonymous_pull_enabled,
              JSON_EXTRACT(properties, '$.metadataSearch') as metadata_search,
              subscriptionId,
              resourceGroupName,
              registryName
              FROM azure.container_registry.registries
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                sku as sku,
                identity as identity,
                json_extract_path_text(properties, '$.loginServer') as login_server,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.adminUserEnabled') as admin_user_enabled,
                JSON_EXTRACT(properties, '$.networkRuleSet') as network_rule_set,
                JSON_EXTRACT(properties, '$.policies') as policies,
                JSON_EXTRACT(properties, '$.encryption') as encryption,
                JSON_EXTRACT(properties, '$.dataEndpointEnabled') as data_endpoint_enabled,
                JSON_EXTRACT(properties, '$.dataEndpointHostNames') as data_endpoint_host_names,
                JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
                JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
                JSON_EXTRACT(properties, '$.networkRuleBypassOptions') as network_rule_bypass_options,
                JSON_EXTRACT(properties, '$.zoneRedundancy') as zone_redundancy,
                JSON_EXTRACT(properties, '$.anonymousPullEnabled') as anonymous_pull_enabled,
                JSON_EXTRACT(properties, '$.metadataSearch') as metadata_search,
                subscriptionId,
                resourceGroupName,
                registryName
                FROM azure.container_registry.registries
                WHERE subscriptionId = 'replace-me';
    vw_runs:
      id: azure.container_registry.vw_runs
      name: vw_runs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.runId') as run_id,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as last_updated_time,
              JSON_EXTRACT(properties, '$.runType') as run_type,
              JSON_EXTRACT(properties, '$.agentPoolName') as agent_pool_name,
              JSON_EXTRACT(properties, '$.createTime') as create_time,
              JSON_EXTRACT(properties, '$.startTime') as start_time,
              JSON_EXTRACT(properties, '$.finishTime') as finish_time,
              JSON_EXTRACT(properties, '$.outputImages') as output_images,
              JSON_EXTRACT(properties, '$.task') as task,
              JSON_EXTRACT(properties, '$.imageUpdateTrigger') as image_update_trigger,
              JSON_EXTRACT(properties, '$.sourceTrigger') as source_trigger,
              JSON_EXTRACT(properties, '$.timerTrigger') as timer_trigger,
              JSON_EXTRACT(properties, '$.platform') as platform,
              JSON_EXTRACT(properties, '$.agentConfiguration') as agent_configuration,
              JSON_EXTRACT(properties, '$.sourceRegistryAuth') as source_registry_auth,
              JSON_EXTRACT(properties, '$.customRegistries') as custom_registries,
              JSON_EXTRACT(properties, '$.runErrorMessage') as run_error_message,
              JSON_EXTRACT(properties, '$.updateTriggerToken') as update_trigger_token,
              JSON_EXTRACT(properties, '$.logArtifact') as log_artifact,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.isArchiveEnabled') as is_archive_enabled,
              subscriptionId,
              resourceGroupName,
              registryName,
              runId
              FROM azure.container_registry.runs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.runId') as run_id,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.lastUpdatedTime') as last_updated_time,
                JSON_EXTRACT(properties, '$.runType') as run_type,
                JSON_EXTRACT(properties, '$.agentPoolName') as agent_pool_name,
                JSON_EXTRACT(properties, '$.createTime') as create_time,
                JSON_EXTRACT(properties, '$.startTime') as start_time,
                JSON_EXTRACT(properties, '$.finishTime') as finish_time,
                JSON_EXTRACT(properties, '$.outputImages') as output_images,
                JSON_EXTRACT(properties, '$.task') as task,
                JSON_EXTRACT(properties, '$.imageUpdateTrigger') as image_update_trigger,
                JSON_EXTRACT(properties, '$.sourceTrigger') as source_trigger,
                JSON_EXTRACT(properties, '$.timerTrigger') as timer_trigger,
                JSON_EXTRACT(properties, '$.platform') as platform,
                JSON_EXTRACT(properties, '$.agentConfiguration') as agent_configuration,
                JSON_EXTRACT(properties, '$.sourceRegistryAuth') as source_registry_auth,
                JSON_EXTRACT(properties, '$.customRegistries') as custom_registries,
                JSON_EXTRACT(properties, '$.runErrorMessage') as run_error_message,
                JSON_EXTRACT(properties, '$.updateTriggerToken') as update_trigger_token,
                JSON_EXTRACT(properties, '$.logArtifact') as log_artifact,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.isArchiveEnabled') as is_archive_enabled,
                subscriptionId,
                resourceGroupName,
                registryName,
                runId
                FROM azure.container_registry.runs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_task_runs:
      id: azure.container_registry.vw_task_runs
      name: vw_task_runs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.runRequest') as run_request,
              JSON_EXTRACT(properties, '$.runResult') as run_result,
              JSON_EXTRACT(properties, '$.forceUpdateTag') as force_update_tag,
              subscriptionId,
              resourceGroupName,
              registryName,
              taskRunName
              FROM azure.container_registry.task_runs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.runRequest') as run_request,
                JSON_EXTRACT(properties, '$.runResult') as run_result,
                JSON_EXTRACT(properties, '$.forceUpdateTag') as force_update_tag,
                subscriptionId,
                resourceGroupName,
                registryName,
                taskRunName
                FROM azure.container_registry.task_runs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_task_runs_details:
      id: azure.container_registry.vw_task_runs_details
      name: vw_task_runs_details
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.runRequest') as run_request,
              JSON_EXTRACT(properties, '$.runResult') as run_result,
              JSON_EXTRACT(properties, '$.forceUpdateTag') as force_update_tag,
              subscriptionId,
              resourceGroupName,
              registryName,
              taskRunName
              FROM azure.container_registry.task_runs_details
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND taskRunName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.runRequest') as run_request,
                JSON_EXTRACT(properties, '$.runResult') as run_result,
                JSON_EXTRACT(properties, '$.forceUpdateTag') as force_update_tag,
                subscriptionId,
                resourceGroupName,
                registryName,
                taskRunName
                FROM azure.container_registry.task_runs_details
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND taskRunName = 'replace-me';
    vw_tasks:
      id: azure.container_registry.vw_tasks
      name: vw_tasks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.platform') as platform,
              JSON_EXTRACT(properties, '$.agentConfiguration') as agent_configuration,
              JSON_EXTRACT(properties, '$.agentPoolName') as agent_pool_name,
              JSON_EXTRACT(properties, '$.timeout') as timeout,
              JSON_EXTRACT(properties, '$.step') as step,
              JSON_EXTRACT(properties, '$.trigger') as trigger,
              JSON_EXTRACT(properties, '$.credentials') as credentials,
              JSON_EXTRACT(properties, '$.logTemplate') as log_template,
              JSON_EXTRACT(properties, '$.isSystemTask') as is_system_task,
              subscriptionId,
              resourceGroupName,
              registryName,
              taskName
              FROM azure.container_registry.tasks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.platform') as platform,
                JSON_EXTRACT(properties, '$.agentConfiguration') as agent_configuration,
                JSON_EXTRACT(properties, '$.agentPoolName') as agent_pool_name,
                JSON_EXTRACT(properties, '$.timeout') as timeout,
                JSON_EXTRACT(properties, '$.step') as step,
                JSON_EXTRACT(properties, '$.trigger') as trigger,
                JSON_EXTRACT(properties, '$.credentials') as credentials,
                JSON_EXTRACT(properties, '$.logTemplate') as log_template,
                JSON_EXTRACT(properties, '$.isSystemTask') as is_system_task,
                subscriptionId,
                resourceGroupName,
                registryName,
                taskName
                FROM azure.container_registry.tasks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_tasks_details:
      id: azure.container_registry.vw_tasks_details
      name: vw_tasks_details
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.platform') as platform,
              JSON_EXTRACT(properties, '$.agentConfiguration') as agent_configuration,
              JSON_EXTRACT(properties, '$.agentPoolName') as agent_pool_name,
              JSON_EXTRACT(properties, '$.timeout') as timeout,
              JSON_EXTRACT(properties, '$.step') as step,
              JSON_EXTRACT(properties, '$.trigger') as trigger,
              JSON_EXTRACT(properties, '$.credentials') as credentials,
              JSON_EXTRACT(properties, '$.logTemplate') as log_template,
              JSON_EXTRACT(properties, '$.isSystemTask') as is_system_task,
              subscriptionId,
              resourceGroupName,
              registryName,
              taskName
              FROM azure.container_registry.tasks_details
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND taskName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.platform') as platform,
                JSON_EXTRACT(properties, '$.agentConfiguration') as agent_configuration,
                JSON_EXTRACT(properties, '$.agentPoolName') as agent_pool_name,
                JSON_EXTRACT(properties, '$.timeout') as timeout,
                JSON_EXTRACT(properties, '$.step') as step,
                JSON_EXTRACT(properties, '$.trigger') as trigger,
                JSON_EXTRACT(properties, '$.credentials') as credentials,
                JSON_EXTRACT(properties, '$.logTemplate') as log_template,
                JSON_EXTRACT(properties, '$.isSystemTask') as is_system_task,
                subscriptionId,
                resourceGroupName,
                registryName,
                taskName
                FROM azure.container_registry.tasks_details
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND taskName = 'replace-me';
    vw_archives:
      id: azure.container_registry.vw_archives
      name: vw_archives
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.packageSource') as package_source,
              JSON_EXTRACT(properties, '$.publishedVersion') as published_version,
              JSON_EXTRACT(properties, '$.repositoryEndpointPrefix') as repository_endpoint_prefix,
              JSON_EXTRACT(properties, '$.repositoryEndpoint') as repository_endpoint,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              packageType,
              archiveName
              FROM azure.container_registry.archives
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND packageType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.packageSource') as package_source,
                JSON_EXTRACT(properties, '$.publishedVersion') as published_version,
                JSON_EXTRACT(properties, '$.repositoryEndpointPrefix') as repository_endpoint_prefix,
                JSON_EXTRACT(properties, '$.repositoryEndpoint') as repository_endpoint,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                packageType,
                archiveName
                FROM azure.container_registry.archives
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND packageType = 'replace-me';
    vw_archive_versions:
      id: azure.container_registry.vw_archive_versions
      name: vw_archive_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.archiveVersionErrorMessage') as archive_version_error_message,
              subscriptionId,
              resourceGroupName,
              registryName,
              packageType,
              archiveName,
              archiveVersionName
              FROM azure.container_registry.archive_versions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND packageType = 'replace-me' AND archiveName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.archiveVersionErrorMessage') as archive_version_error_message,
                subscriptionId,
                resourceGroupName,
                registryName,
                packageType,
                archiveName,
                archiveVersionName
                FROM azure.container_registry.archive_versions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND packageType = 'replace-me' AND archiveName = 'replace-me';
    vw_cache_rules:
      id: azure.container_registry.vw_cache_rules
      name: vw_cache_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.credentialSetResourceId') as credential_set_resource_id,
              JSON_EXTRACT(properties, '$.sourceRepository') as source_repository,
              JSON_EXTRACT(properties, '$.targetRepository') as target_repository,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              cacheRuleName
              FROM azure.container_registry.cache_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.credentialSetResourceId') as credential_set_resource_id,
                JSON_EXTRACT(properties, '$.sourceRepository') as source_repository,
                JSON_EXTRACT(properties, '$.targetRepository') as target_repository,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                cacheRuleName
                FROM azure.container_registry.cache_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_connected_registries:
      id: azure.container_registry.vw_connected_registries
      name: vw_connected_registries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.mode') as mode,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.connectionState') as connection_state,
              JSON_EXTRACT(properties, '$.lastActivityTime') as last_activity_time,
              JSON_EXTRACT(properties, '$.activation') as activation,
              JSON_EXTRACT(properties, '$.parent') as parent,
              JSON_EXTRACT(properties, '$.clientTokenIds') as client_token_ids,
              JSON_EXTRACT(properties, '$.loginServer') as login_server,
              JSON_EXTRACT(properties, '$.logging') as logging,
              JSON_EXTRACT(properties, '$.statusDetails') as status_details,
              JSON_EXTRACT(properties, '$.notificationsList') as notifications_list,
              subscriptionId,
              resourceGroupName,
              registryName,
              connectedRegistryName
              FROM azure.container_registry.connected_registries
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.mode') as mode,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.connectionState') as connection_state,
                JSON_EXTRACT(properties, '$.lastActivityTime') as last_activity_time,
                JSON_EXTRACT(properties, '$.activation') as activation,
                JSON_EXTRACT(properties, '$.parent') as parent,
                JSON_EXTRACT(properties, '$.clientTokenIds') as client_token_ids,
                JSON_EXTRACT(properties, '$.loginServer') as login_server,
                JSON_EXTRACT(properties, '$.logging') as logging,
                JSON_EXTRACT(properties, '$.statusDetails') as status_details,
                JSON_EXTRACT(properties, '$.notificationsList') as notifications_list,
                subscriptionId,
                resourceGroupName,
                registryName,
                connectedRegistryName
                FROM azure.container_registry.connected_registries
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_credential_sets:
      id: azure.container_registry.vw_credential_sets
      name: vw_credential_sets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              identity as identity,
              JSON_EXTRACT(properties, '$.loginServer') as login_server,
              JSON_EXTRACT(properties, '$.authCredentials') as auth_credentials,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              credentialSetName
              FROM azure.container_registry.credential_sets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                identity as identity,
                json_extract_path_text(properties, '$.loginServer') as login_server,
                JSON_EXTRACT(properties, '$.authCredentials') as auth_credentials,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                credentialSetName
                FROM azure.container_registry.credential_sets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_export_pipelines:
      id: azure.container_registry.vw_export_pipelines
      name: vw_export_pipelines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              JSON_EXTRACT(properties, '$.target') as target,
              JSON_EXTRACT(properties, '$.options') as options,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              exportPipelineName
              FROM azure.container_registry.export_pipelines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                json_extract_path_text(properties, '$.target') as target,
                JSON_EXTRACT(properties, '$.options') as options,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                exportPipelineName
                FROM azure.container_registry.export_pipelines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_import_pipelines:
      id: azure.container_registry.vw_import_pipelines
      name: vw_import_pipelines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              JSON_EXTRACT(properties, '$.source') as source,
              JSON_EXTRACT(properties, '$.trigger') as trigger,
              JSON_EXTRACT(properties, '$.options') as options,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              importPipelineName
              FROM azure.container_registry.import_pipelines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                json_extract_path_text(properties, '$.source') as source,
                JSON_EXTRACT(properties, '$.trigger') as trigger,
                JSON_EXTRACT(properties, '$.options') as options,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                importPipelineName
                FROM azure.container_registry.import_pipelines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_pipeline_runs:
      id: azure.container_registry.vw_pipeline_runs
      name: vw_pipeline_runs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.request') as request,
              JSON_EXTRACT(properties, '$.response') as response,
              JSON_EXTRACT(properties, '$.forceUpdateTag') as force_update_tag,
              subscriptionId,
              resourceGroupName,
              registryName,
              pipelineRunName
              FROM azure.container_registry.pipeline_runs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.request') as request,
                JSON_EXTRACT(properties, '$.response') as response,
                JSON_EXTRACT(properties, '$.forceUpdateTag') as force_update_tag,
                subscriptionId,
                resourceGroupName,
                registryName,
                pipelineRunName
                FROM azure.container_registry.pipeline_runs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.container_registry.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.privateEndpoint') as private_endpoint,
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              privateEndpointConnectionName
              FROM azure.container_registry.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.privateEndpoint') as private_endpoint,
                JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                privateEndpointConnectionName
                FROM azure.container_registry.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_registries_private_link_resource:
      id: azure.container_registry.vw_registries_private_link_resource
      name: vw_registries_private_link_resource
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.groupId') as group_id,
              JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
              JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
              subscriptionId,
              resourceGroupName,
              registryName,
              groupName
              FROM azure.container_registry.registries_private_link_resource
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND groupName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.groupId') as group_id,
                JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
                JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
                subscriptionId,
                resourceGroupName,
                registryName,
                groupName
                FROM azure.container_registry.registries_private_link_resource
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me' AND groupName = 'replace-me';
    vw_replications:
      id: azure.container_registry.vw_replications
      name: vw_replications
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.regionEndpointEnabled') as region_endpoint_enabled,
              JSON_EXTRACT(properties, '$.zoneRedundancy') as zone_redundancy,
              subscriptionId,
              resourceGroupName,
              registryName,
              replicationName
              FROM azure.container_registry.replications
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.regionEndpointEnabled') as region_endpoint_enabled,
                JSON_EXTRACT(properties, '$.zoneRedundancy') as zone_redundancy,
                subscriptionId,
                resourceGroupName,
                registryName,
                replicationName
                FROM azure.container_registry.replications
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_scope_maps:
      id: azure.container_registry.vw_scope_maps
      name: vw_scope_maps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.type') as type,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.actions') as actions,
              subscriptionId,
              resourceGroupName,
              registryName,
              scopeMapName
              FROM azure.container_registry.scope_maps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.type') as type,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.actions') as actions,
                subscriptionId,
                resourceGroupName,
                registryName,
                scopeMapName
                FROM azure.container_registry.scope_maps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_tokens:
      id: azure.container_registry.vw_tokens
      name: vw_tokens
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.scopeMapId') as scope_map_id,
              JSON_EXTRACT(properties, '$.credentials') as credentials,
              JSON_EXTRACT(properties, '$.status') as status,
              subscriptionId,
              resourceGroupName,
              registryName,
              tokenName
              FROM azure.container_registry.tokens
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.scopeMapId') as scope_map_id,
                JSON_EXTRACT(properties, '$.credentials') as credentials,
                JSON_EXTRACT(properties, '$.status') as status,
                subscriptionId,
                resourceGroupName,
                registryName,
                tokenName
                FROM azure.container_registry.tokens
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
    vw_webhooks:
      id: azure.container_registry.vw_webhooks
      name: vw_webhooks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.scope') as scope,
              JSON_EXTRACT(properties, '$.actions') as actions,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              registryName,
              webhookName
              FROM azure.container_registry.webhooks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.scope') as scope,
                JSON_EXTRACT(properties, '$.actions') as actions,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                registryName,
                webhookName
                FROM azure.container_registry.webhooks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND registryName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}/?api-version=2019-06-01-preview:
    get:
      tags:
        - AgentPools
      description: Gets the detailed information for a given agent pool.
      operationId: AgentPools_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        default:
          description: Error response describing why the operation failed. If the registry/agentpool doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - AgentPools
      description: Creates an agent pool for a container registry with the specified parameters.
      operationId: AgentPools_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      requestBody:
        description: The parameters of an agent pool that needs to scheduled.
        required: true
        x-ms-requestBody-name: agentPool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPool'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - AgentPools
      description: Deletes a specified agent pool resource.
      operationId: AgentPools_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - AgentPools
      description: Updates an agent pool with the specified parameters.
      operationId: AgentPools_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      requestBody:
        description: The parameters for updating an agent pool.
        required: true
        x-ms-requestBody-name: updateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/?api-version=2019-06-01-preview:
    get:
      tags:
        - AgentPools
      description: Lists all the agent pools for a specified container registry.
      operationId: AgentPools_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}/listQueueStatus/?api-version=2019-06-01-preview:
    post:
      tags:
        - AgentPools
      description: Gets the count of queued runs for a given agent pool.
      operationId: AgentPools_GetQueueStatus
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolQueueStatus'
        default:
          description: Error response describing why the operation failed. If the registry/agentpool doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scheduleRun/?api-version=2019-06-01-preview:
    post:
      tags:
        - Registries
      description: Schedules a new run based on the request parameters and add it to the run queue.
      operationId: Registries_ScheduleRun
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      requestBody:
        description: The parameters of a run that needs to scheduled.
        required: true
        x-ms-requestBody-name: runRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed. If the registry/run doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listBuildSourceUploadUrl/?api-version=2019-06-01-preview:
    post:
      tags:
        - Registries
      description: Get the upload location for the user to be able to upload the source.
      operationId: Registries_GetBuildSourceUploadUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceUploadDefinition'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/?api-version=2019-06-01-preview:
    get:
      tags:
        - Runs
      description: Gets all the runs for a registry.
      operationId: Runs_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - name: $filter
          in: query
          description: The runs filter to apply on the operation. Arithmetic operators are not supported. The allowed string function is 'contains'. All logical operators except 'Not', 'Has', 'All' are allowed.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: $top is supported for get list of runs, which limits the maximum number of runs to return.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-odata: '#/components/schemas/RunFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/?api-version=2019-06-01-preview:
    get:
      tags:
        - Runs
      description: Gets the detailed information for a given run.
      operationId: Runs_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - name: runId
          in: path
          description: The run ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        default:
          description: Error response describing why the operation failed. If the registry/run doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Runs
      description: Patch the run properties.
      operationId: Runs_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - name: runId
          in: path
          description: The run ID.
          required: true
          schema:
            type: string
      requestBody:
        description: The run update properties.
        required: true
        x-ms-requestBody-name: runUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        default:
          description: Error response describing why the operation failed. If the registry/build doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/listLogSasUrl/?api-version=2019-06-01-preview:
    post:
      tags:
        - Runs
      description: Gets a link to download the run logs.
      operationId: Runs_GetLogSasUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - name: runId
          in: path
          description: The run ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunGetLogResult'
        default:
          description: Error response describing why the operation failed. If the registry/run doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/cancel/?api-version=2019-06-01-preview:
    post:
      tags:
        - Runs
      description: Cancel an existing run.
      operationId: Runs_Cancel
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - name: runId
          in: path
          description: The run ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed. If the registry/run doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}/?api-version=2019-06-01-preview:
    get:
      tags:
        - TaskRuns
      description: Gets the detailed information for a given task run.
      operationId: TaskRuns_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskRunNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        default:
          description: Error response describing why the operation failed. If the registry/run doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - TaskRuns
      description: Creates a task run for a container registry with the specified parameters.
      operationId: TaskRuns_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskRunNameParameter'
      requestBody:
        description: The parameters of a run that needs to scheduled.
        required: true
        x-ms-requestBody-name: taskRun
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRun'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - TaskRuns
      description: Deletes a specified task run resource.
      operationId: TaskRuns_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskRunNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - TaskRuns
      description: Updates a task run with the specified parameters.
      operationId: TaskRuns_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskRunNameParameter'
      requestBody:
        description: The parameters for updating a task run.
        required: true
        x-ms-requestBody-name: updateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRunUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}/listDetails/?api-version=2019-06-01-preview:
    post:
      tags:
        - TaskRuns
      description: Gets the detailed information for a given task run that includes all secrets.
      operationId: TaskRuns_GetDetails
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskRunNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRun'
        default:
          description: Error response describing why the operation failed. If the registry/run doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/?api-version=2019-06-01-preview:
    get:
      tags:
        - TaskRuns
      description: Lists all the task runs for a specified container registry.
      operationId: TaskRuns_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskRunListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/?api-version=2019-06-01-preview:
    get:
      tags:
        - Tasks
      description: Lists all the tasks for a specified container registry.
      operationId: Tasks_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}/?api-version=2019-06-01-preview:
    get:
      tags:
        - Tasks
      description: Get the properties of a specified task.
      operationId: Tasks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Tasks
      description: Creates a task for a container registry with the specified parameters.
      operationId: Tasks_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskNameParameter'
      requestBody:
        description: The parameters for creating a task.
        required: true
        x-ms-requestBody-name: taskCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Tasks
      description: Deletes a specified task.
      operationId: Tasks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successfully accepted; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Tasks
      description: Updates a task with the specified parameters.
      operationId: Tasks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskNameParameter'
      requestBody:
        description: The parameters for updating a task.
        required: true
        x-ms-requestBody-name: taskUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}/listDetails/?api-version=2019-06-01-preview:
    post:
      tags:
        - Tasks
      description: Returns a task with extended information that includes all secrets.
      operationId: Tasks_GetDetails
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TaskNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Error response describing why the operation failed. If the registry doesn't exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives/?api-version=2023-11-01-preview:
    get:
      tags:
        - Archives
      description: Lists all archives for the specified container registry and package type.
      operationId: Archives_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives/{archiveName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - Archives
      description: Gets the properties of the archive.
      operationId: Archives_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archive'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Archives
      description: Creates a archive for a container registry with the specified parameters.
      operationId: Archives_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
      requestBody:
        description: The parameters for creating a archive.
        required: true
        x-ms-requestBody-name: archiveCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Archive'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archive'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archive'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Archives
      description: Deletes a archive from a container registry.
      operationId: Archives_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
      responses:
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The archive does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Archives
      description: Updates a archive for a container registry with the specified parameters.
      operationId: Archives_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
      requestBody:
        description: The parameters for updating a archive.
        required: true
        x-ms-requestBody-name: archiveUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveUpdateParameters'
      responses:
        '200':
          description: The request was successful; the operation has completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Archive'
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives/{archiveName}/versions/?api-version=2023-11-01-preview:
    get:
      tags:
        - ArchiveVersions
      description: Lists all archive versions for the specified container registry, repository type and archive name.
      operationId: ArchiveVersions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveVersionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives/{archiveName}/versions/{archiveVersionName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - ArchiveVersions
      description: Gets the properties of the archive version.
      operationId: ArchiveVersions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
        - $ref: '#/components/parameters/ArchiveVersionNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveVersion'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ArchiveVersions
      description: Creates a archive for a container registry with the specified parameters.
      operationId: ArchiveVersions_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
        - $ref: '#/components/parameters/ArchiveVersionNameParameter'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveVersion'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveVersion'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ArchiveVersions
      description: Deletes a archive version from a container registry.
      operationId: ArchiveVersions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PackageTypeParameter'
        - $ref: '#/components/parameters/ArchiveNameParameter'
        - $ref: '#/components/parameters/ArchiveVersionNameParameter'
      responses:
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The archive does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/cacheRules/?api-version=2023-11-01-preview:
    get:
      tags:
        - CacheRules
      description: Lists all cache rule resources for the specified container registry.
      operationId: CacheRules_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRulesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/cacheRules/{cacheRuleName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - CacheRules
      description: Gets the properties of the specified cache rule resource.
      operationId: CacheRules_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CacheRuleNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRule'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CacheRules
      description: Creates a cache rule for a container registry with the specified parameters.
      operationId: CacheRules_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CacheRuleNameParameter'
      requestBody:
        description: The parameters for creating a cache rule.
        required: true
        x-ms-requestBody-name: cacheRuleCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheRule'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRule'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRule'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - CacheRules
      description: Deletes a cache rule resource from a container registry.
      operationId: CacheRules_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CacheRuleNameParameter'
      responses:
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The cache rule does not exist in the subscription.
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - CacheRules
      description: Updates a cache rule for a container registry with the specified parameters.
      operationId: CacheRules_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CacheRuleNameParameter'
      requestBody:
        description: The parameters for updating a cache rule.
        required: true
        x-ms-requestBody-name: cacheRuleUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheRuleUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRule'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheRule'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/?api-version=2023-11-01-preview:
    get:
      tags:
        - ConnectedRegistries
      description: Lists all connected registries for the specified container registry.
      operationId: ConnectedRegistries_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ConnectedRegistryFilterParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedRegistryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - ConnectedRegistries
      description: Gets the properties of the connected registry.
      operationId: ConnectedRegistries_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ConnectedRegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedRegistry'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ConnectedRegistries
      description: Creates a connected registry for a container registry with the specified parameters.
      operationId: ConnectedRegistries_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ConnectedRegistryNameParameter'
      requestBody:
        description: The parameters for creating a connectedRegistry.
        required: true
        x-ms-requestBody-name: connectedRegistryCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedRegistry'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedRegistry'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedRegistry'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ConnectedRegistries
      description: Deletes a connected registry from a container registry.
      operationId: ConnectedRegistries_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ConnectedRegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The webhook does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - ConnectedRegistries
      description: Updates a connected registry with the specified parameters.
      operationId: ConnectedRegistries_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ConnectedRegistryNameParameter'
      requestBody:
        description: The parameters for updating a connectedRegistry.
        required: true
        x-ms-requestBody-name: connectedRegistryUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedRegistryUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedRegistry'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedRegistry'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}/deactivate/?api-version=2023-11-01-preview:
    post:
      tags:
        - ConnectedRegistries
      description: Deactivates the connected registry instance.
      operationId: ConnectedRegistries_Deactivate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ConnectedRegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/credentialSets/?api-version=2023-11-01-preview:
    get:
      tags:
        - CredentialSets
      description: Lists all credential set resources for the specified container registry.
      operationId: CredentialSets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/credentialSets/{credentialSetName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - CredentialSets
      description: Gets the properties of the specified credential set resource.
      operationId: CredentialSets_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CredentialSetNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSet'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CredentialSets
      description: Creates a credential set for a container registry with the specified parameters.
      operationId: CredentialSets_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CredentialSetNameParameter'
      requestBody:
        description: The parameters for creating a credential set.
        required: true
        x-ms-requestBody-name: credentialSetCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialSet'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSet'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - CredentialSets
      description: Deletes a credential set from a container registry.
      operationId: CredentialSets_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CredentialSetNameParameter'
      responses:
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The credential store resource does not exist in the subscription.
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - CredentialSets
      description: Updates a credential set for a container registry with the specified parameters.
      operationId: CredentialSets_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/CredentialSetNameParameter'
      requestBody:
        description: The parameters for updating a credential set.
        required: true
        x-ms-requestBody-name: credentialSetUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialSetUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSet'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialSet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/exportPipelines/?api-version=2023-11-01-preview:
    get:
      tags:
        - ExportPipelines
      description: Lists all export pipelines for the specified container registry.
      operationId: ExportPipelines_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportPipelineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/exportPipelines/{exportPipelineName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - ExportPipelines
      description: Gets the properties of the export pipeline.
      operationId: ExportPipelines_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ExportPipelineNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportPipeline'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ExportPipelines
      description: Creates an export pipeline for a container registry with the specified parameters.
      operationId: ExportPipelines_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ExportPipelineNameParameter'
      requestBody:
        description: The parameters for creating an export pipeline.
        required: true
        x-ms-requestBody-name: exportPipelineCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportPipeline'
      responses:
        '200':
          description: The request was successful; the operation has completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportPipeline'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportPipeline'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ExportPipelines
      description: Deletes an export pipeline from a container registry.
      operationId: ExportPipelines_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ExportPipelineNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The export pipeline does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importImage/?api-version=2023-11-01-preview:
    post:
      tags:
        - Registries
      description: Copies an image to this container registry from the specified container registry.
      operationId: Registries_ImportImage
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      requestBody:
        description: The parameters specifying the image to copy and the source container registry.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportImageParameters'
      responses:
        '200':
          description: The request was successful; the operation has completed successfully.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importPipelines/?api-version=2023-11-01-preview:
    get:
      tags:
        - ImportPipelines
      description: Lists all import pipelines for the specified container registry.
      operationId: ImportPipelines_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPipelineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importPipelines/{importPipelineName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - ImportPipelines
      description: Gets the properties of the import pipeline.
      operationId: ImportPipelines_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ImportPipelineNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPipeline'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ImportPipelines
      description: Creates an import pipeline for a container registry with the specified parameters.
      operationId: ImportPipelines_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ImportPipelineNameParameter'
      requestBody:
        description: The parameters for creating an import pipeline.
        required: true
        x-ms-requestBody-name: importPipelineCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportPipeline'
      responses:
        '200':
          description: The request was successful; the operation has completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPipeline'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportPipeline'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ImportPipelines
      description: Deletes an import pipeline from a container registry.
      operationId: ImportPipelines_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ImportPipelineNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The import pipeline does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.ContainerRegistry/operations/?api-version=2023-11-01-preview:
    get:
      tags:
        - Operation
      description: Lists all of the available Azure Container Registry REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability/?api-version=2023-11-01-preview:
    post:
      tags:
        - Operation
      description: Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.
      operationId: Registries_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The object containing information for the availability request.
        required: true
        x-ms-requestBody-name: registryNameCheckRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryNameCheckRequest'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryNameStatus'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns/?api-version=2023-11-01-preview:
    get:
      tags:
        - PipelineRuns
      description: Lists all the pipeline runs for the specified container registry.
      operationId: PipelineRuns_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well - formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRunListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns/{pipelineRunName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - PipelineRuns
      description: Gets the detailed information for a given pipeline run.
      operationId: PipelineRuns_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PipelineRunNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well - formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRun'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PipelineRuns
      description: Creates a pipeline run for a container registry with the specified parameters
      operationId: PipelineRuns_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PipelineRunNameParameter'
      requestBody:
        description: The parameters for creating a pipeline run.
        required: true
        x-ms-requestBody-name: pipelineRunCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineRun'
      responses:
        '200':
          description: The request was successful; the request was well - formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRun'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRun'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - PipelineRuns
      description: Deletes a pipeline run from a container registry.
      operationId: PipelineRuns_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PipelineRunNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The pipeline run does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections/?api-version=2023-11-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      description: List all private endpoint connections in a container registry.
      operationId: PrivateEndpointConnections_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      description: Get the specified private endpoint connection associated with the container registry.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
    put:
      tags:
        - PrivateEndpointConnections
      description: Update the state of specified private endpoint connection associated with the container registry.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: The parameters for creating a private endpoint connection.
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes the specified private endpoint connection associated with the container registry.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The private endpoint connection does not exist in the subscription.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries/?api-version=2023-11-01-preview:
    get:
      tags:
        - Registries
      description: Lists all the container registries under the specified subscription.
      operationId: Registries_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/?api-version=2023-11-01-preview:
    get:
      tags:
        - Registries
      description: Lists all the container registries under the specified resource group.
      operationId: Registries_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - Registries
      description: Gets the properties of the specified container registry.
      operationId: Registries_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
    put:
      tags:
        - Registries
      description: Creates a container registry with the specified parameters.
      operationId: Registries_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      requestBody:
        description: The parameters for creating a container registry.
        required: true
        x-ms-requestBody-name: registry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Registries
      description: Deletes a container registry.
      operationId: Registries_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The container registry does not exist in the subscription.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Registries
      description: Updates a container registry with the specified parameters.
      operationId: Registries_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      requestBody:
        description: The parameters for updating a container registry.
        required: true
        x-ms-requestBody-name: registryUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistryUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listUsages/?api-version=2023-11-01-preview:
    get:
      tags:
        - Registries
      description: Gets the quota usages for the specified container registry.
      operationId: Registries_ListUsages
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the registry usages retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryUsageListResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateLinkResources/?api-version=2023-11-01-preview:
    get:
      tags:
        - Registries
      description: Lists the private link resources for a container registry.
      operationId: Registries_ListPrivateLinkResources
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the private link resources were retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateLinkResources/{groupName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - Registries
      description: Gets a private link resource by a specified group name for a container registry.
      operationId: Registries_GetPrivateLinkResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/GroupNameParameter'
      responses:
        '200':
          description: The request was successful; the private link resource was retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listCredentials/?api-version=2023-11-01-preview:
    post:
      tags:
        - Registries
      description: Lists the login credentials for the specified container registry.
      operationId: Registries_ListCredentials
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the list of credentials retrieved and returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryListCredentialsResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredential/?api-version=2023-11-01-preview:
    post:
      tags:
        - Registries
      description: Regenerates one of the login credentials for the specified container registry.
      operationId: Registries_RegenerateCredential
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      requestBody:
        description: Specifies name of the password which should be regenerated -- password or password2.
        required: true
        x-ms-requestBody-name: regenerateCredentialParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateCredentialParameters'
      responses:
        '200':
          description: The request was successful; the specified credential regenerated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryListCredentialsResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/?api-version=2023-11-01-preview:
    get:
      tags:
        - Replications
      description: Lists all the replications for the specified container registry.
      operationId: Replications_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - Replications
      description: Gets the properties of the specified replication.
      operationId: Replications_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ReplicationNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replication'
    put:
      tags:
        - Replications
      description: Creates a replication for a container registry with the specified parameters.
      operationId: Replications_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ReplicationNameParameter'
      requestBody:
        description: The parameters for creating a replication.
        required: true
        x-ms-requestBody-name: replication
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Replication'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replication'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replication'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Replications
      description: Deletes a replication from a container registry.
      operationId: Replications_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ReplicationNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The replication does not exist in the subscription.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Replications
      description: Updates a replication for a container registry with the specified parameters.
      operationId: Replications_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ReplicationNameParameter'
      requestBody:
        description: The parameters for updating a replication.
        required: true
        x-ms-requestBody-name: replicationUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replication'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replication'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/?api-version=2023-11-01-preview:
    get:
      tags:
        - ScopeMaps
      description: Lists all the scope maps for the specified container registry.
      operationId: ScopeMaps_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMapListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - ScopeMaps
      description: Gets the properties of the specified scope map.
      operationId: ScopeMaps_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ScopeMaps
      description: Creates a scope map for a container registry with the specified parameters.
      operationId: ScopeMaps_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      requestBody:
        description: The parameters for creating a scope map.
        required: true
        x-ms-requestBody-name: scopeMapCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMap'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ScopeMaps
      description: Deletes a scope map from a container registry.
      operationId: ScopeMaps_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The scopemap does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - ScopeMaps
      description: Updates a scope map with the specified parameters.
      operationId: ScopeMaps_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      requestBody:
        description: The parameters for updating a scope map.
        required: true
        x-ms-requestBody-name: scopeMapUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMapUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/?api-version=2023-11-01-preview:
    get:
      tags:
        - Tokens
      description: Lists all the tokens for the specified container registry.
      operationId: Tokens_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - Tokens
      description: Gets the properties of the specified token.
      operationId: Tokens_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Tokens
      description: Creates a token for a container registry with the specified parameters.
      operationId: Tokens_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      requestBody:
        description: The parameters for creating a token.
        required: true
        x-ms-requestBody-name: tokenCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Tokens
      description: Deletes a token from a container registry.
      operationId: Tokens_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The token does not exist in the subscription.
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Tokens
      description: Updates a token with the specified parameters.
      operationId: Tokens_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      requestBody:
        description: The parameters for updating a token.
        required: true
        x-ms-requestBody-name: tokenUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If any of the input parameters are invalid, 400 (Bad Request) is returned. If the request cannot be processed due to a conflict in the request, 409 (Conflict) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/generateCredentials/?api-version=2023-11-01-preview:
    post:
      tags:
        - Registries
      description: Generate keys for a token of a specified container registry.
      operationId: Registries_GenerateCredentials
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      requestBody:
        description: The parameters for generating credentials.
        required: true
        x-ms-requestBody-name: generateCredentialsParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCredentialsParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateCredentialsResult'
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (Not found) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/?api-version=2023-11-01-preview:
    get:
      tags:
        - Webhooks
      description: Lists all the webhooks for the specified container registry.
      operationId: Webhooks_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/?api-version=2023-11-01-preview:
    get:
      tags:
        - Webhooks
      description: Gets the properties of the specified webhook.
      operationId: Webhooks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/WebhookNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    put:
      tags:
        - Webhooks
      description: Creates a webhook for a container registry with the specified parameters.
      operationId: Webhooks_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/WebhookNameParameter'
      requestBody:
        description: The parameters for creating a webhook.
        required: true
        x-ms-requestBody-name: webhookCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Webhooks
      description: Deletes a webhook from a container registry.
      operationId: Webhooks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/WebhookNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The webhook does not exist in the subscription.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Webhooks
      description: Updates a webhook with the specified parameters.
      operationId: Webhooks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/WebhookNameParameter'
      requestBody:
        description: The parameters for updating a webhook.
        required: true
        x-ms-requestBody-name: webhookUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '201':
          description: The request was successful; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/ping/?api-version=2023-11-01-preview:
    post:
      tags:
        - Webhooks
      description: Triggers a ping event to be sent to the webhook.
      operationId: Webhooks_Ping
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/WebhookNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventInfo'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/listEvents/?api-version=2023-11-01-preview:
    post:
      tags:
        - Webhooks
      description: Lists recent events for the specified webhook.
      operationId: Webhooks_ListEvents
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/WebhookNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/getCallbackConfig/?api-version=2023-11-01-preview:
    post:
      tags:
        - Webhooks
      description: Gets the configuration of service URI and custom headers for the webhook.
      operationId: Webhooks_GetCallbackConfig
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/WebhookNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackConfig'
