openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Database Migration Service
  description: Azure Database Migration Service is a fully managed service designed to enable seamless migrations from multiple database sources to Azure Data platforms with minimal downtime (online migrations).
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription ID that identifies an Azure subscription.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: API version to use for the request.
      required: false
      x-ms-parameter-location: client
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    apiVersion:
      name: api-version
      in: query
      description: Version of the API
      required: false
      schema:
        type: string
    deleteRunningTasks:
      name: deleteRunningTasks
      in: query
      description: Delete the resource even if it contains running tasks
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    groupName:
      name: groupName
      in: path
      description: Name of the resource group
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    location:
      name: location
      in: path
      description: The Azure region of the operation
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    projectName:
      name: projectName
      in: path
      description: Name of the project
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    taskName:
      name: taskName
      in: path
      description: Name of the Task
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    taskType:
      name: taskType
      in: query
      description: Filter tasks by task type
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    serviceName:
      name: serviceName
      in: path
      description: Name of the service
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    timeoutMs:
      name: timeoutMs
      in: query
      description: The number of milliseconds the task is allowed to run, up to 20000
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    fileName:
      name: fileName
      in: path
      description: Name of the File
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupParameter:
      name: resourceGroupName
      in: path
      description: Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlMigrationServiceNameParameter:
      name: sqlMigrationServiceName
      in: path
      description: Name of the SQL Migration Service.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    MigrationServiceNameParameter:
      name: migrationServiceName
      in: path
      description: Name of the Migration Service.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z][A-Za-z0-9_-]*$
        type: string
    TargetDbNameParameter:
      name: targetDbName
      in: path
      description: The name of the target database.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TargetResourceNameParameter:
      name: targetResourceName
      in: path
      description: The name of the target resource/account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z][A-Za-z0-9_-]*$
        type: string
    MigrationNameParameter:
      name: migrationName
      in: path
      description: Name of the migration.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z][A-Za-z0-9_-]*$
        type: string
    LoginNameParameter:
      name: loginName
      in: path
      description: The Login Name for migration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    MigrateSqlServerSqlMITaskInput:
      description: Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
      required:
        - selectedDatabases
        - backupBlobShare
      properties:
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
        selectedDatabases:
          description: Databases to migrate
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlMIDatabaseInput'
        startedOn:
          type: string
          description: Date and time relative to UTC when the migration was started on
        selectedLogins:
          type: array
          description: Logins to migrate.
          items:
            type: string
        selectedAgentJobs:
          description: Agent Jobs to migrate.
          type: array
          items:
            type: string
        backupFileShare:
          $ref: '#/components/schemas/FileShare'
          description: Backup file share information for all selected databases.
        backupBlobShare:
          $ref: '#/components/schemas/BlobShare'
          description: SAS URI of Azure Storage Account Container to be used for storing backup files.
        backupMode:
          $ref: '#/components/schemas/BackupMode'
          description: Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
        aadDomainName:
          type: string
          description: Azure Active Directory domain name in the format of 'contoso.com' for federated Azure AD or 'contoso.onmicrosoft.com' for managed domain, required if and only if Windows logins are selected
        encryptedKeyForSecureFields:
          type: string
          description: encrypted key for secure fields
      type: object
    MigrateSqlServerSqlMITaskOutput:
      type: object
      description: Output for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateSqlServerSqlMITaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        status:
          $ref: '#/components/schemas/MigrationStatus'
          description: Current status of migration
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        agentJobs:
          type: string
          description: Selected agent jobs as a map from name to id
          additionalProperties:
            type: string
          readOnly: true
        logins:
          type: string
          description: Selected logins as a map from name to id
          additionalProperties:
            type: string
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        serverRoleResults:
          type: string
          description: Map of server role migration results.
          additionalProperties:
            type: object
            description: Server role migration result object.
            $ref: '#/components/schemas/StartMigrationScenarioServerRoleResult'
          readOnly: true
        orphanedUsersInfo:
          type: array
          description: List of orphaned users.
          items:
            $ref: '#/components/schemas/OrphanedUserInfo'
          readOnly: true
        databases:
          type: string
          description: Selected databases as a map from database name to database id
          additionalProperties:
            type: string
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlMITaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        sizeMB:
          type: number
          format: double
          description: Size of the database in megabytes
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        stage:
          $ref: '#/components/schemas/DatabaseMigrationStage'
          description: Current stage of migration
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlMITaskOutputAgentJobLevel:
      x-ms-discriminator-value: AgentJobLevelOutput
      properties:
        name:
          type: string
          description: Agent Job name.
          readOnly: true
        isEnabled:
          type: boolean
          description: The state of the original Agent Job.
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        exceptionsAndWarnings:
          description: Migration errors and warnings per job
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlMITaskOutputLoginLevel:
      x-ms-discriminator-value: LoginLevelOutput
      properties:
        loginName:
          type: string
          description: Login name.
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of login
          readOnly: true
        stage:
          $ref: '#/components/schemas/LoginMigrationStage'
          description: Current stage of login
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Login migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Login migration end time
          readOnly: true
        message:
          type: string
          description: Login migration progress message
          readOnly: true
        exceptionsAndWarnings:
          description: Login migration errors and warnings per login
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlMITaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    ConnectToTargetAzureDbForPostgreSqlSyncTaskInput:
      type: object
      description: Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
      properties:
        sourceConnectionInfo:
          description: Connection information for source PostgreSQL server
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
        targetConnectionInfo:
          description: Connection information for target Azure Database for PostgreSQL server
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
    ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput:
      type: object
      description: Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        targetServerVersion:
          type: string
          description: Version of the target server
          readOnly: true
        databases:
          type: array
          description: List of databases on target server
          items:
            type: string
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    AvailableServiceSku:
      type: object
      description: Describes the available service SKU.
      properties:
        resourceType:
          type: string
          description: The resource type, including the provider namespace
        sku:
          type: object
          description: SKU name, tier, etc.
          properties:
            name:
              type: string
              description: The name of the SKU
            family:
              type: string
              description: SKU family
            size:
              type: string
              description: SKU size
            tier:
              type: string
              description: The tier of the SKU, such as "Basic", "General Purpose", or "Business Critical"
        capacity:
          type: object
          description: A description of the scaling capacities of the SKU
          properties:
            minimum:
              type: integer
              description: The minimum capacity, usually 0 or 1.
            maximum:
              type: integer
              description: The maximum capacity
            default:
              type: integer
              description: The default capacity
            scaleType:
              type: string
              description: The scalability approach
              enum:
                - none
                - manual
                - automatic
              x-ms-enum:
                name: ServiceScalability
                modelAsString: true
    DataMigrationService:
      description: An Azure Database Migration Service (classic) resource
      properties:
        etag:
          type: string
          description: HTTP strong entity tag value. Ignored if submitted
        kind:
          type: string
          description: The resource kind. Only 'vm' (the default) is supported.
        properties:
          x-ms-client-flatten: true
          description: Custom service properties
          $ref: '#/components/schemas/DataMigrationServiceProperties'
        sku:
          description: Service SKU
          $ref: '#/components/schemas/ServiceSku'
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
        location:
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      type: object
    DataMigrationServiceList:
      type: object
      description: OData page of service objects
      properties:
        value:
          type: array
          description: List of services
          items:
            $ref: '#/components/schemas/DataMigrationService'
        nextLink:
          type: string
          description: URL to load the next page of services
    DataMigrationServiceProperties:
      type: object
      description: Properties of the Azure Database Migration Service (classic) instance
      properties:
        provisioningState:
          type: string
          readOnly: true
          description: The resource's provisioning state
          enum:
            - Accepted
            - Deleting
            - Deploying
            - Stopped
            - Stopping
            - Starting
            - FailedToStart
            - FailedToStop
            - Succeeded
            - Failed
          x-ms-enum:
            name: ServiceProvisioningState
            modelAsString: true
        publicKey:
          type: string
          description: The public key of the service, used to encrypt secrets sent to the service
        virtualSubnetId:
          type: string
          description: The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined
        virtualNicId:
          type: string
          description: The ID of the Microsoft.Network/networkInterfaces resource which the service have
        autoStopDelay:
          type: string
          description: The time delay before the service is auto-stopped when idle.
        deleteResourcesOnStop:
          type: boolean
          description: Whether service resources should be deleted when stopped. (Turned on by default)
    DataMigrationServiceStatusResponse:
      type: object
      description: Service health status
      properties:
        agentVersion:
          type: string
          description: The DMS instance agent version
        agentConfiguration:
          type: object
          description: Agent Configuration
        status:
          type: string
          description: The machine-readable status, such as 'Initializing', 'Offline', 'Online', 'Deploying', 'Deleting', 'Stopped', 'Stopping', 'Starting', 'FailedToStart', 'FailedToStop' or 'Failed'
        vmSize:
          type: string
          description: The services virtual machine size, such as 'Standard_D2_v2'
        supportedTaskTypes:
          type: array
          description: The list of supported task types
          items:
            type: string
            description: Migration task type
    ServiceOperation:
      type: object
      description: Description of an action supported by the Azure Database Migration Service (classic)
      properties:
        name:
          type: string
          description: The fully qualified action name, e.g. Microsoft.DataMigration/services/read
        display:
          type: object
          description: Localized display text
          properties:
            provider:
              type: string
              description: The localized resource provider name
            resource:
              type: string
              description: The localized resource type name
            operation:
              type: string
              description: The localized operation name
            description:
              type: string
              description: The localized operation description
    ServiceOperationList:
      type: object
      description: OData page of action (operation) objects
      properties:
        value:
          type: array
          description: List of actions
          items:
            $ref: '#/components/schemas/ServiceOperation'
        nextLink:
          type: string
          description: URL to load the next page of actions
    ServiceSku:
      type: object
      description: An Azure SKU instance
      properties:
        name:
          type: string
          description: The unique name of the SKU, such as 'P3'
        tier:
          type: string
          description: The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'
        family:
          type: string
          description: The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
        size:
          type: string
          description: The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
        capacity:
          type: integer
          description: The capacity of the SKU, if it supports scaling
    ServiceSkuList:
      type: object
      description: OData page of available SKUs
      properties:
        value:
          type: array
          description: List of service SKUs
          items:
            $ref: '#/components/schemas/AvailableServiceSku'
        nextLink:
          type: string
          description: URL to load the next page of service SKUs
    CheckOCIDriverTaskProperties:
      x-ms-discriminator-value: Service.Check.OCI
      description: Properties for the task that checks for OCI drivers.
      properties:
        input:
          $ref: '#/components/schemas/CheckOCIDriverTaskInput'
        output:
          type: array
          description: Task output. This is ignored if submitted.
          items:
            $ref: '#/components/schemas/CheckOCIDriverTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    UploadOCIDriverTaskProperties:
      x-ms-discriminator-value: Service.Upload.OCI
      description: Properties for the task that uploads an OCI driver.
      properties:
        input:
          $ref: '#/components/schemas/UploadOCIDriverTaskInput'
        output:
          type: array
          description: Task output. This is ignored if submitted.
          items:
            $ref: '#/components/schemas/UploadOCIDriverTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    InstallOCIDriverTaskProperties:
      x-ms-discriminator-value: Service.Install.OCI
      description: Properties for the task that installs an OCI driver.
      properties:
        input:
          $ref: '#/components/schemas/InstallOCIDriverTaskInput'
        output:
          type: array
          description: Task output. This is ignored if submitted.
          items:
            $ref: '#/components/schemas/InstallOCIDriverTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    GetTdeCertificatesSqlTaskInput:
      type: object
      description: Input for the task that gets TDE certificates in Base64 encoded format.
      properties:
        connectionInfo:
          description: Connection information for SQL Server
          $ref: '#/components/schemas/SqlConnectionInfo'
        backupFileShare:
          $ref: '#/components/schemas/FileShare'
          description: Backup file share information for file share to be used for temporarily storing files.
        selectedCertificates:
          description: List containing certificate names and corresponding password to use for encrypting the exported certificate.
          type: array
          items:
            $ref: '#/components/schemas/SelectedCertificateInput'
      required:
        - connectionInfo
        - backupFileShare
        - selectedCertificates
    GetTdeCertificatesSqlTaskOutput:
      type: object
      description: Output of the task that gets TDE certificates in Base64 encoded format.
      properties:
        base64EncodedCertificates:
          type: string
          description: Mapping from certificate name to base 64 encoded format.
          additionalProperties:
            type: array
            items:
              type: string
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    SelectedCertificateInput:
      type: object
      description: Info for certificate to be exported for TDE enabled databases.
      properties:
        certificateName:
          type: string
          description: Name of certificate to be exported.
        password:
          type: string
          description: Password to use for encrypting the exported certificate.
      required:
        - certificateName
        - password
    ConnectToTargetSqlMISyncTaskInput:
      type: object
      description: Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
      properties:
        targetConnectionInfo:
          $ref: '#/components/schemas/MiSqlConnectionInfo'
          description: Connection information for Azure SQL Database Managed Instance
        azureApp:
          description: Azure Active Directory Application the DMS (classic) instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
          $ref: '#/components/schemas/AzureActiveDirectoryApp'
      required:
        - targetConnectionInfo
        - azureApp
    ConnectToTargetSqlMISyncTaskOutput:
      type: object
      description: Output for the task that validates connection to Azure SQL Database Managed Instance.
      properties:
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    MigrateSqlServerSqlMISyncTaskInput:
      description: Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
      properties:
        numberOfParallelDatabaseMigrations:
          type: number
          description: Number of database migrations to start in parallel
        selectedDatabases:
          description: Databases to migrate
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlMIDatabaseInput'
        backupFileShare:
          $ref: '#/components/schemas/FileShare'
          description: Backup file share information for all selected databases.
        storageResourceId:
          type: string
          description: Fully qualified resourceId of storage
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Connection information for source SQL Server
        targetConnectionInfo:
          $ref: '#/components/schemas/MiSqlConnectionInfo'
          description: Connection information for Azure SQL Database Managed Instance
        azureApp:
          $ref: '#/components/schemas/AzureActiveDirectoryApp'
          description: Azure Active Directory Application the DMS (classic) instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
      type: object
    MigrateSqlServerSqlMISyncTaskOutput:
      type: object
      description: Output for task that migrates SQL Server databases to Azure SQL Database Managed Instance using Log Replay Service.
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateSqlServerSqlMISyncTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        databaseCount:
          type: integer
          description: Count of databases
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        sourceServerName:
          type: string
          description: Source server name
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        targetServerName:
          type: string
          description: Target server name
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        databaseErrorCount:
          type: integer
          description: Number of database level errors
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlMISyncTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        sourceDatabaseName:
          type: string
          description: Name of the database
          readOnly: true
        migrationState:
          $ref: '#/components/schemas/DatabaseMigrationState'
          description: Current state of database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Database migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Database migration end time
          readOnly: true
        fullBackupSetInfo:
          type: object
          description: Details of full backup set
          $ref: '#/components/schemas/BackupSetInfo'
          readOnly: true
        lastRestoredBackupSetInfo:
          type: object
          description: Last applied backup set information
          $ref: '#/components/schemas/BackupSetInfo'
          readOnly: true
        activeBackupSets:
          description: Backup sets that are currently active (Either being uploaded or getting restored)
          type: array
          items:
            $ref: '#/components/schemas/BackupSetInfo'
          readOnly: true
        containerName:
          description: Name of container created in the Azure Storage account where backups are copied to
          type: string
          readOnly: true
        errorPrefix:
          description: prefix string to use for querying errors for this database
          type: string
          readOnly: true
        isFullBackupRestored:
          description: Whether full backup has been applied to the target database or not
          type: boolean
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlMISyncTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    ConnectToSourceOracleSyncTaskInput:
      type: object
      description: Input for the task that validates Oracle database connection
      properties:
        sourceConnectionInfo:
          $ref: '#/components/schemas/OracleConnectionInfo'
          description: Information for connecting to Oracle source
      required:
        - sourceConnectionInfo
    ConnectToSourceOracleSyncTaskOutput:
      type: object
      description: Output for the task that validates Oracle database connection
      properties:
        sourceServerVersion:
          type: string
          description: Version of the source server
          readOnly: true
        databases:
          type: array
          description: List of schemas on source server
          items:
            type: string
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput:
      type: object
      description: Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements for Oracle source.
      properties:
        targetConnectionInfo:
          description: Connection information for target Azure Database for PostgreSQL server
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
      required:
        - targetConnectionInfo
    ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput:
      type: object
      description: Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements for Oracle source.
      properties:
        targetServerVersion:
          type: string
          description: Version of the target server
          readOnly: true
        databases:
          type: array
          description: List of databases on target server
          items:
            type: string
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        databaseSchemaMap:
          type: array
          description: Mapping of schemas per database
          items:
            type: object
            properties:
              database:
                type: string
              schemas:
                type: array
                items:
                  type: string
    GetUserTablesOracleTaskInput:
      type: object
      description: Input for the task that gets the list of tables contained within a provided list of Oracle schemas.
      properties:
        connectionInfo:
          $ref: '#/components/schemas/OracleConnectionInfo'
          description: Information for connecting to Oracle source
        selectedSchemas:
          type: array
          description: List of Oracle schemas for which to collect tables
          items:
            type: string
      required:
        - connectionInfo
        - selectedSchemas
    GetUserTablesOracleTaskOutput:
      type: object
      description: Output for the task that gets the list of tables contained within a provided list of Oracle schemas.
      properties:
        schemaName:
          type: string
          description: The schema this result is for
          readOnly: true
        tables:
          type: array
          description: List of valid tables found for this schema
          items:
            $ref: '#/components/schemas/DatabaseTable'
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    GetUserTablesPostgreSqlTaskInput:
      type: object
      description: Input for the task that gets the list of tables for a provided list of PostgreSQL databases.
      properties:
        connectionInfo:
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
          description: Information for connecting to PostgreSQL source
        selectedDatabases:
          type: array
          description: List of PostgreSQL databases for which to collect tables
          items:
            type: string
      required:
        - connectionInfo
        - selectedDatabases
    GetUserTablesPostgreSqlTaskOutput:
      type: object
      description: Output for the task that gets the list of tables for a provided list of PostgreSQL databases.
      properties:
        databaseName:
          type: string
          description: The database this result is for
          readOnly: true
        tables:
          type: array
          description: List of valid tables found for this database
          items:
            $ref: '#/components/schemas/DatabaseTable'
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    ValidateOracleAzureDbPostgreSqlSyncTaskOutput:
      type: object
      description: Output for task that validates migration input for Oracle to Azure Database for PostgreSQL for online migrations
      properties:
        validationErrors:
          description: Errors associated with a selected database object
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    MigrateOracleAzureDbPostgreSqlSyncTaskInput:
      type: object
      description: Input for the task that migrates Oracle databases to Azure Database for PostgreSQL for online migrations
      properties:
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateOracleAzureDbPostgreSqlSyncDatabaseInput'
        targetConnectionInfo:
          description: Connection information for target Azure Database for PostgreSQL
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
        sourceConnectionInfo:
          description: Connection information for source Oracle
          $ref: '#/components/schemas/OracleConnectionInfo'
      required:
        - targetConnectionInfo
        - sourceConnectionInfo
        - selectedDatabases
    MigrateOracleAzureDbPostgreSqlSyncTaskOutput:
      type: object
      description: Output for the task that migrates Oracle databases to Azure Database for PostgreSQL for online migrations
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateOracleAzureDbPostgreSqlSyncTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServer:
          type: string
          description: Source server name
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServer:
          type: string
          description: Target server name
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        migrationState:
          $ref: '#/components/schemas/SyncDatabaseMigrationReportingState'
          description: Migration state that this database is in
          readOnly: true
        incomingChanges:
          type: integer
          format: int64
          description: Number of incoming changes
          readOnly: true
        appliedChanges:
          type: integer
          format: int64
          description: Number of applied changes
          readOnly: true
        cdcInsertCounter:
          type: integer
          format: int64
          description: Number of cdc inserts
          readOnly: true
        cdcDeleteCounter:
          type: integer
          format: int64
          description: Number of cdc deletes
          readOnly: true
        cdcUpdateCounter:
          type: integer
          format: int64
          description: Number of cdc updates
          readOnly: true
        fullLoadCompletedTables:
          type: integer
          format: int64
          description: Number of tables completed in full load
          readOnly: true
        fullLoadLoadingTables:
          type: integer
          format: int64
          description: Number of tables loading in full load
          readOnly: true
        fullLoadQueuedTables:
          type: integer
          format: int64
          description: Number of tables queued in full load
          readOnly: true
        fullLoadErroredTables:
          type: integer
          format: int64
          description: Number of tables errored in full load
          readOnly: true
        initializationCompleted:
          type: boolean
          description: Indicates if initial load (full load) has been completed
          readOnly: true
        latency:
          type: integer
          format: int64
          description: CDC apply latency
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateOracleAzureDbPostgreSqlSyncTaskOutputTableLevel:
      x-ms-discriminator-value: TableLevelOutput
      properties:
        tableName:
          type: string
          description: Name of the table
          readOnly: true
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        cdcInsertCounter:
          type: integer
          format: int64
          description: Number of applied inserts
          readOnly: true
        cdcUpdateCounter:
          type: integer
          format: int64
          description: Number of applied updates
          readOnly: true
        cdcDeleteCounter:
          type: integer
          format: int64
          description: Number of applied deletes
          readOnly: true
        fullLoadEstFinishTime:
          type: string
          format: date-time
          description: Estimate to finish full load
          readOnly: true
        fullLoadStartedOn:
          type: string
          format: date-time
          description: Full load start time
          readOnly: true
        fullLoadEndedOn:
          type: string
          format: date-time
          description: Full load end time
          readOnly: true
        fullLoadTotalRows:
          type: integer
          format: int64
          description: Number of rows applied in full load
          readOnly: true
        state:
          $ref: '#/components/schemas/SyncTableMigrationState'
          description: Current state of the table migration
          readOnly: true
        totalChangesApplied:
          type: integer
          format: int64
          description: Total number of applied changes
          readOnly: true
        dataErrorsCounter:
          type: integer
          format: int64
          description: Number of data errors occurred
          readOnly: true
        lastModifiedTime:
          type: string
          format: date-time
          description: Last modified time on target
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateOracleAzureDbPostgreSqlSyncTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateOracleAzureDbPostgreSqlSyncTaskOutputDatabaseError:
      x-ms-discriminator-value: DatabaseLevelErrorOutput
      properties:
        errorMessage:
          type: string
          description: Error message
        events:
          type: array
          items:
            $ref: '#/components/schemas/SyncMigrationDatabaseErrorEvent'
          description: List of error events.
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateOracleAzureDbPostgreSqlSyncDatabaseInput:
      type: object
      description: Database specific information for Oracle to Azure Database for PostgreSQL migration task inputs
      properties:
        caseManipulation:
          type: string
          description: 'How to handle object name casing: either Preserve or ToLower'
        name:
          type: string
          description: Name of the migration pipeline
        schemaName:
          type: string
          description: Name of the source schema
        tableMap:
          type: object
          description: Mapping of source to target tables
          additionalProperties:
            type: string
        targetDatabaseName:
          type: string
          description: 'Name of target database. Note: Target database will be truncated before starting migration.'
        migrationSetting:
          type: object
          description: Migration settings which tune the migration behavior
          additionalProperties:
            type: string
        sourceSetting:
          type: object
          description: Source settings to tune source endpoint migration behavior
          additionalProperties:
            type: string
        targetSetting:
          type: object
          description: Target settings to tune target endpoint migration behavior
          additionalProperties:
            type: string
    MigrateSqlServerSqlDbTaskInput:
      description: Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
      required:
        - selectedDatabases
      properties:
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlDbDatabaseInput'
        validationOptions:
          description: |-
            Options for enabling various post migration validations. Available options, 
             1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data. 
             2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
          $ref: '#/components/schemas/MigrationValidationOptions'
        startedOn:
          type: string
          description: Date and time relative to UTC when the migration was started on
        encryptedKeyForSecureFields:
          type: string
          description: encrypted key for secure fields
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
      type: object
    MigrateSqlServerSqlDbTaskOutput:
      type: object
      description: Output for the task that migrates on-prem SQL Server databases to Azure SQL Database
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateSqlServerSqlDbTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        durationInSeconds:
          type: integer
          format: int64
          description: Duration of task execution in seconds.
          readOnly: true
        status:
          $ref: '#/components/schemas/MigrationStatus'
          description: Current status of migration
          readOnly: true
        statusMessage:
          type: string
          description: Migration status message
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        databases:
          type: string
          description: Selected databases as a map from database name to database id
          additionalProperties:
            type: string
          readOnly: true
        databaseSummary:
          type: string
          description: Summary of database results in the migration
          additionalProperties:
            $ref: '#/components/schemas/DatabaseSummaryResult'
          readOnly: true
        migrationValidationResult:
          type: object
          description: Migration Validation Results
          $ref: '#/components/schemas/MigrationValidationResult'
        migrationReportResult:
          type: object
          description: Migration Report Result, provides unique url for downloading your migration report.
          $ref: '#/components/schemas/MigrationReportResult'
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlDbTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: Name of the item
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        stage:
          $ref: '#/components/schemas/DatabaseMigrationStage'
          description: Migration stage that this database is in
          readOnly: true
        statusMessage:
          type: string
          description: Status message
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        numberOfObjects:
          type: integer
          format: int64
          description: Number of objects
          readOnly: true
        numberOfObjectsCompleted:
          type: integer
          format: int64
          description: Number of successfully completed objects
          readOnly: true
        errorCount:
          type: integer
          format: int64
          description: Number of database/object errors.
          readOnly: true
        errorPrefix:
          type: string
          description: Wildcard string prefix to use for querying all errors of the item
          readOnly: true
        resultPrefix:
          type: string
          description: Wildcard string prefix to use for querying all sub-tem results of the item
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        objectSummary:
          type: string
          description: Summary of object results in the migration
          additionalProperties:
            $ref: '#/components/schemas/DataItemMigrationSummaryResult'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlDbTaskOutputTableLevel:
      x-ms-discriminator-value: TableLevelOutput
      properties:
        objectName:
          type: string
          description: Name of the item
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        statusMessage:
          type: string
          description: Status message
          readOnly: true
        itemsCount:
          type: integer
          format: int64
          description: Number of items
          readOnly: true
        itemsCompletedCount:
          type: integer
          format: int64
          description: Number of successfully completed items
          readOnly: true
        errorPrefix:
          type: string
          description: Wildcard string prefix to use for querying all errors of the item
          readOnly: true
        resultPrefix:
          type: string
          description: Wildcard string prefix to use for querying all sub-tem results of the item
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlDbTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    DatabaseSummaryResult:
      description: Summary of database results in the migration
      properties:
        sizeMB:
          type: number
          format: double
          description: Size of the database in megabytes
          readOnly: true
        name:
          type: string
          description: Name of the item
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        statusMessage:
          type: string
          description: Status message
          readOnly: true
        itemsCount:
          type: integer
          format: int64
          description: Number of items
          readOnly: true
        itemsCompletedCount:
          type: integer
          format: int64
          description: Number of successfully completed items
          readOnly: true
        errorPrefix:
          type: string
          description: Wildcard string prefix to use for querying all errors of the item
          readOnly: true
        resultPrefix:
          type: string
          description: Wildcard string prefix to use for querying all sub-tem results of the item
          readOnly: true
      type: object
    MigrateSqlServerSqlDbTaskOutputValidationResult:
      x-ms-discriminator-value: MigrationValidationOutput
      properties:
        id:
          type: string
          description: Migration validation result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
        migrationId:
          type: string
          description: Migration Identifier
          readOnly: true
        summaryResults:
          type: object
          description: Validation summary results for each database
          additionalProperties:
            $ref: '#/components/schemas/MigrationValidationDatabaseSummaryResult'
        status:
          $ref: '#/components/schemas/ValidationStatus'
          description: Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
          readOnly: true
      type: object
    MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResult:
      x-ms-discriminator-value: MigrationDatabaseLevelValidationOutput
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
        migrationId:
          type: string
          description: Migration Identifier
          readOnly: true
        sourceDatabaseName:
          type: string
          description: Name of the source database
          readOnly: true
        targetDatabaseName:
          type: string
          description: Name of the target database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Validation start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Validation end time
          readOnly: true
        dataIntegrityValidationResult:
          description: Provides data integrity validation result between the source and target tables that are migrated.
          $ref: '#/components/schemas/DataIntegrityValidationResult'
          readOnly: true
        schemaValidationResult:
          description: Provides schema comparison result between source and target database
          $ref: '#/components/schemas/SchemaComparisonValidationResult'
          readOnly: true
        queryAnalysisValidationResult:
          description: Results of some of the query execution result between source and target database
          $ref: '#/components/schemas/QueryAnalysisValidationResult'
          readOnly: true
        status:
          $ref: '#/components/schemas/ValidationStatus'
          description: Current status of validation at the database level
          readOnly: true
      type: object
    CommandProperties:
      type: object
      description: Base class for all types of DMS (classic) command properties. If command is not supported by current client, this object is returned.
      properties:
        commandType:
          enum:
            - Migrate.Sync.Complete.Database
            - Migrate.SqlServer.AzureDbSqlMi.Complete
            - cancel
            - finish
            - restart
          x-ms-enum:
            name: CommandType
            modelAsString: true
          description: Command type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the command. This is ignored if submitted.
          enum:
            - Unknown
            - Accepted
            - Running
            - Succeeded
            - Failed
          x-ms-enum:
            name: CommandState
            modelAsString: true
          readOnly: true
      required:
        - commandType
      discriminator:
        propertyName: commandType
    MigrateSyncCompleteCommandProperties:
      x-ms-discriminator-value: Migrate.Sync.Complete.Database
      description: Properties for the command that completes sync migration for a database.
      properties:
        input:
          description: Command input
          $ref: '#/components/schemas/MigrateSyncCompleteCommandInput'
        output:
          description: Command output. This is ignored if submitted.
          $ref: '#/components/schemas/MigrateSyncCompleteCommandOutput'
          readOnly: true
        commandId:
          type: string
          description: Command id
        commandType:
          enum:
            - Migrate.Sync.Complete.Database
            - Migrate.SqlServer.AzureDbSqlMi.Complete
            - cancel
            - finish
            - restart
          x-ms-enum:
            name: CommandType
            modelAsString: true
          description: Command type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the command. This is ignored if submitted.
          enum:
            - Unknown
            - Accepted
            - Running
            - Succeeded
            - Failed
          x-ms-enum:
            name: CommandState
            modelAsString: true
          readOnly: true
      type: object
    MigrateSyncCompleteCommandInput:
      type: object
      description: Input for command that completes sync migration for a database.
      properties:
        databaseName:
          description: Name of database
          type: string
        commitTimeStamp:
          type: string
          format: date-time
          description: Time stamp to complete
      required:
        - databaseName
    MigrateSyncCompleteCommandOutput:
      type: object
      description: Output for command that completes sync migration for a database.
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        errors:
          description: List of errors that happened during the command execution
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    MigrateMISyncCompleteCommandProperties:
      x-ms-discriminator-value: Migrate.SqlServer.AzureDbSqlMi.Complete
      description: Properties for the command that completes online migration for an Azure SQL Database Managed Instance.
      properties:
        input:
          description: Command input
          $ref: '#/components/schemas/MigrateMISyncCompleteCommandInput'
        output:
          description: Command output. This is ignored if submitted.
          $ref: '#/components/schemas/MigrateMISyncCompleteCommandOutput'
          readOnly: true
        commandType:
          enum:
            - Migrate.Sync.Complete.Database
            - Migrate.SqlServer.AzureDbSqlMi.Complete
            - cancel
            - finish
            - restart
          x-ms-enum:
            name: CommandType
            modelAsString: true
          description: Command type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the command. This is ignored if submitted.
          enum:
            - Unknown
            - Accepted
            - Running
            - Succeeded
            - Failed
          x-ms-enum:
            name: CommandState
            modelAsString: true
          readOnly: true
      type: object
    MigrateMISyncCompleteCommandInput:
      type: object
      description: Input for command that completes online migration for an Azure SQL Database Managed Instance.
      properties:
        sourceDatabaseName:
          description: Name of managed instance database
          type: string
      required:
        - sourceDatabaseName
    MigrateMISyncCompleteCommandOutput:
      type: object
      description: Output for command that completes online migration for an Azure SQL Database Managed Instance.
      properties:
        errors:
          description: List of errors that happened during the command execution
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
    ConnectToSourcePostgreSqlSyncTaskInput:
      type: object
      description: Input for the task that validates connection to PostgreSQL and source server requirements
      properties:
        sourceConnectionInfo:
          description: Connection information for source PostgreSQL server
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
      required:
        - sourceConnectionInfo
    ConnectToSourcePostgreSqlSyncTaskOutput:
      type: object
      description: Output for the task that validates connection to PostgreSQL and source server requirements
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        sourceServerVersion:
          type: string
          description: Version of the source server
          readOnly: true
        databases:
          type: array
          description: List of databases on source server
          items:
            type: string
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    Resource:
      description: ARM resource.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      x-ms-azure-resource: true
      type: object
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    TrackedResource:
      type: object
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
      x-ms-azure-resource: true
    ProxyResource:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        location:
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: Result of the request to list SQL operations.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OperationsDefinition'
          readOnly: true
        nextLink:
          type: string
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    GetUserTablesMySqlTaskInput:
      type: object
      description: Input for the task that collects user tables for the given list of databases
      properties:
        connectionInfo:
          description: Connection information for SQL Server
          $ref: '#/components/schemas/MySqlConnectionInfo'
        selectedDatabases:
          type: array
          description: List of database names to collect tables for
          items:
            type: string
      required:
        - connectionInfo
        - selectedDatabases
    GetUserTablesMySqlTaskOutput:
      type: object
      description: Output of the task that collects user tables for the given list of databases
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        databasesToTables:
          type: string
          description: Mapping from database name to list of tables
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DatabaseTable'
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    ResourceSku:
      properties:
        resourceType:
          readOnly: true
          type: string
          description: The type of resource the SKU applies to.
        name:
          readOnly: true
          type: string
          description: The name of SKU.
        tier:
          readOnly: true
          type: string
          description: Specifies the tier of DMS (classic) in a scale set.
        size:
          readOnly: true
          type: string
          description: The Size of the SKU.
        family:
          readOnly: true
          type: string
          description: The Family of this particular SKU.
        kind:
          readOnly: true
          type: string
          description: The Kind of resources that are supported in this SKU.
        capacity:
          $ref: '#/components/schemas/ResourceSkuCapacity'
          readOnly: true
          description: Not used.
        locations:
          type: array
          readOnly: true
          items:
            type: string
          description: The set of locations that the SKU is available.
        apiVersions:
          type: array
          readOnly: true
          items:
            type: string
          description: The api versions that support this SKU.
        costs:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuCosts'
          description: Metadata for retrieving price info.
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuCapabilities'
          description: A name value pair to describe the capability.
        restrictions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuRestrictions'
          description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
      description: Describes an available DMS (classic) SKU.
      type: object
    ResourceSkuCapacity:
      properties:
        minimum:
          type: integer
          readOnly: true
          format: int64
          description: The minimum capacity.
        maximum:
          type: integer
          readOnly: true
          format: int64
          description: The maximum capacity.
        default:
          type: integer
          readOnly: true
          format: int64
          description: The default capacity.
        scaleType:
          type: string
          readOnly: true
          description: The scale type applicable to the SKU.
          enum:
            - Automatic
            - Manual
            - None
          x-ms-enum:
            name: ResourceSkuCapacityScaleType
            modelAsString: true
      description: Describes scaling information of a SKU.
      type: object
    ResourceSkuCosts:
      properties:
        meterID:
          type: string
          readOnly: true
          description: Used for querying price from commerce.
        quantity:
          type: integer
          readOnly: true
          format: int64
          description: The multiplier is needed to extend the base metered cost.
        extendedUnit:
          type: string
          readOnly: true
          description: An invariant to show the extended unit.
      description: Describes metadata for retrieving price info.
      type: object
    ResourceSkuCapabilities:
      properties:
        name:
          type: string
          readOnly: true
          description: An invariant to describe the feature.
        value:
          type: string
          readOnly: true
          description: An invariant if the feature is measured by quantity.
      description: Describes The SKU capabilities object.
      type: object
    ResourceSkuRestrictions:
      properties:
        type:
          type: string
          readOnly: true
          description: The type of restrictions.
          enum:
            - location
          x-ms-enum:
            name: ResourceSkuRestrictionsType
            modelAsString: true
        values:
          type: array
          readOnly: true
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
        reasonCode:
          type: string
          readOnly: true
          description: The reason code for restriction.
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: ResourceSkuRestrictionsReasonCode
            modelAsString: true
      description: Describes scaling information of a SKU.
      type: object
    ResourceSkusResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSku'
          description: The list of SKUs available for the subscription.
        nextLink:
          type: string
          description: The uri to fetch the next page of DMS (classic) SKUs. Call ListNext() with this to fetch the next page of DMS (classic) SKUs.
      required:
        - value
      description: The DMS (classic) List SKUs operation response.
      type: object
    MigrateSqlServerSqlDbSyncTaskInput:
      description: Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
      required:
        - selectedDatabases
      properties:
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlDbSyncDatabaseInput'
        validationOptions:
          description: Validation options
          $ref: '#/components/schemas/MigrationValidationOptions'
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
      type: object
    MigrateSqlServerSqlDbSyncTaskOutput:
      type: object
      description: Output for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateSqlServerSqlDbSyncTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServer:
          type: string
          description: Source server name
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServer:
          type: string
          description: Target server name
          readOnly: true
        databaseCount:
          type: integer
          description: Count of databases
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        migrationState:
          $ref: '#/components/schemas/SyncDatabaseMigrationReportingState'
          description: Migration state that this database is in
          readOnly: true
        incomingChanges:
          type: integer
          format: int64
          description: Number of incoming changes
          readOnly: true
        appliedChanges:
          type: integer
          format: int64
          description: Number of applied changes
          readOnly: true
        cdcInsertCounter:
          type: integer
          format: int64
          description: Number of cdc inserts
          readOnly: true
        cdcDeleteCounter:
          type: integer
          format: int64
          description: Number of cdc deletes
          readOnly: true
        cdcUpdateCounter:
          type: integer
          format: int64
          description: Number of cdc updates
          readOnly: true
        fullLoadCompletedTables:
          type: integer
          format: int64
          description: Number of tables completed in full load
          readOnly: true
        fullLoadLoadingTables:
          type: integer
          format: int64
          description: Number of tables loading in full load
          readOnly: true
        fullLoadQueuedTables:
          type: integer
          format: int64
          description: Number of tables queued in full load
          readOnly: true
        fullLoadErroredTables:
          type: integer
          format: int64
          description: Number of tables errored in full load
          readOnly: true
        initializationCompleted:
          type: boolean
          description: Indicates if initial load (full load) has been completed
          readOnly: true
        latency:
          type: integer
          format: int64
          description: CDC apply latency
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlDbSyncTaskOutputTableLevel:
      x-ms-discriminator-value: TableLevelOutput
      properties:
        tableName:
          type: string
          description: Name of the table
          readOnly: true
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        cdcInsertCounter:
          type: integer
          format: int64
          description: Number of applied inserts
          readOnly: true
        cdcUpdateCounter:
          type: integer
          format: int64
          description: Number of applied updates
          readOnly: true
        cdcDeleteCounter:
          type: integer
          format: int64
          description: Number of applied deletes
          readOnly: true
        fullLoadEstFinishTime:
          type: string
          format: date-time
          description: Estimate to finish full load
          readOnly: true
        fullLoadStartedOn:
          type: string
          format: date-time
          description: Full load start time
          readOnly: true
        fullLoadEndedOn:
          type: string
          format: date-time
          description: Full load end time
          readOnly: true
        fullLoadTotalRows:
          type: integer
          format: int64
          description: Number of rows applied in full load
          readOnly: true
        state:
          $ref: '#/components/schemas/SyncTableMigrationState'
          description: Current state of the table migration
          readOnly: true
        totalChangesApplied:
          type: integer
          format: int64
          description: Total number of applied changes
          readOnly: true
        dataErrorsCounter:
          type: integer
          format: int64
          description: Number of data errors occurred
          readOnly: true
        lastModifiedTime:
          type: string
          format: date-time
          description: Last modified time on target
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlDbSyncTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSqlServerSqlDbSyncTaskOutputDatabaseError:
      x-ms-discriminator-value: DatabaseLevelErrorOutput
      properties:
        errorMessage:
          type: string
          description: Error message
        events:
          type: array
          items:
            $ref: '#/components/schemas/SyncMigrationDatabaseErrorEvent'
          description: List of error events.
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    Database:
      type: object
      description: Information about a single database
      properties:
        id:
          type: string
          description: Unique identifier for the database
        name:
          type: string
          description: Name of the database
        compatibilityLevel:
          $ref: '#/components/schemas/DatabaseCompatLevel'
          description: SQL Server compatibility level of database
        collation:
          type: string
          description: Collation name of the database
        serverName:
          type: string
          description: Name of the server
        fqdn:
          type: string
          description: Fully qualified name
        installId:
          type: string
          description: Install id of the database
        serverVersion:
          type: string
          description: Version of the server
        serverEdition:
          type: string
          description: Edition of the server
        serverLevel:
          type: string
          description: Product level of the server (RTM, SP, CTP).
        serverDefaultDataPath:
          type: string
          description: Default path of the data files
        serverDefaultLogPath:
          type: string
          description: Default path of the log files
        serverDefaultBackupPath:
          type: string
          description: Default path of the backup folder
        serverCoreCount:
          type: integer
          description: Number of cores on the server
        serverVisibleOnlineCoreCount:
          type: integer
          description: Number of cores on the server that have VISIBLE ONLINE status
        databaseState:
          $ref: '#/components/schemas/DatabaseState'
          description: State of the database
        serverId:
          type: string
          description: The unique Server Id
    DatabaseCompatLevel:
      type: string
      description: An enumeration of SQL Server database compatibility levels
      enum:
        - CompatLevel80
        - CompatLevel90
        - CompatLevel100
        - CompatLevel110
        - CompatLevel120
        - CompatLevel130
        - CompatLevel140
      x-ms-enum:
        name: DatabaseCompatLevel
        modelAsString: true
    DatabaseState:
      type: string
      description: An enumeration of SQL Server Database states
      enum:
        - Online
        - Restoring
        - Recovering
        - RecoveryPending
        - Suspect
        - Emergency
        - Offline
        - Copying
        - OfflineSecondary
      x-ms-enum:
        name: DatabaseState
        modelAsString: true
    DatabaseObjectType:
      type: string
      description: An enumeration of type of objects
      enum:
        - StoredProcedures
        - Table
        - User
        - View
        - Function
      x-ms-enum:
        name: ObjectType
        modelAsString: true
    ScenarioSource:
      type: string
      description: An enumeration of source type
      enum:
        - Access
        - DB2
        - MySQL
        - Oracle
        - SQL
        - Sybase
        - PostgreSQL
        - MongoDB
        - SQLRDS
        - MySQLRDS
        - PostgreSQLRDS
      x-ms-enum:
        name: ScenarioSource
        modelAsString: true
    ScenarioTarget:
      type: string
      description: An enumeration of target type
      enum:
        - SQLServer
        - SQLDB
        - SQLDW
        - SQLMI
        - AzureDBForMySql
        - AzureDBForPostgresSQL
        - MongoDB
      x-ms-enum:
        name: ScenarioTarget
        modelAsString: true
    ReplicateMigrationState:
      type: string
      description: Wrapper for replicate reported migration states.
      enum:
        - UNDEFINED
        - VALIDATING
        - PENDING
        - COMPLETE
        - ACTION_REQUIRED
        - FAILED
      x-ms-enum:
        name: ReplicateMigrationState
        modelAsString: true
    DatabaseObjectName:
      type: object
      description: A representation of the name of an object in a database
      properties:
        databaseName:
          type: string
          description: The unescaped name of the database containing the object
          readOnly: true
        objectName:
          type: string
          description: The unescaped name of the object
          readOnly: true
        schemaName:
          type: string
          description: The unescaped name of the schema containing the object
          readOnly: true
        objectType:
          $ref: '#/components/schemas/DatabaseObjectType'
          description: Type of the object in the database
    DataItemMigrationSummaryResult:
      type: object
      description: Basic summary of a data item migration
      properties:
        name:
          type: string
          description: Name of the item
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        statusMessage:
          type: string
          description: Status message
          readOnly: true
        itemsCount:
          type: integer
          format: int64
          description: Number of items
          readOnly: true
        itemsCompletedCount:
          type: integer
          format: int64
          description: Number of successfully completed items
          readOnly: true
        errorPrefix:
          type: string
          description: Wildcard string prefix to use for querying all errors of the item
          readOnly: true
        resultPrefix:
          type: string
          description: Wildcard string prefix to use for querying all sub-tem results of the item
          readOnly: true
    DataMigrationProjectMetadata:
      type: object
      description: Common metadata for migration projects
      properties:
        sourceServerName:
          type: string
          description: Source server name
          readOnly: true
        sourceServerPort:
          type: string
          description: Source server port number
          readOnly: true
        sourceUsername:
          type: string
          description: Source username
          readOnly: true
        targetServerName:
          type: string
          description: Target server name
          readOnly: true
        targetUsername:
          type: string
          description: Target username
          readOnly: true
        targetDbName:
          type: string
          description: Target database name
          readOnly: true
        targetUsingWinAuth:
          type: boolean
          description: Whether target connection is Windows authentication
          readOnly: true
        selectedMigrationTables:
          type: array
          description: List of tables selected for migration
          readOnly: true
          items:
            $ref: '#/components/schemas/MigrationTableMetadata'
    DatabaseTable:
      type: object
      description: Table properties
      properties:
        hasRows:
          type: boolean
          description: Indicates whether table is empty or not
          readOnly: true
        name:
          type: string
          description: Schema-qualified name of the table
          readOnly: true
    GetProjectDetailsNonSqlTaskInput:
      type: object
      description: Input for the task that reads configuration from project artifacts
      properties:
        projectName:
          type: string
          description: Name of the migration project
        projectLocation:
          type: string
          description: A URL that points to the location to access project artifacts
      required:
        - projectName
        - projectLocation
    SqlServerSqlMISyncTaskInput:
      type: object
      description: Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
      properties:
        selectedDatabases:
          description: Databases to migrate
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlMIDatabaseInput'
        backupFileShare:
          $ref: '#/components/schemas/FileShare'
          description: Backup file share information for all selected databases.
        storageResourceId:
          type: string
          description: Fully qualified resourceId of storage
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Connection information for source SQL Server
        targetConnectionInfo:
          $ref: '#/components/schemas/MiSqlConnectionInfo'
          description: Connection information for Azure SQL Database Managed Instance
        azureApp:
          $ref: '#/components/schemas/AzureActiveDirectoryApp'
          description: Azure Active Directory Application the DMS (classic) instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
      required:
        - selectedDatabases
        - azureApp
        - sourceConnectionInfo
        - targetConnectionInfo
        - storageResourceId
    MigrationState:
      type: string
      description: Current state of migration
      enum:
        - None
        - InProgress
        - Failed
        - Warning
        - Completed
        - Skipped
        - Stopped
      x-ms-enum:
        name: MigrationState
        modelAsString: true
    MigrationStatus:
      type: string
      description: Current status of migration
      enum:
        - Default
        - Connecting
        - SourceAndTargetSelected
        - SelectLogins
        - Configured
        - Running
        - Error
        - Stopped
        - Completed
        - CompletedWithWarnings
      x-ms-enum:
        name: MigrationStatus
        modelAsString: true
    SqlMigrationTaskInput:
      type: object
      description: Base class for migration task input
      properties:
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
    MigrateSqlServerSqlDbDatabaseInput:
      type: object
      description: Database specific information for SQL to Azure SQL DB migration task inputs
      properties:
        name:
          type: string
          description: Name of the database
        targetDatabaseName:
          type: string
          description: 'Name of target database. Note: Target database will be truncated before starting migration.'
        makeSourceDbReadOnly:
          type: boolean
          description: Whether to set database read only before migration
        tableMap:
          type: object
          description: Mapping of source to target tables
          additionalProperties:
            type: string
        schemaSetting:
          type: object
          description: Settings selected for DB schema migration.
        id:
          type: string
          description: id of the database
    MigrateSqlServerSqlDbSyncDatabaseInput:
      type: object
      description: Database specific information for SQL to Azure SQL DB sync migration task inputs
      properties:
        id:
          type: string
          description: Unique identifier for database
        name:
          type: string
          description: Name of database
        targetDatabaseName:
          type: string
          description: Target database name
        schemaName:
          type: string
          description: Schema name to be migrated
        tableMap:
          type: object
          description: Mapping of source to target tables
          additionalProperties:
            type: string
        migrationSetting:
          type: object
          description: Migration settings which tune the migration behavior
          additionalProperties:
            type: string
        sourceSetting:
          type: object
          description: Source settings to tune source endpoint migration behavior
          additionalProperties:
            type: string
        targetSetting:
          type: object
          description: Target settings to tune target endpoint migration behavior
          additionalProperties:
            type: string
    MigrationTableMetadata:
      type: object
      description: Metadata for tables selected in migration project
      properties:
        sourceTableName:
          type: string
          description: Source table name
          readOnly: true
        targetTableName:
          type: string
          description: Target table name
          readOnly: true
    NonSqlMigrationTaskInput:
      type: object
      description: Base class for non sql migration task input
      properties:
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
        targetDatabaseName:
          type: string
          description: Target database name
        projectName:
          type: string
          description: Name of the migration project
        projectLocation:
          type: string
          description: A URL that points to the drop location to access project artifacts
        selectedTables:
          type: array
          description: Metadata of the tables selected for migration
          items:
            $ref: '#/components/schemas/NonSqlDataMigrationTable'
      required:
        - targetConnectionInfo
        - targetDatabaseName
        - projectName
        - projectLocation
        - selectedTables
    NonSqlDataMigrationTable:
      type: object
      description: Defines metadata for table to be migrated
      properties:
        sourceName:
          type: string
          description: Source table name
    NonSqlMigrationTaskOutput:
      type: object
      description: Base class for non sql migration task output
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        status:
          $ref: '#/components/schemas/MigrationStatus'
          description: Current state of migration
          readOnly: true
        dataMigrationTableResults:
          type: string
          description: Results of the migration. The key contains the table name and the value the table result object
          additionalProperties:
            $ref: '#/components/schemas/NonSqlDataMigrationTableResult'
          readOnly: true
        progressMessage:
          type: string
          description: Message about the progress of the migration
          readOnly: true
        sourceServerName:
          type: string
          description: Name of source server
          readOnly: true
        targetServerName:
          type: string
          description: Name of target server
          readOnly: true
    NonSqlDataMigrationTableResult:
      type: object
      description: Object used to report the data migration results of a table
      properties:
        resultCode:
          type: string
          description: Result code of the data migration
          enum:
            - Initial
            - Completed
            - ObjectNotExistsInSource
            - ObjectNotExistsInTarget
            - TargetObjectIsInaccessible
            - FatalError
          x-ms-enum:
            name: DataMigrationResultCode
            modelAsString: true
          readOnly: true
        sourceName:
          type: string
          description: Name of the source table
          readOnly: true
        targetName:
          type: string
          description: Name of the target table
          readOnly: true
        sourceRowCount:
          type: integer
          format: int64
          description: Number of rows in the source table
          readOnly: true
        targetRowCount:
          type: integer
          format: int64
          description: Number of rows in the target table
          readOnly: true
        elapsedTimeInMiliseconds:
          type: number
          format: double
          description: Time taken to migrate the data
          readOnly: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/DataMigrationError'
          description: List of errors, if any, during migration
          readOnly: true
    DataMigrationError:
      type: object
      description: Migration Task errors
      properties:
        message:
          type: string
          description: Error description
          readOnly: true
        type:
          $ref: '#/components/schemas/ErrorType'
    ErrorType:
      type: string
      description: Error type
      enum:
        - Default
        - Warning
        - Error
      x-ms-enum:
        name: ErrorType
        modelAsString: true
    MigrateSqlServerSqlMIDatabaseInput:
      type: object
      description: Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
      properties:
        name:
          type: string
          description: Name of the database
        restoreDatabaseName:
          type: string
          description: Name of the database at destination
        backupFileShare:
          $ref: '#/components/schemas/FileShare'
          description: Backup file share information for backing up this database.
        backupFilePaths:
          type: array
          description: The list of backup files to be used in case of existing backups.
          items:
            type: string
        id:
          type: string
          description: id of the database
      required:
        - name
        - restoreDatabaseName
    MigrateSqlServerSqlServerDatabaseInput:
      type: object
      description: Database specific information for SQL to SQL migration task inputs
      properties:
        name:
          type: string
          description: Name of the database
        restoreDatabaseName:
          type: string
          description: Name of the database at destination
        backupAndRestoreFolder:
          type: string
          description: The backup and restore folder
        databaseFiles:
          type: array
          description: The list of database files
          items:
            $ref: '#/components/schemas/DatabaseFileInput'
    DatabaseFileInput:
      type: object
      description: Database file specific information for input
      properties:
        id:
          type: string
          description: Unique identifier for database file
        logicalName:
          type: string
          description: Logical name of the file
        physicalFullName:
          type: string
          description: Operating-system full path of the file
        restoreFullName:
          type: string
          description: Suggested full path of the file for restoring
        fileType:
          $ref: '#/components/schemas/DatabaseFileType'
          description: Database file type
    DatabaseFileInfo:
      type: object
      description: Database file specific information
      properties:
        databaseName:
          type: string
          description: Name of the database
        id:
          type: string
          description: Unique identifier for database file
        logicalName:
          type: string
          description: Logical name of the file
        physicalFullName:
          type: string
          description: Operating-system full path of the file
        restoreFullName:
          type: string
          description: Suggested full path of the file for restoring
        fileType:
          $ref: '#/components/schemas/DatabaseFileType'
          description: Database file type
        sizeMB:
          type: number
          format: double
          description: Size of the file in megabytes
    DatabaseFileType:
      type: string
      description: An enumeration of SQL Server database file types
      enum:
        - Rows
        - Log
        - Filestream
        - NotSupported
        - Fulltext
      x-ms-enum:
        name: DatabaseFileType
        modelAsString: true
    ConnectToSourceNonSqlTaskOutput:
      type: object
      description: Output for connect to MySQL type source
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Server brand version
          readOnly: true
        serverProperties:
          $ref: '#/components/schemas/ServerProperties'
          description: Server properties
          readOnly: true
        databases:
          type: array
          description: List of databases on the server
          items:
            type: string
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    ServerProperties:
      type: object
      description: Server properties for MySQL type source
      properties:
        serverPlatform:
          type: string
          description: Name of the server platform
          readOnly: true
        serverName:
          type: string
          description: Name of the server
          readOnly: true
        serverVersion:
          type: string
          description: Version of the database server
          readOnly: true
        serverEdition:
          type: string
          description: Edition of the database server
          readOnly: true
        serverOperatingSystemVersion:
          type: string
          description: Version of the operating system
          readOnly: true
        serverDatabaseCount:
          type: integer
          description: Number of databases in the server
          readOnly: true
    DatabaseMigrationStage:
      type: string
      description: Current stage of migration
      enum:
        - None
        - Initialize
        - Backup
        - FileCopy
        - Restore
        - Completed
      x-ms-enum:
        name: DatabaseMigrationStage
        modelAsString: true
    SchemaMigrationStage:
      type: string
      description: Current stage of schema migration
      enum:
        - NotStarted
        - ValidatingInputs
        - CollectingObjects
        - DownloadingScript
        - GeneratingScript
        - UploadingScript
        - DeployingSchema
        - Completed
        - CompletedWithWarnings
        - Failed
      x-ms-enum:
        name: SchemaMigrationStage
        modelAsString: true
    BlobShare:
      type: object
      description: Blob container storage information.
      properties:
        sasUri:
          type: string
          description: SAS URI of Azure Storage Account Container.
    FileShare:
      type: object
      description: File share information with Path, Username, and Password.
      properties:
        userName:
          type: string
          description: User name credential to connect to the share location
        password:
          type: string
          description: Password credential used to connect to the share location.
        path:
          type: string
          description: The folder path for this share.
      required:
        - path
    StartMigrationScenarioServerRoleResult:
      type: object
      description: Server role migration result
      properties:
        name:
          type: string
          description: Name of server role.
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    LoginType:
      type: string
      description: Enum mapping of SMO LoginType.
      enum:
        - WindowsUser
        - WindowsGroup
        - SqlLogin
        - Certificate
        - AsymmetricKey
        - ExternalUser
        - ExternalGroup
      x-ms-enum:
        name: LoginType
        modelAsString: true
    LoginMigrationStage:
      type: string
      description: Enum of the different stage of login migration.
      enum:
        - None
        - Initialize
        - LoginMigration
        - EstablishUserMapping
        - AssignRoleMembership
        - AssignRoleOwnership
        - EstablishServerPermissions
        - EstablishObjectPermissions
        - Completed
      x-ms-enum:
        name: LoginMigrationStage
        modelAsString: true
    MigrationEligibilityInfo:
      type: object
      description: Information about migration eligibility of a server object
      properties:
        isEligibleForMigration:
          type: boolean
          description: Whether object is eligible for migration or not.
          readOnly: true
        validationMessages:
          description: Information about eligibility failure for the server object.
          type: array
          items:
            type: string
          readOnly: true
    SyncDatabaseMigrationReportingState:
      type: string
      description: Enum of the different state of database level online migration.
      enum:
        - UNDEFINED
        - CONFIGURING
        - INITIALIAZING
        - STARTING
        - RUNNING
        - READY_TO_COMPLETE
        - COMPLETING
        - COMPLETE
        - CANCELLING
        - CANCELLED
        - FAILED
        - VALIDATING
        - VALIDATION_COMPLETE
        - VALIDATION_FAILED
        - RESTORE_IN_PROGRESS
        - RESTORE_COMPLETED
        - BACKUP_IN_PROGRESS
        - BACKUP_COMPLETED
      x-ms-enum:
        name: SyncDatabaseMigrationReportingState
        modelAsString: true
    SyncTableMigrationState:
      type: string
      description: Enum of the different state of table level online migration.
      enum:
        - BEFORE_LOAD
        - FULL_LOAD
        - COMPLETED
        - CANCELED
        - ERROR
        - FAILED
      x-ms-enum:
        name: SyncTableMigrationState
        modelAsString: true
    SyncMigrationDatabaseErrorEvent:
      type: object
      description: Database migration errors for online migration
      properties:
        timestampString:
          type: string
          description: String value of timestamp.
          readOnly: true
        eventTypeString:
          description: Event type.
          type: string
          readOnly: true
        eventText:
          description: Event text.
          type: string
          readOnly: true
    BackupMode:
      type: string
      description: An enumeration of backup modes
      enum:
        - CreateBackup
        - ExistingBackup
      x-ms-enum:
        name: BackupMode
        modelAsString: true
    DatabaseBackupInfo:
      type: object
      description: Information about backup files when existing backup mode is used.
      properties:
        databaseName:
          type: string
          description: Database name.
          readOnly: true
        backupType:
          description: Backup Type.
          $ref: '#/components/schemas/BackupType'
          readOnly: true
        backupFiles:
          type: array
          description: The list of backup files for the current database.
          items:
            type: string
          readOnly: true
        position:
          description: Position of current database backup in the file.
          type: integer
          readOnly: true
        isDamaged:
          type: boolean
          description: Database was damaged when backed up, but the backup operation was requested to continue despite errors.
          readOnly: true
        isCompressed:
          type: boolean
          description: Whether the backup set is compressed
          readOnly: true
        familyCount:
          type: integer
          description: Number of files in the backup set.
          readOnly: true
        backupFinishDate:
          type: string
          format: date-time
          description: Date and time when the backup operation finished.
          readOnly: true
    BackupType:
      type: string
      description: Enum of the different backup types.
      enum:
        - Database
        - TransactionLog
        - File
        - DifferentialDatabase
        - DifferentialFile
        - Partial
        - DifferentialPartial
      x-ms-enum:
        name: BackupType
        modelAsString: true
    DatabaseMigrationState:
      type: string
      description: Database level migration state.
      enum:
        - UNDEFINED
        - INITIAL
        - FULL_BACKUP_UPLOAD_START
        - LOG_SHIPPING_START
        - UPLOAD_LOG_FILES_START
        - CUTOVER_START
        - POST_CUTOVER_COMPLETE
        - COMPLETED
        - CANCELLED
        - FAILED
      x-ms-enum:
        name: DatabaseMigrationState
        modelAsString: true
    SsisMigrationInfo:
      type: object
      description: SSIS migration info with SSIS store type, overwrite policy.
      properties:
        ssisStoreType:
          $ref: '#/components/schemas/SsisStoreType'
          description: The SSIS store type of source, only SSIS catalog is supported now in DMS (classic)
        projectOverwriteOption:
          $ref: '#/components/schemas/SsisMigrationOverwriteOption'
          description: The overwrite option for the SSIS project migration
        environmentOverwriteOption:
          $ref: '#/components/schemas/SsisMigrationOverwriteOption'
          description: The overwrite option for the SSIS environment migration
    SsisStoreType:
      type: string
      description: An enumeration of supported source SSIS store type in DMS (classic)
      enum:
        - SsisCatalog
      x-ms-enum:
        name: SsisStoreType
        modelAsString: true
    SsisMigrationOverwriteOption:
      type: string
      description: The overwrite option for SSIS object migration, only ignore and overwrite are supported in DMS (classic) now and future may add Reuse option for container object
      enum:
        - Ignore
        - Overwrite
      x-ms-enum:
        name: SsisMigrationOverwriteOption
        modelAsString: true
    SsisMigrationStage:
      type: string
      description: Current stage of SSIS migration
      enum:
        - None
        - Initialize
        - InProgress
        - Completed
      x-ms-enum:
        name: SsisMigrationStage
        modelAsString: true
    ProjectTaskProperties:
      type: object
      description: Base class for all types of DMS (classic) task properties. If task is not supported by current client, this object is returned.
      properties:
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      required:
        - taskType
      discriminator:
        propertyName: taskType
    ProjectTask:
      description: A task resource
      properties:
        etag:
          type: string
          description: HTTP strong entity tag value. This is ignored if submitted.
        properties:
          description: Custom task properties
          $ref: '#/components/schemas/ProjectTaskProperties'
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    TaskList:
      type: object
      description: OData page of tasks
      properties:
        value:
          type: array
          description: List of tasks
          items:
            $ref: '#/components/schemas/ProjectTask'
        nextLink:
          type: string
          description: URL to load the next page of tasks
    ConnectToMongoDbTaskProperties:
      x-ms-discriminator-value: Connect.MongoDb
      description: Properties for the task that validates the connection to and provides information about a MongoDB server
      properties:
        input:
          $ref: '#/components/schemas/MongoDbConnectionInfo'
        output:
          type: array
          description: An array containing a single MongoDbClusterInfo object
          items:
            $ref: '#/components/schemas/MongoDbClusterInfo'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToSourceSqlServerTaskProperties:
      x-ms-discriminator-value: ConnectToSource.SqlServer
      description: Properties for the task that validates connection to SQL Server and also validates source server requirements
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToSourceSqlServerTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToSourceSqlServerTaskOutput'
          readOnly: true
        taskId:
          type: string
          description: 'Task id '
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToSourceSqlServerSyncTaskProperties:
      x-ms-discriminator-value: ConnectToSource.SqlServer.Sync
      description: Properties for the task that validates connection to SQL Server and source server requirements for online migration
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToSourceSqlServerTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToSourceSqlServerTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToSourcePostgreSqlSyncTaskProperties:
      x-ms-discriminator-value: ConnectToSource.PostgreSql.Sync
      description: Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToSourcePostgreSqlSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToSourcePostgreSqlSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToSourceMySqlTaskProperties:
      x-ms-discriminator-value: ConnectToSource.MySql
      description: Properties for the task that validates MySQL database connection
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToSourceMySqlTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToSourceNonSqlTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToSourceOracleSyncTaskProperties:
      x-ms-discriminator-value: ConnectToSource.Oracle.Sync
      description: Properties for the task that validates Oracle database connection
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToSourceOracleSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToSourceOracleSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToTargetSqlDbTaskProperties:
      x-ms-discriminator-value: ConnectToTarget.SqlDb
      description: Properties for the task that validates connection to SQL DB and target server requirements
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToTargetSqlDbTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToTargetSqlDbTaskOutput'
          readOnly: true
        createdOn:
          type: string
          description: DateTime in UTC when the task was created
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToTargetSqlSqlDbSyncTaskProperties:
      x-ms-discriminator-value: ConnectToTarget.SqlDb.Sync
      description: Properties for the task that validates connection to SQL DB and target server requirements for online migration
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToTargetSqlSqlDbSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToTargetSqlDbTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties:
      x-ms-discriminator-value: ConnectToTarget.AzureDbForPostgreSql.Sync
      description: Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToTargetAzureDbForPostgreSqlSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToTargetAzureDbForPostgreSqlSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskProperties:
      x-ms-discriminator-value: ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
      description: Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration for Oracle source.
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToTargetOracleAzureDbForPostgreSqlSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    GetUserTablesSqlTaskProperties:
      x-ms-discriminator-value: GetUserTables.Sql
      description: Properties for the task that collects user tables for the given list of databases
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/GetUserTablesSqlTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/GetUserTablesSqlTaskOutput'
          readOnly: true
        taskId:
          type: string
          description: 'Task id '
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    GetUserTablesSqlSyncTaskProperties:
      x-ms-discriminator-value: GetUserTables.AzureSqlDb.Sync
      description: Properties for the task that collects user tables for the given list of databases
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/GetUserTablesSqlSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/GetUserTablesSqlSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    GetUserTablesOracleTaskProperties:
      x-ms-discriminator-value: GetUserTablesOracle
      description: Properties for the task that collects user tables for the given list of Oracle schemas
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/GetUserTablesOracleTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/GetUserTablesOracleTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    GetUserTablesPostgreSqlTaskProperties:
      x-ms-discriminator-value: GetUserTablesPostgreSql
      description: Properties for the task that collects user tables for the given list of databases
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/GetUserTablesPostgreSqlTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/GetUserTablesPostgreSqlTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    GetUserTablesMySqlTaskProperties:
      x-ms-discriminator-value: GetUserTablesMySql
      description: Properties for the task that collects user tables for the given list of databases
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/GetUserTablesMySqlTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/GetUserTablesMySqlTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToTargetSqlMITaskProperties:
      x-ms-discriminator-value: ConnectToTarget.AzureSqlDbMI
      description: Properties for the task that validates connection to Azure SQL Database Managed Instance
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToTargetSqlMITaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToTargetSqlMITaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToTargetSqlMISyncTaskProperties:
      x-ms-discriminator-value: ConnectToTarget.AzureSqlDbMI.Sync.LRS
      description: Properties for the task that validates connection to Azure SQL Database Managed Instance
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToTargetSqlMISyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToTargetSqlMISyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ConnectToTargetAzureDbForMySqlTaskProperties:
      x-ms-discriminator-value: ConnectToTarget.AzureDbForMySql
      description: Properties for the task that validates connection to Azure Database for MySQL and target server requirements
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ConnectToTargetAzureDbForMySqlTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ConnectToTargetAzureDbForMySqlTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateMongoDbTaskProperties:
      x-ms-discriminator-value: Migrate.MongoDb
      description: Properties for the task that migrates data between MongoDB data sources
      properties:
        input:
          $ref: '#/components/schemas/MongoDbMigrationSettings'
        output:
          type: array
          items:
            $ref: '#/components/schemas/MongoDbProgress'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateSqlServerSqlMITaskProperties:
      x-ms-discriminator-value: Migrate.SqlServer.AzureSqlDbMI
      description: Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateSqlServerSqlMITaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlMITaskOutput'
          readOnly: true
        taskId:
          type: string
          description: task id
        createdOn:
          type: string
          description: DateTime in UTC when the task was created
        parentTaskId:
          type: string
          description: parent task id
        isCloneable:
          type: boolean
          description: whether the task can be cloned or not
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateSqlServerSqlMISyncTaskProperties:
      x-ms-discriminator-value: Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
      description: Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateSqlServerSqlMISyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlMISyncTaskOutput'
          readOnly: true
        createdOn:
          type: string
          description: DateTime in UTC when the task was created
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateSqlServerSqlDbTaskProperties:
      x-ms-discriminator-value: Migrate.SqlServer.SqlDb
      description: Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateSqlServerSqlDbTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlDbTaskOutput'
          readOnly: true
        taskId:
          type: string
          description: task id
        isCloneable:
          type: boolean
          description: whether the task can be cloned or not
        createdOn:
          type: string
          description: DateTime in UTC when the task was created
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateSqlServerSqlDbSyncTaskProperties:
      x-ms-discriminator-value: Migrate.SqlServer.AzureSqlDb.Sync
      description: Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateSqlServerSqlDbSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlDbSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateMySqlAzureDbForMySqlSyncTaskProperties:
      x-ms-discriminator-value: Migrate.MySql.AzureDbForMySql.Sync
      description: Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateMySqlAzureDbForMySqlSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateMySqlAzureDbForMySqlSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateMySqlAzureDbForMySqlOfflineTaskProperties:
      x-ms-discriminator-value: Migrate.MySql.AzureDbForMySql
      description: Properties for the task that migrates MySQL databases to Azure Database for MySQL for offline migrations
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateMySqlAzureDbForMySqlOfflineTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateMySqlAzureDbForMySqlOfflineTaskOutput'
          readOnly: true
        isCloneable:
          type: boolean
          description: whether the task can be cloned or not
        taskId:
          type: string
          description: 'Task id '
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties:
      x-ms-discriminator-value: Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
      description: Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput'
          readOnly: true
        taskId:
          type: string
          description: task id
        createdOn:
          type: string
          description: DateTime in UTC when the task was created
        isCloneable:
          type: boolean
          description: whether the task can be cloned or not
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateOracleAzureDbForPostgreSqlSyncTaskProperties:
      x-ms-discriminator-value: Migrate.Oracle.AzureDbForPostgreSql.Sync
      description: Properties for the task that migrates Oracle to Azure Database for PostgreSQL for online migrations
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateOracleAzureDbPostgreSqlSyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateOracleAzureDbPostgreSqlSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ValidateMigrationInputSqlServerSqlDbSyncTaskProperties:
      x-ms-discriminator-value: ValidateMigrationInput.SqlServer.SqlDb.Sync
      description: Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ValidateSyncMigrationInputSqlServerTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ValidateSyncMigrationInputSqlServerTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ValidateMigrationInputSqlServerSqlMITaskProperties:
      x-ms-discriminator-value: ValidateMigrationInput.SqlServer.AzureSqlDbMI
      description: Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ValidateMigrationInputSqlServerSqlMITaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ValidateMigrationInputSqlServerSqlMITaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ValidateMigrationInputSqlServerSqlMISyncTaskProperties:
      x-ms-discriminator-value: ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
      description: Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/ValidateMigrationInputSqlServerSqlMISyncTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/ValidateMigrationInputSqlServerSqlMISyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ValidateMongoDbTaskProperties:
      x-ms-discriminator-value: Validate.MongoDb
      description: Properties for the task that validates a migration between MongoDB data sources
      properties:
        input:
          $ref: '#/components/schemas/MongoDbMigrationSettings'
        output:
          type: array
          description: An array containing a single MongoDbMigrationProgress object
          items:
            $ref: '#/components/schemas/MongoDbMigrationProgress'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    ValidateOracleAzureDbForPostgreSqlSyncTaskProperties:
      x-ms-discriminator-value: Validate.Oracle.AzureDbPostgreSql.Sync
      description: Properties for the task that validates a migration for Oracle to Azure Database for PostgreSQL for online migrations
      properties:
        input:
          $ref: '#/components/schemas/MigrateOracleAzureDbPostgreSqlSyncTaskInput'
        output:
          type: array
          description: An array containing a single validation error response object
          items:
            $ref: '#/components/schemas/ValidateOracleAzureDbPostgreSqlSyncTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    GetTdeCertificatesSqlTaskProperties:
      x-ms-discriminator-value: GetTDECertificates.Sql
      description: Properties for the task that gets TDE certificates in Base64 encoded format.
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/GetTdeCertificatesSqlTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/GetTdeCertificatesSqlTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateSsisTaskProperties:
      x-ms-discriminator-value: Migrate.Ssis
      description: Properties for task that migrates SSIS packages from SQL Server databases to Azure SQL Database Managed Instance.
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateSsisTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateSsisTaskOutput'
          readOnly: true
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateSsisTaskInput:
      description: Input for task that migrates SSIS packages from SQL Server to Azure SQL Database Managed Instance.
      required:
        - ssisMigrationInfo
      properties:
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
        ssisMigrationInfo:
          $ref: '#/components/schemas/SsisMigrationInfo'
          description: SSIS package migration information.
      type: object
    MigrateSsisTaskOutput:
      type: object
      description: Output for task that migrates SSIS packages from SQL Server to Azure SQL Database Managed Instance.
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateSsisTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        status:
          $ref: '#/components/schemas/MigrationStatus'
          description: Current status of migration
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        stage:
          description: Stage of SSIS migration.
          $ref: '#/components/schemas/SsisMigrationStage'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSsisTaskOutputProjectLevel:
      x-ms-discriminator-value: SsisProjectLevelOutput
      properties:
        folderName:
          type: string
          description: Name of the folder
          readOnly: true
        projectName:
          type: string
          description: Name of the project
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        stage:
          description: Stage of SSIS migration.
          $ref: '#/components/schemas/SsisMigrationStage'
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    ValidateMigrationInputSqlServerSqlMISyncTaskInput:
      description: Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
      properties:
        selectedDatabases:
          description: Databases to migrate
          type: array
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlMIDatabaseInput'
        backupFileShare:
          $ref: '#/components/schemas/FileShare'
          description: Backup file share information for all selected databases.
        storageResourceId:
          type: string
          description: Fully qualified resourceId of storage
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Connection information for source SQL Server
        targetConnectionInfo:
          $ref: '#/components/schemas/MiSqlConnectionInfo'
          description: Connection information for Azure SQL Database Managed Instance
        azureApp:
          $ref: '#/components/schemas/AzureActiveDirectoryApp'
          description: Azure Active Directory Application the DMS (classic) instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
      type: object
    ValidateMigrationInputSqlServerSqlMISyncTaskOutput:
      type: object
      description: Output for task that validates migration input for Azure SQL Database Managed Instance online migration
      properties:
        id:
          type: string
          description: Database identifier
          readOnly: true
        name:
          type: string
          description: Name of database
          readOnly: true
        validationErrors:
          description: Errors associated with a selected database object
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    ProjectFileProperties:
      type: object
      description: Base class for file properties.
      properties:
        extension:
          description: Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.
          type: string
        filePath:
          description: Relative path of this file resource. This property can be set when creating or updating the file resource.
          type: string
        lastModified:
          description: Modification DateTime.
          type: string
          format: date-time
          readOnly: true
        mediaType:
          description: File content type. This property can be modified to reflect the file content type.
          type: string
        size:
          description: File size.
          type: integer
          format: int64
          readOnly: true
    ProjectFile:
      description: A file resource
      properties:
        etag:
          type: string
          description: HTTP strong entity tag value. This is ignored if submitted.
        properties:
          description: Custom file properties
          $ref: '#/components/schemas/ProjectFileProperties'
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    FileList:
      type: object
      description: OData page of files
      properties:
        value:
          type: array
          description: List of files
          items:
            $ref: '#/components/schemas/ProjectFile'
        nextLink:
          type: string
          description: URL to load the next page of files
    FileStorageInfo:
      type: object
      description: File storage information.
      properties:
        uri:
          description: A URI that can be used to access the file content.
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
    MigrationValidationOptions:
      type: object
      description: Types of validations to run after the migration
      properties:
        enableSchemaValidation:
          type: boolean
          description: Allows to compare the schema information between source and target.
        enableDataIntegrityValidation:
          type: boolean
          description: Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
        enableQueryAnalysisValidation:
          type: boolean
          description: Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
    MigrationReportResult:
      type: object
      description: Migration validation report result, contains the url for downloading the generated report.
      properties:
        id:
          type: string
          description: Migration validation result identifier
        reportUrl:
          type: string
          description: The url of the report.
    MigrationValidationResult:
      type: object
      description: Migration Validation Result
      properties:
        id:
          type: string
          description: Migration validation result identifier
          readOnly: true
        migrationId:
          type: string
          description: Migration Identifier
          readOnly: true
        summaryResults:
          type: object
          description: Validation summary results for each database
          additionalProperties:
            $ref: '#/components/schemas/MigrationValidationDatabaseSummaryResult'
        status:
          $ref: '#/components/schemas/ValidationStatus'
          description: Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
          readOnly: true
    MigrationValidationDatabaseSummaryResult:
      type: object
      description: Migration Validation Database level summary result
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        migrationId:
          type: string
          description: Migration Identifier
          readOnly: true
        sourceDatabaseName:
          type: string
          description: Name of the source database
          readOnly: true
        targetDatabaseName:
          type: string
          description: Name of the target database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Validation start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Validation end time
          readOnly: true
        status:
          $ref: '#/components/schemas/ValidationStatus'
          description: Current status of validation at the database level
          readOnly: true
    MigrationValidationDatabaseLevelResult:
      type: object
      description: Database level validation results
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        migrationId:
          type: string
          description: Migration Identifier
          readOnly: true
        sourceDatabaseName:
          type: string
          description: Name of the source database
          readOnly: true
        targetDatabaseName:
          type: string
          description: Name of the target database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Validation start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Validation end time
          readOnly: true
        dataIntegrityValidationResult:
          description: Provides data integrity validation result between the source and target tables that are migrated.
          $ref: '#/components/schemas/DataIntegrityValidationResult'
          readOnly: true
        schemaValidationResult:
          description: Provides schema comparison result between source and target database
          $ref: '#/components/schemas/SchemaComparisonValidationResult'
          readOnly: true
        queryAnalysisValidationResult:
          description: Results of some of the query execution result between source and target database
          $ref: '#/components/schemas/QueryAnalysisValidationResult'
          readOnly: true
        status:
          $ref: '#/components/schemas/ValidationStatus'
          description: Current status of validation at the database level
          readOnly: true
    DataIntegrityValidationResult:
      type: object
      description: Results for checksum based Data Integrity validation results
      properties:
        failedObjects:
          type: object
          description: List of failed table names of source and target pair
          additionalProperties:
            type: string
        validationErrors:
          type: array
          description: List of errors that happened while performing data integrity validation
          $ref: '#/components/schemas/ValidationError'
    SchemaComparisonValidationResult:
      type: object
      description: Results for schema comparison between the source and target
      properties:
        schemaDifferences:
          type: array
          description: List of schema differences between the source and target databases
          $ref: '#/components/schemas/SchemaComparisonValidationResultType'
        validationErrors:
          type: array
          description: List of errors that happened while performing schema compare validation
          $ref: '#/components/schemas/ValidationError'
        sourceDatabaseObjectCount:
          type: object
          description: Count of source database objects
          additionalProperties:
            type: integer
            format: int64
        targetDatabaseObjectCount:
          type: object
          description: Count of target database objects
          additionalProperties:
            type: integer
            format: int64
    SchemaComparisonValidationResultType:
      type: object
      description: Description about the errors happen while performing migration validation
      properties:
        objectName:
          type: string
          description: Name of the object that has the difference
        objectType:
          type: object
          $ref: '#/components/schemas/DatabaseObjectType'
          description: Type of the object that has the difference. e.g (Table/View/StoredProcedure)
        updateAction:
          type: string
          description: Update action type with respect to target
          $ref: '#/components/schemas/UpdateActionType'
    UpdateActionType:
      type: string
      description: Type of the actual difference for the compared object, while performing schema comparison
      enum:
        - DeletedOnTarget
        - ChangedOnTarget
        - AddedOnTarget
      x-ms-enum:
        name: UpdateActionType
        modelAsString: true
    QueryAnalysisValidationResult:
      type: object
      description: Results for query analysis comparison between the source and target
      properties:
        queryResults:
          type: array
          description: List of queries executed and it's execution results in source and target
          $ref: '#/components/schemas/QueryExecutionResult'
        validationErrors:
          type: array
          description: Errors that are part of the execution
          $ref: '#/components/schemas/ValidationError'
    QueryExecutionResult:
      type: object
      description: Describes query analysis results for execution in source and target
      properties:
        queryText:
          type: string
          description: Query text retrieved from the source server
        statementsInBatch:
          type: integer
          format: int64
          description: Total no. of statements in the batch
        sourceResult:
          type: object
          description: Query analysis result from the source
          $ref: '#/components/schemas/ExecutionStatistics'
        targetResult:
          type: object
          description: Query analysis result from the target
          $ref: '#/components/schemas/ExecutionStatistics'
    ExecutionStatistics:
      type: object
      description: Description about the errors happen while performing migration validation
      properties:
        executionCount:
          type: integer
          format: int64
          description: No. of query executions
        cpuTimeMs:
          type: number
          format: float
          description: CPU Time in millisecond(s) for the query execution
        elapsedTimeMs:
          type: number
          format: float
          description: Time taken in millisecond(s) for executing the query
        waitStats:
          type: object
          description: Dictionary of sql query execution wait types and the respective statistics
          additionalProperties:
            type: object
            $ref: '#/components/schemas/WaitStatistics'
        hasErrors:
          type: boolean
          description: Indicates whether the query resulted in an error
        sqlErrors:
          type: array
          description: List of sql Errors
          items:
            type: string
    WaitStatistics:
      type: object
      description: Wait statistics gathered during query batch execution
      properties:
        waitType:
          type: string
          description: Type of the Wait
        waitTimeMs:
          type: number
          format: float
          default: 0
          description: 'Total wait time in millisecond(s) '
        waitCount:
          type: integer
          format: int64
          description: Total no. of waits
    Severity:
      type: string
      description: Severity of the validation error
      enum:
        - Message
        - Warning
        - Error
      x-ms-enum:
        name: Severity
        modelAsString: true
    ValidationError:
      type: object
      description: Description about the errors happen while performing migration validation
      properties:
        text:
          type: string
          description: Error Text
        severity:
          type: string
          description: Severity of the error
          $ref: '#/components/schemas/Severity'
    ValidationStatus:
      type: string
      description: Current status of the validation
      enum:
        - Default
        - NotStarted
        - Initialized
        - InProgress
        - Completed
        - CompletedWithIssues
        - Stopped
        - Failed
      x-ms-enum:
        name: ValidationStatus
        modelAsString: true
    ApiError:
      type: object
      description: Error information.
      properties:
        error:
          description: Error information in OData format
          $ref: '#/components/schemas/ODataError'
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
    NameAvailabilityResponse:
      type: object
      description: Indicates whether a proposed resource name is available
      properties:
        nameAvailable:
          type: boolean
          description: If true, the name is valid and available. If false, 'reason' describes why not.
        reason:
          type: string
          description: The reason why the name is not available, if nameAvailable is false
          enum:
            - AlreadyExists
            - Invalid
          x-ms-enum:
            name: NameCheckFailureReason
            modelAsString: true
        message:
          type: string
          description: The localized reason why the name is not available, if nameAvailable is false
    NameAvailabilityRequest:
      type: object
      description: A resource type and proposed name
      properties:
        name:
          type: string
          description: The proposed resource name
        type:
          type: string
          description: The resource type chain (e.g. virtualMachines/extensions)
    ODataError:
      type: object
      description: Error information in OData format.
      properties:
        code:
          type: string
          description: The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'
        message:
          type: string
          description: The human-readable description of the error
        details:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Inner errors that caused this error
    Quota:
      type: object
      description: Describes a quota for or usage details about a resource
      properties:
        currentValue:
          type: number
          format: double
          description: The current value of the quota. If null or missing, the current value cannot be determined in the context of the request.
        id:
          type: string
          description: The resource ID of the quota object
        limit:
          type: number
          format: double
          description: The maximum value of the quota. If null or missing, the quota has no maximum, in which case it merely tracks usage.
        name:
          type: object
          description: The name of the quota
          properties:
            localizedValue:
              type: string
              description: The localized name of the quota
            value:
              type: string
              description: The unlocalized name (or ID) of the quota
        unit:
          type: string
          description: The unit for the quota, such as Count, Bytes, BytesPerSecond, etc.
    QuotaList:
      type: object
      description: OData page of quota objects
      properties:
        value:
          type: array
          description: List of quotas
          items:
            $ref: '#/components/schemas/Quota'
        nextLink:
          type: string
          description: URL to load the next page of quotas, or null or missing if this is the last page
    ReportableException:
      type: object
      description: Exception object for all custom exceptions
      properties:
        message:
          type: string
          description: Error message
        actionableMessage:
          type: string
          description: Actionable steps for this exception
        filePath:
          type: string
          description: The path to the file where exception occurred
        lineNumber:
          type: string
          description: The line number where exception occurred
        hResult:
          type: integer
          description: Coded numerical value that is assigned to a specific exception
        stackTrace:
          type: string
          description: Stack trace
    ConnectionInfo:
      type: object
      description: Defines the connection properties of a server
      properties:
        type:
          type: string
          description: Type of connection info
        userName:
          type: string
          description: User name
        password:
          type: string
          description: Password credential.
      required:
        - type
      discriminator:
        propertyName: type
    AuthenticationType:
      type: string
      description: An enumeration of possible authentication types when connecting
      enum:
        - None
        - WindowsAuthentication
        - SqlAuthentication
        - ActiveDirectoryIntegrated
        - ActiveDirectoryPassword
      x-ms-enum:
        name: AuthenticationType
        modelAsString: true
    MongoDbConnectionInfo:
      description: Describes a connection to a MongoDB data source
      required:
        - connectionString
      properties:
        type:
          type: string
          description: Type of connection info
        userName:
          type: string
          description: User name
        password:
          type: string
          description: Password credential.
        connectionString:
          type: string
          description: A MongoDB connection string or blob container URL. The user name and password can be specified here or in the userName and password properties
        dataSource:
          type: string
          description: 'Data source '
        encryptConnection:
          type: boolean
          description: Whether to encrypt the connection
        serverBrandVersion:
          type: string
          description: server brand version
        serverVersion:
          type: string
          description: server version
        serverName:
          type: string
          description: name of the server
        trustServerCertificate:
          type: boolean
          description: Whether to trust the server certificate
          default: false
        enforceSSL:
          type: boolean
        port:
          type: integer
          description: port for server
        additionalSettings:
          type: string
          description: Additional connection settings
        authentication:
          $ref: '#/components/schemas/AuthenticationType'
          description: Authentication type to use for connection
      type: object
    SqlConnectionInfo:
      x-ms-discriminator-value: SqlConnectionInfo
      description: Information for connecting to SQL database server
      required:
        - dataSource
      properties:
        type:
          type: string
          description: Type of connection info
        userName:
          type: string
          description: User name
        password:
          type: string
          description: Password credential.
        dataSource:
          type: string
          description: Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
        serverName:
          type: string
          description: name of the server
        port:
          type: integer
          description: Port for Server
        serverVersion:
          type: string
          description: server version
        serverBrandVersion:
          type: string
          description: server brand version
        resourceId:
          type: string
          description: Represents the ID of an HTTP resource represented by an Azure resource provider.
        authentication:
          $ref: '#/components/schemas/AuthenticationType'
          description: Authentication type to use for connection
        encryptConnection:
          type: boolean
          description: Whether to encrypt the connection
          default: true
        additionalSettings:
          type: string
          description: Additional connection settings
        trustServerCertificate:
          type: boolean
          description: Whether to trust the server certificate
          default: false
        platform:
          $ref: '#/components/schemas/SqlServerSourcePlatform'
          description: Server platform type for connection
      type: object
    SqlServerSourcePlatform:
      type: string
      description: An enumeration of source platform types
      enum:
        - SqlOnPrem
      x-ms-enum:
        name: SqlSourcePlatform
        modelAsString: true
    MySqlConnectionInfo:
      x-ms-discriminator-value: MySqlConnectionInfo
      description: Information for connecting to MySQL server
      required:
        - serverName
        - port
      properties:
        serverName:
          type: string
          description: Name of the server
        dataSource:
          type: string
          description: 'Data source '
        port:
          type: integer
          description: Port for Server
        encryptConnection:
          type: boolean
          description: Whether to encrypt the connection
          default: true
        authentication:
          $ref: '#/components/schemas/AuthenticationType'
          description: Authentication type to use for connection
        additionalSettings:
          type: string
          description: Additional connection settings
        type:
          type: string
          description: Type of connection info
        userName:
          type: string
          description: User name
        password:
          type: string
          description: Password credential.
      type: object
    OracleConnectionInfo:
      x-ms-discriminator-value: OracleConnectionInfo
      description: Information for connecting to Oracle server
      required:
        - dataSource
      properties:
        dataSource:
          type: string
          description: EZConnect or TNSName connection string.
        serverName:
          type: string
          description: name of the server
        serverVersion:
          type: string
          description: server version
        port:
          type: integer
          description: port for server
        authentication:
          $ref: '#/components/schemas/AuthenticationType'
          description: Authentication type to use for connection
        type:
          type: string
          description: Type of connection info
        userName:
          type: string
          description: User name
        password:
          type: string
          description: Password credential.
      type: object
    PostgreSqlConnectionInfo:
      x-ms-discriminator-value: PostgreSqlConnectionInfo
      description: Information for connecting to PostgreSQL server
      required:
        - serverName
        - port
      properties:
        serverName:
          type: string
          description: Name of the server
        dataSource:
          type: string
          description: 'Data source '
        serverVersion:
          type: string
          description: server version
        databaseName:
          type: string
          description: Name of the database
        port:
          type: integer
          description: Port for Server
        encryptConnection:
          type: boolean
          description: Whether to encrypt the connection
          default: true
        trustServerCertificate:
          type: boolean
          description: Whether to trust the server certificate
          default: false
        additionalSettings:
          type: string
          description: Additional connection settings
        serverBrandVersion:
          type: string
          description: server brand version
        authentication:
          $ref: '#/components/schemas/AuthenticationType'
          description: Authentication type to use for connection
        type:
          type: string
          description: Type of connection info
        userName:
          type: string
          description: User name
        password:
          type: string
          description: Password credential.
      type: object
    MySqlTargetPlatform:
      type: string
      description: An enumeration of possible target types when migrating from MySQL
      enum:
        - SqlServer
        - AzureDbForMySQL
      x-ms-enum:
        name: MySqlTargetPlatformType
        modelAsString: true
    ServerLevelPermissionsGroup:
      type: string
      description: Permission group for validations. These groups will run a set of permissions for validating user activity. Select the permission group for the activity that you are performing.
      enum:
        - Default
        - MigrationFromSqlServerToAzureDB
        - MigrationFromSqlServerToAzureMI
        - MigrationFromMySQLToAzureDBForMySQL
        - MigrationFromSqlServerToAzureVM
      x-ms-enum:
        name: ServerLevelPermissionsGroup
    AzureActiveDirectoryApp:
      type: object
      description: Azure Active Directory Application
      properties:
        applicationId:
          type: string
          description: Application ID of the Azure Active Directory Application
        appKey:
          type: string
          description: Key used to authenticate to the Azure Active Directory Application
        tenantId:
          type: string
          description: Tenant id of the customer
        ignoreAzurePermissions:
          type: boolean
          description: Ignore checking azure permissions on the AAD app
    MiSqlConnectionInfo:
      x-ms-discriminator-value: MiSqlConnectionInfo
      description: Properties required to create a connection to Azure SQL database Managed instance
      required:
        - managedInstanceResourceId
      properties:
        type:
          type: string
          description: Type of connection info
        userName:
          type: string
          description: User name
        password:
          type: string
          description: Password credential.
        managedInstanceResourceId:
          type: string
          description: Resource id for Azure SQL database Managed instance
      type: object
    BackupSetInfo:
      type: object
      description: Information of backup set
      properties:
        backupSetId:
          type: string
          description: Id for the set of backup files
        firstLsn:
          type: string
          description: First log sequence number of the backup file
        lastLsn:
          type: string
          description: Last log sequence number of the backup file
        lastModifiedTime:
          type: string
          format: date-time
          description: Last modified time of the backup file in share location
        backupType:
          $ref: '#/components/schemas/BackupType'
          description: Enum of the different backup types
        listOfBackupFiles:
          type: array
          items:
            $ref: '#/components/schemas/BackupFileInfo'
          description: List of files in the backup set
        databaseName:
          type: string
          description: Name of the database to which the backup set belongs
        backupStartDate:
          type: string
          format: date-time
          description: Date and time that the backup operation began
        backupFinishedDate:
          type: string
          format: date-time
          description: Date and time that the backup operation finished
        isBackupRestored:
          type: boolean
          description: Whether the backup set is restored or not
      readOnly: true
    BackupFileInfo:
      type: object
      description: Information of the backup file
      properties:
        fileLocation:
          type: string
          description: Location of the backup file in shared folder
        familySequenceNumber:
          type: integer
          description: Sequence number of the backup file in the backup set
        status:
          $ref: '#/components/schemas/BackupFileStatus'
          description: Status of the backup file during migration
      readOnly: true
    BackupFileStatus:
      type: string
      description: An enumeration of Status of the log backup file.
      enum:
        - Arrived
        - Queued
        - Uploading
        - Uploaded
        - Restoring
        - Restored
        - Cancelled
      x-ms-enum:
        name: BackupFileStatus
        modelAsString: true
    OrphanedUserInfo:
      type: object
      description: Information of orphaned users on the SQL server database.
      properties:
        name:
          type: string
          description: Name of the orphaned user
        databaseName:
          type: string
          description: Parent database of the user
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput:
      type: object
      description: Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
      properties:
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput'
        targetConnectionInfo:
          description: Connection information for target Azure Database for PostgreSQL
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
        sourceConnectionInfo:
          description: Connection information for source PostgreSQL
          $ref: '#/components/schemas/PostgreSqlConnectionInfo'
        encryptedKeyForSecureFields:
          type: string
          description: encrypted key for secure fields
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
      required:
        - targetConnectionInfo
        - sourceConnectionInfo
        - selectedDatabases
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutput:
      type: object
      description: Output for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServer:
          type: string
          description: Source server name
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServer:
          type: string
          description: Target server name
          readOnly: true
        sourceServerType:
          $ref: '#/components/schemas/ScenarioSource'
          description: Source server type.
          readOnly: true
        targetServerType:
          $ref: '#/components/schemas/ScenarioTarget'
          description: Target server type.
          readOnly: true
        state:
          $ref: '#/components/schemas/ReplicateMigrationState'
          description: Migration status
          readOnly: true
        databaseCount:
          type: number
          description: Number of databases to include
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        migrationState:
          $ref: '#/components/schemas/SyncDatabaseMigrationReportingState'
          description: Migration state that this database is in
          readOnly: true
        incomingChanges:
          type: integer
          format: int64
          description: Number of incoming changes
          readOnly: true
        appliedChanges:
          type: integer
          format: int64
          description: Number of applied changes
          readOnly: true
        cdcInsertCounter:
          type: integer
          format: int64
          description: Number of cdc inserts
          readOnly: true
        cdcDeleteCounter:
          type: integer
          format: int64
          description: Number of cdc deletes
          readOnly: true
        cdcUpdateCounter:
          type: integer
          format: int64
          description: Number of cdc updates
          readOnly: true
        fullLoadCompletedTables:
          type: integer
          format: int64
          description: Number of tables completed in full load
          readOnly: true
        fullLoadLoadingTables:
          type: integer
          format: int64
          description: Number of tables loading in full load
          readOnly: true
        fullLoadQueuedTables:
          type: integer
          format: int64
          description: Number of tables queued in full load
          readOnly: true
        fullLoadErroredTables:
          type: integer
          format: int64
          description: Number of tables errored in full load
          readOnly: true
        initializationCompleted:
          type: boolean
          description: Indicates if initial load (full load) has been completed
          readOnly: true
        latency:
          type: integer
          format: int64
          description: CDC apply latency
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevel:
      x-ms-discriminator-value: TableLevelOutput
      properties:
        tableName:
          type: string
          description: Name of the table
          readOnly: true
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        cdcInsertCounter:
          type: integer
          format: int64
          description: Number of applied inserts
          readOnly: true
        cdcUpdateCounter:
          type: integer
          format: int64
          description: Number of applied updates
          readOnly: true
        cdcDeleteCounter:
          type: integer
          format: int64
          description: Number of applied deletes
          readOnly: true
        fullLoadEstFinishTime:
          type: string
          format: date-time
          description: Estimate to finish full load
          readOnly: true
        fullLoadStartedOn:
          type: string
          format: date-time
          description: Full load start time
          readOnly: true
        fullLoadEndedOn:
          type: string
          format: date-time
          description: Full load end time
          readOnly: true
        fullLoadTotalRows:
          type: integer
          format: int64
          description: Number of rows applied in full load
          readOnly: true
        state:
          $ref: '#/components/schemas/SyncTableMigrationState'
          description: Current state of the table migration
          readOnly: true
        totalChangesApplied:
          type: integer
          format: int64
          description: Total number of applied changes
          readOnly: true
        dataErrorsCounter:
          type: integer
          format: int64
          description: Number of data errors occurred
          readOnly: true
        lastModifiedTime:
          type: string
          format: date-time
          description: Last modified time on target
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/SyncMigrationDatabaseErrorEvent'
          description: List of error events
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseError:
      x-ms-discriminator-value: DatabaseLevelErrorOutput
      properties:
        errorMessage:
          type: string
          description: Error message
        events:
          type: array
          items:
            $ref: '#/components/schemas/SyncMigrationDatabaseErrorEvent'
          description: List of error events.
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput:
      type: object
      description: Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
      properties:
        name:
          type: string
          description: Name of the database
        id:
          type: string
          description: Result identifier
          readOnly: true
        targetDatabaseName:
          type: string
          description: 'Name of target database. Note: Target database will be truncated before starting migration.'
        migrationSetting:
          type: object
          description: Migration settings which tune the migration behavior
          additionalProperties: {}
        sourceSetting:
          type: object
          description: Source settings to tune source endpoint migration behavior
          additionalProperties:
            type: string
        targetSetting:
          type: object
          description: Target settings to tune target endpoint migration behavior
          additionalProperties:
            type: string
        selectedTables:
          type: array
          description: Tables selected for migration
          items:
            $ref: '#/components/schemas/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput'
    MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseTableInput:
      type: object
      description: Selected tables for the migration
      properties:
        name:
          type: string
          description: Name of the table to migrate
    ConnectToTargetSqlSqlDbSyncTaskInput:
      type: object
      description: Input for the task that validates connection to Azure SQL DB and target server requirements
      properties:
        sourceConnectionInfo:
          description: Connection information for source SQL Server
          $ref: '#/components/schemas/SqlConnectionInfo'
        targetConnectionInfo:
          description: Connection information for target SQL DB
          $ref: '#/components/schemas/SqlConnectionInfo'
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
    ValidateSyncMigrationInputSqlServerTaskInput:
      type: object
      description: Input for task that validates migration input for SQL sync migrations
      properties:
        sourceConnectionInfo:
          description: Information for connecting to source SQL server
          $ref: '#/components/schemas/SqlConnectionInfo'
        targetConnectionInfo:
          description: Information for connecting to target
          $ref: '#/components/schemas/SqlConnectionInfo'
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlDbSyncDatabaseInput'
      required:
        - targetConnectionInfo
        - sourceConnectionInfo
        - selectedDatabases
    ValidateSyncMigrationInputSqlServerTaskOutput:
      type: object
      description: Output for task that validates migration input for SQL sync migrations
      properties:
        id:
          type: string
          description: Database identifier
          readOnly: true
        name:
          type: string
          description: Name of database
          readOnly: true
        validationErrors:
          description: Errors associated with a selected database object
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    ConnectToTargetAzureDbForMySqlTaskInput:
      type: object
      description: Input for the task that validates connection to Azure Database for MySQL and target server requirements
      properties:
        sourceConnectionInfo:
          description: Connection information for source MySQL server
          $ref: '#/components/schemas/MySqlConnectionInfo'
        targetConnectionInfo:
          description: Connection information for target Azure Database for MySQL server
          $ref: '#/components/schemas/MySqlConnectionInfo'
        isOfflineMigration:
          type: boolean
          description: Flag for whether or not the migration is offline
          default: false
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
    ConnectToTargetAzureDbForMySqlTaskOutput:
      type: object
      description: Output for the task that validates connection to Azure Database for MySQL and target server requirements
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        serverVersion:
          type: string
          description: Version of the target server
          readOnly: true
        databases:
          type: array
          description: List of databases on target server
          items:
            type: string
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        validationErrors:
          description: Validation errors associated with the task
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    ValidateMigrationInputSqlServerSqlMITaskInput:
      type: object
      description: Input for task that validates migration input for SQL to Azure SQL Managed Instance
      properties:
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateSqlServerSqlMIDatabaseInput'
        selectedLogins:
          type: array
          description: Logins to migrate
          items:
            type: string
        backupFileShare:
          $ref: '#/components/schemas/FileShare'
          description: Backup file share information for all selected databases.
        backupBlobShare:
          $ref: '#/components/schemas/BlobShare'
          description: SAS URI of Azure Storage Account Container to be used for storing backup files.
        backupMode:
          $ref: '#/components/schemas/BackupMode'
          description: Backup Mode to specify whether to use existing backup or create new backup.
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
        - selectedDatabases
        - backupBlobShare
    ValidateMigrationInputSqlServerSqlMITaskOutput:
      type: object
      description: Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        name:
          type: string
          description: Name of database
          readOnly: true
        restoreDatabaseNameErrors:
          description: Errors associated with the RestoreDatabaseName
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        backupFolderErrors:
          description: Errors associated with the BackupFolder path
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        backupShareCredentialsErrors:
          description: Errors associated with backup share user name and password credentials
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        backupStorageAccountErrors:
          description: Errors associated with the storage account provided.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        existingBackupErrors:
          description: Errors associated with existing backup files.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        databaseBackupInfo:
          $ref: '#/components/schemas/DatabaseBackupInfo'
          description: Information about backup files when existing backup mode is used.
    MigrateMySqlAzureDbForMySqlOfflineTaskInput:
      type: object
      description: Input for the task that migrates MySQL databases to Azure Database for MySQL for offline migrations
      properties:
        sourceConnectionInfo:
          description: Connection information for source MySQL
          $ref: '#/components/schemas/MySqlConnectionInfo'
        targetConnectionInfo:
          description: Connection information for target Azure Database for MySQL
          $ref: '#/components/schemas/MySqlConnectionInfo'
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateMySqlAzureDbForMySqlOfflineDatabaseInput'
        makeSourceServerReadOnly:
          type: boolean
          description: Setting to set the source server read only
          default: false
        startedOn:
          type: string
          format: date-time
          description: Parameter to specify when the migration started
        optionalAgentSettings:
          type: object
          description: Optional parameters for fine tuning the data transfer rate during migration
          additionalProperties:
            type: string
        encryptedKeyForSecureFields:
          type: string
          description: encrypted key for secure fields
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
        - selectedDatabases
    MigrateMySqlAzureDbForMySqlOfflineTaskOutput:
      type: object
      description: Output for the task that migrates MySQL databases to Azure Database for MySQL for offline migrations
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateMySqlAzureDbForMySqlOfflineTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        durationInSeconds:
          type: integer
          format: int64
          description: Duration of task execution in seconds.
          readOnly: true
        status:
          $ref: '#/components/schemas/MigrationStatus'
          description: Current status of migration
          readOnly: true
        statusMessage:
          type: string
          description: Migration status message
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        databases:
          type: string
          description: Selected databases as a map from database name to database id
          additionalProperties:
            type: string
        databaseSummary:
          type: string
          description: Summary of database results in the migration
          additionalProperties:
            $ref: '#/components/schemas/DatabaseSummaryResult'
          readOnly: true
        migrationReportResult:
          type: object
          description: Migration Report Result, provides unique url for downloading your migration report.
          $ref: '#/components/schemas/MigrationReportResult'
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        lastStorageUpdate:
          type: string
          format: date-time
          description: Last time the storage was updated
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlOfflineTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        stage:
          $ref: '#/components/schemas/DatabaseMigrationStage'
          description: Migration stage that this database is in
          readOnly: true
        statusMessage:
          type: string
          description: Status message
          readOnly: true
        message:
          type: string
          description: Migration progress message
          readOnly: true
        numberOfObjects:
          type: integer
          format: int64
          description: Number of objects
          readOnly: true
        numberOfObjectsCompleted:
          type: integer
          format: int64
          description: Number of successfully completed objects
          readOnly: true
        errorCount:
          type: integer
          format: int64
          description: Number of database/object errors.
          readOnly: true
        errorPrefix:
          type: string
          description: Wildcard string prefix to use for querying all errors of the item
          readOnly: true
        resultPrefix:
          type: string
          description: Wildcard string prefix to use for querying all sub-tem results of the item
          readOnly: true
        exceptionsAndWarnings:
          description: Migration exceptions and warnings.
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        lastStorageUpdate:
          type: string
          format: date-time
          description: Last time the storage was updated
          readOnly: true
        objectSummary:
          type: string
          description: Summary of object results in the migration
          additionalProperties:
            $ref: '#/components/schemas/DataItemMigrationSummaryResult'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlOfflineTaskOutputTableLevel:
      x-ms-discriminator-value: TableLevelOutput
      properties:
        objectName:
          type: string
          description: Name of the item
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Current state of migration
          readOnly: true
        statusMessage:
          type: string
          description: Status message
          readOnly: true
        itemsCount:
          type: integer
          format: int64
          description: Number of items
          readOnly: true
        itemsCompletedCount:
          type: integer
          format: int64
          description: Number of successfully completed items
          readOnly: true
        errorPrefix:
          type: string
          description: Wildcard string prefix to use for querying all errors of the item
          readOnly: true
        resultPrefix:
          type: string
          description: Wildcard string prefix to use for querying all sub-tem results of the item
          readOnly: true
        lastStorageUpdate:
          type: string
          format: date-time
          description: Last time the storage was updated
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlOfflineTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlOfflineDatabaseInput:
      type: object
      description: Database specific information for offline MySQL to Azure Database for MySQL migration task inputs
      properties:
        name:
          type: string
          description: Name of the database
        targetDatabaseName:
          type: string
          description: 'Name of target database. Note: Target database will be truncated before starting migration.'
        tableMap:
          type: object
          description: Mapping of source to target tables
          additionalProperties:
            type: string
    MigrateSchemaSqlServerSqlDbTaskProperties:
      x-ms-discriminator-value: MigrateSchemaSqlServerSqlDb
      description: Properties for task that migrates Schema for SQL Server databases to Azure SQL databases
      properties:
        input:
          description: Task input
          $ref: '#/components/schemas/MigrateSchemaSqlServerSqlDbTaskInput'
        output:
          description: Task output. This is ignored if submitted.
          type: array
          items:
            $ref: '#/components/schemas/MigrateSchemaSqlServerSqlDbTaskOutput'
          readOnly: true
        createdOn:
          type: string
          description: DateTime in UTC when the task was created
        taskId:
          type: string
          description: 'Task id '
        isCloneable:
          type: boolean
          description: whether the task can be cloned or not
        taskType:
          enum:
            - Connect.MongoDb
            - ConnectToSource.SqlServer
            - ConnectToSource.SqlServer.Sync
            - ConnectToSource.PostgreSql.Sync
            - ConnectToSource.MySql
            - ConnectToSource.Oracle.Sync
            - ConnectToTarget.SqlDb
            - ConnectToTarget.SqlDb.Sync
            - ConnectToTarget.AzureDbForPostgreSql.Sync
            - ConnectToTarget.Oracle.AzureDbForPostgreSql.Sync
            - ConnectToTarget.AzureSqlDbMI
            - ConnectToTarget.AzureSqlDbMI.Sync.LRS
            - ConnectToTarget.AzureDbForMySql
            - GetUserTables.Sql
            - GetUserTables.AzureSqlDb.Sync
            - GetUserTablesOracle
            - GetUserTablesPostgreSql
            - GetUserTablesMySql
            - Migrate.MongoDb
            - Migrate.SqlServer.AzureSqlDbMI
            - Migrate.SqlServer.AzureSqlDbMI.Sync.LRS
            - Migrate.SqlServer.SqlDb
            - Migrate.SqlServer.AzureSqlDb.Sync
            - Migrate.MySql.AzureDbForMySql.Sync
            - Migrate.MySql.AzureDbForMySql
            - Migrate.PostgreSql.AzureDbForPostgreSql.SyncV2
            - Migrate.Oracle.AzureDbForPostgreSql.Sync
            - ValidateMigrationInput.SqlServer.SqlDb.Sync
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI
            - ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS
            - Validate.MongoDb
            - Validate.Oracle.AzureDbPostgreSql.Sync
            - GetTDECertificates.Sql
            - Migrate.Ssis
            - Service.Check.OCI
            - Service.Upload.OCI
            - Service.Install.OCI
            - MigrateSchemaSqlServerSqlDb
          x-ms-enum:
            name: TaskType
            modelAsString: true
          description: Task type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the task. This is ignored if submitted.
          enum:
            - Unknown
            - Queued
            - Running
            - Canceled
            - Succeeded
            - Failed
            - FailedInputValidation
            - Faulted
          x-ms-enum:
            name: TaskState
            modelAsString: true
          readOnly: true
        commands:
          description: Array of command properties.
          type: array
          items:
            $ref: '#/components/schemas/CommandProperties'
          readOnly: true
        clientData:
          type: object
          description: Key value pairs of client data to attach meta data information to task
          additionalProperties:
            type: string
      type: object
    MigrateSchemaSqlServerSqlDbTaskInput:
      description: Input for task that migrates Schema for SQL Server databases to Azure SQL databases
      required:
        - selectedDatabases
      properties:
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateSchemaSqlServerSqlDbDatabaseInput'
        encryptedKeyForSecureFields:
          type: string
          description: encrypted key for secure fields
        startedOn:
          type: string
          description: Migration start time
        sourceConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/SqlConnectionInfo'
          description: Information for connecting to target
      type: object
    MigrateSchemaSqlServerSqlDbDatabaseInput:
      type: object
      description: Database input for migrate schema Sql Server to Azure SQL Server scenario
      properties:
        name:
          type: string
          description: Name of source database
        id:
          type: string
          description: Id of the source database
        targetDatabaseName:
          type: string
          description: Name of target database
        schemaSetting:
          $ref: '#/components/schemas/SchemaMigrationSetting'
          description: Database schema migration settings
    SchemaMigrationSetting:
      type: object
      description: Settings for migrating schema from source to target
      properties:
        schemaOption:
          $ref: '#/components/schemas/SchemaMigrationOption'
          description: Option on how to migrate the schema
        fileId:
          type: string
          description: Resource Identifier of a file resource containing the uploaded schema file
        fileName:
          type: string
          description: Name of the file resource containing the uploaded schema file
    SchemaMigrationOption:
      type: string
      description: Option for how schema is extracted and applied to target
      enum:
        - None
        - ExtractFromSource
        - UseStorageFile
      x-ms-enum:
        name: SchemaMigrationOption
        modelAsString: true
    MigrateSchemaSqlServerSqlDbTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        state:
          $ref: '#/components/schemas/MigrationState'
          description: Overall state of the schema migration
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSchemaSqlServerSqlDbTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: The name of the database
          readOnly: true
        state:
          $ref: '#/components/schemas/MigrationState'
          description: State of the schema migration for this database
          readOnly: true
        stage:
          $ref: '#/components/schemas/SchemaMigrationStage'
          description: Schema migration stage for this database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        databaseErrorResultPrefix:
          type: string
          description: Prefix string to use for querying errors for this database
          readOnly: true
        schemaErrorResultPrefix:
          type: string
          description: Prefix string to use for querying schema errors for this database
          readOnly: true
        numberOfSuccessfulOperations:
          type: integer
          format: int64
          description: Number of successful operations for this database
          readOnly: true
        numberOfFailedOperations:
          type: integer
          format: int64
          description: Number of failed operations for this database
          readOnly: true
        fileId:
          type: string
          description: Identifier for the file resource containing the schema of this database
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSchemaSqlServerSqlDbTaskOutputError:
      x-ms-discriminator-value: SchemaErrorOutput
      properties:
        commandText:
          type: string
          description: Schema command which failed
          readOnly: true
        errorText:
          type: string
          description: Reason of failure
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSchemaSqlTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateSchemaSqlServerSqlDbTaskOutput:
      type: object
      description: Output for the task that migrates Schema for SQL Server databases to Azure SQL databases
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    OracleOCIDriverInfo:
      type: object
      description: Information about an Oracle OCI driver.
      properties:
        driverName:
          type: string
          description: The name of the driver package
          readOnly: true
        driverSize:
          type: string
          description: The size in bytes of the driver package
          readOnly: true
        archiveChecksum:
          type: string
          description: The MD5 Base64 encoded checksum for the driver package.
          readOnly: true
        oracleChecksum:
          type: string
          description: The checksum for the driver package provided by Oracle.
          readOnly: true
        assemblyVersion:
          type: string
          description: Version listed in the OCI assembly 'oci.dll'
          readOnly: true
        supportedOracleVersions:
          type: array
          description: List of Oracle database versions supported by this driver. Only major minor of the version is listed.
          readOnly: true
          items:
            type: string
    CheckOCIDriverTaskInput:
      type: object
      description: Input for the service task to check for OCI drivers.
      properties:
        serverVersion:
          type: string
          description: Version of the source server to check against.  Optional.
    CheckOCIDriverTaskOutput:
      type: object
      description: Output for the service task to check for OCI drivers.
      properties:
        installedDriver:
          description: Information about the installed driver if found and valid.
          $ref: '#/components/schemas/OracleOCIDriverInfo'
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    UploadOCIDriverTaskInput:
      type: object
      description: Input for the service task to upload an OCI driver.
      properties:
        driverShare:
          $ref: '#/components/schemas/FileShare'
          description: File share information for the OCI driver archive.
    UploadOCIDriverTaskOutput:
      type: object
      description: Output for the service task to upload an OCI driver.
      properties:
        driverPackageName:
          type: string
          description: The name of the driver package that was validated and uploaded.
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    InstallOCIDriverTaskInput:
      type: object
      description: Input for the service task to install an OCI driver.
      properties:
        driverPackageName:
          type: string
          description: Name of the uploaded driver package to install.
    InstallOCIDriverTaskOutput:
      type: object
      description: Output for the service task to install an OCI driver.
      properties:
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    GetUserTablesSqlSyncTaskInput:
      type: object
      description: Input for the task that collects user tables for the given list of databases
      properties:
        sourceConnectionInfo:
          description: Connection information for SQL Server
          $ref: '#/components/schemas/SqlConnectionInfo'
        targetConnectionInfo:
          description: Connection information for SQL DB
          $ref: '#/components/schemas/SqlConnectionInfo'
        selectedSourceDatabases:
          type: array
          description: List of source database names to collect tables for
          items:
            type: string
        selectedTargetDatabases:
          type: array
          description: List of target database names to collect tables for
          items:
            type: string
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
        - selectedSourceDatabases
        - selectedTargetDatabases
    GetUserTablesSqlSyncTaskOutput:
      type: object
      description: Output of the task that collects user tables for the given list of databases
      properties:
        databasesToSourceTables:
          type: string
          description: Mapping from database name to list of source tables
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DatabaseTable'
          readOnly: true
        databasesToTargetTables:
          type: string
          description: Mapping from database name to list of target tables
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DatabaseTable'
          readOnly: true
        tableValidationErrors:
          type: string
          description: Mapping from database name to list of validation errors
          additionalProperties:
            type: array
            items:
              type: string
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    MigrateMySqlAzureDbForMySqlSyncTaskInput:
      type: object
      description: Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
      properties:
        sourceConnectionInfo:
          description: Connection information for source MySQL
          $ref: '#/components/schemas/MySqlConnectionInfo'
        targetConnectionInfo:
          description: Connection information for target Azure Database for MySQL
          $ref: '#/components/schemas/MySqlConnectionInfo'
        selectedDatabases:
          type: array
          description: Databases to migrate
          items:
            $ref: '#/components/schemas/MigrateMySqlAzureDbForMySqlSyncDatabaseInput'
      required:
        - sourceConnectionInfo
        - targetConnectionInfo
        - selectedDatabases
    MigrateMySqlAzureDbForMySqlSyncTaskOutput:
      type: object
      description: Output for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevel:
      x-ms-discriminator-value: MigrationLevelOutput
      properties:
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServer:
          type: string
          description: Source server name
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServer:
          type: string
          description: Target server name
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      properties:
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        startedOn:
          type: string
          format: date-time
          description: Migration start time
          readOnly: true
        endedOn:
          type: string
          format: date-time
          description: Migration end time
          readOnly: true
        migrationState:
          $ref: '#/components/schemas/SyncDatabaseMigrationReportingState'
          description: Migration state that this database is in
          readOnly: true
        incomingChanges:
          type: integer
          format: int64
          description: Number of incoming changes
          readOnly: true
        appliedChanges:
          type: integer
          format: int64
          description: Number of applied changes
          readOnly: true
        cdcInsertCounter:
          type: integer
          format: int64
          description: Number of cdc inserts
          readOnly: true
        cdcDeleteCounter:
          type: integer
          format: int64
          description: Number of cdc deletes
          readOnly: true
        cdcUpdateCounter:
          type: integer
          format: int64
          description: Number of cdc updates
          readOnly: true
        fullLoadCompletedTables:
          type: integer
          format: int64
          description: Number of tables completed in full load
          readOnly: true
        fullLoadLoadingTables:
          type: integer
          format: int64
          description: Number of tables loading in full load
          readOnly: true
        fullLoadQueuedTables:
          type: integer
          format: int64
          description: Number of tables queued in full load
          readOnly: true
        fullLoadErroredTables:
          type: integer
          format: int64
          description: Number of tables errored in full load
          readOnly: true
        initializationCompleted:
          type: boolean
          description: Indicates if initial load (full load) has been completed
          readOnly: true
        latency:
          type: integer
          format: int64
          description: CDC apply latency
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevel:
      x-ms-discriminator-value: TableLevelOutput
      properties:
        tableName:
          type: string
          description: Name of the table
          readOnly: true
        databaseName:
          type: string
          description: Name of the database
          readOnly: true
        cdcInsertCounter:
          type: string
          description: Number of applied inserts
          readOnly: true
        cdcUpdateCounter:
          type: string
          description: Number of applied updates
          readOnly: true
        cdcDeleteCounter:
          type: string
          description: Number of applied deletes
          readOnly: true
        fullLoadEstFinishTime:
          type: string
          format: date-time
          description: Estimate to finish full load
          readOnly: true
        fullLoadStartedOn:
          type: string
          format: date-time
          description: Full load start time
          readOnly: true
        fullLoadEndedOn:
          type: string
          format: date-time
          description: Full load end time
          readOnly: true
        fullLoadTotalRows:
          type: integer
          format: int64
          description: Number of rows applied in full load
          readOnly: true
        state:
          $ref: '#/components/schemas/SyncTableMigrationState'
          description: Current state of the table migration
          readOnly: true
        totalChangesApplied:
          type: integer
          format: int64
          description: Total number of applied changes
          readOnly: true
        dataErrorsCounter:
          type: integer
          format: int64
          description: Number of data errors occurred
          readOnly: true
        lastModifiedTime:
          type: string
          format: date-time
          description: Last modified time on target
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlSyncTaskOutputError:
      x-ms-discriminator-value: ErrorOutput
      properties:
        error:
          $ref: '#/components/schemas/ReportableException'
          description: Migration error
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseError:
      x-ms-discriminator-value: DatabaseLevelErrorOutput
      properties:
        errorMessage:
          type: string
          description: Error message
        events:
          type: array
          items:
            $ref: '#/components/schemas/SyncMigrationDatabaseErrorEvent'
          description: List of error events.
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Result type
          type: string
      type: object
    MigrateMySqlAzureDbForMySqlSyncDatabaseInput:
      type: object
      description: Database specific information for MySQL to Azure Database for MySQL migration task inputs
      properties:
        name:
          type: string
          description: Name of the database
        targetDatabaseName:
          type: string
          description: 'Name of target database. Note: Target database will be truncated before starting migration.'
        migrationSetting:
          type: object
          description: Migration settings which tune the migration behavior
          additionalProperties:
            type: string
        sourceSetting:
          type: object
          description: Source settings to tune source endpoint migration behavior
          additionalProperties:
            type: string
        targetSetting:
          type: object
          description: Target settings to tune target endpoint migration behavior
          additionalProperties:
            type: string
        tableMap:
          type: object
          description: Mapping of source to target tables
          additionalProperties:
            type: string
    ConnectToTargetSqlDbTaskInput:
      type: object
      description: Input for the task that validates connection to SQL DB and target server requirements
      properties:
        targetConnectionInfo:
          description: Connection information for target SQL DB
          $ref: '#/components/schemas/SqlConnectionInfo'
        queryObjectCounts:
          description: Boolean flag indicating whether to query object counts for each database on the target server
          type: boolean
      required:
        - targetConnectionInfo
    ConnectToTargetSqlDbTaskOutput:
      type: object
      description: Output for the task that validates connection to SQL DB and target server requirements
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        databases:
          type: string
          description: Source databases as a map from database name to database id
          additionalProperties:
            type: string
          readOnly: true
        targetServerVersion:
          type: string
          description: Version of the target server
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
    ConnectToSourceSqlServerTaskInput:
      type: object
      description: Input for the task that validates connection to SQL Server and also validates source server requirements
      properties:
        sourceConnectionInfo:
          description: Connection information for Source SQL Server
          $ref: '#/components/schemas/SqlConnectionInfo'
        checkPermissionsGroup:
          $ref: '#/components/schemas/ServerLevelPermissionsGroup'
          description: Permission group for validations
        collectDatabases:
          type: boolean
          description: Flag for whether to collect databases from source server.
          default: true
        collectLogins:
          type: boolean
          description: Flag for whether to collect logins from source server.
          default: false
        collectAgentJobs:
          type: boolean
          description: Flag for whether to collect agent jobs from source server.
          default: false
        collectTdeCertificateInfo:
          type: boolean
          description: Flag for whether to collect TDE Certificate names from source server.
          default: false
        validateSsisCatalogOnly:
          type: boolean
          description: Flag for whether to validate SSIS catalog is reachable on the source server.
          default: false
        encryptedKeyForSecureFields:
          type: string
          description: encrypted key for secure fields
      required:
        - sourceConnectionInfo
    ConnectToSourceSqlServerTaskOutput:
      type: object
      description: Output for the task that validates connection to SQL Server and also validates source server requirements
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Type of result - database level or task level
          type: string
      required:
        - resultType
      discriminator:
        propertyName: resultType
    ConnectToSourceSqlServerTaskOutputTaskLevel:
      x-ms-discriminator-value: TaskLevelOutput
      description: Task level output for the task that validates connection to SQL Server and also validates source server requirements
      properties:
        databases:
          type: string
          description: Source databases as a map from database name to database id
          additionalProperties:
            type: string
          readOnly: true
        logins:
          type: string
          description: Source logins as a map from login name to login id.
          additionalProperties:
            type: string
          readOnly: true
        agentJobs:
          type: string
          description: Source agent jobs as a map from agent job name to id.
          additionalProperties:
            type: string
          readOnly: true
        databaseTdeCertificateMapping:
          type: string
          description: Mapping from database name to TDE certificate name, if applicable
          additionalProperties:
            type: string
          readOnly: true
        sourceServerVersion:
          type: string
          description: Source server version
          readOnly: true
        sourceServerBrandVersion:
          type: string
          description: Source server brand version
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Type of result - database level or task level
          type: string
      type: object
    ConnectToSourceSqlServerTaskOutputDatabaseLevel:
      x-ms-discriminator-value: DatabaseLevelOutput
      description: Database level output for the task that validates connection to SQL Server and also validates source server requirements
      properties:
        name:
          type: string
          description: Database name
          readOnly: true
        sizeMB:
          type: number
          format: double
          description: Size of the file in megabytes
          readOnly: true
        databaseFiles:
          type: array
          description: The list of database files
          items:
            $ref: '#/components/schemas/DatabaseFileInfo'
          readOnly: true
        compatibilityLevel:
          $ref: '#/components/schemas/DatabaseCompatLevel'
          description: SQL Server compatibility level of database
          readOnly: true
        databaseState:
          $ref: '#/components/schemas/DatabaseState'
          description: State of the database
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Type of result - database level or task level
          type: string
      type: object
    ConnectToSourceSqlServerTaskOutputLoginLevel:
      x-ms-discriminator-value: LoginLevelOutput
      description: Login level output for the task that validates connection to SQL Server and also validates source server requirements
      properties:
        name:
          type: string
          description: Login name.
          readOnly: true
        loginType:
          $ref: '#/components/schemas/LoginType'
          description: The type of login.
          readOnly: true
        defaultDatabase:
          type: string
          description: The default database for the login.
          readOnly: true
        isEnabled:
          type: boolean
          description: The state of the login.
          readOnly: true
        migrationEligibility:
          $ref: '#/components/schemas/MigrationEligibilityInfo'
          description: Information about eligibility of login for migration.
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Type of result - database level or task level
          type: string
      type: object
    ConnectToSourceSqlServerTaskOutputAgentJobLevel:
      x-ms-discriminator-value: AgentJobLevelOutput
      description: Agent Job level output for the task that validates connection to SQL Server and also validates source server requirements
      properties:
        name:
          type: string
          description: Agent Job name
          readOnly: true
        jobCategory:
          type: string
          description: The type of Agent Job.
          readOnly: true
        isEnabled:
          type: boolean
          description: The state of the original Agent Job.
          readOnly: true
        jobOwner:
          type: string
          description: The owner of the Agent Job
          readOnly: true
        lastExecutedOn:
          type: string
          format: date-time
          readOnly: true
          description: UTC Date and time when the Agent Job was last executed.
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
        migrationEligibility:
          $ref: '#/components/schemas/MigrationEligibilityInfo'
          description: Information about eligibility of agent job for migration.
          readOnly: true
        id:
          type: string
          description: Result identifier
          readOnly: true
        resultType:
          description: Type of result - database level or task level
          type: string
      type: object
    GetUserTablesSqlTaskInput:
      type: object
      description: Input for the task that collects user tables for the given list of databases
      properties:
        connectionInfo:
          description: Connection information for SQL Server
          $ref: '#/components/schemas/SqlConnectionInfo'
        selectedDatabases:
          type: array
          description: List of database names to collect tables for
          items:
            type: string
        encryptedKeyForSecureFields:
          type: string
          description: encrypted key for secure fields
      required:
        - connectionInfo
        - selectedDatabases
    GetUserTablesSqlTaskOutput:
      type: object
      description: Output of the task that collects user tables for the given list of databases
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        databasesToTables:
          type: string
          description: Mapping from database name to list of tables
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DatabaseTable'
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    Project:
      description: A project resource
      properties:
        properties:
          description: Project properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectProperties'
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
        etag:
          type: string
          description: HTTP strong entity tag value. This is ignored if submitted.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
      type: object
    ProjectList:
      type: object
      description: OData page of project resources
      properties:
        value:
          type: array
          description: List of projects
          items:
            $ref: '#/components/schemas/Project'
        nextLink:
          type: string
          description: URL to load the next page of projects
    ProjectProperties:
      type: object
      description: Project-specific properties
      properties:
        sourcePlatform:
          description: Source platform for the project
          $ref: '#/components/schemas/ProjectSourcePlatform'
        azureAuthenticationInfo:
          description: Field that defines the Azure active directory application info, used to connect to the target Azure resource
          type: object
          $ref: '#/components/schemas/AzureActiveDirectoryApp'
        targetPlatform:
          description: Target platform for the project
          $ref: '#/components/schemas/ProjectTargetPlatform'
        creationTime:
          type: string
          format: date-time
          readOnly: true
          description: UTC Date and time when project was created
        sourceConnectionInfo:
          $ref: '#/components/schemas/ConnectionInfo'
          description: Information for connecting to source
        targetConnectionInfo:
          $ref: '#/components/schemas/ConnectionInfo'
          description: Information for connecting to target
        databasesInfo:
          type: array
          description: List of DatabaseInfo
          items:
            $ref: '#/components/schemas/DatabaseInfo'
        provisioningState:
          type: string
          readOnly: true
          description: The project's provisioning state
          enum:
            - Deleting
            - Succeeded
          x-ms-enum:
            name: ProjectProvisioningState
            modelAsString: true
      required:
        - sourcePlatform
        - targetPlatform
    DatabaseInfo:
      type: object
      description: Project Database Details
      properties:
        sourceDatabaseName:
          type: string
          description: Name of the database
      required:
        - sourceDatabaseName
    ProjectSourcePlatform:
      type: string
      description: Source platform of the project
      enum:
        - SQL
        - MySQL
        - PostgreSql
        - MongoDb
        - Unknown
      x-ms-enum:
        name: ProjectSourcePlatform
        modelAsString: true
    ProjectTargetPlatform:
      type: string
      description: Target platform of the project
      enum:
        - SQLDB
        - SQLMI
        - AzureDbForMySql
        - AzureDbForPostgreSql
        - MongoDb
        - Unknown
      x-ms-enum:
        name: ProjectTargetPlatform
        modelAsString: true
    ConnectToSourceMySqlTaskInput:
      type: object
      description: Input for the task that validates MySQL database connection
      properties:
        sourceConnectionInfo:
          $ref: '#/components/schemas/MySqlConnectionInfo'
          description: Information for connecting to MySQL source
        targetPlatform:
          $ref: '#/components/schemas/MySqlTargetPlatform'
          description: Target Platform for the migration
        checkPermissionsGroup:
          $ref: '#/components/schemas/ServerLevelPermissionsGroup'
          description: Permission group for validations
        isOfflineMigration:
          type: boolean
          description: Flag for whether or not the migration is offline
          default: false
      required:
        - sourceConnectionInfo
    ConnectToTargetSqlMITaskInput:
      type: object
      description: Input for the task that validates connection to Azure SQL Database Managed Instance.
      properties:
        targetConnectionInfo:
          description: Connection information for target SQL Server
          $ref: '#/components/schemas/SqlConnectionInfo'
        collectLogins:
          type: boolean
          description: Flag for whether to collect logins from target SQL MI server.
          default: true
        collectAgentJobs:
          type: boolean
          description: Flag for whether to collect agent jobs from target SQL MI server.
          default: true
        validateSsisCatalogOnly:
          type: boolean
          description: Flag for whether to validate SSIS catalog is reachable on the target SQL MI server.
          default: false
      required:
        - targetConnectionInfo
    ConnectToTargetSqlMITaskOutput:
      type: object
      description: Output for the task that validates connection to Azure SQL Database Managed Instance.
      properties:
        id:
          type: string
          description: Result identifier
          readOnly: true
        targetServerVersion:
          type: string
          description: Target server version
          readOnly: true
        targetServerBrandVersion:
          type: string
          description: Target server brand version
          readOnly: true
        logins:
          type: array
          description: List of logins on the target server.
          items:
            type: string
          readOnly: true
        agentJobs:
          type: array
          description: List of agent jobs on the target server.
          items:
            type: string
          readOnly: true
        validationErrors:
          description: Validation errors
          type: array
          items:
            $ref: '#/components/schemas/ReportableException'
          readOnly: true
    DatabaseMigrationBaseProperties:
      required:
        - kind
      description: Database Migration Base Resource properties.
      type: object
      properties:
        kind:
          enum:
            - SqlMi
            - SqlVm
            - SqlDb
            - MongoToCosmosDbMongo
          type: string
          x-ms-enum:
            name: ResourceType
            modelAsString: true
        scope:
          description: Resource Id of the target resource.
          type: string
          x-ms-mutability:
            - read
            - create
        provisioningState:
          enum:
            - Provisioning
            - Updating
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          description: Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.
        migrationStatus:
          description: Migration status.
          type: string
          readOnly: true
        startedOn:
          format: date-time
          description: Database migration start time.
          type: string
          readOnly: true
        endedOn:
          format: date-time
          description: Database migration end time.
          type: string
          readOnly: true
        migrationService:
          description: Resource Id of the Migration Service.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.DataMigration/migrationServices
              - type: Microsoft.DataMigration/sqlMigrationServices
        migrationOperationId:
          description: ID for current migration operation.
          type: string
        migrationFailureError:
          $ref: '#/components/schemas/ErrorInfo'
          description: Error details in case of migration failure.
          readOnly: true
        provisioningError:
          description: Error message for migration provisioning failure, if any.
          type: string
      discriminator:
        propertyName: kind
    DatabaseMigrationPropertiesCosmosDbMongo:
      x-ms-discriminator-value: MongoToCosmosDbMongo
      description: Database Migration Resource properties for CosmosDb for Mongo.
      properties:
        kind:
          enum:
            - SqlMi
            - SqlVm
            - SqlDb
            - MongoToCosmosDbMongo
          type: string
          x-ms-enum:
            name: ResourceType
            modelAsString: true
        scope:
          description: Resource Id of the target resource.
          type: string
          x-ms-mutability:
            - read
            - create
        provisioningState:
          enum:
            - Provisioning
            - Updating
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          description: Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.
        migrationStatus:
          description: Migration status.
          type: string
          readOnly: true
        startedOn:
          format: date-time
          description: Database migration start time.
          type: string
          readOnly: true
        endedOn:
          format: date-time
          description: Database migration end time.
          type: string
          readOnly: true
        migrationService:
          description: Resource Id of the Migration Service.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.DataMigration/migrationServices
              - type: Microsoft.DataMigration/sqlMigrationServices
        migrationOperationId:
          description: ID for current migration operation.
          type: string
        migrationFailureError:
          $ref: '#/components/schemas/ErrorInfo'
          description: Error details in case of migration failure.
          readOnly: true
        provisioningError:
          description: Error message for migration provisioning failure, if any.
          type: string
        sourceMongoConnection:
          $ref: '#/components/schemas/MongoConnectionInformation'
          description: Source Mongo connection details.
        targetMongoConnection:
          $ref: '#/components/schemas/MongoConnectionInformation'
          description: Target Cosmos DB Mongo connection details.
        collectionList:
          description: List of Mongo Collections to be migrated.
          type: array
          items:
            $ref: '#/components/schemas/MongoMigrationCollection'
      type: object
    MongoMigrationProgressDetails:
      description: Detailed status of collection migration.
      type: object
      properties:
        migrationStatus:
          enum:
            - NotStarted
            - InProgress
            - Completed
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: MongoMigrationStatus
            modelAsString: true
          description: Migration Status
        migrationError:
          description: Migration Error
          type: string
          readOnly: true
        sourceDocumentCount:
          format: int64
          description: Source Document Count
          type: integer
          readOnly: true
        processedDocumentCount:
          format: int64
          description: Processed Document Count
          type: integer
          readOnly: true
        durationInSeconds:
          format: int32
          description: Migration duration
          type: integer
          readOnly: true
    MongoConnectionInformation:
      description: Mongo Connection
      type: object
      properties:
        host:
          description: Host of mongo connection.
          type: string
        port:
          format: int32
          description: Port of mongo connection.
          type: integer
        userName:
          description: User name to connect to Mongo.
          type: string
          x-ms-mutability:
            - create
            - update
        password:
          description: Password to connect to Mongo.
          type: string
          format: password
          x-ms-secret: true
          x-ms-mutability:
            - create
            - update
        useSsl:
          description: Whether to UseSsl or UseTls to connect to Mongo. Default is true.
          type: boolean
          x-ms-mutability:
            - create
            - update
        connectionString:
          description: ConnectionString to connect to Mongo.
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - create
            - update
    MongoMigrationCollection:
      description: Mongo source and target database and collection details.
      type: object
      properties:
        sourceDatabase:
          description: Source database name.
          type: string
        sourceCollection:
          description: Source collection name.
          type: string
        targetDatabase:
          description: Target database name.
          type: string
        targetCollection:
          description: Target collection name.
          type: string
        migrationProgressDetails:
          $ref: '#/components/schemas/MongoMigrationProgressDetails'
          description: Detailed migration status. Not included by default.
          readOnly: true
    DatabaseMigrationProperties:
      required:
        - kind
      description: Database Migration Resource properties.
      discriminator:
        propertyName: kind
      properties:
        kind:
          enum:
            - SqlMi
            - SqlVm
            - SqlDb
            - MongoToCosmosDbMongo
          type: string
          x-ms-enum:
            name: ResourceType
            modelAsString: true
        scope:
          description: Resource Id of the target resource.
          type: string
          x-ms-mutability:
            - read
            - create
        provisioningState:
          enum:
            - Provisioning
            - Updating
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          description: Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.
        migrationStatus:
          description: Migration status.
          type: string
          readOnly: true
        startedOn:
          format: date-time
          description: Database migration start time.
          type: string
          readOnly: true
        endedOn:
          format: date-time
          description: Database migration end time.
          type: string
          readOnly: true
        migrationService:
          description: Resource Id of the Migration Service.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.DataMigration/migrationServices
              - type: Microsoft.DataMigration/sqlMigrationServices
        migrationOperationId:
          description: ID for current migration operation.
          type: string
        migrationFailureError:
          $ref: '#/components/schemas/ErrorInfo'
          description: Error details in case of migration failure.
          readOnly: true
        provisioningError:
          description: Error message for migration provisioning failure, if any.
          type: string
        sourceSqlConnection:
          $ref: '#/components/schemas/SqlConnectionInformation'
          description: Source SQL Server connection details.
        sourceDatabaseName:
          description: Name of the source database.
          type: string
        sourceServerName:
          description: Name of the source sql server.
          type: string
          readOnly: true
        targetDatabaseCollation:
          description: Database collation to be used for the target database.
          type: string
      type: object
    DatabaseMigrationPropertiesSqlMi:
      x-ms-discriminator-value: SqlMi
      description: Database Migration Resource properties for SQL Managed Instance.
      properties:
        sourceSqlConnection:
          $ref: '#/components/schemas/SqlConnectionInformation'
          description: Source SQL Server connection details.
        sourceDatabaseName:
          description: Name of the source database.
          type: string
        sourceServerName:
          description: Name of the source sql server.
          type: string
          readOnly: true
        targetDatabaseCollation:
          description: Database collation to be used for the target database.
          type: string
        migrationStatusDetails:
          $ref: '#/components/schemas/MigrationStatusDetails'
          description: Detailed migration status. Not included by default.
          readOnly: true
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
          description: Backup configuration info.
        offlineConfiguration:
          $ref: '#/components/schemas/OfflineConfiguration'
          description: Offline configuration.
      type: object
    DatabaseMigrationPropertiesSqlVm:
      x-ms-discriminator-value: SqlVm
      description: Database Migration Resource properties for SQL Virtual Machine.
      properties:
        sourceSqlConnection:
          $ref: '#/components/schemas/SqlConnectionInformation'
          description: Source SQL Server connection details.
        sourceDatabaseName:
          description: Name of the source database.
          type: string
        sourceServerName:
          description: Name of the source sql server.
          type: string
          readOnly: true
        targetDatabaseCollation:
          description: Database collation to be used for the target database.
          type: string
        migrationStatusDetails:
          $ref: '#/components/schemas/MigrationStatusDetails'
          description: Detailed migration status. Not included by default.
          readOnly: true
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
          description: Backup configuration info.
        offlineConfiguration:
          $ref: '#/components/schemas/OfflineConfiguration'
          description: Offline configuration.
      type: object
    DatabaseMigrationPropertiesSqlDb:
      x-ms-discriminator-value: SqlDb
      description: Database Migration Resource properties for SQL database.
      properties:
        sourceSqlConnection:
          $ref: '#/components/schemas/SqlConnectionInformation'
          description: Source SQL Server connection details.
        sourceDatabaseName:
          description: Name of the source database.
          type: string
        sourceServerName:
          description: Name of the source sql server.
          type: string
          readOnly: true
        targetDatabaseCollation:
          description: Database collation to be used for the target database.
          type: string
        migrationStatusDetails:
          $ref: '#/components/schemas/SqlDbMigrationStatusDetails'
          description: Detailed migration status. Not included by default.
          readOnly: true
        targetSqlConnection:
          $ref: '#/components/schemas/SqlConnectionInformation'
          description: Target SQL DB connection details.
        offlineConfiguration:
          $ref: '#/components/schemas/SqlDbOfflineConfiguration'
          description: Offline configuration.
          readOnly: true
        tableList:
          description: List of tables to copy.
          type: array
          items:
            type: string
      type: object
    SqlDbMigrationStatusDetails:
      description: Detailed status of current Sql Db migration.
      type: object
      properties:
        migrationState:
          description: Current State of Migration.
          type: string
          readOnly: true
        sqlDataCopyErrors:
          description: Sql Data Copy errors, if any.
          type: array
          items:
            type: string
          readOnly: true
        listOfCopyProgressDetails:
          description: Details on progress of ADF copy activities.
          type: array
          items:
            $ref: '#/components/schemas/CopyProgressDetails'
          x-ms-identifiers: []
          readOnly: true
    SqlDbOfflineConfiguration:
      description: Offline configuration
      type: object
      properties:
        offline:
          description: Offline migration
          type: boolean
          readOnly: true
    CopyProgressDetails:
      description: Details on progress of ADF copy activity
      type: object
      properties:
        tableName:
          description: Table Name
          type: string
          readOnly: true
        status:
          description: Status of the Copy activity (InProgress, Succeeded, Failed, Canceled).
          type: string
          readOnly: true
        parallelCopyType:
          description: Type of parallel copy (Dynamic range, Physical partition, none).
          type: string
          readOnly: true
        usedParallelCopies:
          format: int32
          description: The degree of parallelization.
          type: integer
          readOnly: true
        dataRead:
          format: int64
          description: Bytes read
          type: integer
          readOnly: true
        dataWritten:
          format: int64
          description: Bytes written
          type: integer
          readOnly: true
        rowsRead:
          format: int64
          description: Rows read
          type: integer
          readOnly: true
        rowsCopied:
          format: int64
          description: Rows Copied
          type: integer
          readOnly: true
        copyStart:
          format: date-time
          description: Copy Start
          type: string
          readOnly: true
        copyThroughput:
          format: double
          description: Copy throughput in KBps
          type: number
          readOnly: true
        copyDuration:
          format: int32
          description: Copy Duration in seconds
          type: integer
          readOnly: true
    MigrationStatusDetails:
      description: Detailed status of current migration.
      type: object
      properties:
        migrationState:
          description: Current State of Migration.
          type: string
          readOnly: true
        fullBackupSetInfo:
          $ref: '#/components/schemas/SqlBackupSetInfo'
          description: Details of full backup set.
          readOnly: true
        lastRestoredBackupSetInfo:
          $ref: '#/components/schemas/SqlBackupSetInfo'
          description: Last applied backup set information.
          readOnly: true
        activeBackupSets:
          description: Backup sets that are currently active.
          type: array
          items:
            $ref: '#/components/schemas/SqlBackupSetInfo'
          readOnly: true
        invalidFiles:
          description: Files that are not valid backup files.
          type: array
          items:
            type: string
          readOnly: true
        blobContainerName:
          description: Name of blob container.
          type: string
          readOnly: true
        isFullBackupRestored:
          description: Whether full backup has been applied to the target database or not.
          type: boolean
          readOnly: true
        restoreBlockingReason:
          description: Restore blocking reason, if any
          type: string
          readOnly: true
        completeRestoreErrorMessage:
          description: Complete restore error message, if any
          type: string
          readOnly: true
        fileUploadBlockingErrors:
          description: File upload blocking errors, if any.
          type: array
          items:
            type: string
          readOnly: true
        currentRestoringFilename:
          description: File name that is currently being restored.
          type: string
          readOnly: true
        lastRestoredFilename:
          description: Last restored file name.
          type: string
          readOnly: true
        pendingLogBackupsCount:
          format: int32
          description: Total pending log backups.
          type: integer
          readOnly: true
    SqlConnectionInformation:
      description: Source SQL Connection
      type: object
      properties:
        dataSource:
          description: Data source.
          type: string
        authentication:
          description: Authentication type.
          type: string
        userName:
          description: User name to connect to source SQL.
          type: string
        password:
          description: Password to connect to source SQL.
          type: string
          format: password
          x-ms-secret: true
        encryptConnection:
          description: Whether to encrypt connection or not.
          type: boolean
        trustServerCertificate:
          description: Whether to trust server certificate or not.
          type: boolean
    BackupConfiguration:
      description: Backup Configuration
      type: object
      properties:
        sourceLocation:
          $ref: '#/components/schemas/SourceLocation'
          description: Source location of backups.
        targetLocation:
          $ref: '#/components/schemas/TargetLocation'
          description: Target location for copying backups.
    OfflineConfiguration:
      description: Offline configuration
      type: object
      properties:
        offline:
          description: Offline migration
          type: boolean
        lastBackupName:
          description: Last backup name for offline migration. This is optional for migrations from file share. If it is not provided, then the service will determine the last backup file name based on latest backup files present in file share.
          type: string
    ErrorInfo:
      description: Error details
      type: object
      properties:
        code:
          description: Error code.
          type: string
          readOnly: true
        message:
          description: Error message.
          type: string
          readOnly: true
    SqlBackupSetInfo:
      description: Information of backup set
      type: object
      properties:
        backupSetId:
          format: uuid
          description: Backup set id.
          type: string
          readOnly: true
        firstLSN:
          description: First LSN of the backup set.
          type: string
          readOnly: true
        lastLSN:
          description: Last LSN of the backup set.
          type: string
          readOnly: true
        backupType:
          description: Backup type.
          type: string
          readOnly: true
        listOfBackupFiles:
          description: List of files in the backup set.
          type: array
          items:
            $ref: '#/components/schemas/SqlBackupFileInfo'
          readOnly: true
        backupStartDate:
          format: date-time
          description: Backup start date.
          type: string
          readOnly: true
        backupFinishDate:
          format: date-time
          description: Backup end time.
          type: string
          readOnly: true
        isBackupRestored:
          description: Whether this backup set has been restored or not.
          type: boolean
          readOnly: true
        hasBackupChecksums:
          description: Has Backup Checksums
          type: boolean
          readOnly: true
        familyCount:
          format: int32
          description: Media family count
          type: integer
          readOnly: true
        ignoreReasons:
          description: The reasons why the backup set is ignored
          type: array
          items:
            type: string
          readOnly: true
    SourceLocation:
      description: Source Location details of backups.
      type: object
      properties:
        fileShare:
          $ref: '#/components/schemas/SqlFileShare'
          description: Source File share.
        azureBlob:
          $ref: '#/components/schemas/AzureBlob'
          description: Source Azure Blob.
        fileStorageType:
          description: Backup storage Type.
          type: string
          readOnly: true
    TargetLocation:
      description: Target Location details for optional copy of backups
      type: object
      properties:
        storageAccountResourceId:
          description: Resource Id of the storage account copying backups.
          type: string
        accountKey:
          description: Storage Account Key.
          type: string
    SqlBackupFileInfo:
      description: Information of backup file
      type: object
      properties:
        fileName:
          description: File name.
          type: string
          readOnly: true
        status:
          description: Status of the file. (Initial, Uploading, Uploaded, Restoring, Restored or Skipped)
          type: string
          readOnly: true
        totalSize:
          format: int64
          description: File size in bytes
          type: integer
          readOnly: true
        dataRead:
          format: int64
          description: Bytes read
          type: integer
          readOnly: true
        dataWritten:
          format: int64
          description: Bytes written
          type: integer
          readOnly: true
        copyThroughput:
          format: double
          description: Copy throughput in KBps
          type: number
          readOnly: true
        copyDuration:
          format: int32
          description: Copy Duration in seconds
          type: integer
          readOnly: true
        familySequenceNumber:
          format: int32
          description: Media family sequence number
          type: integer
          readOnly: true
    SqlFileShare:
      description: File share
      type: object
      properties:
        path:
          description: Location as SMB share or local drive where backups are placed.
          type: string
        username:
          description: Username to access the file share location for backups.
          type: string
        password:
          description: Password for username to access file share location.
          type: string
          format: password
          x-ms-secret: true
          x-ms-mutability:
            - create
            - update
    AzureBlob:
      description: Azure Blob Details
      type: object
      properties:
        storageAccountResourceId:
          description: Resource Id of the storage account where backups are stored.
          type: string
        accountKey:
          description: Storage Account Key.
          type: string
          x-ms-secret: true
        blobContainerName:
          description: Blob container name where backups are stored.
          type: string
    DatabaseMigrationBase:
      description: Database Migration Resource.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseMigrationBaseProperties'
          x-ms-client-flatten: false
      type: object
    DatabaseMigration:
      description: Database Migration Resource.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseMigrationProperties'
          x-ms-client-flatten: false
      type: object
    DatabaseMigrationCosmosDbMongo:
      description: Database Migration Resource for Mongo to CosmosDb.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseMigrationPropertiesCosmosDbMongo'
          x-ms-client-flatten: true
      type: object
    DatabaseMigrationSqlMi:
      description: Database Migration Resource for SQL Managed Instance.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseMigrationPropertiesSqlMi'
          x-ms-client-flatten: false
      type: object
    DatabaseMigrationSqlVm:
      description: Database Migration Resource for SQL Virtual Machine.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseMigrationPropertiesSqlVm'
          x-ms-client-flatten: false
      type: object
    DatabaseMigrationSqlDb:
      description: Database Migration Resource for SQL Database.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseMigrationPropertiesSqlDb'
          x-ms-client-flatten: false
      type: object
    DatabaseMigrationListResult:
      description: A list of Database Migrations.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseMigration'
          readOnly: true
        nextLink:
          type: string
          readOnly: true
    DatabaseMigrationBaseListResult:
      description: A list of Database Migrations.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseMigrationBase'
          readOnly: true
        nextLink:
          type: string
          readOnly: true
    DatabaseMigrationCosmosDbMongoListResult:
      description: A list of Database Migrations.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
          readOnly: true
        nextLink:
          type: string
          readOnly: true
    MigrationOperationInput:
      description: Migration Operation Input
      type: object
      properties:
        migrationOperationId:
          format: uuid
          description: ID tracking migration operation.
          type: string
    OperationsDefinition:
      properties:
        name:
          type: string
          readOnly: true
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationsDisplayDefinition'
          readOnly: true
        origin:
          enum:
            - user
            - system
          type: string
          readOnly: true
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
        properties:
          type: object
          additionalProperties:
            type: object
          readOnly: true
          x-ms-client-flatten: false
      type: object
    OperationsDisplayDefinition:
      type: object
      properties:
        provider:
          type: string
          readOnly: true
        resource:
          type: string
          readOnly: true
        operation:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
    SystemData:
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
        createdByType:
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          format: date-time
          type: string
        lastModifiedBy:
          type: string
        lastModifiedByType:
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          format: date-time
          type: string
    MigrationServiceProperties:
      description: The Migration Service properties.
      type: object
      properties:
        provisioningState:
          enum:
            - Provisioning
            - Updating
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          description: Provisioning state to track the async operation status.
        integrationRuntimeState:
          description: Current state of the Integration runtime.
          type: string
          readOnly: true
    MigrationService:
      description: A Migration Service.
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
        properties:
          $ref: '#/components/schemas/MigrationServiceProperties'
          x-ms-client-flatten: true
      type: object
    MigrationServiceUpdate:
      description: An update to a Migration Service.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
    MigrationServiceListResult:
      description: A list of Migration Service.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MigrationService'
          readOnly: true
        nextLink:
          type: string
          readOnly: true
    SqlMigrationServiceProperties:
      description: The SQL Migration Service properties.
      type: object
      properties:
        provisioningState:
          description: Provisioning state to track the async operation status.
          type: string
          readOnly: true
        integrationRuntimeState:
          description: Current state of the Integration runtime.
          type: string
          readOnly: true
    SqlMigrationService:
      description: A SQL Migration Service.
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
        properties:
          $ref: '#/components/schemas/SqlMigrationServiceProperties'
          x-ms-client-flatten: true
      type: object
    SqlMigrationServiceUpdate:
      description: An update to a SQL Migration Service.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
    SqlMigrationListResult:
      description: A list of SQL Migration Service.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SqlMigrationService'
          readOnly: true
        nextLink:
          type: string
          readOnly: true
    AuthenticationKeys:
      description: An authentication key.
      type: object
      properties:
        authKey1:
          description: The first authentication key.
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - read
            - create
        authKey2:
          description: The second authentication key.
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - read
            - create
    RegenAuthKeys:
      description: An authentication key to regenerate.
      type: object
      properties:
        keyName:
          description: The name of authentication key to generate.
          type: string
          x-ms-mutability:
            - read
            - create
        authKey1:
          description: The first authentication key.
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - read
            - create
        authKey2:
          description: The second authentication key.
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - read
            - create
    deleteNode:
      description: Details of node to be deleted.
      type: object
      properties:
        nodeName:
          description: The name of node to delete.
          type: string
          x-ms-mutability:
            - read
            - create
        integrationRuntimeName:
          description: The name of integration runtime.
          type: string
          x-ms-mutability:
            - read
            - create
    IntegrationRuntimeMonitoringData:
      description: Integration Runtime Monitoring Data.
      type: object
      properties:
        name:
          description: The name of Integration Runtime.
          type: string
          readOnly: true
        nodes:
          description: Integration Runtime node monitoring data.
          type: array
          items:
            $ref: '#/components/schemas/NodeMonitoringData'
          readOnly: true
    NodeMonitoringData:
      type: object
      properties:
        additionalProperties:
          description: ' Unmatched properties from the message are deserialized in this collection.'
          type: object
          additionalProperties:
            type: object
          readOnly: true
        nodeName:
          description: Name of the integration runtime node.
          type: string
          readOnly: true
        availableMemoryInMB:
          format: int32
          description: Available memory (MB) on the integration runtime node.
          type: integer
          readOnly: true
        cpuUtilization:
          format: int32
          description: CPU percentage on the integration runtime node.
          type: integer
          readOnly: true
        concurrentJobsLimit:
          format: int32
          description: Maximum concurrent jobs on the integration runtime node.
          type: integer
          readOnly: true
        concurrentJobsRunning:
          format: int32
          description: The number of jobs currently running on the integration runtime node.
          type: integer
          readOnly: true
        maxConcurrentJobs:
          format: int32
          description: The maximum concurrent jobs in this integration runtime.
          type: integer
          readOnly: true
        sentBytes:
          format: double
          description: Sent bytes on the integration runtime node.
          type: number
          readOnly: true
        receivedBytes:
          format: double
          description: Received bytes on the integration runtime node.
          type: number
          readOnly: true
    MongoDbCancelCommand:
      x-ms-discriminator-value: cancel
      description: Properties for the command that cancels a migration in whole or in part
      properties:
        input:
          $ref: '#/components/schemas/MongoDbCommandInput'
          description: Command input
        commandType:
          enum:
            - Migrate.Sync.Complete.Database
            - Migrate.SqlServer.AzureDbSqlMi.Complete
            - cancel
            - finish
            - restart
          x-ms-enum:
            name: CommandType
            modelAsString: true
          description: Command type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the command. This is ignored if submitted.
          enum:
            - Unknown
            - Accepted
            - Running
            - Succeeded
            - Failed
          x-ms-enum:
            name: CommandState
            modelAsString: true
          readOnly: true
      type: object
    MongoDbClusterInfo:
      type: object
      description: Describes a MongoDB data source
      properties:
        databases:
          type: array
          items:
            $ref: '#/components/schemas/MongoDbDatabaseInfo'
          description: A list of non-system databases in the cluster
        supportsSharding:
          type: boolean
          description: Whether the cluster supports sharded collections
        type:
          type: string
          description: The type of data source
          enum:
            - BlobContainer
            - CosmosDb
            - MongoDb
          x-ms-enum:
            name: MongoDbClusterType
            modelAsString: true
        version:
          type: string
          description: The version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is BlobContainer.
      required:
        - databases
        - supportsSharding
        - type
        - version
    MongoDbCollectionInfo:
      description: Describes a supported collection within a MongoDB database
      required:
        - databaseName
        - isCapped
        - isSystemCollection
        - isView
        - supportsSharding
      properties:
        databaseName:
          type: string
          description: The name of the database containing the collection
        isCapped:
          type: boolean
          description: Whether the collection is a capped collection (i.e. whether it has a fixed size and acts like a circular buffer)
        isSystemCollection:
          type: boolean
          description: Whether the collection is system collection
        isView:
          type: boolean
          description: Whether the collection is a view of another collection
        shardKey:
          $ref: '#/components/schemas/MongoDbShardKeyInfo'
          description: The shard key on the collection, or null if the collection is not sharded
        supportsSharding:
          type: boolean
          description: Whether the database has sharding enabled. Note that the migration task will enable sharding on the target if necessary.
        viewOf:
          type: string
          description: The name of the collection that this is a view of, if IsView is true
        averageDocumentSize:
          type: integer
          format: int64
          description: The average document size, or -1 if the average size is unknown
        dataSize:
          type: integer
          format: int64
          description: The estimated total data size, in bytes, or -1 if the size is unknown.
        documentCount:
          type: integer
          format: int64
          description: The estimated total number of documents, or -1 if the document count is unknown
        name:
          type: string
          description: The unqualified name of the database or collection
        qualifiedName:
          type: string
          description: The qualified name of the database or collection. For a collection, this is the database-qualified name.
      type: object
    MongoDbCollectionProgress:
      x-ms-discriminator-value: Collection
      description: Describes the progress of a collection
      properties:
        bytesCopied:
          type: integer
          format: int64
          description: The number of document bytes copied during the Copying stage
        documentsCopied:
          type: integer
          format: int64
          description: The number of documents copied during the Copying stage
        elapsedTime:
          type: string
          description: The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)
        errors:
          type: object
          description: The errors and warnings that have occurred for the current object. The keys are the error codes.
          additionalProperties:
            $ref: '#/components/schemas/MongoDbError'
        eventsPending:
          type: integer
          format: int64
          description: The number of oplog events awaiting replay
        eventsReplayed:
          type: integer
          format: int64
          description: The number of oplog events replayed so far
        lastEventTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event received, or null if no oplog event has been received yet
        lastReplayTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet
        name:
          type: string
          description: The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the database name. For the overall migration, this is null.
        qualifiedName:
          type: string
          description: The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this is the database name. For the overall migration, this is null.
        resultType:
          type: string
          description: The type of progress object
          enum:
            - Migration
            - Database
            - Collection
        state:
          type: string
          enum:
            - NotStarted
            - ValidatingInput
            - Initializing
            - Restarting
            - Copying
            - InitialReplay
            - Replaying
            - Finalizing
            - Complete
            - Canceled
            - Failed
          x-ms-enum:
            name: MongoDbMigrationState
            modelAsString: true
        totalBytes:
          type: integer
          format: int64
          description: The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown
        totalDocuments:
          type: integer
          format: int64
          description: The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown
      type: object
    MongoDbCollectionSettings:
      type: object
      description: Describes how an individual MongoDB collection should be migrated
      properties:
        canDelete:
          type: boolean
          description: Whether the migrator is allowed to drop the target collection in the course of performing a migration. The default is true.
        shardKey:
          $ref: '#/components/schemas/MongoDbShardKeySetting'
        targetRUs:
          type: integer
          format: int32
          description: The RUs that should be configured on a CosmosDB target, or null to use the default. This has no effect on non-CosmosDB targets.
    MongoDbCommandInput:
      type: object
      description: Describes the input to the 'cancel' and 'restart' MongoDB migration commands
      properties:
        objectName:
          type: string
          description: The qualified name of a database or collection to act upon, or null to act upon the entire migration
    MongoDbDatabaseInfo:
      description: Describes a database within a MongoDB data source
      required:
        - collections
        - supportsSharding
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MongoDbCollectionInfo'
          description: A list of supported collections in a MongoDB database
        supportsSharding:
          type: boolean
          description: Whether the database has sharding enabled. Note that the migration task will enable sharding on the target if necessary.
        averageDocumentSize:
          type: integer
          format: int64
          description: The average document size, or -1 if the average size is unknown
        dataSize:
          type: integer
          format: int64
          description: The estimated total data size, in bytes, or -1 if the size is unknown.
        documentCount:
          type: integer
          format: int64
          description: The estimated total number of documents, or -1 if the document count is unknown
        name:
          type: string
          description: The unqualified name of the database or collection
        qualifiedName:
          type: string
          description: The qualified name of the database or collection. For a collection, this is the database-qualified name.
      type: object
    MongoDbDatabaseProgress:
      x-ms-discriminator-value: Database
      description: Describes the progress of a database
      properties:
        collections:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MongoDbCollectionProgress'
          description: The progress of the collections in the database. The keys are the unqualified names of the collections
        bytesCopied:
          type: integer
          format: int64
          description: The number of document bytes copied during the Copying stage
        documentsCopied:
          type: integer
          format: int64
          description: The number of documents copied during the Copying stage
        elapsedTime:
          type: string
          description: The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)
        errors:
          type: object
          description: The errors and warnings that have occurred for the current object. The keys are the error codes.
          additionalProperties:
            $ref: '#/components/schemas/MongoDbError'
        eventsPending:
          type: integer
          format: int64
          description: The number of oplog events awaiting replay
        eventsReplayed:
          type: integer
          format: int64
          description: The number of oplog events replayed so far
        lastEventTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event received, or null if no oplog event has been received yet
        lastReplayTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet
        name:
          type: string
          description: The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the database name. For the overall migration, this is null.
        qualifiedName:
          type: string
          description: The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this is the database name. For the overall migration, this is null.
        resultType:
          type: string
          description: The type of progress object
          enum:
            - Migration
            - Database
            - Collection
        state:
          type: string
          enum:
            - NotStarted
            - ValidatingInput
            - Initializing
            - Restarting
            - Copying
            - InitialReplay
            - Replaying
            - Finalizing
            - Complete
            - Canceled
            - Failed
          x-ms-enum:
            name: MongoDbMigrationState
            modelAsString: true
        totalBytes:
          type: integer
          format: int64
          description: The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown
        totalDocuments:
          type: integer
          format: int64
          description: The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown
      type: object
    MongoDbDatabaseSettings:
      type: object
      description: Describes how an individual MongoDB database should be migrated
      properties:
        collections:
          type: object
          description: The collections on the source database to migrate to the target. The keys are the unqualified names of the collections.
          additionalProperties:
            $ref: '#/components/schemas/MongoDbCollectionSettings'
        targetRUs:
          type: integer
          format: int32
          description: The RUs that should be configured on a CosmosDB target, or null to use the default, or 0 if throughput should not be provisioned for the database. This has no effect on non-CosmosDB targets.
      required:
        - collections
    MongoDbError:
      type: object
      description: Describes an error or warning that occurred during a MongoDB migration
      properties:
        code:
          type: string
          description: The non-localized, machine-readable code that describes the error or warning
        count:
          type: integer
          format: int32
          description: The number of times the error or warning has occurred
        message:
          type: string
          description: The localized, human-readable message that describes the error or warning
        type:
          type: string
          description: The type of error or warning
          enum:
            - Error
            - ValidationError
            - Warning
          x-ms-enum:
            name: MongoDbErrorType
            modelAsString: true
    MongoDbFinishCommand:
      x-ms-discriminator-value: finish
      description: Properties for the command that finishes a migration in whole or in part
      properties:
        input:
          $ref: '#/components/schemas/MongoDbFinishCommandInput'
          description: Command input
        commandType:
          enum:
            - Migrate.Sync.Complete.Database
            - Migrate.SqlServer.AzureDbSqlMi.Complete
            - cancel
            - finish
            - restart
          x-ms-enum:
            name: CommandType
            modelAsString: true
          description: Command type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the command. This is ignored if submitted.
          enum:
            - Unknown
            - Accepted
            - Running
            - Succeeded
            - Failed
          x-ms-enum:
            name: CommandState
            modelAsString: true
          readOnly: true
      type: object
    MongoDbFinishCommandInput:
      description: Describes the input to the 'finish' MongoDB migration command
      required:
        - immediate
      properties:
        immediate:
          type: boolean
          description: If true, replication for the affected objects will be stopped immediately. If false, the migrator will finish replaying queued events before finishing the replication.
        objectName:
          type: string
          description: The qualified name of a database or collection to act upon, or null to act upon the entire migration
      type: object
    MongoDbMigrationSettings:
      type: object
      description: Describes how a MongoDB data migration should be performed
      properties:
        boostRUs:
          type: integer
          format: int32
          description: The RU limit on a CosmosDB target that collections will be temporarily increased to (if lower) during the initial copy of a migration, from 10,000 to 1,000,000, or 0 to use the default boost (which is generally the maximum), or null to not boost the RUs. This setting has no effect on non-CosmosDB targets.
        databases:
          type: object
          description: The databases on the source cluster to migrate to the target. The keys are the names of the databases.
          additionalProperties:
            $ref: '#/components/schemas/MongoDbDatabaseSettings'
        replication:
          type: string
          description: Describes how changes will be replicated from the source to the target. The default is OneTime.
          enum:
            - Disabled
            - OneTime
            - Continuous
          x-ms-enum:
            name: MongoDbReplication
            modelAsString: true
        source:
          $ref: '#/components/schemas/MongoDbConnectionInfo'
          description: Settings used to connect to the source cluster
        target:
          $ref: '#/components/schemas/MongoDbConnectionInfo'
          description: Settings used to connect to the target cluster
        throttling:
          $ref: '#/components/schemas/MongoDbThrottlingSettings'
          description: Settings used to limit the resource usage of the migration
      required:
        - databases
        - source
        - target
    MongoDbProgress:
      type: object
      description: Base class for MongoDB migration outputs
      properties:
        bytesCopied:
          type: integer
          format: int64
          description: The number of document bytes copied during the Copying stage
        documentsCopied:
          type: integer
          format: int64
          description: The number of documents copied during the Copying stage
        elapsedTime:
          type: string
          description: The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)
        errors:
          type: object
          description: The errors and warnings that have occurred for the current object. The keys are the error codes.
          additionalProperties:
            $ref: '#/components/schemas/MongoDbError'
        eventsPending:
          type: integer
          format: int64
          description: The number of oplog events awaiting replay
        eventsReplayed:
          type: integer
          format: int64
          description: The number of oplog events replayed so far
        lastEventTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event received, or null if no oplog event has been received yet
        lastReplayTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet
        name:
          type: string
          description: The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the database name. For the overall migration, this is null.
        qualifiedName:
          type: string
          description: The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this is the database name. For the overall migration, this is null.
        resultType:
          type: string
          description: The type of progress object
          enum:
            - Migration
            - Database
            - Collection
        state:
          type: string
          enum:
            - NotStarted
            - ValidatingInput
            - Initializing
            - Restarting
            - Copying
            - InitialReplay
            - Replaying
            - Finalizing
            - Complete
            - Canceled
            - Failed
          x-ms-enum:
            name: MongoDbMigrationState
            modelAsString: true
        totalBytes:
          type: integer
          format: int64
          description: The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown
        totalDocuments:
          type: integer
          format: int64
          description: The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown
      required:
        - bytesCopied
        - documentsCopied
        - elapsedTime
        - errors
        - eventsPending
        - eventsReplayed
        - resultType
        - state
        - totalBytes
        - totalDocuments
      discriminator:
        propertyName: resultType
    MongoDbMigrationProgress:
      x-ms-discriminator-value: Migration
      description: Describes the progress of the overall migration
      properties:
        databases:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MongoDbDatabaseProgress'
          description: The progress of the databases in the migration. The keys are the names of the databases
        bytesCopied:
          type: integer
          format: int64
          description: The number of document bytes copied during the Copying stage
        documentsCopied:
          type: integer
          format: int64
          description: The number of documents copied during the Copying stage
        elapsedTime:
          type: string
          description: The elapsed time in the format [ddd.]hh:mm:ss[.fffffff] (i.e. TimeSpan format)
        errors:
          type: object
          description: The errors and warnings that have occurred for the current object. The keys are the error codes.
          additionalProperties:
            $ref: '#/components/schemas/MongoDbError'
        eventsPending:
          type: integer
          format: int64
          description: The number of oplog events awaiting replay
        eventsReplayed:
          type: integer
          format: int64
          description: The number of oplog events replayed so far
        lastEventTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event received, or null if no oplog event has been received yet
        lastReplayTime:
          type: string
          format: date-time
          description: The timestamp of the last oplog event replayed, or null if no oplog event has been replayed yet
        name:
          type: string
          description: The name of the progress object. For a collection, this is the unqualified collection name. For a database, this is the database name. For the overall migration, this is null.
        qualifiedName:
          type: string
          description: The qualified name of the progress object. For a collection, this is the database-qualified name. For a database, this is the database name. For the overall migration, this is null.
        resultType:
          type: string
          description: The type of progress object
          enum:
            - Migration
            - Database
            - Collection
        state:
          type: string
          enum:
            - NotStarted
            - ValidatingInput
            - Initializing
            - Restarting
            - Copying
            - InitialReplay
            - Replaying
            - Finalizing
            - Complete
            - Canceled
            - Failed
          x-ms-enum:
            name: MongoDbMigrationState
            modelAsString: true
        totalBytes:
          type: integer
          format: int64
          description: The total number of document bytes on the source at the beginning of the Copying stage, or -1 if the total size was unknown
        totalDocuments:
          type: integer
          format: int64
          description: The total number of documents on the source at the beginning of the Copying stage, or -1 if the total count was unknown
      type: object
    MongoDbObjectInfo:
      type: object
      description: Describes a database or collection within a MongoDB data source
      properties:
        averageDocumentSize:
          type: integer
          format: int64
          description: The average document size, or -1 if the average size is unknown
        dataSize:
          type: integer
          format: int64
          description: The estimated total data size, in bytes, or -1 if the size is unknown.
        documentCount:
          type: integer
          format: int64
          description: The estimated total number of documents, or -1 if the document count is unknown
        name:
          type: string
          description: The unqualified name of the database or collection
        qualifiedName:
          type: string
          description: The qualified name of the database or collection. For a collection, this is the database-qualified name.
      required:
        - averageDocumentSize
        - dataSize
        - documentCount
        - name
        - qualifiedName
    MongoDbRestartCommand:
      x-ms-discriminator-value: restart
      description: Properties for the command that restarts a migration in whole or in part
      properties:
        input:
          $ref: '#/components/schemas/MongoDbCommandInput'
          description: Command input
        commandType:
          enum:
            - Migrate.Sync.Complete.Database
            - Migrate.SqlServer.AzureDbSqlMi.Complete
            - cancel
            - finish
            - restart
          x-ms-enum:
            name: CommandType
            modelAsString: true
          description: Command type.
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ODataError'
          description: Array of errors. This is ignored if submitted.
          readOnly: true
        state:
          type: string
          description: The state of the command. This is ignored if submitted.
          enum:
            - Unknown
            - Accepted
            - Running
            - Succeeded
            - Failed
          x-ms-enum:
            name: CommandState
            modelAsString: true
          readOnly: true
      type: object
    MongoDbShardKeyField:
      type: object
      description: Describes a field reference within a MongoDB shard key
      properties:
        name:
          type: string
          description: The name of the field
        order:
          type: string
          description: The field ordering
          enum:
            - Forward
            - Reverse
            - Hashed
          x-ms-enum:
            name: MongoDbShardKeyOrder
            modelAsString: true
      required:
        - name
        - order
    MongoDbShardKeyInfo:
      type: object
      description: Describes a MongoDB shard key
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/MongoDbShardKeyField'
          description: The fields within the shard key
        isUnique:
          type: boolean
          description: Whether the shard key is unique
      required:
        - fields
        - isUnique
    MongoDbShardKeySetting:
      type: object
      description: Describes a MongoDB shard key
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/MongoDbShardKeyField'
          description: The fields within the shard key
        isUnique:
          type: boolean
          description: Whether the shard key is unique
      required:
        - fields
    MongoDbThrottlingSettings:
      type: object
      description: Specifies resource limits for the migration
      properties:
        minFreeCpu:
          type: integer
          format: int32
          description: The percentage of CPU time that the migrator will try to avoid using, from 0 to 100
        minFreeMemoryMb:
          type: integer
          format: int32
          description: The number of megabytes of RAM that the migrator will try to avoid using
        maxParallelism:
          type: integer
          format: int32
          description: The maximum number of work items (e.g. collection copies) that will be processed in parallel
  x-stackQL-resources:
    resource_skus_skus:
      id: azure.data_migration.resource_skus_skus
      name: resource_skus_skus
      title: resource_skus_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataMigration~1skus?api-version=2023-07-15-preview/get'
            operationId: ResourceSkusSkus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceSkusResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_skus_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    services:
      id: azure.data_migration.services
      name: services
      title: services
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}?api-version=2023-07-15-preview/put'
            operationId: Services_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataMigrationService
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}?api-version=2023-07-15-preview/get'
            operationId: Services_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataMigrationService
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}?api-version=2023-07-15-preview/delete'
            operationId: Services_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}?api-version=2023-07-15-preview/patch'
            operationId: Services_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataMigrationService
        check_status:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1checkStatus?api-version=2023-07-15-preview/post'
            operationId: Services_CheckStatus
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataMigrationServiceStatusResponse
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1start?api-version=2023-07-15-preview/post'
            operationId: Services_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1stop?api-version=2023-07-15-preview/post'
            operationId: Services_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_children_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1checkNameAvailability?api-version=2023-07-15-preview/post'
            operationId: Services_CheckChildrenNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailabilityResponse
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services?api-version=2023-07-15-preview/get'
            operationId: Services_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataMigrationServiceList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataMigration~1services?api-version=2023-07-15-preview/get'
            operationId: Services_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataMigrationServiceList
            objectKey: $.value
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataMigration~1locations~1{location}~1checkNameAvailability?api-version=2023-07-15-preview/post'
            operationId: Services_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NameAvailabilityResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/services/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/services/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    services_skus:
      id: azure.data_migration.services_skus
      name: services_skus
      title: services_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1skus?api-version=2023-07-15-preview/get'
            operationId: ServicesSkus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceSkuList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    tasks:
      id: azure.data_migration.tasks
      name: tasks
      title: tasks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1tasks?api-version=2023-07-15-preview/get'
            operationId: Tasks_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TaskList
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1tasks~1{taskName}?api-version=2023-07-15-preview/put'
            operationId: Tasks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1tasks~1{taskName}?api-version=2023-07-15-preview/get'
            operationId: Tasks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1tasks~1{taskName}?api-version=2023-07-15-preview/delete'
            operationId: Tasks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1tasks~1{taskName}?api-version=2023-07-15-preview/patch'
            operationId: Tasks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1tasks~1{taskName}~1cancel?api-version=2023-07-15-preview/post'
            operationId: Tasks_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
        command:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1tasks~1{taskName}~1command?api-version=2023-07-15-preview/post'
            operationId: Tasks_Command
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommandProperties
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/get'
          - $ref: '#/components/x-stackQL-resources/tasks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/delete'
    service_tasks:
      id: azure.data_migration.service_tasks
      name: service_tasks
      title: service_tasks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1serviceTasks?api-version=2023-07-15-preview/get'
            operationId: ServiceTasks_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TaskList
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1serviceTasks~1{taskName}?api-version=2023-07-15-preview/put'
            operationId: ServiceTasks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1serviceTasks~1{taskName}?api-version=2023-07-15-preview/get'
            operationId: ServiceTasks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1serviceTasks~1{taskName}?api-version=2023-07-15-preview/delete'
            operationId: ServiceTasks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1serviceTasks~1{taskName}?api-version=2023-07-15-preview/patch'
            operationId: ServiceTasks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1serviceTasks~1{taskName}~1cancel?api-version=2023-07-15-preview/post'
            operationId: ServiceTasks_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectTask
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_tasks/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_tasks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_tasks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/service_tasks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_tasks/methods/delete'
    projects:
      id: azure.data_migration.projects
      name: projects
      title: projects
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects?api-version=2023-07-15-preview/get'
            operationId: Projects_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectList
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}?api-version=2023-07-15-preview/put'
            operationId: Projects_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Project
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}?api-version=2023-07-15-preview/get'
            operationId: Projects_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Project
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}?api-version=2023-07-15-preview/delete'
            operationId: Projects_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}?api-version=2023-07-15-preview/patch'
            operationId: Projects_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Project
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/projects/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete'
    usages:
      id: azure.data_migration.usages
      name: usages
      title: usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataMigration~1locations~1{location}~1usages?api-version=2023-07-15-preview/get'
            operationId: Usages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    files:
      id: azure.data_migration.files
      name: files
      title: files
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1files?api-version=2023-07-15-preview/get'
            operationId: Files_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1files~1{fileName}?api-version=2023-07-15-preview/get'
            operationId: Files_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectFile
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1files~1{fileName}?api-version=2023-07-15-preview/put'
            operationId: Files_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectFile
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1files~1{fileName}?api-version=2023-07-15-preview/delete'
            operationId: Files_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1files~1{fileName}?api-version=2023-07-15-preview/patch'
            operationId: Files_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectFile
        read:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1files~1{fileName}~1read?api-version=2023-07-15-preview/post'
            operationId: Files_Read
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileStorageInfo
        read_write:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{groupName}~1providers~1Microsoft.DataMigration~1services~1{serviceName}~1projects~1{projectName}~1files~1{fileName}~1readwrite?api-version=2023-07-15-preview/post'
            operationId: Files_ReadWrite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FileStorageInfo
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/files/methods/get'
          - $ref: '#/components/x-stackQL-resources/files/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/files/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/files/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/files/methods/delete'
    database_migrations_mongo_to_cosmos_db_ru_mongo:
      id: azure.data_migration.database_migrations_mongo_to_cosmos_db_ru_mongo
      name: database_migrations_mongo_to_cosmos_db_ru_mongo
      title: database_migrations_mongo_to_cosmos_db_ru_mongo
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{migrationName}?api-version=2023-07-15-preview/get'
            operationId: DatabaseMigrationsMongoToCosmosDbRUMongo_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationCosmosDbMongo
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{migrationName}?api-version=2023-07-15-preview/put'
            operationId: DatabaseMigrationsMongoToCosmosDbRUMongo_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationCosmosDbMongo
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{migrationName}?api-version=2023-07-15-preview/delete'
            operationId: DatabaseMigrationsMongoToCosmosDbRUMongo_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_db_ru_mongo/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_db_ru_mongo/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_db_ru_mongo/methods/delete'
    database_migrations_mongo_to_cosmos_db_ru_mongo_for_scopes:
      id: azure.data_migration.database_migrations_mongo_to_cosmos_db_ru_mongo_for_scopes
      name: database_migrations_mongo_to_cosmos_db_ru_mongo_for_scopes
      title: database_migrations_mongo_to_cosmos_db_ru_mongo_for_scopes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations?api-version=2023-07-15-preview/get'
            operationId: DatabaseMigrationsMongoToCosmosDbRUMongoForScope_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationCosmosDbMongoListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_db_ru_mongo_for_scopes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    database_migrations_mongo_to_cosmos_dbv_core_mongo:
      id: azure.data_migration.database_migrations_mongo_to_cosmos_dbv_core_mongo
      name: database_migrations_mongo_to_cosmos_dbv_core_mongo
      title: database_migrations_mongo_to_cosmos_dbv_core_mongo
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{migrationName}?api-version=2023-07-15-preview/get'
            operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongo_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationCosmosDbMongo
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{migrationName}?api-version=2023-07-15-preview/put'
            operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongo_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationCosmosDbMongo
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{migrationName}?api-version=2023-07-15-preview/delete'
            operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongo_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_dbv_core_mongo/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_dbv_core_mongo/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_dbv_core_mongo/methods/delete'
    database_migrations_mongo_to_cosmos_dbv_core_mongo_for_scopes:
      id: azure.data_migration.database_migrations_mongo_to_cosmos_dbv_core_mongo_for_scopes
      name: database_migrations_mongo_to_cosmos_dbv_core_mongo_for_scopes
      title: database_migrations_mongo_to_cosmos_dbv_core_mongo_for_scopes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{targetResourceName}~1providers~1Microsoft.DataMigration~1databaseMigrations?api-version=2023-07-15-preview/get'
            operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongoForScope_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationCosmosDbMongoListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_migrations_mongo_to_cosmos_dbv_core_mongo_for_scopes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    database_migrations_sql_dbs:
      id: azure.data_migration.database_migrations_sql_dbs
      name: database_migrations_sql_dbs
      title: database_migrations_sql_dbs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{sqlDbInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}?api-version=2023-07-15-preview/get'
            operationId: DatabaseMigrationsSqlDb_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationSqlDb
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{sqlDbInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}?api-version=2023-07-15-preview/put'
            operationId: DatabaseMigrationsSqlDb_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationSqlDb
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{sqlDbInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}?api-version=2023-07-15-preview/delete'
            operationId: DatabaseMigrationsSqlDb_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{sqlDbInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}~1cancel?api-version=2023-07-15-preview/post'
            operationId: DatabaseMigrationsSqlDb_cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_migrations_sql_dbs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/database_migrations_sql_dbs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/database_migrations_sql_dbs/methods/delete'
    database_migrations_sql_mis:
      id: azure.data_migration.database_migrations_sql_mis
      name: database_migrations_sql_mis
      title: database_migrations_sql_mis
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}?api-version=2023-07-15-preview/get'
            operationId: DatabaseMigrationsSqlMi_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationSqlMi
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}?api-version=2023-07-15-preview/put'
            operationId: DatabaseMigrationsSqlMi_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationSqlMi
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}~1cancel?api-version=2023-07-15-preview/post'
            operationId: DatabaseMigrationsSqlMi_cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cutover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}~1cutover?api-version=2023-07-15-preview/post'
            operationId: DatabaseMigrationsSqlMi_cutover
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_migrations_sql_mis/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/database_migrations_sql_mis/methods/create_or_update'
        update: []
        replace: []
        delete: []
    database_migrations_sql_vms:
      id: azure.data_migration.database_migrations_sql_vms
      name: database_migrations_sql_vms
      title: database_migrations_sql_vms
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SqlVirtualMachine~1sqlVirtualMachines~1{sqlVirtualMachineName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}?api-version=2023-07-15-preview/get'
            operationId: DatabaseMigrationsSqlVm_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationSqlVm
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SqlVirtualMachine~1sqlVirtualMachines~1{sqlVirtualMachineName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}?api-version=2023-07-15-preview/put'
            operationId: DatabaseMigrationsSqlVm_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationSqlVm
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SqlVirtualMachine~1sqlVirtualMachines~1{sqlVirtualMachineName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}~1cancel?api-version=2023-07-15-preview/post'
            operationId: DatabaseMigrationsSqlVm_cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cutover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.SqlVirtualMachine~1sqlVirtualMachines~1{sqlVirtualMachineName}~1providers~1Microsoft.DataMigration~1databaseMigrations~1{targetDbName}~1cutover?api-version=2023-07-15-preview/post'
            operationId: DatabaseMigrationsSqlVm_cutover
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_migrations_sql_vms/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/database_migrations_sql_vms/methods/create_or_update'
        update: []
        replace: []
        delete: []
    operations:
      id: azure.data_migration.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataMigration~1operations?api-version=2023-07-15-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    migration_services:
      id: azure.data_migration.migration_services
      name: migration_services
      title: migration_services
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1migrationServices~1{migrationServiceName}?api-version=2023-07-15-preview/get'
            operationId: MigrationServices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationService
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1migrationServices~1{migrationServiceName}?api-version=2023-07-15-preview/put'
            operationId: MigrationServices_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationService
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1migrationServices~1{migrationServiceName}?api-version=2023-07-15-preview/delete'
            operationId: MigrationServices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1migrationServices~1{migrationServiceName}?api-version=2023-07-15-preview/patch'
            operationId: MigrationServices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationService
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1migrationServices?api-version=2023-07-15-preview/get'
            operationId: MigrationServices_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationServiceListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataMigration~1migrationServices?api-version=2023-07-15-preview/get'
            operationId: MigrationServices_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrationServiceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migration_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/migration_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/migration_services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/migration_services/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/migration_services/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/migration_services/methods/delete'
    migration_services_migrations:
      id: azure.data_migration.migration_services_migrations
      name: migration_services_migrations
      title: migration_services_migrations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1migrationServices~1{migrationServiceName}~1listMigrations?api-version=2023-07-15-preview/get'
            operationId: MigrationServicesMigrations_list
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationBaseListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migration_services_migrations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sql_migration_services:
      id: azure.data_migration.sql_migration_services
      name: sql_migration_services
      title: sql_migration_services
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}?api-version=2023-07-15-preview/get'
            operationId: SqlMigrationServices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlMigrationService
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}?api-version=2023-07-15-preview/put'
            operationId: SqlMigrationServices_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlMigrationService
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}?api-version=2023-07-15-preview/delete'
            operationId: SqlMigrationServices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}?api-version=2023-07-15-preview/patch'
            operationId: SqlMigrationServices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlMigrationService
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices?api-version=2023-07-15-preview/get'
            operationId: SqlMigrationServices_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlMigrationListResult
            objectKey: $.value
        regenerate_auth_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}~1regenerateAuthKeys?api-version=2023-07-15-preview/post'
            operationId: SqlMigrationServices_regenerateAuthKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegenAuthKeys
        delete_node:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}~1deleteNode?api-version=2023-07-15-preview/post'
            operationId: SqlMigrationServices_deleteNode
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: deleteNode
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataMigration~1sqlMigrationServices?api-version=2023-07-15-preview/get'
            operationId: SqlMigrationServices_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlMigrationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_migration_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_migration_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/sql_migration_services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_migration_services/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/sql_migration_services/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_migration_services/methods/delete'
    sql_migration_services_auth_keys:
      id: azure.data_migration.sql_migration_services_auth_keys
      name: sql_migration_services_auth_keys
      title: sql_migration_services_auth_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}~1listAuthKeys?api-version=2023-07-15-preview/post'
            operationId: SqlMigrationServicesAuthKeys_list
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthenticationKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_migration_services_auth_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sql_migration_services_migrations:
      id: azure.data_migration.sql_migration_services_migrations
      name: sql_migration_services_migrations
      title: sql_migration_services_migrations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}~1listMigrations?api-version=2023-07-15-preview/get'
            operationId: SqlMigrationServicesMigrations_list
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseMigrationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_migration_services_migrations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sql_migration_services_monitoring_data:
      id: azure.data_migration.sql_migration_services_monitoring_data
      name: sql_migration_services_monitoring_data
      title: sql_migration_services_monitoring_data
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataMigration~1sqlMigrationServices~1{sqlMigrationServiceName}~1listMonitoringData?api-version=2023-07-15-preview/post'
            operationId: SqlMigrationServicesMonitoringData_list
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IntegrationRuntimeMonitoringData
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_migration_services_monitoring_data/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_services:
      id: azure.data_migration.vw_services
      name: vw_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              etag as etag,
              kind as kind,
              sku as sku,
              systemData as system_data,
              tags as tags,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.publicKey') as "public_key",
              JSON_EXTRACT(properties, '$.virtualSubnetId') as "virtual_subnet_id",
              JSON_EXTRACT(properties, '$.virtualNicId') as "virtual_nic_id",
              JSON_EXTRACT(properties, '$.autoStopDelay') as "auto_stop_delay",
              JSON_EXTRACT(properties, '$.deleteResourcesOnStop') as "delete_resources_on_stop",
              subscriptionId,
              groupName,
              serviceName
              FROM azure.data_migration.services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                etag as etag,
                kind as kind,
                sku as sku,
                systemData as system_data,
                tags as tags,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.publicKey') as "public_key",
                json_extract_path_text(properties, '$.virtualSubnetId') as "virtual_subnet_id",
                json_extract_path_text(properties, '$.virtualNicId') as "virtual_nic_id",
                json_extract_path_text(properties, '$.autoStopDelay') as "auto_stop_delay",
                json_extract_path_text(properties, '$.deleteResourcesOnStop') as "delete_resources_on_stop",
                subscriptionId,
                groupName,
                serviceName
                FROM azure.data_migration.services
                WHERE subscriptionId = 'replace-me';
    vw_tasks:
      id: azure.data_migration.vw_tasks
      name: vw_tasks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.taskType') as "task_type",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.commands') as "commands",
              JSON_EXTRACT(properties, '$.clientData') as "client_data",
              subscriptionId,
              groupName,
              serviceName,
              projectName,
              taskName
              FROM azure.data_migration.tasks
              WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me' AND projectName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.taskType') as "task_type",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.commands') as "commands",
                json_extract_path_text(properties, '$.clientData') as "client_data",
                subscriptionId,
                groupName,
                serviceName,
                projectName,
                taskName
                FROM azure.data_migration.tasks
                WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me' AND projectName = 'replace-me';
    vw_service_tasks:
      id: azure.data_migration.vw_service_tasks
      name: vw_service_tasks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.taskType') as "task_type",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.commands') as "commands",
              JSON_EXTRACT(properties, '$.clientData') as "client_data",
              subscriptionId,
              groupName,
              serviceName,
              taskName
              FROM azure.data_migration.service_tasks
              WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.taskType') as "task_type",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.commands') as "commands",
                json_extract_path_text(properties, '$.clientData') as "client_data",
                subscriptionId,
                groupName,
                serviceName,
                taskName
                FROM azure.data_migration.service_tasks
                WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me';
    vw_projects:
      id: azure.data_migration.vw_projects
      name: vw_projects
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              systemData as system_data,
              etag as etag,
              tags as tags,
              type as type,
              JSON_EXTRACT(properties, '$.sourcePlatform') as "source_platform",
              JSON_EXTRACT(properties, '$.azureAuthenticationInfo') as "azure_authentication_info",
              JSON_EXTRACT(properties, '$.targetPlatform') as "target_platform",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.sourceConnectionInfo') as "source_connection_info",
              JSON_EXTRACT(properties, '$.targetConnectionInfo') as "target_connection_info",
              JSON_EXTRACT(properties, '$.databasesInfo') as "databases_info",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              groupName,
              serviceName,
              projectName
              FROM azure.data_migration.projects
              WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                systemData as system_data,
                etag as etag,
                tags as tags,
                type as type,
                json_extract_path_text(properties, '$.sourcePlatform') as "source_platform",
                json_extract_path_text(properties, '$.azureAuthenticationInfo') as "azure_authentication_info",
                json_extract_path_text(properties, '$.targetPlatform') as "target_platform",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.sourceConnectionInfo') as "source_connection_info",
                json_extract_path_text(properties, '$.targetConnectionInfo') as "target_connection_info",
                json_extract_path_text(properties, '$.databasesInfo') as "databases_info",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                groupName,
                serviceName,
                projectName
                FROM azure.data_migration.projects
                WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me';
    vw_files:
      id: azure.data_migration.vw_files
      name: vw_files
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.extension') as "extension",
              JSON_EXTRACT(properties, '$.filePath') as "file_path",
              JSON_EXTRACT(properties, '$.lastModified') as "last_modified",
              JSON_EXTRACT(properties, '$.mediaType') as "media_type",
              JSON_EXTRACT(properties, '$.size') as "size",
              subscriptionId,
              groupName,
              serviceName,
              projectName,
              fileName
              FROM azure.data_migration.files
              WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me' AND projectName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.extension') as "extension",
                json_extract_path_text(properties, '$.filePath') as "file_path",
                json_extract_path_text(properties, '$.lastModified') as "last_modified",
                json_extract_path_text(properties, '$.mediaType') as "media_type",
                json_extract_path_text(properties, '$.size') as "size",
                subscriptionId,
                groupName,
                serviceName,
                projectName,
                fileName
                FROM azure.data_migration.files
                WHERE subscriptionId = 'replace-me' AND groupName = 'replace-me' AND serviceName = 'replace-me' AND projectName = 'replace-me';
    vw_database_migrations_mongo_to_cosmos_db_ru_mongo:
      id: azure.data_migration.vw_database_migrations_mongo_to_cosmos_db_ru_mongo
      name: vw_database_migrations_mongo_to_cosmos_db_ru_mongo
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.kind') as "kind",
              JSON_EXTRACT(properties, '$.scope') as "scope",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.migrationStatus') as "migration_status",
              JSON_EXTRACT(properties, '$.startedOn') as "started_on",
              JSON_EXTRACT(properties, '$.endedOn') as "ended_on",
              JSON_EXTRACT(properties, '$.migrationService') as "migration_service",
              JSON_EXTRACT(properties, '$.migrationOperationId') as "migration_operation_id",
              JSON_EXTRACT(properties, '$.migrationFailureError') as "migration_failure_error",
              JSON_EXTRACT(properties, '$.provisioningError') as "provisioning_error",
              JSON_EXTRACT(properties, '$.sourceMongoConnection') as "source_mongo_connection",
              JSON_EXTRACT(properties, '$.targetMongoConnection') as "target_mongo_connection",
              JSON_EXTRACT(properties, '$.collectionList') as "collection_list",
              subscriptionId,
              resourceGroupName,
              targetResourceName,
              migrationName
              FROM azure.data_migration.database_migrations_mongo_to_cosmos_db_ru_mongo
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND targetResourceName = 'replace-me' AND migrationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.kind') as "kind",
                json_extract_path_text(properties, '$.scope') as "scope",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.migrationStatus') as "migration_status",
                json_extract_path_text(properties, '$.startedOn') as "started_on",
                json_extract_path_text(properties, '$.endedOn') as "ended_on",
                json_extract_path_text(properties, '$.migrationService') as "migration_service",
                json_extract_path_text(properties, '$.migrationOperationId') as "migration_operation_id",
                json_extract_path_text(properties, '$.migrationFailureError') as "migration_failure_error",
                json_extract_path_text(properties, '$.provisioningError') as "provisioning_error",
                json_extract_path_text(properties, '$.sourceMongoConnection') as "source_mongo_connection",
                json_extract_path_text(properties, '$.targetMongoConnection') as "target_mongo_connection",
                json_extract_path_text(properties, '$.collectionList') as "collection_list",
                subscriptionId,
                resourceGroupName,
                targetResourceName,
                migrationName
                FROM azure.data_migration.database_migrations_mongo_to_cosmos_db_ru_mongo
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND targetResourceName = 'replace-me' AND migrationName = 'replace-me';
    vw_database_migrations_mongo_to_cosmos_dbv_core_mongo:
      id: azure.data_migration.vw_database_migrations_mongo_to_cosmos_dbv_core_mongo
      name: vw_database_migrations_mongo_to_cosmos_dbv_core_mongo
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.kind') as "kind",
              JSON_EXTRACT(properties, '$.scope') as "scope",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.migrationStatus') as "migration_status",
              JSON_EXTRACT(properties, '$.startedOn') as "started_on",
              JSON_EXTRACT(properties, '$.endedOn') as "ended_on",
              JSON_EXTRACT(properties, '$.migrationService') as "migration_service",
              JSON_EXTRACT(properties, '$.migrationOperationId') as "migration_operation_id",
              JSON_EXTRACT(properties, '$.migrationFailureError') as "migration_failure_error",
              JSON_EXTRACT(properties, '$.provisioningError') as "provisioning_error",
              JSON_EXTRACT(properties, '$.sourceMongoConnection') as "source_mongo_connection",
              JSON_EXTRACT(properties, '$.targetMongoConnection') as "target_mongo_connection",
              JSON_EXTRACT(properties, '$.collectionList') as "collection_list",
              subscriptionId,
              resourceGroupName,
              targetResourceName,
              migrationName
              FROM azure.data_migration.database_migrations_mongo_to_cosmos_dbv_core_mongo
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND targetResourceName = 'replace-me' AND migrationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.kind') as "kind",
                json_extract_path_text(properties, '$.scope') as "scope",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.migrationStatus') as "migration_status",
                json_extract_path_text(properties, '$.startedOn') as "started_on",
                json_extract_path_text(properties, '$.endedOn') as "ended_on",
                json_extract_path_text(properties, '$.migrationService') as "migration_service",
                json_extract_path_text(properties, '$.migrationOperationId') as "migration_operation_id",
                json_extract_path_text(properties, '$.migrationFailureError') as "migration_failure_error",
                json_extract_path_text(properties, '$.provisioningError') as "provisioning_error",
                json_extract_path_text(properties, '$.sourceMongoConnection') as "source_mongo_connection",
                json_extract_path_text(properties, '$.targetMongoConnection') as "target_mongo_connection",
                json_extract_path_text(properties, '$.collectionList') as "collection_list",
                subscriptionId,
                resourceGroupName,
                targetResourceName,
                migrationName
                FROM azure.data_migration.database_migrations_mongo_to_cosmos_dbv_core_mongo
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND targetResourceName = 'replace-me' AND migrationName = 'replace-me';
    vw_database_migrations_sql_dbs:
      id: azure.data_migration.vw_database_migrations_sql_dbs
      name: vw_database_migrations_sql_dbs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.sourceSqlConnection') as "source_sql_connection",
              JSON_EXTRACT(properties, '$.sourceDatabaseName') as "source_database_name",
              JSON_EXTRACT(properties, '$.sourceServerName') as "source_server_name",
              JSON_EXTRACT(properties, '$.targetDatabaseCollation') as "target_database_collation",
              JSON_EXTRACT(properties, '$.migrationStatusDetails') as "migration_status_details",
              JSON_EXTRACT(properties, '$.targetSqlConnection') as "target_sql_connection",
              JSON_EXTRACT(properties, '$.offlineConfiguration') as "offline_configuration",
              JSON_EXTRACT(properties, '$.tableList') as "table_list",
              subscriptionId,
              resourceGroupName,
              sqlDbInstanceName,
              targetDbName
              FROM azure.data_migration.database_migrations_sql_dbs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND sqlDbInstanceName = 'replace-me' AND targetDbName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.sourceSqlConnection') as "source_sql_connection",
                json_extract_path_text(properties, '$.sourceDatabaseName') as "source_database_name",
                json_extract_path_text(properties, '$.sourceServerName') as "source_server_name",
                json_extract_path_text(properties, '$.targetDatabaseCollation') as "target_database_collation",
                json_extract_path_text(properties, '$.migrationStatusDetails') as "migration_status_details",
                json_extract_path_text(properties, '$.targetSqlConnection') as "target_sql_connection",
                json_extract_path_text(properties, '$.offlineConfiguration') as "offline_configuration",
                json_extract_path_text(properties, '$.tableList') as "table_list",
                subscriptionId,
                resourceGroupName,
                sqlDbInstanceName,
                targetDbName
                FROM azure.data_migration.database_migrations_sql_dbs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND sqlDbInstanceName = 'replace-me' AND targetDbName = 'replace-me';
    vw_database_migrations_sql_mis:
      id: azure.data_migration.vw_database_migrations_sql_mis
      name: vw_database_migrations_sql_mis
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.sourceSqlConnection') as "source_sql_connection",
              JSON_EXTRACT(properties, '$.sourceDatabaseName') as "source_database_name",
              JSON_EXTRACT(properties, '$.sourceServerName') as "source_server_name",
              JSON_EXTRACT(properties, '$.targetDatabaseCollation') as "target_database_collation",
              JSON_EXTRACT(properties, '$.migrationStatusDetails') as "migration_status_details",
              JSON_EXTRACT(properties, '$.backupConfiguration') as "backup_configuration",
              JSON_EXTRACT(properties, '$.offlineConfiguration') as "offline_configuration",
              subscriptionId,
              resourceGroupName,
              managedInstanceName,
              targetDbName
              FROM azure.data_migration.database_migrations_sql_mis
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managedInstanceName = 'replace-me' AND targetDbName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.sourceSqlConnection') as "source_sql_connection",
                json_extract_path_text(properties, '$.sourceDatabaseName') as "source_database_name",
                json_extract_path_text(properties, '$.sourceServerName') as "source_server_name",
                json_extract_path_text(properties, '$.targetDatabaseCollation') as "target_database_collation",
                json_extract_path_text(properties, '$.migrationStatusDetails') as "migration_status_details",
                json_extract_path_text(properties, '$.backupConfiguration') as "backup_configuration",
                json_extract_path_text(properties, '$.offlineConfiguration') as "offline_configuration",
                subscriptionId,
                resourceGroupName,
                managedInstanceName,
                targetDbName
                FROM azure.data_migration.database_migrations_sql_mis
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND managedInstanceName = 'replace-me' AND targetDbName = 'replace-me';
    vw_database_migrations_sql_vms:
      id: azure.data_migration.vw_database_migrations_sql_vms
      name: vw_database_migrations_sql_vms
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.sourceSqlConnection') as "source_sql_connection",
              JSON_EXTRACT(properties, '$.sourceDatabaseName') as "source_database_name",
              JSON_EXTRACT(properties, '$.sourceServerName') as "source_server_name",
              JSON_EXTRACT(properties, '$.targetDatabaseCollation') as "target_database_collation",
              JSON_EXTRACT(properties, '$.migrationStatusDetails') as "migration_status_details",
              JSON_EXTRACT(properties, '$.backupConfiguration') as "backup_configuration",
              JSON_EXTRACT(properties, '$.offlineConfiguration') as "offline_configuration",
              subscriptionId,
              resourceGroupName,
              sqlVirtualMachineName,
              targetDbName
              FROM azure.data_migration.database_migrations_sql_vms
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND sqlVirtualMachineName = 'replace-me' AND targetDbName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.sourceSqlConnection') as "source_sql_connection",
                json_extract_path_text(properties, '$.sourceDatabaseName') as "source_database_name",
                json_extract_path_text(properties, '$.sourceServerName') as "source_server_name",
                json_extract_path_text(properties, '$.targetDatabaseCollation') as "target_database_collation",
                json_extract_path_text(properties, '$.migrationStatusDetails') as "migration_status_details",
                json_extract_path_text(properties, '$.backupConfiguration') as "backup_configuration",
                json_extract_path_text(properties, '$.offlineConfiguration') as "offline_configuration",
                subscriptionId,
                resourceGroupName,
                sqlVirtualMachineName,
                targetDbName
                FROM azure.data_migration.database_migrations_sql_vms
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND sqlVirtualMachineName = 'replace-me' AND targetDbName = 'replace-me';
    vw_migration_services:
      id: azure.data_migration.vw_migration_services
      name: vw_migration_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              tags as tags,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.integrationRuntimeState') as "integration_runtime_state",
              subscriptionId,
              resourceGroupName,
              migrationServiceName
              FROM azure.data_migration.migration_services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                tags as tags,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.integrationRuntimeState') as "integration_runtime_state",
                subscriptionId,
                resourceGroupName,
                migrationServiceName
                FROM azure.data_migration.migration_services
                WHERE subscriptionId = 'replace-me';
    vw_sql_migration_services:
      id: azure.data_migration.vw_sql_migration_services
      name: vw_sql_migration_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              tags as tags,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.integrationRuntimeState') as "integration_runtime_state",
              subscriptionId,
              resourceGroupName,
              sqlMigrationServiceName
              FROM azure.data_migration.sql_migration_services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                tags as tags,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.integrationRuntimeState') as "integration_runtime_state",
                subscriptionId,
                resourceGroupName,
                sqlMigrationServiceName
                FROM azure.data_migration.sql_migration_services
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/skus?api-version=2023-07-15-preview:
    get:
      summary: Get supported SKUs
      description: The skus action returns the list of SKUs that DMS (classic) supports.
      tags:
        - Standard operation
        - GET
      operationId: ResourceSkusSkus_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: Got SKUs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkusResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      x-ms-original-operationId: ResourceSkus_ListSkus
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}?api-version=2023-07-15-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/groupName'
      - $ref: '#/components/parameters/serviceName'
      - $ref: '#/components/parameters/apiVersion'
    put:
      summary: Create or update DMS (classic) Instance
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The PUT method creates a new service or updates an existing one. When a service is updated, existing child resources (i.e. tasks) are unaffected. Services currently support a single kind, "vm", which refers to a VM-based service, although other kinds may be added in the future. This method can change the kind, SKU, and network of the service, but if tasks are currently running (i.e. the service is busy), this will fail with 400 Bad Request ("ServiceIsBusy"). The provider will reply when successful with 200 OK or 201 Created. Long-running operations use the provisioningState property.
      tags:
        - Service resource
        - Standard operation
        - PUT
      operationId: Services_CreateOrUpdate
      requestBody:
        description: Information about the service
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataMigrationService'
      x-ms-long-running-operation: true
      responses:
        '200':
          description: Service updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMigrationService'
        '201':
          description: Service created (use provisioningState)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMigrationService'
        '202':
          description: Update accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get DMS (classic) Service Instance
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The GET method retrieves information about a service instance.
      tags:
        - Service resource
        - Standard operation
        - GET
      operationId: Services_Get
      responses:
        '200':
          description: A service instance resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMigrationService'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      summary: Delete DMS (classic) Service Instance
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The DELETE method deletes a service. Any running tasks will be canceled.
      tags:
        - Service resource
        - Standard operation
        - DELETE
      parameters:
        - $ref: '#/components/parameters/deleteRunningTasks'
      operationId: Services_Delete
      x-ms-long-running-operation: true
      responses:
        '200':
          description: Service resource deleted
        '202':
          description: Deletion accepted
        '204':
          description: Service not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    patch:
      summary: Create or update DMS (classic) Service Instance
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The PATCH method updates an existing service. This method can change the kind, SKU, and network of the service, but if tasks are currently running (i.e. the service is busy), this will fail with 400 Bad Request ("ServiceIsBusy").
      tags:
        - Service resource
        - Standard operation
        - PATCH
      operationId: Services_Update
      requestBody:
        description: Information about the service
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataMigrationService'
      x-ms-long-running-operation: true
      responses:
        '200':
          description: Service resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMigrationService'
        '202':
          description: Update accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkStatus?api-version=2023-07-15-preview:
    post:
      summary: Check service health status
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This action performs a health check and returns the status of the service and virtual machine size.
      tags:
        - Service resource
        - Custom operation
        - POST
      operationId: Services_CheckStatus
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Health checked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMigrationServiceStatusResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/start?api-version=2023-07-15-preview:
    post:
      summary: Start service
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This action starts the service and the service can be used for data migration.
      tags:
        - Service resource
        - Custom operation
        - POST
      operationId: Services_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-long-running-operation: true
      responses:
        '200':
          description: The service has already been started.
        '202':
          description: The request to start service is accepted.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/stop?api-version=2023-07-15-preview:
    post:
      summary: Stop service
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This action stops the service and the service cannot be used for data migration. The service owner won't be billed when the service is stopped.
      tags:
        - Service resource
        - Custom operation
        - POST
      operationId: Services_Stop
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-long-running-operation: true
      responses:
        '200':
          description: The service has already been stopped.
        '202':
          description: The request to stop service is accepted.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/skus?api-version=2023-07-15-preview:
    get:
      summary: Get compatible SKUs
      description: The services resource is the top-level resource that represents the Database Migration Service (classic). The skus action returns the list of SKUs that a service resource can be updated to.
      tags:
        - Service resource
        - Standard operation
        - GET
      operationId: ServicesSkus_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: Got SKUs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSkuList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      x-ms-original-operationId: Services_ListSkus
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks?api-version=2023-07-15-preview:
    get:
      summary: Get tasks in a service
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of tasks owned by a service resource. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.
      tags:
        - Service resource
        - Standard operation
        - GET
      operationId: Tasks_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/projectName'
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/taskType'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: Got tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks?api-version=2023-07-15-preview:
    get:
      summary: Get service level tasks for a service
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of service level tasks owned by a service resource. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.
      tags:
        - Service resource
        - Standard operation
        - GET
      operationId: ServiceTasks_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/taskType'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: Got service tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkNameAvailability?api-version=2023-07-15-preview:
    post:
      summary: Check nested resource name validity and availability
      description: This method checks whether a proposed nested resource name is valid and available.
      tags:
        - Custom operation
        - POST
      operationId: Services_CheckChildrenNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/apiVersion'
        - $ref: '#/components/parameters/serviceName'
      requestBody:
        description: Requested name to validate
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: Name checked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services?api-version=2023-07-15-preview:
    get:
      summary: Get services in resource group
      description: The Services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of service resources in a resource group.
      tags:
        - Service resource
        - Standard operation
        - GET
      operationId: Services_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: Got services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMigrationServiceList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/services?api-version=2023-07-15-preview:
    get:
      summary: Get services in subscription
      description: The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of service resources in a subscription.
      tags:
        - Service resource
        - Standard operation
        - GET
      operationId: Services_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: Got services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataMigrationServiceList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}?api-version=2023-07-15-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/groupName'
      - $ref: '#/components/parameters/serviceName'
      - $ref: '#/components/parameters/projectName'
      - $ref: '#/components/parameters/taskName'
      - $ref: '#/components/parameters/apiVersion'
    put:
      summary: Create or update task
      description: The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PUT method creates a new task or updates an existing one, although since tasks have no mutable custom properties, there is little reason to update an existing one.
      tags:
        - Task resource
        - Standard operation
        - PUT
      operationId: Tasks_CreateOrUpdate
      requestBody:
        description: Information about the task
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get task information
      description: The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The GET method retrieves information about a task.
      tags:
        - Task resource
        - Standard operation
        - GET
      operationId: Tasks_Get
      parameters:
        - name: $expand
          in: query
          description: Expand the response
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A task resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      summary: Delete task
      description: The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The DELETE method deletes a task, canceling it first if it's running.
      tags:
        - Task resource
        - Standard operation
        - DELETE
      parameters:
        - $ref: '#/components/parameters/deleteRunningTasks'
      operationId: Tasks_Delete
      responses:
        '200':
          description: Task resource deleted
        '204':
          description: Not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    patch:
      summary: Create or update task
      description: The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PATCH method updates an existing task, but since tasks have no mutable custom properties, there is little reason to do so.
      tags:
        - Task resource
        - Standard operation
        - PATCH
      operationId: Tasks_Update
      requestBody:
        description: Information about the task
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
      responses:
        '200':
          description: Task resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}?api-version=2023-07-15-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/groupName'
      - $ref: '#/components/parameters/serviceName'
      - $ref: '#/components/parameters/taskName'
      - $ref: '#/components/parameters/apiVersion'
    put:
      summary: Create or update service task
      description: The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PUT method creates a new service task or updates an existing one, although since service tasks have no mutable custom properties, there is little reason to update an existing one.
      tags:
        - Service Task resource
        - Standard operation
        - PUT
      operationId: ServiceTasks_CreateOrUpdate
      requestBody:
        description: Information about the task
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
      responses:
        '200':
          description: Service task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        '201':
          description: Service task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get service task information
      description: The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The GET method retrieves information about a service task.
      tags:
        - Service Task resource
        - Standard operation
        - GET
      operationId: ServiceTasks_Get
      parameters:
        - name: $expand
          in: query
          description: Expand the response
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A service task resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      summary: Delete service task
      description: The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The DELETE method deletes a service task, canceling it first if it's running.
      tags:
        - Service Task resource
        - Standard operation
        - DELETE
      parameters:
        - $ref: '#/components/parameters/deleteRunningTasks'
      operationId: ServiceTasks_Delete
      responses:
        '200':
          description: Service Task resource deleted
        '204':
          description: Not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    patch:
      summary: Create or update service task
      description: The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PATCH method updates an existing service task, but since service tasks have no mutable custom properties, there is little reason to do so.
      tags:
        - Service Task resource
        - Standard operation
        - PATCH
      operationId: ServiceTasks_Update
      requestBody:
        description: Information about the task
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
      responses:
        '200':
          description: Service Task resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}/cancel?api-version=2023-07-15-preview:
    post:
      summary: Cancel a task
      description: The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. This method cancels a task if it's currently queued or running.
      tags:
        - Task resource
        - Custom operation
        - POST
      operationId: Tasks_Cancel
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/projectName'
        - $ref: '#/components/parameters/taskName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Task canceled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}/cancel?api-version=2023-07-15-preview:
    post:
      summary: Cancel a service task
      description: The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. This method cancels a service task if it's currently queued or running.
      tags:
        - Service Task resource
        - Custom operation
        - POST
      operationId: ServiceTasks_Cancel
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/taskName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: Service Task canceled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}/command?api-version=2023-07-15-preview:
    post:
      summary: Execute a command on a task
      description: The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. This method executes a command on a running task.
      tags:
        - Task resource
        - Custom operation
        - POST
      operationId: Tasks_Command
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/projectName'
        - $ref: '#/components/parameters/taskName'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: Command to execute
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandProperties'
      responses:
        '200':
          description: Command executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProperties'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects?api-version=2023-07-15-preview:
    get:
      summary: Get projects in a service
      description: The project resource is a nested resource representing a stored migration project. This method returns a list of projects owned by a service resource.
      tags:
        - Project resource
        - Standard operation
        - GET
      operationId: Projects_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}?api-version=2023-07-15-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/groupName'
      - $ref: '#/components/parameters/serviceName'
      - $ref: '#/components/parameters/projectName'
      - $ref: '#/components/parameters/apiVersion'
    put:
      summary: Create or update project
      description: The project resource is a nested resource representing a stored migration project. The PUT method creates a new project or updates an existing one.
      tags:
        - Project resource
        - Standard operation
        - PUT
      operationId: Projects_CreateOrUpdate
      requestBody:
        description: Information about the project
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      summary: Get project information
      description: The project resource is a nested resource representing a stored migration project. The GET method retrieves information about a project.
      tags:
        - Project resource
        - Standard operation
        - GET
      operationId: Projects_Get
      responses:
        '200':
          description: A project resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      summary: Delete project
      description: The project resource is a nested resource representing a stored migration project. The DELETE method deletes a project.
      tags:
        - Project resource
        - Standard operation
        - DELETE
      parameters:
        - $ref: '#/components/parameters/deleteRunningTasks'
      operationId: Projects_Delete
      responses:
        '200':
          description: Project resource deleted
        '204':
          description: Not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    patch:
      summary: Update project
      description: The project resource is a nested resource representing a stored migration project. The PATCH method updates an existing project.
      tags:
        - Project resource
        - Standard operation
        - PATCH
      operationId: Projects_Update
      requestBody:
        description: Information about the project
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/checkNameAvailability?api-version=2023-07-15-preview:
    post:
      summary: Check name validity and availability
      description: This method checks whether a proposed top-level resource name is valid and available.
      tags:
        - Standard operation
        - POST
      operationId: Services_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: Requested name to validate
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: Name checked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/usages?api-version=2023-07-15-preview:
    get:
      summary: Get resource quotas and usage information
      description: This method returns region-specific quotas and resource usage information for the Azure Database Migration Service (classic).
      tags:
        - Standard operation
        - GET
      operationId: Usages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: Quotas returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files?api-version=2023-07-15-preview:
    get:
      summary: Get files in a project
      description: The project resource is a nested resource representing a stored migration project. This method returns a list of files owned by a project resource.
      tags:
        - File resource
        - Standard operation
        - GET
      operationId: Files_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/projectName'
        - $ref: '#/components/parameters/apiVersion'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: List of files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}?api-version=2023-07-15-preview:
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/groupName'
      - $ref: '#/components/parameters/serviceName'
      - $ref: '#/components/parameters/projectName'
      - $ref: '#/components/parameters/fileName'
      - $ref: '#/components/parameters/apiVersion'
    get:
      summary: Get file information
      description: The files resource is a nested, proxy-only resource representing a file stored under the project resource. This method retrieves information about a file.
      tags:
        - File resource
        - Standard operation
        - GET
      operationId: Files_Get
      responses:
        '200':
          description: A file resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    put:
      summary: Create a file resource
      description: The PUT method creates a new file or updates an existing one.
      tags:
        - Fie resource
        - Standard operation
        - PUT
      operationId: Files_CreateOrUpdate
      requestBody:
        description: Information about the file
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFile'
      responses:
        '200':
          description: File updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
        '201':
          description: File created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      summary: Delete file
      description: This method deletes a file.
      tags:
        - File resource
        - Standard operation
        - DELETE
      operationId: Files_Delete
      responses:
        '200':
          description: File resource deleted
        '204':
          description: Not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    patch:
      summary: Update a file
      description: This method updates an existing file.
      tags:
        - File resource
        - Standard operation
        - PATCH
      operationId: Files_Update
      requestBody:
        description: Information about the file
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFile'
      responses:
        '200':
          description: File resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}/read?api-version=2023-07-15-preview:
    post:
      summary: Request storage information for downloading the file content
      description: This method is used for requesting storage information using which contents of the file can be downloaded.
      tags:
        - File resource
        - Standard operation
        - POST
      operationId: Files_Read
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/projectName'
        - $ref: '#/components/parameters/fileName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: An object describing how to access the file content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStorageInfo'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}/readwrite?api-version=2023-07-15-preview:
    post:
      summary: Request information for reading and writing file content.
      description: This method is used for requesting information for reading and writing the file content.
      tags:
        - File resource
        - Standard operation
        - POST
      operationId: Files_ReadWrite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/groupName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/projectName'
        - $ref: '#/components/parameters/fileName'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: An object describing how to access the file content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStorageInfo'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{targetResourceName}/providers/Microsoft.DataMigration/databaseMigrations/{migrationName}?api-version=2023-07-15-preview:
    get:
      tags:
        - DatabaseMigrations
      description: Get Database Migration resource.
      operationId: DatabaseMigrationsMongoToCosmosDbRUMongo_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DatabaseMigrations
      description: Create or Update Database Migration resource.
      operationId: DatabaseMigrationsMongoToCosmosDbRUMongo_Create
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of CosmosDB for Mongo API Migration resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
      responses:
        '200':
          description: Updated database migration resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
        '201':
          description: Created database migration resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - DatabaseMigrations
      description: Delete Database Migration resource.
      operationId: DatabaseMigrationsMongoToCosmosDbRUMongo_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
        - name: force
          in: query
          description: Optional force delete boolean. If this is provided as true, migration will be deleted even if active.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{targetResourceName}/providers/Microsoft.DataMigration/databaseMigrations?api-version=2023-07-15-preview:
    get:
      tags:
        - DatabaseMigrations
      description: Get Database Migration resources for the scope.
      operationId: DatabaseMigrationsMongoToCosmosDbRUMongoForScope_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongoListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: DatabaseMigrationsMongoToCosmosDbRUMongo_GetForScope
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{targetResourceName}/providers/Microsoft.DataMigration/databaseMigrations/{migrationName}?api-version=2023-07-15-preview:
    get:
      tags:
        - DatabaseMigrations
      description: Get Database Migration resource.
      operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongo_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DatabaseMigrations
      description: Create or Update Database Migration resource.
      operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongo_Create
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of CosmosDB for Mongo API Migration resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
      responses:
        '200':
          description: Successfully updated the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
        '201':
          description: Created database migration resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongo'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - DatabaseMigrations
      description: Delete Database Migration resource.
      operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongo_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/MigrationNameParameter'
        - name: force
          in: query
          description: Optional force delete boolean. If this is provided as true, migration will be deleted even if active.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{targetResourceName}/providers/Microsoft.DataMigration/databaseMigrations?api-version=2023-07-15-preview:
    get:
      tags:
        - DatabaseMigrations
      description: Get Database Migration resources for the scope.
      operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongoForScope_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/TargetResourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationCosmosDbMongoListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete

             * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete

             * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: DatabaseMigrationsMongoToCosmosDbvCoreMongo_GetForScope
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{sqlDbInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}?api-version=2023-07-15-preview:
    get:
      tags:
        - DatabaseMigrations
      description: Retrieve the Database Migration resource.
      operationId: DatabaseMigrationsSqlDb_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlDbInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - name: migrationOperationId
          in: query
          description: Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
          required: false
          schema:
            format: uuid
            type: string
        - name: $expand
          in: query
          description: Complete migration details be included in the response.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlDb'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
    put:
      tags:
        - DatabaseMigrations
      description: Create or Update Database Migration resource.
      operationId: DatabaseMigrationsSqlDb_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlDbInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of Sql Db migration resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseMigrationSqlDb'
      responses:
        '200':
          description: Successfully updated the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlDb'
        '201':
          description: Successfully created the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlDb'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
    delete:
      tags:
        - DatabaseMigrations
      description: Delete Database Migration resource.
      operationId: DatabaseMigrationsSqlDb_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlDbInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - name: force
          in: query
          description: Optional force delete boolean. If this is provided as true, migration will be deleted even if active.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the Database Migration resource.
        '202':
          description: Deleting the Database Migration resource.
        '204':
          description: The specified Database Migration resource does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{sqlDbInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cancel?api-version=2023-07-15-preview:
    post:
      tags:
        - DatabaseMigrations
      description: Stop on going migration for the database.
      operationId: DatabaseMigrationsSqlDb_cancel
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlDbInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Required migration operation ID for which cancel will be initiated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationOperationInput'
      responses:
        '200':
          description: Successfully canceled ongoing migration.
        '202':
          description: Accepted cancellation of ongoing migration.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}?api-version=2023-07-15-preview:
    get:
      tags:
        - DatabaseMigrations
      description: Retrieve the specified database migration for a given SQL Managed Instance.
      operationId: DatabaseMigrationsSqlMi_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: managedInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - name: migrationOperationId
          in: query
          description: Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
          required: false
          schema:
            format: uuid
            type: string
        - name: $expand
          in: query
          description: Complete migration details be included in the response.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlMi'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - 

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
    put:
      tags:
        - DatabaseMigrations
      description: Create a new database migration to a given SQL Managed Instance.
      operationId: DatabaseMigrationsSqlMi_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: managedInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of SqlMigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseMigrationSqlMi'
      responses:
        '200':
          description: Successfully updated the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlMi'
        '201':
          description: Successfully created the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlMi'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - 

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cancel?api-version=2023-07-15-preview:
    post:
      tags:
        - DatabaseMigrations
      description: Stop in-progress database migration to SQL Managed Instance.
      operationId: DatabaseMigrationsSqlMi_cancel
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: managedInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Required migration operation ID for which cancel will be initiated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationOperationInput'
      responses:
        '200':
          description: Successfully canceled ongoing migration.
        '202':
          description: Accepted cancellation of ongoing migration.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - 

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cutover?api-version=2023-07-15-preview:
    post:
      tags:
        - DatabaseMigrations
      description: Initiate cutover for in-progress online database migration to SQL Managed Instance.
      operationId: DatabaseMigrationsSqlMi_cutover
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: managedInstanceName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Required migration operation ID for which cutover will be initiated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationOperationInput'
      responses:
        '200':
          description: Successful cutover for ongoing migration.
        '202':
          description: Accepted cutover request for ongoing migration.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - 

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}?api-version=2023-07-15-preview:
    get:
      tags:
        - DatabaseMigrations
      description: Retrieve the specified database migration for a given SQL VM.
      operationId: DatabaseMigrationsSqlVm_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlVirtualMachineName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - name: migrationOperationId
          in: query
          description: Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.
          required: false
          schema:
            format: uuid
            type: string
        - name: $expand
          in: query
          description: Complete migration details be included in the response.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlVm'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
    put:
      tags:
        - DatabaseMigrations
      description: Create a new database migration to a given SQL VM.
      operationId: DatabaseMigrationsSqlVm_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlVirtualMachineName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of SqlMigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseMigrationSqlVm'
      responses:
        '200':
          description: Successfully updated the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlVm'
        '201':
          description: Successfully created the Database Migration resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationSqlVm'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cancel?api-version=2023-07-15-preview:
    post:
      tags:
        - DatabaseMigrations
      description: Stop in-progress database migration to SQL VM.
      operationId: DatabaseMigrationsSqlVm_cancel
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlVirtualMachineName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationOperationInput'
      responses:
        '200':
          description: Successfully canceled ongoing migration.
        '202':
          description: Accepted cancellation of ongoing migration.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cutover?api-version=2023-07-15-preview:
    post:
      tags:
        - DatabaseMigrations
      description: Initiate cutover for in-progress online database migration to SQL VM.
      operationId: DatabaseMigrationsSqlVm_cutover
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - name: sqlVirtualMachineName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/TargetDbNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationOperationInput'
      responses:
        '200':
          description: Successful cutover for ongoing migration.
        '202':
          description: Accepted cutover request for ongoing migration.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'

             * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete

             * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'

             * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.

             * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.

             * 400 MigrationNotReadyForCancelError - Database '{0}' is not ready for Cancel operation

             * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.

             * 400 SqlVmGenericUserError - {0}

             * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.

             * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation

             * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'

             * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.

             * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'.
      x-ms-long-running-operation: true
  /providers/Microsoft.DataMigration/operations?api-version=2023-07-15-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available SQL Migration REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Successfully retrieved operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: '*** Error Responses: ***'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/migrationServices/{migrationServiceName}?api-version=2023-07-15-preview:
    get:
      tags:
        - MigrationServices
      description: Retrieve the Database Migration Service
      operationId: MigrationServices_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/MigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationService'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 NoAdfInRegion - There is no ADF configured in region '{0}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - MigrationServices
      description: Create or Update Database Migration Service.
      operationId: MigrationServices_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/MigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of MigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationService'
      responses:
        '200':
          description: Successfully updated the migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationService'
        '201':
          description: Successfully created the migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationService'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 NoAdfInRegion - There is no ADF configured in region '{0}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - MigrationServices
      description: Delete Database Migration Service.
      operationId: MigrationServices_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/MigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Deleting the migration Service.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: The specified migration Service does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 NoAdfInRegion - There is no ADF configured in region '{0}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - MigrationServices
      description: Update Database Migration Service.
      operationId: MigrationServices_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/MigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of MigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrationServiceUpdate'
      responses:
        '200':
          description: Successfully updated the migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationService'
        '202':
          description: Updating the migration Service.
          headers:
            Location:
              schema:
                type: string
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 NoAdfInRegion - There is no ADF configured in region '{0}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/migrationServices?api-version=2023-07-15-preview:
    get:
      tags:
        - MigrationServices
      description: Retrieve all migration services in the resource group.
      operationId: MigrationServices_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Migration Services in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationServiceListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 NoAdfInRegion - There is no ADF configured in region '{0}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/migrationServices?api-version=2023-07-15-preview:
    get:
      tags:
        - MigrationServices
      description: Retrieve all migration services in the subscriptions.
      operationId: MigrationServices_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Migration Services in the Subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationServiceListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 NoAdfInRegion - There is no ADF configured in region '{0}'.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/migrationServices/{migrationServiceName}/listMigrations?api-version=2023-07-15-preview:
    get:
      tags:
        - MigrationServices
      description: Retrieve the List of database migrations attached to the service.
      operationId: MigrationServicesMigrations_list
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/MigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationBaseListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 EmptyRequiredRequestBody - The request body must not be empty.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 405 SubscriptionNotReady - Subscription is not in Ready state.

             * 405 MigrationServiceNotSupported - 

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.

             * 500 NoAdfInRegion - 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: MigrationServices_listMigrations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}?api-version=2023-07-15-preview:
    get:
      tags:
        - SqlMigrationServices
      description: Retrieve the Database Migration Service
      operationId: SqlMigrationServices_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlMigrationService'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
    put:
      tags:
        - SqlMigrationServices
      description: Create or Update Database Migration Service.
      operationId: SqlMigrationServices_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of SqlMigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlMigrationService'
      responses:
        '200':
          description: Successfully updated the SQL migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlMigrationService'
        '201':
          description: Successfully created the SQL migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlMigrationService'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-long-running-operation: true
    delete:
      tags:
        - SqlMigrationServices
      description: Delete Database Migration Service.
      operationId: SqlMigrationServices_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the SQL migration Service.
        '202':
          description: Deleting the SQL migration Service.
        '204':
          description: The specified SQL migration Service does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-long-running-operation: true
    patch:
      tags:
        - SqlMigrationServices
      description: Update Database Migration Service.
      operationId: SqlMigrationServices_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of SqlMigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlMigrationServiceUpdate'
      responses:
        '200':
          description: Successfully updated the SQL migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlMigrationService'
        '201':
          description: Successfully created the SQL migration Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlMigrationService'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices?api-version=2023-07-15-preview:
    get:
      tags:
        - SqlMigrationServices
      description: Retrieve all SQL migration services in the resource group.
      operationId: SqlMigrationServices_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Migration SErvices in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlMigrationListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/listAuthKeys?api-version=2023-07-15-preview:
    post:
      tags:
        - SqlMigrationServices
      description: Retrieve the List of Authentication Keys for Self Hosted Integration Runtime.
      operationId: SqlMigrationServicesAuthKeys_list
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully return of List Authentication Keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-original-operationId: SqlMigrationServices_listAuthKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/regenerateAuthKeys?api-version=2023-07-15-preview:
    post:
      tags:
        - SqlMigrationServices
      description: Regenerate a new set of Authentication Keys for Self Hosted Integration Runtime.
      operationId: SqlMigrationServices_regenerateAuthKeys
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of SqlMigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenAuthKeys'
      responses:
        '200':
          description: Successfully regenerate of Authentication Keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegenAuthKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/deleteNode?api-version=2023-07-15-preview:
    post:
      tags:
        - SqlMigrationServices
      description: Delete the integration runtime node.
      operationId: SqlMigrationServices_deleteNode
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Details of SqlMigrationService resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteNode'
      responses:
        '200':
          description: Successfully delete the integration runtime node.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteNode'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/listMigrations?api-version=2023-07-15-preview:
    get:
      tags:
        - SqlMigrationServices
      description: Retrieve the List of database migrations attached to the service.
      operationId: SqlMigrationServicesMigrations_list
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully return of migrations attached to the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMigrationListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: SqlMigrationServices_listMigrations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/listMonitoringData?api-version=2023-07-15-preview:
    post:
      tags:
        - SqlMigrationServices
      description: Retrieve the registered Integration Runtime nodes and their monitoring data for a given Database Migration Service.
      operationId: SqlMigrationServicesMonitoringData_list
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SqlMigrationServiceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the monitoring data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeMonitoringData'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-original-operationId: SqlMigrationServices_listMonitoringData
  /subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/sqlMigrationServices?api-version=2023-07-15-preview:
    get:
      tags:
        - SqlMigrationServices
      description: Retrieve all SQL migration services in the subscriptions.
      operationId: SqlMigrationServices_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Migration Services in the Subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlMigrationListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.

             * 400 GenericUser - User Failure when calling other Resource Provider.

             * 400 OperationIdNotFound - Operation ID '{0}' not found.

             * 400 OperationTypeNotFound - Operation Type '{0}' not found.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.

             * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'

             * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'

             * 400 SerializationError - There was an error while processing response from RP Service : '{0}'

             * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.

             * 500 GenericSystem - System Failure when calling other Resource Provider.
      x-ms-pageable:
        nextLinkName: nextLink
