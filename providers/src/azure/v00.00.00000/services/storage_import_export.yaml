openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Import/Export service
  description: Azure Import/Export service is used to securely import large amounts of data to Azure Blob storage and Azure Files by shipping disk drives to an Azure datacenter. This service can also be used to transfer data from Azure Blob storage to disk drives and ship to your on-premises sites. Data from one or more disk drives can be imported either to Azure Blob storage or Azure Files.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    api-version:
      name: api-version
      in: query
      description: Specifies the API version to use for this request.
      required: false
      schema:
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription ID for the Azure user.
      required: true
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The resource group name uniquely identifies the resource group within the user subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    Accept-Language:
      name: Accept-Language
      in: header
      description: Specifies the preferred language for the response.
      required: false
      x-ms-parameter-location: client
      schema:
        type: string
    x-ms-client-tenant-id:
      name: x-ms-client-tenant-id
      in: header
      description: The tenant ID of the client making the request.
      required: false
      x-ms-client-name: ClientTenantId
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    PutJobParameters:
      description: Put Job parameters
      properties:
        location:
          type: string
          description: Specifies the supported Azure location where the job should be created
        tags:
          type: object
          description: Specifies the tags that will be assigned to the job.
        properties:
          $ref: '#/components/schemas/JobDetails'
          description: Specifies the job properties
      type: object
    JobDetails:
      description: Specifies the job properties
      properties:
        storageAccountId:
          type: string
          description: The resource identifier of the storage account where data will be imported to or exported from.
        jobType:
          type: string
          description: The type of job
        returnAddress:
          description: 'Specifies the return address information for the job. '
          $ref: '#/components/schemas/ReturnAddress'
        returnShipping:
          description: 'Specifies the return carrier and customer''s account with the carrier. '
          $ref: '#/components/schemas/ReturnShipping'
        shippingInformation:
          description: 'Contains information about the Microsoft datacenter to which the drives should be shipped. '
          $ref: '#/components/schemas/ShippingInformation'
        deliveryPackage:
          description: 'Contains information about the package being shipped by the customer to the Microsoft data center. '
          $ref: '#/components/schemas/DeliveryPackageInformation'
        returnPackage:
          description: 'Contains information about the package being shipped from the Microsoft data center to the customer to return the drives. The format is the same as the deliveryPackage property above. This property is not included if the drives have not yet been returned. '
          $ref: '#/components/schemas/PackageInformation'
        diagnosticsPath:
          type: string
          description: The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
        logLevel:
          type: string
          description: Default value is Error. Indicates whether error logging or verbose logging will be enabled.
        backupDriveManifest:
          type: boolean
          description: Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
          default: false
        state:
          type: string
          description: Current state of the job.
          default: Creating
        cancelRequested:
          type: boolean
          description: Indicates whether a request has been submitted to cancel the job.
          default: false
        percentComplete:
          type: integer
          format: int64
          description: Overall percentage completed for the job.
        incompleteBlobListUri:
          type: string
          description: A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
        driveList:
          description: List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
          type: array
          items:
            $ref: '#/components/schemas/DriveStatus'
        export:
          description: A property containing information about the blobs to be exported for an export job. This property is included for export jobs only.
          $ref: '#/components/schemas/Export'
        provisioningState:
          type: string
          description: Specifies the provisioning state of the job.
        encryptionKey:
          description: Contains information about the encryption key.
          $ref: '#/components/schemas/EncryptionKeyDetails'
      type: object
    EncryptionKeyDetails:
      description: Specifies the encryption key properties
      properties:
        kekType:
          type: string
          description: The type of kek encryption key
          default: MicrosoftManaged
          enum:
            - MicrosoftManaged
            - CustomerManaged
          x-ms-enum:
            name: EncryptionKekType
            modelAsString: true
        kekUrl:
          description: 'Specifies the url for kek encryption key. '
          type: string
        kekVaultResourceID:
          description: 'Specifies the keyvault resource id for kek encryption key. '
          type: string
      type: object
    IdentityDetails:
      description: 'Specifies the identity properties. '
      properties:
        type:
          type: string
          description: The type of identity
          default: None
          enum:
            - None
            - SystemAssigned
            - UserAssigned
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        principalId:
          description: 'Specifies the principal id for the identity for the job. '
          type: string
          readOnly: true
        tenantId:
          description: 'Specifies the tenant id for the identity for the job. '
          type: string
          readOnly: true
      type: object
    UpdateJobParameters:
      description: Update Job parameters
      properties:
        tags:
          type: object
          description: Specifies the tags that will be assigned to the job
        properties:
          x-ms-client-flatten: true
          properties:
            cancelRequested:
              type: boolean
              description: 'If specified, the value must be true. The service will attempt to cancel the job. '
              default: false
            state:
              type: string
              description: 'If specified, the value must be Shipping, which tells the Import/Export service that the package for the job has been shipped. The ReturnAddress and DeliveryPackage properties must have been set either in this request or in a previous request, otherwise the request will fail. '
            returnAddress:
              description: Specifies the return address information for the job.
              $ref: '#/components/schemas/ReturnAddress'
            returnShipping:
              description: Specifies the return carrier and customer's account with the carrier.
              $ref: '#/components/schemas/ReturnShipping'
            deliveryPackage:
              description: Contains information about the package being shipped by the customer to the Microsoft data center.
              $ref: '#/components/schemas/DeliveryPackageInformation'
            logLevel:
              type: string
              description: Indicates whether error logging or verbose logging is enabled.
            backupDriveManifest:
              type: boolean
              description: Indicates whether the manifest files on the drives should be copied to block blobs.
              default: false
            driveList:
              description: List of drives that comprise the job.
              type: array
              items:
                $ref: '#/components/schemas/DriveStatus'
          description: Specifies the properties of a UpdateJob.
      type: object
    ListJobsResponse:
      description: List jobs response
      properties:
        nextLink:
          type: string
          description: link to next batch of jobs
        value:
          type: array
          description: Job list
          items:
            $ref: '#/components/schemas/JobResponse'
      type: object
    JobResponse:
      x-ms-azure-resource: true
      description: Contains the job information.
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
          description: SystemData of ImportExport Jobs.
          readOnly: true
        id:
          type: string
          description: Specifies the resource identifier of the job.
          readOnly: true
        name:
          type: string
          description: Specifies the name of the job.
          readOnly: true
        type:
          type: string
          description: Specifies the type of the job resource.
          readOnly: true
        location:
          type: string
          description: Specifies the Azure location where the job is created.
        tags:
          type: object
          description: Specifies the tags that are assigned to the job.
        properties:
          $ref: '#/components/schemas/JobDetails'
          description: Specifies the job properties
        identity:
          $ref: '#/components/schemas/IdentityDetails'
          description: Specifies the job identity details
      type: object
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    Location:
      description: Provides information about an Azure data center location.
      properties:
        id:
          description: 'Specifies the resource identifier of the location. '
          type: string
        name:
          description: 'Specifies the name of the location. Use List Locations to get all supported locations. '
          type: string
        type:
          description: 'Specifies the type of the location. '
          type: string
        properties:
          x-ms-client-flatten: true
          description: location properties
          properties:
            recipientName:
              description: 'The recipient name to use when shipping the drives to the Azure data center. '
              type: string
            streetAddress1:
              description: 'The first line of the street address to use when shipping the drives to the Azure data center. '
              type: string
            streetAddress2:
              description: 'The second line of the street address to use when shipping the drives to the Azure data center. '
              type: string
            city:
              description: 'The city name to use when shipping the drives to the Azure data center. '
              type: string
            stateOrProvince:
              description: 'The state or province to use when shipping the drives to the Azure data center. '
              type: string
            postalCode:
              description: 'The postal code to use when shipping the drives to the Azure data center. '
              type: string
            countryOrRegion:
              description: 'The country or region to use when shipping the drives to the Azure data center. '
              type: string
            phone:
              description: 'The phone number for the Azure data center. '
              type: string
            additionalShippingInformation:
              description: Additional shipping information for customer, specific to datacenter to which customer should send their disks.
              type: string
            supportedCarriers:
              type: array
              description: 'A list of carriers that are supported at this location. '
              items:
                type: string
            alternateLocations:
              type: array
              description: 'A list of location IDs that should be used to ship shipping drives to for jobs created against the current location. If the current location is active, it will be part of the list. If it is temporarily closed due to maintenance, this list may contain other locations. '
              items:
                type: string
      type: object
    ReturnAddress:
      description: Specifies the return address information for the job.
      required:
        - recipientName
        - streetAddress1
        - city
        - postalCode
        - countryOrRegion
        - phone
        - email
      properties:
        recipientName:
          type: string
          description: 'The name of the recipient who will receive the hard drives when they are returned. '
        streetAddress1:
          type: string
          description: 'The first line of the street address to use when returning the drives. '
        streetAddress2:
          type: string
          description: 'The second line of the street address to use when returning the drives. '
        city:
          type: string
          description: The city name to use when returning the drives.
        stateOrProvince:
          type: string
          description: The state or province to use when returning the drives.
        postalCode:
          type: string
          description: The postal code to use when returning the drives.
        countryOrRegion:
          type: string
          description: 'The country or region to use when returning the drives. '
        phone:
          type: string
          description: Phone number of the recipient of the returned drives.
        email:
          type: string
          description: Email address of the recipient of the returned drives.
      type: object
    ReturnShipping:
      description: Specifies the return carrier and customer's account with the carrier.
      required:
        - carrierName
        - carrierAccountNumber
      properties:
        carrierName:
          type: string
          description: The carrier's name.
        carrierAccountNumber:
          type: string
          description: The customer's account number with the carrier.
      type: object
    ShippingInformation:
      description: Contains information about the Microsoft datacenter to which the drives should be shipped.
      properties:
        recipientName:
          type: string
          description: 'The name of the recipient who will receive the hard drives when they are returned. '
        streetAddress1:
          type: string
          description: 'The first line of the street address to use when returning the drives. '
        streetAddress2:
          type: string
          description: 'The second line of the street address to use when returning the drives. '
        city:
          type: string
          description: The city name to use when returning the drives.
        stateOrProvince:
          type: string
          description: The state or province to use when returning the drives.
        postalCode:
          type: string
          description: The postal code to use when returning the drives.
        countryOrRegion:
          type: string
          description: 'The country or region to use when returning the drives. '
        phone:
          type: string
          description: Phone number of the recipient of the returned drives.
        additionalInformation:
          type: string
          description: Additional shipping information for customer, specific to datacenter to which customer should send their disks.
          readOnly: true
      type: object
    PackageInformation:
      description: Contains information about the package being shipped by the customer to the Microsoft data center.
      required:
        - carrierName
        - trackingNumber
        - driveCount
        - shipDate
      properties:
        carrierName:
          type: string
          description: The name of the carrier that is used to ship the import or export drives.
        trackingNumber:
          type: string
          description: The tracking number of the package.
        driveCount:
          type: integer
          format: int64
          description: The number of drives included in the package.
        shipDate:
          type: string
          description: The date when the package is shipped.
      type: object
    DeliveryPackageInformation:
      description: Contains information about the delivery package being shipped by the customer to the Microsoft data center.
      required:
        - carrierName
        - trackingNumber
      properties:
        carrierName:
          type: string
          description: The name of the carrier that is used to ship the import or export drives.
        trackingNumber:
          type: string
          description: The tracking number of the package.
        driveCount:
          type: integer
          format: int64
          description: The number of drives included in the package.
        shipDate:
          type: string
          description: The date when the package is shipped.
      type: object
    DriveStatus:
      description: Provides information about the drive's status
      properties:
        driveId:
          type: string
          description: The drive's hardware serial number, without spaces.
        bitLockerKey:
          type: string
          description: The BitLocker key used to encrypt the drive.
        manifestFile:
          type: string
          description: 'The relative path of the manifest file on the drive. '
        manifestHash:
          type: string
          description: The Base16-encoded MD5 hash of the manifest file on the drive.
        driveHeaderHash:
          type: string
          description: The drive header hash value.
        state:
          type: string
          description: 'The drive''s current state. '
          enum:
            - Specified
            - Received
            - NeverReceived
            - Transferring
            - Completed
            - CompletedMoreInfo
            - ShippedBack
          default: Specified
          x-ms-enum:
            name: DriveState
            modelAsString: true
        copyStatus:
          type: string
          description: Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
        percentComplete:
          type: integer
          format: int64
          description: 'Percentage completed for the drive. '
        verboseLogUri:
          type: string
          description: 'A URI that points to the blob containing the verbose log for the data transfer operation. '
        errorLogUri:
          type: string
          description: A URI that points to the blob containing the error log for the data transfer operation.
        manifestUri:
          type: string
          description: 'A URI that points to the blob containing the drive manifest file. '
        bytesSucceeded:
          type: integer
          format: int64
          description: Bytes successfully transferred for the drive.
      type: object
    Export:
      description: A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
      properties:
        blobList:
          description: A list of the blobs to be exported.
          x-ms-client-flatten: true
          properties:
            blobPath:
              type: array
              description: A collection of blob-path strings.
              items:
                type: string
            blobPathPrefix:
              type: array
              description: A collection of blob-prefix strings.
              items:
                type: string
        blobListBlobPath:
          type: string
          description: 'The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root. '
      type: object
    LocationsResponse:
      description: Locations response
      properties:
        value:
          type: array
          description: locations
          items:
            $ref: '#/components/schemas/Location'
      type: object
    GetBitLockerKeysResponse:
      description: GetBitLockerKeys response
      properties:
        value:
          type: array
          description: drive status
          items:
            $ref: '#/components/schemas/DriveBitLockerKey'
      type: object
    DriveBitLockerKey:
      description: BitLocker recovery key or password to the specified drive
      properties:
        bitLockerKey:
          type: string
          description: BitLocker recovery key or password
        driveId:
          type: string
          description: Drive ID
      type: object
    ListOperationsResponse:
      description: List operations response
      properties:
        value:
          type: array
          description: operations
          items:
            $ref: '#/components/schemas/Operation'
      type: object
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    locations:
      id: azure.storage_import_export.locations
      name: locations
      title: locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ImportExport~1locations?api-version=2021-01-01/get'
            operationId: Locations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocationsResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ImportExport~1locations~1{locationName}?api-version=2021-01-01/get'
            operationId: Locations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Location
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    jobs:
      id: azure.storage_import_export.jobs
      name: jobs
      title: jobs
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ImportExport~1jobs?api-version=2021-01-01/get'
            operationId: Jobs_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListJobsResponse
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ImportExport~1jobs?api-version=2021-01-01/get'
            operationId: Jobs_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListJobsResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ImportExport~1jobs~1{jobName}?api-version=2021-01-01/get'
            operationId: Jobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobResponse
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ImportExport~1jobs~1{jobName}?api-version=2021-01-01/patch'
            operationId: Jobs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobResponse
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ImportExport~1jobs~1{jobName}?api-version=2021-01-01/put'
            operationId: Jobs_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobResponse
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ImportExport~1jobs~1{jobName}?api-version=2021-01-01/delete'
            operationId: Jobs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
    bit_locker_keys:
      id: azure.storage_import_export.bit_locker_keys
      name: bit_locker_keys
      title: bit_locker_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ImportExport~1jobs~1{jobName}~1listBitLockerKeys?api-version=2021-01-01/post'
            operationId: BitLockerKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GetBitLockerKeysResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bit_locker_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.storage_import_export.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ImportExport~1operations?api-version=2021-01-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListOperationsResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_jobs:
      id: azure.storage_import_export.vw_jobs
      name: vw_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              systemData as system_data,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.storageAccountId') as "storage_account_id",
              JSON_EXTRACT(properties, '$.jobType') as "job_type",
              JSON_EXTRACT(properties, '$.returnAddress') as "return_address",
              JSON_EXTRACT(properties, '$.returnShipping') as "return_shipping",
              JSON_EXTRACT(properties, '$.shippingInformation') as "shipping_information",
              JSON_EXTRACT(properties, '$.deliveryPackage') as "delivery_package",
              JSON_EXTRACT(properties, '$.returnPackage') as "return_package",
              JSON_EXTRACT(properties, '$.diagnosticsPath') as "diagnostics_path",
              JSON_EXTRACT(properties, '$.logLevel') as "log_level",
              JSON_EXTRACT(properties, '$.backupDriveManifest') as "backup_drive_manifest",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.cancelRequested') as "cancel_requested",
              JSON_EXTRACT(properties, '$.percentComplete') as "percent_complete",
              JSON_EXTRACT(properties, '$.incompleteBlobListUri') as "incomplete_blob_list_uri",
              JSON_EXTRACT(properties, '$.driveList') as "drive_list",
              JSON_EXTRACT(properties, '$.export') as "export",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.encryptionKey') as "encryption_key",
              subscriptionId,
              resourceGroupName,
              jobName
              FROM azure.storage_import_export.jobs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                systemData as system_data,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.storageAccountId') as "storage_account_id",
                json_extract_path_text(properties, '$.jobType') as "job_type",
                json_extract_path_text(properties, '$.returnAddress') as "return_address",
                json_extract_path_text(properties, '$.returnShipping') as "return_shipping",
                json_extract_path_text(properties, '$.shippingInformation') as "shipping_information",
                json_extract_path_text(properties, '$.deliveryPackage') as "delivery_package",
                json_extract_path_text(properties, '$.returnPackage') as "return_package",
                json_extract_path_text(properties, '$.diagnosticsPath') as "diagnostics_path",
                json_extract_path_text(properties, '$.logLevel') as "log_level",
                json_extract_path_text(properties, '$.backupDriveManifest') as "backup_drive_manifest",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.cancelRequested') as "cancel_requested",
                json_extract_path_text(properties, '$.percentComplete') as "percent_complete",
                json_extract_path_text(properties, '$.incompleteBlobListUri') as "incomplete_blob_list_uri",
                json_extract_path_text(properties, '$.driveList') as "drive_list",
                json_extract_path_text(properties, '$.export') as "export",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.encryptionKey') as "encryption_key",
                subscriptionId,
                resourceGroupName,
                jobName
                FROM azure.storage_import_export.jobs
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.ImportExport/locations?api-version=2021-01-01:
    get:
      tags:
        - StorageImportExport
      operationId: Locations_List
      description: Returns a list of locations to which you can ship the disks associated with an import or export job. A location is a Microsoft data center region.
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /providers/Microsoft.ImportExport/locations/{locationName}?api-version=2021-01-01:
    get:
      tags:
        - StorageImportExport
      operationId: Locations_Get
      description: Returns the details about a location to which you can ship the disks associated with an import or export job. A location is an Azure region.
      parameters:
        - name: locationName
          in: path
          description: The name of the location. For example, West US or westus.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.ImportExport/jobs?api-version=2021-01-01:
    get:
      tags:
        - StorageImportExport
      operationId: Jobs_ListBySubscription
      description: Returns all active and completed jobs in a subscription.
      parameters:
        - name: $top
          in: query
          description: An integer value that specifies how many jobs at most should be returned. The value cannot exceed 100.
          required: false
          schema:
            format: int64
            type: integer
        - name: $filter
          in: query
          description: Can be used to restrict the results to certain conditions.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ImportExport/jobs?api-version=2021-01-01:
    get:
      tags:
        - StorageImportExport
      operationId: Jobs_ListByResourceGroup
      description: Returns all active and completed jobs in a resource group.
      parameters:
        - name: $top
          in: query
          description: An integer value that specifies how many jobs at most should be returned. The value cannot exceed 100.
          required: false
          schema:
            format: int64
            type: integer
        - name: $filter
          in: query
          description: Can be used to restrict the results to certain conditions.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ImportExport/jobs/{jobName}?api-version=2021-01-01:
    get:
      tags:
        - StorageImportExport
      operationId: Jobs_Get
      description: Gets information about an existing job.
      parameters:
        - name: jobName
          in: path
          description: The name of the import/export job.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - StorageImportExport
      operationId: Jobs_Update
      description: Updates specific properties of a job. You can call this operation to notify the Import/Export service that the hard drives comprising the import or export job have been shipped to the Microsoft data center. It can also be used to cancel an existing job.
      parameters:
        - name: jobName
          in: path
          description: The name of the import/export job.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      requestBody:
        description: The parameters to update in the job
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - StorageImportExport
      operationId: Jobs_Create
      description: Creates a new job or updates an existing job in the specified subscription.
      parameters:
        - name: jobName
          in: path
          description: The name of the import/export job.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
        - $ref: '#/components/parameters/x-ms-client-tenant-id'
      requestBody:
        description: The parameters used for creating the job
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - StorageImportExport
      operationId: Jobs_Delete
      description: Deletes an existing job. Only jobs in the Creating or Completed states can be deleted.
      parameters:
        - name: jobName
          in: path
          description: The name of the import/export job.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ImportExport/jobs/{jobName}/listBitLockerKeys?api-version=2021-01-01:
    post:
      tags:
        - StorageImportExport
      operationId: BitLockerKeys_List
      description: Returns the BitLocker Keys for all drives in the specified job.
      parameters:
        - name: jobName
          in: path
          description: The name of the import/export job.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBitLockerKeysResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /providers/Microsoft.ImportExport/operations?api-version=2021-01-01:
    get:
      tags:
        - StorageImportExport
      operationId: Operations_List
      description: Returns the list of operations supported by the import/export resource provider.
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/Accept-Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
        default:
          description: An error occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
