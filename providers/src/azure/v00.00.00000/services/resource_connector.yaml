openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Resource Connector
  description: Defines a connector that connects other resources to a resource group. Implementations of this class can let users browse resources inside a specific resource group.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ResourceNameParameter:
      name: resourceName
      in: path
      description: Appliances name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 63
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          description: The principal ID of resource identity.
          type: string
          readOnly: true
        tenantId:
          description: The tenant ID of resource.
          type: string
          readOnly: true
        type:
          description: The identity type.
          type: string
          enum:
            - SystemAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: true
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ArtifactProfile:
      description: Appliance ArtifactProfile definition.
      type: object
      properties:
        endpoint:
          description: Endpoint is the URL to upload artifacts to.
          type: string
          readOnly: true
    ArtifactType:
      description: Appliance ArtifactType definition.
      type: string
      enum:
        - LogsArtifactType
      x-ms-enum:
        name: ArtifactType
        modelAsString: true
    HybridConnectionConfig:
      description: Contains the REP (rendezvous endpoint) and “Listener” access token from notification service (NS).
      type: object
      properties:
        expirationTime:
          description: Timestamp when this token will be expired.
          type: integer
          readOnly: true
          format: int64
        hybridConnectionName:
          description: Name of the connection
          type: string
          readOnly: true
        relay:
          description: Name of the notification service.
          type: string
          readOnly: true
        token:
          description: Listener access token
          type: string
          readOnly: true
    SSHKey:
      description: Appliance SSHKey definition.
      type: object
      properties:
        certificate:
          description: Certificate associated with the public key if the key is signed.
          type: string
          readOnly: true
        creationTimeStamp:
          description: Certificate creation timestamp (Unix).
          type: integer
          readOnly: true
          format: int64
        expirationTimeStamp:
          description: Certificate expiration timestamp (Unix).
          type: integer
          readOnly: true
          format: int64
        privateKey:
          description: Private Key.
          type: string
          readOnly: true
        publicKey:
          description: Public Key.
          type: string
          readOnly: true
    SSHKeyType:
      description: Appliance SSHKeyType definition.
      type: string
      enum:
        - SSHCustomerUser
        - ManagementCAKey
        - LogsKey
        - ScopedAccessKey
      x-ms-enum:
        name: SSHKeyType
        modelAsString: true
    SupportedVersion:
      description: The SupportedVersion object for appliance.
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/SupportedVersionMetadata'
          description: This is the metadata of the supported newer version.
          type: object
          readOnly: true
        version:
          description: The newer version available for upgrade.
          type: string
          readOnly: true
    SupportedVersionCatalogVersion:
      description: The SupportedVersionCatalogVersion object for appliance.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SupportedVersionCatalogVersionData'
          description: The newer supported version catalog version data.
          type: object
          readOnly: true
        name:
          description: The catalog version name for the version available for upgrade.
          type: string
          readOnly: true
        namespace:
          description: The catalog version namespace for the version available for upgrade.
          type: string
          readOnly: true
    SupportedVersionCatalogVersionData:
      description: The SupportedVersionCatalogVersionData object for appliance.
      type: object
      properties:
        audience:
          description: The image audience name for the version available for upgrade.
          type: string
          readOnly: true
        catalog:
          description: The image catalog name for the version available for upgrade.
          type: string
          readOnly: true
        offer:
          description: The image offer name for the version available for upgrade.
          type: string
          readOnly: true
        version:
          description: The image version for the version available for upgrade.
          type: string
          readOnly: true
    SupportedVersionMetadata:
      description: The SupportedVersionMetadata object for appliance.
      type: object
      properties:
        catalogVersion:
          $ref: '#/components/schemas/SupportedVersionCatalogVersion'
          description: The newer supported version catalog version.
          type: object
          readOnly: true
    UpgradeGraph:
      description: The Upgrade Graph for appliance.
      properties:
        id:
          description: The appliance resource path
          type: string
          readOnly: true
        name:
          description: The release train name.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UpgradeGraphProperties'
          description: The properties of supported version
          type: object
      type: object
    UpgradeGraphProperties:
      description: The Upgrade Graph Properties for appliance.
      type: object
      properties:
        applianceVersion:
          description: The current appliance version
          type: string
          readOnly: true
        supportedVersions:
          description: This contains the current version and supported upgrade versions.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SupportedVersion'
          x-ms-identifiers: []
    appliance:
      description: Appliances definition.
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
          description: Identity for the resource.
        properties:
          $ref: '#/components/schemas/applianceProperties'
          description: The set of properties specific to an Appliance
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    applianceCredentialKubeconfig:
      description: Cluster User Credential appliance.
      type: object
      properties:
        name:
          description: Name which contains the role of the kubeconfig.
          type: string
          readOnly: true
          enum:
            - clusterUser
            - clusterCustomerUser
          x-ms-enum:
            name: AccessProfileType
            modelAsString: true
        value:
          description: Contains the kubeconfig value.
          type: string
          readOnly: true
    applianceGetTelemetryConfigResult:
      description: The Get Telemetry Config Result appliance.
      type: object
      properties:
        telemetryInstrumentationKey:
          description: Telemetry instrumentation key.
          type: string
          readOnly: true
    applianceListCredentialResults:
      description: The List Cluster User Credential appliance.
      type: object
      properties:
        hybridConnectionConfig:
          $ref: '#/components/schemas/HybridConnectionConfig'
          description: Contains the REP (rendezvous endpoint) and “Listener” access token from notification service (NS).
          readOnly: true
        kubeconfigs:
          description: The list of appliance kubeconfigs.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/applianceCredentialKubeconfig'
          x-ms-identifiers: []
    applianceListKeysResults:
      description: The List Cluster Keys Results appliance.
      type: object
      properties:
        artifactProfiles:
          description: Map of artifacts that contains a list of ArtifactProfile used to upload artifacts such as logs.
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/ArtifactProfile'
        kubeconfigs:
          description: The list of appliance kubeconfigs.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/applianceCredentialKubeconfig'
          x-ms-identifiers: []
        sshKeys:
          description: Map of Customer User Public, Private SSH Keys and Certificate when available.
          type: object
          readOnly: true
          additionalProperties:
            $ref: '#/components/schemas/SSHKey'
    applianceListResult:
      description: The List Appliances operation response.
      type: object
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
        value:
          description: The list of Appliances.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/appliance'
    applianceOperation:
      description: Appliances operation.
      type: object
      properties:
        display:
          $ref: '#/components/schemas/applianceOperationValueDisplay'
          description: Describes the properties of an Appliances Operation Value Display.
          x-ms-client-flatten: true
        isDataAction:
          description: Is this Operation a data plane operation
          type: boolean
          readOnly: true
        name:
          description: The name of the compute operation.
          type: string
          readOnly: true
        origin:
          description: The origin of the compute operation.
          type: string
          readOnly: true
    applianceOperationValueDisplay:
      description: Describes the properties of an Appliances Operation Value Display.
      type: object
      properties:
        description:
          description: The description of the operation.
          type: string
          readOnly: true
        operation:
          description: The display name of the compute operation.
          type: string
          readOnly: true
        provider:
          description: The resource provider for the operation.
          type: string
          readOnly: true
        resource:
          description: The display name of the resource the operation applies to.
          type: string
          readOnly: true
    applianceOperationsList:
      description: Lists of Appliances operations.
      required:
        - value
      type: object
      properties:
        nextLink:
          description: Next page of operations.
          type: string
        value:
          description: Array of applianceOperation
          type: array
          items:
            $ref: '#/components/schemas/applianceOperation'
          x-ms-identifiers: []
    applianceProperties:
      description: Properties for an appliance.
      type: object
      properties:
        distro:
          description: Represents a supported Fabric/Infra. (AKSEdge etc...).
          type: string
          enum:
            - AKSEdge
          x-ms-enum:
            name: distro
            modelAsString: true
          default: AKSEdge
        infrastructureConfig:
          description: Contains infrastructure information about the Appliance
          type: object
          properties:
            provider:
              description: Information about the connected appliance.
              type: string
              enum:
                - VMWare
                - HCI
                - SCVMM
              x-ms-enum:
                name: provider
                modelAsString: true
        provisioningState:
          description: The current deployment or provisioning state, which only appears in the response.
          type: string
          readOnly: true
        publicKey:
          description: Certificates pair used to download MSI certificate from HIS. Can only be set once.
          type: string
        status:
          description: Appliance’s health and state of connection to on-prem
          type: string
          readOnly: true
          enum:
            - WaitingForHeartbeat
            - Validating
            - Connecting
            - Connected
            - Running
            - PreparingForUpgrade
            - ETCDSnapshotFailed
            - UpgradePrerequisitesCompleted
            - ValidatingSFSConnectivity
            - ValidatingImageDownload
            - ValidatingImageUpload
            - ValidatingETCDHealth
            - PreUpgrade
            - UpgradingKVAIO
            - WaitingForKVAIO
            - ImagePending
            - ImageProvisioning
            - ImageProvisioned
            - ImageDownloading
            - ImageDownloaded
            - ImageDeprovisioning
            - ImageUnknown
            - UpdatingCloudOperator
            - WaitingForCloudOperator
            - UpdatingCAPI
            - UpdatingCluster
            - PostUpgrade
            - UpgradeComplete
            - UpgradeClusterExtensionFailedToDelete
            - UpgradeFailed
            - Offline
            - None
          x-ms-enum:
            name: status
            modelAsString: true
        version:
          description: Version of the Appliance
          type: string
    patchableAppliance:
      description: The Appliances patchable resource definition.
      type: object
      x-ms-azure-resource: true
      x-ms-client-flatten: true
      properties:
        tags:
          description: Resource tags
          type: object
          additionalProperties:
            type: string
  x-stackQL-resources:
    appliances_operations:
      id: azure.resource_connector.appliances_operations
      name: appliances_operations
      title: appliances_operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceConnector~1operations~1?api-version=2022-10-27/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/appliances_operations/methods/list'
        insert: []
        update: []
        delete: []
    appliances:
      id: azure.resource_connector.appliances
      name: appliances
      title: appliances
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ResourceConnector~1appliances~1?api-version=2022-10-27/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1?api-version=2022-10-27/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1{resourceName}~1?api-version=2022-10-27/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1{resourceName}~1?api-version=2022-10-27/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1{resourceName}~1?api-version=2022-10-27/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1{resourceName}~1?api-version=2022-10-27/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/appliances/methods/get'
          - $ref: '#/components/x-stackQL-resources/appliances/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/appliances/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/appliances/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/appliances/methods/delete'
    appliances_telemetry_config:
      id: azure.resource_connector.appliances_telemetry_config
      name: appliances_telemetry_config
      title: appliances_telemetry_config
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ResourceConnector~1telemetryconfig~1?api-version=2022-10-27/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/appliances_telemetry_config/methods/get'
        insert: []
        update: []
        delete: []
    appliances_cluster_user_credential:
      id: azure.resource_connector.appliances_cluster_user_credential
      name: appliances_cluster_user_credential
      title: appliances_cluster_user_credential
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1{resourceName}~1listClusterUserCredential~1?api-version=2022-10-27/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/appliances_cluster_user_credential/methods/list'
        insert: []
        update: []
        delete: []
    appliances_keys:
      id: azure.resource_connector.appliances_keys
      name: appliances_keys
      title: appliances_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1{resourceName}~1listkeys~1?api-version=2022-10-27/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/appliances_keys/methods/list'
        insert: []
        update: []
        delete: []
    appliances_upgrade_graph:
      id: azure.resource_connector.appliances_upgrade_graph
      name: appliances_upgrade_graph
      title: appliances_upgrade_graph
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceConnector~1appliances~1{resourceName}~1upgradeGraphs~1{upgradeGraph}~1?api-version=2022-10-27/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/appliances_upgrade_graph/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.ResourceConnector/operations/?api-version=2022-10-27:
    get:
      tags:
        - appliances
      operationId: Appliances_ListOperations
      description: Lists all available Appliances operations.
      parameters: []
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applianceOperationsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ResourceConnector/appliances/?api-version=2022-10-27:
    get:
      tags:
        - appliances
      operationId: Appliances_ListBySubscription
      summary: Gets a list of Appliances in a subscription.
      description: Gets a list of Appliances in the specified subscription. The operation returns properties of each Appliance
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applianceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ResourceConnector/telemetryconfig/?api-version=2022-10-27:
    get:
      tags:
        - appliances
      operationId: Appliances_GetTelemetryConfig
      summary: Gets the telemetry config.
      description: Gets the telemetry config.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applianceGetTelemetryConfigResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/?api-version=2022-10-27:
    get:
      tags:
        - appliances
      operationId: Appliances_ListByResourceGroup
      summary: Gets a list of Appliances in the specified subscription and resource group.
      description: Gets a list of Appliances in the specified subscription and resource group. The operation returns properties of each Appliance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applianceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/?api-version=2022-10-27:
    get:
      tags:
        - appliances
      operationId: Appliances_Get
      summary: Gets an Appliance.
      description: Gets the details of an Appliance with a specified resource group and name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appliance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - appliances
      operationId: Appliances_CreateOrUpdate
      summary: Creates or updates an Appliance.
      description: Creates or updates an Appliance in the specified Subscription and Resource Group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Parameters supplied to create or update an Appliance.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appliance'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appliance'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appliance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - appliances
      operationId: Appliances_Delete
      summary: Deletes an Appliance.
      description: Deletes an Appliance with the specified Resource Name, Resource Group, and Subscription Id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '202':
          description: Accepted. The response indicates the delete operation is performed in the background.
        '204':
          description: NoContent. The response indicates the appliance resource is already deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - appliances
      operationId: Appliances_Update
      summary: Updates an Appliance.
      description: Updates an Appliance with the specified Resource Name in the specified Resource Group and Subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: The updatable fields of an existing Appliance.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchableAppliance'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appliance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/listClusterUserCredential/?api-version=2022-10-27:
    post:
      tags:
        - appliances
      operationId: Appliances_ListClusterUserCredential
      summary: Returns the cluster user credential.
      description: Returns the cluster user credentials for the dedicated appliance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applianceListCredentialResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/listkeys/?api-version=2022-10-27:
    post:
      tags:
        - appliances
      operationId: Appliances_ListKeys
      summary: Gets the management config.
      description: Returns the cluster customer credentials for the dedicated appliance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - name: artifactType
          in: query
          description: This sets the type of artifact being returned, when empty no artifact endpoint is returned.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applianceListKeysResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceConnector/appliances/{resourceName}/upgradeGraphs/{upgradeGraph}/?api-version=2022-10-27:
    get:
      tags:
        - appliances
      operationId: Appliances_GetUpgradeGraph
      summary: Gets an Appliance upgrade graph.
      description: Gets the upgrade graph of an Appliance with a specified resource group and name and specific release train.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - name: upgradeGraph
          in: path
          description: Upgrade graph version, ex - stable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeGraph'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
