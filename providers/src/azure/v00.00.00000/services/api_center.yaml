openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure API Center
  description: Azure API Center helps you develop and maintain a structured inventory of your organizations APIs. API Center enables API discovery, reuse, and governance at scale.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    OdataFilterParameter:
      name: $filter
      in: query
      description: OData filter parameter.
      required: false
      x-ms-parameter-location: method
      x-ms-client-name: filter
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ActionType:
      type: string
      description: The type of action
      enum:
        - Internal
      x-ms-enum:
        name: ActionType
        modelAsString: true
        values:
          - name: Internal
            value: Internal
            description: an internal action
    Api:
      description: API entity.
      properties:
        properties:
          $ref: '#/components/schemas/ApiProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ApiDefinition:
      description: API definition entity.
      properties:
        properties:
          $ref: '#/components/schemas/ApiDefinitionProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ApiDefinitionListResult:
      type: object
      description: The response of a ApiDefinition list operation.
      properties:
        value:
          type: array
          description: The ApiDefinition items on this page
          items:
            $ref: '#/components/schemas/ApiDefinition'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    ApiDefinitionProperties:
      type: object
      description: API definition properties entity.
      properties:
        title:
          type: string
          description: API definition title.
          minLength: 1
          maxLength: 50
        description:
          type: string
          description: API definition description.
        specification:
          $ref: '#/components/schemas/ApiDefinitionPropertiesSpecification'
          description: API specification details.
          readOnly: true
      required:
        - title
    ApiDefinitionPropertiesSpecification:
      type: object
      description: API specification details.
      properties:
        name:
          type: string
          description: Specification name.
        version:
          type: string
          description: Specification version.
    ApiImportSuccess:
      description: The API specification was successfully imported.
      properties: {}
      type: object
    ApiKind:
      type: string
      description: The kind of the API
      enum:
        - rest
        - graphql
        - grpc
        - soap
        - webhook
        - websocket
      x-ms-enum:
        name: ApiKind
        modelAsString: true
        values:
          - name: rest
            value: rest
            description: A Representational State Transfer Api
          - name: graphql
            value: graphql
            description: A Graph query language Api
          - name: grpc
            value: grpc
            description: A gRPC Api
          - name: soap
            value: soap
            description: A SOAP Api
          - name: webhook
            value: webhook
            description: Web Hook
          - name: websocket
            value: websocket
            description: Web Socket
    ApiListResult:
      type: object
      description: The response of a Api list operation.
      properties:
        value:
          type: array
          description: The Api items on this page
          items:
            $ref: '#/components/schemas/Api'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    ApiProperties:
      type: object
      description: API properties.
      properties:
        title:
          type: string
          description: API title.
          minLength: 1
          maxLength: 50
        kind:
          $ref: '#/components/schemas/ApiKind'
          description: Kind of API. For example, REST or GraphQL.
        description:
          type: string
          description: Description of the API.
          maxLength: 1000
        summary:
          type: string
          description: Short description of the API.
          maxLength: 200
        lifecycleStage:
          $ref: '#/components/schemas/LifecycleStage'
          description: Current lifecycle stage of the API.
          readOnly: true
        termsOfService:
          $ref: '#/components/schemas/TermsOfService'
          description: Terms of service for the API.
        externalDocumentation:
          type: array
          description: The set of external documentation
          maxItems: 20
          items:
            $ref: '#/components/schemas/ExternalDocumentation'
          x-ms-identifiers: []
        contacts:
          type: array
          description: The set of contacts
          items:
            $ref: '#/components/schemas/Contact'
          x-ms-identifiers: []
        license:
          $ref: '#/components/schemas/License'
          description: The license information for the API.
        customProperties:
          $ref: '#/components/schemas/CustomProperties'
          description: The custom metadata defined for API catalog entities.
      required:
        - title
        - kind
    ApiSpecExportResult:
      type: object
      description: The API specification export result.
      properties:
        format:
          $ref: '#/components/schemas/ApiSpecExportResultFormat'
          description: The format of exported result
        value:
          type: string
          description: The result of the export operation.
    ApiSpecExportResultFormat:
      type: string
      description: Result format for exported Api spec
      enum:
        - inline
        - link
      x-ms-enum:
        name: ApiSpecExportResultFormat
        modelAsString: true
        values:
          - name: inline
            value: inline
            description: The inlined content of a specification document.
          - name: link
            value: link
            description: The link to the result of the export operation. The URL is valid for 5 minutes.
    ApiSpecImportRequest:
      type: object
      description: The API specification source entity properties.
      properties:
        value:
          type: string
          description: Value of the API specification source.
        format:
          $ref: '#/components/schemas/ApiSpecImportSourceFormat'
          description: Format of the API specification source.
        specification:
          $ref: '#/components/schemas/ApiSpecImportRequestSpecification'
          description: API specification details.
    ApiSpecImportRequestSpecification:
      type: object
      description: API specification details.
      properties:
        name:
          type: string
          description: Specification name.
        version:
          type: string
          description: Specification version.
    ApiSpecImportSourceFormat:
      type: string
      description: Source format for imported Api spec
      enum:
        - inline
        - link
      x-ms-enum:
        name: ApiSpecImportSourceFormat
        modelAsString: true
        values:
          - name: inline
            value: inline
            description: The inlined content of a specification document.
          - name: link
            value: link
            description: |-
              The link to a specification document hosted on a publicly accessible internet
              address.
    ApiVersion:
      description: API version entity.
      properties:
        properties:
          $ref: '#/components/schemas/ApiVersionProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ApiVersionListResult:
      type: object
      description: The response of a ApiVersion list operation.
      properties:
        value:
          type: array
          description: The ApiVersion items on this page
          items:
            $ref: '#/components/schemas/ApiVersion'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    ApiVersionProperties:
      type: object
      description: API version properties entity.
      properties:
        title:
          type: string
          description: API version title.
          minLength: 1
          maxLength: 50
        lifecycleStage:
          $ref: '#/components/schemas/LifecycleStage'
          description: Current lifecycle stage of the API.
      required:
        - title
        - lifecycleStage
    Contact:
      type: object
      description: Contact information
      properties:
        name:
          type: string
          description: Name of the contact.
          maxLength: 100
        url:
          type: string
          format: uri
          description: URL for the contact.
          maxLength: 200
        email:
          type: string
          description: Email address of the contact.
          maxLength: 100
    CreatedByType:
      type: string
      description: How the resource was created
      enum:
        - User
        - Application
        - ManagedIdentity
        - Key
      x-ms-enum:
        name: CreatedByType
        modelAsString: true
        values:
          - name: User
            value: User
            description: Created by user
          - name: Application
            value: Application
            description: Created by Application
          - name: ManagedIdentity
            value: ManagedIdentity
            description: Created by Managed Identity
          - name: Key
            value: Key
            description: Created By Key
    CustomProperties:
      title: Custom Properties
      description: The custom metadata defined for API catalog entities.
      properties: {}
      type: object
    DeletedService:
      description: Soft-deleted service entity.
      properties:
        properties:
          $ref: '#/components/schemas/DeletedServiceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DeletedServiceListResult:
      type: object
      description: The response of a DeletedService list operation.
      properties:
        value:
          type: array
          description: The DeletedService items on this page
          items:
            $ref: '#/components/schemas/DeletedService'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    DeletedServiceProperties:
      type: object
      description: Deleted service properties.
      properties:
        scheduledPurgeDate:
          type: string
          format: date-time
          description: 'UTC date and time when the service will be automatically purged. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
        softDeletionDate:
          type: string
          format: date-time
          description: 'UTC date and time when the service was soft-deleted. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
    Deployment:
      description: API deployment entity.
      properties:
        properties:
          $ref: '#/components/schemas/DeploymentProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    DeploymentListResult:
      type: object
      description: The response of a Deployment list operation.
      properties:
        value:
          type: array
          description: The Deployment items on this page
          items:
            $ref: '#/components/schemas/Deployment'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    DeploymentProperties:
      type: object
      description: API deployment entity properties.
      properties:
        title:
          type: string
          description: API deployment title
          minLength: 1
          maxLength: 50
        description:
          type: string
          description: Description of the deployment.
          maxLength: 500
        environmentId:
          type: string
          description: API center-scoped environment resource ID.
        definitionId:
          type: string
          description: API center-scoped definition resource ID.
        state:
          $ref: '#/components/schemas/DeploymentState'
          description: State of API deployment.
        server:
          $ref: '#/components/schemas/DeploymentServer'
          description: The deployment server
        customProperties:
          $ref: '#/components/schemas/CustomProperties'
          description: The custom metadata defined for API catalog entities.
    DeploymentServer:
      type: object
      description: Server
      properties:
        runtimeUri:
          type: array
          description: Base runtime URLs for this deployment.
          items:
            $ref: '#/components/schemas/SmallString'
    DeploymentState:
      type: string
      description: State of the Deployment
      enum:
        - active
        - inactive
      x-ms-enum:
        name: DeploymentState
        modelAsString: true
        values:
          - name: active
            value: active
            description: Active State
          - name: inactive
            value: inactive
            description: Inactive State
    Environment:
      description: Environment entity.
      properties:
        properties:
          $ref: '#/components/schemas/EnvironmentProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    EnvironmentKind:
      type: string
      description: The kind of environment
      enum:
        - development
        - testing
        - staging
        - production
      x-ms-enum:
        name: EnvironmentKind
        modelAsString: true
        values:
          - name: development
            value: development
            description: Development environment
          - name: testing
            value: testing
            description: Testing environment
          - name: staging
            value: staging
            description: Staging environment
          - name: production
            value: production
            description: Production environment
    EnvironmentListResult:
      type: object
      description: The response of a Environment list operation.
      properties:
        value:
          type: array
          description: The Environment items on this page
          items:
            $ref: '#/components/schemas/Environment'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    EnvironmentProperties:
      type: object
      description: Environment properties entity.
      properties:
        title:
          type: string
          description: Environment title.
          minLength: 1
          maxLength: 50
        description:
          type: string
          description: The environment description.
        kind:
          $ref: '#/components/schemas/EnvironmentKind'
          description: Environment kind.
        server:
          $ref: '#/components/schemas/EnvironmentServer'
          description: Server information of the environment.
        onboarding:
          $ref: '#/components/schemas/Onboarding'
          description: Environment onboarding information
        customProperties:
          $ref: '#/components/schemas/CustomProperties'
          description: The custom metadata defined for API catalog entities.
      required:
        - title
        - kind
    EnvironmentServer:
      type: object
      description: Server information of the environment.
      properties:
        type:
          $ref: '#/components/schemas/EnvironmentServerType'
          description: Type of the server that represents the environment.
        managementPortalUri:
          type: array
          description: The location of the management portal
          maxItems: 1
          items:
            type: string
    EnvironmentServerType:
      type: string
      description: The type of environment server
      enum:
        - Azure API Management
        - Azure compute service
        - Apigee API Management
        - AWS API Gateway
        - Kong API Gateway
        - Kubernetes
        - MuleSoft API Management
      x-ms-enum:
        name: EnvironmentServerType
        modelAsString: true
        values:
          - name: Azure API Management
            value: Azure API Management
            description: Api Management Server
          - name: Azure compute service
            value: Azure compute service
            description: Compute server
          - name: Apigee API Management
            value: Apigee API Management
            description: Apigee server
          - name: AWS API Gateway
            value: AWS API Gateway
            description: AWS Api Gateway server
          - name: Kong API Gateway
            value: Kong API Gateway
            description: Kong API Gateway server
          - name: Kubernetes
            value: Kubernetes
            description: Kubernetes server
          - name: MuleSoft API Management
            value: MuleSoft API Management
            description: Mulesoft Api Management server
    ExternalDocumentation:
      type: object
      description: Additional, external documentation for the API.
      properties:
        title:
          type: string
          description: Title of the documentation.
          maxLength: 50
        description:
          type: string
          description: Description of the documentation.
          maxLength: 500
        url:
          type: string
          format: uri
          description: URL pointing to the documentation.
          maxLength: 200
      required:
        - url
    License:
      type: object
      description: The license information for the API.
      properties:
        name:
          type: string
          description: Name of the license.
          maxLength: 100
        url:
          type: string
          format: uri
          description: |-
            URL pointing to the license details. The URL field is mutually exclusive of the
            identifier field.
          maxLength: 200
        identifier:
          type: string
          format: uri
          description: |-
            SPDX license information for the API. The identifier field is mutually
            exclusive of the URL field.
          maxLength: 50
    LifecycleStage:
      type: string
      description: The stage of the Api development lifecycle
      enum:
        - design
        - development
        - testing
        - preview
        - production
        - deprecated
        - retired
      x-ms-enum:
        name: LifecycleStage
        modelAsString: true
        values:
          - name: design
            value: design
            description: design stage
          - name: development
            value: development
            description: development stage
          - name: testing
            value: testing
            description: testing stage
          - name: preview
            value: preview
            description: In preview
          - name: production
            value: production
            description: In production
          - name: deprecated
            value: deprecated
            description: deprecated stage
          - name: retired
            value: retired
            description: Retired stage
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    MetadataAssignment:
      type: object
      description: Assignment metadata
      properties:
        entity:
          $ref: '#/components/schemas/MetadataAssignmentEntity'
          description: The entities this metadata schema component gets applied to.
        required:
          type: boolean
          description: Required assignment
        deprecated:
          type: boolean
          description: Deprecated assignment
    MetadataAssignmentEntity:
      type: string
      description: Assignment entity for Metadata
      enum:
        - api
        - environment
        - deployment
      x-ms-enum:
        name: MetadataAssignmentEntity
        modelAsString: true
        values:
          - name: api
            value: api
            description: Assigned to API
          - name: environment
            value: environment
            description: Assigned to Environment
          - name: deployment
            value: deployment
            description: Assigned to Deployment
    MetadataSchema:
      description: Metadata schema entity. Used to define metadata for the entities in API catalog.
      properties:
        properties:
          $ref: '#/components/schemas/MetadataSchemaProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    MetadataSchemaExportFormat:
      type: string
      description: The format for schema export
      enum:
        - inline
        - link
      x-ms-enum:
        name: MetadataSchemaExportFormat
        modelAsString: true
        values:
          - name: inline
            value: inline
            description: The inlined content of a schema document.
          - name: link
            value: link
            description: The link to a schema document. The URL is valid for 5 minutes.
    MetadataSchemaExportRequest:
      type: object
      description: The metadata schema export request.
      properties:
        assignedTo:
          $ref: '#/components/schemas/MetadataAssignmentEntity'
          description: An entity the metadata schema is requested for.
    MetadataSchemaExportResult:
      type: object
      description: The metadata schema export result.
      properties:
        format:
          $ref: '#/components/schemas/MetadataSchemaExportFormat'
          description: The export format for the schema
        value:
          type: string
          description: The result of the export operation.
    MetadataSchemaListResult:
      type: object
      description: The response of a MetadataSchema list operation.
      properties:
        value:
          type: array
          description: The MetadataSchema items on this page
          items:
            $ref: '#/components/schemas/MetadataSchema'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    MetadataSchemaProperties:
      type: object
      description: Metadata schema properties.
      properties:
        schema:
          type: string
          description: The schema defining the type.
        assignedTo:
          type: array
          description: The assignees
          items:
            $ref: '#/components/schemas/MetadataAssignment'
          x-ms-identifiers: []
      required:
        - schema
    Onboarding:
      type: object
      description: Onboarding information
      properties:
        instructions:
          type: string
          description: Onboarding guide.
        developerPortalUri:
          type: array
          description: The location of the development portal
          maxItems: 1
          items:
            type: string
    Origin:
      type: string
      description: The expected types of origin
      enum:
        - user
        - system
        - user,system
      x-ms-enum:
        name: Origin
        modelAsString: true
        values:
          - name: user
            value: user
            description: Origin with User
          - name: system
            value: system
            description: Origin with System
          - name: user,system
            value: user,system
            description: Origin with user and system
    ProvisioningState:
      type: string
      description: The provisioning state of the resource
      enum:
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
      readOnly: true
    Service:
      description: The service entity.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ServiceListResult:
      type: object
      description: The response of a Service list operation.
      properties:
        value:
          type: array
          description: The Service items on this page
          items:
            $ref: '#/components/schemas/Service'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    ServiceProperties:
      type: object
      description: The properties of the service.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the service.
          readOnly: true
        restore:
          type: boolean
          description: Flag used to restore soft-deleted API Center service. If specified and set to 'true' all other properties will be ignored.
          default: false
    ServiceUpdate:
      description: The type used for update operations of the Service.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ServiceUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ServiceUpdateProperties:
      type: object
      description: The updatable properties of the Service.
      properties:
        restore:
          type: boolean
          description: Flag used to restore soft-deleted API Center service. If specified and set to 'true' all other properties will be ignored.
          default: false
    SmallString:
      type: string
      format: uri
      description: Used for restricted length uris
      maxLength: 200
    TermsOfService:
      type: object
      description: Terms of service for the API.
      properties:
        url:
          type: string
          format: uri
          description: URL pointing to the terms of service.
          maxLength: 200
      required:
        - url
    Workspace:
      description: Workspace entity.
      properties:
        properties:
          $ref: '#/components/schemas/WorkspaceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    WorkspaceListResult:
      type: object
      description: The response of a Workspace list operation.
      properties:
        value:
          type: array
          description: The Workspace items on this page
          items:
            $ref: '#/components/schemas/Workspace'
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      required:
        - value
    WorkspaceProperties:
      type: object
      description: Workspace properties.
      properties:
        title:
          type: string
          description: Workspace title.
          minLength: 1
          maxLength: 50
        description:
          type: string
          description: Workspace description.
      required:
        - title
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.api_center.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ApiCenter~1operations?api-version=2024-03-15-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    deleted_services:
      id: azure.api_center.deleted_services
      name: deleted_services
      title: deleted_services
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ApiCenter~1deletedServices?api-version=2024-03-15-preview/get'
            operationId: DeletedServices_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeletedServiceListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1deletedServices?api-version=2024-03-15-preview/get'
            operationId: DeletedServices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeletedServiceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1deletedServices~1{deletedServiceName}?api-version=2024-03-15-preview/get'
            operationId: DeletedServices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeletedService
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1deletedServices~1{deletedServiceName}?api-version=2024-03-15-preview/delete'
            operationId: DeletedServices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deleted_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/deleted_services/methods/list'
          - $ref: '#/components/x-stackQL-resources/deleted_services/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deleted_services/methods/delete'
    services:
      id: azure.api_center.services
      name: services
      title: services
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ApiCenter~1services?api-version=2024-03-15-preview/get'
            operationId: Services_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services?api-version=2024-03-15-preview/get'
            operationId: Services_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}?api-version=2024-03-15-preview/get'
            operationId: Services_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Service
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}?api-version=2024-03-15-preview/put'
            operationId: Services_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Service
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}?api-version=2024-03-15-preview/patch'
            operationId: Services_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Service
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}?api-version=2024-03-15-preview/delete'
            operationId: Services_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_metadata_schema:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1exportMetadataSchema?api-version=2024-03-15-preview/post'
            operationId: Services_ExportMetadataSchema
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetadataSchemaExportResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/services/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    metadata_schemas:
      id: azure.api_center.metadata_schemas
      name: metadata_schemas
      title: metadata_schemas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas?api-version=2024-03-15-preview/get'
            operationId: MetadataSchemas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetadataSchemaListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1{metadataSchemaName}?api-version=2024-03-15-preview/get'
            operationId: MetadataSchemas_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetadataSchema
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1{metadataSchemaName}?api-version=2024-03-15-preview/put'
            operationId: MetadataSchemas_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetadataSchema
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1{metadataSchemaName}?api-version=2024-03-15-preview/delete'
            operationId: MetadataSchemas_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/get'
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/delete'
    workspaces:
      id: azure.api_center.workspaces
      name: workspaces
      title: workspaces
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces?api-version=2024-03-15-preview/get'
            operationId: Workspaces_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}?api-version=2024-03-15-preview/get'
            operationId: Workspaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workspace
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}?api-version=2024-03-15-preview/put'
            operationId: Workspaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Workspace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}?api-version=2024-03-15-preview/delete'
            operationId: Workspaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete'
    apis:
      id: azure.api_center.apis
      name: apis
      title: apis
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis?api-version=2024-03-15-preview/get'
            operationId: Apis_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}?api-version=2024-03-15-preview/get'
            operationId: Apis_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Api
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}?api-version=2024-03-15-preview/put'
            operationId: Apis_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Api
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}?api-version=2024-03-15-preview/delete'
            operationId: Apis_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/apis/methods/get'
          - $ref: '#/components/x-stackQL-resources/apis/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/apis/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/apis/methods/delete'
    deployments:
      id: azure.api_center.deployments
      name: deployments
      title: deployments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments?api-version=2024-03-15-preview/get'
            operationId: Deployments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeploymentListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1{deploymentName}?api-version=2024-03-15-preview/get'
            operationId: Deployments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Deployment
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1{deploymentName}?api-version=2024-03-15-preview/put'
            operationId: Deployments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Deployment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1{deploymentName}?api-version=2024-03-15-preview/delete'
            operationId: Deployments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete'
    api_versions:
      id: azure.api_center.api_versions
      name: api_versions
      title: api_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions?api-version=2024-03-15-preview/get'
            operationId: ApiVersions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiVersionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}?api-version=2024-03-15-preview/get'
            operationId: ApiVersions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiVersion
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}?api-version=2024-03-15-preview/put'
            operationId: ApiVersions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiVersion
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}?api-version=2024-03-15-preview/delete'
            operationId: ApiVersions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/delete'
    api_definitions:
      id: azure.api_center.api_definitions
      name: api_definitions
      title: api_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions?api-version=2024-03-15-preview/get'
            operationId: ApiDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiDefinitionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}?api-version=2024-03-15-preview/get'
            operationId: ApiDefinitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiDefinition
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}?api-version=2024-03-15-preview/put'
            operationId: ApiDefinitions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiDefinition
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}?api-version=2024-03-15-preview/delete'
            operationId: ApiDefinitions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_specification:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1exportSpecification?api-version=2024-03-15-preview/post'
            operationId: ApiDefinitions_ExportSpecification
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApiSpecExportResult
        import_specification:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1importSpecification?api-version=2024-03-15-preview/post'
            operationId: ApiDefinitions_ImportSpecification
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/delete'
    environments:
      id: azure.api_center.environments
      name: environments
      title: environments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments?api-version=2024-03-15-preview/get'
            operationId: Environments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnvironmentListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1{environmentName}?api-version=2024-03-15-preview/get'
            operationId: Environments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Environment
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1{environmentName}?api-version=2024-03-15-preview/put'
            operationId: Environments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Environment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1{environmentName}?api-version=2024-03-15-preview/delete'
            operationId: Environments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete'
    vw_deleted_services:
      id: azure.api_center.vw_deleted_services
      name: vw_deleted_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.scheduledPurgeDate') as "scheduled_purge_date",
              JSON_EXTRACT(properties, '$.softDeletionDate') as "soft_deletion_date",
              subscriptionId,
              resourceGroupName,
              deletedServiceName
              FROM azure.api_center.deleted_services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.scheduledPurgeDate') as "scheduled_purge_date",
                json_extract_path_text(properties, '$.softDeletionDate') as "soft_deletion_date",
                subscriptionId,
                resourceGroupName,
                deletedServiceName
                FROM azure.api_center.deleted_services
                WHERE subscriptionId = 'replace-me';
    vw_services:
      id: azure.api_center.vw_services
      name: vw_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.restore') as "restore",
              subscriptionId,
              resourceGroupName,
              serviceName
              FROM azure.api_center.services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.restore') as "restore",
                subscriptionId,
                resourceGroupName,
                serviceName
                FROM azure.api_center.services
                WHERE subscriptionId = 'replace-me';
    vw_metadata_schemas:
      id: azure.api_center.vw_metadata_schemas
      name: vw_metadata_schemas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.schema') as "schema",
              JSON_EXTRACT(properties, '$.assignedTo') as "assigned_to",
              subscriptionId,
              resourceGroupName,
              serviceName,
              metadataSchemaName
              FROM azure.api_center.metadata_schemas
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.schema') as "schema",
                json_extract_path_text(properties, '$.assignedTo') as "assigned_to",
                subscriptionId,
                resourceGroupName,
                serviceName,
                metadataSchemaName
                FROM azure.api_center.metadata_schemas
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me';
    vw_workspaces:
      id: azure.api_center.vw_workspaces
      name: vw_workspaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.description') as "description",
              subscriptionId,
              resourceGroupName,
              serviceName,
              workspaceName
              FROM azure.api_center.workspaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.description') as "description",
                subscriptionId,
                resourceGroupName,
                serviceName,
                workspaceName
                FROM azure.api_center.workspaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me';
    vw_apis:
      id: azure.api_center.vw_apis
      name: vw_apis
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.kind') as "kind",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.summary') as "summary",
              JSON_EXTRACT(properties, '$.lifecycleStage') as "lifecycle_stage",
              JSON_EXTRACT(properties, '$.termsOfService') as "terms_of_service",
              JSON_EXTRACT(properties, '$.externalDocumentation') as "external_documentation",
              JSON_EXTRACT(properties, '$.contacts') as "contacts",
              JSON_EXTRACT(properties, '$.license') as "license",
              JSON_EXTRACT(properties, '$.customProperties') as "custom_properties",
              subscriptionId,
              resourceGroupName,
              serviceName,
              workspaceName,
              apiName
              FROM azure.api_center.apis
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.kind') as "kind",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.summary') as "summary",
                json_extract_path_text(properties, '$.lifecycleStage') as "lifecycle_stage",
                json_extract_path_text(properties, '$.termsOfService') as "terms_of_service",
                json_extract_path_text(properties, '$.externalDocumentation') as "external_documentation",
                json_extract_path_text(properties, '$.contacts') as "contacts",
                json_extract_path_text(properties, '$.license') as "license",
                json_extract_path_text(properties, '$.customProperties') as "custom_properties",
                subscriptionId,
                resourceGroupName,
                serviceName,
                workspaceName,
                apiName
                FROM azure.api_center.apis
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me';
    vw_deployments:
      id: azure.api_center.vw_deployments
      name: vw_deployments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.environmentId') as "environment_id",
              JSON_EXTRACT(properties, '$.definitionId') as "definition_id",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.server') as "server",
              JSON_EXTRACT(properties, '$.customProperties') as "custom_properties",
              subscriptionId,
              resourceGroupName,
              serviceName,
              workspaceName,
              apiName,
              deploymentName
              FROM azure.api_center.deployments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me' AND apiName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.environmentId') as "environment_id",
                json_extract_path_text(properties, '$.definitionId') as "definition_id",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.server') as "server",
                json_extract_path_text(properties, '$.customProperties') as "custom_properties",
                subscriptionId,
                resourceGroupName,
                serviceName,
                workspaceName,
                apiName,
                deploymentName
                FROM azure.api_center.deployments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me' AND apiName = 'replace-me';
    vw_api_versions:
      id: azure.api_center.vw_api_versions
      name: vw_api_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.lifecycleStage') as "lifecycle_stage",
              subscriptionId,
              resourceGroupName,
              serviceName,
              workspaceName,
              apiName,
              versionName
              FROM azure.api_center.api_versions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me' AND apiName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.lifecycleStage') as "lifecycle_stage",
                subscriptionId,
                resourceGroupName,
                serviceName,
                workspaceName,
                apiName,
                versionName
                FROM azure.api_center.api_versions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me' AND apiName = 'replace-me';
    vw_api_definitions:
      id: azure.api_center.vw_api_definitions
      name: vw_api_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.specification') as "specification",
              subscriptionId,
              resourceGroupName,
              serviceName,
              workspaceName,
              apiName,
              versionName,
              definitionName
              FROM azure.api_center.api_definitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me' AND apiName = 'replace-me' AND versionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.specification') as "specification",
                subscriptionId,
                resourceGroupName,
                serviceName,
                workspaceName,
                apiName,
                versionName,
                definitionName
                FROM azure.api_center.api_definitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me' AND apiName = 'replace-me' AND versionName = 'replace-me';
    vw_environments:
      id: azure.api_center.vw_environments
      name: vw_environments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.title') as "title",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.kind') as "kind",
              JSON_EXTRACT(properties, '$.server') as "server",
              JSON_EXTRACT(properties, '$.onboarding') as "onboarding",
              JSON_EXTRACT(properties, '$.customProperties') as "custom_properties",
              subscriptionId,
              resourceGroupName,
              serviceName,
              workspaceName,
              environmentName
              FROM azure.api_center.environments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.title') as "title",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.kind') as "kind",
                json_extract_path_text(properties, '$.server') as "server",
                json_extract_path_text(properties, '$.onboarding') as "onboarding",
                json_extract_path_text(properties, '$.customProperties') as "custom_properties",
                subscriptionId,
                resourceGroupName,
                serviceName,
                workspaceName,
                environmentName
                FROM azure.api_center.environments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND serviceName = 'replace-me' AND workspaceName = 'replace-me';
paths:
  /providers/Microsoft.ApiCenter/operations?api-version=2024-03-15-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/deletedServices?api-version=2024-03-15-preview:
    get:
      operationId: DeletedServices_ListBySubscription
      tags:
        - DeletedServices
      description: Lists services within an Azure subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedServiceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/services?api-version=2024-03-15-preview:
    get:
      operationId: Services_ListBySubscription
      tags:
        - Services
      description: Lists services within an Azure subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/deletedServices?api-version=2024-03-15-preview:
    get:
      operationId: DeletedServices_List
      tags:
        - DeletedServices
      description: Lists soft-deleted services.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedServiceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/deletedServices/{deletedServiceName}?api-version=2024-03-15-preview:
    get:
      operationId: DeletedServices_Get
      tags:
        - DeletedServices
      description: Returns details of the soft-deleted service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deletedServiceName
          in: path
          description: The name of the deleted service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedService'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: DeletedServices_Delete
      tags:
        - DeletedServices
      description: Permanently deletes specified service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deletedServiceName
          in: path
          description: The name of the deleted service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services?api-version=2024-03-15-preview:
    get:
      operationId: Services_ListByResourceGroup
      tags:
        - Services
      description: Returns a collection of services within the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}?api-version=2024-03-15-preview:
    get:
      operationId: Services_Get
      tags:
        - Services
      description: Returns details of the service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Services_CreateOrUpdate
      tags:
        - Services
      description: Creates new or updates existing API.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: Resource 'Service' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '201':
          description: Resource 'Service' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: Services_Update
      tags:
        - Services
      description: Updates existing service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-client-name: properties
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Services_Delete
      tags:
        - Services
      description: Deletes specified service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/exportMetadataSchema?api-version=2024-03-15-preview:
    post:
      operationId: Services_ExportMetadataSchema
      tags:
        - Services
      description: Exports the effective metadata schema.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataSchemaExportRequest'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchemaExportResult'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas?api-version=2024-03-15-preview:
    get:
      operationId: MetadataSchemas_List
      tags:
        - MetadataSchemas
      description: Returns a collection of metadata schemas.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchemaListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas/{metadataSchemaName}?api-version=2024-03-15-preview:
    get:
      operationId: MetadataSchemas_Get
      tags:
        - MetadataSchemas
      description: Returns details of the metadata schema.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: metadataSchemaName
          in: path
          description: The name of the metadata schema.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MetadataSchemas_CreateOrUpdate
      tags:
        - MetadataSchemas
      description: Creates new or updates existing metadata schema.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: metadataSchemaName
          in: path
          description: The name of the metadata schema.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataSchema'
      responses:
        '200':
          description: Resource 'MetadataSchema' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        '201':
          description: Resource 'MetadataSchema' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: MetadataSchemas_Delete
      tags:
        - MetadataSchemas
      description: Deletes specified metadata schema.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: metadataSchemaName
          in: path
          description: The name of the metadata schema.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    head:
      operationId: MetadataSchemas_Head
      tags:
        - MetadataSchemas
      description: Checks if specified metadata schema exists.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: metadataSchemaName
          in: path
          description: The name of the metadata schema.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces?api-version=2024-03-15-preview:
    get:
      operationId: Workspaces_List
      tags:
        - Workspaces
      description: Returns a collection of workspaces.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}?api-version=2024-03-15-preview:
    get:
      operationId: Workspaces_Get
      tags:
        - Workspaces
      description: Returns details of the workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Workspaces_CreateOrUpdate
      tags:
        - Workspaces
      description: Creates new or updates existing workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: Resource 'Workspace' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        '201':
          description: Resource 'Workspace' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Workspaces_Delete
      tags:
        - Workspaces
      description: Deletes specified workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    head:
      operationId: Workspaces_Head
      tags:
        - Workspaces
      description: Checks if specified workspace exists.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis?api-version=2024-03-15-preview:
    get:
      operationId: Apis_List
      tags:
        - Apis
      description: Returns a collection of APIs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}?api-version=2024-03-15-preview:
    get:
      operationId: Apis_Get
      tags:
        - Apis
      description: Returns details of the API.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Apis_CreateOrUpdate
      tags:
        - Apis
      description: Creates new or updates existing API.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
      responses:
        '200':
          description: Resource 'Api' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        '201':
          description: Resource 'Api' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Apis_Delete
      tags:
        - Apis
      description: Deletes specified API.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    head:
      operationId: Apis_Head
      tags:
        - Apis
      description: Checks if specified API exists.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments?api-version=2024-03-15-preview:
    get:
      operationId: Deployments_List
      tags:
        - Deployments
      description: Returns a collection of API deployments.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments/{deploymentName}?api-version=2024-03-15-preview:
    get:
      operationId: Deployments_Get
      tags:
        - Deployments
      description: Returns details of the API deployment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: deploymentName
          in: path
          description: The name of the API deployment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Deployments_CreateOrUpdate
      tags:
        - Deployments
      description: Creates new or updates existing API deployment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: deploymentName
          in: path
          description: The name of the API deployment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: Resource 'Deployment' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        '201':
          description: Resource 'Deployment' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Deployments_Delete
      tags:
        - Deployments
      description: Deletes API deployment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: deploymentName
          in: path
          description: The name of the API deployment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    head:
      operationId: Deployments_Head
      tags:
        - Deployments
      description: Checks if specified API deployment exists.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: deploymentName
          in: path
          description: The name of the API deployment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions?api-version=2024-03-15-preview:
    get:
      operationId: ApiVersions_List
      tags:
        - ApiVersions
      description: Returns a collection of API versions.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}?api-version=2024-03-15-preview:
    get:
      operationId: ApiVersions_Get
      tags:
        - ApiVersions
      description: Returns details of the API version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ApiVersions_CreateOrUpdate
      tags:
        - ApiVersions
      description: Creates new or updates existing API version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersion'
      responses:
        '200':
          description: Resource 'ApiVersion' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        '201':
          description: Resource 'ApiVersion' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ApiVersions_Delete
      tags:
        - ApiVersions
      description: Deletes specified API version
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    head:
      operationId: ApiVersions_Head
      tags:
        - ApiVersions
      description: Checks if specified API version exists.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions?api-version=2024-03-15-preview:
    get:
      operationId: ApiDefinitions_List
      tags:
        - ApiDefinitions
      description: Returns a collection of API definitions.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinitionListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}?api-version=2024-03-15-preview:
    get:
      operationId: ApiDefinitions_Get
      tags:
        - ApiDefinitions
      description: Returns details of the API definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: definitionName
          in: path
          description: The name of the API definition.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinition'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ApiDefinitions_CreateOrUpdate
      tags:
        - ApiDefinitions
      description: Creates new or updates existing API definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: definitionName
          in: path
          description: The name of the API definition.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDefinition'
      responses:
        '200':
          description: Resource 'ApiDefinition' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinition'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        '201':
          description: Resource 'ApiDefinition' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinition'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ApiDefinitions_Delete
      tags:
        - ApiDefinitions
      description: Deletes specified API definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: definitionName
          in: path
          description: The name of the API definition.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    head:
      operationId: ApiDefinitions_Head
      tags:
        - ApiDefinitions
      description: Checks if specified API definition exists.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: definitionName
          in: path
          description: The name of the API definition.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/exportSpecification?api-version=2024-03-15-preview:
    post:
      operationId: ApiDefinitions_ExportSpecification
      tags:
        - ApiDefinitions
      description: Exports the API specification.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: definitionName
          in: path
          description: The name of the API definition.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpecExportResult'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/importSpecification?api-version=2024-03-15-preview:
    post:
      operationId: ApiDefinitions_ImportSpecification
      tags:
        - ApiDefinitions
      description: Imports the API specification.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: apiName
          in: path
          description: The name of the API.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: versionName
          in: path
          description: The name of the API version.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: definitionName
          in: path
          description: The name of the API definition.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-client-name: body
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSpecImportRequest'
      responses:
        '200':
          description: The API specification was successfully imported.
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments?api-version=2024-03-15-preview:
    get:
      operationId: Environments_List
      tags:
        - Environments
      description: Returns a collection of environments.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - $ref: '#/components/parameters/OdataFilterParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments/{environmentName}?api-version=2024-03-15-preview:
    get:
      operationId: Environments_Get
      tags:
        - Environments
      description: Returns details of the environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: environmentName
          in: path
          description: The name of the environment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Environments_CreateOrUpdate
      tags:
        - Environments
      description: Creates new or updates existing environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: environmentName
          in: path
          description: The name of the environment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-client-name: resource
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '200':
          description: Resource 'Environment' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        '201':
          description: Resource 'Environment' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          headers:
            ETag:
              schema:
                type: string
              description: The entity tag for the response.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Environments_Delete
      tags:
        - Environments
      description: Deletes the environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: environmentName
          in: path
          description: The name of the environment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    head:
      operationId: Environments_Head
      tags:
        - Environments
      description: Checks if specified environment exists.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: serviceName
          in: path
          description: The name of Azure API Center service.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: workspaceName
          in: path
          description: The name of the workspace.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
        - name: environmentName
          in: path
          description: The name of the environment.
          required: true
          schema:
            minLength: 1
            maxLength: 90
            pattern: ^[a-zA-Z0-9-]{3,90}$
            type: string
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
