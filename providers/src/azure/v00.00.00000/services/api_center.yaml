openapi: 3.0.0
servers:
  - url: 'https://management.azure.com/'
info:
  title: Azure API Center
  description: 'Azure API Center helps you develop and maintain a structured inventory of your organizations APIs. API Center enables API discovery, reuse, and governance at scale.'
  contact:
    name: StackQL Studios
    url: 'https://stackql.io/'
    email: info@stackql.io
  version: 2024-01-25-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ServiceNameParameter:
      name: serviceName
      in: path
      description: The name of Azure API Center service.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ApiNameParameter:
      name: apiName
      in: path
      description: The name of the API.
      required: true
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ApiVersionNameParameter:
      name: versionName
      in: path
      description: The name of the API version.
      required: true
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ApiDefinitionNameParameter:
      name: definitionName
      in: path
      description: The name of the API definition.
      required: true
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ApiDeploymentNameParameter:
      name: deploymentName
      in: path
      description: The name of the API deployment.
      required: true
      schema:
        minLength: 1
        maxLength: 90
        type: string
    EnvironmentNameParameter:
      name: environmentName
      in: path
      description: The name of the environment.
      required: true
      schema:
        minLength: 1
        maxLength: 90
        type: string
    MetadataSchemaNameParameter:
      name: metadataSchemaName
      in: path
      description: The name of the metadata schema.
      required: true
      schema:
        minLength: 1
        maxLength: 90
        type: string
    WorkspaceNameParameter:
      name: workspaceName
      in: path
      description: The name of the workspace.
      required: true
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ODataFilterParameter:
      name: $filter
      in: query
      description: OData filter parameter.
      required: false
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: 'The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.'
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: 'The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.'
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: 'Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.'
          pattern: '^[-\w\._,\(\)]+$'
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: 'This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.'
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: 'If the service has different generations of hardware, for the same SKU, then that can be captured here.'
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: 'Details of a REST API operation, returned from the Resource Provider Operations API'
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: 'The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".'
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: 'The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".'
              type: string
              readOnly: true
            description:
              description: 'The short, localized friendly description of the operation; suitable for tool tips and detailed views.'
              type: string
              readOnly: true
        origin:
          description: 'The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"'
          type: string
          readOnly: true
          enum:
            - user
            - system
            - 'user,system'
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: 'If present, details of the operation error.'
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: 'The district, state, or province where the resource is located.'
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ProvisioningState:
      type: string
      description: Provisioning state of the service.
      enum:
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
      readOnly: true
    Service:
      description: The service entity.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceProperties'
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ServiceCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          x-typespec-name: 'Service[]'
          description: The Service items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-typespec-name: Rest.ResourceLocation
      description: The response of a Service list operation.
      required:
        - value
    ServiceProperties:
      type: object
      description: The properties of the service.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
      x-ms-mutability:
        - read
        - create
    ServiceUpdate:
      description: The service properties to be updated.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceProperties'
          x-ms-client-flatten: true
      type: object
    MetadataSchema:
      title: Metadata schema
      description: Metadata schema entity. Used to define metadata for the entities in API catalog.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MetadataSchemaProperties'
      type: object
    MetadataSchemaProperties:
      type: object
      title: Metadata schema properties
      description: Metadata schema properties.
      properties:
        schema:
          type: string
          description: The schema defining the type.
        assignedTo:
          type: array
          items:
            $ref: '#/components/schemas/MetadataAssignment'
          x-ms-identifiers:
            - entity
      required:
        - schema
    MetadataSchemaCollection:
      type: object
      title: Metadata schema collection
      description: Paginated collection of metadata schemas.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MetadataSchema'
          description: Page items.
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
    Workspace:
      title: Workspace
      description: Workspace entity.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkspaceProperties'
      type: object
    WorkspaceProperties:
      title: Workspace properties
      type: object
      properties:
        title:
          type: string
          description: Workspace title.
          example: Contoso API contributors
          minLength: 1
          maxLength: 50
        description:
          type: string
          description: Workspace description.
      required:
        - title
      description: Workspace properties.
    WorkspaceCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
          description: Page items.
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      title: Workspace collection
      description: Paginated collection of workspaces.
    Api:
      title: API
      description: API entity.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiProperties'
      type: object
    ApiProperties:
      type: object
      title: API properties
      description: API properties.
      properties:
        title:
          type: string
          description: API title.
          example: Echo API
          minLength: 1
          maxLength: 50
        kind:
          type: string
          title: API kind
          description: 'Kind of API. For example, REST or GraphQL.'
          enum:
            - rest
            - graphql
            - grpc
            - soap
            - webhook
            - websocket
          x-ms-enum:
            name: ApiKind
            modelAsString: true
          example: graphql
        description:
          type: string
          title: Description
          description: Description of the API.
          maxLength: 1000
        summary:
          type: string
          description: Short description of the API.
          maxLength: 200
        lifecycleStage:
          $ref: '#/components/schemas/LifecycleStage'
          readOnly: true
        termsOfService:
          $ref: '#/components/schemas/TermsOfService'
        externalDocumentation:
          type: array
          items:
            $ref: '#/components/schemas/ExternalDocumentation'
          maxItems: 20
          x-ms-identifiers: []
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          x-ms-identifiers: []
        license:
          $ref: '#/components/schemas/License'
        customProperties:
          $ref: '#/components/schemas/CustomProperties'
      required:
        - title
        - kind
    ApiCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Api'
          description: Page items.
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
      title: API collection
      description: Paginated collection of APIs.
    ApiVersion:
      title: API version
      description: API version entity.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiVersionProperties'
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ApiVersionProperties:
      type: object
      title: API version properties
      description: API version properties entity.
      properties:
        title:
          type: string
          description: API version title.
          example: 1.0.1
          minLength: 1
          maxLength: 50
        lifecycleStage:
          $ref: '#/components/schemas/LifecycleStage'
      required:
        - title
        - lifecycleStage
    ApiVersionCollection:
      type: object
      title: API version collection
      description: Paginated collection of API versions.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiVersion'
          description: Page items.
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
    ApiDefinition:
      title: API definition
      description: API definition entity.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApiDefinitionProperties'
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ApiDefinitionProperties:
      type: object
      title: API definition properties
      description: API definition properties entity.
      properties:
        title:
          type: string
          description: API definition title.
          example: OpenAPI
          minLength: 1
          maxLength: 50
        description:
          type: string
          description: API definition description.
        specification:
          type: object
          description: API specification details.
          readOnly: true
          properties:
            name:
              type: string
              description: Specification name.
              example: openapi
            version:
              type: string
              description: Specification version.
              example: 3.0.1
      required:
        - title
    ApiDefinitionCollection:
      type: object
      title: API version collection
      description: Paginated collection of API definitions.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApiDefinition'
          description: Page items.
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
    Environment:
      title: Environment
      description: Environment entity.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EnvironmentProperties'
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    EnvironmentProperties:
      type: object
      title: Environment entity properties
      description: Environment properties entity.
      properties:
        title:
          type: string
          description: Environment title.
          example: Contoso Europe Azure API Management
          minLength: 1
          maxLength: 50
        description:
          type: string
          title: Description.
          example: The primary Azure API Management service for the European division of Contoso.
        kind:
          type: string
          description: Environment kind.
          enum:
            - development
            - testing
            - staging
            - production
          x-ms-enum:
            name: EnvironmentKind
            modelAsString: true
          example: production
        server:
          $ref: '#/components/schemas/EnvironmentServer'
        onboarding:
          $ref: '#/components/schemas/Onboarding'
        customProperties:
          $ref: '#/components/schemas/CustomProperties'
      required:
        - title
        - kind
    EnvironmentCollection:
      type: object
      title: Environments collection
      description: Paginated collection of environments.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Environment'
          description: Page items.
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
    Deployment:
      title: API deployment
      description: API deployment entity.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeploymentProperties'
        id:
          readOnly: true
          type: string
          format: arm-id
          description: 'Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    DeploymentProperties:
      type: object
      title: API deployment properties
      description: API deployment entity properties.
      properties:
        title:
          type: string
          description: API deployment title
          example: Production deployment
          minLength: 1
          maxLength: 50
        description:
          type: string
          title: Description
          description: Description of the deployment.
          maxLength: 500
          example: Public cloud production deployment.
        environmentId:
          type: string
          description: API center-scoped environment resource ID.
          example: /workspaces/default/environments/production
        definitionId:
          type: string
          description: API center-scoped definition resource ID.
          example: /workspaces/default/apis/echo-api/versions/2023-01-01/definitions/openapi
        state:
          $ref: '#/components/schemas/DeploymentState'
        server:
          $ref: '#/components/schemas/DeploymentServer'
        customProperties:
          $ref: '#/components/schemas/CustomProperties'
    DeploymentCollection:
      type: object
      title: API deployment collection
      description: Paginated collection of API deployments.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Deployment'
          description: Page items.
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          readOnly: true
    ApiSpecImportRequest:
      type: object
      description: The API specification source entity properties.
      properties:
        value:
          type: string
          description: Value of the API specification source.
        format:
          type: string
          description: Format of the API specification source.
          enum:
            - inline
            - link
          x-ms-enum:
            name: ApiSpecImportSourceFormat
            modelAsString: true
            values:
              - value: inline
                description: The inlined content of a specification document.
              - value: link
                description: The link to a specification document hosted on a publicly accessible internet address.
        specification:
          type: object
          description: API specification details.
          properties:
            name:
              type: string
              description: Specification name.
              example: openapi
            version:
              type: string
              description: Specification version.
              example: 3.0.1
    ApiSpecExportResult:
      type: object
      description: The API specification export result.
      properties:
        format:
          type: string
          enum:
            - link
            - inline
          x-ms-enum:
            name: ApiSpecExportResultFormat
            modelAsString: true
            values:
              - value: inline
                description: The inlined content of a specification document.
              - value: link
                description: The link to the result of the export operation. The URL is valid for 5 minutes.
        value:
          type: string
          description: The result of the export operation.
    MetadataSchemaExportRequest:
      type: object
      description: The metadata schema export request.
      properties:
        assignedTo:
          type: string
          description: An entity the metadata schema is requested for.
          enum:
            - api
            - environment
            - deployment
          x-ms-enum:
            name: MetadataAssignmentEntity
            modelAsString: true
    MetadataSchemaExportResult:
      type: object
      description: The metadata schema export result.
      properties:
        format:
          type: string
          enum:
            - inline
            - link
          x-ms-enum:
            name: MetadataSchemaExportFormat
            modelAsString: true
            values:
              - value: inline
                description: The inlined content of a schema document.
              - value: link
                description: The link to a schema document. The URL is valid for 5 minutes.
        value:
          type: string
          description: The result of the export operation.
    CustomProperties:
      title: Custom properties
      description: The custom metadata defined for API catalog entities.
      properties: {}
      type: object
    LifecycleStage:
      type: string
      description: Current lifecycle stage of the API.
      enum:
        - design
        - development
        - testing
        - preview
        - production
        - deprecated
        - retired
      x-ms-enum:
        name: LifecycleStage
        modelAsString: true
      example: development
    TermsOfService:
      type: object
      title: Terms of service
      description: Terms of service for the API.
      properties:
        url:
          type: string
          title: URL
          description: URL pointing to the terms of service.
          format: uri
          maxLength: 200
          example: 'https://www.contoso.com/terms'
      required:
        - url
    ExternalDocumentation:
      type: object
      title: External documentation
      description: 'Additional, external documentation for the API.'
      properties:
        title:
          type: string
          description: Title of the documentation.
          example: API developer guide
          maxLength: 50
        description:
          type: string
          title: Description
          description: Description of the documentation.
          maxLength: 500
        url:
          title: URL
          description: URL pointing to the documentation.
          type: string
          format: uri
          maxLength: 200
      required:
        - url
    Contact:
      type: object
      properties:
        name:
          title: Name
          description: Name of the contact.
          type: string
          maxLength: 100
          example: John Doe
        url:
          title: URL
          description: URL for the contact.
          type: string
          format: uri
          maxLength: 200
        email:
          title: Email address
          description: Email address of the contact.
          type: string
          maxLength: 100
          example: john@contoso.com
    License:
      type: object
      title: License
      description: The license information for the API.
      properties:
        name:
          title: Name
          description: Name of the license.
          type: string
          maxLength: 100
        url:
          title: URL
          description: URL pointing to the license details. The URL field is mutually exclusive of the identifier field.
          type: string
          format: uri
          maxLength: 200
        identifier:
          title: Identifier
          description: SPDX license information for the API. The identifier field is mutually exclusive of the URL field.
          type: string
          format: uri
          maxLength: 50
    EnvironmentServer:
      type: object
      title: Server
      description: Server information of the environment.
      properties:
        type:
          type: string
          description: Type of the server that represents the environment.
          enum:
            - Azure API Management
            - Azure compute service
            - Apigee API Management
            - AWS API Gateway
            - Kong API Gateway
            - Kubernetes
            - MuleSoft API Management
          x-ms-enum:
            name: EnvironmentServerType
            modelAsString: true
          example: Azure API Management
        managementPortalUri:
          type: array
          items:
            type: string
            title: Management portal URI
            example: 'https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-resource-group/providers/Microsoft.ApiManagement/service/my-api-management-service'
          maxItems: 1
    DeploymentServer:
      type: object
      title: Server
      properties:
        runtimeUri:
          title: Server runtime base URI
          description: Base runtime URLs for this deployment.
          type: array
          items:
            type: string
            format: uri
            maxLength: 200
            example: 'https://api.contoso.com'
    DeploymentState:
      type: string
      title: State
      description: State of API deployment.
      enum:
        - active
        - inactive
      x-ms-enum:
        name: DeploymentState
        modelAsString: true
    Onboarding:
      type: object
      properties:
        instructions:
          type: string
          description: Onboarding guide.
          example: Sign in or sign up in the specified developer portal to request API access. You must complete the internal privacy training for your account to be approved.
        developerPortalUri:
          type: array
          items:
            type: string
            description: Developer portal URI.
            example: 'https://developer.contoso.com'
          maxItems: 1
    MetadataAssignment:
      type: object
      properties:
        entity:
          type: string
          description: The entities this metadata schema component gets applied to.
          enum:
            - api
            - deployment
            - environment
          x-ms-enum:
            name: MetadataAssignmentEntity
            modelAsString: true
          example: api
        required:
          type: boolean
        deprecated:
          type: boolean
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - 'SystemAssigned,UserAssigned'
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: 'Type of managed service identity (either system assigned, or none).'
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: 'Managed service identity (either system assigned, or none)'
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.api_center.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ApiCenter~1operations~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ApiCenter~1operations~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    services:
      id: azure.api_center.services
      name: services
      title: Services
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ApiCenter~1services~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ApiCenter~1services~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_metadata_schema:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1exportMetadataSchema~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    metadata_schemas:
      id: azure.api_center.metadata_schemas
      name: metadata_schemas
      title: Metadata Schemas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1{metadataSchemaName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1{metadataSchemaName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1{metadataSchemaName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        head:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1metadataSchemas~1{metadataSchemaName}~1?api-version=2024-03-01/head'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/get'
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/metadata_schemas/methods/delete'
    workspaces:
      id: azure.api_center.workspaces
      name: workspaces
      title: Workspaces
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        head:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1?api-version=2024-03-01/head'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete'
    apis:
      id: azure.api_center.apis
      name: apis
      title: Apis
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        head:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1?api-version=2024-03-01/head'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/apis/methods/get'
          - $ref: '#/components/x-stackQL-resources/apis/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/apis/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/apis/methods/delete'
    api_versions:
      id: azure.api_center.api_versions
      name: api_versions
      title: Api Versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        head:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1?api-version=2024-03-01/head'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/api_versions/methods/delete'
    api_definitions:
      id: azure.api_center.api_definitions
      name: api_definitions
      title: Api Definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        head:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1?api-version=2024-03-01/head'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import_specification:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1importSpecification~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_specification:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1versions~1{versionName}~1definitions~1{definitionName}~1exportSpecification~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/api_definitions/methods/delete'
    deployments:
      id: azure.api_center.deployments
      name: deployments
      title: Deployments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1{deploymentName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1{deploymentName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1{deploymentName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        head:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1apis~1{apiName}~1deployments~1{deploymentName}~1?api-version=2024-03-01/head'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete'
    environments:
      id: azure.api_center.environments
      name: environments
      title: Environments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1{environmentName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1{environmentName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        head:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1{environmentName}~1?api-version=2024-03-01/head'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ApiCenter~1services~1{serviceName}~1workspaces~1{workspaceName}~1environments~1{environmentName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete'
paths:
  /providers/Microsoft.ApiCenter/operations/?api-version=2024-03-01:
    get:
      tags:
        - Provider
      operationId: Operations_List
      summary: List resource provider operations
      description: Returns a collection of resource provider operations.
      parameters: []
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/services/?api-version=2024-03-01':
    get:
      tags:
        - Service
      operationId: Services_ListBySubscription
      description: Lists services within an Azure subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The service list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: services
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/?api-version=2024-03-01':
    get:
      tags:
        - Services
      operationId: Services_ListByResourceGroup
      description: Returns a collection of services within the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCollection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: services
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/?api-version=2024-03-01':
    get:
      tags:
        - Services
      operationId: Services_Get
      summary: Get service
      description: Returns details of the service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
      responses:
        '200':
          description: Operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: services
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - Services
      operationId: Services_CreateOrUpdate
      summary: Create or update service
      description: Creates new or updates existing API.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
      requestBody:
        description: The service entity.
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: The service was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '201':
          description: The service was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: services
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    patch:
      tags:
        - Services
      operationId: Services_Update
      summary: Update service
      description: Updates existing service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
      requestBody:
        description: The service properties to be updated.
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceUpdate'
      responses:
        '200':
          description: The service was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: services
      x-stackQL-method: update
      x-stackQL-verb: exec
    delete:
      tags:
        - Services
      operationId: Services_Delete
      summary: Delete service
      description: Deletes specified service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
      responses:
        '200':
          description: The service was successfully deleted.
        '204':
          description: The service was successfully deleted.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: services
      x-stackQL-method: delete
      x-stackQL-verb: delete
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/exportMetadataSchema/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
    post:
      tags:
        - MetadataSchema
      operationId: Services_ExportMetadataSchema
      summary: Export effective metadata schema
      description: Exports the effective metadata schema.
      requestBody:
        description: The metadata schema request details.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataSchemaExportRequest'
      responses:
        '200':
          description: The result of export operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchemaExportResult'
        '202':
          description: Request to export the metadata schema was accepted. The 'Location' response header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: services
      x-stackQL-method: export_metadata_schema
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/ODataFilterParameter'
    get:
      tags:
        - MetadataSchema
      operationId: MetadataSchemas_List
      summary: List metadata schemas
      description: Returns a collection of metadata schemas.
      responses:
        '200':
          description: Paginated collection of metadata schemas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchemaCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/metadataSchemas/{metadataSchemaName}/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/MetadataSchemaNameParameter'
    get:
      operationId: MetadataSchemas_Get
      summary: Get metadata schema
      description: Returns details of the metadata schema.
      tags:
        - MetadataSchema
      responses:
        '200':
          description: The response body contains the metadata schema entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - MetadataSchema
      operationId: MetadataSchemas_CreateOrUpdate
      summary: Create or update metadata schema
      description: Creates new or updates existing metadata schema.
      requestBody:
        description: Metadata schema entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataSchema'
      responses:
        '200':
          description: Metadata schema was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: Metadata schema was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataSchema'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - MetadataSchema
      operationId: MetadataSchemas_Delete
      summary: Delete metadata schema
      description: Deletes specified metadata schema.
      responses:
        '200':
          description: The metadata schema was successfully deleted.
        '204':
          description: The metadata schema was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: delete
      x-stackQL-verb: delete
    head:
      tags:
        - MetadataSchema
      operationId: MetadataSchemas_Head
      summary: Check if metadata schema exists
      description: Checks if specified metadata schema exists.
      responses:
        '200':
          description: OK
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metadata_schemas
      x-stackQL-method: head
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/?api-version=2024-03-01':
    get:
      tags:
        - Workspace
      operationId: Workspaces_List
      summary: List workspaces
      description: Returns a collection of workspaces.
      responses:
        '200':
          description: Paginated collection of workspaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: workspaces
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/ODataFilterParameter'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
    get:
      operationId: Workspaces_Get
      summary: Get workspace
      description: Returns details of the workspace.
      tags:
        - Workspace
      responses:
        '200':
          description: The response body contains the workspace entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workspaces
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - Workspace
      operationId: Workspaces_CreateOrUpdate
      summary: Create or update workspace
      description: Creates new or updates existing workspace.
      requestBody:
        description: Workspace entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: The workspace was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The workspace was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workspaces
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - Workspace
      operationId: Workspaces_Delete
      summary: Delete workspace
      description: Deletes specified workspace.
      responses:
        '200':
          description: The workspace was successfully deleted.
        '204':
          description: The workspace was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workspaces
      x-stackQL-method: delete
      x-stackQL-verb: delete
    head:
      tags:
        - Workspace
      operationId: Workspaces_Head
      summary: Check if workspace exists
      description: Checks if specified workspace exists.
      responses:
        '200':
          description: OK
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workspaces
      x-stackQL-method: head
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/?api-version=2024-03-01':
    get:
      tags:
        - Api
      operationId: Apis_List
      summary: List APIs
      description: Returns a collection of APIs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServiceNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/ODataFilterParameter'
      responses:
        '200':
          description: Paginated collection of APIs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: apis
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
    get:
      operationId: Apis_Get
      summary: Get API
      description: Returns details of the API.
      tags:
        - Api
      responses:
        '200':
          description: The response body contains the API entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: apis
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - Api
      operationId: Apis_CreateOrUpdate
      summary: Create or update API
      description: Creates new or updates existing API.
      requestBody:
        description: API entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
      responses:
        '200':
          description: API was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: API was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: apis
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - Api
      operationId: Apis_Delete
      summary: Delete API
      description: Deletes specified API.
      responses:
        '200':
          description: The API was successfully deleted.
        '204':
          description: The API was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: apis
      x-stackQL-method: delete
      x-stackQL-verb: delete
    head:
      tags:
        - Api
      operationId: Apis_Head
      summary: Check if API exists
      description: Checks if specified API exists.
      responses:
        '200':
          description: OK
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: apis
      x-stackQL-method: head
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ODataFilterParameter'
    get:
      tags:
        - ApiVersion
      operationId: ApiVersions_List
      summary: List API versions
      description: Returns a collection of API versions.
      responses:
        '200':
          description: Paginated collection of API versions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: api_versions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ApiVersionNameParameter'
    get:
      tags:
        - ApiVersion
      summary: Get API version
      operationId: ApiVersions_Get
      description: Returns details of the API version.
      responses:
        '200':
          description: The response body contains the API version entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_versions
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - ApiVersion
      summary: Create or update API version
      operationId: ApiVersions_CreateOrUpdate
      description: Creates new or updates existing API version.
      requestBody:
        description: API version entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersion'
      responses:
        '200':
          description: API version was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: API version was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_versions
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - ApiVersion
      summary: Delete API version
      operationId: ApiVersions_Delete
      description: Deletes specified API version
      responses:
        '200':
          description: The API version was successfully deleted.
        '204':
          description: The API version was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_versions
      x-stackQL-method: delete
      x-stackQL-verb: delete
    head:
      tags:
        - ApiVersion
      summary: Check if API version exists
      operationId: ApiVersions_Head
      description: Checks if specified API version exists.
      responses:
        '200':
          description: OK
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_versions
      x-stackQL-method: head
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ApiVersionNameParameter'
      - $ref: '#/components/parameters/ODataFilterParameter'
    get:
      tags:
        - ApiDefinition
      operationId: ApiDefinitions_List
      summary: List API definitions
      description: Returns a collection of API definitions.
      responses:
        '200':
          description: Paginated collection of API definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinitionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: api_definitions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ApiVersionNameParameter'
      - $ref: '#/components/parameters/ApiDefinitionNameParameter'
    get:
      tags:
        - ApiDefinition
      summary: Get API definition
      operationId: ApiDefinitions_Get
      description: Returns details of the API definition.
      responses:
        '200':
          description: The response body contains the API definition entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinition'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state definition. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_definitions
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - ApiDefinition
      operationId: ApiDefinitions_CreateOrUpdate
      summary: Create or update API definition
      description: Creates new or updates existing API definition.
      requestBody:
        description: API definition entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDefinition'
      responses:
        '200':
          description: API definition was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinition'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state definition. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: API definition was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDefinition'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state definition. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_definitions
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - ApiDefinition
      operationId: ApiDefinitions_Delete
      summary: Delete API definition
      description: Deletes specified API definition.
      responses:
        '200':
          description: The API definition was successfully deleted.
        '204':
          description: The API definition was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_definitions
      x-stackQL-method: delete
      x-stackQL-verb: delete
    head:
      tags:
        - ApiDefinition
      summary: Check if API definition exists
      operationId: ApiDefinitions_Head
      description: Checks if specified API definition exists.
      responses:
        '200':
          description: OK
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_definitions
      x-stackQL-method: head
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/importSpecification/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ApiVersionNameParameter'
      - $ref: '#/components/parameters/ApiDefinitionNameParameter'
    post:
      tags:
        - ApiVersion
      summary: Import API specification
      operationId: ApiDefinitions_ImportSpecification
      description: Imports the API specification.
      requestBody:
        description: The API specification source entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSpecImportRequest'
      responses:
        '200':
          description: The API specification was successfully imported.
        '202':
          description: Request to import an API specification was accepted. The 'Location' response header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_definitions
      x-stackQL-method: import_specification
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/versions/{versionName}/definitions/{definitionName}/exportSpecification/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ApiVersionNameParameter'
      - $ref: '#/components/parameters/ApiDefinitionNameParameter'
    post:
      tags:
        - ApiVersion
      summary: Export API specification
      operationId: ApiDefinitions_ExportSpecification
      description: Exports the API specification.
      responses:
        '200':
          description: The result of export operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpecExportResult'
        '202':
          description: Request to export the API specification was accepted. The 'Location' response header contains the URL where the status of the long running operation can be checked.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: api_definitions
      x-stackQL-method: export_specification
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ODataFilterParameter'
    get:
      tags:
        - Deployment
      operationId: Deployments_List
      summary: List deployments
      description: Returns a collection of API deployments.
      responses:
        '200':
          description: Paginated collection of API deployments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: deployments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/apis/{apiName}/deployments/{deploymentName}/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ApiNameParameter'
      - $ref: '#/components/parameters/ApiDeploymentNameParameter'
    delete:
      tags:
        - Deployment
      summary: Delete API deployment
      operationId: Deployments_Delete
      description: Deletes API deployment.
      responses:
        '200':
          description: The API deployment was successfully deleted.
        '204':
          description: The API deployment was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: deployments
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      tags:
        - Deployment
      operationId: Deployments_Get
      summary: Get API deployment
      description: Returns details of the API deployment.
      responses:
        '200':
          description: The response body contains the API deployment entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: deployments
      x-stackQL-method: get
      x-stackQL-verb: select
    put:
      tags:
        - Deployment
      operationId: Deployments_CreateOrUpdate
      summary: Create or update API deployment
      description: Creates new or updates existing API deployment.
      requestBody:
        description: API deployment entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: API deployment was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: API deployment was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: deployments
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    head:
      tags:
        - Deployment
      operationId: Deployments_Head
      summary: Check if API deployment exists
      description: Checks if specified API deployment exists.
      responses:
        '200':
          description: OK
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: deployments
      x-stackQL-method: head
      x-stackQL-verb: exec
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments/?api-version=2024-03-01':
    get:
      tags:
        - Environment
      operationId: Environments_List
      summary: List environments
      description: Returns a collection of environments.
      responses:
        '200':
          description: The response body contains the environment entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: environments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/ODataFilterParameter'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/environments/{environmentName}/?api-version=2024-03-01':
    parameters:
      - $ref: '#/components/parameters/SubscriptionIdParameter'
      - $ref: '#/components/parameters/ResourceGroupNameParameter'
      - $ref: '#/components/parameters/ServiceNameParameter'
      - $ref: '#/components/parameters/WorkspaceNameParameter'
      - $ref: '#/components/parameters/EnvironmentNameParameter'
    put:
      tags:
        - Environment
      operationId: Environments_CreateOrUpdate
      summary: Create or update environment
      description: Creates new or updates existing environment.
      requestBody:
        description: Environment entity.
        required: true
        x-ms-requestBody-name: payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      responses:
        '200':
          description: The environment was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        '201':
          description: The environment was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: environments
      x-stackQL-method: create_or_update
      x-stackQL-verb: insert
    delete:
      tags:
        - Environment
      operationId: Environments_Delete
      summary: Delete environment
      description: Deletes the environment.
      responses:
        '200':
          description: The environment was successfully deleted.
        '204':
          description: The environment was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: environments
      x-stackQL-method: delete
      x-stackQL-verb: delete
    head:
      tags:
        - Environment
      operationId: Environments_Head
      summary: Check if environment exists
      description: Checks if specified environment exists.
      responses:
        '200':
          description: OK
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: environments
      x-stackQL-method: head
      x-stackQL-verb: exec
    get:
      tags:
        - Environment
      operationId: Environments_Get
      summary: Get environment
      description: Returns details of the environment.
      responses:
        '200':
          description: The response body contains the environment entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: environments
      x-stackQL-method: get
      x-stackQL-verb: select
