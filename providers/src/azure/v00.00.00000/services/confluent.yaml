openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Fully Managed Apache Kafka® on Azure (Microsoft.Confluent)
  description: Fully Managed Apache Kafka® on Azure
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-09-22-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Microsoft Azure subscription id
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ResourceGroupParameter:
      name: resourceGroupName
      in: path
      description: Resource group name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OrganizationResourceNameParameter:
      name: organizationName
      in: path
      description: Organization resource name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: Result of GET request to list Confluent operations.
      type: object
      properties:
        value:
          description: List of Confluent operations supported by the Microsoft.Confluent provider.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/OperationResult'
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          type: string
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ConfluentAgreementProperties:
      description: Terms properties for Marketplace and Confluent.
      type: object
      properties:
        publisher:
          description: Publisher identifier string.
          type: string
        product:
          description: Product identifier string.
          type: string
        plan:
          description: Plan identifier string.
          type: string
        licenseTextLink:
          description: Link to HTML with Microsoft and Publisher terms.
          type: string
        privacyPolicyLink:
          description: Link to the privacy policy of the publisher.
          type: string
        retrieveDatetime:
          format: date-time
          description: Date and time in UTC of when the terms were accepted. This is empty if Accepted is false.
          type: string
        signature:
          description: Terms signature.
          type: string
        accepted:
          description: If any version of the terms have been accepted, otherwise false.
          type: boolean
    ConfluentAgreementResource:
      description: Agreement Terms definition
      x-ms-azure-resource: true
      properties:
        id:
          description: The ARM id of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the agreement.
          type: string
          readOnly: true
        type:
          description: The type of the agreement.
          type: string
          readOnly: true
        systemData:
          description: Metadata pertaining to creation and last modification of the resource
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConfluentAgreementProperties'
          description: Represents the properties of the resource.
      type: object
    ConfluentAgreementResourceListResponse:
      description: Response of a list operation.
      type: object
      properties:
        value:
          description: Results of a list operation.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ConfluentAgreementResource'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    OperationDisplay:
      description: The object that represents the operation.
      type: object
      properties:
        provider:
          description: 'Service provider: Microsoft.Confluent'
          type: string
        resource:
          description: Type on which the operation is performed, e.g., 'clusters'.
          type: string
        operation:
          description: Operation type, e.g., read, write, delete, etc.
          type: string
        description:
          description: Description of the operation, e.g., 'Write confluent'.
          type: string
    OperationResult:
      description: An Confluent REST API operation.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that represents the operation.
          $ref: '#/components/schemas/OperationDisplay'
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
    ErrorResponseBody:
      description: Response body of Error
      title: ErrorResponseBody
      type: object
      properties:
        code:
          description: Error code
          type: string
          readOnly: true
        message:
          description: Error message
          type: string
          readOnly: true
        target:
          description: Error target
          type: string
          readOnly: true
        details:
          description: Error detail
          type: array
          x-ms-identifiers: []
          readOnly: true
          items:
            $ref: '#/components/schemas/ErrorResponseBody'
    ResourceProviderDefaultErrorResponse:
      type: object
      description: Default error response for resource provider
      title: ResourceProviderDefaultErrorResponse
      properties:
        error:
          description: Response body of Error
          readOnly: true
          $ref: '#/components/schemas/ErrorResponseBody'
    ProvisioningState:
      enum:
        - Accepted
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Canceled
        - Deleted
        - NotSpecified
      type: string
      description: Provision states for confluent RP
      title: ProvisioningState
      x-ms-enum:
        name: ProvisionState
        modelAsString: true
    SaaSOfferStatus:
      enum:
        - Started
        - PendingFulfillmentStart
        - InProgress
        - Subscribed
        - Suspended
        - Reinstated
        - Succeeded
        - Failed
        - Unsubscribed
        - Updating
      type: string
      description: SaaS Offer Status for confluent RP
      title: SaaSOfferStatus
      x-ms-enum:
        modelAsString: true
        name: SaaSOfferStatus
    OfferDetail:
      description: Confluent Offer detail
      type: object
      required:
        - publisherId
        - id
        - planId
        - planName
        - termUnit
      properties:
        publisherId:
          description: Publisher Id
          maxLength: 50
          type: string
        id:
          description: Offer Id
          maxLength: 50
          type: string
        planId:
          description: Offer Plan Id
          maxLength: 50
          type: string
        planName:
          description: Offer Plan Name
          maxLength: 50
          type: string
        termUnit:
          description: Offer Plan Term unit
          maxLength: 25
          type: string
        status:
          description: SaaS Offer Status
          $ref: '#/components/schemas/SaaSOfferStatus'
          readOnly: true
    UserDetail:
      description: Subscriber detail
      type: object
      required:
        - emailAddress
      properties:
        firstName:
          description: First name
          maxLength: 50
          type: string
        lastName:
          description: Last name
          maxLength: 50
          type: string
        emailAddress:
          description: Email address
          pattern: ^\S+@\S+\.\S+$
          type: string
    OrganizationResourceProperties:
      description: Organization resource property
      type: object
      required:
        - offerDetail
        - userDetail
      properties:
        createdTime:
          format: date-time
          description: The creation time of the resource.
          type: string
          readOnly: true
        provisioningState:
          description: Provision states for confluent RP
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        organizationId:
          description: Id of the Confluent organization.
          type: string
          readOnly: true
        ssoUrl:
          description: SSO url for the Confluent organization.
          type: string
          readOnly: true
        offerDetail:
          description: Confluent offer detail
          $ref: '#/components/schemas/OfferDetail'
        userDetail:
          description: Subscriber detail
          $ref: '#/components/schemas/UserDetail'
    OrganizationResource:
      description: Organization resource.
      x-ms-azure-resource: true
      required:
        - properties
      properties:
        id:
          description: The ARM id of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          description: Metadata pertaining to creation and last modification of the resource
          $ref: '#/components/schemas/systemData'
          readOnly: true
        properties:
          x-ms-client-flatten: true
          description: Organization resource properties
          $ref: '#/components/schemas/OrganizationResourceProperties'
        tags:
          type: object
          description: Organization resource tags
          additionalProperties:
            type: string
        location:
          description: Location of Organization resource
          type: string
      type: object
    OrganizationResourceListResult:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Result of a list operation.
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/OrganizationResource'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    OrganizationResourceUpdate:
      description: Organization Resource update
      type: object
      properties:
        tags:
          description: ARM resource tags
          type: object
          additionalProperties:
            type: string
  x-stackQL-resources:
    marketplace_agreements:
      id: azure.confluent.marketplace_agreements
      name: marketplace_agreements
      title: Marketplace_agreements
      methods:
        MarketplaceAgreements_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Confluent~1agreements~1?api-version=2021-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        MarketplaceAgreements_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Confluent~1agreements~1default~1?api-version=2021-12-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/marketplace_agreements/methods/MarketplaceAgreements_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/marketplace_agreements/methods/MarketplaceAgreements_Create'
        update: []
        delete: []
    organization_operations:
      id: azure.confluent.organization_operations
      name: organization_operations
      title: Organization_operations
      methods:
        OrganizationOperations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Confluent~1operations~1?api-version=2021-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organization_operations/methods/OrganizationOperations_List'
        insert: []
        update: []
        delete: []
    organization:
      id: azure.confluent.organization
      name: organization
      title: Organization
      methods:
        Organization_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Confluent~1organizations~1?api-version=2021-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Organization_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Confluent~1organizations~1?api-version=2021-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Organization_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Confluent~1organizations~1{organizationName}~1?api-version=2021-12-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Organization_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Confluent~1organizations~1{organizationName}~1?api-version=2021-12-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Organization_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Confluent~1organizations~1{organizationName}~1?api-version=2021-12-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Organization_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Confluent~1organizations~1{organizationName}~1?api-version=2021-12-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organization/methods/Organization_Get'
          - $ref: '#/components/x-stackQL-resources/organization/methods/Organization_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/organization/methods/Organization_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/organization/methods/Organization_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/organization/methods/Organization_Delete'
    validations:
      id: azure.confluent.validations
      name: validations
      title: Validations
      methods:
        Validations_ValidateOrganization:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Confluent~1validations~1{organizationName}~1orgvalidate~1?api-version=2021-12-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements/?api-version=2021-12-01:
    get:
      tags:
        - Agreements
      summary: List Confluent marketplace agreements in the subscription.
      operationId: MarketplaceAgreements_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAgreementResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: marketplace_agreements
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements/default/?api-version=2021-12-01:
    put:
      tags:
        - Agreements
      summary: Create Confluent Marketplace agreement in the subscription.
      operationId: MarketplaceAgreements_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Confluent Marketplace Agreement resource
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentAgreementResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAgreementResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-stackQL-resource: marketplace_agreements
      x-stackQL-verb: insert
  /providers/Microsoft.Confluent/operations/?api-version=2021-12-01:
    get:
      tags:
        - Organization
      summary: List all operations provided by Microsoft.Confluent.
      operationId: OrganizationOperations_List
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: organization_operations
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/providers/Microsoft.Confluent/organizations/?api-version=2021-12-01:
    get:
      tags:
        - Organization
      summary: List all organizations under the specified subscription.
      operationId: Organization_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResourceListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: organization
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/?api-version=2021-12-01:
    get:
      tags:
        - Organization
      summary: List all Organizations under the specified resource group.
      operationId: Organization_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResourceListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: organization
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/?api-version=2021-12-01:
    get:
      tags:
        - Organization
      summary: Get the properties of a specific Organization resource.
      operationId: Organization_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OrganizationResourceNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-stackQL-resource: organization
      x-stackQL-verb: select
    put:
      tags:
        - Organization
      summary: Create Organization resource
      operationId: Organization_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OrganizationResourceNameParameter'
      requestBody:
        description: Organization resource model
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: organization
      x-stackQL-verb: insert
    patch:
      tags:
        - Organization
      summary: Update Organization resource
      operationId: Organization_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OrganizationResourceNameParameter'
      requestBody:
        description: Updated Organization resource
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationResourceUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-stackQL-resource: organization
      x-stackQL-verb: exec
    delete:
      tags:
        - Organization
      summary: Delete Organization resource
      operationId: Organization_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OrganizationResourceNameParameter'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: The specified confluent resource does not exist in the subscription.
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: organization
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidate/?api-version=2021-12-01:
    post:
      tags:
        - Validations
      summary: Organization Validate proxy resource
      operationId: Validations_ValidateOrganization
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/OrganizationResourceNameParameter'
      requestBody:
        description: Organization resource model
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderDefaultErrorResponse'
      x-stackQL-resource: validations
      x-stackQL-verb: exec
