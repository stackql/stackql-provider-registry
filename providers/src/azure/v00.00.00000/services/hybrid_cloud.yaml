openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Hybrid Cloud
  description: Hybrid cloud connectivity Management.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    apiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      x-ms-parameter-location: client
      schema:
        minLength: 1
        enum:
          - 2023-01-01-preview
        default: 2023-01-01-preview
        x-ms-enum:
          name: apiVersionParameter
          modelAsString: true
        type: string
    cloudConnectorNameParameter:
      name: cloudConnectorName
      in: path
      description: The name of the cloud connector resource
      required: true
      schema:
        pattern: ^[A-Za-z0-9]*$
        type: string
    cloudConnectionNameParameter:
      name: cloudConnectionName
      in: path
      description: The name of the cloud connection resource
      required: true
      schema:
        pattern: ^[a-z][A-Za-z0-9]*$
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    TagsObject:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
    CloudConnectorListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CloudConnector'
          x-ms-identifiers:
            - id
          description: A list of cloud connector resources.
        nextLink:
          type: string
          description: Link to hold the next page of results
      description: Response for the ListCloudConnectors API service call
    CloudConnectorProperties:
      type: object
      properties:
        accountId:
          type: string
          description: Account identifier of the remote cloud.
        cloudType:
          type: string
          description: The cloud connector type.
          enum:
            - AWS
          x-ms-enum:
            name: cloudType
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the cloud connector resource.
      description: Cloud connector resource properties.
    CloudConnector:
      x-ms-azure-resource: true
      description: Cloud Connector resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CloudConnectorProperties'
          description: Properties of the cloud connector.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    CloudConnectionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CloudConnection'
          description: A list of cloud connection resources.
        nextLink:
          type: string
          description: Link to hold the next page of results
      description: Response for the ListCloudConnections API service call
    CloudConnectionProperties:
      type: object
      properties:
        cloudConnector:
          $ref: '#/components/schemas/ResourceReference'
          description: The cloud connector which discovered the remote resource.
          x-ms-mutability:
            - create
            - read
        remoteResourceId:
          type: string
          description: Identifier for the remote cloud resource
          x-ms-mutability:
            - create
            - read
        virtualHub:
          $ref: '#/components/schemas/ResourceReference'
          description: The virtualHub to which the cloud connection belongs.
          x-ms-mutability:
            - create
            - read
        sharedKey:
          type: string
          description: Shared key of the cloud connection.
          x-ms-secret: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the cloud collection resource.
          readOnly: true
      description: Cloud connection resource properties.
    CloudConnection:
      x-ms-azure-resource: true
      description: Resource which represents the managed network connection between Azure Gateways and remote cloud gateways.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CloudConnectionProperties'
          description: Properties of the cloud connection.
        etag:
          type: string
          readOnly: true
          description: A unique read-only string that changes whenever the resource is updated.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ResourceFilter:
      type: object
      description: Remote Cloud Resource filter.
      properties:
        name:
          type: string
          description: Remote Resource name to filter on.
        type:
          type: string
          description: Remote Resource type to filter on.
        region:
          type: string
          description: Remote Resource location/region to filter on.
        tag:
          type: string
          description: Remote Resource tags to filter on in key:value format.
    DiscoveredResources:
      type: object
      description: API to discover resources in remote cloud referred by the connector.
      properties:
        resourceFilter:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ResourceFilter'
          description: Remote cloud resource filter.
        discoveredResources:
          type: array
          items:
            $ref: '#/components/schemas/DiscoveredResource'
          x-ms-identifiers:
            - id
          description: List of discovered remote cloud resources.
    DiscoveredResource:
      type: object
      properties:
        id:
          type: string
          description: Remote cloud resource identifier
          readOnly: true
        bodyContentType:
          type: string
          description: Content type of the cloud resource body.
          readOnly: true
          enum:
            - Xml
            - Json
          x-ms-enum:
            name: bodyContentType
            modelAsString: true
        body:
          type: string
          description: Properties of the remote cloud resource.
          readOnly: true
      description: Discovered Resource properties.
    ResourceReference:
      type: object
      properties:
        id:
          type: string
          description: Resource ID.
      description: Resource reference properties.
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Updating
        - Deleting
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
  x-stackQL-resources:
    operations:
      id: azure.hybrid_cloud.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.HybridCloud~1operations?api-version=2023-01-01-preview/get'
            operationId: HybridCloudOperations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cloud_connectors:
      id: azure.hybrid_cloud.cloud_connectors
      name: cloud_connectors
      title: cloud_connectors
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridCloud~1cloudConnectors?api-version=2023-01-01-preview/get'
            operationId: CloudConnectors_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnectorListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnectors?api-version=2023-01-01-preview/get'
            operationId: CloudConnectors_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnectorListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnectors~1{cloudConnectorName}?api-version=2023-01-01-preview/get'
            operationId: CloudConnectors_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnector
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnectors~1{cloudConnectorName}?api-version=2023-01-01-preview/put'
            operationId: CloudConnectors_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnector
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnectors~1{cloudConnectorName}?api-version=2023-01-01-preview/delete'
            operationId: CloudConnectors_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_tags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnectors~1{cloudConnectorName}?api-version=2023-01-01-preview/patch'
            operationId: CloudConnectors_UpdateTags
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnector
        discover_resources:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnectors~1{cloudConnectorName}~1discoverResources?api-version=2023-01-01-preview/post'
            operationId: CloudConnectors_DiscoverResources
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiscoveredResources
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_connectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_connectors/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/cloud_connectors/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/cloud_connectors/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_connectors/methods/delete'
    cloud_connections:
      id: azure.hybrid_cloud.cloud_connections
      name: cloud_connections
      title: cloud_connections
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridCloud~1cloudConnections?api-version=2023-01-01-preview/get'
            operationId: CloudConnections_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnectionListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnections?api-version=2023-01-01-preview/get'
            operationId: CloudConnections_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnections~1{cloudConnectionName}?api-version=2023-01-01-preview/get'
            operationId: CloudConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnections~1{cloudConnectionName}?api-version=2023-01-01-preview/put'
            operationId: CloudConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnections~1{cloudConnectionName}?api-version=2023-01-01-preview/delete'
            operationId: CloudConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_tags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCloud~1cloudConnections~1{cloudConnectionName}?api-version=2023-01-01-preview/patch'
            operationId: CloudConnections_UpdateTags
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudConnection
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_connections/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/cloud_connections/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/cloud_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_connections/methods/delete'
    vw_cloud_connectors:
      id: azure.hybrid_cloud.vw_cloud_connectors
      name: vw_cloud_connectors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.accountId') as "account_id",
              JSON_EXTRACT(properties, '$.cloudType') as "cloud_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              cloudConnectorName
              FROM azure.hybrid_cloud.cloud_connectors
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.accountId') as "account_id",
                json_extract_path_text(properties, '$.cloudType') as "cloud_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                cloudConnectorName
                FROM azure.hybrid_cloud.cloud_connectors
                WHERE subscriptionId = 'replace-me';
    vw_cloud_connections:
      id: azure.hybrid_cloud.vw_cloud_connections
      name: vw_cloud_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              tags as tags,
              JSON_EXTRACT(properties, '$.cloudConnector') as "cloud_connector",
              JSON_EXTRACT(properties, '$.remoteResourceId') as "remote_resource_id",
              JSON_EXTRACT(properties, '$.virtualHub') as "virtual_hub",
              JSON_EXTRACT(properties, '$.sharedKey') as "shared_key",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              cloudConnectionName
              FROM azure.hybrid_cloud.cloud_connections
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                tags as tags,
                json_extract_path_text(properties, '$.cloudConnector') as "cloud_connector",
                json_extract_path_text(properties, '$.remoteResourceId') as "remote_resource_id",
                json_extract_path_text(properties, '$.virtualHub') as "virtual_hub",
                json_extract_path_text(properties, '$.sharedKey') as "shared_key",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                cloudConnectionName
                FROM azure.hybrid_cloud.cloud_connections
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.HybridCloud/operations?api-version=2023-01-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available HybridCloud Rest API operations.
      operationId: HybridCloudOperations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: HybridCloud_ListOperations
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridCloud/cloudConnectors?api-version=2023-01-01-preview:
    get:
      tags:
        - CloudConnectors
      description: Return list of cloud connectors in a subscription.
      operationId: CloudConnectors_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of cloud connector resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnectorListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnectors?api-version=2023-01-01-preview:
    get:
      tags:
        - CloudConnectors
      description: Return list of cloud connectors in a resource group.
      operationId: CloudConnectors_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of cloud connectors resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnectorListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnectors/{cloudConnectorName}?api-version=2023-01-01-preview:
    get:
      tags:
        - CloudConnectors
      operationId: CloudConnectors_Get
      description: Gets the specified cloud connector in a specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectorNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting cloud connector resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnector'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CloudConnectors
      description: Creates or updates a cloud connector resource.
      operationId: CloudConnectors_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectorNameParameter'
      requestBody:
        description: The parameters to provide for the created cloud connector resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudConnector'
      responses:
        '200':
          description: Update successful. The operation returns the resulting cloud connector resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnector'
        '201':
          description: Create successful. The operation returns the resulting cloud connector resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnector'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - CloudConnectors
      operationId: CloudConnectors_Delete
      description: Deletes a specified cloud connector resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectorNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - CloudConnectors
      operationId: CloudConnectors_UpdateTags
      description: Updates the specified cloud connector tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectorNameParameter'
      requestBody:
        description: Parameters supplied to update cloud connector tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting cloud connector resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnector'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnectors/{cloudConnectorName}/discoverResources?api-version=2023-01-01-preview:
    post:
      tags:
        - CloudConnectors
      operationId: CloudConnectors_DiscoverResources
      description: Returns a list of discovered remote cloud resources via this cloud connector resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectorNameParameter'
      responses:
        '200':
          description: Get successful. The operation returns a list of discovered remote cloud resources via this cloud connector resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveredResources'
        '202':
          description: Accepted and the operation discover will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridCloud/cloudConnections?api-version=2023-01-01-preview:
    get:
      tags:
        - CloudConnections
      description: Return list of cloud connections in a subscription.
      operationId: CloudConnections_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of cloud connection resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnectionListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnections?api-version=2023-01-01-preview:
    get:
      tags:
        - CloudConnections
      description: Return list of cloud connections in a resource group.
      operationId: CloudConnections_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of cloud connections resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnectionListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnections/{cloudConnectionName}?api-version=2023-01-01-preview:
    get:
      tags:
        - CloudConnections
      operationId: CloudConnections_Get
      description: Gets the specified cloud connection in a specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectionNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting cloud connection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - CloudConnections
      description: Creates or updates a cloud connection resource
      operationId: CloudConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectionNameParameter'
      requestBody:
        description: The parameters to provide for the created cloud connection.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudConnection'
      responses:
        '200':
          description: Update successful. The operation returns the resulting cloud connection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnection'
        '201':
          description: Create successful. The operation returns the resulting cloud connection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnection'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - CloudConnections
      operationId: CloudConnections_Delete
      description: Deletes a specified cloud connection resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectionNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - CloudConnections
      operationId: CloudConnections_UpdateTags
      description: Updates the specified cloud connection tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/cloudConnectionNameParameter'
      requestBody:
        description: Parameters supplied to update cloud connection tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting cloud connection resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
