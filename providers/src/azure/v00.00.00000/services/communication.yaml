openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Communication Services
  description: Azure Communication Services allows you to easily add real-time multimedia voice, video, and telephony-over-IP communications features to your applications. The Communication Services client libraries also allow you to add chat and SMS functionality to your communications solutions.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    EmailServiceName:
      name: emailServiceName
      in: path
      description: The name of the EmailService resource.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9-]+$
        minLength: 1
        maxLength: 63
        type: string
    SenderUsername:
      name: senderUsername
      in: path
      description: The valid sender Username.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 253
        type: string
    SuppressionListAddressId:
      name: addressId
      in: path
      description: The id of the address in a suppression list.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 253
        pattern: ^[a-zA-Z0-9-]+$
        type: string
    SuppressionListName:
      name: suppressionListName
      in: path
      description: The name of the suppression list.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 253
        pattern: ^[a-zA-Z0-9-]+$
        type: string
    DomainName:
      name: domainName
      in: path
      description: The name of the Domains resource.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 253
        type: string
    CommunicationServiceName:
      name: communicationServiceName
      in: path
      description: The name of the CommunicationService resource.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w]+$
        minLength: 1
        maxLength: 63
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    EmailServiceProperties:
      description: A class that describes the properties of the EmailService.
      required:
        - dataLocation
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Unknown
            - Succeeded
            - Failed
            - Canceled
            - Running
            - Creating
            - Updating
            - Deleting
            - Moving
          type: string
          readOnly: true
          x-ms-enum:
            name: EmailServices_ProvisioningState
            modelAsString: true
        dataLocation:
          description: The location where the email service stores its data at rest.
          type: string
          x-ms-mutability:
            - create
            - read
    EmailServiceResource:
      description: A class representing an EmailService resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/EmailServiceProperties'
          description: The properties of the service.
          x-ms-client-flatten: true
      type: object
    EmailServiceResourceUpdate:
      description: A class representing update parameters for EmailService resource.
      properties:
        tags:
          description: Tags of the service which is a list of key value pairs that describe the resource.
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
      type: object
    VerifiedExchangeOnlineDomainList:
      description: List of FQDNs of verified domains in Exchange Online.
      type: array
      items:
        type: string
    EmailServiceResourceList:
      description: Object that includes an array of EmailServices and a possible link for next set.
      type: object
      properties:
        value:
          description: List of EmailService
          type: array
          items:
            $ref: '#/components/schemas/EmailServiceResource'
        nextLink:
          description: "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    SenderUsernameResource:
      description: A class representing a SenderUsername resource.
      properties:
        properties:
          $ref: '#/components/schemas/SenderUsernameProperties'
          description: The properties of a SenderUsername resource.
          x-ms-client-flatten: true
      type: object
    SenderUsernameResourceCollection:
      description: A class representing a Domains SenderUsernames collection.
      type: object
      properties:
        value:
          description: List of SenderUsernames
          type: array
          items:
            $ref: '#/components/schemas/SenderUsernameResource'
        nextLink:
          description: The URL the client should use to fetch the next page (per server side paging).
          type: string
    SenderUsernameProperties:
      description: A class that describes the properties of a SenderUsername resource.
      type: object
      required:
        - username
      properties:
        dataLocation:
          description: The location where the SenderUsername resource data is stored at rest.
          type: string
          readOnly: true
        username:
          description: A sender senderUsername to be used when sending emails.
          type: string
        displayName:
          description: The display name for the senderUsername.
          type: string
        provisioningState:
          description: Provisioning state of the resource. Unknown is the default state for Communication Services.
          enum:
            - Unknown
            - Succeeded
            - Failed
            - Canceled
            - Running
            - Creating
            - Updating
            - Deleting
            - Moving
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    SuppressionListResource:
      description: A class representing a SuppressionList resource.
      properties:
        properties:
          $ref: '#/components/schemas/SuppressionListProperties'
          description: The properties of a SuppressionList resource.
          x-ms-client-flatten: true
      type: object
    SuppressionListAddressResourceCollection:
      description: Collection of addresses in a suppression list. Response will include a nextLink if response contains more pages.
      type: object
      properties:
        value:
          description: List of suppressed email addresses.
          type: array
          items:
            $ref: '#/components/schemas/SuppressionListAddressResource'
        nextLink:
          description: The URL the client should use to fetch the next page (per server side paging).
          type: string
    SuppressionListProperties:
      description: A class that describes the properties of a SuppressionList resource.
      type: object
      properties:
        listName:
          description: The the name of the suppression list. This value must match one of the valid sender usernames of the sending domain.
          type: string
        lastUpdatedTimeStamp:
          description: The date the resource was last updated.
          type: string
          readOnly: true
        createdTimeStamp:
          description: The date the resource was created.
          type: string
          readOnly: true
        dataLocation:
          description: The location where the SuppressionListAddress data is stored at rest. This value is inherited from the parent Domains resource.
          type: string
          readOnly: true
    SuppressionListAddressResource:
      description: A object that represents a SuppressionList record.
      properties:
        properties:
          $ref: '#/components/schemas/SuppressionListAddressProperties'
          description: The properties of a SuppressionListAddress resource.
          x-ms-client-flatten: true
      type: object
    SuppressionListAddressProperties:
      description: A class that describes the properties of a SuppressionListAddress resource.
      type: object
      required:
        - email
      properties:
        email:
          description: Email address of the recipient.
          type: string
        firstName:
          description: The first name of the email recipient.
          type: string
        lastName:
          description: The last name of the email recipient.
          type: string
        notes:
          description: An optional property to provide contextual notes or a description for an address.
          type: string
        lastModified:
          description: The date the address was last updated in a suppression list.
          type: string
          format: date-time
          readOnly: true
        dataLocation:
          description: The location where the SuppressionListAddress data is stored at rest. This value is inherited from the parent Domains resource.
          type: string
          readOnly: true
    SuppressionListResourceCollection:
      description: A class representing a Domains SuppressionListResource collection.
      type: object
      properties:
        value:
          description: List of SuppressionListResource
          type: array
          items:
            $ref: '#/components/schemas/SuppressionListResource'
        nextLink:
          description: The URL the client should use to fetch the next page (per server side paging).
          type: string
    NameAvailabilityParameters:
      description: Data POST-ed to the nameAvailability action
      required:
        - type
        - name
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
      type: object
    LinkNotificationHubParameters:
      description: Description of an Azure Notification Hub to link to the communication service
      required:
        - resourceId
        - connectionString
      type: object
      properties:
        resourceId:
          description: The resource ID of the notification hub
          type: string
        connectionString:
          description: Connection string for the notification hub
          type: string
    LinkedNotificationHub:
      description: A notification hub that has been linked to the communication service
      type: object
      properties:
        resourceId:
          description: The resource ID of the notification hub
          type: string
    CommunicationServiceResourceList:
      description: Object that includes an array of CommunicationServices and a possible link for next set.
      type: object
      properties:
        value:
          description: List of CommunicationService
          type: array
          items:
            $ref: '#/components/schemas/CommunicationServiceResource'
        nextLink:
          description: "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    CommunicationServiceResource:
      description: A class representing a CommunicationService resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/CommunicationServiceProperties'
          description: The properties of the service.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          x-ms-mutability:
            - create
            - read
            - update
      type: object
    DomainsResourceList:
      description: List of email Domain resource Ids.
      type: array
      items:
        type: string
        description: Resource ID of an EmailService/Domain resource linked to this resource.
    TaggedResource:
      description: An ARM resource with that can accept tags
      type: object
      properties:
        tags:
          description: Tags of the service which is a list of key value pairs that describe the resource.
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
    CommunicationServiceProperties:
      description: A class that describes the properties of the CommunicationService.
      required:
        - dataLocation
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Unknown
            - Succeeded
            - Failed
            - Canceled
            - Running
            - Creating
            - Updating
            - Deleting
            - Moving
          type: string
          readOnly: true
          x-ms-enum:
            name: CommunicationServices_ProvisioningState
            modelAsString: true
        hostName:
          description: FQDN of the CommunicationService instance.
          type: string
          readOnly: true
        dataLocation:
          description: The location where the communication service stores its data at rest.
          type: string
          x-ms-mutability:
            - create
            - read
        notificationHubId:
          description: Resource ID of an Azure Notification Hub linked to this resource.
          type: string
          readOnly: true
        version:
          description: Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
          type: string
          readOnly: true
        immutableResourceId:
          description: The immutable resource Id of the communication service.
          type: string
          readOnly: true
        linkedDomains:
          $ref: '#/components/schemas/DomainsResourceList'
    CommunicationServiceKeys:
      description: A class representing the access keys of a CommunicationService.
      type: object
      properties:
        primaryKey:
          description: The primary access key.
          type: string
        secondaryKey:
          description: The secondary access key.
          type: string
        primaryConnectionString:
          description: CommunicationService connection string constructed via the primaryKey
          type: string
        secondaryConnectionString:
          description: CommunicationService connection string constructed via the secondaryKey
          type: string
    RegenerateKeyParameters:
      description: Parameters describes the request to regenerate access keys
      type: object
      properties:
        keyType:
          description: The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive).
          enum:
            - Primary
            - Secondary
          type: string
          x-ms-enum:
            name: KeyType
            modelAsString: false
    CommunicationServiceUpdateProperties:
      description: A class that describes the properties that can be updated for CommunicationService resource.
      type: object
      properties:
        linkedDomains:
          $ref: '#/components/schemas/DomainsResourceList'
    CommunicationServiceResourceUpdate:
      description: A class representing update parameters for CommunicationService resource.
      properties:
        tags:
          description: Tags of the service which is a list of key value pairs that describe the resource.
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
        properties:
          $ref: '#/components/schemas/CommunicationServiceUpdateProperties'
          description: The properties of the service.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    VerificationParameter:
      description: Input parameter for verification APIs
      type: object
      required:
        - verificationType
      properties:
        verificationType:
          description: Type of verification.
          enum:
            - Domain
            - SPF
            - DKIM
            - DKIM2
            - DMARC
          type: string
          x-ms-enum:
            name: VerificationType
            modelAsString: true
    VerificationStatusRecord:
      description: A class that represents a VerificationStatus record.
      type: object
      properties:
        status:
          description: Status of the verification operation.
          enum:
            - NotStarted
            - VerificationRequested
            - VerificationInProgress
            - VerificationFailed
            - Verified
            - CancellationRequested
          type: string
          readOnly: true
          x-ms-enum:
            name: VerificationStatus
            modelAsString: true
        errorCode:
          description: Error code. This property will only be present if the status is UnableToVerify.
          type: string
          readOnly: true
    DnsRecord:
      description: A class that represents a VerificationStatus record.
      type: object
      properties:
        type:
          description: 'Type of the DNS record. Example: TXT'
          type: string
          readOnly: true
        name:
          description: Name of the DNS record.
          type: string
          readOnly: true
        value:
          description: Value of the DNS record.
          type: string
          readOnly: true
        ttl:
          description: Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.
          type: integer
          format: int32
          readOnly: true
    DomainProperties:
      description: A class that describes the properties of a Domains resource.
      type: object
      required:
        - domainManagement
      properties:
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Unknown
            - Succeeded
            - Failed
            - Canceled
            - Running
            - Creating
            - Updating
            - Deleting
            - Moving
          type: string
          readOnly: true
          x-ms-enum:
            name: Domains_ProvisioningState
            modelAsString: true
        dataLocation:
          description: The location where the Domains resource data is stored at rest.
          type: string
          readOnly: true
        fromSenderDomain:
          description: P2 sender domain that is displayed to the email recipients [RFC 5322].
          type: string
          readOnly: true
        mailFromSenderDomain:
          description: P1 sender domain that is present on the email envelope [RFC 5321].
          type: string
          readOnly: true
        domainManagement:
          $ref: '#/components/schemas/DomainManagement'
        verificationStates:
          description: List of VerificationStatusRecord
          type: object
          properties:
            Domain:
              $ref: '#/components/schemas/VerificationStatusRecord'
            SPF:
              $ref: '#/components/schemas/VerificationStatusRecord'
            DKIM:
              $ref: '#/components/schemas/VerificationStatusRecord'
            DKIM2:
              $ref: '#/components/schemas/VerificationStatusRecord'
            DMARC:
              $ref: '#/components/schemas/VerificationStatusRecord'
          readOnly: true
        verificationRecords:
          description: List of DnsRecord
          type: object
          properties:
            Domain:
              $ref: '#/components/schemas/DnsRecord'
            SPF:
              $ref: '#/components/schemas/DnsRecord'
            DKIM:
              $ref: '#/components/schemas/DnsRecord'
            DKIM2:
              $ref: '#/components/schemas/DnsRecord'
            DMARC:
              $ref: '#/components/schemas/DnsRecord'
          readOnly: true
        userEngagementTracking:
          $ref: '#/components/schemas/UserEngagementTracking'
    DomainManagement:
      description: Describes how a Domains resource is being managed.
      enum:
        - AzureManaged
        - CustomerManaged
        - CustomerManagedInExchangeOnline
      type: string
      x-ms-enum:
        name: DomainManagement
        modelAsString: true
    UserEngagementTracking:
      description: Describes whether user engagement tracking is enabled or disabled.
      enum:
        - Disabled
        - Enabled
      type: string
      x-ms-enum:
        name: UserEngagementTracking
        modelAsString: true
    DomainResource:
      description: A class representing a Domains resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/DomainProperties'
          description: The properties of a Domains resource.
          x-ms-client-flatten: true
      type: object
    UpdateDomainProperties:
      description: A class that describes the updatable properties of a Domains resource.
      type: object
      properties:
        userEngagementTracking:
          $ref: '#/components/schemas/UserEngagementTracking'
    UpdateDomainRequestParameters:
      description: A class that describes the PATCH request parameters of a Domains resource.
      properties:
        tags:
          description: Tags of the service which is a list of key value pairs that describe the resource.
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
        properties:
          $ref: '#/components/schemas/UpdateDomainProperties'
          x-ms-client-flatten: true
      type: object
    DomainResourceList:
      description: Object that includes an array of Domains resource and a possible link for next set.
      type: object
      properties:
        value:
          description: List of Domains resource
          type: array
          items:
            $ref: '#/components/schemas/DomainResource'
        nextLink:
          description: "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    email_services:
      id: azure.communication.email_services
      name: email_services
      title: email_services
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1?api-version=2023-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1?api-version=2023-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1?api-version=2023-06-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Communication~1emailServices~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/email_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/email_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/email_services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/email_services/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/email_services/methods/delete'
    email_services_verified_exchange_online_domains:
      id: azure.communication.email_services_verified_exchange_online_domains
      name: email_services_verified_exchange_online_domains
      title: email_services_verified_exchange_online_domains
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Communication~1listVerifiedExchangeOnlineDomains~1?api-version=2023-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/email_services_verified_exchange_online_domains/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sender_usernames:
      id: azure.communication.sender_usernames
      name: sender_usernames
      title: sender_usernames
      methods:
        list_by_domains:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1senderUsernames~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1senderUsernames~1{senderUsername}~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1senderUsernames~1{senderUsername}~1?api-version=2023-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1senderUsernames~1{senderUsername}~1?api-version=2023-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sender_usernames/methods/get'
          - $ref: '#/components/x-stackQL-resources/sender_usernames/methods/list_by_domains'
        insert:
          - $ref: '#/components/x-stackQL-resources/sender_usernames/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sender_usernames/methods/delete'
    suppression_lists:
      id: azure.communication.suppression_lists
      name: suppression_lists
      title: suppression_lists
      methods:
        list_by_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1{suppressionListName}~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1{suppressionListName}~1?api-version=2023-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1{suppressionListName}~1?api-version=2023-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/suppression_lists/methods/get'
          - $ref: '#/components/x-stackQL-resources/suppression_lists/methods/list_by_domain'
        insert:
          - $ref: '#/components/x-stackQL-resources/suppression_lists/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/suppression_lists/methods/delete'
    suppression_list_addresses:
      id: azure.communication.suppression_list_addresses
      name: suppression_list_addresses
      title: suppression_list_addresses
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1{suppressionListName}~1suppressionListAddresses~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1{suppressionListName}~1suppressionListAddresses~1{addressId}~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1{suppressionListName}~1suppressionListAddresses~1{addressId}~1?api-version=2023-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1suppressionLists~1{suppressionListName}~1suppressionListAddresses~1{addressId}~1?api-version=2023-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/suppression_list_addresses/methods/get'
          - $ref: '#/components/x-stackQL-resources/suppression_list_addresses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/suppression_list_addresses/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/suppression_list_addresses/methods/delete'
    operations:
      id: azure.communication.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Communication~1operations~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    services:
      id: azure.communication.services
      name: services
      title: services
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Communication~1checkNameAvailability~1?api-version=2023-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        link_notification_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1{communicationServiceName}~1linkNotificationHub~1?api-version=2023-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Communication~1communicationServices~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1{communicationServiceName}~1?api-version=2023-06-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1{communicationServiceName}~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1{communicationServiceName}~1?api-version=2023-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1{communicationServiceName}~1?api-version=2023-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1{communicationServiceName}~1regenerateKey~1?api-version=2023-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    services_keys:
      id: azure.communication.services_keys
      name: services_keys
      title: services_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1communicationServices~1{communicationServiceName}~1listKeys~1?api-version=2023-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    domains:
      id: azure.communication.domains
      name: domains
      title: domains
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1?api-version=2023-06-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1?api-version=2023-06-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1?api-version=2023-06-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_email_service_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1?api-version=2023-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        initiate_verification:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1initiateVerification~1?api-version=2023-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_verification:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Communication~1emailServices~1{emailServiceName}~1domains~1{domainName}~1cancelVerification~1?api-version=2023-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/domains/methods/list_by_email_service_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete'
    vw_email_services:
      id: azure.communication.vw_email_services
      name: vw_email_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.dataLocation') as data_location,
              subscriptionId,
              resourceGroupName,
              emailServiceName
              FROM azure.communication.email_services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.dataLocation') as data_location,
                subscriptionId,
                resourceGroupName,
                emailServiceName
                FROM azure.communication.email_services
                WHERE subscriptionId = 'replace-me';
    vw_sender_usernames:
      id: azure.communication.vw_sender_usernames
      name: vw_sender_usernames
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.dataLocation') as data_location,
              JSON_EXTRACT(properties, '$.username') as username,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              emailServiceName,
              domainName,
              senderUsername
              FROM azure.communication.sender_usernames
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me' AND domainName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.dataLocation') as data_location,
                JSON_EXTRACT(properties, '$.username') as username,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                emailServiceName,
                domainName,
                senderUsername
                FROM azure.communication.sender_usernames
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me' AND domainName = 'replace-me';
    vw_suppression_lists:
      id: azure.communication.vw_suppression_lists
      name: vw_suppression_lists
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.listName') as list_name,
              JSON_EXTRACT(properties, '$.lastUpdatedTimeStamp') as last_updated_time_stamp,
              JSON_EXTRACT(properties, '$.createdTimeStamp') as created_time_stamp,
              JSON_EXTRACT(properties, '$.dataLocation') as data_location,
              subscriptionId,
              resourceGroupName,
              emailServiceName,
              domainName,
              suppressionListName
              FROM azure.communication.suppression_lists
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me' AND domainName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.listName') as list_name,
                JSON_EXTRACT(properties, '$.lastUpdatedTimeStamp') as last_updated_time_stamp,
                JSON_EXTRACT(properties, '$.createdTimeStamp') as created_time_stamp,
                JSON_EXTRACT(properties, '$.dataLocation') as data_location,
                subscriptionId,
                resourceGroupName,
                emailServiceName,
                domainName,
                suppressionListName
                FROM azure.communication.suppression_lists
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me' AND domainName = 'replace-me';
    vw_suppression_list_addresses:
      id: azure.communication.vw_suppression_list_addresses
      name: vw_suppression_list_addresses
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.email') as email,
              JSON_EXTRACT(properties, '$.firstName') as first_name,
              JSON_EXTRACT(properties, '$.lastName') as last_name,
              JSON_EXTRACT(properties, '$.notes') as notes,
              JSON_EXTRACT(properties, '$.lastModified') as last_modified,
              JSON_EXTRACT(properties, '$.dataLocation') as data_location,
              subscriptionId,
              resourceGroupName,
              emailServiceName,
              domainName,
              suppressionListName,
              addressId
              FROM azure.communication.suppression_list_addresses
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me' AND domainName = 'replace-me' AND suppressionListName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.email') as email,
                JSON_EXTRACT(properties, '$.firstName') as first_name,
                JSON_EXTRACT(properties, '$.lastName') as last_name,
                JSON_EXTRACT(properties, '$.notes') as notes,
                JSON_EXTRACT(properties, '$.lastModified') as last_modified,
                JSON_EXTRACT(properties, '$.dataLocation') as data_location,
                subscriptionId,
                resourceGroupName,
                emailServiceName,
                domainName,
                suppressionListName,
                addressId
                FROM azure.communication.suppression_list_addresses
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me' AND domainName = 'replace-me' AND suppressionListName = 'replace-me';
    vw_services:
      id: azure.communication.vw_services
      name: vw_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.hostName') as host_name,
              JSON_EXTRACT(properties, '$.dataLocation') as data_location,
              JSON_EXTRACT(properties, '$.notificationHubId') as notification_hub_id,
              JSON_EXTRACT(properties, '$.version') as version,
              JSON_EXTRACT(properties, '$.immutableResourceId') as immutable_resource_id,
              JSON_EXTRACT(properties, '$.linkedDomains') as linked_domains,
              subscriptionId,
              resourceGroupName,
              communicationServiceName
              FROM azure.communication.services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.hostName') as host_name,
                JSON_EXTRACT(properties, '$.dataLocation') as data_location,
                JSON_EXTRACT(properties, '$.notificationHubId') as notification_hub_id,
                JSON_EXTRACT(properties, '$.version') as version,
                JSON_EXTRACT(properties, '$.immutableResourceId') as immutable_resource_id,
                JSON_EXTRACT(properties, '$.linkedDomains') as linked_domains,
                subscriptionId,
                resourceGroupName,
                communicationServiceName
                FROM azure.communication.services
                WHERE subscriptionId = 'replace-me';
    vw_domains:
      id: azure.communication.vw_domains
      name: vw_domains
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.dataLocation') as data_location,
              JSON_EXTRACT(properties, '$.fromSenderDomain') as from_sender_domain,
              JSON_EXTRACT(properties, '$.mailFromSenderDomain') as mail_from_sender_domain,
              JSON_EXTRACT(properties, '$.domainManagement') as domain_management,
              JSON_EXTRACT(properties, '$.verificationStates') as verification_states,
              JSON_EXTRACT(properties, '$.verificationRecords') as verification_records,
              JSON_EXTRACT(properties, '$.userEngagementTracking') as user_engagement_tracking,
              subscriptionId,
              resourceGroupName,
              emailServiceName,
              domainName
              FROM azure.communication.domains
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.dataLocation') as data_location,
                JSON_EXTRACT(properties, '$.fromSenderDomain') as from_sender_domain,
                JSON_EXTRACT(properties, '$.mailFromSenderDomain') as mail_from_sender_domain,
                JSON_EXTRACT(properties, '$.domainManagement') as domain_management,
                JSON_EXTRACT(properties, '$.verificationStates') as verification_states,
                JSON_EXTRACT(properties, '$.verificationRecords') as verification_records,
                JSON_EXTRACT(properties, '$.userEngagementTracking') as user_engagement_tracking,
                subscriptionId,
                resourceGroupName,
                emailServiceName,
                domainName
                FROM azure.communication.domains
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND emailServiceName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/?api-version=2023-06-01-preview:
    get:
      description: Get the EmailService and its properties.
      operationId: EmailServices_Get
      summary: Get
      tags:
        - EmailServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
      responses:
        '200':
          description: Success. The response describe the corresponding EmailService resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServiceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new EmailService or update an existing EmailService.
      operationId: EmailServices_CreateOrUpdate
      summary: Create Or Update
      tags:
        - EmailServices
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServiceResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
      responses:
        '200':
          description: The create or update request was completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServiceResource'
        '201':
          description: The create or update request was accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServiceResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Operation to delete a EmailService.
      operationId: EmailServices_Delete
      summary: Delete
      tags:
        - EmailServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
      responses:
        '200':
          description: The delete operation was successful.
        '202':
          description: The delete operation is being performed in the background.
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The resource did not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      description: Operation to update an existing EmailService.
      operationId: EmailServices_Update
      summary: Update
      tags:
        - EmailServices
      requestBody:
        description: Parameters for the update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServiceResourceUpdate'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
      responses:
        '200':
          description: The update request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServiceResource'
        '201':
          description: The update request was accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServiceResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/providers/Microsoft.Communication/emailServices/?api-version=2023-06-01-preview:
    get:
      description: Handles requests to list all resources in a subscription.
      operationId: EmailServices_ListBySubscription
      summary: List By Subscription
      tags:
        - EmailServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The response describes the list of EmailServices in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServiceResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/?api-version=2023-06-01-preview:
    get:
      description: Handles requests to list all resources in a resource group.
      operationId: EmailServices_ListByResourceGroup
      summary: List By Resource Group
      tags:
        - EmailServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Success. The response describes the list of EmailServices in a resourceGroup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServiceResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Communication/listVerifiedExchangeOnlineDomains/?api-version=2023-06-01-preview:
    post:
      description: Get a list of domains that are fully verified in Exchange Online.
      operationId: EmailServices_ListVerifiedExchangeOnlineDomains
      summary: List Verified Domains From Exchange Online
      tags:
        - EmailServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The response describe a list of verified domains from Exchange Online.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiedExchangeOnlineDomainList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/senderUsernames/?api-version=2023-06-01-preview:
    get:
      description: List all valid sender usernames for a domains resource.
      operationId: SenderUsernames_ListByDomains
      summary: ListBy_Domains
      tags:
        - SenderUsernames
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '200':
          description: Success. The response describe the Domains SenderUsername collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SenderUsernameResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/senderUsernames/{senderUsername}/?api-version=2023-06-01-preview:
    get:
      description: Get a valid sender username for a domains resource.
      operationId: SenderUsernames_Get
      summary: Get
      tags:
        - SenderUsernames
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SenderUsername'
      responses:
        '200':
          description: Success. The response describe the corresponding SenderUsername resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SenderUsernameResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Add a new SenderUsername resource under the parent Domains resource or update an existing SenderUsername resource.
      operationId: SenderUsernames_CreateOrUpdate
      summary: Create Or Update
      tags:
        - SenderUsernames
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SenderUsernameResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SenderUsername'
      responses:
        '200':
          description: The update request was completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SenderUsernameResource'
        '201':
          description: The create request was completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SenderUsernameResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: Operation to delete a SenderUsernames resource.
      operationId: SenderUsernames_Delete
      summary: Delete
      tags:
        - SenderUsernames
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SenderUsername'
      responses:
        '200':
          description: The delete operation was successful.
        '204':
          description: The resource did not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/suppressionLists/?api-version=2023-06-01-preview:
    get:
      description: List all suppression lists for a domains resource.
      operationId: SuppressionLists_ListByDomain
      summary: List
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '200':
          description: Success. The response describe the Domains SuppressionList resource collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/suppressionLists/{suppressionListName}/?api-version=2023-06-01-preview:
    get:
      description: Get a SuppressionList resource.
      operationId: SuppressionLists_Get
      summary: Get
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SuppressionListName'
      responses:
        '200':
          description: Success. The response describes the corresponding SuppressionList resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Add a new SuppressionList resource under the parent Domains resource or update an existing SuppressionList resource.
      operationId: SuppressionLists_CreateOrUpdate
      summary: Create Or Update
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SuppressionListName'
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuppressionListResource'
      responses:
        '200':
          description: The resource was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListResource'
        '201':
          description: The resource was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: Delete a SuppressionList.
      operationId: SuppressionLists_Delete
      summary: Delete
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SuppressionListName'
      responses:
        '200':
          description: The resource was deleted successfully.
        '204':
          description: The resource did not exist to be deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/suppressionLists/{suppressionListName}/suppressionListAddresses/?api-version=2023-06-01-preview:
    get:
      description: Get all the addresses in a suppression list.
      operationId: SuppressionListAddresses_List
      summary: Get
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SuppressionListName'
      responses:
        '200':
          description: Success. The collection of SuppressionListAddresses for a SuppressionList.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListAddressResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/suppressionLists/{suppressionListName}/suppressionListAddresses/{addressId}/?api-version=2023-06-01-preview:
    get:
      description: Get a SuppressionListAddress.
      operationId: SuppressionListAddresses_Get
      summary: Get
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SuppressionListName'
        - $ref: '#/components/parameters/SuppressionListAddressId'
      responses:
        '200':
          description: Success. The suppression list address object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListAddressResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create or update a SuppressionListAddress.
      operationId: SuppressionListAddresses_CreateOrUpdate
      summary: Create Or Update
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SuppressionListName'
        - $ref: '#/components/parameters/SuppressionListAddressId'
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuppressionListAddressResource'
      responses:
        '200':
          description: The resource was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListAddressResource'
        '201':
          description: The resource was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionListAddressResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: Operation to delete a single address from a suppression list.
      operationId: SuppressionListAddresses_Delete
      summary: Delete
      tags:
        - SuppressionLists
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
        - $ref: '#/components/parameters/SuppressionListName'
        - $ref: '#/components/parameters/SuppressionListAddressId'
      responses:
        '200':
          description: The resource was deleted successfully.
        '204':
          description: The resource did not exist to be deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Communication/operations/?api-version=2023-06-01-preview:
    get:
      description: Lists all of the available REST API operations of the Microsoft.Communication provider.
      operationId: Operations_List
      summary: List Operations
      tags:
        - Operations
      parameters: []
      responses:
        '200':
          description: Success. The response describes the list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Communication/checkNameAvailability/?api-version=2023-06-01-preview:
    post:
      description: Checks that the CommunicationService name is valid and is not already in use.
      operationId: CommunicationServices_CheckNameAvailability
      summary: Check Name Availability
      tags:
        - CommunicationServices
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: nameAvailabilityParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The response describes the name availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/linkNotificationHub/?api-version=2023-06-01-preview:
    post:
      description: Links an Azure Notification Hub to this communication service.
      operationId: CommunicationServices_LinkNotificationHub
      summary: Link Notification Hub
      tags:
        - CommunicationServices
      requestBody:
        description: Parameters supplied to the operation.
        x-ms-requestBody-name: linkNotificationHubParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkNotificationHubParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CommunicationServiceName'
      responses:
        '200':
          description: Success. The notification hub has been linked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedNotificationHub'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Communication/communicationServices/?api-version=2023-06-01-preview:
    get:
      description: Handles requests to list all resources in a subscription.
      operationId: CommunicationServices_ListBySubscription
      summary: List By Subscription
      tags:
        - CommunicationServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The response describes the list of CommunicationServices in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/?api-version=2023-06-01-preview:
    get:
      description: Handles requests to list all resources in a resource group.
      operationId: CommunicationServices_ListByResourceGroup
      summary: List By Resource Group
      tags:
        - CommunicationServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Success. The response describes the list of CommunicationServices in a resourceGroup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/?api-version=2023-06-01-preview:
    patch:
      description: Operation to update an existing CommunicationService.
      operationId: CommunicationServices_Update
      summary: Update
      tags:
        - CommunicationServices
      requestBody:
        description: Parameters for the update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunicationServiceResourceUpdate'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CommunicationServiceName'
      responses:
        '200':
          description: The update request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      description: Get the CommunicationService and its properties.
      operationId: CommunicationServices_Get
      summary: Get
      tags:
        - CommunicationServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CommunicationServiceName'
      responses:
        '200':
          description: Success. The response describe the corresponding CommunicationService service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new CommunicationService or update an existing CommunicationService.
      operationId: CommunicationServices_CreateOrUpdate
      summary: Create Or Update
      tags:
        - CommunicationServices
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunicationServiceResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CommunicationServiceName'
      responses:
        '200':
          description: The create or update request was completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceResource'
        '201':
          description: The create or update request was accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Operation to delete a CommunicationService.
      operationId: CommunicationServices_Delete
      summary: Delete
      tags:
        - CommunicationServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CommunicationServiceName'
      responses:
        '200':
          description: The delete operation was successful.
        '202':
          description: The delete operation is being performed in the background.
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The resource did not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/listKeys/?api-version=2023-06-01-preview:
    post:
      description: Get the access keys of the CommunicationService resource.
      operationId: CommunicationServices_ListKeys
      summary: List Keys
      tags:
        - CommunicationServices
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CommunicationServiceName'
      responses:
        '200':
          description: Success. The response describes CommunicationService access keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/regenerateKey/?api-version=2023-06-01-preview:
    post:
      description: Regenerate CommunicationService access key. PrimaryKey and SecondaryKey cannot be regenerated at the same time.
      operationId: CommunicationServices_RegenerateKey
      summary: Regenerate Key
      tags:
        - CommunicationServices
      requestBody:
        description: Parameter that describes the Regenerate Key Operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeyParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CommunicationServiceName'
      responses:
        '200':
          description: Regenerate key request was completed successfully. The response contains the new key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationServiceKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/?api-version=2023-06-01-preview:
    get:
      description: Get the Domains resource and its properties.
      operationId: Domains_Get
      summary: Get
      tags:
        - Domains
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '200':
          description: Success. The response describe the corresponding Domains resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Add a new Domains resource under the parent EmailService resource or update an existing Domains resource.
      operationId: Domains_CreateOrUpdate
      summary: Create Or Update
      tags:
        - Domains
      requestBody:
        description: Parameters for the create or update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainResource'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '200':
          description: The create or update request was completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResource'
        '201':
          description: The create or update request was accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Operation to delete a Domains resource.
      operationId: Domains_Delete
      summary: Delete
      tags:
        - Domains
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '200':
          description: The delete operation was successful.
        '202':
          description: The delete operation is being performed in the background.
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: The resource did not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      description: Operation to update an existing Domains resource.
      operationId: Domains_Update
      summary: Update
      tags:
        - Domains
      requestBody:
        description: Parameters for the update operation
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainRequestParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '200':
          description: The update request was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResource'
        '201':
          description: The update request was accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/?api-version=2023-06-01-preview:
    get:
      description: Handles requests to list all Domains resources under the parent EmailServices resource.
      operationId: Domains_ListByEmailServiceResource
      summary: List by EmailService
      tags:
        - Domains
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
      responses:
        '200':
          description: Success. The response describes the list of Domains resources under the parent EmailServices resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/initiateVerification/?api-version=2023-06-01-preview:
    post:
      description: Initiate verification of DNS record.
      operationId: Domains_InitiateVerification
      summary: Initiate Verification
      tags:
        - Domains
      requestBody:
        description: Type of verification to be initiated.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationParameter'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '202':
          description: The initiateVerification operation is being performed in the background.
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/cancelVerification/?api-version=2023-06-01-preview:
    post:
      description: Cancel verification of DNS record.
      operationId: Domains_CancelVerification
      summary: Cancel Verification
      tags:
        - Domains
      requestBody:
        description: Type of verification to be canceled.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationParameter'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EmailServiceName'
        - $ref: '#/components/parameters/DomainName'
      responses:
        '202':
          description: The cancelVerification operation is being performed in the background.
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
