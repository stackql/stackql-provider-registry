openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Digital Twins Management Client
  description: Azure Digital Twins Client for managing DigitalTwinsInstance.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription identifier.
      required: true
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: Version of the DigitalTwinsInstance Management API.
      required: false
      schema:
        minLength: 10
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group that contains the DigitalTwinsInstance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    resourceName:
      name: resourceName
      in: path
      description: The name of the DigitalTwinsInstance.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$
        minLength: 3
        maxLength: 63
        type: string
    location:
      name: location
      in: path
      description: Location of DigitalTwinsInstance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        type: string
    endpointName:
      name: endpointName
      in: path
      description: Name of Endpoint Resource.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        minLength: 2
        maxLength: 49
        type: string
    privateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceId:
      name: resourceId
      in: path
      description: The name of the private link resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    timeSeriesDatabaseConnectionName:
      name: timeSeriesDatabaseConnectionName
      in: path
      description: Name of time series database connection.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        minLength: 2
        maxLength: 49
        type: string
    cleanupConnectionArtifacts:
      name: cleanupConnectionArtifacts
      in: query
      description: Specifies whether or not to attempt to clean up artifacts that were created in order to establish a connection to the time series database. This is a best-effort attempt that will fail if appropriate permissions are not in place. Setting this to 'true' does not delete any recorded data.
      required: false
      x-nullable: true
      x-ms-parameter-location: method
      schema:
        enum:
          - 'true'
          - 'false'
        x-ms-enum:
          name: cleanupConnectionArtifacts
          modelAsString: true
        type: string
  schemas:
    DigitalTwinsPatchProperties:
      description: The properties of a DigitalTwinsInstance.
      type: object
      properties:
        publicNetworkAccess:
          description: Public network access for the DigitalTwinsInstance.
          enum:
            - Enabled
            - Disabled
          type: string
          nullable: true
          x-ms-enum:
            name: publicNetworkAccess
            modelAsString: true
    DigitalTwinsProperties:
      description: The properties of a DigitalTwinsInstance.
      type: object
      properties:
        createdTime:
          description: Time when DigitalTwinsInstance was created.
          readOnly: true
          type: string
          format: date-time
        lastUpdatedTime:
          description: Time when DigitalTwinsInstance was updated.
          readOnly: true
          type: string
          format: date-time
        provisioningState:
          description: The provisioning state.
          enum:
            - Provisioning
            - Deleting
            - Updating
            - Succeeded
            - Failed
            - Canceled
            - Deleted
            - Warning
            - Suspending
            - Restoring
            - Moving
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        hostName:
          description: Api endpoint to work with DigitalTwinsInstance.
          type: string
          nullable: true
          readOnly: true
        privateEndpointConnections:
          description: The private endpoint connections.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        publicNetworkAccess:
          description: Public network access for the DigitalTwinsInstance.
          enum:
            - Enabled
            - Disabled
          type: string
          nullable: true
          x-ms-enum:
            name: publicNetworkAccess
            modelAsString: true
    DigitalTwinsDescription:
      description: The description of the DigitalTwins service.
      properties:
        properties:
          x-ms-client-flatten: true
          description: DigitalTwins instance properties.
          $ref: '#/components/schemas/DigitalTwinsProperties'
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          type: string
          description: The resource location.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          nullable: true
          additionalProperties:
            type: string
          description: The resource tags.
        identity:
          description: The managed identity for the DigitalTwinsInstance.
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/DigitalTwinsIdentity'
        systemData:
          description: Metadata pertaining to creation and last modification of the DigitalTwinsInstance.
          readOnly: true
          $ref: '#/components/schemas/SystemData'
      type: object
    DigitalTwinsPatchDescription:
      description: The description of the DigitalTwins service.
      properties:
        tags:
          description: Instance patch properties
          type: object
          nullable: true
          additionalProperties:
            type: string
        identity:
          description: The managed identity for the DigitalTwinsInstance.
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/DigitalTwinsIdentity'
        properties:
          description: Properties for the DigitalTwinsInstance.
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/DigitalTwinsPatchProperties'
      type: object
    DigitalTwinsResource:
      description: The common properties of a DigitalTwinsInstance.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          type: string
          description: The resource location.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          nullable: true
          additionalProperties:
            type: string
          description: The resource tags.
        identity:
          description: The managed identity for the DigitalTwinsInstance.
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/DigitalTwinsIdentity'
        systemData:
          description: Metadata pertaining to creation and last modification of the DigitalTwinsInstance.
          readOnly: true
          $ref: '#/components/schemas/SystemData'
      x-ms-azure-resource: true
      required:
        - location
      type: object
    DigitalTwinsIdentity:
      description: The managed identity for the DigitalTwinsInstance.
      properties:
        type:
          type: string
          enum:
            - None
            - SystemAssigned
            - UserAssigned
            - SystemAssigned,UserAssigned
          x-ms-enum:
            name: DigitalTwinsIdentityType
            modelAsString: true
          description: The type of Managed Identity used by the DigitalTwinsInstance.
        principalId:
          readOnly: true
          type: string
          nullable: true
          description: The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity
        tenantId:
          readOnly: true
          type: string
          nullable: true
          description: The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity
        userAssignedIdentities:
          type: object
          nullable: true
          description: "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\n."
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
      type: object
    UserAssignedIdentity:
      description: The information about the user assigned identity.
      type: object
      properties:
        clientId:
          readOnly: true
          type: string
          description: The client id of the User Assigned Identity Resource.
        principalId:
          readOnly: true
          type: string
          description: The object id of the User Assigned Identity Resource.
    ManagedIdentityReference:
      description: The properties of the Managed Identity.
      type: object
      properties:
        type:
          description: The type of managed identity used.
          enum:
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        userAssignedIdentity:
          description: The user identity ARM resource id if the managed identity type is 'UserAssigned'.
          type: string
          nullable: true
    ErrorResponse:
      description: Error response.
      properties:
        error:
          description: Error description
          $ref: '#/components/schemas/ErrorDefinition'
      type: object
    ErrorDefinition:
      description: Error definition.
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: string
          readOnly: true
        message:
          description: Description of the error.
          type: string
          readOnly: true
        details:
          description: Internal error details.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ErrorDefinition'
          readOnly: true
      type: object
    DigitalTwinsDescriptionListResult:
      description: A list of DigitalTwins description objects with a next link.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of DigitalTwins description objects.
          type: string
          nullable: true
        value:
          description: A list of DigitalTwins description objects.
          type: array
          items:
            $ref: '#/components/schemas/DigitalTwinsDescription'
    OperationListResult:
      description: A list of DigitalTwins service operations. It contains a list of operations and a URL link to get the next set of results.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of DigitalTwins description objects.
          type: string
          nullable: true
        value:
          description: A list of DigitalTwins operations supported by the Microsoft.DigitalTwins resource provider.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Operation'
    Operation:
      description: DigitalTwins service REST API operation
      properties:
        name:
          readOnly: true
          type: string
          description: 'Operation name: {provider}/{resource}/{read | write | action | delete}'
        display:
          description: Operation properties display
          $ref: '#/components/schemas/OperationDisplay'
        origin:
          readOnly: true
          type: string
          nullable: true
          description: The intended executor of the operation.
        isDataAction:
          readOnly: true
          type: boolean
          description: If the operation is a data action (for data plane rbac).
        properties:
          readOnly: true
          type: object
          x-ms-client-flatten: true
          additionalProperties:
            type: object
          nullable: true
          description: Operation properties.
      type: object
    OperationDisplay:
      description: The object that represents the operation.
      type: object
      properties:
        provider:
          readOnly: true
          type: string
          description: 'Service provider: Microsoft DigitalTwins.'
        resource:
          readOnly: true
          type: string
          description: 'Resource Type: DigitalTwinsInstances.'
        operation:
          readOnly: true
          type: string
          description: Name of the operation.
        description:
          readOnly: true
          type: string
          description: Friendly description for the operation.
    CheckNameRequest:
      type: object
      properties:
        name:
          type: string
          description: Resource name.
        type:
          type: string
          enum:
            - Microsoft.DigitalTwins/digitalTwinsInstances
          x-ms-enum:
            name: Type
            modelAsString: false
          description: The type of resource, for instance Microsoft.DigitalTwins/digitalTwinsInstances.
      required:
        - name
        - type
      description: The result returned from a database check name availability request.
    CheckNameResult:
      type: object
      properties:
        nameAvailable:
          type: boolean
          description: Specifies a Boolean value that indicates if the name is available.
        message:
          type: string
          nullable: true
          description: Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.
        reason:
          type: string
          nullable: true
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: reason
            modelAsString: true
          description: Message providing the reason why the given name is invalid.
      description: The result returned from a check name availability request.
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
          nullable: true
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
          nullable: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
          nullable: true
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
          nullable: true
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
          nullable: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
          nullable: true
    ExternalResource:
      description: Definition of a resource.
      type: object
      x-ms-azure-resource: true
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: Extension resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
          $ref: '#/components/schemas/SystemData'
    DigitalTwinsEndpointResource:
      description: DigitalTwinsInstance endpoint resource.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: Extension resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
          $ref: '#/components/schemas/SystemData'
        properties:
          description: DigitalTwinsInstance endpoint resource properties.
          $ref: '#/components/schemas/DigitalTwinsEndpointResourceProperties'
      type: object
    DigitalTwinsEndpointResourceProperties:
      description: Properties related to Digital Twins Endpoint
      discriminator:
        propertyName: endpointType
      required:
        - endpointType
      properties:
        endpointType:
          description: The type of Digital Twins endpoint
          enum:
            - EventHub
            - EventGrid
            - ServiceBus
          x-ms-enum:
            name: endpointType
            modelAsString: true
          type: string
        provisioningState:
          description: The provisioning state.
          enum:
            - Provisioning
            - Deleting
            - Updating
            - Succeeded
            - Failed
            - Canceled
            - Deleted
            - Warning
            - Suspending
            - Restoring
            - Moving
            - Disabled
          type: string
          nullable: true
          readOnly: true
          x-ms-enum:
            name: EndpointProvisioningState
            modelAsString: true
        createdTime:
          description: Time when the Endpoint was added to DigitalTwinsInstance.
          type: string
          nullable: true
          format: date-time
          readOnly: true
        authenticationType:
          description: Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
          enum:
            - KeyBased
            - IdentityBased
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        deadLetterSecret:
          x-ms-secret: true
          description: Dead letter storage secret for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        deadLetterUri:
          description: Dead letter storage URL for identity-based authentication.
          type: string
          nullable: true
        identity:
          $ref: '#/components/schemas/ManagedIdentityReference'
          description: Managed identity properties for the endpoint.
          nullable: true
          x-nullable: true
      type: object
    ServiceBus:
      description: Properties related to ServiceBus.
      x-ms-discriminator-value: ServiceBus
      properties:
        endpointType:
          description: The type of Digital Twins endpoint
          enum:
            - EventHub
            - EventGrid
            - ServiceBus
          x-ms-enum:
            name: endpointType
            modelAsString: true
          type: string
        provisioningState:
          description: The provisioning state.
          enum:
            - Provisioning
            - Deleting
            - Updating
            - Succeeded
            - Failed
            - Canceled
            - Deleted
            - Warning
            - Suspending
            - Restoring
            - Moving
            - Disabled
          type: string
          nullable: true
          readOnly: true
          x-ms-enum:
            name: EndpointProvisioningState
            modelAsString: true
        createdTime:
          description: Time when the Endpoint was added to DigitalTwinsInstance.
          type: string
          nullable: true
          format: date-time
          readOnly: true
        authenticationType:
          description: Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
          enum:
            - KeyBased
            - IdentityBased
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        deadLetterSecret:
          x-ms-secret: true
          description: Dead letter storage secret for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        deadLetterUri:
          description: Dead letter storage URL for identity-based authentication.
          type: string
          nullable: true
        identity:
          $ref: '#/components/schemas/ManagedIdentityReference'
          description: Managed identity properties for the endpoint.
          nullable: true
          x-nullable: true
        primaryConnectionString:
          x-ms-secret: true
          description: PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        secondaryConnectionString:
          x-ms-secret: true
          description: SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        endpointUri:
          description: The URL of the ServiceBus namespace for identity-based authentication. It must include the protocol 'sb://'.
          type: string
          nullable: true
        entityPath:
          description: The ServiceBus Topic name for identity-based authentication.
          type: string
          nullable: true
      type: object
    EventHub:
      description: Properties related to EventHub.
      x-ms-discriminator-value: EventHub
      properties:
        endpointType:
          description: The type of Digital Twins endpoint
          enum:
            - EventHub
            - EventGrid
            - ServiceBus
          x-ms-enum:
            name: endpointType
            modelAsString: true
          type: string
        provisioningState:
          description: The provisioning state.
          enum:
            - Provisioning
            - Deleting
            - Updating
            - Succeeded
            - Failed
            - Canceled
            - Deleted
            - Warning
            - Suspending
            - Restoring
            - Moving
            - Disabled
          type: string
          nullable: true
          readOnly: true
          x-ms-enum:
            name: EndpointProvisioningState
            modelAsString: true
        createdTime:
          description: Time when the Endpoint was added to DigitalTwinsInstance.
          type: string
          nullable: true
          format: date-time
          readOnly: true
        authenticationType:
          description: Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
          enum:
            - KeyBased
            - IdentityBased
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        deadLetterSecret:
          x-ms-secret: true
          description: Dead letter storage secret for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        deadLetterUri:
          description: Dead letter storage URL for identity-based authentication.
          type: string
          nullable: true
        identity:
          $ref: '#/components/schemas/ManagedIdentityReference'
          description: Managed identity properties for the endpoint.
          nullable: true
          x-nullable: true
        connectionStringPrimaryKey:
          x-ms-secret: true
          description: PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        connectionStringSecondaryKey:
          x-ms-secret: true
          description: SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        endpointUri:
          description: The URL of the EventHub namespace for identity-based authentication. It must include the protocol 'sb://'.
          type: string
          nullable: true
        entityPath:
          description: The EventHub name in the EventHub namespace for identity-based authentication.
          type: string
          nullable: true
      type: object
    EventGrid:
      description: Properties related to EventGrid.
      required:
        - TopicEndpoint
        - accessKey1
      x-ms-discriminator-value: EventGrid
      properties:
        endpointType:
          description: The type of Digital Twins endpoint
          enum:
            - EventHub
            - EventGrid
            - ServiceBus
          x-ms-enum:
            name: endpointType
            modelAsString: true
          type: string
        provisioningState:
          description: The provisioning state.
          enum:
            - Provisioning
            - Deleting
            - Updating
            - Succeeded
            - Failed
            - Canceled
            - Deleted
            - Warning
            - Suspending
            - Restoring
            - Moving
            - Disabled
          type: string
          nullable: true
          readOnly: true
          x-ms-enum:
            name: EndpointProvisioningState
            modelAsString: true
        createdTime:
          description: Time when the Endpoint was added to DigitalTwinsInstance.
          type: string
          nullable: true
          format: date-time
          readOnly: true
        authenticationType:
          description: Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified.
          enum:
            - KeyBased
            - IdentityBased
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        deadLetterSecret:
          x-ms-secret: true
          description: Dead letter storage secret for key-based authentication. Will be obfuscated during read.
          type: string
          nullable: true
        deadLetterUri:
          description: Dead letter storage URL for identity-based authentication.
          type: string
          nullable: true
        identity:
          $ref: '#/components/schemas/ManagedIdentityReference'
          description: Managed identity properties for the endpoint.
          nullable: true
          x-nullable: true
        TopicEndpoint:
          description: EventGrid Topic Endpoint.
          type: string
        accessKey1:
          x-ms-secret: true
          description: EventGrid secondary accesskey. Will be obfuscated during read.
          type: string
          nullable: true
        accessKey2:
          x-ms-secret: true
          description: EventGrid secondary accesskey. Will be obfuscated during read.
          type: string
          nullable: true
      type: object
    DigitalTwinsEndpointResourceListResult:
      description: A list of DigitalTwinsInstance Endpoints with a next link.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of DigitalTwinsInstance Endpoints.
          type: string
          nullable: true
        value:
          description: A list of DigitalTwinsInstance Endpoints.
          type: array
          items:
            $ref: '#/components/schemas/DigitalTwinsEndpointResource'
    GroupIdInformationProperties:
      description: The properties for a group information object.
      type: object
      properties:
        groupId:
          type: string
          description: The group id.
        requiredMembers:
          description: The required members for a specific group id.
          type: array
          items:
            type: string
        requiredZoneNames:
          description: The required DNS zones for a specific group id.
          type: array
          items:
            type: string
    GroupIdInformation:
      description: The group information for creating a private endpoint on Digital Twin.
      required:
        - properties
      properties:
        properties:
          description: The group information properties.
          $ref: '#/components/schemas/GroupIdInformationProperties'
        id:
          description: The resource identifier.
          type: string
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
      type: object
    PrivateEndpointConnectionsResponse:
      description: The available private link connections for a Digital Twin.
      type: object
      properties:
        value:
          description: The list of available private link connections for a Digital Twin.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
    GroupIdInformationResponse:
      description: The available private link resources for a Digital Twin.
      type: object
      properties:
        value:
          description: The list of available private link resources for a Digital Twin.
          type: array
          items:
            $ref: '#/components/schemas/GroupIdInformation'
    ConnectionState:
      description: The current state of a private endpoint connection.
      type: object
      properties:
        status:
          description: The status of a private endpoint connection.
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateLinkServiceConnectionStatus
            modelAsString: true
        description:
          type: string
          description: The description for the current state of a private endpoint connection.
        actionsRequired:
          type: string
          description: Actions required for a private endpoint connection.
      required:
        - status
        - description
    PrivateEndpoint:
      description: The private endpoint property of a private endpoint connection.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
    GroupId:
      readOnly: true
      description: The private endpoint group id of a private endpoint connection.
      type: string
    ConnectionProperties:
      description: The properties of a private endpoint connection.
      type: object
      properties:
        provisioningState:
          description: The provisioning state.
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          nullable: true
          readOnly: true
          x-ms-enum:
            name: ConnectionPropertiesProvisioningState
            modelAsString: true
        privateEndpoint:
          description: The private endpoint.
          $ref: '#/components/schemas/PrivateEndpoint'
        groupIds:
          description: The list of group ids for the private endpoint connection.
          type: array
          items:
            $ref: '#/components/schemas/GroupId'
        privateLinkServiceConnectionState:
          description: The connection state.
          allOf:
            - $ref: '#/components/schemas/ConnectionState'
    PrivateEndpointConnection:
      description: The private endpoint connection of a Digital Twin.
      x-ms-azure-resource: true
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          description: The connection properties.
          $ref: '#/components/schemas/ConnectionProperties'
        systemData:
          description: Metadata pertaining to creation and last modification of the private endpoint connection.
          readOnly: true
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/SystemData'
      type: object
    TimeSeriesDatabaseConnectionProperties:
      description: Properties of a time series database connection resource.
      discriminator:
        propertyName: connectionType
      required:
        - connectionType
      type: object
      properties:
        connectionType:
          description: The type of time series connection resource.
          enum:
            - AzureDataExplorer
          x-ms-enum:
            name: connectionType
            modelAsString: true
          type: string
        provisioningState:
          description: The provisioning state.
          enum:
            - Provisioning
            - Deleting
            - Updating
            - Succeeded
            - Failed
            - Canceled
            - Deleted
            - Warning
            - Suspending
            - Restoring
            - Moving
            - Disabled
          type: string
          readOnly: true
          x-ms-enum:
            name: TimeSeriesDatabaseConnectionState
            modelAsString: true
        identity:
          $ref: '#/components/schemas/ManagedIdentityReference'
          description: Managed identity properties for the time series database connection resource.
          nullable: true
          x-nullable: true
    TimeSeriesDatabaseConnection:
      description: Describes a time series database connection resource.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: Extension resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
          $ref: '#/components/schemas/SystemData'
        properties:
          description: Properties of a specific time series database connection.
          $ref: '#/components/schemas/TimeSeriesDatabaseConnectionProperties'
      type: object
    AzureDataExplorerConnectionProperties:
      description: Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.
      x-ms-discriminator-value: AzureDataExplorer
      required:
        - adxEndpointUri
        - adxResourceId
        - adxDatabaseName
        - eventHubEndpointUri
        - eventHubEntityPath
        - eventHubNamespaceResourceId
      properties:
        connectionType:
          description: The type of time series connection resource.
          enum:
            - AzureDataExplorer
          x-ms-enum:
            name: connectionType
            modelAsString: true
          type: string
        provisioningState:
          description: The provisioning state.
          enum:
            - Provisioning
            - Deleting
            - Updating
            - Succeeded
            - Failed
            - Canceled
            - Deleted
            - Warning
            - Suspending
            - Restoring
            - Moving
            - Disabled
          type: string
          readOnly: true
          x-ms-enum:
            name: TimeSeriesDatabaseConnectionState
            modelAsString: true
        identity:
          $ref: '#/components/schemas/ManagedIdentityReference'
          description: Managed identity properties for the time series database connection resource.
          nullable: true
          x-nullable: true
        adxResourceId:
          description: The resource ID of the Azure Data Explorer cluster.
          type: string
        adxEndpointUri:
          description: The URI of the Azure Data Explorer endpoint.
          type: string
        adxDatabaseName:
          description: The name of the Azure Data Explorer database.
          type: string
        adxTableName:
          description: The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents.
          type: string
          default: AdtPropertyEvents
          nullable: true
        adxTwinLifecycleEventsTableName:
          description: The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified.
          type: string
          nullable: true
        adxRelationshipLifecycleEventsTableName:
          description: The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified.
          type: string
          nullable: true
        eventHubEndpointUri:
          description: The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
          type: string
        eventHubEntityPath:
          description: The EventHub name in the EventHub namespace for identity-based authentication.
          type: string
        eventHubNamespaceResourceId:
          description: The resource ID of the EventHub namespace.
          type: string
        eventHubConsumerGroup:
          description: The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default.
          type: string
          default: $Default
          nullable: true
        recordPropertyAndItemRemovals:
          description: Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX.
          enum:
            - 'true'
            - 'false'
          type: string
          x-ms-enum:
            name: recordPropertyAndItemRemovals
            modelAsString: true
          default: 'false'
          nullable: true
      type: object
    TimeSeriesDatabaseConnectionListResult:
      description: A pageable list of time series database connection resources.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of results.
          type: string
          nullable: true
        value:
          description: A list of time series database connection resources.
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesDatabaseConnection'
  x-stackQL-resources:
    digital_twins:
      id: azure.digital_twins.digital_twins
      name: digital_twins
      title: digital_twins
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}?api-version=2023-01-31/get'
            operationId: DigitalTwins_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsDescription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}?api-version=2023-01-31/put'
            operationId: DigitalTwins_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsDescription
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}?api-version=2023-01-31/patch'
            operationId: DigitalTwins_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsDescription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}?api-version=2023-01-31/delete'
            operationId: DigitalTwins_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsDescription
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances?api-version=2023-01-31/get'
            operationId: DigitalTwins_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsDescriptionListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances?api-version=2023-01-31/get'
            operationId: DigitalTwins_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsDescriptionListResult
            objectKey: $.value
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DigitalTwins~1locations~1{location}~1checkNameAvailability?api-version=2023-01-31/post'
            operationId: DigitalTwins_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/digital_twins/methods/get'
          - $ref: '#/components/x-stackQL-resources/digital_twins/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/digital_twins/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/digital_twins/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/digital_twins/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/digital_twins/methods/delete'
    endpoints:
      id: azure.digital_twins.endpoints
      name: endpoints
      title: endpoints
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1endpoints?api-version=2023-01-31/get'
            operationId: DigitalTwinsEndpoint_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsEndpointResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1endpoints~1{endpointName}?api-version=2023-01-31/get'
            operationId: DigitalTwinsEndpoint_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsEndpointResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1endpoints~1{endpointName}?api-version=2023-01-31/put'
            operationId: DigitalTwinsEndpoint_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsEndpointResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1endpoints~1{endpointName}?api-version=2023-01-31/delete'
            operationId: DigitalTwinsEndpoint_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DigitalTwinsEndpointResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete'
    operations:
      id: azure.digital_twins.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DigitalTwins~1operations?api-version=2023-01-31/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_link_resources:
      id: azure.digital_twins.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1privateLinkResources?api-version=2023-01-31/get'
            operationId: PrivateLinkResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupIdInformationResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1privateLinkResources~1{resourceId}?api-version=2023-01-31/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupIdInformation
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connections:
      id: azure.digital_twins.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1privateEndpointConnections?api-version=2023-01-31/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionsResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-01-31/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-01-31/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-01-31/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    time_series_database_connections:
      id: azure.digital_twins.time_series_database_connections
      name: time_series_database_connections
      title: time_series_database_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1timeSeriesDatabaseConnections?api-version=2023-01-31/get'
            operationId: TimeSeriesDatabaseConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TimeSeriesDatabaseConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1timeSeriesDatabaseConnections~1{timeSeriesDatabaseConnectionName}?api-version=2023-01-31/get'
            operationId: TimeSeriesDatabaseConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TimeSeriesDatabaseConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1timeSeriesDatabaseConnections~1{timeSeriesDatabaseConnectionName}?api-version=2023-01-31/put'
            operationId: TimeSeriesDatabaseConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TimeSeriesDatabaseConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DigitalTwins~1digitalTwinsInstances~1{resourceName}~1timeSeriesDatabaseConnections~1{timeSeriesDatabaseConnectionName}?api-version=2023-01-31/delete'
            operationId: TimeSeriesDatabaseConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TimeSeriesDatabaseConnection
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/time_series_database_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/time_series_database_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/time_series_database_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/time_series_database_connections/methods/delete'
    vw_digital_twins:
      id: azure.digital_twins.vw_digital_twins
      name: vw_digital_twins
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as "last_updated_time",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              subscriptionId,
              resourceGroupName,
              resourceName
              FROM azure.digital_twins.digital_twins
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                systemData as system_data,
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.lastUpdatedTime') as "last_updated_time",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                subscriptionId,
                resourceGroupName,
                resourceName
                FROM azure.digital_twins.digital_twins
                WHERE subscriptionId = 'replace-me';
    vw_endpoints:
      id: azure.digital_twins.vw_endpoints
      name: vw_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.endpointType') as "endpoint_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.authenticationType') as "authentication_type",
              JSON_EXTRACT(properties, '$.deadLetterSecret') as "dead_letter_secret",
              JSON_EXTRACT(properties, '$.deadLetterUri') as "dead_letter_uri",
              JSON_EXTRACT(properties, '$.identity') as "identity",
              subscriptionId,
              resourceGroupName,
              resourceName,
              endpointName
              FROM azure.digital_twins.endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.endpointType') as "endpoint_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.authenticationType') as "authentication_type",
                json_extract_path_text(properties, '$.deadLetterSecret') as "dead_letter_secret",
                json_extract_path_text(properties, '$.deadLetterUri') as "dead_letter_uri",
                json_extract_path_text(properties, '$.identity') as "identity",
                subscriptionId,
                resourceGroupName,
                resourceName,
                endpointName
                FROM azure.digital_twins.endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_private_link_resources:
      id: azure.digital_twins.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              resourceName,
              resourceId
              FROM azure.digital_twins.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                resourceName,
                resourceId
                FROM azure.digital_twins.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.digital_twins.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              subscriptionId,
              resourceGroupName,
              resourceName,
              privateEndpointConnectionName
              FROM azure.digital_twins.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                subscriptionId,
                resourceGroupName,
                resourceName,
                privateEndpointConnectionName
                FROM azure.digital_twins.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_time_series_database_connections:
      id: azure.digital_twins.vw_time_series_database_connections
      name: vw_time_series_database_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.connectionType') as "connection_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.identity') as "identity",
              subscriptionId,
              resourceGroupName,
              resourceName,
              timeSeriesDatabaseConnectionName
              FROM azure.digital_twins.time_series_database_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.connectionType') as "connection_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.identity') as "identity",
                subscriptionId,
                resourceGroupName,
                resourceName,
                timeSeriesDatabaseConnectionName
                FROM azure.digital_twins.time_series_database_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}?api-version=2023-01-31:
    get:
      tags:
        - DigitalTwinsInstance
      description: Get DigitalTwinsInstances resource.
      operationId: DigitalTwins_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DigitalTwinsInstance
      description: Create or update the metadata of a DigitalTwinsInstance. The usual pattern to modify a property is to retrieve the DigitalTwinsInstance and security metadata, and then combine them with the modified values in a new body to update the DigitalTwinsInstance.
      operationId: DigitalTwins_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      requestBody:
        description: The DigitalTwinsInstance and security metadata.
        required: true
        x-ms-requestBody-name: digitalTwinsCreate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalTwinsDescription'
      responses:
        '200':
          description: This is returned as a response when the resource already exists and was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescription'
        '201':
          description: Created - Put request accepted; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - DigitalTwinsInstance
      description: Update metadata of DigitalTwinsInstance.
      operationId: DigitalTwins_Update
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      requestBody:
        description: The DigitalTwinsInstance and security metadata.
        required: true
        x-ms-requestBody-name: digitalTwinsPatchDescription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalTwinsPatchDescription'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescription'
        '202':
          description: Accepted - Patch request accepted; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - DigitalTwinsInstance
      description: Delete a DigitalTwinsInstance.
      operationId: DigitalTwins_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: Returned if the operation was canceled or failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescription'
        '202':
          description: Accepted - Delete request accepted; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescription'
        '204':
          description: Returned when the long running delete operation has finished, or the Digital Twins instance does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints?api-version=2023-01-31:
    get:
      tags:
        - Endpoints
      description: Get DigitalTwinsInstance Endpoints.
      operationId: DigitalTwinsEndpoint_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsEndpointResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints/{endpointName}?api-version=2023-01-31:
    get:
      tags:
        - Endpoints
      description: Get DigitalTwinsInstances Endpoint.
      operationId: DigitalTwinsEndpoint_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/endpointName'
      responses:
        '200':
          description: The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsEndpointResource'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Endpoints
      description: Create or update DigitalTwinsInstance endpoint.
      operationId: DigitalTwinsEndpoint_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/endpointName'
      requestBody:
        description: The DigitalTwinsInstance endpoint metadata and security metadata.
        required: true
        x-ms-requestBody-name: endpointDescription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalTwinsEndpointResource'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsEndpointResource'
        '201':
          description: Created - Put request accepted; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsEndpointResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Endpoints
      description: Delete a DigitalTwinsInstance endpoint.
      operationId: DigitalTwinsEndpoint_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/endpointName'
      responses:
        '200':
          description: Returned if the operation was canceled or failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsEndpointResource'
        '202':
          description: Accepted - Delete request accepted; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsEndpointResource'
        '204':
          description: Returned when the long running delete operation has finished, or the egress endpoint does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DigitalTwins/digitalTwinsInstances?api-version=2023-01-31:
    get:
      tags:
        - DigitalTwinsInstance
      description: Get all the DigitalTwinsInstances in a subscription.
      operationId: DigitalTwins_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DigitalTwinsInstances in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescriptionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances?api-version=2023-01-31:
    get:
      tags:
        - DigitalTwinsInstance
      description: Get all the DigitalTwinsInstances in a resource group.
      operationId: DigitalTwins_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DigitalTwinsInstances in the resource group. If more data is available, the body will contain a link to the next page of items (nextLink).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalTwinsDescriptionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.DigitalTwins/operations?api-version=2023-01-31:
    get:
      tags:
        - Operations
      description: Lists all of the available DigitalTwins service REST API operations.
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DigitalTwins/locations/{location}/checkNameAvailability?api-version=2023-01-31:
    post:
      tags:
        - CheckNameAvailability
      description: Check if a DigitalTwinsInstance name is available.
      operationId: DigitalTwins_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/location'
      requestBody:
        description: Set the name parameter in the DigitalTwinsInstanceCheckName structure to the name of the DigitalTwinsInstance to check.
        required: true
        x-ms-requestBody-name: digitalTwinsInstanceCheckName
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameRequest'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the DigitalTwins service name is available. If the name is not available, the body contains the reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/privateLinkResources?api-version=2023-01-31:
    get:
      tags:
        - PrivateEndpoints
      description: List private link resources for given Digital Twin.
      operationId: PrivateLinkResources_List
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains the list of private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupIdInformationResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/privateLinkResources/{resourceId}?api-version=2023-01-31:
    get:
      tags:
        - PrivateEndpoints
      description: Get the specified private link resource for the given Digital Twin.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/resourceId'
      responses:
        '200':
          description: The body contains the specified of private link resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupIdInformation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/privateEndpointConnections?api-version=2023-01-31:
    get:
      tags:
        - PrivateEndpoints
      description: List private endpoint connection properties.
      operationId: PrivateEndpointConnections_List
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains the list of private endpoint connection properties.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionsResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2023-01-31:
    get:
      tags:
        - PrivateEndpoints
      description: Get private endpoint connection properties for the given private endpoint.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          description: The body contains the private endpoint connection properties.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateEndpoints
      description: Delete private endpoint connection with the specified name.
      operationId: PrivateEndpointConnections_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          description: Returned when the long running delete operation has failed, and has reached a terminal state.
        '202':
          description: This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. The status URL returns 204 No Content when the deletion is complete.
        '204':
          description: Returned when the long running delete operation has finished, or the private endpoint does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateEndpoints
      description: Update the status of a private endpoint connection with the given name.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection with updated properties.
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: This is returned as a response when the resource already exists and was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/timeSeriesDatabaseConnections?api-version=2023-01-31:
    get:
      tags:
        - TimeSeriesDatabaseConnections
      description: Get all existing time series database connections for this DigitalTwins instance.
      operationId: TimeSeriesDatabaseConnections_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: List of time series database connections for this DigitalTwins instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesDatabaseConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/timeSeriesDatabaseConnections/{timeSeriesDatabaseConnectionName}?api-version=2023-01-31:
    get:
      tags:
        - TimeSeriesDatabaseConnections
      description: Get the description of an existing time series database connection.
      operationId: TimeSeriesDatabaseConnections_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/timeSeriesDatabaseConnectionName'
      responses:
        '200':
          description: Description of the time series connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesDatabaseConnection'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - TimeSeriesDatabaseConnections
      description: Create or update a time series database connection.
      operationId: TimeSeriesDatabaseConnections_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/timeSeriesDatabaseConnectionName'
      requestBody:
        description: The time series database connection description.
        required: true
        x-ms-requestBody-name: timeSeriesDatabaseConnectionDescription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSeriesDatabaseConnection'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesDatabaseConnection'
        '201':
          description: Created - Put request accepted; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesDatabaseConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - TimeSeriesDatabaseConnections
      description: Delete a time series database connection.
      operationId: TimeSeriesDatabaseConnections_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/timeSeriesDatabaseConnectionName'
        - $ref: '#/components/parameters/cleanupConnectionArtifacts'
      responses:
        '200':
          description: Returned if the operation was canceled or failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesDatabaseConnection'
        '202':
          description: Accepted - Delete request accepted; the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesDatabaseConnection'
        '204':
          description: Returned when the long running delete operation has finished, or the time series database connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
