openapi: 3.0.0
servers:
  - url: 'https://management.azure.com/'
info:
  title: Azure Device Registry
  description: Azure Device Registry Resource Provider.
  contact:
    name: StackQL Studios
    url: 'https://stackql.io/'
    email: info@stackql.io
  version: 2024-01-25-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    assetEndpointProfileNameParameter:
      name: assetEndpointProfileName
      in: path
      description: Asset Endpoint Profile name parameter.
      required: true
      schema:
        pattern: '^[a-z0-9][a-z0-9-]*[a-z0-9]$'
        maxLength: 63
        minLength: 3
        type: string
    assetNameParameter:
      name: assetName
      in: path
      description: Asset name parameter.
      required: true
      schema:
        pattern: '^[a-z0-9][a-z0-9-]*[a-z0-9]$'
        maxLength: 63
        minLength: 3
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: 'The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.'
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: 'The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.'
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: 'Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.'
          pattern: '^[-\w\._,\(\)]+$'
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: 'If the service has different generations of hardware, for the same SKU, then that can be captured here.'
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: 'Details of a REST API operation, returned from the Resource Provider Operations API'
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: 'The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".'
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: 'The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".'
              type: string
              readOnly: true
            description:
              description: 'The short, localized friendly description of the operation; suitable for tool tips and detailed views.'
              type: string
              readOnly: true
        origin:
          description: 'The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"'
          type: string
          readOnly: true
          enum:
            - user
            - system
            - 'user,system'
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: 'If present, details of the operation error.'
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: 'The district, state, or province where the resource is located.'
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AssetEndpointProfileResponseList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AssetEndpointProfile'
        nextLink:
          type: string
      description: List of Asset Endpoint Profiles.
    AssetEndpointProfile:
      required:
        - extendedLocation
      description: Asset Endpoint Profile definition.
      properties:
        properties:
          $ref: '#/components/schemas/AssetEndpointProfileProperties'
          description: Asset Endpoint Profile resource properties.
        extendedLocation:
          type: object
          x-ms-mutability:
            - read
            - create
          properties:
            type:
              type: string
              description: The extended location type.
            name:
              type: string
              description: The extended location name.
          description: The extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    AssetEndpointProfilePatchPayload:
      description: Asset Endpoint Profile definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          $ref: '#/components/schemas/AssetEndpointProfileProperties'
          description: Asset Endpoint Profile resource properties.
      type: object
    AssetEndpointProfileProperties:
      description: Defines the Asset Endpoint Profile properties.
      type: object
      required:
        - targetAddress
      properties:
        uuid:
          type: string
          description: 'Globally unique, immutable, non-reusable id.'
          readOnly: true
        targetAddress:
          type: string
          description: The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.
          format: uri
        userAuthentication:
          type: object
          description: Defines the client authentication mechanism to the server.
          required:
            - mode
          properties:
            mode:
              type: string
              enum:
                - Anonymous
                - Certificate
                - UsernamePassword
              x-ms-enum:
                name: Mode
                modelAsString: true
                values:
                  - name: Anonymous
                    value: Anonymous
                  - name: Certificate
                    value: Certificate
                  - name: UsernamePassword
                    value: UsernamePassword
              default: Certificate
              description: Defines the mode to authenticate the user of the client at the server.
            usernamePasswordCredentials:
              type: object
              description: Defines the username and password references when UsernamePassword user authentication mode is selected.
              required:
                - usernameReference
                - passwordReference
              properties:
                usernameReference:
                  type: string
                  description: A reference to secret containing the username.
                passwordReference:
                  type: string
                  description: A reference to secret containing the password.
            x509Credentials:
              type: object
              description: Defines the certificate reference when Certificate user authentication mode is selected.
              required:
                - certificateReference
              properties:
                certificateReference:
                  type: string
                  description: A reference to secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx).
        transportAuthentication:
          type: object
          description: Defines the authentication mechanism for the southbound connector connecting to the shop floor/OT device.
          required:
            - ownCertificates
          properties:
            ownCertificates:
              type: array
              items:
                type: object
                properties:
                  certThumbprint:
                    type: string
                    description: Certificate thumbprint.
                  certSecretReference:
                    type: string
                    description: Secret Reference name (cert and private key).
                  certPasswordReference:
                    type: string
                    description: Secret Reference Name (Pfx or Pem password)
              x-ms-identifiers: []
              description: Defines a reference to a secret which contains all certificates and private keys that can be used by the southbound connector connecting to the shop floor/OT device. The accepted extensions are .der for certificates and .pfx/.pem for private keys.
        additionalConfiguration:
          type: string
          description: 'Contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).'
        provisioningState:
          type: string
          description: Provisioning state of the resource.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
            values:
              - name: Succeeded
                value: Succeeded
                description: Resource has been created.
              - name: Failed
                value: Failed
                description: Resource creation failed.
              - name: Canceled
                value: Canceled
                description: Resource creation has been canceled.
              - name: Accepted
                value: Accepted
                description: Resource has been accepted by the server.
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: 'This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.'
    AssetResponseList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
          x-ms-identifiers: []
        nextLink:
          type: string
      description: List of Assets.
    Asset:
      required:
        - extendedLocation
      description: Asset definition.
      properties:
        properties:
          type: object
          required:
            - assetEndpointProfileUri
          allOf:
            - $ref: '#/components/schemas/AssetProperties'
          description: Asset resource properties.
        extendedLocation:
          type: object
          x-ms-mutability:
            - read
            - create
          properties:
            type:
              type: string
              description: The extended location type.
            name:
              type: string
              description: The extended location name.
          description: The extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    AssetPatchPayload:
      description: Asset definition for Patch operation.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          $ref: '#/components/schemas/AssetProperties'
          description: Asset resource properties.
      type: object
    AssetProperties:
      description: Defines the asset properties.
      type: object
      properties:
        uuid:
          type: string
          description: 'Globally unique, immutable, non-reusable id.'
          readOnly: true
        assetType:
          type: string
          description: Resource path to asset type (model) definition.
        enabled:
          type: boolean
          description: Enabled/Disabled status of the asset.
        externalAssetId:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Asset id provided by the customer.
        displayName:
          type: string
          description: Human-readable display name.
        description:
          type: string
          description: Human-readable description of the asset.
        assetEndpointProfileUri:
          type: string
          x-ms-mutability:
            - read
            - create
          description: A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must have the format <ModuleCR.metadata.namespace>/<ModuleCR.metadata.name>.
        version:
          type: integer
          format: int32
          description: An integer that is incremented each time the resource is modified.
          readOnly: true
        manufacturer:
          type: string
          description: Asset manufacturer name.
        manufacturerUri:
          type: string
          description: Asset manufacturer URI.
        model:
          type: string
          description: Asset model name.
        productCode:
          type: string
          description: Asset product code.
        hardwareRevision:
          type: string
          description: Revision number of the hardware.
        softwareRevision:
          type: string
          description: Revision number of the software.
        documentationUri:
          type: string
          description: Reference to the documentation.
        serialNumber:
          type: string
          description: Asset serial number.
        attributes:
          type: object
          description: A set of key-value pairs that contain custom attributes set by the customer.
          additionalProperties: true
        defaultDataPointsConfiguration:
          type: string
          description: Protocol-specific default configuration for all data points. Each data point can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.
        defaultEventsConfiguration:
          type: string
          description: Protocol-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.
        dataPoints:
          type: array
          items:
            type: object
            required:
              - dataSource
            properties:
              name:
                type: string
                description: The name of the data point.
              dataSource:
                type: string
                description: The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset.
              capabilityId:
                type: string
                description: 'The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1.'
              observabilityMode:
                type: string
                enum:
                  - none
                  - counter
                  - gauge
                  - histogram
                  - log
                x-ms-enum:
                  name: DataPointsObservabilityMode
                  modelAsString: true
                  values:
                    - name: None
                      value: none
                    - name: Counter
                      value: counter
                    - name: Gauge
                      value: gauge
                    - name: Histogram
                      value: histogram
                    - name: Log
                      value: log
                default: none
                description: An indication of how the data point should be mapped to OpenTelemetry.
              dataPointConfiguration:
                type: string
                description: 'Protocol-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize.'
          x-ms-identifiers: []
          description: Array of data points that are part of the asset. Each data point can reference an asset type capability and have per-data point configuration. See below for more details for the definition of the dataPoints element.
        events:
          type: array
          items:
            type: object
            required:
              - eventNotifier
            properties:
              name:
                type: string
                description: The name of the event.
              eventNotifier:
                type: string
                description: The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset.
              capabilityId:
                type: string
                description: 'The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1.'
              observabilityMode:
                type: string
                enum:
                  - none
                  - log
                x-ms-enum:
                  name: EventsObservabilityMode
                  modelAsString: true
                  values:
                    - name: None
                      value: none
                    - name: Log
                      value: log
                default: none
                description: An indication of how the event should be mapped to OpenTelemetry.
              eventConfiguration:
                type: string
                description: 'Protocol-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize.'
          x-ms-identifiers: []
          description: Array of events that are part of the asset. Each event can reference an asset type capability and have per-event configuration. See below for more details about the definition of the events element.
        status:
          type: object
          readOnly: true
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    description: 'Error code for classification of errors (ex: 400, 404, 500, etc.).'
                  message:
                    type: string
                    description: 'Human readable helpful error message to provide additional context for error (ex: “capability Id ''foo'' does not exist”).'
              x-ms-identifiers: []
              description: Array object to transfer and persist errors that originate from the Edge.
            version:
              type: integer
              format: int32
              description: 'A read only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.'
          description: Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.
        provisioningState:
          type: string
          description: Provisioning state of the resource.
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
            values:
              - name: Succeeded
                value: Succeeded
                description: Resource has been created.
              - name: Failed
                value: Failed
                description: Resource creation failed.
              - name: Canceled
                value: Canceled
                description: Resource creation has been canceled.
              - name: Accepted
                value: Accepted
                description: Resource has been accepted by the server.
  x-stackQL-resources:
    operation_status:
      id: azure.device_registry.operation_status
      name: operation_status
      title: Operation Status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DeviceRegistry~1locations~1{location}~1operationStatuses~1{operationId}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.device_registry.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DeviceRegistry~1operations~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DeviceRegistry~1operations~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    asset_endpoint_profiles:
      id: azure.device_registry.asset_endpoint_profiles
      name: asset_endpoint_profiles
      title: Asset Endpoint Profiles
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1{assetEndpointProfileName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1{assetEndpointProfileName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1{assetEndpointProfileName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assetEndpointProfiles~1{assetEndpointProfileName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/asset_endpoint_profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/asset_endpoint_profiles/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/asset_endpoint_profiles/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/asset_endpoint_profiles/methods/create_or_replace'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/asset_endpoint_profiles/methods/delete'
    assets:
      id: azure.device_registry.assets
      name: assets
      title: Assets
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DeviceRegistry~1assets~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DeviceRegistry~1assets~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assets~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        _list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assets~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assets~1{assetName}~1?api-version=2023-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assets~1{assetName}~1?api-version=2023-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assets~1{assetName}~1?api-version=2023-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeviceRegistry~1assets~1{assetName}~1?api-version=2023-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assets/methods/get'
          - $ref: '#/components/x-stackQL-resources/assets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/assets/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/assets/methods/create_or_replace'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assets/methods/delete'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/locations/{location}/operationStatuses/{operationId}/?api-version=2023-11-01-preview':
    get:
      operationId: OperationStatus_Get
      description: Returns the current status of an async operation.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Requested operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: operation_status
      x-stackQL-method: get
      x-stackQL-verb: select
  /providers/Microsoft.DeviceRegistry/operations/?api-version=2023-11-01-preview:
    get:
      description: Returns list of operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: List of Operations returned if request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response returned if request was unsuccessful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles/?api-version=2023-11-01-preview':
    get:
      tags:
        - Asset Endpoint Profiles
      operationId: AssetEndpointProfiles_ListBySubscription
      description: List all Asset Endpoint Profiles in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of Asset Endpoint Profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetEndpointProfileResponseList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: asset_endpoint_profiles
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles/?api-version=2023-11-01-preview':
    get:
      tags:
        - Asset Endpoint Profiles
      operationId: AssetEndpointProfiles_ListByResourceGroup
      description: List all Asset Endpoint Profiles in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: List of Asset Endpoint Profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetEndpointProfileResponseList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: asset_endpoint_profiles
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles/{assetEndpointProfileName}/?api-version=2023-11-01-preview':
    put:
      tags:
        - Asset Endpoint Profiles
      operationId: AssetEndpointProfiles_CreateOrReplace
      description: Create a new Asset Endpoint Profile or replace an existing Asset Endpoint Profile.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetEndpointProfileNameParameter'
      requestBody:
        description: Resource create or replace parameters.
        required: true
        x-ms-requestBody-name: assetEndpointProfile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetEndpointProfile'
      responses:
        '200':
          description: Asset Endpoint Profile is created or updated (replaced) successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetEndpointProfile'
          x-nullable: false
        '201':
          description: Async operation to create or update (replace) the Asset Endpoint Profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetEndpointProfile'
          x-nullable: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: asset_endpoint_profiles
      x-stackQL-method: create_or_replace
      x-stackQL-verb: insert
    patch:
      tags:
        - Asset Endpoint Profiles
      operationId: AssetEndpointProfiles_Update
      description: Update specific Asset Endpoint Profile properties.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetEndpointProfileNameParameter'
      requestBody:
        description: Resource Update parameters.
        required: true
        x-ms-requestBody-name: assetEndpointProfile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetEndpointProfilePatchPayload'
      responses:
        '200':
          description: Updated Asset Endpoint Profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetEndpointProfile'
        '202':
          description: Async operation to update the Asset Endpoint Profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetEndpointProfile'
          headers:
            Location:
              schema:
                type: string
          x-nullable: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: asset_endpoint_profiles
      x-stackQL-method: update
      x-stackQL-verb: exec
    delete:
      tags:
        - Asset Endpoint Profiles
      operationId: AssetEndpointProfiles_Delete
      description: Delete an Asset Endpoint Profile.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetEndpointProfileNameParameter'
      responses:
        '202':
          description: Async operation to delete the Asset Endpoint Profile is created.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Asset Endpoint Profile deletion no-op since the resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: asset_endpoint_profiles
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      tags:
        - Asset Endpoint Profiles
      operationId: AssetEndpointProfiles_Get
      description: Retrieve a single Asset Endpoint Profile.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetEndpointProfileNameParameter'
      responses:
        '200':
          description: A single Asset Endpoint Profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetEndpointProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: asset_endpoint_profiles
      x-stackQL-method: get
      x-stackQL-verb: select
  '/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assets/?api-version=2023-11-01-preview':
    get:
      tags:
        - Assets
      operationId: Assets_ListBySubscription
      description: List all assets in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of Assets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponseList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: assets
      x-stackQL-method: list_by_subscription
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assets/?api-version=2023-11-01-preview':
    get:
      tags:
        - Assets
      operationId: Assets_ListByResourceGroup
      description: List all assets in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: List of Assets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponseList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: assets
      x-stackQL-method: list_by_resource_group
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assets/{assetName}/?api-version=2023-11-01-preview':
    put:
      tags:
        - Assets
      operationId: Assets_CreateOrReplace
      description: Create a new asset or replace an existing asset.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetNameParameter'
      requestBody:
        description: Resource create or replace parameters.
        required: true
        x-ms-requestBody-name: asset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        '200':
          description: Asset is created or updated (replaced) successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          x-nullable: false
        '201':
          description: Async operation to create or update (replace) the Asset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          x-nullable: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: assets
      x-stackQL-method: create_or_replace
      x-stackQL-verb: insert
    patch:
      tags:
        - Assets
      operationId: Assets_Update
      description: Update specific asset properties.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetNameParameter'
      requestBody:
        description: Resource Update parameters.
        required: true
        x-ms-requestBody-name: asset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetPatchPayload'
      responses:
        '200':
          description: Updated Asset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '202':
          description: Async operation to update the Asset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          headers:
            Location:
              schema:
                type: string
          x-nullable: false
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: assets
      x-stackQL-method: update
      x-stackQL-verb: exec
    delete:
      tags:
        - Assets
      operationId: Assets_Delete
      description: Delete an asset.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetNameParameter'
      responses:
        '202':
          description: Async operation to delete the Asset is created.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Asset deletion no-op since the resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: assets
      x-stackQL-method: delete
      x-stackQL-verb: delete
    get:
      tags:
        - Assets
      operationId: Assets_Get
      description: Retrieve a single asset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/assetNameParameter'
      responses:
        '200':
          description: A single Asset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: assets
      x-stackQL-method: get
      x-stackQL-verb: select
