openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Microsoft Defender External Attack Surface Management
  description: Microsoft Defender External Attack Surface Management (Defender EASM) continuously discovers and maps your digital attack surface to provide an external view of your online infrastructure. This visibility enables security and IT teams to identify unknowns, prioritize risk, eliminate threats, and extend vulnerability and exposure control beyond the firewall. Defender EASM leverages Microsoftâ€™s crawling technology to discover assets that are related to your known online infrastructure, and actively scans these assets to discover new connections over time. Attack Surface Insights are generated by leveraging vulnerability and infrastructure data to showcase the key areas of concern for your organization.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    WorkspaceNameParameter:
      name: workspaceName
      in: path
      description: The name of the Workspace.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LabelNameParameter:
      name: labelName
      in: path
      description: The name of the Label.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TaskIdParameter:
      name: taskId
      in: path
      description: The id of the Task.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ResourceState:
      description: Resources provisioning states.
      enum:
        - NotSpecified
        - Accepted
        - Creating
        - Succeeded
        - Failed
        - Canceled
        - ProvisioningResources
        - InstallingApplication
        - ConfiguringApplication
        - MigratingApplicationData
        - RunningValidations
        - CreatingArtifacts
        - DeletingArtifacts
      type: string
      x-ms-enum:
        name: ResourceState
        modelAsString: true
    ResourceBaseProperties:
      description: Resource base properties.
      type: object
      properties:
        provisioningState:
          description: Resource provisioning state.
          $ref: '#/components/schemas/ResourceState'
          readOnly: true
    WorkspaceResourceProperties:
      description: Workspace properties.
      properties:
        dataPlaneEndpoint:
          description: Data plane endpoint.
          type: string
          readOnly: true
        provisioningState:
          description: Resource provisioning state.
          $ref: '#/components/schemas/ResourceState'
          readOnly: true
      type: object
    LabelResourceProperties:
      description: Label properties.
      properties:
        displayName:
          description: Label display name.
          type: string
        color:
          description: Label color.
          type: string
        provisioningState:
          description: Resource provisioning state.
          $ref: '#/components/schemas/ResourceState'
          readOnly: true
      type: object
    WorkspaceResource:
      description: Workspace details.
      x-ms-azure-resource: true
      properties:
        properties:
          description: Workspace properties.
          $ref: '#/components/schemas/WorkspaceResourceProperties'
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    WorkspacePatchResource:
      type: object
      description: Workspace patch properties.
      properties:
        tags:
          description: resource tags.
          type: object
          readOnly: false
          additionalProperties:
            type: string
        systemData:
          $ref: '#/components/schemas/systemData'
    WorkspaceResourceList:
      description: The list of workspaces.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of Workspace list.
          type: string
        value:
          description: The list of workspaces.
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceResource'
    LabelResource:
      description: Label details
      x-ms-azure-resource: true
      properties:
        properties:
          description: Label properties
          $ref: '#/components/schemas/LabelResourceProperties'
          x-ms-client-flatten: true
      type: object
    LabelPatchResource:
      description: Label patch properties
      properties:
        properties:
          description: Label properties
          $ref: '#/components/schemas/LabelResourceProperties'
          x-ms-client-flatten: true
      type: object
    LabelResourceList:
      type: object
      description: The list of labels.
      properties:
        value:
          type: array
          description: The list of labels.
          items:
            $ref: '#/components/schemas/LabelResource'
        nextLink:
          type: string
          description: The link used to get the next page of Label list.
    TaskResourceProperties:
      description: Task properties.
      properties:
        startedAt:
          description: The time the task started
          type: string
        completedAt:
          description: The time the task completed
          type: string
        lastPolledAt:
          description: The last time the task was polled
          type: string
        state:
          description: the state the task is in
          type: string
        phase:
          description: the phase the task is in
          type: string
        reason:
          description: The reason the task was moved into its current state, if the task wasn't completed.
          type: string
        metadata:
          description: The reason the task was moved into its current state, if the task wasn't completed.
          type: object
        provisioningState:
          description: Resource provisioning state.
          $ref: '#/components/schemas/ResourceState'
          readOnly: true
      type: object
    TaskResource:
      description: Task details
      x-ms-azure-resource: true
      properties:
        properties:
          description: Task properties
          $ref: '#/components/schemas/TaskResourceProperties'
          x-ms-client-flatten: true
      type: object
  x-stackQL-resources:
    workspaces:
      id: azure.defender.workspaces
      name: workspaces
      title: workspaces
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Easm~1workspaces?api-version=2023-04-01-preview/get'
            operationId: Workspaces_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceResourceList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces?api-version=2023-04-01-preview/get'
            operationId: Workspaces_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceResourceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}?api-version=2023-04-01-preview/get'
            operationId: Workspaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceResource
        create_and_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}?api-version=2023-04-01-preview/put'
            operationId: Workspaces_CreateAndUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}?api-version=2023-04-01-preview/patch'
            operationId: Workspaces_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkspaceResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}?api-version=2023-04-01-preview/delete'
            operationId: Workspaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create_and_update'
        update:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete'
    labels:
      id: azure.defender.labels
      name: labels
      title: labels
      methods:
        list_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}~1labels?api-version=2023-04-01-preview/get'
            operationId: Labels_ListByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LabelResourceList
            objectKey: $.value
        get_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}~1labels~1{labelName}?api-version=2023-04-01-preview/get'
            operationId: Labels_GetByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LabelResource
        create_and_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}~1labels~1{labelName}?api-version=2023-04-01-preview/put'
            operationId: Labels_CreateAndUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LabelResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}~1labels~1{labelName}?api-version=2023-04-01-preview/patch'
            operationId: Labels_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LabelResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}~1labels~1{labelName}?api-version=2023-04-01-preview/delete'
            operationId: Labels_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/labels/methods/get_by_workspace'
          - $ref: '#/components/x-stackQL-resources/labels/methods/list_by_workspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/labels/methods/create_and_update'
        update:
          - $ref: '#/components/x-stackQL-resources/labels/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/labels/methods/delete'
    tasks:
      id: azure.defender.tasks
      name: tasks
      title: tasks
      methods:
        get_by_workspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Easm~1workspaces~1{workspaceName}~1tasks~1{taskId}?api-version=2023-04-01-preview/get'
            operationId: Tasks_GetByWorkspace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TaskResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/get_by_workspace'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.defender.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Easm~1operations?api-version=2023-04-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_workspaces:
      id: azure.defender.vw_workspaces
      name: vw_workspaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.dataPlaneEndpoint') as "data_plane_endpoint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              workspaceName
              FROM azure.defender.workspaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.dataPlaneEndpoint') as "data_plane_endpoint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                workspaceName
                FROM azure.defender.workspaces
                WHERE subscriptionId = 'replace-me';
    vw_labels:
      id: azure.defender.vw_labels
      name: vw_labels
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.color') as "color",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              workspaceName,
              labelName
              FROM azure.defender.labels
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workspaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.color') as "color",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                workspaceName,
                labelName
                FROM azure.defender.labels
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workspaceName = 'replace-me';
    vw_tasks:
      id: azure.defender.vw_tasks
      name: vw_tasks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startedAt') as "started_at",
              JSON_EXTRACT(properties, '$.completedAt') as "completed_at",
              JSON_EXTRACT(properties, '$.lastPolledAt') as "last_polled_at",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.phase') as "phase",
              JSON_EXTRACT(properties, '$.reason') as "reason",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              workspaceName,
              taskId
              FROM azure.defender.tasks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workspaceName = 'replace-me' AND taskId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startedAt') as "started_at",
                json_extract_path_text(properties, '$.completedAt') as "completed_at",
                json_extract_path_text(properties, '$.lastPolledAt') as "last_polled_at",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.phase') as "phase",
                json_extract_path_text(properties, '$.reason') as "reason",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                workspaceName,
                taskId
                FROM azure.defender.tasks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND workspaceName = 'replace-me' AND taskId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Easm/workspaces?api-version=2023-04-01-preview:
    get:
      tags:
        - Workspaces
      description: Returns a list of workspaces under the given subscription.
      operationId: Workspaces_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of workspaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Easm/workspaces?api-version=2023-04-01-preview:
    get:
      tags:
        - Workspaces
      description: Returns a list of workspaces in the given resource group.
      operationId: Workspaces_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: List of workspaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Easm/workspaces/{workspaceName}?api-version=2023-04-01-preview:
    get:
      tags:
        - Workspaces
      description: Returns a workspace with the given name.
      operationId: Workspaces_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Workspace details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Workspaces
      description: Create or update a Workspace.
      operationId: Workspaces_CreateAndUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: Workspace details.
        x-ms-requestBody-name: WorkspaceResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResource'
        '201':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Workspaces
      description: Update a Workspace.
      operationId: Workspaces_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: Workspace patch details.
        x-ms-requestBody-name: WorkspacePatchResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacePatchResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Workspaces
      description: Delete a Workspace.
      operationId: Workspaces_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '202':
          description: The Workspace will be deleted asynchronously.
        '204':
          description: The Workspace does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Easm/workspaces/{workspaceName}/labels?api-version=2023-04-01-preview:
    get:
      tags:
        - Labels
      description: Returns a list of labels in the given workspace.
      operationId: Labels_ListByWorkspace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Lists of labels.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResourceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Easm/workspaces/{workspaceName}/labels/{labelName}?api-version=2023-04-01-preview:
    get:
      tags:
        - Labels
      description: Returns a label in the given workspace.
      operationId: Labels_GetByWorkspace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/LabelNameParameter'
      responses:
        '200':
          description: Label details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Labels
      description: Create or update a Label.
      operationId: Labels_CreateAndUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/LabelNameParameter'
      requestBody:
        description: Label details.
        x-ms-requestBody-name: LabelResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        '201':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Labels
      description: Update a Label.
      operationId: Labels_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/LabelNameParameter'
      requestBody:
        description: Label patch details.
        x-ms-requestBody-name: LabelPatchResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelPatchResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Labels
      description: Delete a Label.
      operationId: Labels_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/LabelNameParameter'
      responses:
        '202':
          description: The Label will be deleted asynchronously.
        '204':
          description: The Label does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Easm/workspaces/{workspaceName}/tasks/{taskId}?api-version=2023-04-01-preview:
    get:
      tags:
        - Tasks
      description: Returns a task in the given workspace.
      operationId: Tasks_GetByWorkspace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/TaskIdParameter'
      responses:
        '200':
          description: Task details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Easm/operations?api-version=2023-04-01-preview:
    get:
      tags:
        - Operations
      description: Returns list of operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Operation details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
