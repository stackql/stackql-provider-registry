openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Migrate Projects
  description: Azure Migrate helps you to migrate to Azure. Azure Migrate provides a centralized hub to track discovery, assessment, and migration of on-premises infrastructure, applications, and data to Azure. The hub provides Azure tools for assessment and migration, as well as third-party independent software vendor (ISV) offerings.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: Azure Subscription Id in which migrate project was created.
      required: true
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: Name of the Azure Resource Group that migrate project is part of.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    migrateProjectName:
      name: migrateProjectName
      in: path
      description: Name of the Azure Migrate project.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    machineName:
      name: machineName
      in: path
      description: Unique name of a machine in Azure migration hub.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    databaseName:
      name: databaseName
      in: path
      description: Unique name of a database in Azure migration hub.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    databaseInstanceName:
      name: databaseInstanceName
      in: path
      description: Unique name of a database instance in Azure migration hub.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    solutionName:
      name: solutionName
      in: path
      description: Unique name of a migration solution within a migrate project.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    eventName:
      name: eventName
      in: path
      description: Unique name of an event within a migrate project.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    continuationToken:
      name: continuationToken
      in: query
      description: The continuation token.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    pageSize:
      name: pageSize
      in: query
      description: The number of items to be returned in a single page. This value is honored only if it is less than the 100.
      required: false
      x-ms-parameter-location: method
      schema:
        type: integer
    api-version:
      name: api-version
      in: query
      description: Standard request header. Used by service to identify API version used by client.
      required: false
      schema:
        enum:
          - 2018-09-01-preview
        type: string
    acceptLanguage:
      name: Accept-Language
      in: header
      description: Standard request header. Used by service to respond to client in appropriate language.
      x-ms-parameter-location: client
      schema:
        type: string
  schemas:
    Object:
      type: object
      properties: {}
    DatabaseInstanceCollection:
      description: Collection of database instances.
      type: object
      properties:
        value:
          description: Gets or sets the database instances.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseInstance'
        nextLink:
          description: Gets or sets the value of nextLink.
          type: string
    DatabaseInstance:
      description: DatabaseInstance REST resource.
      properties:
        id:
          description: Gets or sets the relative URL to get to this REST resource.
          type: string
        name:
          description: Gets or sets the name of this REST resource.
          type: string
        type:
          description: Gets the type of this REST resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseInstanceProperties'
          description: Gets or sets the properties of the machine.
      type: object
    DatabaseInstanceProperties:
      description: Properties of the database instance resource.
      type: object
      properties:
        discoveryData:
          description: Gets or sets the assessment details of the database instance published by various sources.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseInstanceDiscoveryDetails'
          x-ms-identifiers:
            - instanceId
        summary:
          description: Gets or sets the database instances summary per solution. The key of dictionary is the solution name and value is the corresponding database instance summary object.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DatabaseInstanceSummary'
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the database.
          type: string
    DatabaseInstanceDiscoveryDetails:
      description: Discovery properties that can be shared by various publishers.
      type: object
      properties:
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the database instance details.
          type: string
        instanceId:
          description: Gets or sets the database instance Id.
          type: string
        enqueueTime:
          description: Gets or sets the time the message was enqueued.
          type: string
        solutionName:
          description: Gets or sets the name of the solution that sent the data.
          type: string
        instanceName:
          description: Gets or sets the database instance name.
          type: string
        instanceVersion:
          description: Gets or sets the database instance version.
          type: string
        instanceType:
          description: Gets or sets the database instance type.
          type: string
        hostName:
          description: Gets or sets the host name of the database server.
          type: string
        ipAddress:
          description: Gets or sets the IP addresses of the database server. IP addresses could be IP V4 or IP V6.
          type: string
        portNumber:
          format: int32
          description: Gets or sets the port number of the database server.
          type: integer
        extendedInfo:
          description: Gets or sets the extended properties of the database server.
          type: object
          additionalProperties:
            type: string
    DatabaseInstanceSummary:
      description: Class representing the database instance summary object.
      type: object
      properties:
        databasesAssessedCount:
          format: int32
          description: Gets or sets the count of databases assessed.
          type: integer
        migrationReadyCount:
          format: int32
          description: Gets or sets the count of databases ready for migration.
          type: integer
    DatabaseCollection:
      description: Collection of databases.
      type: object
      properties:
        value:
          description: Gets or sets the databases.
          type: array
          items:
            $ref: '#/components/schemas/Database'
        nextLink:
          description: Gets or sets the value of nextLink.
          type: string
    Database:
      description: Database REST resource.
      properties:
        id:
          description: Gets or sets the relative URL to get to this REST resource.
          type: string
        name:
          description: Gets or sets the name of this REST resource.
          type: string
        type:
          description: Gets the type of this REST resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DatabaseProperties'
          description: Gets or sets the properties of the database.
      type: object
    DatabaseProperties:
      description: Properties of the database resource.
      type: object
      properties:
        assessmentData:
          description: Gets or sets the assessment details of the database published by various sources.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseAssessmentDetails'
          x-ms-identifiers:
            - assessmentId
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the database.
          type: string
    DatabaseAssessmentDetails:
      description: Assessment properties that can be shared by various publishers.
      type: object
      properties:
        assessmentId:
          description: Gets or sets the database assessment scope/Id.
          type: string
        migrationBlockersCount:
          format: int32
          description: Gets or sets the number of blocking changes found.
          type: integer
        breakingChangesCount:
          format: int32
          description: Gets or sets the number of breaking changes found.
          type: integer
        isReadyForMigration:
          description: Gets or sets a value indicating whether the database is ready for migration.
          type: boolean
        assessmentTargetType:
          description: Gets or sets the assessed target database type.
          type: string
        lastAssessedTime:
          format: date-time
          description: Gets or sets the time when the database was last assessed.
          type: string
        compatibilityLevel:
          description: Gets or sets the compatibility level of the database.
          type: string
        databaseSizeInMB:
          description: Gets or sets the database size.
          type: string
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the database details.
          type: string
        enqueueTime:
          description: Gets or sets the time the message was enqueued.
          type: string
        solutionName:
          description: Gets or sets the name of the solution that sent the data.
          type: string
        instanceId:
          description: Gets or sets the database server instance Id.
          type: string
        databaseName:
          description: Gets or sets the database name.
          type: string
        extendedInfo:
          description: Gets or sets the extended properties of the database.
          type: object
          additionalProperties:
            type: string
    EventCollection:
      description: Collection of events.
      type: object
      properties:
        value:
          description: Gets or sets the machines.
          type: array
          items:
            $ref: '#/components/schemas/MigrateEvent'
        nextLink:
          description: Gets or sets the value of nextLink.
          type: string
    MigrateEvent:
      description: MigrateEvent REST resource.
      properties:
        id:
          description: Gets or sets the relative URL to get to this REST resource.
          type: string
        name:
          description: Gets or sets the name of this REST resource.
          type: string
        type:
          description: Gets the type of this REST resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/MigrateEventProperties'
          description: Gets or sets the properties of the event.
      type: object
    MigrateEventProperties:
      description: Properties of the error resource.
      type: object
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        errorCode:
          description: Gets or sets the error code.
          type: string
        errorMessage:
          description: Gets or sets the error message.
          type: string
        recommendation:
          description: Gets or sets the recommendation for the error.
          type: string
        possibleCauses:
          description: Gets or sets the possible causes for the error.
          type: string
        solution:
          description: Gets or sets the solution for which the error is being reported.
          type: string
        clientRequestId:
          description: Gets or sets the client request Id of the payload for which the event is being reported.
          type: string
      discriminator:
        propertyName: instanceType
    ODataQueryOptions`1:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/FilterQueryOption'
          readOnly: true
    ODataQueryContext:
      type: object
      properties:
        defaultQuerySettings:
          $ref: '#/components/schemas/DefaultQuerySettings'
          readOnly: true
        model:
          $ref: '#/components/schemas/IEdmModel'
          readOnly: true
        elementType:
          $ref: '#/components/schemas/IEdmType'
          readOnly: true
        navigationSource:
          $ref: '#/components/schemas/IEdmNavigationSource'
          readOnly: true
        elementClrType:
          type: string
          readOnly: true
        path:
          $ref: '#/components/schemas/ODataPath'
          readOnly: true
        requestContainer:
          $ref: '#/components/schemas/IServiceProvider'
          readOnly: true
    ODataRawQueryOptions:
      type: object
      properties:
        filter:
          type: string
          readOnly: true
    FilterQueryOption:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/ODataQueryContext'
          readOnly: true
        validator:
          $ref: '#/components/schemas/FilterQueryValidator'
        filterClause:
          $ref: '#/components/schemas/FilterClause'
          readOnly: true
        rawValue:
          type: string
          readOnly: true
    ODataQueryValidator:
      type: object
      properties: {}
    DefaultQuerySettings:
      type: object
      properties:
        enableExpand:
          type: boolean
        enableSelect:
          type: boolean
        enableCount:
          type: boolean
        enableOrderBy:
          type: boolean
        enableFilter:
          type: boolean
        maxTop:
          format: int32
          type: integer
    IEdmModel:
      type: object
      properties:
        schemaElements:
          type: array
          items:
            $ref: '#/components/schemas/IEdmSchemaElement'
          x-ms-identifiers:
            - name
          readOnly: true
        vocabularyAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/IEdmVocabularyAnnotation'
          x-ms-identifiers: []
          readOnly: true
        referencedModels:
          type: array
          items:
            $ref: '#/components/schemas/IEdmModel'
          x-ms-identifiers: []
          readOnly: true
        declaredNamespaces:
          type: array
          items:
            type: string
          readOnly: true
        directValueAnnotationsManager:
          $ref: '#/components/schemas/IEdmDirectValueAnnotationsManager'
          readOnly: true
        entityContainer:
          $ref: '#/components/schemas/IEdmEntityContainer'
          readOnly: true
    IEdmType:
      type: object
      properties:
        typeKind:
          enum:
            - None
            - Primitive
            - Entity
            - Complex
            - Collection
            - EntityReference
            - Enum
            - TypeDefinition
            - Untyped
            - Path
          type: string
          readOnly: true
    IEdmNavigationSource:
      type: object
      properties:
        navigationPropertyBindings:
          type: array
          items:
            $ref: '#/components/schemas/IEdmNavigationPropertyBinding'
          x-ms-identifiers:
            - /navigationProperty/name
          readOnly: true
        path:
          $ref: '#/components/schemas/IEdmPathExpression'
          readOnly: true
        type:
          $ref: '#/components/schemas/IEdmType'
          readOnly: true
        name:
          type: string
          readOnly: true
    ODataPath:
      type: object
      properties:
        edmType:
          $ref: '#/components/schemas/IEdmType'
          readOnly: true
        navigationSource:
          $ref: '#/components/schemas/IEdmNavigationSource'
          readOnly: true
        segments:
          type: array
          items:
            $ref: '#/components/schemas/ODataPathSegment'
          x-ms-identifiers:
            - identifier
          readOnly: true
        pathTemplate:
          type: string
          readOnly: true
        path:
          type: array
          items:
            $ref: '#/components/schemas/ODataPathSegment'
          x-ms-identifiers:
            - identifier
          readOnly: true
    IServiceProvider:
      type: object
      properties: {}
    SelectExpandQueryValidator:
      type: object
      properties: {}
    SelectExpandClause:
      type: object
      properties:
        selectedItems:
          type: array
          items:
            $ref: '#/components/schemas/SelectItem'
          x-ms-identifiers: []
          readOnly: true
        allSelected:
          type: boolean
          readOnly: true
    ApplyClause:
      type: object
      properties:
        transformations:
          type: array
          items:
            $ref: '#/components/schemas/TransformationNode'
          x-ms-identifiers: []
          readOnly: true
    FilterQueryValidator:
      type: object
      properties: {}
    FilterClause:
      type: object
      properties:
        expression:
          $ref: '#/components/schemas/SingleValueNode'
          readOnly: true
        rangeVariable:
          $ref: '#/components/schemas/RangeVariable'
          readOnly: true
        itemType:
          $ref: '#/components/schemas/IEdmTypeReference'
          readOnly: true
    IEdmSchemaElement:
      type: object
      properties:
        schemaElementKind:
          enum:
            - None
            - TypeDefinition
            - Term
            - Action
            - EntityContainer
            - Function
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
    IEdmVocabularyAnnotation:
      type: object
      properties:
        qualifier:
          type: string
          readOnly: true
        term:
          $ref: '#/components/schemas/IEdmTerm'
          readOnly: true
        target:
          $ref: '#/components/schemas/IEdmVocabularyAnnotatable'
          readOnly: true
        value:
          $ref: '#/components/schemas/IEdmExpression'
          readOnly: true
    IEdmDirectValueAnnotationsManager:
      type: object
      properties: {}
    IEdmEntityContainer:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/IEdmEntityContainerElement'
          x-ms-identifiers:
            - name
          readOnly: true
        schemaElementKind:
          enum:
            - None
            - TypeDefinition
            - Term
            - Action
            - EntityContainer
            - Function
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
    IEdmNavigationPropertyBinding:
      type: object
      properties:
        navigationProperty:
          $ref: '#/components/schemas/IEdmNavigationProperty'
          readOnly: true
        target:
          $ref: '#/components/schemas/IEdmNavigationSource'
          readOnly: true
        path:
          $ref: '#/components/schemas/IEdmPathExpression'
          readOnly: true
    IEdmPathExpression:
      type: object
      properties:
        pathSegments:
          type: array
          items:
            type: string
          readOnly: true
        path:
          type: string
          readOnly: true
        expressionKind:
          enum:
            - None
            - BinaryConstant
            - BooleanConstant
            - DateTimeOffsetConstant
            - DecimalConstant
            - FloatingConstant
            - GuidConstant
            - IntegerConstant
            - StringConstant
            - DurationConstant
            - 'Null'
            - Record
            - Collection
            - Path
            - If
            - Cast
            - IsType
            - FunctionApplication
            - LabeledExpressionReference
            - Labeled
            - PropertyPath
            - NavigationPropertyPath
            - DateConstant
            - TimeOfDayConstant
            - EnumMember
            - AnnotationPath
          type: string
          readOnly: true
    ODataPathSegment:
      type: object
      properties:
        edmType:
          $ref: '#/components/schemas/IEdmType'
          readOnly: true
        identifier:
          type: string
    SelectItem:
      type: object
      properties: {}
    TransformationNode:
      type: object
      properties:
        kind:
          enum:
            - Aggregate
            - GroupBy
            - Filter
            - Compute
          type: string
          readOnly: true
    SingleValueNode:
      type: object
      properties:
        typeReference:
          $ref: '#/components/schemas/IEdmTypeReference'
          readOnly: true
        kind:
          enum:
            - None
            - Constant
            - Convert
            - NonResourceRangeVariableReference
            - BinaryOperator
            - UnaryOperator
            - SingleValuePropertyAccess
            - CollectionPropertyAccess
            - SingleValueFunctionCall
            - Any
            - CollectionNavigationNode
            - SingleNavigationNode
            - SingleValueOpenPropertyAccess
            - SingleResourceCast
            - All
            - CollectionResourceCast
            - ResourceRangeVariableReference
            - SingleResourceFunctionCall
            - CollectionFunctionCall
            - CollectionResourceFunctionCall
            - NamedFunctionParameter
            - ParameterAlias
            - EntitySet
            - KeyLookup
            - SearchTerm
            - CollectionOpenPropertyAccess
            - CollectionComplexNode
            - SingleComplexNode
            - Count
            - SingleValueCast
            - CollectionPropertyNode
            - AggregatedCollectionPropertyNode
            - In
            - CollectionConstant
          type: string
          readOnly: true
    RangeVariable:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        typeReference:
          $ref: '#/components/schemas/IEdmTypeReference'
          readOnly: true
        kind:
          format: int32
          type: integer
          readOnly: true
    IEdmTypeReference:
      type: object
      properties:
        isNullable:
          type: boolean
          readOnly: true
        definition:
          $ref: '#/components/schemas/IEdmType'
          readOnly: true
    IEdmTerm:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/IEdmTypeReference'
          readOnly: true
        appliesTo:
          type: string
          readOnly: true
        defaultValue:
          type: string
          readOnly: true
        schemaElementKind:
          enum:
            - None
            - TypeDefinition
            - Term
            - Action
            - EntityContainer
            - Function
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
    IEdmVocabularyAnnotatable:
      type: object
      properties: {}
    IEdmExpression:
      type: object
      properties:
        expressionKind:
          enum:
            - None
            - BinaryConstant
            - BooleanConstant
            - DateTimeOffsetConstant
            - DecimalConstant
            - FloatingConstant
            - GuidConstant
            - IntegerConstant
            - StringConstant
            - DurationConstant
            - 'Null'
            - Record
            - Collection
            - Path
            - If
            - Cast
            - IsType
            - FunctionApplication
            - LabeledExpressionReference
            - Labeled
            - PropertyPath
            - NavigationPropertyPath
            - DateConstant
            - TimeOfDayConstant
            - EnumMember
            - AnnotationPath
          type: string
          readOnly: true
    IEdmEntityContainerElement:
      type: object
      properties:
        containerElementKind:
          enum:
            - None
            - EntitySet
            - ActionImport
            - FunctionImport
            - Singleton
          type: string
          readOnly: true
        container:
          $ref: '#/components/schemas/IEdmEntityContainer'
          readOnly: true
        name:
          type: string
          readOnly: true
    IEdmNavigationProperty:
      type: object
      properties:
        partner:
          $ref: '#/components/schemas/IEdmNavigationProperty'
          readOnly: true
        onDelete:
          enum:
            - None
            - Cascade
          type: string
          readOnly: true
        containsTarget:
          type: boolean
          readOnly: true
        referentialConstraint:
          $ref: '#/components/schemas/IEdmReferentialConstraint'
          readOnly: true
        propertyKind:
          enum:
            - None
            - Structural
            - Navigation
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/IEdmTypeReference'
          readOnly: true
        declaringType:
          $ref: '#/components/schemas/IEdmStructuredType'
          readOnly: true
        name:
          type: string
          readOnly: true
    IEdmReferentialConstraint:
      type: object
      properties:
        propertyPairs:
          type: array
          items:
            $ref: '#/components/schemas/EdmReferentialConstraintPropertyPair'
          x-ms-identifiers:
            - /dependentProperty/name
            - /principalProperty/name
          readOnly: true
    IEdmStructuredType:
      type: object
      properties:
        isAbstract:
          type: boolean
          readOnly: true
        isOpen:
          type: boolean
          readOnly: true
        baseType:
          $ref: '#/components/schemas/IEdmStructuredType'
          readOnly: true
        declaredProperties:
          type: array
          items:
            $ref: '#/components/schemas/IEdmProperty'
          x-ms-identifiers:
            - name
          readOnly: true
        typeKind:
          enum:
            - None
            - Primitive
            - Entity
            - Complex
            - Collection
            - EntityReference
            - Enum
            - TypeDefinition
            - Untyped
            - Path
          type: string
          readOnly: true
    EdmReferentialConstraintPropertyPair:
      type: object
      properties:
        dependentProperty:
          $ref: '#/components/schemas/IEdmStructuralProperty'
          readOnly: true
        principalProperty:
          $ref: '#/components/schemas/IEdmStructuralProperty'
          readOnly: true
    IEdmProperty:
      type: object
      properties:
        propertyKind:
          enum:
            - None
            - Structural
            - Navigation
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/IEdmTypeReference'
          readOnly: true
        declaringType:
          $ref: '#/components/schemas/IEdmStructuredType'
          readOnly: true
        name:
          type: string
          readOnly: true
    IEdmStructuralProperty:
      type: object
      properties:
        defaultValueString:
          type: string
          readOnly: true
        propertyKind:
          enum:
            - None
            - Structural
            - Navigation
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/IEdmTypeReference'
          readOnly: true
        declaringType:
          $ref: '#/components/schemas/IEdmStructuredType'
          readOnly: true
        name:
          type: string
          readOnly: true
    MachineCollection:
      description: Collection of machines.
      type: object
      properties:
        value:
          description: Gets or sets the machines.
          type: array
          items:
            $ref: '#/components/schemas/Machine'
        nextLink:
          description: Gets or sets the value of nextLink.
          type: string
    Machine:
      description: Machine REST resource.
      properties:
        id:
          description: Gets or sets the relative URL to get to this REST resource.
          type: string
        name:
          description: Gets or sets the name of this REST resource.
          type: string
        type:
          description: Gets the type of this REST resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/MachineProperties'
          description: Gets or sets the properties of the machine.
      type: object
    MachineProperties:
      description: Properties of the machine resource.
      type: object
      properties:
        discoveryData:
          description: Gets or sets the discovery details of the machine published by various sources.
          type: array
          items:
            $ref: '#/components/schemas/DiscoveryDetails'
          x-ms-identifiers:
            - machineId
        assessmentData:
          description: Gets or sets the assessment details of the machine published by various sources.
          type: array
          items:
            $ref: '#/components/schemas/AssessmentDetails'
          x-ms-identifiers:
            - assessmentId
        migrationData:
          description: Gets or sets the migration details of the machine published by various sources.
          type: array
          items:
            $ref: '#/components/schemas/MigrationDetails'
          x-ms-identifiers: []
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the machine.
          type: string
    DiscoveryDetails:
      description: Discovery properties that can be published by various ISVs.
      type: object
      properties:
        osType:
          description: Gets or sets the OS type.
          type: string
        osName:
          description: Gets or sets the OS name.
          type: string
        osVersion:
          description: Gets or sets the OS version.
          type: string
        enqueueTime:
          description: Gets or sets the time the message was enqueued.
          type: string
        solutionName:
          description: Gets or sets the name of the solution that sent the data.
          type: string
        machineId:
          description: Gets or sets the unique identifier of the machine.
          type: string
        machineManagerId:
          description: Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).
          type: string
        fabricType:
          description: Gets or sets the fabric type.
          type: string
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the machine details.
          type: string
        machineName:
          description: Gets or sets the name of the machine.
          type: string
        ipAddresses:
          description: Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.
          type: array
          items:
            type: string
        fqdn:
          description: Gets or sets the FQDN of the machine.
          type: string
        biosId:
          description: Gets or sets the BIOS ID of the machine.
          type: string
        macAddresses:
          description: Gets or sets the list of MAC addresses of the machine.
          type: array
          items:
            type: string
        extendedInfo:
          description: Gets or sets the ISV specific extended information.
          type: object
          additionalProperties:
            type: string
    AssessmentDetails:
      description: Assessment properties that can be shared by various publishers.
      type: object
      properties:
        assessmentId:
          description: Gets or sets the id of the assessment done on the machine.
          type: string
        targetVMSize:
          description: Gets or sets the target VM size.
          type: string
        targetVMLocation:
          description: Gets or sets the target VM location.
          type: string
        targetStorageType:
          description: Gets or sets the target storage type.
          type: object
          additionalProperties:
            type: string
        enqueueTime:
          description: Gets or sets the time the message was enqueued.
          type: string
        solutionName:
          description: Gets or sets the name of the solution that sent the data.
          type: string
        machineId:
          description: Gets or sets the unique identifier of the machine.
          type: string
        machineManagerId:
          description: Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).
          type: string
        fabricType:
          description: Gets or sets the fabric type.
          type: string
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the machine details.
          type: string
        machineName:
          description: Gets or sets the name of the machine.
          type: string
        ipAddresses:
          description: Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.
          type: array
          items:
            type: string
        fqdn:
          description: Gets or sets the FQDN of the machine.
          type: string
        biosId:
          description: Gets or sets the BIOS ID of the machine.
          type: string
        macAddresses:
          description: Gets or sets the list of MAC addresses of the machine.
          type: array
          items:
            type: string
        extendedInfo:
          description: Gets or sets the ISV specific extended information.
          type: object
          additionalProperties:
            type: string
    MigrationDetails:
      description: Migration properties that can be shared by various publishers.
      type: object
      properties:
        migrationPhase:
          description: Gets or sets the phase of migration of the machine.
          type: string
        migrationTested:
          description: Gets or sets a value indicating whether migration was tested on the machine.
          type: boolean
        replicationProgressPercentage:
          format: int32
          description: Gets or sets the progress percentage of migration on the machine.
          type: integer
        targetVMArmId:
          description: Gets or sets the ARM id the migrated VM.
          type: string
        enqueueTime:
          description: Gets or sets the time the message was enqueued.
          type: string
        solutionName:
          description: Gets or sets the name of the solution that sent the data.
          type: string
        machineId:
          description: Gets or sets the unique identifier of the machine.
          type: string
        machineManagerId:
          description: Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM).
          type: string
        fabricType:
          description: Gets or sets the fabric type.
          type: string
        lastUpdatedTime:
          format: date-time
          description: Gets or sets the time of the last modification of the machine details.
          type: string
        machineName:
          description: Gets or sets the name of the machine.
          type: string
        ipAddresses:
          description: Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.
          type: array
          items:
            type: string
        fqdn:
          description: Gets or sets the FQDN of the machine.
          type: string
        biosId:
          description: Gets or sets the BIOS ID of the machine.
          type: string
        macAddresses:
          description: Gets or sets the list of MAC addresses of the machine.
          type: array
          items:
            type: string
        extendedInfo:
          description: Gets or sets the ISV specific extended information.
          type: object
          additionalProperties:
            type: string
    MigrateProject:
      description: Migrate Project REST Resource.
      x-ms-azure-resource: true
      properties:
        eTag:
          description: Gets or sets the eTag for concurrency control.
          type: string
        location:
          description: Gets or sets the Azure location in which migrate project is created.
          type: string
        properties:
          $ref: '#/components/schemas/MigrateProjectProperties'
          description: Gets or sets the nested properties.
        id:
          description: Gets the relative URL to get this migrate project.
          type: string
          readOnly: true
        name:
          description: Gets the name of the migrate project.
          type: string
          readOnly: true
        type:
          description: Handled by resource provider. Type = Microsoft.Migrate/MigrateProject.
          type: string
          readOnly: true
        tags:
          description: Gets or sets the tags.
          type: object
          properties:
            additionalProperties:
              type: string
      type: object
    MigrateProjectProperties:
      description: Class for migrate project properties.
      type: object
      properties:
        registeredTools:
          description: Gets or sets the list of tools registered with the migrate project.
          type: array
          items:
            enum:
              - ServerDiscovery
              - ServerAssessment
              - ServerMigration
              - Cloudamize
              - Turbonomic
              - Zerto
              - CorentTech
              - ServerAssessmentV1
              - ServerMigration_Replication
              - Carbonite
              - DataMigrationAssistant
              - DatabaseMigrationService
            type: string
        summary:
          description: Gets the summary of the migrate project.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectSummary'
          readOnly: true
        lastSummaryRefreshedTime:
          format: date-time
          description: Gets the last time the project summary was refreshed.
          type: string
          readOnly: true
        refreshSummaryState:
          description: Gets the refresh summary state.
          enum:
            - Started
            - InProgress
            - Completed
            - Failed
          type: string
          readOnly: true
        provisioningState:
          type: string
          enum:
            - Accepted
            - Creating
            - Deleting
            - Failed
            - Moving
            - Succeeded
          description: Provisioning state of the migrate project.
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
    ProjectSummary:
      description: The project summary class.
      type: object
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        refreshSummaryState:
          description: Gets or sets the state of refresh summary.
          enum:
            - Started
            - InProgress
            - Completed
            - Failed
          type: string
        lastSummaryRefreshedTime:
          format: date-time
          description: Gets or sets the time when summary was last refreshed.
          type: string
        extendedSummary:
          description: Gets or sets the extended summary.
          type: object
          additionalProperties:
            type: string
      discriminator:
        propertyName: instanceType
    RegisterToolInput:
      description: Class representing the register tool input.
      type: object
      properties:
        tool:
          description: Gets or sets the tool to be registered.
          enum:
            - ServerDiscovery
            - ServerAssessment
            - ServerMigration
            - Cloudamize
            - Turbonomic
            - Zerto
            - CorentTech
            - ServerAssessmentV1
            - ServerMigration_Replication
            - Carbonite
            - DataMigrationAssistant
            - DatabaseMigrationService
          type: string
    RegistrationResult:
      description: Class representing the registration status of a tool with the migrate project.
      type: object
      properties:
        isRegistered:
          description: Gets or sets a value indicating whether the tool is registered or not.
          type: boolean
    RefreshSummaryResult:
      description: Class representing the refresh summary status of the migrate project.
      type: object
      properties:
        isRefreshed:
          description: Gets or sets a value indicating whether the migrate project summary is refreshed.
          type: boolean
    RefreshSummaryInput:
      description: Class representing the refresh summary input.
      type: object
      properties:
        goal:
          description: Gets or sets the goal for which summary needs to be refreshed.
          enum:
            - Servers
            - Databases
          type: string
    Solution:
      description: Solution REST Resource.
      x-ms-azure-resource: true
      properties:
        id:
          description: Gets the relative URL to get to this REST resource.
          type: string
          readOnly: true
        name:
          description: Gets the name of this REST resource.
          type: string
          readOnly: true
        type:
          description: Gets the type of this REST resource.
          type: string
          readOnly: true
        etag:
          description: Gets or sets the ETAG for optimistic concurrency control.
          type: string
        properties:
          $ref: '#/components/schemas/SolutionProperties'
          description: Gets or sets the properties of the solution.
      type: object
    SolutionProperties:
      description: Class for solution properties.
      type: object
      properties:
        tool:
          description: Gets or sets the tool being used in the solution.
          enum:
            - ServerDiscovery
            - ServerAssessment
            - ServerMigration
            - Cloudamize
            - Turbonomic
            - Zerto
            - CorentTech
            - ServerAssessmentV1
            - ServerMigration_Replication
            - Carbonite
            - DataMigrationAssistant
            - DatabaseMigrationService
          type: string
        purpose:
          description: Gets or sets the purpose of the solution.
          enum:
            - Discovery
            - Assessment
            - Migration
          type: string
        goal:
          description: Gets or sets the goal of the solution.
          enum:
            - Servers
            - Databases
          type: string
        status:
          description: Gets or sets the current status of the solution.
          enum:
            - Inactive
            - Active
          type: string
        cleanupState:
          description: Gets or sets the cleanup state of the solution.
          enum:
            - None
            - Started
            - InProgress
            - Completed
            - Failed
          type: string
        summary:
          $ref: '#/components/schemas/SolutionSummary'
          description: Gets or sets the summary of the solution.
        details:
          $ref: '#/components/schemas/SolutionDetails'
          description: Gets or sets the details of the solution.
    SolutionSummary:
      description: The solution summary class.
      type: object
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
      discriminator:
        propertyName: instanceType
    SolutionDetails:
      description: Class representing the details of the solution.
      type: object
      properties:
        groupCount:
          format: int32
          description: Gets or sets the count of groups reported by the solution.
          type: integer
        assessmentCount:
          format: int32
          description: Gets or sets the count of assessments reported by the solution.
          type: integer
        extendedDetails:
          description: Gets or sets the extended details reported by the solution.
          type: object
          additionalProperties:
            type: string
    SolutionsCollection:
      description: Collection of solutions.
      type: object
      properties:
        value:
          description: Gets or sets the list of solutions.
          type: array
          items:
            $ref: '#/components/schemas/Solution'
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    SolutionConfig:
      description: Class representing the config for the solution in the migrate project.
      type: object
      properties:
        publisherSasUri:
          description: Gets or sets the publisher sas uri for the solution.
          type: string
    ServersProjectSummary:
      description: Class representing the servers project summary.
      x-ms-discriminator-value: Servers
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        refreshSummaryState:
          description: Gets or sets the state of refresh summary.
          enum:
            - Started
            - InProgress
            - Completed
            - Failed
          type: string
        lastSummaryRefreshedTime:
          format: date-time
          description: Gets or sets the time when summary was last refreshed.
          type: string
        extendedSummary:
          description: Gets or sets the extended summary.
          type: object
          additionalProperties:
            type: string
        discoveredCount:
          format: int32
          description: Gets or sets the count of entities discovered.
          type: integer
        assessedCount:
          format: int32
          description: Gets or sets the count of entities assessed.
          type: integer
        replicatingCount:
          format: int32
          description: Gets or sets the count of entities being replicated.
          type: integer
        testMigratedCount:
          format: int32
          description: Gets or sets the count of entities test migrated.
          type: integer
        migratedCount:
          format: int32
          description: Gets or sets the count of entities migrated.
          type: integer
      type: object
    DatabaseProjectSummary:
      description: The database project summary class.
      x-ms-discriminator-value: Databases
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        refreshSummaryState:
          description: Gets or sets the state of refresh summary.
          enum:
            - Started
            - InProgress
            - Completed
            - Failed
          type: string
        lastSummaryRefreshedTime:
          format: date-time
          description: Gets or sets the time when summary was last refreshed.
          type: string
        extendedSummary:
          description: Gets or sets the extended summary.
          type: object
          additionalProperties:
            type: string
      type: object
    ServersSolutionSummary:
      description: Class representing the servers solution summary.
      x-ms-discriminator-value: Servers
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        discoveredCount:
          format: int32
          description: Gets or sets the count of servers discovered.
          type: integer
        assessedCount:
          format: int32
          description: Gets or sets the count of servers assessed.
          type: integer
        replicatingCount:
          format: int32
          description: Gets or sets the count of servers being replicated.
          type: integer
        testMigratedCount:
          format: int32
          description: Gets or sets the count of servers test migrated.
          type: integer
        migratedCount:
          format: int32
          description: Gets or sets the count of servers migrated.
          type: integer
      type: object
    DatabasesSolutionSummary:
      description: Class representing the databases solution summary.
      x-ms-discriminator-value: Databases
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        databasesAssessedCount:
          format: int32
          description: Gets or sets the count of databases assessed.
          type: integer
        databaseInstancesAssessedCount:
          format: int32
          description: Gets or sets the count of database instances assessed.
          type: integer
        migrationReadyCount:
          format: int32
          description: Gets or sets the count of databases ready for migration.
          type: integer
      type: object
    MachineMigrateEventProperties:
      description: Properties of the machine error resource.
      x-ms-discriminator-value: Servers
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        errorCode:
          description: Gets or sets the error code.
          type: string
        errorMessage:
          description: Gets or sets the error message.
          type: string
        recommendation:
          description: Gets or sets the recommendation for the error.
          type: string
        possibleCauses:
          description: Gets or sets the possible causes for the error.
          type: string
        solution:
          description: Gets or sets the solution for which the error is being reported.
          type: string
        clientRequestId:
          description: Gets or sets the client request Id of the payload for which the event is being reported.
          type: string
        machine:
          description: Gets or sets the machine for which the error is being reported.
          type: string
      type: object
    DatabaseMigrateEventProperties:
      description: Properties of the database error resource.
      x-ms-discriminator-value: Databases
      properties:
        instanceType:
          description: Gets the Instance type.
          type: string
          readOnly: true
        errorCode:
          description: Gets or sets the error code.
          type: string
        errorMessage:
          description: Gets or sets the error message.
          type: string
        recommendation:
          description: Gets or sets the recommendation for the error.
          type: string
        possibleCauses:
          description: Gets or sets the possible causes for the error.
          type: string
        solution:
          description: Gets or sets the solution for which the error is being reported.
          type: string
        clientRequestId:
          description: Gets or sets the client request Id of the payload for which the event is being reported.
          type: string
        database:
          description: Gets or sets the database for which the error is being reported.
          type: string
        databaseInstanceId:
          description: Gets or sets the database instance for which the error is being reported.
          type: string
      type: object
    OperationResultList:
      type: object
      description: List of API operations.
      properties:
        value:
          type: array
          description: List of operations.
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
    Operation:
      type: object
      description: A REST API operation supported by the provider.
      properties:
        name:
          type: string
          description: Name of the operation.
          readOnly: true
        display:
          description: Displayable properties of the operation.
          $ref: '#/components/schemas/OperationDisplay'
        origin:
          type: string
          description: Origin of the operation.
          readOnly: true
    OperationDisplay:
      type: object
      description: Displayable properties of the operation.
      readOnly: true
      properties:
        provider:
          type: string
          description: Provider of the operation.
          readOnly: true
        resource:
          type: string
          description: Resource operated on by the operation.
          readOnly: true
        operation:
          type: string
          description: Operation Type.
          readOnly: true
        description:
          type: string
          description: Description of the operation.
          readOnly: true
  x-stackQL-resources:
    database_instances:
      id: azure.migrate_projects.database_instances
      name: database_instances
      title: database_instances
      methods:
        enumerate_database_instances:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1databaseInstances?api-version=2018-09-01-preview/get'
            operationId: DatabaseInstances_EnumerateDatabaseInstances
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseInstanceCollection
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    database_instances_database_instances:
      id: azure.migrate_projects.database_instances_database_instances
      name: database_instances_database_instances
      title: database_instances_database_instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1databaseInstances~1{databaseInstanceName}?api-version=2018-09-01-preview/get'
            operationId: DatabaseInstancesDatabaseInstance_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseInstance
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_instances_database_instances/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    databases:
      id: azure.migrate_projects.databases
      name: databases
      title: databases
      methods:
        enumerate_databases:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1databases?api-version=2018-09-01-preview/get'
            operationId: Databases_EnumerateDatabases
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseCollection
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    databases_databases:
      id: azure.migrate_projects.databases_databases
      name: databases_databases
      title: databases_databases
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1databases~1{databaseName}?api-version=2018-09-01-preview/get'
            operationId: DatabasesDatabase_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases_databases/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    events:
      id: azure.migrate_projects.events
      name: events
      title: events
      methods:
        enumerate_events:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1migrateEvents?api-version=2018-09-01-preview/get'
            operationId: Events_EnumerateEvents
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventCollection
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    events_events:
      id: azure.migrate_projects.events_events
      name: events_events
      title: events_events
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1migrateEvents~1{eventName}?api-version=2018-09-01-preview/get'
            operationId: EventsEvent_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrateEvent
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1migrateEvents~1{eventName}?api-version=2018-09-01-preview/delete'
            operationId: EventsEvent_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/events_events/methods/get'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/events_events/methods/delete'
    machines:
      id: azure.migrate_projects.machines
      name: machines
      title: machines
      methods:
        enumerate_machines:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1machines?api-version=2018-09-01-preview/get'
            operationId: Machines_EnumerateMachines
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MachineCollection
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    machines_machines:
      id: azure.migrate_projects.machines_machines
      name: machines_machines
      title: machines_machines
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1machines~1{machineName}?api-version=2018-09-01-preview/get'
            operationId: MachinesMachine_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Machine
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/machines_machines/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    migrate_projects:
      id: azure.migrate_projects.migrate_projects
      name: migrate_projects
      title: migrate_projects
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}?api-version=2018-09-01-preview/get'
            operationId: MigrateProjectsMigrateProject_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrateProject
        put_migrate_project:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}?api-version=2018-09-01-preview/put'
            operationId: MigrateProjects_PutMigrateProject
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrateProject
        patch_migrate_project:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}?api-version=2018-09-01-preview/patch'
            operationId: MigrateProjects_PatchMigrateProject
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MigrateProject
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}?api-version=2018-09-01-preview/delete'
            operationId: MigrateProjectsMigrateProject_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        register_tool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1registerTool?api-version=2018-09-01-preview/post'
            operationId: MigrateProjects_RegisterTool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RegistrationResult
        refresh_migrate_project_summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1refreshSummary?api-version=2018-09-01-preview/post'
            operationId: MigrateProjects_RefreshMigrateProjectSummary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RefreshSummaryResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/migrate_projects/methods/get'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/migrate_projects/methods/delete'
    solutions:
      id: azure.migrate_projects.solutions
      name: solutions
      title: solutions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1solutions~1{solutionName}?api-version=2018-09-01-preview/get'
            operationId: Solutions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Solution
        put_solution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1solutions~1{solutionName}?api-version=2018-09-01-preview/put'
            operationId: Solutions_PutSolution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Solution
        patch_solution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1solutions~1{solutionName}?api-version=2018-09-01-preview/patch'
            operationId: Solutions_PatchSolution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Solution
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1solutions~1{solutionName}?api-version=2018-09-01-preview/delete'
            operationId: Solutions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enumerate_solutions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1solutions?api-version=2018-09-01-preview/get'
            operationId: Solutions_EnumerateSolutions
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SolutionsCollection
        cleanup_solution_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1solutions~1{solutionName}~1cleanupData?api-version=2018-09-01-preview/post'
            operationId: Solutions_CleanupSolutionData
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/solutions/methods/get'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/solutions/methods/delete'
    solutions_configs:
      id: azure.migrate_projects.solutions_configs
      name: solutions_configs
      title: solutions_configs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1migrateProjects~1{migrateProjectName}~1solutions~1{solutionName}~1getConfig?api-version=2018-09-01-preview/post'
            operationId: SolutionsConfig_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SolutionConfig
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/solutions_configs/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.migrate_projects.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Migrate~1operations?api-version=2018-09-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_database_instances_database_instances:
      id: azure.migrate_projects.vw_database_instances_database_instances
      name: vw_database_instances_database_instances
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.discoveryData') as "discovery_data",
              JSON_EXTRACT(properties, '$.summary') as "summary",
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as "last_updated_time",
              subscriptionId,
              resourceGroupName,
              migrateProjectName,
              databaseInstanceName
              FROM azure.migrate_projects.database_instances_database_instances
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND databaseInstanceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.discoveryData') as "discovery_data",
                json_extract_path_text(properties, '$.summary') as "summary",
                json_extract_path_text(properties, '$.lastUpdatedTime') as "last_updated_time",
                subscriptionId,
                resourceGroupName,
                migrateProjectName,
                databaseInstanceName
                FROM azure.migrate_projects.database_instances_database_instances
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND databaseInstanceName = 'replace-me';
    vw_databases_databases:
      id: azure.migrate_projects.vw_databases_databases
      name: vw_databases_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.assessmentData') as "assessment_data",
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as "last_updated_time",
              subscriptionId,
              resourceGroupName,
              migrateProjectName,
              databaseName
              FROM azure.migrate_projects.databases_databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.assessmentData') as "assessment_data",
                json_extract_path_text(properties, '$.lastUpdatedTime') as "last_updated_time",
                subscriptionId,
                resourceGroupName,
                migrateProjectName,
                databaseName
                FROM azure.migrate_projects.databases_databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND databaseName = 'replace-me';
    vw_events_events:
      id: azure.migrate_projects.vw_events_events
      name: vw_events_events
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.instanceType') as "instance_type",
              JSON_EXTRACT(properties, '$.errorCode') as "error_code",
              JSON_EXTRACT(properties, '$.errorMessage') as "error_message",
              JSON_EXTRACT(properties, '$.recommendation') as "recommendation",
              JSON_EXTRACT(properties, '$.possibleCauses') as "possible_causes",
              JSON_EXTRACT(properties, '$.solution') as "solution",
              JSON_EXTRACT(properties, '$.clientRequestId') as "client_request_id",
              subscriptionId,
              resourceGroupName,
              migrateProjectName,
              eventName
              FROM azure.migrate_projects.events_events
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND eventName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.instanceType') as "instance_type",
                json_extract_path_text(properties, '$.errorCode') as "error_code",
                json_extract_path_text(properties, '$.errorMessage') as "error_message",
                json_extract_path_text(properties, '$.recommendation') as "recommendation",
                json_extract_path_text(properties, '$.possibleCauses') as "possible_causes",
                json_extract_path_text(properties, '$.solution') as "solution",
                json_extract_path_text(properties, '$.clientRequestId') as "client_request_id",
                subscriptionId,
                resourceGroupName,
                migrateProjectName,
                eventName
                FROM azure.migrate_projects.events_events
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND eventName = 'replace-me';
    vw_machines_machines:
      id: azure.migrate_projects.vw_machines_machines
      name: vw_machines_machines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.discoveryData') as "discovery_data",
              JSON_EXTRACT(properties, '$.assessmentData') as "assessment_data",
              JSON_EXTRACT(properties, '$.migrationData') as "migration_data",
              JSON_EXTRACT(properties, '$.lastUpdatedTime') as "last_updated_time",
              subscriptionId,
              resourceGroupName,
              migrateProjectName,
              machineName
              FROM azure.migrate_projects.machines_machines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND machineName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.discoveryData') as "discovery_data",
                json_extract_path_text(properties, '$.assessmentData') as "assessment_data",
                json_extract_path_text(properties, '$.migrationData') as "migration_data",
                json_extract_path_text(properties, '$.lastUpdatedTime') as "last_updated_time",
                subscriptionId,
                resourceGroupName,
                migrateProjectName,
                machineName
                FROM azure.migrate_projects.machines_machines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND machineName = 'replace-me';
    vw_migrate_projects:
      id: azure.migrate_projects.vw_migrate_projects
      name: vw_migrate_projects
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              eTag as e_tag,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.registeredTools') as "registered_tools",
              JSON_EXTRACT(properties, '$.summary') as "summary",
              JSON_EXTRACT(properties, '$.lastSummaryRefreshedTime') as "last_summary_refreshed_time",
              JSON_EXTRACT(properties, '$.refreshSummaryState') as "refresh_summary_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              migrateProjectName
              FROM azure.migrate_projects.migrate_projects
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                eTag as e_tag,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.registeredTools') as "registered_tools",
                json_extract_path_text(properties, '$.summary') as "summary",
                json_extract_path_text(properties, '$.lastSummaryRefreshedTime') as "last_summary_refreshed_time",
                json_extract_path_text(properties, '$.refreshSummaryState') as "refresh_summary_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                migrateProjectName
                FROM azure.migrate_projects.migrate_projects
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me';
    vw_solutions:
      id: azure.migrate_projects.vw_solutions
      name: vw_solutions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              etag as etag,
              JSON_EXTRACT(properties, '$.tool') as "tool",
              JSON_EXTRACT(properties, '$.purpose') as "purpose",
              JSON_EXTRACT(properties, '$.goal') as "goal",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.cleanupState') as "cleanup_state",
              JSON_EXTRACT(properties, '$.summary') as "summary",
              JSON_EXTRACT(properties, '$.details') as "details",
              subscriptionId,
              resourceGroupName,
              migrateProjectName,
              solutionName
              FROM azure.migrate_projects.solutions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND solutionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                etag as etag,
                json_extract_path_text(properties, '$.tool') as "tool",
                json_extract_path_text(properties, '$.purpose') as "purpose",
                json_extract_path_text(properties, '$.goal') as "goal",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.cleanupState') as "cleanup_state",
                json_extract_path_text(properties, '$.summary') as "summary",
                json_extract_path_text(properties, '$.details') as "details",
                subscriptionId,
                resourceGroupName,
                migrateProjectName,
                solutionName
                FROM azure.migrate_projects.solutions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND migrateProjectName = 'replace-me' AND solutionName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databaseInstances?api-version=2018-09-01-preview:
    get:
      tags:
        - DatabaseInstances
      summary: Gets a list of database instances in the migrate project.
      operationId: DatabaseInstances_EnumerateDatabaseInstances
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/continuationToken'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseInstanceCollection'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databaseInstances/{databaseInstanceName}?api-version=2018-09-01-preview:
    get:
      tags:
        - DatabaseInstances
      summary: Gets a database instance in the migrate project.
      operationId: DatabaseInstancesDatabaseInstance_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/databaseInstanceName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseInstance'
      deprecated: false
      x-ms-original-operationId: DatabaseInstances_GetDatabaseInstance
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databases?api-version=2018-09-01-preview:
    get:
      tags:
        - Databases
      summary: Gets a list of databases in the migrate project.
      operationId: Databases_EnumerateDatabases
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/continuationToken'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseCollection'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databases/{databaseName}?api-version=2018-09-01-preview:
    get:
      tags:
        - Databases
      summary: Gets a database in the migrate project.
      operationId: DatabasesDatabase_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/databaseName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      deprecated: false
      x-ms-original-operationId: Databases_GetDatabase
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents?api-version=2018-09-01-preview:
    get:
      tags:
        - Events
      summary: Gets a list of events in the migrate project.
      operationId: Events_EnumerateEvents
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/continuationToken'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCollection'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents/{eventName}?api-version=2018-09-01-preview:
    get:
      tags:
        - Events
      summary: Gets an event in the migrate project.
      operationId: EventsEvent_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/eventName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateEvent'
      deprecated: false
      x-ms-original-operationId: Events_GetEvent
    delete:
      tags:
        - Events
      summary: Delete the migrate event
      description: Delete the migrate event. Deleting non-existent migrate event is a no-operation.
      operationId: EventsEvent_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/eventName'
      responses:
        '200':
          description: OK
      deprecated: false
      x-ms-original-operationId: Events_DeleteEvent
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines?api-version=2018-09-01-preview:
    get:
      tags:
        - Machines
      summary: Gets a list of machines in the migrate project.
      operationId: Machines_EnumerateMachines
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/continuationToken'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCollection'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines/{machineName}?api-version=2018-09-01-preview:
    get:
      tags:
        - Machines
      summary: Gets a machine in the migrate project.
      operationId: MachinesMachine_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/machineName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Machine'
      deprecated: false
      x-ms-original-operationId: Machines_GetMachine
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}?api-version=2018-09-01-preview:
    get:
      tags:
        - MigrateProjects
      summary: Method to get a migrate project.
      operationId: MigrateProjectsMigrateProject_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateProject'
      deprecated: false
      x-ms-original-operationId: MigrateProjects_GetMigrateProject
    put:
      tags:
        - MigrateProjects
      summary: Method to create or update a migrate project.
      operationId: MigrateProjects_PutMigrateProject
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/acceptLanguage'
      requestBody:
        description: Body with migrate project details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrateProject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateProject'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateProject'
      deprecated: false
    patch:
      tags:
        - MigrateProjects
      summary: Update migrate project.
      description: Update a migrate project with specified name. Supports partial updates, for example only tags can be provided.
      operationId: MigrateProjects_PatchMigrateProject
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/acceptLanguage'
      requestBody:
        description: Body with migrate project details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MigrateProject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrateProject'
      deprecated: false
    delete:
      tags:
        - MigrateProjects
      summary: Delete the migrate project
      description: Delete the migrate project. Deleting non-existent project is a no-operation.
      operationId: MigrateProjectsMigrateProject_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '200':
          description: OK
      deprecated: false
      x-ms-original-operationId: MigrateProjects_DeleteMigrateProject
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/registerTool?api-version=2018-09-01-preview:
    post:
      tags:
        - MigrateProjects
      summary: Registers a tool with the migrate project.
      operationId: MigrateProjects_RegisterTool
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/acceptLanguage'
      requestBody:
        description: Input containing the name of the tool to be registered.
        required: true
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterToolInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResult'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/refreshSummary?api-version=2018-09-01-preview:
    post:
      tags:
        - MigrateProjects
      summary: Refresh the summary of the migrate project.
      operationId: MigrateProjects_RefreshMigrateProjectSummary
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The goal input which needs to be refreshed.
        required: true
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshSummaryInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshSummaryResult'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}?api-version=2018-09-01-preview:
    get:
      tags:
        - Solutions
      summary: Gets a solution in the migrate project.
      operationId: Solutions_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/solutionName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
      deprecated: false
      x-ms-original-operationId: Solutions_GetSolution
    put:
      tags:
        - Solutions
      summary: Creates a solution in the migrate project.
      operationId: Solutions_PutSolution
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/solutionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The input for the solution.
        required: true
        x-ms-requestBody-name: solutionInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Solution'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
      deprecated: false
    patch:
      tags:
        - Solutions
      summary: Update solution.
      description: Update a solution with specified name. Supports partial updates, for example only tags can be provided.
      operationId: Solutions_PatchSolution
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/solutionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The input for the solution.
        required: true
        x-ms-requestBody-name: solutionInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Solution'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Solution'
      deprecated: false
    delete:
      tags:
        - Solutions
      summary: Delete the solution
      description: Delete the solution. Deleting non-existent project is a no-operation.
      operationId: Solutions_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/solutionName'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/acceptLanguage'
      responses:
        '200':
          description: OK
      deprecated: false
      x-ms-original-operationId: Solutions_DeleteSolution
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions?api-version=2018-09-01-preview:
    get:
      tags:
        - Solutions
      summary: Gets the list of solutions in the migrate project.
      operationId: Solutions_EnumerateSolutions
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionsCollection'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}/getConfig?api-version=2018-09-01-preview:
    post:
      tags:
        - Solutions
      summary: Gets the config for the solution in the migrate project.
      operationId: SolutionsConfig_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/solutionName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionConfig'
      deprecated: false
      x-ms-original-operationId: Solutions_GetConfig
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}/cleanupData?api-version=2018-09-01-preview:
    post:
      tags:
        - Solutions
      summary: Cleanup the solution data in the migrate project.
      operationId: Solutions_CleanupSolutionData
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/migrateProjectName'
        - $ref: '#/components/parameters/solutionName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
      deprecated: false
  /providers/Microsoft.Migrate/operations?api-version=2018-09-01-preview:
    get:
      summary: Get list of operations supported in the API.
      description: Get a list of REST API supported by Microsoft.Migrate provider.
      operationId: Operations_List
      responses:
        '200':
          description: OK. Returns list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultList'
      x-ms-pageable:
        nextLinkName: null
