openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Serial Console
  description: The Azure Serial Console REST API is available for you to use with the Azure Serial Console Resource Provider to enable, disable, and get the disabled status of Serial Console for a subscription.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    defaultParameter:
      name: default
      in: path
      description: Default parameter. Leave the value as "default".
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ResourceProviderNamespaceParameter:
      name: resourceProviderNamespace
      in: path
      description: The namespace of the resource provider.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ParentResourceTypeParameter:
      name: parentResourceType
      in: path
      description: 'The resource type of the parent resource.  For example: ''virtualMachines'' or ''virtualMachineScaleSets'''
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ParentResourceParameter:
      name: parentResource
      in: path
      description: 'The resource name, or subordinate path, for the parent of the serial port. For example: the name of the virtual machine.'
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    SerialPortProperties:
      description: The properties of the serial port.
      type: object
      properties:
        state:
          description: Specifies whether the port is enabled for a serial console connection.
          type: string
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: SerialPortState
            modelAsString: false
        connectionState:
          description: Specifies whether the port is currently active.
          type: string
          enum:
            - active
            - inactive
          x-ms-enum:
            name: SerialPortConnectionState
            modelAsString: false
    SerialPort:
      title: Serial port
      description: Represents the serial port of the parent resource.
      properties:
        properties:
          description: The properties of the serial port.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SerialPortProperties'
      type: object
    SerialPortListResult:
      title: Serial port list result
      description: The list serial ports operation response.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SerialPort'
          description: The list of serial ports.
    SerialPortConnectResult:
      title: Serial port connect result
      description: Returns a connection string to the serial port of the resource.
      type: object
      properties:
        connectionString:
          description: Connection string to the serial port of the resource.
          type: string
    CloudError:
      description: An error response from the service.
      x-ms-external: true
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: Cloud error body.
    CloudErrorBody:
      description: An error response from the Batch service.
      x-ms-external: true
      type: object
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers:
            - code
          description: A list of additional details about the error.
    SerialConsoleStatus:
      title: Serial Console GET Result
      description: Returns whether or not Serial Console is disabled.
      properties:
        properties:
          type: object
          properties:
            disabled:
              description: Whether or not Serial Console is disabled.
              type: boolean
      type: object
    DisableSerialConsoleResult:
      title: Serial Console Disable Result
      description: Returns whether or not Serial Console is disabled.
      properties:
        properties:
          type: object
          properties:
            disabled:
              description: Whether or not Serial Console is disabled.
              type: boolean
      type: object
    EnableSerialConsoleResult:
      title: Serial Console Enable Result
      description: Returns whether or not Serial Console is disabled (enabled).
      properties:
        properties:
          type: object
          properties:
            disabled:
              description: Whether or not Serial Console is disabled.
              type: boolean
      type: object
    SerialConsoleOperations:
      title: Serial Console operations
      description: Serial Console operations
      type: object
      properties:
        value:
          description: A list of Serial Console operations
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              isDataAction:
                type: string
              display:
                type: object
                properties:
                  provider:
                    type: string
                  resource:
                    type: string
                  operation:
                    type: string
                  description:
                    type: string
      x-ms-identifiers:
        - name
    GetSerialConsoleSubscriptionNotFound:
      title: Serial Console subscription not found
      description: Error saying that the provided subscription could not be found
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Subscription not found message
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    serial_ports:
      id: azure.serial_console.serial_ports
      name: serial_ports
      title: serial_ports
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourceType}~1{parentResource}~1providers~1Microsoft.SerialConsole~1serialPorts?api-version=2024-07-01/get'
            operationId: SerialPorts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SerialPortListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourceType}~1{parentResource}~1providers~1Microsoft.SerialConsole~1serialPorts~1{serialPort}?api-version=2024-07-01/get'
            operationId: SerialPorts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SerialPort
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourceType}~1{parentResource}~1providers~1Microsoft.SerialConsole~1serialPorts~1{serialPort}?api-version=2024-07-01/put'
            operationId: SerialPorts_Create
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: SerialPort
        list_by_subscriptions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.SerialConsole~1serialPorts?api-version=2024-07-01/get'
            operationId: SerialPorts_ListBySubscriptions
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SerialPortListResult
            objectKey: $.value
        connect:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourceType}~1{parentResource}~1providers~1Microsoft.SerialConsole~1serialPorts~1{serialPort}~1connect?api-version=2024-07-01/post'
            operationId: SerialPorts_Connect
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SerialPortConnectResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/serial_ports/methods/get'
          - $ref: '#/components/x-stackQL-resources/serial_ports/methods/list'
          - $ref: '#/components/x-stackQL-resources/serial_ports/methods/list_by_subscriptions'
        insert:
          - $ref: '#/components/x-stackQL-resources/serial_ports/methods/create'
        update: []
        replace: []
        delete: []
    operations:
      id: azure.serial_console.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.SerialConsole~1operations?api-version=2024-07-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SerialConsoleOperations
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    consoles:
      id: azure.serial_console.consoles
      name: consoles
      title: consoles
      methods:
        get_status:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.SerialConsole~1consoleServices~1{default}?api-version=2024-07-01/get'
            operationId: Console_GetStatus
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SerialConsoleStatus
        disable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.SerialConsole~1consoleServices~1{default}~1disableConsole?api-version=2024-07-01/post'
            operationId: Console_Disable
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DisableSerialConsoleResult
        enable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.SerialConsole~1consoleServices~1{default}~1enableConsole?api-version=2024-07-01/post'
            operationId: Console_Enable
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnableSerialConsoleResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/get_status'
        insert: []
        update: []
        replace: []
        delete: []
    vw_serial_ports:
      id: azure.serial_console.vw_serial_ports
      name: vw_serial_ports
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.connectionState') as "connection_state",
              subscriptionId,
              resourceGroupName,
              resourceProviderNamespace,
              parentResourceType,
              parentResource,
              serialPort
              FROM azure.serial_console.serial_ports
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.connectionState') as "connection_state",
                subscriptionId,
                resourceGroupName,
                resourceProviderNamespace,
                parentResourceType,
                parentResource,
                serialPort
                FROM azure.serial_console.serial_ports
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts?api-version=2024-07-01:
    get:
      tags:
        - SerialPorts
      operationId: SerialPorts_List
      description: 'Lists all of the configured serial ports for a parent resource '
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - $ref: '#/components/parameters/ParentResourceTypeParameter'
        - $ref: '#/components/parameters/ParentResourceParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialPortListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts/{serialPort}?api-version=2024-07-01:
    get:
      tags:
        - SerialPorts
      operationId: SerialPorts_Get
      description: Gets the configured settings for a serial port
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - $ref: '#/components/parameters/ParentResourceTypeParameter'
        - $ref: '#/components/parameters/ParentResourceParameter'
        - name: serialPort
          in: path
          description: The name of the serial port to connect to.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialPort'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - SerialPorts
      operationId: SerialPorts_Create
      description: Creates or updates a serial port
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - $ref: '#/components/parameters/ParentResourceTypeParameter'
        - $ref: '#/components/parameters/ParentResourceParameter'
        - name: serialPort
          in: path
          description: The name of the serial port to create.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create the serial port.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerialPort'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialPort'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/serialPorts?api-version=2024-07-01:
    get:
      tags:
        - SerialPorts
      description: Handles requests to list all SerialPort resources in a subscription.
      operationId: SerialPorts_ListBySubscriptions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Return a list of SerialPort resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialPortListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourceType}/{parentResource}/providers/Microsoft.SerialConsole/serialPorts/{serialPort}/connect?api-version=2024-07-01:
    post:
      tags:
        - SerialPorts
      operationId: SerialPorts_Connect
      description: Connect to serial port of the target resource
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - $ref: '#/components/parameters/ParentResourceTypeParameter'
        - $ref: '#/components/parameters/ParentResourceParameter'
        - name: serialPort
          in: path
          description: The name of the serial port to connect to.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Return a connection string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialPortConnectResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.SerialConsole/operations?api-version=2024-07-01:
    get:
      tags:
        - SerialConsole
      operationId: Operations_List
      description: Gets a list of Serial Console API operations.
      parameters: []
      responses:
        '200':
          description: OK - returns a JSON object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialConsoleOperations'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: ListOperations
  /subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}?api-version=2024-07-01:
    get:
      tags:
        - SerialConsole
      operationId: Console_GetStatus
      summary: Get the disabled status for a subscription
      description: Gets whether or not Serial Console is disabled for a given subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/defaultParameter'
      responses:
        '200':
          description: OK - Returns a JSON object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerialConsoleStatus'
        '404':
          description: Subscription not found - returns a JSON object with error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSerialConsoleSubscriptionNotFound'
          x-ms-error-response: true
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: GetConsoleStatus
  /subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}/disableConsole?api-version=2024-07-01:
    post:
      tags:
        - SerialConsole
      operationId: Console_Disable
      summary: Disable Serial Console for a subscription
      description: Disables the Serial Console service for all VMs and VM scale sets in the provided subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/defaultParameter'
      responses:
        '200':
          description: OK - Returns a JSON object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableSerialConsoleResult'
        '404':
          description: Subscription not found - returns a JSON object with error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSerialConsoleSubscriptionNotFound'
          x-ms-error-response: true
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: DisableConsole
  /subscriptions/{subscriptionId}/providers/Microsoft.SerialConsole/consoleServices/{default}/enableConsole?api-version=2024-07-01:
    post:
      tags:
        - SerialConsole
      operationId: Console_Enable
      summary: Enable Serial Console for a subscription
      description: Enables the Serial Console service for all VMs and VM scale sets in the provided subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/defaultParameter'
      responses:
        '200':
          description: OK - Serial Console disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableSerialConsoleResult'
        '404':
          description: Subscription not found - returns a JSON object with error details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSerialConsoleSubscriptionNotFound'
          x-ms-error-response: true
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: EnableConsole
