openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Resource Mover
  description: Azure Resource Mover is a free service offering that enables customers to move multiple Azure resources across regions to support their business needs.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The Subscription ID.
      required: true
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: Client Api Version.
      required: false
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The Resource Group Name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    moveCollectionName:
      name: moveCollectionName
      in: path
      description: The Move Collection Name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    moveResourceName:
      name: moveResourceName
      in: path
      description: The Move Resource Name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Defines the MSI properties of the Move Collection.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ResourceIdentityType'
        principalId:
          description: Gets or sets the principal id.
          type: string
        tenantId:
          description: Gets or sets the tenant id.
          type: string
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ResourceIdentityType:
      description: The type of identity used for the resource mover service.
      enum:
        - None
        - SystemAssigned
        - UserAssigned
      type: string
      x-ms-enum:
        name: ResourceIdentityType
        modelAsString: true
    MoveType:
      description: Defines the MoveType.
      enum:
        - RegionToRegion
        - RegionToZone
      type: string
      x-ms-enum:
        name: MoveType
        modelAsString: true
    MoveState:
      description: Defines the MoveResource states.
      enum:
        - AssignmentPending
        - PreparePending
        - PrepareInProgress
        - PrepareFailed
        - MovePending
        - MoveInProgress
        - MoveFailed
        - DiscardInProgress
        - DiscardFailed
        - CommitPending
        - CommitInProgress
        - CommitFailed
        - Committed
        - DeleteSourcePending
        - ResourceMoveCompleted
      type: string
      readOnly: true
      x-ms-enum:
        name: MoveState
        modelAsString: true
    MoveResourceInputType:
      description: Defines the move resource input type.
      type: string
      enum:
        - MoveResourceId
        - MoveResourceSourceId
      x-ms-enum:
        name: MoveResourceInputType
        modelAsString: true
    ProvisioningState:
      description: Defines the provisioning states.
      enum:
        - Succeeded
        - Updating
        - Creating
        - Failed
      type: string
      readOnly: true
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    JobName:
      description: Defines the job name.
      enum:
        - InitialSync
      type: string
      readOnly: true
      x-ms-enum:
        name: JobName
        modelAsString: true
    JobStatus:
      description: Defines the job status.
      type: object
      properties:
        jobName:
          $ref: '#/components/schemas/JobName'
        jobProgress:
          description: Gets or sets the monitoring job percentage.
          type: string
          readOnly: true
    MoveResourceStatus:
      description: Defines the move resource status.
      type: object
      properties:
        moveState:
          $ref: '#/components/schemas/MoveState'
        jobStatus:
          $ref: '#/components/schemas/JobStatus'
        errors:
          $ref: '#/components/schemas/MoveResourceError'
    ResolutionType:
      description: Defines the resolution type.
      enum:
        - Manual
        - Automatic
      type: string
      x-ms-enum:
        name: ResolutionType
        modelAsString: true
    DependencyType:
      description: Defines the dependency type.
      enum:
        - RequiredForPrepare
        - RequiredForMove
      type: string
      x-ms-enum:
        name: DependencyType
        modelAsString: true
    MoveResourceDependency:
      description: Defines the dependency of the move resource.
      type: object
      properties:
        id:
          description: Gets the source ARM ID of the dependent resource.
          type: string
        resolutionStatus:
          description: Gets the dependency resolution status.
          type: string
        resolutionType:
          $ref: '#/components/schemas/ResolutionType'
        dependencyType:
          $ref: '#/components/schemas/DependencyType'
        manualResolution:
          $ref: '#/components/schemas/ManualResolutionProperties'
        automaticResolution:
          $ref: '#/components/schemas/AutomaticResolutionProperties'
        isOptional:
          description: Gets or sets a value indicating whether the dependency is optional.
          type: string
    MoveResourceDependencyOverride:
      description: Defines the dependency override of the move resource.
      type: object
      properties:
        id:
          description: Gets or sets the ARM ID of the dependent resource.
          type: string
        targetId:
          description: "Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of\r\nthe dependent resource."
          type: string
    ManualResolutionProperties:
      description: Defines the properties for manual resolution.
      type: object
      properties:
        targetId:
          description: Gets or sets the target resource ARM ID of the dependent resource if the resource type is Manual.
          type: string
    AutomaticResolutionProperties:
      description: Defines the properties for automatic resolution.
      type: object
      properties:
        moveResourceId:
          description: "Gets the MoveResource ARM ID of\r\nthe dependent resource if the resolution type is Automatic."
          type: string
    MoveResourceProperties:
      description: Defines the move resource properties.
      type: object
      required:
        - sourceId
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
        sourceId:
          description: Gets or sets the Source ARM Id of the resource.
          type: string
        targetId:
          description: Gets or sets the Target ARM Id of the resource.
          type: string
          readOnly: true
        existingTargetId:
          description: Gets or sets the existing target ARM Id of the resource.
          type: string
        resourceSettings:
          description: Gets or sets the resource settings.
          $ref: '#/components/schemas/ResourceSettings'
        sourceResourceSettings:
          description: Gets or sets the source resource settings.
          $ref: '#/components/schemas/ResourceSettings'
          readOnly: true
        moveStatus:
          description: Defines the move resource status.
          allOf:
            - $ref: '#/components/schemas/MoveResourceStatus'
          readOnly: true
        dependsOn:
          description: Gets or sets the move resource dependencies.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MoveResourceDependency'
        dependsOnOverrides:
          description: Gets or sets the move resource dependencies overrides.
          type: array
          items:
            $ref: '#/components/schemas/MoveResourceDependencyOverride'
        isResolveRequired:
          description: Gets a value indicating whether the resolve action is required over the move collection.
          type: boolean
          readOnly: true
        errors:
          description: Defines the move resource errors.
          allOf:
            - $ref: '#/components/schemas/MoveResourceError'
          readOnly: true
    MoveResource:
      description: Defines the move resource.
      x-ms-azure-resource: true
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        properties:
          $ref: '#/components/schemas/MoveResourceProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource.
      type: object
    Summary:
      description: Summary item.
      type: object
      properties:
        count:
          format: int32
          description: Gets the count.
          type: integer
        item:
          description: Gets the item.
          type: string
    SummaryCollection:
      description: Summary Collection.
      type: object
      properties:
        fieldName:
          description: Gets or sets the field name on which summary is done.
          type: string
        summary:
          description: Gets or sets the list of summary items.
          type: array
          items:
            $ref: '#/components/schemas/Summary'
          x-ms-identifiers:
            - item
    MoveCollectionProperties:
      description: Defines the move collection properties.
      type: object
      properties:
        sourceRegion:
          description: Gets or sets the source region.
          type: string
        targetRegion:
          description: Gets or sets the target region.
          type: string
        moveRegion:
          description: Gets or sets the move region which indicates the region where the VM Regional to Zonal move will be conducted.
          type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
        version:
          description: Gets or sets the version of move collection.
          type: string
        moveType:
          $ref: '#/components/schemas/MoveType'
        errors:
          description: Defines the move collection errors.
          allOf:
            - $ref: '#/components/schemas/MoveResourceError'
          readOnly: true
    MoveCollection:
      description: Define the move collection.
      x-ms-azure-resource: true
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource.
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource.
        etag:
          readOnly: true
          type: string
          description: The etag of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives.
        identity:
          $ref: '#/components/schemas/Identity'
        properties:
          $ref: '#/components/schemas/MoveCollectionProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
          description: Metadata pertaining to creation and last modification of the resource.
      type: object
    UpdateMoveCollectionRequest:
      description: Defines the request body for updating move collection.
      type: object
      properties:
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/Identity'
    PrepareRequest:
      description: Defines the request body for initiate prepare operation.
      type: object
      required:
        - moveResources
      properties:
        validateOnly:
          description: Gets or sets a value indicating whether the operation needs to only run pre-requisite.
          type: boolean
        moveResources:
          description: Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.
          type: array
          items:
            type: string
        moveResourceInputType:
          $ref: '#/components/schemas/MoveResourceInputType'
    ResourceMoveRequest:
      description: Defines the request body for resource move operation.
      type: object
      required:
        - moveResources
      properties:
        validateOnly:
          description: Gets or sets a value indicating whether the operation needs to only run pre-requisite.
          type: boolean
        moveResources:
          description: Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.
          type: array
          items:
            type: string
        moveResourceInputType:
          $ref: '#/components/schemas/MoveResourceInputType'
    CommitRequest:
      description: Defines the request body for commit operation.
      type: object
      required:
        - moveResources
      properties:
        validateOnly:
          description: Gets or sets a value indicating whether the operation needs to only run pre-requisite.
          type: boolean
        moveResources:
          description: Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.
          type: array
          items:
            type: string
        moveResourceInputType:
          $ref: '#/components/schemas/MoveResourceInputType'
    DiscardRequest:
      description: Defines the request body for discard operation.
      type: object
      required:
        - moveResources
      properties:
        validateOnly:
          description: Gets or sets a value indicating whether the operation needs to only run pre-requisite.
          type: boolean
        moveResources:
          description: Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.
          type: array
          items:
            type: string
        moveResourceInputType:
          $ref: '#/components/schemas/MoveResourceInputType'
    BulkRemoveRequest:
      description: Defines the request body for bulk remove of move resources operation.
      type: object
      properties:
        validateOnly:
          description: Gets or sets a value indicating whether the operation needs to only run pre-requisite.
          type: boolean
        moveResources:
          description: Gets or sets the list of resource Id's, by default it accepts move resource id's unless the input type is switched via moveResourceInputType property.
          type: array
          items:
            type: string
        moveResourceInputType:
          $ref: '#/components/schemas/MoveResourceInputType'
    MoveResourceFilter:
      description: Move resource filter.
      properties:
        properties:
          $ref: '#/components/schemas/MoveResourceFilterProperties'
      type: object
    MoveResourceFilterProperties:
      properties:
        provisioningState:
          type: string
          description: The provisioning state.
      type: object
    UnresolvedDependenciesFilter:
      description: Unresolved dependencies contract.
      properties:
        properties:
          $ref: '#/components/schemas/UnresolvedDependenciesFilterProperties'
      type: object
    UnresolvedDependenciesFilterProperties:
      properties:
        count:
          format: int32
          type: integer
          description: The count of the resource.
      type: object
    MoveResourceCollection:
      description: Defines the collection of move resources.
      type: object
      properties:
        value:
          description: Gets the list of move resources.
          type: array
          items:
            $ref: '#/components/schemas/MoveResource'
        nextLink:
          description: Gets the value of  next link.
          type: string
        summaryCollection:
          description: Gets or sets the list of summary items and the field on which summary is done.
          $ref: '#/components/schemas/SummaryCollection'
        totalCount:
          description: Gets the total count.
          type: integer
          readOnly: true
          format: int64
    MoveCollectionResultList:
      description: Defines the collection of move collections.
      type: object
      properties:
        value:
          description: Gets the list of move collections.
          type: array
          items:
            $ref: '#/components/schemas/MoveCollection'
        nextLink:
          description: Gets the value of  next link.
          type: string
    UnresolvedDependency:
      description: Unresolved dependency.
      type: object
      properties:
        count:
          format: int32
          description: Gets or sets the count.
          type: integer
        id:
          description: Gets or sets the arm id of the dependency.
          type: string
    UnresolvedDependencyCollection:
      description: Unresolved dependency collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of unresolved dependencies.
          type: array
          items:
            $ref: '#/components/schemas/UnresolvedDependency'
        nextLink:
          description: Gets or sets the value of  next link.
          type: string
        summaryCollection:
          description: Gets or sets the list of summary items and the field on which summary is done.
          readOnly: true
          $ref: '#/components/schemas/SummaryCollection'
        totalCount:
          description: Gets the total count.
          type: integer
          readOnly: true
          format: int64
    RequiredForResourcesCollection:
      description: Required for resources collection.
      type: object
      properties:
        sourceIds:
          description: Gets or sets the list of source Ids for which the input resource is required.
          type: array
          items:
            type: string
    Display:
      description: "Contains the localized display information for this particular operation / action. These\r\nvalue will be used by several clients for\r\n(1) custom role definitions for RBAC;\r\n(2) complex query filters for the event service; and\r\n(3) audit history / records for management operations."
      type: object
      properties:
        provider:
          description: "Gets or sets the provider.\r\nThe localized friendly form of the resource provider name – it is expected to also\r\ninclude the publisher/company responsible.\r\nIt should use Title Casing and begin with \"Microsoft\" for 1st party services.\r\ne.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\"."
          type: string
        resource:
          description: "Gets or sets the resource.\r\nThe localized friendly form of the resource related to this action/operation – it\r\nshould match the public documentation for the resource provider.\r\nIt should use Title Casing.\r\nThis value should be unique for a particular URL type (e.g. nested types should *not*\r\nreuse their parent’s display.resource field)\r\ne.g. \"Virtual Machines\" or \"Scheduler Job Collections\", or \"Virtual Machine VM Sizes\"\r\nor \"Scheduler Jobs\"."
          type: string
        operation:
          description: "Gets or sets the operation.\r\nThe localized friendly name for the operation, as it should be shown to the user.\r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting).\r\nIt should use Title Casing.\r\nPrescriptive guidance: Read Create or Update Delete 'ActionName'."
          type: string
        description:
          description: "Gets or sets the description.\r\nThe localized friendly description for the operation, as it should be shown to the\r\nuser.\r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views.\r\nPrescriptive guidance for namespace:\r\nRead any 'display.provider'  resource\r\nCreate or Update any  'display.provider'  resource\r\nDelete any  'display.provider'  resource\r\nPerform any other action on any  'display.provider'  resource\r\nPrescriptive guidance for namespace:\r\nRead any 'display.resource' Create or Update any  'display.resource' Delete any\r\n 'display.resource' 'ActionName' any 'display.resources'."
          type: string
    OperationsDiscoveryProperties:
      description: ClientDiscovery properties.
      properties: {}
      type: object
    OperationsDiscovery:
      description: Operations discovery class.
      properties:
        name:
          description: "Gets or sets Name of the API.\r\nThe name of the operation being performed on this particular object. It should\r\nmatch the action name that appears in RBAC / the event service.\r\nExamples of operations include:\r\n* Microsoft.Compute/virtualMachine/capture/action\r\n* Microsoft.Compute/virtualMachine/restart/action\r\n* Microsoft.Compute/virtualMachine/write\r\n* Microsoft.Compute/virtualMachine/read\r\n* Microsoft.Compute/virtualMachine/delete\r\nEach action should include, in order:\r\n(1) Resource Provider Namespace\r\n(2) Type hierarchy for which the action applies (e.g. server/databases for a SQL\r\nAzure database)\r\n(3) Read, Write, Action or Delete indicating which type applies. If it is a PUT/PATCH\r\non a collection or named value, Write should be used.\r\nIf it is a GET, Read should be used. If it is a DELETE, Delete should be used. If it\r\nis a POST, Action should be used.\r\nAs a note: all resource providers would need to include the \"{Resource Provider\r\nNamespace}/register/action\" operation in their response.\r\nThis API is used to register for their service, and should include details about the\r\noperation (e.g. a localized name for the resource provider + any special\r\nconsiderations like PII release)."
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/Display'
        origin:
          description: "Gets or sets Origin.\r\nThe intended executor of the operation; governs the display of the operation in the\r\nRBAC UX and the audit logs UX.\r\nDefault value is \"user,system\"."
          type: string
        properties:
          $ref: '#/components/schemas/OperationsDiscoveryProperties'
      type: object
    OperationsDiscoveryCollection:
      description: Collection of ClientDiscovery details.
      type: object
      properties:
        value:
          description: Gets or sets the ClientDiscovery details.
          type: array
          items:
            $ref: '#/components/schemas/OperationsDiscovery'
          x-ms-identifiers:
            - name
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    MoveResourceError:
      description: An error response from the azure resource mover service.
      properties:
        properties:
          type: object
          description: The move resource error body.
          $ref: '#/components/schemas/MoveResourceErrorBody'
      type: object
    MoveResourceErrorBody:
      properties:
        code:
          type: string
          readOnly: true
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          readOnly: true
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          readOnly: true
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MoveResourceErrorBody'
          x-ms-identifiers: []
          description: A list of additional details about the error.
      description: An error response from the Azure Migrate service.
      type: object
    ResourceSettings:
      description: Gets or sets the resource settings.
      type: object
      required:
        - resourceType
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
      discriminator:
        propertyName: resourceType
    VirtualMachineResourceSettings:
      description: Gets or sets the virtual machine resource settings.
      x-ms-discriminator-value: Microsoft.Compute/virtualMachines
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        userManagedIdentities:
          description: Gets or sets user-managed identities
          type: array
          items:
            type: string
        targetAvailabilityZone:
          description: Gets or sets the target availability zone.
          type: string
          enum:
            - '1'
            - '2'
            - '3'
            - NA
          x-ms-enum:
            name: TargetAvailabilityZone
            modelAsString: true
        targetVmSize:
          description: Gets or sets the target virtual machine size.
          type: string
        targetAvailabilitySetId:
          description: Gets or sets the target availability set id for virtual machines not in an availability set at source.
          type: string
      type: object
    AvailabilitySetResourceSettings:
      description: Gets or sets the availability set resource settings.
      x-ms-discriminator-value: Microsoft.Compute/availabilitySets
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        faultDomain:
          description: Gets or sets the target fault domain.
          type: integer
          format: int32
          minimum: 1
          nullable: true
        updateDomain:
          description: Gets or sets the target update domain.
          type: integer
          format: int32
          minimum: 1
          maximum: 20
          nullable: true
      type: object
    SubnetResourceSettings:
      description: Defines the virtual network subnets resource settings.
      type: object
      properties:
        name:
          description: Gets or sets the Subnet name.
          type: string
        addressPrefix:
          description: Gets or sets address prefix for the subnet.
          type: string
        networkSecurityGroup:
          $ref: '#/components/schemas/NsgReference'
    VirtualNetworkResourceSettings:
      description: Defines the virtual network resource settings.
      x-ms-discriminator-value: Microsoft.Network/virtualNetworks
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        enableDdosProtection:
          description: "Gets or sets a value indicating whether gets or sets whether the\r\nDDOS protection should be switched on."
          type: boolean
          nullable: true
        addressSpace:
          description: Gets or sets the address prefixes for the virtual network.
          type: array
          items:
            type: string
        dnsServers:
          description: "Gets or sets DHCPOptions that contains an array of DNS servers available to VMs\r\ndeployed in the virtual network."
          type: array
          items:
            type: string
        subnets:
          description: Gets or sets List of subnets in a VirtualNetwork.
          type: array
          items:
            $ref: '#/components/schemas/SubnetResourceSettings'
          x-ms-identifiers:
            - /networkSecurityGroup/sourceArmResourceId
      type: object
    AzureResourceReference:
      description: Defines reference to an Azure resource.
      required:
        - sourceArmResourceId
      type: object
      properties:
        sourceArmResourceId:
          description: Gets the ARM resource ID of the tracked resource being referenced.
          type: string
    ProxyResourceReference:
      description: Defines reference to a proxy resource.
      properties:
        sourceArmResourceId:
          description: Gets the ARM resource ID of the tracked resource being referenced.
          type: string
        name:
          description: Gets the name of the proxy resource on the target side.
          type: string
      type: object
    NetworkInterfaceResourceSettings:
      description: Defines the network interface resource settings.
      x-ms-discriminator-value: Microsoft.Network/networkInterfaces
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        ipConfigurations:
          description: Gets or sets the IP configurations of the NIC.
          type: array
          items:
            $ref: '#/components/schemas/NicIpConfigurationResourceSettings'
          x-ms-identifiers:
            - name
        enableAcceleratedNetworking:
          description: Gets or sets a value indicating whether accelerated networking is enabled.
          type: boolean
          nullable: true
      type: object
    SubnetReference:
      description: Defines reference to subnet.
      properties:
        name:
          description: Gets the name of the proxy resource on the target side.
          type: string
      type: object
    LoadBalancerBackendAddressPoolReference:
      description: Defines reference to load balancer backend address pools.
      properties:
        name:
          description: Gets the name of the proxy resource on the target side.
          type: string
      type: object
    LoadBalancerNatRuleReference:
      description: Defines reference to load balancer NAT rules.
      properties:
        name:
          description: Gets the name of the proxy resource on the target side.
          type: string
      type: object
    NsgReference:
      description: Defines reference to NSG.
      properties:
        sourceArmResourceId:
          description: Gets the ARM resource ID of the tracked resource being referenced.
          type: string
      type: object
    PublicIpReference:
      description: Defines reference to a public IP.
      properties:
        sourceArmResourceId:
          description: Gets the ARM resource ID of the tracked resource being referenced.
          type: string
      type: object
    NicIpConfigurationResourceSettings:
      description: Defines NIC IP configuration properties.
      type: object
      properties:
        name:
          description: Gets or sets the IP configuration name.
          type: string
        privateIpAddress:
          description: Gets or sets the private IP address of the network interface IP Configuration.
          type: string
        privateIpAllocationMethod:
          description: Gets or sets the private IP address allocation method.
          type: string
        subnet:
          $ref: '#/components/schemas/SubnetReference'
        primary:
          description: Gets or sets a value indicating whether this IP configuration is the primary.
          type: boolean
        loadBalancerBackendAddressPools:
          description: Gets or sets the references of the load balancer backend address pools.
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerBackendAddressPoolReference'
          x-ms-identifiers:
            - sourceArmResourceId
        loadBalancerNatRules:
          description: Gets or sets the references of the load balancer NAT rules.
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerNatRuleReference'
          x-ms-identifiers:
            - sourceArmResourceId
        publicIp:
          $ref: '#/components/schemas/PublicIpReference'
    NsgSecurityRule:
      description: Security Rule data model for Network Security Groups.
      type: object
      properties:
        name:
          description: Gets or sets the Security rule name.
          type: string
        access:
          description: "Gets or sets whether network traffic is allowed or denied.\r\nPossible values are “Allow” and “Deny”."
          type: string
        description:
          description: Gets or sets a description for this rule. Restricted to 140 chars.
          type: string
        destinationAddressPrefix:
          description: "Gets or sets destination address prefix. CIDR or source IP range.\r\n A “*” can also be used to match all source IPs. Default tags such\r\nas ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used."
          type: string
        destinationPortRange:
          description: "Gets or sets Destination Port or Range. Integer or range between\r\n0 and 65535. A “*” can also be used to match all ports."
          type: string
        direction:
          description: "Gets or sets the direction of the rule.InBound or Outbound. The\r\ndirection specifies if rule will be evaluated on incoming or outgoing traffic."
          type: string
        priority:
          format: int32
          description: "Gets or sets the priority of the rule. The value can be between\r\n100 and 4096. The priority number must be unique for each rule in the collection.\r\nThe lower the priority number, the higher the priority of the rule."
          type: integer
        protocol:
          description: Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
          type: string
        sourceAddressPrefix:
          description: "Gets or sets source address prefix. CIDR or source IP range. A\r\n“*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,\r\n‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress\r\nrule, specifies where network traffic originates from."
          type: string
        sourcePortRange:
          description: "Gets or sets Source Port or Range. Integer or range between 0 and\r\n65535. A “*” can also be used to match all ports."
          type: string
    NetworkSecurityGroupResourceSettings:
      description: Defines the NSG resource settings.
      x-ms-discriminator-value: Microsoft.Network/networkSecurityGroups
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        securityRules:
          description: Gets or sets Security rules of network security group.
          type: array
          items:
            $ref: '#/components/schemas/NsgSecurityRule'
          x-ms-identifiers:
            - name
      type: object
    LBFrontendIPConfigurationResourceSettings:
      description: Defines load balancer frontend IP configuration properties.
      type: object
      properties:
        name:
          description: Gets or sets the frontend IP configuration name.
          type: string
        privateIpAddress:
          description: "Gets or sets the IP address of the Load Balancer.This is only specified if a specific\r\nprivate IP address shall be allocated from the subnet specified in subnetRef."
          type: string
        privateIpAllocationMethod:
          description: Gets or sets PrivateIP allocation method (Static/Dynamic).
          type: string
        subnet:
          $ref: '#/components/schemas/SubnetReference'
        zones:
          description: Gets or sets the csv list of zones.
          type: string
    LBBackendAddressPoolResourceSettings:
      description: Defines load balancer backend address pool properties.
      type: object
      properties:
        name:
          description: Gets or sets the backend address pool name.
          type: string
    LoadBalancerResourceSettings:
      description: Defines the load balancer resource settings.
      x-ms-discriminator-value: Microsoft.Network/loadBalancers
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        sku:
          description: Gets or sets load balancer sku (Basic/Standard).
          type: string
        frontendIPConfigurations:
          description: Gets or sets the frontend IP configurations of the load balancer.
          type: array
          items:
            $ref: '#/components/schemas/LBFrontendIPConfigurationResourceSettings'
          x-ms-identifiers: []
        backendAddressPools:
          description: Gets or sets the backend address pools of the load balancer.
          type: array
          items:
            $ref: '#/components/schemas/LBBackendAddressPoolResourceSettings'
          x-ms-identifiers:
            - name
        zones:
          description: "Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given\r\n precedence only if frontend IP configurations settings are not present."
          type: string
      type: object
    SqlServerResourceSettings:
      description: Defines the SQL Server resource settings.
      x-ms-discriminator-value: Microsoft.Sql/servers
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
      type: object
    ZoneRedundant:
      description: Defines the zone redundant resource setting.
      enum:
        - Enable
        - Disable
      type: string
      x-ms-enum:
        name: ZoneRedundant
        modelAsString: true
    SqlElasticPoolResourceSettings:
      description: Defines the Sql ElasticPool resource settings.
      x-ms-discriminator-value: Microsoft.Sql/servers/elasticPools
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        zoneRedundant:
          $ref: '#/components/schemas/ZoneRedundant'
      type: object
    SqlDatabaseResourceSettings:
      description: Defines the Sql Database resource settings.
      x-ms-discriminator-value: Microsoft.Sql/servers/databases
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        zoneRedundant:
          $ref: '#/components/schemas/ZoneRedundant'
      type: object
    ResourceGroupResourceSettings:
      description: Defines the resource group resource settings.
      x-ms-discriminator-value: resourceGroups
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
      type: object
    PublicIPAddressResourceSettings:
      description: Defines the public IP address resource settings.
      x-ms-discriminator-value: Microsoft.Network/publicIPAddresses
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
        domainNameLabel:
          description: Gets or sets the domain name label.
          type: string
        fqdn:
          description: Gets or sets the fully qualified domain name.
          type: string
        publicIpAllocationMethod:
          description: Gets or sets public IP allocation method.
          type: string
        sku:
          description: Gets or sets public IP sku.
          type: string
        zones:
          description: Gets or sets public IP zones.
          type: string
      type: object
    KeyVaultResourceSettings:
      description: Defines the key vault resource settings.
      x-ms-discriminator-value: Microsoft.KeyVault/vaults
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
      type: object
    DiskEncryptionSetResourceSettings:
      description: Defines the disk encryption set resource settings.
      x-ms-discriminator-value: Microsoft.Compute/diskEncryptionSets
      properties:
        resourceType:
          description: The resource type. For example, the value can be Microsoft.Compute/virtualMachines.
          type: string
          x-ms-mutability:
            - create
            - read
        targetResourceName:
          description: Gets or sets the target Resource name.
          type: string
        targetResourceGroupName:
          description: Gets or sets the target resource group name.
          type: string
      type: object
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: Cloud error body.
      description: An error response from the service.
      type: object
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers: []
          description: A list of additional details about the error.
      description: An error response from the service.
      type: object
    OperationStatus:
      description: Operation status REST resource.
      properties:
        id:
          description: Resource Id.
          type: string
          readOnly: true
        name:
          description: Operation name.
          type: string
          readOnly: true
        status:
          description: Status of the operation. ARM expects the terminal status to be one of Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.
          type: string
          readOnly: true
        startTime:
          description: Start time.
          type: string
          readOnly: true
        endTime:
          description: End time.
          type: string
          readOnly: true
        error:
          $ref: '#/components/schemas/OperationStatusError'
          description: Error stating all error details for the operation.
          readOnly: true
        properties:
          $ref: '#/components/schemas/OperationStatusProperties'
          description: Custom data.
          readOnly: true
      type: object
    OperationStatusError:
      description: Class for operation status errors.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        details:
          readOnly: true
          type: array
          description: The error details.
          items:
            $ref: '#/components/schemas/OperationStatusError'
          x-ms-identifiers: []
        additionalInfo:
          readOnly: true
          type: array
          description: The additional info.
          items:
            $ref: '#/components/schemas/OperationErrorAdditionalInfo'
          x-ms-identifiers: []
    OperationStatusProperties:
      description: Class for operation result properties.
      type: object
      properties: {}
    OperationErrorAdditionalInfo:
      description: The operation error info.
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The error type.
        info:
          readOnly: true
          $ref: '#/components/schemas/MoveErrorInfo'
          description: The operation error info.
    MoveErrorInfo:
      description: The move custom error info.
      type: object
      properties:
        moveResources:
          readOnly: true
          type: array
          description: The affected move resources.
          items:
            $ref: '#/components/schemas/AffectedMoveResource'
    AffectedMoveResource:
      description: The RP custom operation error info.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The affected move resource id.
        sourceId:
          readOnly: true
          type: string
          description: The affected move resource source id.
        moveResources:
          readOnly: true
          type: array
          description: The affected move resources.
          items:
            $ref: '#/components/schemas/AffectedMoveResource'
  x-stackQL-resources:
    move_collections:
      id: azure.resource_mover.move_collections
      name: move_collections
      title: move_collections
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}?api-version=2023-08-01/put'
            operationId: MoveCollections_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveCollection
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}?api-version=2023-08-01/patch'
            operationId: MoveCollections_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveCollection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}?api-version=2023-08-01/delete'
            operationId: MoveCollections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}?api-version=2023-08-01/get'
            operationId: MoveCollections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveCollection
        prepare:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1prepare?api-version=2023-08-01/post'
            operationId: MoveCollections_Prepare
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
        initiate_move:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1initiateMove?api-version=2023-08-01/post'
            operationId: MoveCollections_InitiateMove
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
        commit:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1commit?api-version=2023-08-01/post'
            operationId: MoveCollections_Commit
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
        discard:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1discard?api-version=2023-08-01/post'
            operationId: MoveCollections_Discard
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
        resolve_dependencies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1resolveDependencies?api-version=2023-08-01/post'
            operationId: MoveCollections_ResolveDependencies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
        bulk_remove:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1bulkRemove?api-version=2023-08-01/post'
            operationId: MoveCollections_BulkRemove
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/move_collections/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/move_collections/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/move_collections/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/move_collections/methods/delete'
    move_resources:
      id: azure.resource_mover.move_resources
      name: move_resources
      title: move_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1moveResources?api-version=2023-08-01/get'
            operationId: MoveResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveResourceCollection
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1moveResources~1{moveResourceName}?api-version=2023-08-01/put'
            operationId: MoveResources_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1moveResources~1{moveResourceName}?api-version=2023-08-01/delete'
            operationId: MoveResources_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1moveResources~1{moveResourceName}?api-version=2023-08-01/get'
            operationId: MoveResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/move_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/move_resources/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/move_resources/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/move_resources/methods/delete'
    unresolved_dependencies:
      id: azure.resource_mover.unresolved_dependencies
      name: unresolved_dependencies
      title: unresolved_dependencies
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1unresolvedDependencies?api-version=2023-08-01/get'
            operationId: UnresolvedDependencies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UnresolvedDependencyCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/unresolved_dependencies/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations_discoveries:
      id: azure.resource_mover.operations_discoveries
      name: operations_discoveries
      title: operations_discoveries
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Migrate~1operations?api-version=2023-08-01/get'
            operationId: OperationsDiscovery_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationsDiscoveryCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_discoveries/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    move_collections_move_collections_by_subscriptions:
      id: azure.resource_mover.move_collections_move_collections_by_subscriptions
      name: move_collections_move_collections_by_subscriptions
      title: move_collections_move_collections_by_subscriptions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Migrate~1moveCollections?api-version=2023-08-01/get'
            operationId: MoveCollectionsMoveCollectionsBySubscription_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveCollectionResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/move_collections_move_collections_by_subscriptions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    move_collections_move_collections_by_resource_groups:
      id: azure.resource_mover.move_collections_move_collections_by_resource_groups
      name: move_collections_move_collections_by_resource_groups
      title: move_collections_move_collections_by_resource_groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections?api-version=2023-08-01/get'
            operationId: MoveCollectionsMoveCollectionsByResourceGroup_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MoveCollectionResultList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/move_collections_move_collections_by_resource_groups/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    move_collections_required_for:
      id: azure.resource_mover.move_collections_required_for
      name: move_collections_required_for
      title: move_collections_required_for
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Migrate~1moveCollections~1{moveCollectionName}~1requiredFor?api-version=2023-08-01/get'
            operationId: MoveCollectionsRequiredFor_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RequiredForResourcesCollection
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/move_collections_required_for/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_move_collections:
      id: azure.resource_mover.vw_move_collections
      name: vw_move_collections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              etag as etag,
              tags as tags,
              identity as identity,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.sourceRegion') as "source_region",
              JSON_EXTRACT(properties, '$.targetRegion') as "target_region",
              JSON_EXTRACT(properties, '$.moveRegion') as "move_region",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.moveType') as "move_type",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              subscriptionId,
              resourceGroupName,
              moveCollectionName
              FROM azure.resource_mover.move_collections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND moveCollectionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                etag as etag,
                tags as tags,
                identity as identity,
                systemData as system_data,
                json_extract_path_text(properties, '$.sourceRegion') as "source_region",
                json_extract_path_text(properties, '$.targetRegion') as "target_region",
                json_extract_path_text(properties, '$.moveRegion') as "move_region",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.moveType') as "move_type",
                json_extract_path_text(properties, '$.errors') as "errors",
                subscriptionId,
                resourceGroupName,
                moveCollectionName
                FROM azure.resource_mover.move_collections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND moveCollectionName = 'replace-me';
    vw_move_resources:
      id: azure.resource_mover.vw_move_resources
      name: vw_move_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.sourceId') as "source_id",
              JSON_EXTRACT(properties, '$.targetId') as "target_id",
              JSON_EXTRACT(properties, '$.existingTargetId') as "existing_target_id",
              JSON_EXTRACT(properties, '$.resourceSettings') as "resource_settings",
              JSON_EXTRACT(properties, '$.sourceResourceSettings') as "source_resource_settings",
              JSON_EXTRACT(properties, '$.moveStatus') as "move_status",
              JSON_EXTRACT(properties, '$.dependsOn') as "depends_on",
              JSON_EXTRACT(properties, '$.dependsOnOverrides') as "depends_on_overrides",
              JSON_EXTRACT(properties, '$.isResolveRequired') as "is_resolve_required",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              subscriptionId,
              resourceGroupName,
              moveCollectionName,
              moveResourceName
              FROM azure.resource_mover.move_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND moveCollectionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.sourceId') as "source_id",
                json_extract_path_text(properties, '$.targetId') as "target_id",
                json_extract_path_text(properties, '$.existingTargetId') as "existing_target_id",
                json_extract_path_text(properties, '$.resourceSettings') as "resource_settings",
                json_extract_path_text(properties, '$.sourceResourceSettings') as "source_resource_settings",
                json_extract_path_text(properties, '$.moveStatus') as "move_status",
                json_extract_path_text(properties, '$.dependsOn') as "depends_on",
                json_extract_path_text(properties, '$.dependsOnOverrides') as "depends_on_overrides",
                json_extract_path_text(properties, '$.isResolveRequired') as "is_resolve_required",
                json_extract_path_text(properties, '$.errors') as "errors",
                subscriptionId,
                resourceGroupName,
                moveCollectionName,
                moveResourceName
                FROM azure.resource_mover.move_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND moveCollectionName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}?api-version=2023-08-01:
    put:
      tags:
        - MoveCollections
      operationId: MoveCollections_Create
      description: Creates or updates a move collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveCollection'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveCollection'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - MoveCollections
      operationId: MoveCollections_Update
      description: Updates a move collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMoveCollectionRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - MoveCollections
      operationId: MoveCollections_Delete
      description: Deletes a move collection.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - MoveCollections
      operationId: MoveCollections_Get
      description: Gets the move collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/prepare?api-version=2023-08-01:
    post:
      tags:
        - MoveCollections
      operationId: MoveCollections_Prepare
      description: Initiates prepare for the set of resources included in the request body. The prepare operation is on the moveResources that are in the moveState 'PreparePending' or 'PrepareFailed', on a successful completion the moveResource moveState do a transition to MovePending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/initiateMove?api-version=2023-08-01:
    post:
      tags:
        - MoveCollections
      operationId: MoveCollections_InitiateMove
      description: Moves the set of resources included in the request body. The move operation is triggered after the moveResources are in the moveState 'MovePending' or 'MoveFailed', on a successful completion the moveResource moveState do a transition to CommitPending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceMoveRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/commit?api-version=2023-08-01:
    post:
      tags:
        - MoveCollections
      operationId: MoveCollections_Commit
      description: Commits the set of resources included in the request body. The commit operation is triggered on the moveResources in the moveState 'CommitPending' or 'CommitFailed', on a successful completion the moveResource moveState do a transition to Committed. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/discard?api-version=2023-08-01:
    post:
      tags:
        - MoveCollections
      operationId: MoveCollections_Discard
      description: Discards the set of resources included in the request body. The discard operation is triggered on the moveResources in the moveState 'CommitPending' or 'DiscardFailed', on a successful completion the moveResource moveState do a transition to MovePending. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscardRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/resolveDependencies?api-version=2023-08-01:
    post:
      tags:
        - MoveCollections
      operationId: MoveCollections_ResolveDependencies
      description: Computes, resolves and validate the dependencies of the moveResources in the move collection.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/moveResources?api-version=2023-08-01:
    get:
      tags:
        - MoveCollections
      operationId: MoveResources_List
      description: Lists the Move Resources in the move collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, you can use $filter=Properties/ProvisioningState eq 'Succeeded'.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/MoveResourceFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/unresolvedDependencies?api-version=2023-08-01:
    get:
      tags:
        - MoveCollections
      operationId: UnresolvedDependencies_Get
      description: Gets a list of unresolved dependencies.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - name: dependencyLevel
          in: query
          description: Defines the dependency level.
          required: false
          schema:
            enum:
              - Direct
              - Descendant
            x-ms-enum:
              name: DependencyLevel
              modelAsString: true
            type: string
        - name: $orderby
          in: query
          description: OData order by query option. For example, you can use $orderby=Count desc.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, $apply=filter(count eq 2).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnresolvedDependencyCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/UnresolvedDependenciesFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/bulkRemove?api-version=2023-08-01:
    post:
      tags:
        - MoveCollections
      operationId: MoveCollections_BulkRemove
      description: Removes the set of move resources included in the request body from move collection. The orchestration is done by service. To aid the user to prerequisite the operation the client can call operation with validateOnly property set to true.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            type: string
        - name: moveCollectionName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRemoveRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/moveResources/{moveResourceName}?api-version=2023-08-01:
    put:
      tags:
        - MoveResources
      operationId: MoveResources_Create
      description: Creates or updates a Move Resource in the move collection.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/moveResourceName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveResource'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - MoveResources
      operationId: MoveResources_Delete
      description: Deletes a Move Resource from the move collection.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/moveResourceName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - MoveResources
      operationId: MoveResources_Get
      description: Gets the Move Resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - $ref: '#/components/parameters/moveResourceName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Migrate/operations?api-version=2023-08-01:
    get:
      tags:
        - OperationsDiscovery
      operationId: OperationsDiscovery_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsDiscoveryCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Migrate/moveCollections?api-version=2023-08-01:
    get:
      summary: Get all Move Collections.
      description: Get all the Move Collections in the subscription.
      operationId: MoveCollectionsMoveCollectionsBySubscription_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveCollectionResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: MoveCollections_ListMoveCollectionsBySubscription
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections?api-version=2023-08-01:
    get:
      summary: Get all Move Collections.
      description: Get all the Move Collections in the resource group.
      operationId: MoveCollectionsMoveCollectionsByResourceGroup_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveCollectionResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: MoveCollections_ListMoveCollectionsByResourceGroup
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/moveCollections/{moveCollectionName}/requiredFor?api-version=2023-08-01:
    get:
      description: List of the move resources for which an arm resource is required for.
      operationId: MoveCollectionsRequiredFor_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/moveCollectionName'
        - name: sourceId
          in: query
          description: The sourceId for which the api is invoked.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredForResourcesCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MoveCollections_ListRequiredFor
