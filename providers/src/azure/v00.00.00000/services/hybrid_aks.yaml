openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Hybrid Azure Kubernetes Service (AKS)
  description: Hybrid Container Services
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    agentPoolNameParameter:
      name: agentPoolName
      in: path
      description: Parameter for the name of the agent pool in the provisioned cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z][a-z0-9]{2,11}$
        maxLength: 12
        minLength: 3
        type: string
    customLocationResourceUriParameter:
      name: customLocationResourceUri
      in: path
      description: The fully qualified Azure Resource Manager identifier of the custom location resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    connectedClusterResourceUriParameter:
      name: connectedClusterResourceUri
      in: path
      description: The fully qualified Azure Resource Manager identifier of the connected cluster resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    virtualNetworkNameParameter:
      name: virtualNetworkName
      in: path
      description: Parameter for the name of the virtual network
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$
        maxLength: 64
        minLength: 3
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ListCredentialResponse:
      description: The list kubeconfig result response.
      properties:
        id:
          type: string
          readOnly: true
          description: Operation Id
        name:
          type: string
          readOnly: true
          description: Operation Name
        resourceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.HybridContainerService/provisionedClusterInstances
          readOnly: true
          description: ARM Resource Id of the provisioned cluster instance
        status:
          $ref: '#/components/schemas/ProvisioningState'
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
        properties:
          type: object
          properties:
            kubeconfigs:
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/CredentialResult'
              x-ms-identifiers: []
              description: Base64-encoded Kubernetes configuration file.
      type: object
    CredentialResult:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the credential.
        value:
          type: string
          format: byte
          readOnly: true
          description: Base64-encoded Kubernetes configuration file.
      description: The credential result response.
    provisionedClusterProperties:
      type: object
      properties:
        linuxProfile:
          description: The profile for Linux VMs in the provisioned cluster.
          $ref: '#/components/schemas/LinuxProfileProperties'
        controlPlane:
          description: The profile for control plane of the provisioned cluster.
          $ref: '#/components/schemas/ControlPlaneProfile'
        kubernetesVersion:
          type: string
          description: The version of Kubernetes in use by the provisioned cluster.
        networkProfile:
          description: The network configuration profile for the provisioned cluster.
          $ref: '#/components/schemas/NetworkProfile'
        storageProfile:
          description: The storage configuration profile for the provisioned cluster.
          $ref: '#/components/schemas/StorageProfile'
        clusterVMAccessProfile:
          description: The SSH restricted access profile for the VMs in the provisioned cluster.
          $ref: '#/components/schemas/ClusterVMAccessProfile'
        agentPoolProfiles:
          type: array
          items:
            $ref: '#/components/schemas/NamedAgentPoolProfile'
          x-ms-identifiers: []
          description: The agent pool properties for the provisioned cluster.
        cloudProviderProfile:
          description: The profile for the underlying cloud infrastructure provider for the provisioned cluster.
          $ref: '#/components/schemas/CloudProviderProfile'
        provisioningState:
          description: The status of the latest long running operation for the provisioned cluster.
          $ref: '#/components/schemas/ProvisioningState'
        status:
          type: object
          readOnly: true
          properties:
            controlPlaneStatus:
              type: array
              items:
                $ref: '#/components/schemas/AddonStatusProfile'
              x-ms-identifiers: []
              description: The detailed status of the provisioned cluster components including addons.
            currentState:
              $ref: '#/components/schemas/ProvisioningState'
              description: The current state of the provisioned cluster.
            errorMessage:
              type: string
              description: Error messages during a provisioned cluster operation or steady state.
          description: The observed status of the provisioned cluster.
        licenseProfile:
          $ref: '#/components/schemas/ProvisionedClusterLicenseProfile'
          description: The license profile of the provisioned cluster.
        autoScalerProfile:
          type: object
          properties:
            balance-similar-node-groups:
              type: string
              title: Detects similar node pools and balances the number of nodes between them.
              description: Valid values are 'true' and 'false'
            expander:
              type: string
              enum:
                - least-waste
                - most-pods
                - priority
                - random
              x-ms-enum:
                name: expander
                modelAsString: true
                values:
                  - value: least-waste
                    description: Selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources.
                  - value: most-pods
                    description: Selects the node group that would be able to schedule the most pods when scaling up. This is useful when you are using nodeSelector to make sure certain pods land on certain nodes. Note that this won't cause the autoscaler to select bigger nodes vs. smaller, as it can add multiple smaller nodes at once.
                  - value: priority
                    description: Selects the node group that has the highest priority assigned by the user. It's configuration is described in more details [here](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/expander/priority/readme.md).
                  - value: random
                    description: Used when you don't have a particular need for the node groups to scale differently.
              title: The expander to use when scaling up
              description: If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
            max-empty-bulk-delete:
              type: string
              title: The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer.
              description: The default is 10.
            max-graceful-termination-sec:
              type: string
              title: The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node.
              description: The default is 600.
            max-node-provision-time:
              type: string
              title: The maximum time the autoscaler waits for a node to be provisioned.
              description: The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
            max-total-unready-percentage:
              type: string
              title: The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations.
              description: The default is 45. The maximum is 100 and the minimum is 0.
            new-pod-scale-up-delay:
              type: string
              title: Ignore unscheduled pods before they're a certain age.
              description: For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
            ok-total-unready-count:
              type: string
              title: The number of allowed unready nodes, irrespective of max-total-unready-percentage.
              description: This must be an integer. The default is 3.
            scan-interval:
              type: string
              title: How often cluster is reevaluated for scale up or down.
              description: The default is '10'. Values must be an integer number of seconds.
            scale-down-delay-after-add:
              type: string
              title: How long after scale up that scale down evaluation resumes
              description: The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
            scale-down-delay-after-delete:
              type: string
              title: How long after node deletion that scale down evaluation resumes.
              description: The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
            scale-down-delay-after-failure:
              type: string
              title: How long after scale down failure that scale down evaluation resumes.
              description: The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
            scale-down-unneeded-time:
              type: string
              title: How long a node should be unneeded before it is eligible for scale down.
              description: The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
            scale-down-unready-time:
              type: string
              title: How long an unready node should be unneeded before it is eligible for scale down
              description: The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
            scale-down-utilization-threshold:
              type: string
              title: Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.
              description: The default is '0.5'.
            skip-nodes-with-local-storage:
              type: string
              title: If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath.
              description: The default is true.
            skip-nodes-with-system-pods:
              type: string
              title: If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods)
              description: The default is true.
          description: Parameters to be applied to the cluster-autoscaler when auto scaling is enabled for the provisioned cluster.
      description: Properties of the provisioned cluster.
    provisionedCluster:
      x-ms-azure-resource: true
      description: The provisioned cluster resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/provisionedClusterProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
      type: object
    provisionedClusterListResult:
      type: object
      description: Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/provisionedCluster'
        nextLink:
          type: string
      x-ms-identifiers: []
    AgentPoolUpdateProfile:
      type: object
      description: Profile for agent pool properties that can be updated
      properties:
        count:
          type: integer
          format: int32
          description: Number of nodes in the agent pool. The default value is 1.
          default: 1
        vmSize:
          type: string
          description: The VM sku size of the agent pool node VMs.
        kubernetesVersion:
          type: string
          readOnly: true
          description: Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.
    AgentPoolProfile:
      type: object
      description: Profile for agent pool properties specified during creation
      properties:
        osType:
          $ref: '#/components/schemas/OSType'
        osSKU:
          $ref: '#/components/schemas/OSSKU'
        nodeLabels:
          type: object
          additionalProperties:
            type: string
          description: The node labels to be persisted across all nodes in agent pool.
        nodeTaints:
          type: array
          items:
            type: string
          description: Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        maxCount:
          type: integer
          format: int32
          description: The maximum number of nodes for auto-scaling
        minCount:
          type: integer
          format: int32
          description: The minimum number of nodes for auto-scaling
        enableAutoScaling:
          type: boolean
          description: Whether to enable auto-scaler. Default value is false
          default: false
        maxPods:
          type: integer
          format: int32
          description: The maximum number of pods that can run on a node.
    AgentPoolName:
      type: object
      description: Name of the default Agent Pool
      properties:
        name:
          type: string
          description: Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1
    ClusterVMAccessProfile:
      type: object
      description: The SSH restricted access profile for the VMs in the provisioned cluster.
      properties:
        authorizedIPRanges:
          type: string
          description: IP Address or CIDR for SSH access to VMs in the provisioned cluster
    NamedAgentPoolProfile:
      description: Profile of the default agent pool along with a name parameter
      properties:
        osType:
          $ref: '#/components/schemas/OSType'
        osSKU:
          $ref: '#/components/schemas/OSSKU'
        nodeLabels:
          type: object
          additionalProperties:
            type: string
          description: The node labels to be persisted across all nodes in agent pool.
        nodeTaints:
          type: array
          items:
            type: string
          description: Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        maxCount:
          type: integer
          format: int32
          description: The maximum number of nodes for auto-scaling
        minCount:
          type: integer
          format: int32
          description: The minimum number of nodes for auto-scaling
        enableAutoScaling:
          type: boolean
          description: Whether to enable auto-scaler. Default value is false
          default: false
        maxPods:
          type: integer
          format: int32
          description: The maximum number of pods that can run on a node.
        count:
          type: integer
          format: int32
          description: Number of nodes in the agent pool. The default value is 1.
          default: 1
        vmSize:
          type: string
          description: The VM sku size of the agent pool node VMs.
        kubernetesVersion:
          type: string
          readOnly: true
          description: Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.
        name:
          type: string
          description: Unique name of the default agent pool in the context of the provisioned cluster. Default value is <clusterName>-nodepool1
      type: object
    agentPoolProperties:
      description: Properties of the agent pool resource
      properties:
        osType:
          $ref: '#/components/schemas/OSType'
        osSKU:
          $ref: '#/components/schemas/OSSKU'
        nodeLabels:
          type: object
          additionalProperties:
            type: string
          description: The node labels to be persisted across all nodes in agent pool.
        nodeTaints:
          type: array
          items:
            type: string
          description: Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
        maxCount:
          type: integer
          format: int32
          description: The maximum number of nodes for auto-scaling
        minCount:
          type: integer
          format: int32
          description: The minimum number of nodes for auto-scaling
        enableAutoScaling:
          type: boolean
          description: Whether to enable auto-scaler. Default value is false
          default: false
        maxPods:
          type: integer
          format: int32
          description: The maximum number of pods that can run on a node.
        count:
          type: integer
          format: int32
          description: Number of nodes in the agent pool. The default value is 1.
          default: 1
        vmSize:
          type: string
          description: The VM sku size of the agent pool node VMs.
        kubernetesVersion:
          type: string
          readOnly: true
          description: Version of Kubernetes in use by the agent pool. This is inherited from the kubernetesVersion of the provisioned cluster.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the latest long running operation for the agent pool.
        status:
          type: object
          properties:
            currentState:
              $ref: '#/components/schemas/ProvisioningState'
              description: The current state of the agent pool.
            errorMessage:
              type: string
              description: Error messages during an agent pool operation or steady state.
            readyReplicas:
              type: array
              items:
                $ref: '#/components/schemas/AgentPoolUpdateProfile'
              x-ms-identifiers: []
          description: The observed status of the agent pool.
      type: object
    agentPoolProvisioningStatus:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the latest long running operation for the agent pool.
        status:
          type: object
          properties:
            currentState:
              $ref: '#/components/schemas/ProvisioningState'
              description: The current state of the agent pool.
            errorMessage:
              type: string
              description: Error messages during an agent pool operation or steady state.
            readyReplicas:
              type: array
              items:
                $ref: '#/components/schemas/AgentPoolUpdateProfile'
              x-ms-identifiers: []
          description: The observed status of the agent pool.
      description: The agentPool resource provisioning status definition
    agentPool:
      x-ms-azure-resource: true
      description: The agentPool resource definition
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/agentPoolProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
      type: object
    agentPoolListResult:
      type: object
      description: List of all agent pool resources associated with the provisioned cluster.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/agentPool'
        nextLink:
          type: string
    ProvisionedClusterLicenseProfile:
      type: object
      properties:
        azureHybridBenefit:
          type: string
          description: Indicates whether Azure Hybrid Benefit is opted in. Default value is false
          enum:
            - 'True'
            - 'False'
            - NotApplicable
          default: NotApplicable
          x-ms-enum:
            name: AzureHybridBenefit
            modelAsString: true
      description: The license profile of the provisioned cluster.
    LinuxProfile:
      type: object
      description: The profile for Linux VMs in the provisioned cluster.
      properties:
        linuxProfile:
          description: Profile for Linux VMs in the container service cluster.
          $ref: '#/components/schemas/LinuxProfileProperties'
    LinuxProfileProperties:
      type: object
      properties:
        ssh:
          type: object
          properties:
            publicKeys:
              type: array
              items:
                type: object
                properties:
                  keyData:
                    type: string
                    description: Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
              x-ms-identifiers: []
              description: The list of SSH public keys used to authenticate with VMs. A maximum of 1 key may be specified.
          description: SSH configuration for VMs of the provisioned cluster.
      description: SSH profile for control plane and nodepool VMs of the provisioned cluster.
    NetworkProfile:
      type: object
      properties:
        loadBalancerProfile:
          type: object
          description: Profile of the HA Proxy load balancer.
          properties:
            count:
              type: integer
              format: int32
              description: Number of HA Proxy load balancer VMs. The default value is 0.
              default: 0
        networkPolicy:
          type: string
          description: 'Network policy used for building Kubernetes network. Possible values include: ''calico''.'
          enum:
            - calico
          default: calico
          x-ms-enum:
            modelAsString: true
            name: networkPolicy
        podCidr:
          type: string
          description: A CIDR notation IP Address range from which to assign pod IPs.
      description: The network configuration profile for the provisioned cluster.
    StorageProfile:
      type: object
      properties:
        smbCsiDriver:
          $ref: '#/components/schemas/StorageProfileSmbCSIDriver'
          description: SMB CSI Driver settings for the storage profile.
        nfsCsiDriver:
          $ref: '#/components/schemas/StorageProfileNfsCSIDriver'
          description: NFS CSI Driver settings for the storage profile.
      description: The storage configuration profile for the provisioned cluster.
    StorageProfileNfsCSIDriver:
      type: object
      properties:
        enabled:
          type: boolean
          default: true
          description: Indicates whether to enable NFS CSI Driver. The default value is true.
      description: NFS CSI Driver settings for the storage profile.
    StorageProfileSmbCSIDriver:
      type: object
      properties:
        enabled:
          type: boolean
          default: true
          description: Indicates whether to enable SMB CSI Driver. The default value is true.
      description: SMB CSI Driver settings for the storage profile.
    ControlPlaneProfile:
      type: object
      description: The properties of the control plane nodes of the provisioned cluster
      properties:
        count:
          type: integer
          format: int32
          description: Number of control plane nodes. The default value is 1, and the count should be an odd number
          default: 1
        vmSize:
          type: string
          description: VM sku size of the control plane nodes
        controlPlaneEndpoint:
          type: object
          description: IP Address of the Kubernetes API server
          properties:
            hostIP:
              type: string
              description: IP address of the Kubernetes API server
    CloudProviderProfile:
      type: object
      description: The profile for the underlying cloud infrastructure provider for the provisioned cluster.
      properties:
        infraNetworkProfile:
          type: object
          description: The profile for the infrastructure networks used by the provisioned cluster
          properties:
            vnetSubnetIds:
              type: array
              items:
                type: string
                format: arm-id
                x-ms-arm-id-details:
                  allowedResources:
                    - type: Microsoft.AzureStackHCI/logicalNetworks
                    - type: Microsoft.HybridContainerService/virtualNetworks
              description: List of ARM resource Ids (maximum 1) for the infrastructure network object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/logicalNetworks/{logicalNetworkName}
    AddonStatusProfile:
      description: The status profile of the addons and other kubernetes components
      type: object
      readOnly: true
      properties:
        name:
          type: string
          description: Name of the addon or component
        phase:
          type: string
          description: 'Observed phase of the addon or component on the provisioned cluster. Possible values include: ''pending'', ''provisioning'', ''provisioning {HelmChartInstalled}'', ''provisioning {MSICertificateDownloaded}'', ''provisioned'', ''deleting'', ''failed'', ''upgrading'''
          enum:
            - pending
            - provisioning
            - provisioning {HelmChartInstalled}
            - provisioning {MSICertificateDownloaded}
            - provisioned
            - deleting
            - failed
            - upgrading
          x-ms-enum:
            modelAsString: true
            name: addonPhase
        ready:
          type: boolean
          description: Indicates whether the addon or component is ready
        errorMessage:
          type: string
          description: Observed error message from the addon or component
    hybridIdentityMetadata:
      description: Defines the hybridIdentityMetadata.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          description: Resource properties.
          $ref: '#/components/schemas/hybridIdentityMetadataProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
      type: object
    hybridIdentityMetadataProperties:
      description: Defines the resource properties for the hybrid identity metadata.
      type: object
      properties:
        resourceUid:
          description: Unique id of the parent provisioned cluster resource.
          type: string
        publicKey:
          description: Onboarding public key for provisioning the Managed identity for the connected cluster.
          type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
    hybridIdentityMetadataList:
      description: List of hybridIdentityMetadata.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of hybridIdentityMetadata.
          type: string
        value:
          description: Array of hybridIdentityMetadata
          type: array
          items:
            $ref: '#/components/schemas/hybridIdentityMetadata'
      required:
        - value
    KubernetesVersionProfileList:
      type: object
      description: List of supported kubernetes versions.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesVersionProfile'
        nextLink:
          type: string
      x-ms-identifiers: []
    KubernetesVersionProfile:
      description: The supported kubernetes versions.
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        properties:
          type: object
          readOnly: true
          properties:
            provisioningState:
              $ref: '#/components/schemas/ProvisioningState'
            values:
              type: array
              description: List of supported Kubernetes versions
              items:
                $ref: '#/components/schemas/KubernetesVersionProperties'
              x-ms-identifiers: []
      type: object
    KubernetesVersionProperties:
      type: object
      description: Kubernetes version profile for given major.minor release
      properties:
        version:
          type: string
          description: major.minor version of Kubernetes release
          readOnly: true
        isPreview:
          type: boolean
          description: Whether this version is in preview mode.
          readOnly: true
        patchVersions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/KubernetesPatchVersions'
          description: Patch versions of a Kubernetes release
          readOnly: true
    KubernetesPatchVersions:
      type: object
      description: Kubernetes Patch Version profile
      properties:
        readiness:
          type: array
          description: Indicates whether the kubernetes version image is ready or not
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/KubernetesVersionReadiness'
        upgrades:
          type: array
          description: Possible upgrade paths for given patch version
          x-ms-identifiers: []
          items:
            type: string
    KubernetesVersionReadiness:
      type: object
      description: Indicates whether the kubernetes version image is ready or not
      properties:
        osType:
          type: string
          description: The particular KubernetesVersion Image OS Type (Linux, Windows)
          readOnly: true
          enum:
            - Windows
            - Linux
          default: Linux
          x-ms-enum:
            modelAsString: true
            name: osType
        osSku:
          $ref: '#/components/schemas/OSSKU'
        ready:
          type: boolean
          description: Whether the kubernetes version image is ready or not
          readOnly: true
        errorMessage:
          type: string
          description: The error message for version not being ready
          readOnly: true
    VmSkuProfileList:
      type: object
      description: The list of supported VM SKUs.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VmSkuProfile'
        nextLink:
          type: string
      x-ms-identifiers: []
    VmSkuProfile:
      description: The list of supported VM SKUs.
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        properties:
          type: object
          readOnly: true
          properties:
            provisioningState:
              $ref: '#/components/schemas/ProvisioningState'
            values:
              type: array
              description: List of supported VM SKUs.
              items:
                $ref: '#/components/schemas/VmSkuProperties'
              x-ms-identifiers: []
      type: object
    VmSkuProperties:
      type: object
      description: The profile for supported VM SKUs
      readOnly: true
      properties:
        resourceType:
          type: string
          description: The type of resource the SKU applies to.
          readOnly: true
        capabilities:
          type: array
          readOnly: true
          description: The list of name-value pairs to describe VM SKU capabilities like MemoryGB, vCPUs, etc.
          items:
            $ref: '#/components/schemas/VmSkuCapabilities'
          x-ms-identifiers: []
        name:
          type: string
          readOnly: true
          description: The name of the VM SKU
        tier:
          type: string
          readOnly: true
          description: The tier of the VM SKU
        size:
          type: string
          readOnly: true
          description: The size of the VM SKU
    VmSkuCapabilities:
      type: object
      description: Describes the VM SKU capabilities like MemoryGB, vCPUs, etc.
      properties:
        name:
          type: string
          readOnly: true
          description: Name of the VM SKU capability
        value:
          type: string
          readOnly: true
          description: Value of the VM SKU capability
    ExtendedLocation:
      type: object
      description: Extended location pointing to the underlying infrastructure
      properties:
        type:
          type: string
          description: 'The extended location type. Allowed value: ''CustomLocation'''
          enum:
            - CustomLocation
          x-ms-enum:
            modelAsString: true
            name: ExtendedLocationTypes
        name:
          type: string
          description: ARM Id of the extended location.
    ProvisioningState:
      type: string
      description: Provisioning state of the resource
      readOnly: true
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Pending
        - Creating
        - Deleting
        - Updating
        - Upgrading
        - Accepted
      x-ms-enum:
        modelAsString: true
        name: ResourceProvisioningState
    ProvisionedClusterPoolUpgradeProfile:
      type: object
      properties:
        kubernetesVersion:
          type: string
          readOnly: true
          description: The Kubernetes version (major.minor.patch).
        osType:
          readOnly: true
          $ref: '#/components/schemas/OSType'
        upgrades:
          type: array
          items:
            $ref: '#/components/schemas/ProvisionedClusterPoolUpgradeProfileProperties'
          x-ms-identifiers: []
          description: List of available kubernetes versions for upgrade.
      description: The list of available kubernetes versions for upgrade.
    ProvisionedClusterPoolUpgradeProfileProperties:
      type: object
      properties:
        kubernetesVersion:
          type: string
          readOnly: true
          description: The Kubernetes version (major.minor.patch).
        isPreview:
          type: boolean
          readOnly: true
          description: Whether the Kubernetes version is currently in preview.
      description: The upgrade properties.
    ProvisionedClusterUpgradeProfileProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
        controlPlaneProfile:
          $ref: '#/components/schemas/ProvisionedClusterPoolUpgradeProfile'
          description: The list of available kubernetes version upgrades for the control plane.
      required:
        - controlPlaneProfile
      description: Control plane and agent pool upgrade profiles.
    ProvisionedClusterUpgradeProfile:
      required:
        - properties
      description: The list of available kubernetes version upgrades for the provisioned cluster.
      properties:
        properties:
          $ref: '#/components/schemas/ProvisionedClusterUpgradeProfileProperties'
          description: The properties of the upgrade profile.
          x-ms-client-flatten: true
      type: object
    OSType:
      type: string
      description: 'OSType to be used to specify OS type for the VMs. Choose from Linux and Windows. Default to Linux. Possible values include: ''Linux'', ''Windows'''
      enum:
        - Linux
        - Windows
      x-ms-enum:
        modelAsString: true
        name: osType
      default: Linux
    OSSKU:
      type: string
      enum:
        - CBLMariner
        - Windows2019
        - Windows2022
      x-ms-enum:
        name: OSSKU
        modelAsString: true
        values:
          - value: CBLMariner
            description: Use Mariner as the OS for node images.
          - value: Windows2019
            description: Use Windows2019 as the OS for node images.
          - value: Windows2022
            description: Use Windows2022 as the OS for node images.
      description: Specifies the OS SKU used by the agent pool. The default is CBLMariner if OSType is Linux. The default is Windows2019 when OSType is Windows.
    virtualNetworkProperties:
      type: object
      x-ms-client-flatten: true
      properties:
        infraVnetProfile:
          type: object
          properties:
            hci:
              type: object
              properties:
                mocGroup:
                  type: string
                  description: Group in MOC(Microsoft On-premises Cloud)
                mocLocation:
                  type: string
                  description: Location in MOC(Microsoft On-premises Cloud)
                mocVnetName:
                  type: string
                  description: Virtual Network name in MOC(Microsoft On-premises Cloud)
              description: Infrastructure network profile for HCI platform
        vipPool:
          type: array
          description: Range of IP Addresses for Kubernetes API Server and services if using HA Proxy load balancer
          x-ms-identifiers: []
          items:
            type: object
            properties:
              endIP:
                type: string
                description: Ending IP address for the IP Pool
              startIP:
                type: string
                description: Starting IP address for the IP Pool
        vmipPool:
          type: array
          description: Range of IP Addresses for Kubernetes node VMs
          x-ms-identifiers: []
          items:
            type: object
            properties:
              endIP:
                type: string
                description: Ending IP address for the IP Pool
              startIP:
                type: string
                description: Starting IP address for the IP Pool
        dnsServers:
          type: array
          description: List of DNS server IP Addresses associated with the network
          items:
            type: string
        gateway:
          type: string
          description: IP Address of the Gateway associated with the network
        ipAddressPrefix:
          type: string
          description: IP Address Prefix of the network
        vlanID:
          type: integer
          format: int32
          description: VLAN Id used by the network
        provisioningState:
          type: string
          readOnly: true
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Pending
            - Creating
            - Deleting
            - Updating
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: provisioningState
        status:
          type: object
          readOnly: true
          properties:
            operationStatus:
              type: object
              description: The detailed status of the long running operation.
              properties:
                error:
                  type: object
                  description: The error if any from the operation.
                  properties:
                    code:
                      type: string
                      description: The error code from the operation.
                    message:
                      type: string
                      description: The error message from the operation.
                operationId:
                  type: string
                  description: The identifier of the operation.
                status:
                  type: string
                  description: The status of the operation.
          description: Status of the virtual network resource
      description: Properties of the virtual network resource
    virtualNetwork:
      x-ms-azure-resource: true
      description: The Virtual Network resource definition.
      properties:
        properties:
          $ref: '#/components/schemas/virtualNetworkProperties'
        extendedLocation:
          type: object
          description: Extended location pointing to the underlying infrastructure
          properties:
            type:
              type: string
              description: 'The extended location type. Allowed value: ''CustomLocation'''
              enum:
                - CustomLocation
              x-ms-enum:
                modelAsString: true
                name: ExtendedLocationTypes
            name:
              type: string
              description: ARM Id of the extended location.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    virtualNetworksPatch:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: The Virtual Network resource patch definition.
    virtualNetworksListResult:
      type: object
      description: A list of virtual network resources.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/virtualNetwork'
        nextLink:
          type: string
      x-ms-identifiers: []
  x-stackQL-resources:
    provisioned_cluster_instances:
      id: azure.hybrid_aks.provisioned_cluster_instances
      name: provisioned_cluster_instances
      title: provisioned_cluster_instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioned_cluster_instances/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/provisioned_cluster_instances/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/provisioned_cluster_instances/methods/delete'
    provisioned_cluster_instances_list:
      id: azure.hybrid_aks.provisioned_cluster_instances_list
      name: provisioned_cluster_instances_list
      title: provisioned_cluster_instances_list
      methods:
        list:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioned_cluster_instances_list/methods/list'
        insert: []
        update: []
        delete: []
    provisioned_cluster_instances_upgrade_profile:
      id: azure.hybrid_aks.provisioned_cluster_instances_upgrade_profile
      name: provisioned_cluster_instances_upgrade_profile
      title: provisioned_cluster_instances_upgrade_profile
      methods:
        get:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1upgradeProfiles~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioned_cluster_instances_upgrade_profile/methods/get'
        insert: []
        update: []
        delete: []
    hybrid_identity_metadata:
      id: azure.hybrid_aks.hybrid_identity_metadata
      name: hybrid_identity_metadata
      title: hybrid_identity_metadata
      methods:
        put:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1hybridIdentityMetadata~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1hybridIdentityMetadata~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1hybridIdentityMetadata~1default~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata/methods/delete'
    hybrid_identity_metadata_list:
      id: azure.hybrid_aks.hybrid_identity_metadata_list
      name: hybrid_identity_metadata_list
      title: hybrid_identity_metadata_list
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1hybridIdentityMetadata~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_identity_metadata_list/methods/list_by_cluster'
        insert: []
        update: []
        delete: []
    agent_pool:
      id: azure.hybrid_aks.agent_pool
      name: agent_pool
      title: agent_pool
      methods:
        get:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1agentPools~1{agentPoolName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1agentPools~1{agentPoolName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1agentPools~1{agentPoolName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_provisioned_cluster:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1agentPools~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/agent_pool/methods/get'
          - $ref: '#/components/x-stackQL-resources/agent_pool/methods/list_by_provisioned_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/agent_pool/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/agent_pool/methods/delete'
    provisioned_cluster_instances_user_kubeconfig:
      id: azure.hybrid_aks.provisioned_cluster_instances_user_kubeconfig
      name: provisioned_cluster_instances_user_kubeconfig
      title: provisioned_cluster_instances_user_kubeconfig
      methods:
        list:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1listUserKubeconfig~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioned_cluster_instances_user_kubeconfig/methods/list'
        insert: []
        update: []
        delete: []
    provisioned_cluster_instances_admin_kubeconfig:
      id: azure.hybrid_aks.provisioned_cluster_instances_admin_kubeconfig
      name: provisioned_cluster_instances_admin_kubeconfig
      title: provisioned_cluster_instances_admin_kubeconfig
      methods:
        list:
          operation:
            $ref: '#/paths/~1{connectedClusterResourceUri}~1providers~1Microsoft.HybridContainerService~1provisionedClusterInstances~1default~1listAdminKubeconfig~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provisioned_cluster_instances_admin_kubeconfig/methods/list'
        insert: []
        update: []
        delete: []
    get_kubernetes_versions:
      id: azure.hybrid_aks.get_kubernetes_versions
      name: get_kubernetes_versions
      title: get_kubernetes_versions
      methods:
        get_kubernetes_versions:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1kubernetesVersions~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    put_kubernetes_versions:
      id: azure.hybrid_aks.put_kubernetes_versions
      name: put_kubernetes_versions
      title: put_kubernetes_versions
      methods:
        put_kubernetes_versions:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1kubernetesVersions~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    delete_kubernetes_versions:
      id: azure.hybrid_aks.delete_kubernetes_versions
      name: delete_kubernetes_versions
      title: delete_kubernetes_versions
      methods:
        delete_kubernetes_versions:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1kubernetesVersions~1default~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    kubernetes_versions:
      id: azure.hybrid_aks.kubernetes_versions
      name: kubernetes_versions
      title: kubernetes_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1kubernetesVersions~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/kubernetes_versions/methods/list'
        insert: []
        update: []
        delete: []
    get_vm_skus:
      id: azure.hybrid_aks.get_vm_skus
      name: get_vm_skus
      title: get_vm_skus
      methods:
        get_vm_skus:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1skus~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    put_vm_skus:
      id: azure.hybrid_aks.put_vm_skus
      name: put_vm_skus
      title: put_vm_skus
      methods:
        put_vm_skus:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1skus~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    delete_vm_skus:
      id: azure.hybrid_aks.delete_vm_skus
      name: delete_vm_skus
      title: delete_vm_skus
      methods:
        delete_vm_skus:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1skus~1default~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    vm_skus:
      id: azure.hybrid_aks.vm_skus
      name: vm_skus
      title: vm_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1{customLocationResourceUri}~1providers~1Microsoft.HybridContainerService~1skus~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vm_skus/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.hybrid_aks.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.HybridContainerService~1operations~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    virtual_networks:
      id: azure.hybrid_aks.virtual_networks
      name: virtual_networks
      title: virtual_networks
      methods:
        retrieve:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridContainerService~1virtualNetworks~1{virtualNetworkName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridContainerService~1virtualNetworks~1{virtualNetworkName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridContainerService~1virtualNetworks~1{virtualNetworkName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridContainerService~1virtualNetworks~1{virtualNetworkName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridContainerService~1virtualNetworks~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridContainerService~1virtualNetworks~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/delete'
paths:
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/?api-version=2024-01-01:
    get:
      operationId: provisionedClusterInstances_Get
      summary: Gets the provisioned cluster instance
      description: Gets the provisioned cluster instance
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: Gets the provisionedClusterInstances resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/provisionedCluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: provisionedClusterInstances_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Creates or updates the provisioned cluster instance
      description: Creates or updates the provisioned cluster instance
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      requestBody:
        description: Provisioned Cluster resource definition
        required: true
        x-ms-requestBody-name: provisionedClusterInstance
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provisionedCluster'
      responses:
        '200':
          description: Updates the provisionedClusterInstances resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/provisionedCluster'
        '201':
          description: Creates the provisionedClusterInstances resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/provisionedCluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: provisionedClusterInstances_Delete
      summary: Deletes the provisioned cluster instance
      description: Deletes the provisioned cluster instance
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/?api-version=2024-01-01:
    get:
      operationId: provisionedClusterInstances_List
      summary: Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster
      description: Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: Lists the ProvisionedClusterInstance resource associated with the ConnectedCluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/provisionedClusterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/upgradeProfiles/default/?api-version=2024-01-01:
    get:
      tags:
        - provisionedClusterInstances
      operationId: provisionedClusterInstances_GetUpgradeProfile
      summary: Gets the upgrade profile of a provisioned cluster
      description: Gets the upgrade profile of a provisioned cluster
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionedClusterUpgradeProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/hybridIdentityMetadata/default/?api-version=2024-01-01:
    put:
      operationId: HybridIdentityMetadata_Put
      summary: Creates the hybrid identity metadata resource
      description: Creates the hybrid identity metadata proxy resource that facilitates the managed identity provisioning.
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      requestBody:
        description: Hybrid Identity Metadata resource definition
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hybridIdentityMetadata'
      responses:
        '200':
          description: Updates the hybridIdentityMetadata resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hybridIdentityMetadata'
        '201':
          description: Creates the hybridIdentityMetadata resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hybridIdentityMetadata'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: HybridIdentityMetadata_Get
      summary: Get the hybrid identity metadata resource
      description: Get the hybrid identity metadata proxy resource.
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: Get the hybridIdentityMetadata resource for the provisioned cluster instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hybridIdentityMetadata'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: HybridIdentityMetadata_Delete
      summary: Deletes the hybrid identity metadata resource
      description: Deletes the hybrid identity metadata proxy resource.
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/hybridIdentityMetadata/?api-version=2024-01-01:
    get:
      operationId: HybridIdentityMetadata_ListByCluster
      summary: Lists the hybrid identity metadata resources in a provisioned cluster instance
      description: Lists the hybrid identity metadata proxy resource in a provisioned cluster instance.
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hybridIdentityMetadataList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/agentPools/{agentPoolName}/?api-version=2024-01-01:
    get:
      operationId: agentPool_Get
      summary: Gets the specified agent pool in the provisioned cluster
      description: Gets the specified agent pool in the provisioned cluster
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
        - $ref: '#/components/parameters/agentPoolNameParameter'
      responses:
        '200':
          description: Gets the agentPool resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentPool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: agentPool_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Creates or updates the agent pool in the provisioned cluster
      description: Creates or updates the agent pool in the provisioned cluster
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
        - $ref: '#/components/parameters/agentPoolNameParameter'
      requestBody:
        description: Agent Pool resource definition
        required: true
        x-ms-requestBody-name: agentPool
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agentPool'
      responses:
        '200':
          description: Updates the agent pool in the provisionedClusterInstances resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentPool'
        '201':
          description: Creates the agent pool in the provisionedClusterInstances resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentPool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: agentPool_Delete
      summary: Deletes the specified agent pool in the provisioned cluster
      description: Deletes the specified agent pool in the provisioned cluster
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
        - $ref: '#/components/parameters/agentPoolNameParameter'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/agentPools/?api-version=2024-01-01:
    get:
      operationId: agentPool_ListByProvisionedCluster
      summary: Gets the list of agent pools in the specified provisioned cluster
      description: Gets the list of agent pools in the specified provisioned cluster
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: Gets the list of agentPools in the provisionedClusterInstances resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agentPoolListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/listUserKubeconfig/?api-version=2024-01-01:
    post:
      tags:
        - provisionedClusterInstances
      operationId: provisionedClusterInstances_ListUserKubeconfig
      summary: Lists the user credentials of the provisioned cluster (can only be used within private network)
      description: Lists the user credentials of the provisioned cluster (can only be used within private network)
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCredentialResponse'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/hybridaks/resource-manager/Microsoft.HybridContainerService/stable/2024-01-01/provisionedClusterInstances.json#/components/schemas/ListCredentialResponse
  /{connectedClusterResourceUri}/providers/Microsoft.HybridContainerService/provisionedClusterInstances/default/listAdminKubeconfig/?api-version=2024-01-01:
    post:
      tags:
        - provisionedClusterInstances
      operationId: provisionedClusterInstances_ListAdminKubeconfig
      summary: Lists the admin credentials of the provisioned cluster (can only be used within private network)
      description: Lists the admin credentials of the provisioned cluster (can only be used within private network)
      parameters:
        - $ref: '#/components/parameters/connectedClusterResourceUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCredentialResponse'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/hybridaks/resource-manager/Microsoft.HybridContainerService/stable/2024-01-01/provisionedClusterInstances.json#/components/schemas/ListCredentialResponse
  /{customLocationResourceUri}/providers/Microsoft.HybridContainerService/kubernetesVersions/default/?api-version=2024-01-01:
    get:
      operationId: GetKubernetesVersions
      summary: Lists the supported kubernetes versions
      description: Lists the supported kubernetes versions for the specified custom location
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      responses:
        '200':
          description: Lists the supported kubernetes versions for the specified custom location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesVersionProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: PutKubernetesVersions
      summary: Puts the default kubernetes version resource type (one time operation, before listing the kubernetes versions)
      description: Puts the default kubernetes version resource type (one time operation, before listing the kubernetes versions)
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      requestBody:
        description: Kubernetes Versions resource definition
        required: true
        x-ms-requestBody-name: kubernetesVersions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesVersionProfile'
      responses:
        '200':
          description: Updates the default kubernetes version resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesVersionProfile'
        '201':
          description: Creates the default kubernetes version resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesVersionProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: DeleteKubernetesVersions
      summary: Deletes the default kubernetes version resource type
      description: Delete the default kubernetes versions resource type
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{customLocationResourceUri}/providers/Microsoft.HybridContainerService/kubernetesVersions/?api-version=2024-01-01:
    get:
      operationId: KubernetesVersions_List
      summary: Lists the supported kubernetes versions
      description: Lists the supported kubernetes versions for the specified custom location
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      responses:
        '200':
          description: Lists the supported kubernetes versions for the specified custom location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesVersionProfileList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{customLocationResourceUri}/providers/Microsoft.HybridContainerService/skus/default/?api-version=2024-01-01:
    get:
      operationId: GetVMSkus
      summary: Lists the supported VM skus
      description: Lists the supported VM skus for the specified custom location
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      responses:
        '200':
          description: Lists the supported VM skus for the specified custom location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmSkuProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: PutVMSkus
      summary: Puts the default VM skus resource type (one time operation, before listing the VM skus)
      description: Puts the default VM skus resource type (one time operation, before listing the VM skus)
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      requestBody:
        description: VM SKUs resource definition
        required: true
        x-ms-requestBody-name: skus
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmSkuProfile'
      responses:
        '200':
          description: Updates the default VM skus resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmSkuProfile'
        '201':
          description: Creates the default VM skus resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmSkuProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: DeleteVMSkus
      summary: Deletes the default VM skus resource type
      description: Deletes the default VM skus resource type
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{customLocationResourceUri}/providers/Microsoft.HybridContainerService/skus/?api-version=2024-01-01:
    get:
      operationId: VMSkus_List
      summary: Lists the supported VM skus
      description: Lists the supported VM skus for the specified custom location
      parameters:
        - $ref: '#/components/parameters/customLocationResourceUriParameter'
      responses:
        '200':
          description: Lists the supported VM skus for the specified custom location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmSkuProfileList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.HybridContainerService/operations/?api-version=2024-01-01:
    get:
      operationId: Operations_List
      description: Lists the supported operations
      summary: Lists the supported operations
      parameters: []
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks/{virtualNetworkName}/?api-version=2024-01-01:
    get:
      operationId: virtualNetworks_Retrieve
      summary: Gets the specified virtual network resource
      description: Gets the specified virtual network resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/virtualNetworkNameParameter'
      responses:
        '200':
          description: Gets the virtualNetwork resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: virtualNetworks_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Creates or updates the virtual network resource
      description: Creates or updates the virtual network resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/virtualNetworkNameParameter'
      requestBody:
        description: Virtual Network resource definition
        required: true
        x-ms-requestBody-name: virtualNetworks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/virtualNetwork'
      responses:
        '200':
          description: Updates the virtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtualNetwork'
        '201':
          description: Creates the virtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: virtualNetworks_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Deletes the specified virtual network resource
      description: Deletes the specified virtual network resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/virtualNetworkNameParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: virtualNetworks_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Patches the virtual network resource
      description: Patches the virtual network resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/virtualNetworkNameParameter'
      requestBody:
        description: Virtual Network resource patch definition
        required: true
        x-ms-requestBody-name: virtualNetworks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/virtualNetworksPatch'
      responses:
        '200':
          description: Updates the virtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtualNetwork'
        '202':
          description: Updates the virtualNetworks resource.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks/?api-version=2024-01-01:
    get:
      operationId: virtualNetworks_ListByResourceGroup
      summary: Lists the virtual networks in the specified resource group
      description: Lists the virtual networks in the specified resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists the virtual networks in the specified resource group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtualNetworksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridContainerService/virtualNetworks/?api-version=2024-01-01:
    get:
      operationId: virtualNetworks_ListBySubscription
      summary: Lists the virtual networks in the specified subscription
      description: Lists the virtual networks in the specified subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists the virtual networks in the specified subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/virtualNetworksListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
