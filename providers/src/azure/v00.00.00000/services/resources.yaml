openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Resource Manager
  description: Azure Resource Manager enables you to deploy and manage the infrastructure for your Azure solutions. You organize related resources in resource groups, and deploy your resources with JSON templates.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The resource scope.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    GroupIdParameter:
      name: groupId
      in: path
      description: The management group ID.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    DeploymentNameParameter:
      name: deploymentName
      in: path
      description: The name of the deployment.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 64
        type: string
    ResourceProviderNamespaceParameter:
      name: resourceProviderNamespace
      in: path
      description: The name of the resource provider namespace.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceTypeParameter:
      name: resourceType
      in: path
      description: The name of the resource type.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceNameParameter:
      name: resourceName
      in: path
      description: The name of the resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ChangeResourceIdParameter:
      name: changeResourceId
      in: path
      description: The ID of the change resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    _top:
      name: $top
      in: query
      description: (Optional) Set the maximum number of results per response.
      required: false
      x-ms-parameter-location: method
      schema:
        default: 100
        maximum: 100
        minimum: 1
        format: int64
        type: integer
    _skipToken:
      name: $skipToken
      in: query
      description: (Optional) The page-continuation token
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    PairedRegion:
      description: Information regarding paired region.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the paired region.
        id:
          readOnly: true
          type: string
          description: The fully qualified ID of the location. For example, /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
        subscriptionId:
          readOnly: true
          type: string
          description: The subscription ID.
      type: object
    LocationMetadata:
      description: Location metadata information
      properties:
        regionType:
          readOnly: true
          type: string
          description: The type of the region.
          enum:
            - Physical
            - Logical
          x-ms-enum:
            name: RegionType
            modelAsString: true
        regionCategory:
          readOnly: true
          type: string
          description: The category of the region.
          enum:
            - Recommended
            - Extended
            - Other
          x-ms-enum:
            name: RegionCategory
            modelAsString: true
        geographyGroup:
          readOnly: true
          type: string
          description: The geography group of the location.
        longitude:
          readOnly: true
          type: string
          description: The longitude of the location.
        latitude:
          readOnly: true
          type: string
          description: The latitude of the location.
        physicalLocation:
          readOnly: true
          type: string
          description: The physical location of the Azure location.
        pairedRegion:
          type: array
          description: The regions paired to this region.
          items:
            $ref: '#/components/schemas/PairedRegion'
        homeLocation:
          readOnly: true
          type: string
          description: The home location of an edge zone.
      type: object
    Location:
      properties:
        id:
          readOnly: true
          type: string
          description: The fully qualified ID of the location. For example, /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
        subscriptionId:
          readOnly: true
          type: string
          description: The subscription ID.
        name:
          readOnly: true
          type: string
          description: The location name.
        type:
          readOnly: true
          type: string
          description: The location type.
          enum:
            - Region
            - EdgeZone
          x-ms-enum:
            name: LocationType
            modelAsString: false
        displayName:
          readOnly: true
          type: string
          description: The display name of the location.
        regionalDisplayName:
          readOnly: true
          type: string
          description: The display name of the location and its region.
        metadata:
          description: Metadata of the location, such as lat/long, paired region, and others.
          $ref: '#/components/schemas/LocationMetadata'
      description: Location information.
      type: object
    LocationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: An array of locations.
      description: Location list operation response.
      type: object
    Subscription:
      properties:
        id:
          readOnly: true
          type: string
          description: The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000.
        subscriptionId:
          readOnly: true
          type: string
          description: The subscription ID.
        displayName:
          readOnly: true
          type: string
          description: The subscription display name.
        tenantId:
          readOnly: true
          type: string
          description: The subscription tenant ID.
        state:
          readOnly: true
          type: string
          description: The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
          enum:
            - Enabled
            - Warned
            - PastDue
            - Disabled
            - Deleted
          x-ms-enum:
            name: SubscriptionState
            modelAsString: false
        subscriptionPolicies:
          $ref: '#/components/schemas/SubscriptionPolicies'
          description: The subscription policies.
        authorizationSource:
          type: string
          description: The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.
        managedByTenants:
          type: array
          items:
            $ref: '#/components/schemas/ManagedByTenant'
          x-ms-identifiers:
            - tenantId
          description: An array containing the tenants managing the subscription.
        tags:
          type: object
          additionalProperties:
            type: string
            description: 'The additional properties. '
          description: The tags attached to the subscription.
      description: Subscription information.
      type: object
    SubscriptionPolicies:
      properties:
        locationPlacementId:
          readOnly: true
          type: string
          description: The subscription location placement ID. The ID indicates which regions are visible for a subscription. For example, a subscription with a location placement Id of Public_2014-09-01 has access to Azure public regions.
        quotaId:
          readOnly: true
          type: string
          description: The subscription quota ID.
        spendingLimit:
          readOnly: true
          type: string
          description: The subscription spending limit.
          enum:
            - 'On'
            - 'Off'
            - CurrentPeriodOff
          x-ms-enum:
            name: spendingLimit
            modelAsString: false
      description: Subscription policies.
      type: object
    ManagedByTenant:
      properties:
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of the managing tenant. This is a GUID.
      description: Information about a tenant managing the subscription.
      type: object
    SubscriptionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
          description: An array of subscriptions.
        nextLink:
          type: string
          description: The URL to get the next set of results.
      required:
        - nextLink
      description: Subscription list operation response.
      type: object
    TenantIdDescription:
      properties:
        id:
          readOnly: true
          type: string
          description: The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID. For example, 00000000-0000-0000-0000-000000000000.
        tenantCategory:
          readOnly: true
          type: string
          description: Category of the tenant.
          enum:
            - Home
            - ProjectedBy
            - ManagedBy
          x-ms-enum:
            name: TenantCategory
            modelAsString: false
        country:
          readOnly: true
          type: string
          description: Country/region name of the address for the tenant.
        countryCode:
          readOnly: true
          type: string
          description: Country/region abbreviation for the tenant.
        displayName:
          readOnly: true
          type: string
          description: The display name of the tenant.
        domains:
          readOnly: true
          type: array
          items:
            type: string
            description: The domain name for a tenant.
          description: The list of domains for the tenant.
        defaultDomain:
          readOnly: true
          type: string
          description: The default domain for the tenant.
        tenantType:
          readOnly: true
          type: string
          description: The tenant type. Only available for 'Home' tenant category.
        tenantBrandingLogoUrl:
          readOnly: true
          type: string
          description: The tenant's branding logo URL. Only available for 'Home' tenant category.
      description: Tenant Id information.
      type: object
    TenantListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TenantIdDescription'
          description: An array of tenants.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      required:
        - nextLink
      description: Tenant Ids information.
      type: object
    ResourceName:
      description: Name and Type of the Resource
      required:
        - name
        - type
      properties:
        name:
          description: Name of the resource
          type: string
        type:
          type: string
          description: The type of the resource
      type: object
    CheckResourceNameResult:
      properties:
        name:
          description: Name of Resource
          type: string
        type:
          description: Type of Resource
          type: string
        status:
          description: Is the resource name Allowed or Reserved
          type: string
          enum:
            - Allowed
            - Reserved
          x-ms-enum:
            name: ResourceNameStatus
            modelAsString: true
      description: Resource Name valid if not a reserved word, does not contain a reserved word and does not start with a reserved word
      type: object
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
      description: An error response for a resource management request.
      type: object
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    CheckZonePeersRequest:
      type: object
      properties:
        location:
          type: string
          description: The Microsoft location.
        subscriptionIds:
          type: array
          items:
            type: string
          description: The peer Microsoft Azure subscription ID.
      description: Check zone peers request parameters.
    CheckZonePeersResult:
      type: object
      description: Result of the Check zone peers operation.
      properties:
        subscriptionId:
          readOnly: true
          type: string
          description: The subscription ID.
        location:
          type: string
          description: the location of the subscription.
        availabilityZonePeers:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityZonePeers'
          x-ms-identifiers:
            - availabilityZone
          description: The Availability Zones shared by the subscriptions.
    AvailabilityZonePeers:
      type: object
      properties:
        availabilityZone:
          readOnly: true
          type: string
          description: The availabilityZone.
        peers:
          type: array
          items:
            $ref: '#/components/schemas/Peers'
          x-ms-identifiers:
            - availabilityZone
            - subscriptionId
          description: Details of shared availability zone.
      description: List of availability zones shared by the subscriptions.
    Peers:
      type: object
      properties:
        subscriptionId:
          readOnly: true
          type: string
          description: The subscription ID.
        availabilityZone:
          readOnly: true
          type: string
          description: The availabilityZone.
      description: Information about shared availability zone.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    DeploymentExtendedFilter:
      properties:
        provisioningState:
          type: string
          description: The provisioning state.
      description: Deployment filter.
      type: object
    GenericResourceFilter:
      properties:
        resourceType:
          type: string
          description: The resource type.
        tagname:
          type: string
          description: The tag name.
        tagvalue:
          type: string
          description: The tag value.
      description: Resource filter.
      type: object
    ResourceGroupFilter:
      properties:
        tagName:
          type: string
          description: The tag name.
        tagValue:
          type: string
          description: The tag value.
      description: Resource group filter.
      type: object
    TemplateLink:
      properties:
        uri:
          type: string
          description: The URI of the template to deploy. Use either the uri or id property, but not both.
        id:
          type: string
          description: The resource id of a Template Spec. Use either the id or uri property, but not both.
        relativePath:
          type: string
          description: The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs
        contentVersion:
          type: string
          description: If included, must match the ContentVersion in the template.
        queryString:
          type: string
          description: The query string (for example, a SAS token) to be used with the templateLink URI.
      description: Entity representing the reference to the template.
      type: object
    ParametersLink:
      properties:
        uri:
          type: string
          description: The URI of the parameters file.
        contentVersion:
          type: string
          description: If included, must match the ContentVersion in the template.
      required:
        - uri
      description: Entity representing the reference to the deployment parameters.
      type: object
    DeploymentProperties:
      properties:
        template:
          type: object
          description: The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
        templateLink:
          $ref: '#/components/schemas/TemplateLink'
          description: The URI of the template. Use either the templateLink property or the template property, but not both.
        parameters:
          type: object
          description: Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
        parametersLink:
          $ref: '#/components/schemas/ParametersLink'
          description: The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
        mode:
          type: string
          description: The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
          enum:
            - Incremental
            - Complete
          x-ms-enum:
            name: DeploymentMode
            modelAsString: false
        debugSetting:
          $ref: '#/components/schemas/DebugSetting'
          description: The debug setting of the deployment.
        onErrorDeployment:
          $ref: '#/components/schemas/OnErrorDeployment'
          description: The deployment on error behavior.
        expressionEvaluationOptions:
          $ref: '#/components/schemas/ExpressionEvaluationOptions'
          description: Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.
      required:
        - mode
      description: Deployment properties.
      type: object
    DebugSetting:
      properties:
        detailLevel:
          type: string
          description: Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.
      description: The debug setting.
      type: object
    Deployment:
      required:
        - properties
      description: Deployment operation parameters.
      properties:
        location:
          type: string
          description: The location to store the deployment data.
        properties:
          $ref: '#/components/schemas/DeploymentProperties'
          description: The deployment properties.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Deployment tags
      type: object
    ScopedDeployment:
      required:
        - location
        - properties
      description: Deployment operation parameters.
      properties:
        location:
          type: string
          description: The location to store the deployment data.
        properties:
          $ref: '#/components/schemas/DeploymentProperties'
          description: The deployment properties.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Deployment tags
      type: object
    DeploymentExportResult:
      properties:
        template:
          type: object
          description: The template content.
      description: 'The deployment export result. '
      type: object
    DeploymentWhatIf:
      required:
        - properties
      description: Deployment What-if operation parameters.
      properties:
        location:
          type: string
          description: The location to store the deployment data.
        properties:
          $ref: '#/components/schemas/DeploymentWhatIfProperties'
          description: The deployment properties.
      type: object
    ScopedDeploymentWhatIf:
      required:
        - location
        - properties
      description: Deployment What-if operation parameters.
      properties:
        location:
          type: string
          description: The location to store the deployment data.
        properties:
          $ref: '#/components/schemas/DeploymentWhatIfProperties'
          description: The deployment properties.
      type: object
    DeploymentWhatIfProperties:
      description: Deployment What-if properties.
      properties:
        whatIfSettings:
          $ref: '#/components/schemas/DeploymentWhatIfSettings'
          description: Optional What-If operation settings.
        template:
          type: object
          description: The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.
        templateLink:
          $ref: '#/components/schemas/TemplateLink'
          description: The URI of the template. Use either the templateLink property or the template property, but not both.
        parameters:
          type: object
          description: Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
        parametersLink:
          $ref: '#/components/schemas/ParametersLink'
          description: The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
        mode:
          type: string
          description: The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.
          enum:
            - Incremental
            - Complete
          x-ms-enum:
            name: DeploymentMode
            modelAsString: false
        debugSetting:
          $ref: '#/components/schemas/DebugSetting'
          description: The debug setting of the deployment.
        onErrorDeployment:
          $ref: '#/components/schemas/OnErrorDeployment'
          description: The deployment on error behavior.
        expressionEvaluationOptions:
          $ref: '#/components/schemas/ExpressionEvaluationOptions'
          description: Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.
      type: object
    DeploymentWhatIfSettings:
      properties:
        resultFormat:
          type: string
          description: The format of the What-If results
          enum:
            - ResourceIdOnly
            - FullResourcePayloads
          x-ms-enum:
            name: WhatIfResultFormat
            modelAsString: false
      description: Deployment What-If operation settings.
      type: object
    ApiProfile:
      properties:
        profileVersion:
          type: string
          readOnly: true
          description: The profile version.
        apiVersion:
          type: string
          readOnly: true
          description: The API version.
      type: object
    AliasPathMetadata:
      properties:
        type:
          type: string
          readOnly: true
          enum:
            - NotSpecified
            - Any
            - String
            - Object
            - Array
            - Integer
            - Number
            - Boolean
          x-ms-enum:
            name: AliasPathTokenType
            modelAsString: true
            values:
              - value: NotSpecified
                description: The token type is not specified.
              - value: Any
                description: The token type can be anything.
              - value: String
                description: The token type is string.
              - value: Object
                description: The token type is object.
              - value: Array
                description: The token type is array.
              - value: Integer
                description: The token type is integer.
              - value: Number
                description: The token type is number.
              - value: Boolean
                description: The token type is boolean.
          description: The type of the token that the alias path is referring to.
        attributes:
          type: string
          readOnly: true
          enum:
            - None
            - Modifiable
          x-ms-enum:
            name: AliasPathAttributes
            modelAsString: true
            values:
              - value: None
                description: The token that the alias path is referring to has no attributes.
              - value: Modifiable
                description: The token that the alias path is referring to is modifiable by policies with 'modify' effect.
          description: The attributes of the token that the alias path is referring to.
      type: object
    AliasPath:
      properties:
        path:
          type: string
          description: The path of an alias.
        apiVersions:
          type: array
          items:
            type: string
          description: The API versions.
        pattern:
          $ref: '#/components/schemas/AliasPattern'
          description: The pattern for an alias path.
        metadata:
          readOnly: true
          $ref: '#/components/schemas/AliasPathMetadata'
          description: The metadata of the alias path. If missing, fall back to the default metadata of the alias.
      description: The type of the paths for alias.
      type: object
    AliasPattern:
      properties:
        phrase:
          type: string
          description: The alias pattern phrase.
        variable:
          type: string
          description: The alias pattern variable.
        type:
          type: string
          enum:
            - NotSpecified
            - Extract
          x-ms-enum:
            name: AliasPatternType
            modelAsString: false
            values:
              - value: NotSpecified
                description: NotSpecified is not allowed.
              - value: Extract
                description: Extract is the only allowed value.
          description: The type of alias pattern
      description: The type of the pattern for an alias path.
      type: object
    Alias:
      properties:
        name:
          type: string
          description: The alias name.
        paths:
          type: array
          items:
            $ref: '#/components/schemas/AliasPath'
          x-ms-identifiers: []
          description: The paths for an alias.
        type:
          type: string
          description: The type of the alias.
          enum:
            - NotSpecified
            - PlainText
            - Mask
          x-ms-enum:
            name: AliasType
            modelAsString: false
            values:
              - value: NotSpecified
                description: Alias type is unknown (same as not providing alias type).
              - value: PlainText
                description: Alias value is not secret.
              - value: Mask
                description: Alias value is secret.
        defaultPath:
          type: string
          description: The default path for an alias.
        defaultPattern:
          $ref: '#/components/schemas/AliasPattern'
          description: The default pattern for an alias.
        defaultMetadata:
          readOnly: true
          $ref: '#/components/schemas/AliasPathMetadata'
          description: The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata
      description: 'The alias type. '
      type: object
    ProviderExtendedLocation:
      properties:
        location:
          type: string
          description: The azure location.
        type:
          type: string
          description: The extended location type.
        extendedLocations:
          type: array
          items:
            type: string
          description: The extended locations for the azure location.
      description: 'The provider extended location. '
      type: object
    ProviderResourceType:
      description: Resource type managed by the resource provider.
      properties:
        resourceType:
          type: string
          description: The resource type.
        locations:
          type: array
          items:
            type: string
          description: The collection of locations where this resource type can be created.
        locationMappings:
          type: array
          items:
            $ref: '#/components/schemas/ProviderExtendedLocation'
          x-ms-identifiers:
            - location
            - type
          description: The location mappings that are supported by this resource type.
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/Alias'
          x-ms-identifiers:
            - name
          description: The aliases that are supported by this resource type.
        apiVersions:
          type: array
          items:
            type: string
          description: The API version.
        defaultApiVersion:
          type: string
          readOnly: true
          description: The default API version.
        zoneMappings:
          type: array
          items:
            $ref: '#/components/schemas/ZoneMapping'
          x-ms-identifiers:
            - location
        apiProfiles:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiProfile'
          x-ms-identifiers:
            - apiVersion
            - profileVersion
          description: The API profiles for the resource provider.
        capabilities:
          type: string
          description: The additional capabilities offered by this resource type.
        properties:
          type: object
          additionalProperties:
            type: string
            description: 'The additional properties. '
          description: The properties.
      type: object
    Provider:
      properties:
        id:
          readOnly: true
          type: string
          description: The provider ID.
        namespace:
          type: string
          description: The namespace of the resource provider.
        registrationState:
          readOnly: true
          type: string
          description: The registration state of the resource provider.
        registrationPolicy:
          readOnly: true
          type: string
          description: The registration policy of the resource provider.
        resourceTypes:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ProviderResourceType'
          x-ms-identifiers:
            - resourceType
          description: The collection of provider resource types.
        providerAuthorizationConsentState:
          type: string
          enum:
            - NotSpecified
            - Required
            - NotRequired
            - Consented
          description: The provider authorization consent state.
          x-ms-enum:
            name: ProviderAuthorizationConsentState
            modelAsString: true
      description: Resource provider information.
      type: object
    BasicDependency:
      properties:
        id:
          type: string
          description: The ID of the dependency.
        resourceType:
          type: string
          description: The dependency resource type.
        resourceName:
          type: string
          description: The dependency resource name.
      description: Deployment dependency information.
      type: object
    Dependency:
      properties:
        dependsOn:
          type: array
          items:
            $ref: '#/components/schemas/BasicDependency'
          description: The list of dependencies.
        id:
          type: string
          description: The ID of the dependency.
        resourceType:
          type: string
          description: The dependency resource type.
        resourceName:
          type: string
          description: The dependency resource name.
      description: Deployment dependency information.
      type: object
    DeploymentPropertiesExtended:
      properties:
        provisioningState:
          type: string
          readOnly: true
          description: Denotes the state of provisioning.
          enum:
            - NotSpecified
            - Accepted
            - Running
            - Ready
            - Creating
            - Created
            - Deleting
            - Deleted
            - Canceled
            - Failed
            - Succeeded
            - Updating
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        correlationId:
          readOnly: true
          type: string
          description: The correlation ID of the deployment.
        timestamp:
          readOnly: true
          type: string
          format: date-time
          description: The timestamp of the template deployment.
        duration:
          readOnly: true
          type: string
          description: The duration of the template deployment.
        outputs:
          readOnly: true
          type: object
          description: Key/value pairs that represent deployment output.
        providers:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: The list of resource providers needed for the deployment.
        dependencies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
          description: The list of deployment dependencies.
        templateLink:
          readOnly: true
          $ref: '#/components/schemas/TemplateLink'
          description: The URI referencing the template.
        parameters:
          readOnly: true
          type: object
          description: 'Deployment parameters. '
        parametersLink:
          readOnly: true
          $ref: '#/components/schemas/ParametersLink'
          description: 'The URI referencing the parameters. '
        mode:
          readOnly: true
          type: string
          description: The deployment mode. Possible values are Incremental and Complete.
          enum:
            - Incremental
            - Complete
          x-ms-enum:
            name: DeploymentMode
            modelAsString: false
        debugSetting:
          readOnly: true
          $ref: '#/components/schemas/DebugSetting'
          description: The debug setting of the deployment.
        onErrorDeployment:
          readOnly: true
          $ref: '#/components/schemas/OnErrorDeploymentExtended'
          description: The deployment on error behavior.
        templateHash:
          readOnly: true
          type: string
          description: The hash produced for the template.
        outputResources:
          readOnly: true
          type: array
          description: Array of provisioned resources.
          items:
            $ref: '#/components/schemas/ResourceReference'
            description: Details of provisioned resources.
        validatedResources:
          readOnly: true
          type: array
          description: Array of validated resources.
          items:
            $ref: '#/components/schemas/ResourceReference'
            description: Details of validated resources.
        error:
          readOnly: true
          $ref: '#/components/schemas/ErrorResponse'
          description: The deployment error.
      description: Deployment properties with additional details.
      type: object
    ResourceReference:
      description: The resource Id model.
      properties:
        id:
          readOnly: true
          type: string
          description: The fully qualified resource Id.
      type: object
    OnErrorDeployment:
      properties:
        type:
          type: string
          description: The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
          enum:
            - LastSuccessful
            - SpecificDeployment
          x-ms-enum:
            name: OnErrorDeploymentType
            modelAsString: false
        deploymentName:
          type: string
          description: The deployment to be used on error case.
      description: Deployment on error behavior.
      type: object
    OnErrorDeploymentExtended:
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The state of the provisioning for the on error deployment.
        type:
          type: string
          description: The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.
          enum:
            - LastSuccessful
            - SpecificDeployment
          x-ms-enum:
            name: OnErrorDeploymentType
            modelAsString: false
        deploymentName:
          type: string
          description: The deployment to be used on error case.
      description: Deployment on error behavior with additional details.
      type: object
    DeploymentValidateResult:
      description: Information from validate template deployment response.
      properties:
        error:
          readOnly: true
          $ref: '#/components/schemas/ErrorResponse'
          description: The deployment validation error.
        properties:
          $ref: '#/components/schemas/DeploymentPropertiesExtended'
          description: The template deployment properties.
      type: object
    DeploymentExtended:
      x-ms-azure-resource: true
      description: Deployment information.
      properties:
        id:
          readOnly: true
          type: string
          description: The ID of the deployment.
        name:
          readOnly: true
          type: string
          description: The name of the deployment.
        type:
          readOnly: true
          type: string
          description: The type of the deployment.
        location:
          type: string
          description: the location of the deployment.
        properties:
          $ref: '#/components/schemas/DeploymentPropertiesExtended'
          description: Deployment properties.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Deployment tags
      type: object
    DeploymentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentExtended'
          description: An array of deployments.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of deployments.
      type: object
    ProviderListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: An array of resource providers.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of resource providers.
      type: object
    ProviderResourceTypeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProviderResourceType'
          x-ms-identifiers:
            - resourceType
          description: An array of resource types.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of resource types of a resource provider.
      type: object
    GenericResource:
      description: Resource information.
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
          description: The plan of the resource.
        properties:
          type: object
          description: The resource properties.
        kind:
          type: string
          description: The kind of the resource.
          pattern: ^[-\w\._,\(\)]+$
        managedBy:
          type: string
          description: ID of the resource that manages this resource.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the resource.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ExtendedLocation:
      properties:
        type:
          type: string
          enum:
            - EdgeZone
          x-ms-enum:
            name: ExtendedLocationType
            modelAsString: true
          description: The extended location type.
        name:
          type: string
          description: The extended location name.
      description: Resource extended location.
      type: object
    GenericResourceExpanded:
      description: Resource information.
      properties:
        createdTime:
          readOnly: true
          type: string
          format: date-time
          description: The created time of the resource. This is only present if requested via the $expand query parameter.
        changedTime:
          readOnly: true
          type: string
          format: date-time
          description: The changed time of the resource. This is only present if requested via the $expand query parameter.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state of the resource. This is only present if requested via the $expand query parameter.
        plan:
          $ref: '#/components/schemas/Plan'
          description: The plan of the resource.
        properties:
          type: object
          description: The resource properties.
        kind:
          type: string
          description: The kind of the resource.
          pattern: ^[-\w\._,\(\)]+$
        managedBy:
          type: string
          description: ID of the resource that manages this resource.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the resource.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
      type: object
    ResourceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GenericResourceExpanded'
          description: An array of resources.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of resource groups.
      type: object
    ResourceGroup:
      required:
        - location
      x-ms-azure-resource: true
      description: Resource group information.
      properties:
        id:
          readOnly: true
          type: string
          description: The ID of the resource group.
        name:
          readOnly: true
          type: string
          description: The name of the resource group.
        type:
          readOnly: true
          type: string
          description: The type of the resource group.
        properties:
          $ref: '#/components/schemas/ResourceGroupProperties'
          description: The resource group properties.
        location:
          type: string
          description: The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations.
        managedBy:
          type: string
          description: The ID of the resource that manages this resource group.
        tags:
          type: object
          additionalProperties:
            type: string
            description: 'The additional properties. '
          description: The tags attached to the resource group.
      type: object
    ResourceGroupPatchable:
      description: Resource group information.
      properties:
        name:
          type: string
          description: The name of the resource group.
        properties:
          $ref: '#/components/schemas/ResourceGroupProperties'
          description: The resource group properties.
        managedBy:
          type: string
          description: The ID of the resource that manages this resource group.
        tags:
          type: object
          additionalProperties:
            type: string
            description: 'The additional properties. '
          description: The tags attached to the resource group.
      type: object
    ResourceGroupProperties:
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state. '
      description: The resource group properties.
      type: object
    ResourceGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceGroup'
          description: An array of resource groups.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of resource groups.
      type: object
    ResourcesMoveInfo:
      properties:
        resources:
          type: array
          items:
            type: string
          description: The IDs of the resources.
        targetResourceGroup:
          type: string
          description: The target resource group.
      description: Parameters of move resources.
      type: object
    ExportTemplateRequest:
      properties:
        resources:
          type: array
          items:
            type: string
          description: The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'.
        options:
          type: string
          description: 'The export template options. A CSV-formatted list containing zero or more of the following: ''IncludeParameterDefaultValue'', ''IncludeComments'', ''SkipResourceNameParameterization'', ''SkipAllParameterization'''
      description: Export resource group template request parameters.
      type: object
    TagCount:
      properties:
        type:
          type: string
          description: Type of count.
        value:
          type: integer
          description: Value of count.
      description: Tag count.
      type: object
    TagValue:
      properties:
        id:
          readOnly: true
          type: string
          description: The tag value ID.
        tagValue:
          type: string
          description: The tag value.
        count:
          $ref: '#/components/schemas/TagCount'
          description: The tag value count.
      x-ms-azure-resource: true
      description: Tag information.
      type: object
    TagDetails:
      properties:
        id:
          readOnly: true
          type: string
          description: The tag name ID.
        tagName:
          type: string
          description: The tag name.
        count:
          $ref: '#/components/schemas/TagCount'
          description: The total number of resources that use the resource tag. When a tag is initially created and has no associated resources, the value is 0.
        values:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
          description: The list of tag values.
      x-ms-azure-resource: true
      description: Tag details.
      type: object
    TagsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TagDetails'
          description: An array of tags.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of subscription tags.
      type: object
    TargetResource:
      properties:
        id:
          type: string
          description: The ID of the resource.
        resourceName:
          type: string
          description: The name of the resource.
        resourceType:
          type: string
          description: The type of the resource.
      description: Target resource.
      type: object
    HttpMessage:
      properties:
        content:
          type: object
          description: HTTP message content.
      description: HTTP message.
      type: object
    DeploymentOperationProperties:
      properties:
        provisioningOperation:
          readOnly: true
          type: string
          description: The name of the current provisioning operation.
          enum:
            - NotSpecified
            - Create
            - Delete
            - Waiting
            - AzureAsyncOperationWaiting
            - ResourceCacheWaiting
            - Action
            - Read
            - EvaluateDeploymentOutput
            - DeploymentCleanup
          x-ms-enum:
            name: ProvisioningOperation
            modelAsString: false
            values:
              - value: NotSpecified
                description: The provisioning operation is not specified.
              - value: Create
                description: The provisioning operation is create.
              - value: Delete
                description: The provisioning operation is delete.
              - value: Waiting
                description: The provisioning operation is waiting.
              - value: AzureAsyncOperationWaiting
                description: The provisioning operation is waiting Azure async operation.
              - value: ResourceCacheWaiting
                description: The provisioning operation is waiting for resource cache.
              - value: Action
                description: The provisioning operation is action.
              - value: Read
                description: The provisioning operation is read.
              - value: EvaluateDeploymentOutput
                description: The provisioning operation is evaluate output.
              - value: DeploymentCleanup
                description: The provisioning operation is cleanup. This operation is part of the 'complete' mode deployment.
        provisioningState:
          readOnly: true
          type: string
          description: The state of the provisioning.
        timestamp:
          readOnly: true
          type: string
          format: date-time
          description: The date and time of the operation.
        duration:
          readOnly: true
          type: string
          description: The duration of the operation.
        serviceRequestId:
          readOnly: true
          type: string
          description: Deployment operation service request id.
        statusCode:
          readOnly: true
          type: string
          description: Operation status code from the resource provider. This property may not be set if a response has not yet been received.
        statusMessage:
          readOnly: true
          description: Operation status message from the resource provider. This property is optional.  It will only be provided if an error was received from the resource provider.
          $ref: '#/components/schemas/StatusMessage'
        targetResource:
          readOnly: true
          $ref: '#/components/schemas/TargetResource'
          description: The target resource.
        request:
          readOnly: true
          $ref: '#/components/schemas/HttpMessage'
          description: The HTTP request message.
        response:
          readOnly: true
          $ref: '#/components/schemas/HttpMessage'
          description: The HTTP response message.
      description: Deployment operation properties.
      type: object
    DeploymentOperation:
      description: Deployment operation information.
      properties:
        id:
          readOnly: true
          type: string
          description: Full deployment operation ID.
        operationId:
          readOnly: true
          type: string
          description: Deployment operation ID.
        properties:
          $ref: '#/components/schemas/DeploymentOperationProperties'
          description: Deployment properties.
      type: object
    DeploymentOperationsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DeploymentOperation'
          description: An array of deployment operations.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of deployment operations.
      type: object
    ResourceProviderOperationDisplayProperties:
      properties:
        publisher:
          type: string
          description: Operation description.
        provider:
          type: string
          description: Operation provider.
        resource:
          type: string
          description: Operation resource.
        operation:
          type: string
          description: Resource provider operation.
        description:
          type: string
          description: Operation description.
      description: Resource provider operation's display properties.
      type: object
    SubResource:
      properties:
        id:
          type: string
          description: Resource ID
      x-ms-azure-resource: true
      description: Sub-resource.
      type: object
    ResourceGroupExportResult:
      properties:
        template:
          type: object
          description: The template content.
        error:
          $ref: '#/components/schemas/ErrorResponse'
          description: The template export error.
      description: Resource group export result.
      type: object
    TemplateHashResult:
      description: Result of the request to calculate template hash. It contains a string of minified template and its hash.
      properties:
        minifiedTemplate:
          type: string
          description: The minified template string.
        templateHash:
          type: string
          description: The template hash.
      type: object
    WhatIfPropertyChange:
      required:
        - path
        - propertyChangeType
      properties:
        path:
          type: string
          description: The path of the property.
        propertyChangeType:
          type: string
          description: The type of property change.
          enum:
            - Create
            - Delete
            - Modify
            - Array
            - NoEffect
          x-ms-enum:
            name: PropertyChangeType
            modelAsString: false
            values:
              - value: Create
                description: The property does not exist in the current state but is present in the desired state. The property will be created when the deployment is executed.
              - value: Delete
                description: The property exists in the current state and is missing from the desired state. It will be deleted when the deployment is executed.
              - value: Modify
                description: The property exists in both current and desired state and is different. The value of the property will change when the deployment is executed.
              - value: Array
                description: The property is an array and contains nested changes.
              - value: NoEffect
                description: The property will not be set or updated.
        before:
          type: object
          description: The value of the property before the deployment is executed.
        after:
          type: object
          description: The value of the property after the deployment is executed.
        children:
          type: array
          items:
            $ref: '#/components/schemas/WhatIfPropertyChange'
          x-ms-identifiers:
            - path
          description: Nested property changes.
      description: The predicted change to the resource property.
      type: object
    WhatIfChange:
      description: Information about a single resource change predicted by What-If operation.
      required:
        - resourceId
        - changeType
      properties:
        resourceId:
          type: string
          description: Resource ID
        changeType:
          type: string
          description: Type of change that will be made to the resource when the deployment is executed.
          enum:
            - Create
            - Delete
            - Ignore
            - Deploy
            - NoChange
            - Modify
            - Unsupported
          x-ms-enum:
            name: ChangeType
            modelAsString: false
            values:
              - value: Create
                description: The resource does not exist in the current state but is present in the desired state. The resource will be created when the deployment is executed.
              - value: Delete
                description: The resource exists in the current state and is missing from the desired state. The resource will be deleted when the deployment is executed.
              - value: Ignore
                description: The resource exists in the current state and is missing from the desired state. The resource will not be deployed or modified when the deployment is executed.
              - value: Deploy
                description: The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource may or may not change.
              - value: NoChange
                description: The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will not change.
              - value: Modify
                description: The resource exists in the current state and the desired state and will be redeployed when the deployment is executed. The properties of the resource will change.
              - value: Unsupported
                description: The resource is not supported by What-If.
        unsupportedReason:
          type: string
          description: The explanation about why the resource is unsupported by What-If.
        before:
          type: object
          description: The snapshot of the resource before the deployment is executed.
        after:
          type: object
          description: The predicted snapshot of the resource after the deployment is executed.
        delta:
          type: array
          items:
            $ref: '#/components/schemas/WhatIfPropertyChange'
          x-ms-identifiers:
            - path
          description: The predicted changes to resource properties.
      type: object
    WhatIfOperationProperties:
      description: Deployment operation properties.
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/WhatIfChange'
          x-ms-identifiers:
            - resourceId
            - changeType
          description: List of resource changes predicted by What-If operation.
      type: object
    WhatIfOperationResult:
      description: Result of the What-If operation. Contains a list of predicted changes and a URL link to get to the next set of results.
      properties:
        status:
          type: string
          description: Status of the What-If operation.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WhatIfOperationProperties'
          description: What-If operation properties.
        error:
          $ref: '#/components/schemas/ErrorResponse'
          description: Error when What-If operation fails.
      type: object
    Tags:
      description: A dictionary of name and value pairs.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
            description: The tag value.
      type: object
    TagsPatchResource:
      description: Wrapper resource for tags patch API request only.
      properties:
        operation:
          type: string
          description: The operation type for the patch API.
          enum:
            - Replace
            - Merge
            - Delete
          x-ms-enum:
            name: tagsPatchOperation
            modelAsString: true
            values:
              - value: Replace
                description: The 'replace' option replaces the entire set of existing tags with a new set.
              - value: Merge
                description: The 'merge' option allows adding tags with new names and updating the values of tags with existing names.
              - value: Delete
                description: The 'delete' option allows selectively deleting tags based on given names or name/value pairs.
        properties:
          $ref: '#/components/schemas/Tags'
          description: The set of tags.
      type: object
    TagsResource:
      description: Wrapper resource for tags API requests and responses.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        id:
          readOnly: true
          type: string
          description: The ID of the tags wrapper resource.
        name:
          readOnly: true
          type: string
          description: The name of the tags wrapper resource.
        type:
          readOnly: true
          type: string
          description: The type of the tags wrapper resource.
        properties:
          $ref: '#/components/schemas/Tags'
          description: The set of tags.
      type: object
    Permission:
      type: object
      readOnly: true
      properties:
        actions:
          type: array
          items:
            type: string
          description: Allowed actions.
        notActions:
          type: array
          items:
            type: string
          description: Denied actions.
        dataActions:
          type: array
          items:
            type: string
          description: Allowed Data actions.
        notDataActions:
          type: array
          items:
            type: string
          description: Denied Data actions.
      description: Role definition permissions.
    RoleDefinition:
      type: object
      properties:
        id:
          type: string
          description: The role definition ID.
        name:
          type: string
          description: The role definition name.
        isServiceRole:
          type: boolean
          description: If this is a service role.
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          x-ms-identifiers: []
          description: Role definition permissions.
        scopes:
          type: array
          items:
            type: string
          description: Role definition assignable scopes.
      description: Role definition properties.
    ProviderPermission:
      type: object
      description: The provider permission
      properties:
        applicationId:
          type: string
          description: The application id.
        roleDefinition:
          $ref: '#/components/schemas/RoleDefinition'
          description: Role definition properties.
        managedByRoleDefinition:
          $ref: '#/components/schemas/RoleDefinition'
          description: Role definition properties.
        providerAuthorizationConsentState:
          type: string
          enum:
            - NotSpecified
            - Required
            - NotRequired
            - Consented
          description: The provider authorization consent state.
          x-ms-enum:
            name: ProviderAuthorizationConsentState
            modelAsString: true
    ProviderPermissionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProviderPermission'
          x-ms-identifiers: []
          description: An array of provider permissions.
        nextLink:
          readOnly: true
          type: string
          description: The URL to use for getting the next set of results.
      description: List of provider permissions.
      type: object
    ProviderConsentDefinition:
      type: object
      description: The provider consent.
      properties:
        consentToAuthorization:
          type: boolean
          description: A value indicating whether authorization is consented or not.
    ProviderRegistrationRequest:
      type: object
      description: The provider registration definition.
      properties:
        thirdPartyProviderConsent:
          $ref: '#/components/schemas/ProviderConsentDefinition'
          description: The provider consent.
    StatusMessage:
      type: object
      description: Operation status message object.
      properties:
        status:
          type: string
          description: Status of the deployment operation.
        error:
          $ref: '#/components/schemas/ErrorResponse'
          description: The error reported by the operation.
    ExpressionEvaluationOptions:
      properties:
        scope:
          type: string
          description: The scope to be used for evaluation of parameters, variables and functions in a nested template.
          enum:
            - NotSpecified
            - Outer
            - Inner
          x-ms-enum:
            name: ExpressionEvaluationOptionsScopeType
            modelAsString: true
      description: Specifies whether template expressions are evaluated within the scope of the parent template or nested template.
      type: object
    ZoneMapping:
      type: object
      properties:
        location:
          type: string
          description: The location of the zone mapping.
        zones:
          type: array
          items:
            type: string
    ChangeResourceListResult:
      description: The list of resources
      type: object
      properties:
        nextLink:
          type: string
          description: The link used to get the next page of Change Resources
        value:
          description: The list of resources
          type: array
          items:
            $ref: '#/components/schemas/ChangeResourceResult'
    ChangeResourceResult:
      description: Change Resource
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        properties:
          $ref: '#/components/schemas/ChangeProperties'
      type: object
    ChangeProperties:
      description: The properties of a change
      type: object
      properties:
        targetResourceId:
          description: The fully qualified ID of the target resource that was changed
          type: string
          readOnly: true
        targetResourceType:
          description: The namespace and type of the resource
          type: string
          readOnly: true
        changeType:
          description: The type of change that was captured in the resource
          type: string
          readOnly: true
          enum:
            - Update
            - Delete
            - Create
          x-ms-enum:
            name: ChangeType
            modelAsString: false
            values:
              - value: Update
                description: An existing resource underwent a change
                name: Update
              - value: Delete
                description: An existing resource was deleted
                name: Delete
              - value: Create
                description: A newly created resource
                name: Create
        changeAttributes:
          $ref: '#/components/schemas/ChangeAttributes'
        changes:
          $ref: '#/components/schemas/ChangesDictionary'
    ChangeAttributes:
      description: Details about the change resource
      type: object
      properties:
        correlationId:
          description: The ARM correlation ID of the change resource
          type: string
          readOnly: true
        timestamp:
          description: The time the change(s) on the target resource ocurred
          type: string
          readOnly: true
        changesCount:
          type: integer
          format: int64
          readOnly: true
          description: The number of changes this resource captures
        previousResourceSnapshotId:
          description: The GUID of the previous snapshot
          type: string
          readOnly: true
        newResourceSnapshotId:
          description: The GUID of the new snapshot
          type: string
          readOnly: true
    ChangesDictionary:
      description: A dictionary with changed property name as a key and the change details as the value
      additionalProperties:
        $ref: '#/components/schemas/ChangeBase'
      properties: {}
      type: object
    ChangeBase:
      description: An individual change on the target resource
      type: object
      properties:
        propertyChangeType:
          description: The type of change that occurred
          type: string
          readOnly: true
          enum:
            - Insert
            - Update
            - Remove
          x-ms-enum:
            name: PropertyChangeType
            modelAsString: false
            values:
              - value: Update
                description: An existing property underwent a change
                name: Update
              - value: Insert
                description: A property was newly created
                name: Insert
              - value: Remove
                description: An existing property was deleted
                name: Remove
        changeCategory:
          description: The entity that made the change
          type: string
          readOnly: true
          enum:
            - User
            - System
          x-ms-enum:
            name: ChangeCategory
            modelAsString: false
            values:
              - value: User
                description: User initiated change
                name: User
              - value: System
                description: System initiated change
                name: System
        previousValue:
          description: The target resource property value before the change
          type: string
          readOnly: true
        newValue:
          description: The target resource property value after the change
          type: string
          readOnly: true
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    subscriptions_locations:
      id: azure.resources.subscriptions_locations
      name: subscriptions_locations
      title: subscriptions_locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1locations~1?api-version=2021-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions_locations/methods/list'
        insert: []
        update: []
        delete: []
    subscriptions:
      id: azure.resources.subscriptions
      name: subscriptions
      title: subscriptions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1?api-version=2021-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1?api-version=2021-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        check_zone_peers:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1checkZonePeers~1~1?api-version=2021-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/subscriptions/methods/list'
        insert: []
        update: []
        delete: []
    tenants:
      id: azure.resources.tenants
      name: tenants
      title: tenants
      methods:
        list:
          operation:
            $ref: '#/paths/~1tenants~1?api-version=2021-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        tenants:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1checkResourceName~1?api-version=2021-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tenants/methods/list'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.resources.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1operations~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    deployments_at_scope:
      id: azure.resources.deployments_at_scope
      name: deployments_at_scope
      title: deployments_at_scope
      methods:
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments_at_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments_at_scope/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments_at_scope/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments_at_scope/methods/delete'
    deployments:
      id: azure.resources.deployments
      name: deployments
      title: deployments
      methods:
        cancel_at_scope:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1cancel~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_at_scope:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1validate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_template_at_scope:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1exportTemplate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_at_tenant_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1cancel~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_at_tenant_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1validate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        what_if_at_tenant_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1whatIf~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_template_at_tenant_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1exportTemplate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_at_management_group_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1cancel~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_at_management_group_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1validate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        what_if_at_management_group_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1whatIf~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_template_at_management_group_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1exportTemplate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel_at_subscription_scope:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1cancel~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_at_subscription_scope:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1validate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        what_if_at_subscription_scope:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1whatIf~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_template_at_subscription_scope:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1exportTemplate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1cancel~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1validate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        what_if:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1whatIf~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_template:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1exportTemplate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Resources~1deployments~1~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        calculate_template_hash:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1calculateTemplateHash~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments/methods/list_by_resource_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete'
    deployments_at_tenant_scope:
      id: azure.resources.deployments_at_tenant_scope
      name: deployments_at_tenant_scope
      title: deployments_at_tenant_scope
      methods:
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments_at_tenant_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments_at_tenant_scope/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments_at_tenant_scope/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments_at_tenant_scope/methods/delete'
    deployments_at_management_group_scope:
      id: azure.resources.deployments_at_management_group_scope
      name: deployments_at_management_group_scope
      title: deployments_at_management_group_scope
      methods:
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments_at_management_group_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments_at_management_group_scope/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments_at_management_group_scope/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments_at_management_group_scope/methods/delete'
    deployments_at_subscription_scope:
      id: azure.resources.deployments_at_subscription_scope
      name: deployments_at_subscription_scope
      title: deployments_at_subscription_scope
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments_at_subscription_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployments_at_subscription_scope/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments_at_subscription_scope/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments_at_subscription_scope/methods/delete'
    providers:
      id: azure.resources.providers
      name: providers
      title: providers
      methods:
        unregister:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1{resourceProviderNamespace}~1unregister~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        register_at_management_group_scope:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1{resourceProviderNamespace}~1register~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        provider_permissions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1{resourceProviderNamespace}~1providerPermissions~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        register:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1{resourceProviderNamespace}~1register~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1{resourceProviderNamespace}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/providers/methods/get'
          - $ref: '#/components/x-stackQL-resources/providers/methods/list'
        insert: []
        update: []
        delete: []
    providers_at_tenant_scope:
      id: azure.resources.providers_at_tenant_scope
      name: providers_at_tenant_scope
      title: providers_at_tenant_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1{resourceProviderNamespace}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/providers_at_tenant_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/providers_at_tenant_scope/methods/list'
        insert: []
        update: []
        delete: []
    provider_resource_types:
      id: azure.resources.provider_resource_types
      name: provider_resource_types
      title: provider_resource_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1{resourceProviderNamespace}~1resourceTypes~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provider_resource_types/methods/list'
        insert: []
        update: []
        delete: []
    resources:
      id: azure.resources.resources
      name: resources
      title: resources
      methods:
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1resources~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        move_resources:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{sourceResourceGroupName}~1moveResources~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_move_resources:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{sourceResourceGroupName}~1validateMoveResources~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resources~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourcePath}~1{resourceType}~1{resourceName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourcePath}~1{resourceType}~1{resourceName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourcePath}~1{resourceType}~1{resourceName}~1?api-version=2021-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourcePath}~1{resourceType}~1{resourceName}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_by_id:
          operation:
            $ref: '#/paths/~1{resourceId}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_by_id:
          operation:
            $ref: '#/paths/~1{resourceId}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_by_id:
          operation:
            $ref: '#/paths/~1{resourceId}~1?api-version=2021-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_by_id:
          operation:
            $ref: '#/paths/~1{resourceId}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/resources/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/resources/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/resources/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/resources/methods/delete'
          - $ref: '#/components/x-stackQL-resources/resources/methods/delete_by_id'
    resource_groups:
      id: azure.resources.resource_groups
      name: resource_groups
      title: resource_groups
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1?api-version=2021-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_template:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1exportTemplate~1?api-version=2021-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/resource_groups/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_groups/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_groups/methods/delete'
    tags_value:
      id: azure.resources.tags_value
      name: tags_value
      title: tags_value
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1tagNames~1{tagName}~1tagValues~1{tagValue}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1tagNames~1{tagName}~1tagValues~1{tagValue}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/tags_value/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tags_value/methods/delete'
    tags:
      id: azure.resources.tags
      name: tags
      title: tags
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1tagNames~1{tagName}~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1tagNames~1{tagName}~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1tagNames~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tags/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tags/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tags/methods/delete'
    deployment_operations_at_scope:
      id: azure.resources.deployment_operations_at_scope
      name: deployment_operations_at_scope
      title: deployment_operations_at_scope
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1{operationId}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_scope/methods/list'
        insert: []
        update: []
        delete: []
    deployment_operations_at_tenant_scope:
      id: azure.resources.deployment_operations_at_tenant_scope
      name: deployment_operations_at_tenant_scope
      title: deployment_operations_at_tenant_scope
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1{operationId}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_tenant_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_tenant_scope/methods/list'
        insert: []
        update: []
        delete: []
    deployment_operations_at_management_group_scope:
      id: azure.resources.deployment_operations_at_management_group_scope
      name: deployment_operations_at_management_group_scope
      title: deployment_operations_at_management_group_scope
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1{operationId}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{groupId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_management_group_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_management_group_scope/methods/list'
        insert: []
        update: []
        delete: []
    deployment_operations_at_subscription_scope:
      id: azure.resources.deployment_operations_at_subscription_scope
      name: deployment_operations_at_subscription_scope
      title: deployment_operations_at_subscription_scope
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1{operationId}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Resources~1deployments~1{deploymentName}~1operations~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_subscription_scope/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployment_operations_at_subscription_scope/methods/list'
        insert: []
        update: []
        delete: []
    deployment_operations:
      id: azure.resources.deployment_operations
      name: deployment_operations
      title: deployment_operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1deployments~1{deploymentName}~1operations~1{operationId}~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1deployments~1{deploymentName}~1operations~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployment_operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/deployment_operations/methods/list'
        insert: []
        update: []
        delete: []
    tags_at_scope:
      id: azure.resources.tags_at_scope
      name: tags_at_scope
      title: tags_at_scope
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1tags~1default~1?api-version=2021-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1tags~1default~1?api-version=2021-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1tags~1default~1?api-version=2021-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Resources~1tags~1default~1?api-version=2021-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tags_at_scope/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/tags_at_scope/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tags_at_scope/methods/delete'
    changes:
      id: azure.resources.changes
      name: changes
      title: changes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{resourceType}~1{resourceName}~1providers~1Microsoft.Resources~1changes~1?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{resourceType}~1{resourceName}~1providers~1Microsoft.Resources~1changes~1{changeResourceId}~1?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/changes/methods/get'
          - $ref: '#/components/x-stackQL-resources/changes/methods/list'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/locations/?api-version=2021-01-01:
    get:
      tags:
        - Subscriptions
      operationId: Subscriptions_ListLocations
      summary: Gets all available geo-locations.
      description: This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: includeExtendedLocations
          in: query
          description: Whether to include extended locations.
          required: false
          x-ms-parameter-location: method
          schema:
            type: boolean
      responses:
        '200':
          description: OK - Returns an array of locations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/?api-version=2021-01-01:
    get:
      tags:
        - Subscriptions
      operationId: Subscriptions_Get
      description: Gets details about a specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/?api-version=2021-01-01:
    get:
      tags:
        - Subscriptions
      operationId: Subscriptions_List
      description: Gets all subscriptions for a tenant.
      parameters: []
      responses:
        '200':
          description: OK - Returns an array of subscriptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /tenants/?api-version=2021-01-01:
    get:
      tags:
        - Tenants
      operationId: Tenants_List
      description: Gets the tenants for your account.
      parameters: []
      responses:
        '200':
          description: OK - Returns an array of tenants.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/checkZonePeers//?api-version=2021-01-01:
    post:
      tags:
        - Subscriptions
      operationId: Subscriptions_CheckZonePeers
      description: Compares a subscriptions logical zone mapping
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for checking zone peers.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckZonePeersRequest'
      responses:
        '200':
          description: OK - Returns information about the logical availability zone mapping between subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckZonePeersResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Resources/checkResourceName/?api-version=2021-01-01:
    post:
      tags:
        - Tenants
      operationId: checkResourceName
      description: A resource name is valid if it is not a reserved word, does not contains a reserved word and does not start with a reserved word
      summary: Checks resource name validity
      requestBody:
        description: Resource object with values for resource name and resource type
        x-ms-requestBody-name: Resource Name Definition
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceName'
      parameters: []
      responses:
        '200':
          description: OK - Returns status as allowed or not.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResourceNameResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Resources/operations/?api-version=2021-04-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Microsoft.Resources REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/?api-version=2021-04-01:
    delete:
      tags:
        - Deployments
      operationId: Deployments_DeleteAtScope
      summary: Deletes a deployment from the deployment history.
      description: A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    head:
      tags:
        - Deployments
      operationId: Deployments_CheckExistenceAtScope
      description: Checks whether the deployment exists.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Deployments
      operationId: Deployments_CreateOrUpdateAtScope
      summary: Deploys resources at a given scope.
      description: You can provide the template and parameters directly in the request or link to JSON files.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Additional parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        '201':
          description: Created - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Deployments
      operationId: Deployments_GetAtScope
      description: Gets a deployment.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_CancelAtScope
      summary: Cancels a currently running template deployment.
      description: You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/validate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ValidateAtScope
      x-ms-long-running-operation: true
      description: Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: OK - Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        '202':
          description: Accepted - The request has been accepted for processing and the operation will complete asynchronously.
        '400':
          description: Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ExportTemplateAtScope
      description: Exports the template used for specified deployment.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '200':
          description: OK - Returns the template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Resources/deployments//?api-version=2021-04-01:
    get:
      tags:
        - Deployments
      operationId: Deployments_ListAtScope
      description: Get all the deployments at the given scope.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of results to get. If null is passed, returns all deployments.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK - Returns an array of deployments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DeploymentExtendedFilter'
  /providers/Microsoft.Resources/deployments/{deploymentName}/?api-version=2021-04-01:
    delete:
      tags:
        - Deployments
      operationId: Deployments_DeleteAtTenantScope
      summary: Deletes a deployment from the deployment history.
      description: A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    head:
      tags:
        - Deployments
      operationId: Deployments_CheckExistenceAtTenantScope
      description: Checks whether the deployment exists.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Deployments
      operationId: Deployments_CreateOrUpdateAtTenantScope
      summary: Deploys resources at tenant scope.
      description: You can provide the template and parameters directly in the request or link to JSON files.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Additional parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        '201':
          description: Created - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Deployments
      operationId: Deployments_GetAtTenantScope
      description: Gets a deployment.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Resources/deployments/{deploymentName}/cancel/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_CancelAtTenantScope
      summary: Cancels a currently running template deployment.
      description: You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Resources/deployments/{deploymentName}/validate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ValidateAtTenantScope
      x-ms-long-running-operation: true
      description: Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
      responses:
        '200':
          description: OK - Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        '202':
          description: Accepted - The request has been accepted for processing and the operation will complete asynchronously.
        '400':
          description: Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Resources/deployments/{deploymentName}/whatIf/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_WhatIfAtTenantScope
      description: Returns changes that will be made by the deployment if executed at the scope of the tenant group.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeploymentWhatIf'
      responses:
        '200':
          description: OK - Returns What-If operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatIfOperationResult'
        '202':
          description: Accepted - Returns URL in Location header to query for long-running operation status.
          headers:
            Location:
              schema:
                type: string
              description: URL to get status of this long-running operation.
            Retry-After:
              schema:
                type: string
              description: Number of seconds to wait before polling for status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ExportTemplateAtTenantScope
      description: Exports the template used for specified deployment.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '200':
          description: OK - Returns the template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Resources/deployments//?api-version=2021-04-01:
    get:
      tags:
        - Deployments
      operationId: Deployments_ListAtTenantScope
      description: Get all the deployments at the tenant scope.
      parameters:
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of results to get. If null is passed, returns all deployments.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK - Returns an array of deployments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DeploymentExtendedFilter'
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/?api-version=2021-04-01:
    delete:
      tags:
        - Deployments
      operationId: Deployments_DeleteAtManagementGroupScope
      summary: Deletes a deployment from the deployment history.
      description: A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    head:
      tags:
        - Deployments
      operationId: Deployments_CheckExistenceAtManagementGroupScope
      description: Checks whether the deployment exists.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Deployments
      operationId: Deployments_CreateOrUpdateAtManagementGroupScope
      summary: Deploys resources at management group scope.
      description: You can provide the template and parameters directly in the request or link to JSON files.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Additional parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        '201':
          description: Created - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Deployments
      operationId: Deployments_GetAtManagementGroupScope
      description: Gets a deployment.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_CancelAtManagementGroupScope
      summary: Cancels a currently running template deployment.
      description: You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ValidateAtManagementGroupScope
      x-ms-long-running-operation: true
      description: Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeployment'
      responses:
        '200':
          description: OK - Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        '202':
          description: Accepted - The request has been accepted for processing and the operation will complete asynchronously.
        '400':
          description: Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_WhatIfAtManagementGroupScope
      description: Returns changes that will be made by the deployment if executed at the scope of the management group.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedDeploymentWhatIf'
      responses:
        '200':
          description: OK - Returns What-If operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatIfOperationResult'
        '202':
          description: Accepted - Returns URL in Location header to query for long-running operation status.
          headers:
            Location:
              schema:
                type: string
              description: URL to get status of this long-running operation.
            Retry-After:
              schema:
                type: string
              description: Number of seconds to wait before polling for status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ExportTemplateAtManagementGroupScope
      description: Exports the template used for specified deployment.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
      responses:
        '200':
          description: OK - Returns the template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments//?api-version=2021-04-01:
    get:
      tags:
        - Deployments
      operationId: Deployments_ListAtManagementGroupScope
      description: Get all the deployments for a management group.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of results to get. If null is passed, returns all deployments.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK - Returns an array of deployments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DeploymentExtendedFilter'
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/?api-version=2021-04-01:
    delete:
      tags:
        - Deployments
      operationId: Deployments_DeleteAtSubscriptionScope
      summary: Deletes a deployment from the deployment history.
      description: A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    head:
      tags:
        - Deployments
      operationId: Deployments_CheckExistenceAtSubscriptionScope
      description: Checks whether the deployment exists.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Deployments
      operationId: Deployments_CreateOrUpdateAtSubscriptionScope
      summary: Deploys resources at subscription scope.
      description: You can provide the template and parameters directly in the request or link to JSON files.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Additional parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        '201':
          description: Created - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Deployments
      operationId: Deployments_GetAtSubscriptionScope
      description: Gets a deployment.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_CancelAtSubscriptionScope
      summary: Cancels a currently running template deployment.
      description: You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/validate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ValidateAtSubscriptionScope
      x-ms-long-running-operation: true
      description: Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: OK - Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        '202':
          description: Accepted - The request has been accepted for processing and the operation will complete asynchronously.
        '400':
          description: Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_WhatIfAtSubscriptionScope
      description: Returns changes that will be made by the deployment if executed at the scope of the subscription.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to What If.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentWhatIf'
      responses:
        '200':
          description: OK - Returns What-If operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatIfOperationResult'
        '202':
          description: Accepted - Returns URL in Location header to query for long-running operation status.
          headers:
            Location:
              schema:
                type: string
              description: URL to get status of this long-running operation.
            Retry-After:
              schema:
                type: string
              description: Number of seconds to wait before polling for status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ExportTemplateAtSubscriptionScope
      description: Exports the template used for specified deployment.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns the template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments//?api-version=2021-04-01:
    get:
      tags:
        - Deployments
      operationId: Deployments_ListAtSubscriptionScope
      description: Get all the deployments for a subscription.
      parameters:
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of results to get. If null is passed, returns all deployments.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of deployments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DeploymentExtendedFilter'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/?api-version=2021-04-01:
    delete:
      tags:
        - Deployments
      operationId: Deployments_Delete
      summary: Deletes a deployment from the deployment history.
      description: A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group with the deployment to delete. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    head:
      tags:
        - Deployments
      operationId: Deployments_CheckExistence
      description: Checks whether the deployment exists.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group with the deployment to check. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Deployments
      operationId: Deployments_CreateOrUpdate
      summary: Deploys resources to a resource group.
      description: You can provide the template and parameters directly in the request or link to JSON files.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group to deploy the resources to. The name is case insensitive. The resource group must already exist.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Additional parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        '201':
          description: Created - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Deployments
      operationId: Deployments_Get
      description: Gets a deployment.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the deployment, including provisioning status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExtended'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_Cancel
      summary: Cancels a currently running template deployment.
      description: You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_Validate
      x-ms-long-running-operation: true
      description: Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager..
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group the template will be deployed to. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: OK - Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        '202':
          description: Accepted - The request has been accepted for processing and the operation will complete asynchronously.
        '400':
          description: Returns the validation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentValidateResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/whatIf/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_WhatIf
      description: Returns changes that will be made by the deployment if executed at the scope of the resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group the template will be deployed to. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to validate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentWhatIf'
      responses:
        '200':
          description: OK - Returns What-If operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhatIfOperationResult'
        '202':
          description: Accepted - Returns URL in Location header to query for long-running operation status.
          headers:
            Location:
              schema:
                type: string
              description: URL to get status of this long-running operation.
            Retry-After:
              schema:
                type: string
              description: Number of seconds to wait before polling for status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_ExportTemplate
      description: Exports the template used for specified deployment.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns the template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentExportResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments//?api-version=2021-04-01:
    get:
      tags:
        - Deployments
      operationId: Deployments_ListByResourceGroup
      description: Get all the deployments for a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group with the deployments to get. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, you can use $filter=provisioningState eq '{state}'.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of results to get. If null is passed, returns all deployments.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of deployments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DeploymentExtendedFilter'
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister/?api-version=2021-04-01:
    post:
      tags:
        - Providers
      operationId: Providers_Unregister
      description: Unregisters a subscription from a resource provider.
      parameters:
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider to unregister.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/{resourceProviderNamespace}/register/?api-version=2021-04-01:
    post:
      tags:
        - Providers
      operationId: Providers_RegisterAtManagementGroupScope
      description: Registers a management group with a resource provider. Use this operation to register a resource provider with resource types that can be deployed at the management group scope. It does not recursively register subscriptions within the management group. Instead, you must register subscriptions individually.
      parameters:
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider to register.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/GroupIdParameter'
      responses:
        '200':
          description: OK - Returns information about the resource provider.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/providerPermissions/?api-version=2021-04-01:
    get:
      tags:
        - Providers
      operationId: Providers_ProviderPermissions
      description: Get the provider permissions.
      parameters:
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information on the provider permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderPermissionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register/?api-version=2021-04-01:
    post:
      tags:
        - Providers
      operationId: Providers_Register
      description: Registers a subscription with a resource provider.
      parameters:
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider to register.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The third party consent for S2S.
        required: false
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderRegistrationRequest'
      responses:
        '200':
          description: OK - Returns information about the resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/?api-version=2021-04-01:
    get:
      tags:
        - Providers
      operationId: Providers_List
      description: Gets all resource providers for a subscription.
      parameters:
        - name: $expand
          in: query
          description: The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of resource providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/?api-version=2021-04-01:
    get:
      tags:
        - Providers
      operationId: Providers_ListAtTenantScope
      description: Gets all resource providers for the tenant.
      parameters:
        - name: $expand
          in: query
          description: The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of resource providers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/?api-version=2021-04-01:
    get:
      tags:
        - Providers
      operationId: Providers_Get
      description: Gets the specified resource provider.
      parameters:
        - name: $expand
          in: query
          description: The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.
          required: false
          schema:
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/resourceTypes/?api-version=2021-04-01:
    get:
      tags:
        - Providers
      operationId: ProviderResourceTypes_List
      description: List the resource types for a specified resource provider.
      parameters:
        - name: $expand
          in: query
          description: The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.
          required: false
          schema:
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns resource types information for the resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderResourceTypeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/{resourceProviderNamespace}/?api-version=2021-04-01:
    get:
      tags:
        - Providers
      operationId: Providers_GetAtTenantScope
      description: Gets the specified resource provider at the tenant level.
      parameters:
        - name: $expand
          in: query
          description: The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases.
          required: false
          schema:
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources/?api-version=2021-04-01:
    get:
      tags:
        - ResourceGroups
      operationId: Resources_ListByResourceGroup
      description: Get all the resources for a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The resource group with the resources to get.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq ''Microsoft.Network/virtualNetworks''<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with ''demo'' anywhere in the name, use: $filter=substringof(''demo'', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq ''tag1'' and tagValue eq ''Value1''. When you filter by a tag name and value, the tags for each resource are not returned in the results.<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId.'
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of results to return. If null is passed, returns all resources.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/GenericResourceFilter'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/?api-version=2021-04-01:
    head:
      tags:
        - ResourceGroups
      operationId: ResourceGroups_CheckExistence
      description: Checks whether a resource group exists.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group to check. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ResourceGroups
      operationId: ResourceGroups_CreateOrUpdate
      description: Creates or updates a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group to create or update. Can include alphanumeric, underscore, parentheses, hyphen, period (except at end), and Unicode characters that match the allowed characters.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update a resource group.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroup'
      responses:
        '200':
          description: OK - Returns information about the new resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
        '201':
          description: Created - Returns information about the new resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ResourceGroups
      operationId: ResourceGroups_Delete
      summary: Deletes a resource group.
      description: When you delete a resource group, all of its resources are also deleted. Deleting a resource group deletes all of its template deployments and currently stored operations.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group to delete. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: forceDeletionTypes
          in: query
          description: 'The resource types you want to force delete. Currently, only the following is supported: forceDeletionTypes=Microsoft.Compute/virtualMachines,Microsoft.Compute/virtualMachineScaleSets'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - ResourceGroups
      operationId: ResourceGroups_Get
      description: Gets a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group to get. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ResourceGroups
      operationId: ResourceGroups_Update
      summary: Updates a resource group.
      description: Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource group. If a field is unspecified, the current value is retained.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group to update. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update a resource group.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceGroupPatchable'
      responses:
        '200':
          description: OK - Returns information about the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate/?api-version=2021-04-01:
    post:
      tags:
        - ResourceGroups
      operationId: ResourceGroups_ExportTemplate
      description: Captures the specified resource group as a template.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      requestBody:
        description: Parameters for exporting the template.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportTemplateRequest'
      responses:
        '200':
          description: OK - Returns the result of the export.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupExportResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourcegroups/?api-version=2021-04-01:
    get:
      tags:
        - ResourceGroups
      operationId: ResourceGroups_List
      description: Gets all the resource groups for a subscription.
      parameters:
        - name: $filter
          in: query
          description: The filter to apply on the operation.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of results to return. If null is passed, returns all resource groups.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of resource groups.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/ResourceGroupFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources/?api-version=2021-04-01:
    post:
      tags:
        - Resources
      operationId: Resources_MoveResources
      summary: Moves resources from one resource group to another resource group.
      description: 'The resources to be moved must be in the same source resource group in the source subscription being used. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes. '
      parameters:
        - name: sourceResourceGroupName
          in: path
          description: The name of the resource group from the source subscription containing the resources to be moved.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for moving resources.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesMoveInfo'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/validateMoveResources/?api-version=2021-04-01:
    post:
      tags:
        - Resources
      operationId: Resources_ValidateMoveResources
      summary: Validates whether resources can be moved from one resource group to another resource group.
      description: This operation checks whether the specified resources can be moved to the target. The resources to be moved must be in the same source resource group in the source subscription being used. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation.
      parameters:
        - name: sourceResourceGroupName
          in: path
          description: The name of the resource group from the source subscription containing the resources to be validated for move.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for moving resources.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesMoveInfo'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resources/?api-version=2021-04-01:
    get:
      tags:
        - Resources
      operationId: Resources_List
      description: Get all the resources in a subscription.
      parameters:
        - name: $filter
          in: query
          description: 'The filter to apply on the operation.<br><br>Filter comparison operators include `eq` (equals) and `ne` (not equals) and may be used with the following properties: `location`, `resourceType`, `name`, `resourceGroup`, `identity`, `identity/principalId`, `plan`, `plan/publisher`, `plan/product`, `plan/name`, `plan/version`, and `plan/promotionCode`.<br><br>For example, to filter by a resource type, use `$filter=resourceType eq ''Microsoft.Network/virtualNetworks''`<br><br><br>`substringof(value, property)` can  be used to filter for substrings of the following currently-supported properties: `name` and `resourceGroup`<br><br>For example, to get all resources with ''demo'' anywhere in the resource name, use `$filter=substringof(''demo'', name)`<br><br>Multiple substring operations can also be combined using `and`/`or` operators.<br><br>Note that any truncated number of results queried via `$top` may also not be compatible when using a filter.<br><br><br>Resources can be filtered by tag names and values. For example, to filter for a tag name and value, use `$filter=tagName eq ''tag1'' and tagValue eq ''Value1''`. Note that when resources are filtered by tag name and value, <b>the original tags for each resource will not be returned in the results.</b> Any list of additional properties queried via `$expand` may also not be compatible when filtering by tag names/values. <br><br>For tag names only, resources can be filtered by prefix using the following syntax: `$filter=startswith(tagName, ''depart'')`. This query will return all resources with a tag name prefixed by the phrase `depart` (i.e.`department`, `departureDate`, `departureTime`, etc.)<br><br><br>Note that some properties can be combined when filtering resources, which include the following: `substringof() and/or resourceType`, `plan and plan/publisher and plan/name`, and `identity and identity/principalId`.'
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of recommendations per page if a paged version of this API is being used.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/GenericResourceFilter'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/?api-version=2021-04-01:
    head:
      tags:
        - Resources
      operationId: Resources_CheckExistence
      description: Checks whether a resource exists.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the resource to check. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The resource provider of the resource to check.
          required: true
          schema:
            type: string
        - name: parentResourcePath
          in: path
          description: The parent resource identity.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The resource type.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: The name of the resource to check whether it exists.
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Resources
      operationId: Resources_Delete
      description: Deletes a resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group that contains the resource to delete. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
        - name: parentResourcePath
          in: path
          description: The parent resource identity.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The resource type.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: The name of the resource to delete.
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    put:
      tags:
        - Resources
      operationId: Resources_CreateOrUpdate
      description: Creates a resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group for the resource. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
        - name: parentResourcePath
          in: path
          description: The parent resource identity.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The resource type of the resource to create.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: The name of the resource to create.
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for creating or updating the resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
      responses:
        '200':
          description: OK - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        '201':
          description: Created - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Resources
      operationId: Resources_Update
      description: Updates a resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group for the resource. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
        - name: parentResourcePath
          in: path
          description: The parent resource identity.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The resource type of the resource to update.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: The name of the resource to update.
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for updating the resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
      responses:
        '200':
          description: OK - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Resources
      operationId: Resources_Get
      description: Gets a resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the resource to get. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - name: resourceProviderNamespace
          in: path
          description: The namespace of the resource provider.
          required: true
          schema:
            type: string
        - name: parentResourcePath
          in: path
          description: The parent resource identity.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The resource type of the resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: The name of the resource to get.
          required: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{resourceId}/?api-version=2021-04-01:
    head:
      tags:
        - Resources
      operationId: Resources_CheckExistenceById
      description: Checks by ID whether a resource exists. This API currently works only for a limited set of Resource providers. In the event that a Resource provider does not implement this API, ARM will respond with a 405. The alternative then is to use the GET API to check for the existence of the resource.
      parameters:
        - name: resourceId
          in: path
          description: The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Resources
      operationId: Resources_DeleteById
      description: Deletes a resource by ID.
      parameters:
        - name: resourceId
          in: path
          description: The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    put:
      tags:
        - Resources
      operationId: Resources_CreateOrUpdateById
      description: Create a resource by ID.
      parameters:
        - name: resourceId
          in: path
          description: The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
      requestBody:
        description: Create or update resource parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
      responses:
        '200':
          description: OK - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        '201':
          description: Created - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Resources
      operationId: Resources_UpdateById
      description: Updates a resource by ID.
      parameters:
        - name: resourceId
          in: path
          description: The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
      requestBody:
        description: Update resource parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericResource'
      responses:
        '200':
          description: OK - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Resources
      operationId: Resources_GetById
      description: Gets a resource by ID.
      parameters:
        - name: resourceId
          in: path
          description: The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: api-version
          in: query
          description: The API version to use for the operation.
          required: true
          x-ms-api-version: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}/?api-version=2021-04-01:
    delete:
      tags:
        - Tags
      operationId: Tags_DeleteValue
      summary: Deletes a predefined tag value for a predefined tag name.
      description: This operation allows deleting a value from the list of predefined values for an existing predefined tag name. The value being deleted must not be in use as a tag value for the given tag name for any resource.
      parameters:
        - name: tagName
          in: path
          description: The name of the tag.
          required: true
          schema:
            type: string
        - name: tagValue
          in: path
          description: The value of the tag to delete.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Predefined tag value successfully deleted.
        '204':
          description: Predefined tag value did not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Tags
      operationId: Tags_CreateOrUpdateValue
      summary: Creates a predefined value for a predefined tag name.
      description: This operation allows adding a value to the list of predefined values for an existing predefined tag name. A tag value can have a maximum of 256 characters.
      parameters:
        - name: tagName
          in: path
          description: The name of the tag.
          required: true
          schema:
            type: string
        - name: tagValue
          in: path
          description: The value of the tag to create.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Predefined tag value already exists. Returns information about the predefined tag value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
        '201':
          description: Predefined tag value successfully created. Returns information about the predefined tag value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/tagNames/{tagName}/?api-version=2021-04-01:
    put:
      tags:
        - Tags
      operationId: Tags_CreateOrUpdate
      summary: Creates a predefined tag name.
      description: 'This operation allows adding a name to the list of predefined tag names for the given subscription. A tag name can have a maximum of 512 characters and is case-insensitive. Tag names cannot have the following prefixes which are reserved for Azure use: ''microsoft'', ''azure'', ''windows''.'
      parameters:
        - name: tagName
          in: path
          description: The name of the tag to create.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Predefined tag name already exists. Returns information about the predefined tag name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDetails'
        '201':
          description: Predefined tag name successfully created. Returns information about the predefined tag name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Tags
      operationId: Tags_Delete
      summary: Deletes a predefined tag name.
      description: This operation allows deleting a name from the list of predefined tag names for the given subscription. The name being deleted must not be in use as a tag name for any resource. All predefined values for the given name must have already been deleted.
      parameters:
        - name: tagName
          in: path
          description: The name of the tag.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Predefined tag name successfully deleted.
        '204':
          description: Predefined tag name did not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/tagNames/?api-version=2021-04-01:
    get:
      tags:
        - Tags
      operationId: Tags_List
      summary: Gets a summary of tag usage under the subscription.
      description: This operation performs a union of predefined tags, resource tags, resource group tags and subscription tags, and returns a summary of usage for each tag name and value under the given subscription. In case of a large number of tags, this operation may return a previously cached result.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of tag names and values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_GetAtScope
      description: Gets a deployments operation.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: operationId
          in: path
          description: The ID of the operation to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the deployment operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_ListAtScope
      description: Gets all deployments operations for a deployment.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: $top
          in: query
          description: The number of results to return.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK - Return an array of deployment operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_GetAtTenantScope
      description: Gets a deployments operation.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: operationId
          in: path
          description: The ID of the operation to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the deployment operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Resources/deployments/{deploymentName}/operations/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_ListAtTenantScope
      description: Gets all deployments operations for a deployment.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: $top
          in: query
          description: The number of results to return.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK - Return an array of deployment operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_GetAtManagementGroupScope
      description: Gets a deployments operation.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: operationId
          in: path
          description: The ID of the operation to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the deployment operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_ListAtManagementGroupScope
      description: Gets all deployments operations for a deployment.
      parameters:
        - $ref: '#/components/parameters/GroupIdParameter'
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: $top
          in: query
          description: The number of results to return.
          required: false
          schema:
            format: int32
            type: integer
      responses:
        '200':
          description: OK - Return an array of deployment operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_GetAtSubscriptionScope
      description: Gets a deployments operation.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: operationId
          in: path
          description: The ID of the operation to get.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the deployment operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_ListAtSubscriptionScope
      description: Gets all deployments operations for a deployment.
      parameters:
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: $top
          in: query
          description: The number of results to return.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Return an array of deployment operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_Get
      description: Gets a deployments operation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: operationId
          in: path
          description: The ID of the operation to get.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns information about the deployment operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/?api-version=2021-04-01:
    get:
      tags:
        - DeploymentOperations
      operationId: DeploymentOperations_List
      description: Gets all deployments operations for a deployment.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group. The name is case insensitive.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
        - $ref: '#/components/parameters/DeploymentNameParameter'
        - name: $top
          in: query
          description: The number of results to return.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Return an array of deployment operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOperationsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Resources/calculateTemplateHash/?api-version=2021-04-01:
    post:
      tags:
        - Deployments
      operationId: Deployments_CalculateTemplateHash
      description: Calculate the hash of the given template.
      parameters: []
      requestBody:
        description: The template provided to calculate hash.
        required: true
        x-ms-requestBody-name: template
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK - Returns the hash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateHashResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Resources/tags/default/?api-version=2021-04-01:
    put:
      tags:
        - Tags
      operationId: Tags_CreateOrUpdateAtScope
      summary: Creates or updates the entire set of tags on a resource or subscription.
      description: This operation allows adding or replacing the entire set of tags on the specified resource or subscription. The specified entity can have a maximum of 50 tags.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsResource'
      responses:
        '200':
          description: Tags updated successfully. Returns tags from the specified object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Tags
      operationId: Tags_UpdateAtScope
      summary: Selectively updates the set of tags on a resource or subscription.
      description: This operation allows replacing, merging or selectively deleting tags on the specified resource or subscription. The specified entity can have a maximum of 50 tags at the end of the operation. The 'replace' option replaces the entire set of existing tags with a new set. The 'merge' option allows adding tags with new names and updating the values of tags with existing names. The 'delete' option allows selectively deleting tags based on given names or name/value pairs.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsPatchResource'
      responses:
        '200':
          description: Tags updated successfully. Returns tags from the specified object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - Tags
      operationId: Tags_GetAtScope
      summary: Gets the entire set of tags on a resource or subscription.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      responses:
        '200':
          description: Returns tags from the specified object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Tags
      operationId: Tags_DeleteAtScope
      summary: Deletes the entire set of tags on a resource or subscription.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      responses:
        '200':
          description: Tags successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Resources/changes/?api-version=2022-05-01:
    get:
      tags:
        - ListChanges
      operationId: Changes_List
      description: Obtains a list of change resources from the past 14 days for the target resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - $ref: '#/components/parameters/ResourceTypeParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/_top'
        - $ref: '#/components/parameters/_skipToken'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Resources/changes/{changeResourceId}/?api-version=2022-05-01:
    get:
      tags:
        - GetChange
      operationId: Changes_Get
      description: Obtains the specified change resource for the target resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - $ref: '#/components/parameters/ResourceTypeParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/ChangeResourceIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeResourceResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
