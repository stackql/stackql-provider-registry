openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Service Fabric Mesh
  description: Service Fabric Mesh Resource Manager APIs allow managing microservices applications deployed in Azure Service Fabric Mesh environment through management.azure.com.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    CodePackageNameRequiredPathParam:
      name: codePackageName
      in: path
      description: The name of code package of the service.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    api-versionRequiredQueryParam:
      name: api-version
      in: query
      description: The version of the API. This parameter is required and its value must be `2018-09-01-preview`.
      required: true
      schema:
        enum:
          - 2018-09-01-preview
        default: 2018-09-01-preview
        x-ms-enum:
          name: 2018-09-01-preview
          modelAsString: true
          values:
            - value: 2018-09-01-preview
              description: The `2018-09-01-preview` version of the API.
        type: string
    subscriptionIdRequiredPathParam:
      name: subscriptionId
      in: path
      description: The customer subscription identifier
      required: true
      schema:
        type: string
    ResourceGroupNameRequiredPathParam:
      name: resourceGroupName
      in: path
      description: Azure resource group name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SecretResourceNameRequiredPathParam:
      name: secretResourceName
      in: path
      description: The name of the secret resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    SecretValueResourceNameRequiredPathParam:
      name: secretValueResourceName
      in: path
      description: The name of the secret resource value which is typically the version identifier for the value.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    VolumeResourceNameRequiredPathParam:
      name: volumeResourceName
      in: path
      description: The identity of the volume.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkResourceNameRequiredPathParam:
      name: networkResourceName
      in: path
      description: The identity of the network.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    GatewayResourceNameRequiredPathParam:
      name: gatewayResourceName
      in: path
      description: The identity of the gateway.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApplicationResourceNameRequiredPathParam:
      name: applicationResourceName
      in: path
      description: The identity of the application.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ServiceResourceNameRequiredPathParam:
      name: serviceResourceName
      in: path
      description: The identity of the service.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ReplicaNameRequiredPathParam:
      name: replicaName
      in: path
      description: Service Fabric replica name.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    TailOptionalQueryParam:
      name: tail
      in: query
      description: Number of lines to show from the end of the logs. Default is 100.
      required: false
      x-ms-parameter-location: method
      schema:
        type: integer
  schemas:
    ResourceStatus:
      description: Status of the resource.
      type: string
      enum:
        - Unknown
        - Ready
        - Upgrading
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: ResourceStatus
        modelAsString: true
        values:
          - value: Unknown
            description: Indicates the resource status is unknown. The value is zero.
          - value: Ready
            description: Indicates the resource is ready. The value is 1.
          - value: Upgrading
            description: Indicates the resource is upgrading. The value is 2.
          - value: Creating
            description: Indicates the resource is being created. The value is 3.
          - value: Deleting
            description: Indicates the resource is being deleted. The value is 4.
          - value: Failed
            description: Indicates the resource is not functional due to persistent failures. See statusDetails property for more details. The value is 5.
    HealthState:
      type: string
      description: The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.
      enum:
        - Invalid
        - Ok
        - Warning
        - Error
        - Unknown
      x-ms-enum:
        name: HealthState
        modelAsString: true
        values:
          - value: Invalid
            description: Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.
          - value: Ok
            description: Indicates the health state is okay. The value is 1.
          - value: Warning
            description: Indicates the health state is at a warning level. The value is 2.
          - value: Error
            description: Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.
          - value: Unknown
            description: Indicates an unknown health status. The value is 65535.
    AvailableOperationDisplay:
      properties:
        provider:
          type: string
          description: Name of the operation provider.
        resource:
          type: string
          description: Name of the resource on which the operation is available.
        operation:
          type: string
          description: Name of the available operation.
        description:
          type: string
          description: Description of the available operation.
      description: An operation available at the listed Azure resource provider.
      type: object
    ErrorModel:
      properties:
        error:
          $ref: '#/components/schemas/ErrorErrorModel'
          description: Error model information
      description: The error details.
      required:
        - error
      type: object
    ErrorErrorModel:
      description: Error model information
      properties:
        code:
          type: string
        message:
          type: string
          description: Error message.
        innerError:
          type: string
        details:
          type: array
          description: List of error message details.
          items:
            $ref: '#/components/schemas/ErrorDetailsModel'
      required:
        - code
      type: object
    ErrorDetailsModel:
      description: Error model details information
      properties:
        code:
          type: string
        message:
          type: string
          description: Error message.
      required:
        - code
        - message
      type: object
    OperationListResult:
      properties:
        value:
          type: array
          description: List of Service Fabric operations supported by the Microsoft.ServiceFabric resource provider.
          items:
            $ref: '#/components/schemas/OperationResult'
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
      description: Describes the result of the request to list Service Fabric operations.
      type: object
    OperationResult:
      description: List of operations available at the listed Azure resource provider.
      properties:
        name:
          type: string
          description: The name of the operation.
        display:
          $ref: '#/components/schemas/AvailableOperationDisplay'
          description: The object that represents the operation.
        origin:
          type: string
          description: Origin result
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
        properties:
          description: Properties of the operation
          $ref: '#/components/schemas/AvailableOperationDescriptionProperties'
      type: object
    AvailableOperationDescriptionProperties:
      description: Properties available for a Microsoft.Web resource provider operation.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
    ServiceSpecification:
      description: Resource metrics service provided by Microsoft.Insights resource provider.
      type: object
      properties:
        metricSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          x-ms-identifiers:
            - name
        logSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - name
    MetricSpecification:
      description: Definition of a single resource metric.
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        displayDescription:
          type: string
        unit:
          type: string
        aggregationType:
          type: string
        supportsInstanceLevelAggregation:
          type: boolean
        enableRegionalMdmAccount:
          type: boolean
        sourceMdmAccount:
          type: string
        sourceMdmNamespace:
          type: string
        metricFilterPattern:
          type: string
        fillGapWithZero:
          type: boolean
        isInternal:
          type: boolean
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          x-ms-identifiers:
            - name
        category:
          type: string
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/MetricAvailability'
          x-ms-identifiers: []
        supportedTimeGrainTypes:
          type: array
          items:
            type: string
        supportedAggregationTypes:
          type: array
          items:
            type: string
    Dimension:
      description: |-
        Dimension of a resource metric. For e.g. instance specific HTTP requests for a web app, 
        where instance name is dimension of the metric HTTP request
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        internalName:
          type: string
        toBeExportedForShoebox:
          type: boolean
    MetricAvailability:
      description: Retention policy of a resource metric.
      type: object
      properties:
        timeGrain:
          type: string
        blobDuration:
          type: string
    LogSpecification:
      description: Log Definition of a single resource metric.
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        blobDuration:
          type: string
        logFilterPattern:
          type: string
    ProvisionedResourceProperties:
      description: Describes common properties of a provisioned resource.
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
      type: object
    ProxyResource:
      description: The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          x-ms-mutability:
            - read
        name:
          readOnly: true
          type: string
          description: The name of the resource
          x-ms-mutability:
            - read
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
          x-ms-mutability:
            - read
      type: object
    ManagedProxyResource:
      description: The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags. This proxy resource is explicitly created or updated by including it in the parent resource.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          x-ms-mutability:
            - read
        name:
          type: string
          description: The name of the resource
          x-ms-mutability:
            - read
            - create
            - update
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
          x-ms-mutability:
            - read
      x-ms-azure-resource: true
      type: object
    Resource:
      description: The resource model definition for Azure Resource Manager resource.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          x-ms-mutability:
            - read
        name:
          readOnly: true
          type: string
          description: The name of the resource
          x-ms-mutability:
            - read
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
          x-ms-mutability:
            - read
      x-ms-azure-resource: true
      type: object
    TrackedResource:
      description: The resource model definition for Azure Resource Manager tracked top-level resource.
      required:
        - location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          x-ms-mutability:
            - read
        name:
          readOnly: true
          type: string
          description: The name of the resource
          x-ms-mutability:
            - read
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
          x-ms-mutability:
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SecretKind:
      type: string
      description: Describes the kind of secret.
      enum:
        - inlinedValue
      x-ms-enum:
        name: SecretKind
        modelAsString: true
        values:
          - value: inlinedValue
            description: A simple secret resource whose plaintext value is provided by the user.
    SecretResourceProperties:
      description: Describes the properties of a secret resource.
      properties:
        kind:
          $ref: '#/components/schemas/SecretKind'
          description: Describes the kind of secret.
        description:
          description: User readable description of the secret.
          type: string
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the resource.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the secret.
        contentType:
          type: string
          description: The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.
      type: object
    InlinedValueSecretResourceProperties:
      description: Describes the properties of a secret resource whose value is provided explicitly as plaintext. The secret resource may have multiple values, each being uniquely versioned. The secret value of each version is stored encrypted, and delivered as plaintext into the context of applications referencing it.
      x-ms-discriminator-value: inlinedValue
      properties:
        description:
          description: User readable description of the secret.
          type: string
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the resource.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the secret.
        contentType:
          type: string
          description: The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed.
      type: object
    SecretResourcePropertiesBase:
      discriminator:
        propertyName: kind
      description: This type describes the properties of a secret resource, including its kind.
      required:
        - kind
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
        kind:
          $ref: '#/components/schemas/SecretKind'
          description: Describes the kind of secret.
      type: object
    SecretResourceDescription:
      description: This type describes a secret resource.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/SecretResourceProperties'
          description: Describes the properties of a secret resource.
      type: object
    SecretResourceDescriptionList:
      description: A pageable list of secret resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SecretResourceDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    SecretValue:
      type: object
      description: This type represents the unencrypted value of the secret.
      properties:
        value:
          type: string
          description: The actual value of the secret.
    SecretValueProperties:
      type: object
      description: This type describes properties of secret value resource.
      properties:
        value:
          type: string
          description: The actual value of the secret.
    SecretValueResourceProperties:
      description: This type describes properties of a secret value resource.
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
        value:
          type: string
          description: The actual value of the secret.
      type: object
    SecretValueResourceDescription:
      description: This type describes a value of a secret resource. The name of this resource is the version identifier corresponding to this secret value.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SecretValueResourceProperties'
          description: This type describes properties of a secret value resource.
      type: object
    SecretValueResourceDescriptionList:
      description: A pageable list of values of a secret resource. The information does not include only the name of the value and not the actual unencrypted value.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SecretValueResourceDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    VolumeProperties:
      description: Describes properties of a volume resource.
      properties:
        description:
          type: string
          description: User readable description of the volume.
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the volume.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the volume.
        provider:
          $ref: '#/components/schemas/VolumeProvider'
          description: Provider of the volume.
        azureFileParameters:
          $ref: '#/components/schemas/VolumeProviderParametersAzureFile'
          description: This type describes a volume provided by an Azure Files file share.
      required:
        - provider
      type: object
    VolumeProvider:
      type: string
      description: Describes the provider of the volume resource.
      enum:
        - SFAzureFile
      x-ms-enum:
        name: VolumeProvider
        modelAsString: true
        values:
          - value: SFAzureFile
            description: Provides volumes that are backed by Azure Files.
    VolumeProviderParametersAzureFile:
      description: This type describes a volume provided by an Azure Files file share.
      properties:
        accountName:
          description: Name of the Azure storage account for the File Share.
          type: string
        accountKey:
          description: Access key of the Azure storage account for the File Share.
          type: string
        shareName:
          description: Name of the Azure Files file share that provides storage for the volume.
          type: string
      required:
        - accountName
        - shareName
      type: object
    VolumeReference:
      description: Describes a reference to a volume resource.
      type: object
      properties:
        name:
          type: string
          description: Name of the volume being referenced.
        readOnly:
          type: boolean
          description: The flag indicating whether the volume is read only. Default is 'false'.
        destinationPath:
          type: string
          description: The path within the container at which the volume should be mounted. Only valid path characters are allowed.
      required:
        - name
        - destinationPath
    ApplicationScopedVolume:
      description: Describes a volume whose lifetime is scoped to the application's lifetime.
      required:
        - creationParameters
      properties:
        name:
          type: string
          description: Name of the volume being referenced.
        readOnly:
          type: boolean
          description: The flag indicating whether the volume is read only. Default is 'false'.
        destinationPath:
          type: string
          description: The path within the container at which the volume should be mounted. Only valid path characters are allowed.
        creationParameters:
          $ref: '#/components/schemas/ApplicationScopedVolumeCreationParameters'
          description: Describes parameters for creating application-scoped volumes.
      type: object
    ApplicationScopedVolumeCreationParameters:
      description: Describes parameters for creating application-scoped volumes.
      type: object
      discriminator:
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/ApplicationScopedVolumeKind'
          description: Specifies the application-scoped volume kind.
        description:
          description: User readable description of the volume.
          type: string
      required:
        - kind
    ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk:
      description: Describes parameters for creating application-scoped volumes provided by Service Fabric Volume Disks
      required:
        - sizeDisk
      x-ms-discriminator-value: ServiceFabricVolumeDisk
      properties:
        kind:
          $ref: '#/components/schemas/ApplicationScopedVolumeKind'
          description: Specifies the application-scoped volume kind.
        description:
          description: User readable description of the volume.
          type: string
        sizeDisk:
          description: Volume size
          type: string
          enum:
            - Small
            - Medium
            - Large
          x-ms-enum:
            name: SizeTypes
            modelAsString: true
      type: object
    ApplicationScopedVolumeKind:
      description: Specifies the application-scoped volume kind.
      type: string
      enum:
        - ServiceFabricVolumeDisk
      x-ms-enum:
        name: ApplicationScopedVolumeKind
        modelAsString: true
        values:
          - value: ServiceFabricVolumeDisk
            description: Provides Service Fabric High Availability Volume Disk
    VolumeResourceProperties:
      description: This type describes properties of a volume resource.
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
        description:
          type: string
          description: User readable description of the volume.
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the volume.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the volume.
        provider:
          $ref: '#/components/schemas/VolumeProvider'
          description: Provider of the volume.
        azureFileParameters:
          $ref: '#/components/schemas/VolumeProviderParametersAzureFile'
          description: This type describes a volume provided by an Azure Files file share.
      type: object
    VolumeResourceDescription:
      description: This type describes a volume resource.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VolumeResourceProperties'
          description: This type describes properties of a volume resource.
      type: object
    VolumeResourceDescriptionList:
      description: A pageable list of volume resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VolumeResourceDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    NetworkKind:
      type: string
      description: The type of a Service Fabric container network.
      enum:
        - Local
      x-ms-enum:
        name: NetworkKind
        modelAsString: true
        values:
          - value: Local
            description: Indicates a container network local to a single Service Fabric cluster. The value is 1.
    NetworkResourceProperties:
      description: Describes properties of a network resource.
      properties:
        kind:
          $ref: '#/components/schemas/NetworkKind'
          description: The type of a Service Fabric container network.
        description:
          type: string
          description: User readable description of the network.
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the network.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the network.
      type: object
    LocalNetworkResourceProperties:
      description: Information about a Service Fabric container network local to a single Service Fabric cluster.
      x-ms-discriminator-value: Local
      properties:
        description:
          type: string
          description: User readable description of the network.
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the network.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the network.
        networkAddressPrefix:
          $ref: '#/components/schemas/NetworkAddressPrefix'
          description: Address space for the local container network.
      type: object
    NetworkAddressPrefix:
      type: string
      description: Address space for a container network. This is expressed in CIDR notation.
    NetworkRef:
      description: Describes a network reference in a service.
      properties:
        name:
          type: string
          description: Name of the network
        endpointRefs:
          description: A list of endpoints that are exposed on this network.
          type: array
          items:
            $ref: '#/components/schemas/EndpointRef'
      type: object
    EndpointRef:
      description: Describes a reference to a service endpoint.
      properties:
        name:
          type: string
          description: Name of the endpoint.
      type: object
    NetworkResourcePropertiesBase:
      discriminator:
        propertyName: kind
      description: This type describes the properties of a network resource, including its kind.
      required:
        - kind
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
        kind:
          $ref: '#/components/schemas/NetworkKind'
          description: The type of a Service Fabric container network.
      type: object
    NetworkResourceDescription:
      description: This type describes a network resource.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/NetworkResourceProperties'
          description: Describes properties of a network resource.
      type: object
    NetworkResourceDescriptionList:
      description: A pageable list of network resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkResourceDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    GatewayDestination:
      description: Describes destination endpoint for routing traffic.
      type: object
      properties:
        applicationName:
          type: string
          description: Name of the service fabric Mesh application.
        serviceName:
          type: string
          description: service that contains the endpoint.
        endpointName:
          type: string
          description: name of the endpoint in the service.
      required:
        - applicationName
        - endpointName
        - serviceName
    GatewayProperties:
      description: Describes properties of a gateway resource.
      properties:
        description:
          description: User readable description of the gateway.
          type: string
        sourceNetwork:
          $ref: '#/components/schemas/NetworkRef'
          description: Network the gateway should listen on for requests.
        destinationNetwork:
          $ref: '#/components/schemas/NetworkRef'
          description: Network that the Application is using.
        tcp:
          description: Configuration for tcp connectivity for this gateway.
          type: array
          items:
            $ref: '#/components/schemas/TcpConfig'
        http:
          description: Configuration for http connectivity for this gateway.
          type: array
          items:
            $ref: '#/components/schemas/HttpConfig'
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the resource.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the gateway.
        ipAddress:
          readOnly: true
          type: string
          description: IP address of the gateway. This is populated in the response and is ignored for incoming requests.
      required:
        - destinationNetwork
        - sourceNetwork
      type: object
    HttpConfig:
      description: Describes the http configuration for external connectivity for this network.
      type: object
      properties:
        name:
          type: string
          description: http gateway config name.
        port:
          type: integer
          description: Specifies the port at which the service endpoint below needs to be exposed.
        hosts:
          type: array
          description: description for routing.
          items:
            $ref: '#/components/schemas/HttpHostConfig'
      required:
        - hosts
        - name
        - port
    HttpHostConfig:
      description: Describes the hostname properties for http routing.
      type: object
      properties:
        name:
          type: string
          description: http hostname config name.
        routes:
          type: array
          description: Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.
          items:
            $ref: '#/components/schemas/HttpRouteConfig'
      required:
        - name
        - routes
    HttpRouteConfig:
      description: Describes the hostname properties for http routing.
      type: object
      properties:
        name:
          type: string
          description: http route name.
        match:
          $ref: '#/components/schemas/HttpRouteMatchRule'
          description: Describes a rule for http route matching.
        destination:
          $ref: '#/components/schemas/GatewayDestination'
          description: Describes destination endpoint for routing traffic.
      required:
        - destination
        - match
        - name
    HttpRouteMatchHeader:
      description: Describes header information for http route matching.
      type: object
      properties:
        name:
          type: string
          description: Name of header to match in request.
        value:
          type: string
          description: Value of header to match in request.
        type:
          type: string
          description: how to match header value
          enum:
            - exact
          x-ms-enum:
            name: HeaderMatchType
            modelAsString: true
      required:
        - name
    HttpRouteMatchPath:
      description: Path to match for routing.
      type: object
      properties:
        value:
          type: string
          description: Uri path to match for request.
        rewrite:
          type: string
          description: replacement string for matched part of the Uri.
        type:
          type: string
          description: how to match value in the Uri
          enum:
            - prefix
          x-ms-enum:
            name: PathMatchType
            modelAsString: true
      required:
        - type
        - value
    HttpRouteMatchRule:
      description: Describes a rule for http route matching.
      type: object
      properties:
        path:
          $ref: '#/components/schemas/HttpRouteMatchPath'
          description: Path to match for routing.
        headers:
          type: array
          description: headers and their values to match in request.
          items:
            $ref: '#/components/schemas/HttpRouteMatchHeader'
      required:
        - path
    TcpConfig:
      description: Describes the tcp configuration for external connectivity for this network.
      type: object
      properties:
        name:
          type: string
          description: tcp gateway config name.
        port:
          type: integer
          description: Specifies the port at which the service endpoint below needs to be exposed.
        destination:
          $ref: '#/components/schemas/GatewayDestination'
          description: Describes destination endpoint for routing traffic.
      required:
        - destination
        - name
        - port
    GatewayResourceProperties:
      description: This type describes properties of a gateway resource.
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
        description:
          description: User readable description of the gateway.
          type: string
        sourceNetwork:
          $ref: '#/components/schemas/NetworkRef'
          description: Network the gateway should listen on for requests.
        destinationNetwork:
          $ref: '#/components/schemas/NetworkRef'
          description: Network that the Application is using.
        tcp:
          description: Configuration for tcp connectivity for this gateway.
          type: array
          items:
            $ref: '#/components/schemas/TcpConfig'
        http:
          description: Configuration for http connectivity for this gateway.
          type: array
          items:
            $ref: '#/components/schemas/HttpConfig'
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the resource.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the gateway.
        ipAddress:
          readOnly: true
          type: string
          description: IP address of the gateway. This is populated in the response and is ignored for incoming requests.
      type: object
    GatewayResourceDescription:
      description: This type describes a gateway resource.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GatewayResourceProperties'
          description: This type describes properties of a gateway resource.
      type: object
    GatewayResourceDescriptionList:
      description: A pageable list of gateway resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GatewayResourceDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    ApplicationProperties:
      description: Describes properties of a application resource.
      properties:
        description:
          type: string
          description: User readable description of the application.
        services:
          type: array
          description: Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.
          items:
            $ref: '#/components/schemas/ServiceResourceDescription'
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsDescription'
          description: Describes the diagnostics definition and usage for an application resource.
        debugParams:
          description: Internal - used by Visual Studio to setup the debugging session on the local development environment.
          type: string
        serviceNames:
          readOnly: true
          description: Names of the services in the application.
          type: array
          items:
            type: string
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the application.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the application.
        healthState:
          readOnly: true
          $ref: '#/components/schemas/HealthState'
          description: Describes the health state of an application resource.
        unhealthyEvaluation:
          readOnly: true
          type: string
          description: When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.
      type: object
    AzureInternalMonitoringPipelineSinkDescription:
      x-ms-discriminator-value: AzureInternalMonitoringPipeline
      description: Diagnostics settings for Geneva.
      properties:
        kind:
          $ref: '#/components/schemas/DiagnosticsSinkKind'
          description: The kind of DiagnosticsSink.
        name:
          description: Name of the sink. This value is referenced by DiagnosticsReferenceDescription
          type: string
        description:
          description: A description of the sink.
          type: string
        accountName:
          description: Azure Internal monitoring pipeline account.
          type: string
        namespace:
          description: Azure Internal monitoring pipeline account namespace.
          type: string
        maConfigUrl:
          description: Azure Internal monitoring agent configuration.
          type: string
        fluentdConfigUrl:
          description: Azure Internal monitoring agent fluentd configuration.
        autoKeyConfigUrl:
          description: Azure Internal monitoring pipeline autokey associated with the certificate.
          type: string
      type: object
    DiagnosticsDescription:
      description: Describes the diagnostics options available
      properties:
        sinks:
          description: List of supported sinks that can be referenced.
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticsSinkProperties'
        enabled:
          description: Status of whether or not sinks are enabled.
          type: boolean
        defaultSinkRefs:
          description: The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.
          type: array
          items:
            type: string
      type: object
    DiagnosticsRef:
      description: Reference to sinks in DiagnosticsDescription.
      properties:
        enabled:
          description: Status of whether or not sinks are enabled.
          type: boolean
        sinkRefs:
          description: List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.
          type: array
          items:
            type: string
      type: object
    DiagnosticsSinkKind:
      type: string
      description: The kind of DiagnosticsSink.
      enum:
        - Invalid
        - AzureInternalMonitoringPipeline
      x-ms-enum:
        name: DiagnosticsSinkKind
        modelAsString: true
        values:
          - value: Invalid
            description: Indicates an invalid sink kind. All Service Fabric enumerations have the invalid type.
          - value: AzureInternalMonitoringPipeline
            description: Diagnostics settings for Geneva.
    DiagnosticsSinkProperties:
      description: Properties of a DiagnosticsSink.
      discriminator:
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/DiagnosticsSinkKind'
          description: The kind of DiagnosticsSink.
        name:
          description: Name of the sink. This value is referenced by DiagnosticsReferenceDescription
          type: string
        description:
          description: A description of the sink.
          type: string
      required:
        - kind
      type: object
    ApplicationResourceProperties:
      description: This type describes properties of an application resource.
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
        description:
          type: string
          description: User readable description of the application.
        services:
          type: array
          description: Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.
          items:
            $ref: '#/components/schemas/ServiceResourceDescription'
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsDescription'
          description: Describes the diagnostics definition and usage for an application resource.
        debugParams:
          description: Internal - used by Visual Studio to setup the debugging session on the local development environment.
          type: string
        serviceNames:
          readOnly: true
          description: Names of the services in the application.
          type: array
          items:
            type: string
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the application.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the application.
        healthState:
          readOnly: true
          $ref: '#/components/schemas/HealthState'
          description: Describes the health state of an application resource.
        unhealthyEvaluation:
          readOnly: true
          type: string
          description: When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.
      type: object
    ApplicationResourceDescription:
      description: This type describes an application resource.
      required:
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationResourceProperties'
          description: This type describes properties of an application resource.
      type: object
    ApplicationResourceDescriptionList:
      description: A pageable list of application resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationResourceDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    AddRemoveReplicaScalingMechanism:
      description: Describes the horizontal auto scaling mechanism that adds or removes replicas (containers or container groups).
      x-ms-discriminator-value: AddRemoveReplica
      required:
        - minCount
        - maxCount
        - scaleIncrement
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingMechanismKind'
          description: The type of auto scaling mechanism.
        minCount:
          type: integer
          description: Minimum number of containers (scale down won't be performed below this number).
        maxCount:
          type: integer
          description: Maximum number of containers (scale up won't be performed above this number).
        scaleIncrement:
          type: integer
          description: Each time auto scaling is performed, this number of containers will be added or removed.
      type: object
    AutoScalingMechanism:
      type: object
      discriminator:
        propertyName: kind
      description: Describes the mechanism for performing auto scaling operation. Derived classes will describe the actual mechanism.
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingMechanismKind'
          description: The type of auto scaling mechanism.
      required:
        - kind
    AutoScalingMechanismKind:
      type: string
      description: Enumerates the mechanisms for auto scaling.
      enum:
        - AddRemoveReplica
      x-ms-enum:
        name: AutoScalingMechanismKind
        modelAsString: true
        values:
          - value: AddRemoveReplica
            description: Indicates that scaling should be performed by adding or removing replicas.
    AutoScalingMetric:
      type: object
      discriminator:
        propertyName: kind
      description: Describes the metric that is used for triggering auto scaling operation. Derived classes will describe resources or metrics.
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingMetricKind'
          description: The type of auto scaling metric
      required:
        - kind
    AutoScalingMetricKind:
      type: string
      description: Enumerates the metrics that are used for triggering auto scaling.
      enum:
        - Resource
      x-ms-enum:
        name: AutoScalingMetricKind
        modelAsString: true
        values:
          - value: Resource
            description: Indicates that the metric is one of resources, like cpu or memory.
    AutoScalingPolicy:
      description: Describes the auto scaling policy
      type: object
      properties:
        name:
          description: The name of the auto scaling policy.
          type: string
        trigger:
          $ref: '#/components/schemas/AutoScalingTrigger'
          description: Determines when auto scaling operation will be invoked.
        mechanism:
          $ref: '#/components/schemas/AutoScalingMechanism'
          description: The mechanism that is used to scale when auto scaling operation is invoked.
      required:
        - name
        - trigger
        - mechanism
    AutoScalingResourceMetric:
      description: Describes the resource that is used for triggering auto scaling.
      x-ms-discriminator-value: Resource
      required:
        - name
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingMetricKind'
          description: The type of auto scaling metric
        name:
          $ref: '#/components/schemas/AutoScalingResourceMetricName'
          description: Name of the resource.
      type: object
    AutoScalingResourceMetricName:
      type: string
      description: Enumerates the resources that are used for triggering auto scaling.
      enum:
        - cpu
        - memoryInGB
      x-ms-enum:
        name: AutoScalingResourceMetricName
        modelAsString: true
        values:
          - value: cpu
            description: Indicates that the resource is CPU cores.
          - value: memoryInGB
            description: Indicates that the resource is memory in GB.
    AutoScalingTrigger:
      type: object
      discriminator:
        propertyName: kind
      description: Describes the trigger for performing auto scaling operation.
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingTriggerKind'
          description: The type of auto scaling trigger
      required:
        - kind
    AutoScalingTriggerKind:
      type: string
      description: Enumerates the triggers for auto scaling.
      enum:
        - AverageLoad
      x-ms-enum:
        name: AutoScalingTriggerKind
        modelAsString: true
        values:
          - value: AverageLoad
            description: Indicates that scaling should be performed based on average load of all replicas in the service.
    ContainerCodePackageProperties:
      description: Describes a container and its runtime properties.
      properties:
        name:
          description: The name of the code package.
          type: string
        image:
          description: The Container image to use.
          type: string
        imageRegistryCredential:
          $ref: '#/components/schemas/ImageRegistryCredential'
          description: Image registry credential.
        entrypoint:
          description: Override for the default entry point in the container.
          type: string
        commands:
          description: Command array to execute within the container in exec form.
          type: array
          items:
            type: string
        environmentVariables:
          description: The environment variables to set in this container
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        settings:
          description: The settings to set in this container. The setting file path can be fetched from environment variable "Fabric_SettingPath". The path for Windows container is "C:\\secrets". The path for Linux container is "/var/secrets".
          type: array
          items:
            $ref: '#/components/schemas/Setting'
        labels:
          description: The labels to set in this container.
          type: array
          items:
            $ref: '#/components/schemas/ContainerLabel'
        endpoints:
          description: The endpoints exposed by this container.
          type: array
          items:
            $ref: '#/components/schemas/EndpointProperties'
        resources:
          description: The resources required by this container.
          $ref: '#/components/schemas/ResourceRequirements'
        volumeRefs:
          description: Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime.
          type: array
          items:
            $ref: '#/components/schemas/VolumeReference'
        volumes:
          description: Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationScopedVolume'
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsRef'
          description: Reference to sinks in DiagnosticsDescription.
        reliableCollectionsRefs:
          description: A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for more details.
          type: array
          items:
            $ref: '#/components/schemas/ReliableCollectionsRef'
        instanceView:
          readOnly: true
          $ref: '#/components/schemas/ContainerInstanceView'
          description: Runtime information of a container instance.
      required:
        - name
        - image
        - resources
      type: object
    ContainerEvent:
      description: A container event.
      properties:
        name:
          type: string
          description: The name of the container event.
        count:
          type: integer
          description: The count of the event.
        firstTimestamp:
          type: string
          description: Date/time of the first event.
        lastTimestamp:
          type: string
          description: Date/time of the last event.
        message:
          type: string
          description: The event message
        type:
          type: string
          description: The event type.
      type: object
    ContainerInstanceView:
      description: Runtime information of a container instance.
      properties:
        restartCount:
          type: integer
          description: The number of times the container has been restarted.
        currentState:
          $ref: '#/components/schemas/ContainerState'
          description: Current container instance state.
        previousState:
          $ref: '#/components/schemas/ContainerState'
          description: Previous container instance state.
        events:
          description: The events of this container instance.
          type: array
          items:
            $ref: '#/components/schemas/ContainerEvent'
      type: object
    ContainerLabel:
      description: Describes a container label.
      properties:
        name:
          description: The name of the container label.
          type: string
        value:
          description: The value of the container label.
          type: string
      required:
        - name
        - value
      type: object
    ContainerState:
      description: The container state.
      properties:
        state:
          type: string
          description: The state of this container
        startTime:
          type: string
          format: date-time
          description: Date/time when the container state started.
        exitCode:
          type: string
          description: The container exit code.
        finishTime:
          type: string
          format: date-time
          description: Date/time when the container state finished.
        detailStatus:
          description: Human-readable status of this state.
          type: string
      type: object
    EndpointProperties:
      description: Describes a container endpoint.
      properties:
        name:
          description: The name of the endpoint.
          type: string
        port:
          description: Port used by the container.
          type: integer
      required:
        - name
      type: object
    EnvironmentVariable:
      description: Describes an environment variable for the container.
      properties:
        name:
          description: The name of the environment variable.
          type: string
        value:
          description: The value of the environment variable.
          type: string
      type: object
    ImageRegistryCredential:
      description: Image registry credential.
      properties:
        server:
          type: string
          description: Docker image registry server, without protocol such as `http` and `https`.
        username:
          type: string
          description: The username for the private registry.
        password:
          type: string
          description: The password for the private registry. The password is required for create or update operations, however it is not returned in the get or list operations.
      required:
        - server
        - username
      type: object
    OperatingSystemType:
      type: string
      description: The operation system required by the code in service.
      enum:
        - Linux
        - Windows
      x-ms-enum:
        name: OperatingSystemType
        modelAsString: true
        values:
          - value: Linux
            description: The required operating system is Linux.
          - value: Windows
            description: The required operating system is Windows.
    ReliableCollectionsRef:
      description: Specifying this parameter adds support for reliable collections
      properties:
        name:
          description: Name of ReliableCollection resource. Right now it's not used and you can use any string.
          type: string
        doNotPersistState:
          description: False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache.
          type: boolean
      required:
        - name
      type: object
    ResourceLimits:
      description: This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted.
      properties:
        memoryInGB:
          description: The memory limit in GB.
          type: number
          format: double
        cpu:
          description: CPU limits in cores. At present, only full cores are supported.
          type: number
          format: double
      type: object
    ResourceRequests:
      description: This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits.
      properties:
        memoryInGB:
          description: The memory request in GB for this container.
          type: number
          format: double
        cpu:
          description: Requested number of CPU cores. At present, only full cores are supported.
          type: number
          format: double
      required:
        - memoryInGB
        - cpu
      type: object
    ResourceRequirements:
      description: This type describes the resource requirements for a container or a service.
      properties:
        requests:
          $ref: '#/components/schemas/ResourceRequests'
          description: Describes the requested resources for a given container.
        limits:
          $ref: '#/components/schemas/ResourceLimits'
          description: Describes the maximum limits on the resources for a given container.
      required:
        - requests
      type: object
    ServiceProperties:
      description: Describes properties of a service resource.
      properties:
        description:
          type: string
          description: User readable description of the service.
        replicaCount:
          type: integer
          description: The number of replicas of the service to create. Defaults to 1 if not specified.
        autoScalingPolicies:
          type: array
          items:
            $ref: '#/components/schemas/AutoScalingPolicy'
          description: Auto scaling policies
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the service.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the service.
        healthState:
          readOnly: true
          $ref: '#/components/schemas/HealthState'
          description: Describes the health state of an application resource.
        unhealthyEvaluation:
          readOnly: true
          type: string
          description: When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.
      type: object
    ServiceReplicaProperties:
      description: Describes the properties of a service replica.
      properties:
        osType:
          $ref: '#/components/schemas/OperatingSystemType'
          description: The operation system required by the code in service.
        codePackages:
          description: Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
          type: array
          items:
            $ref: '#/components/schemas/ContainerCodePackageProperties'
        networkRefs:
          type: array
          description: The names of the private networks that this service needs to be part of.
          items:
            $ref: '#/components/schemas/NetworkRef'
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsRef'
          description: Reference to sinks in DiagnosticsDescription.
      required:
        - osType
        - codePackages
      type: object
    Setting:
      description: Describes a setting for the container. The setting file path can be fetched from environment variable "Fabric_SettingPath". The path for Windows container is "C:\\secrets". The path for Linux container is "/var/secrets".
      properties:
        name:
          description: The name of the setting.
          type: string
        value:
          description: The value of the setting.
          type: string
      type: object
    ServiceReplicaDescription:
      description: Describes a replica of a service resource.
      required:
        - replicaName
      properties:
        osType:
          $ref: '#/components/schemas/OperatingSystemType'
          description: The operation system required by the code in service.
        codePackages:
          description: Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
          type: array
          items:
            $ref: '#/components/schemas/ContainerCodePackageProperties'
        networkRefs:
          type: array
          description: The names of the private networks that this service needs to be part of.
          items:
            $ref: '#/components/schemas/NetworkRef'
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsRef'
          description: Reference to sinks in DiagnosticsDescription.
        replicaName:
          type: string
          description: Name of the replica.
      type: object
    AverageLoadScalingTrigger:
      description: Describes the average load trigger used for auto scaling.
      x-ms-discriminator-value: AverageLoad
      required:
        - metric
        - lowerLoadThreshold
        - upperLoadThreshold
        - scaleIntervalInSeconds
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingTriggerKind'
          description: The type of auto scaling trigger
        metric:
          $ref: '#/components/schemas/AutoScalingMetric'
          description: Description of the metric that is used for scaling.
        lowerLoadThreshold:
          type: number
          format: double
          description: Lower load threshold (if average load is below this threshold, service will scale down).
        upperLoadThreshold:
          type: number
          format: double
          description: Upper load threshold (if average load is above this threshold, service will scale up).
        scaleIntervalInSeconds:
          type: integer
          description: Scale interval that indicates how often will this trigger be checked.
          minimum: 60
      type: object
    ServiceResourceProperties:
      description: This type describes properties of a service resource.
      properties:
        provisioningState:
          type: string
          description: State of the resource.
          readOnly: true
        osType:
          $ref: '#/components/schemas/OperatingSystemType'
          description: The operation system required by the code in service.
        codePackages:
          description: Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
          type: array
          items:
            $ref: '#/components/schemas/ContainerCodePackageProperties'
        networkRefs:
          type: array
          description: The names of the private networks that this service needs to be part of.
          items:
            $ref: '#/components/schemas/NetworkRef'
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsRef'
          description: Reference to sinks in DiagnosticsDescription.
        description:
          type: string
          description: User readable description of the service.
        replicaCount:
          type: integer
          description: The number of replicas of the service to create. Defaults to 1 if not specified.
        autoScalingPolicies:
          type: array
          items:
            $ref: '#/components/schemas/AutoScalingPolicy'
          description: Auto scaling policies
        status:
          readOnly: true
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the service.
        statusDetails:
          readOnly: true
          type: string
          description: Gives additional information about the current status of the service.
        healthState:
          readOnly: true
          $ref: '#/components/schemas/HealthState'
          description: Describes the health state of an application resource.
        unhealthyEvaluation:
          readOnly: true
          type: string
          description: When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.
      type: object
    ServiceResourceDescription:
      description: This type describes a service resource.
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          x-ms-mutability:
            - read
        name:
          type: string
          description: The name of the resource
          x-ms-mutability:
            - read
            - create
            - update
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
          x-ms-mutability:
            - read
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ServiceResourceProperties'
          description: This type describes properties of a service resource.
      type: object
    ServiceResourceDescriptionList:
      description: A pageable list of service resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceResourceDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    ServiceReplicaDescriptionList:
      description: A pageable list of service replicas.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceReplicaDescription'
          description: One page of the list.
        nextLink:
          type: string
          description: URI to fetch the next page of the list.
    ContainerLogs:
      description: Container logs.
      properties:
        content:
          type: string
          description: Container logs.
      type: object
  x-stackQL-resources:
    operations:
      id: azure.service_fabric_mesh.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ServiceFabricMesh~1operations~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    secret:
      id: azure.service_fabric_mesh.secret
      name: secret
      title: secret
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1?api-version=2018-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1?api-version=2018-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secret/methods/get'
          - $ref: '#/components/x-stackQL-resources/secret/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/secret/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/secret/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/secret/methods/delete'
    secret_value:
      id: azure.service_fabric_mesh.secret_value
      name: secret_value
      title: secret_value
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1values~1{secretValueResourceName}~1?api-version=2018-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1values~1{secretValueResourceName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1values~1{secretValueResourceName}~1?api-version=2018-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1values~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secret_value/methods/get'
          - $ref: '#/components/x-stackQL-resources/secret_value/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/secret_value/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/secret_value/methods/delete'
    secret_value_value:
      id: azure.service_fabric_mesh.secret_value_value
      name: secret_value_value
      title: secret_value_value
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1secrets~1{secretResourceName}~1values~1{secretValueResourceName}~1list_value~1?api-version=2018-09-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secret_value_value/methods/list'
        insert: []
        update: []
        delete: []
    volume:
      id: azure.service_fabric_mesh.volume
      name: volume
      title: volume
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1volumes~1{volumeResourceName}~1?api-version=2018-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1volumes~1{volumeResourceName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1volumes~1{volumeResourceName}~1?api-version=2018-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1volumes~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabricMesh~1volumes~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/volume/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/volume/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volume/methods/delete'
    network:
      id: azure.service_fabric_mesh.network
      name: network
      title: network
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1networks~1{networkResourceName}~1?api-version=2018-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1networks~1{networkResourceName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1networks~1{networkResourceName}~1?api-version=2018-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1networks~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabricMesh~1networks~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network/methods/get'
          - $ref: '#/components/x-stackQL-resources/network/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network/methods/delete'
    gateway:
      id: azure.service_fabric_mesh.gateway
      name: gateway
      title: gateway
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1gateways~1{gatewayResourceName}~1?api-version=2018-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1gateways~1{gatewayResourceName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1gateways~1{gatewayResourceName}~1?api-version=2018-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1gateways~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabricMesh~1gateways~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gateway/methods/get'
          - $ref: '#/components/x-stackQL-resources/gateway/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/gateway/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/gateway/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gateway/methods/delete'
    application:
      id: azure.service_fabric_mesh.application
      name: application
      title: application
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1?api-version=2018-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1?api-version=2018-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabricMesh~1applications~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application/methods/get'
          - $ref: '#/components/x-stackQL-resources/application/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/application/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/application/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application/methods/delete'
    service:
      id: azure.service_fabric_mesh.service
      name: service
      title: service
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1services~1{serviceResourceName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1services~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service/methods/get'
          - $ref: '#/components/x-stackQL-resources/service/methods/list'
        insert: []
        update: []
        delete: []
    service_replica:
      id: azure.service_fabric_mesh.service_replica
      name: service_replica
      title: service_replica
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1services~1{serviceResourceName}~1replicas~1{replicaName}~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1services~1{serviceResourceName}~1replicas~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_replica/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_replica/methods/list'
        insert: []
        update: []
        delete: []
    code_package_container_logs:
      id: azure.service_fabric_mesh.code_package_container_logs
      name: code_package_container_logs
      title: code_package_container_logs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabricMesh~1applications~1{applicationResourceName}~1services~1{serviceResourceName}~1replicas~1{replicaName}~1codePackages~1{codePackageName}~1logs~1?api-version=2018-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/code_package_container_logs/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.ServiceFabricMesh/operations/?api-version=2018-09-01-preview:
    get:
      tags:
        - Operations
      summary: Lists all of the available operations.
      description: Lists all the available operations provided by Service Fabric SeaBreeze resource provider.
      operationId: Operations_List
      parameters:
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/?api-version=2018-09-01-preview:
    put:
      operationId: Secret_Create
      summary: Creates or updates a secret resource.
      description: Creates a secret resource with the specified name, description and properties. If a secret resource with the same name exists, then it is updated with the specified description and properties.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      requestBody:
        description: Description for creating a secret resource.
        required: true
        x-ms-requestBody-name: secretResourceDescription
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretResourceDescription'
      tags:
        - Secrets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescription'
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
    get:
      operationId: Secret_Get
      summary: Gets the secret resource with the given name.
      description: Gets the information about the secret resource with the given name. The information include the description and other properties of the secret.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      tags:
        - Secrets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      operationId: Secret_Delete
      summary: Deletes the secret resource.
      description: Deletes the secret resource identified by the name.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      tags:
        - Secrets
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified secret was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/?api-version=2018-09-01-preview:
    get:
      operationId: Secret_ListByResourceGroup
      summary: Gets all the secret resources in a given resource group.
      description: Gets the information about all secret resources in a given resource group. The information include the description and other properties of the Secret.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      tags:
        - Secrets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/secrets/?api-version=2018-09-01-preview:
    get:
      operationId: Secret_ListBySubscription
      summary: Gets all the secret resources in a given subscription.
      description: Gets the information about all secret resources in a given resource group. The information include the description and other properties of the secret.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      tags:
        - Secrets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}/?api-version=2018-09-01-preview:
    put:
      operationId: SecretValue_Create
      summary: Adds the specified value as a new version of the specified secret resource.
      description: Creates a new value of the specified secret resource. The name of the value is typically the version identifier. Once created the value cannot be changed.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      requestBody:
        description: Description for creating a value of a secret resource.
        required: true
        x-ms-requestBody-name: secretValueResourceDescription
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretValueResourceDescription'
      tags:
        - SecretValues
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescription'
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
    get:
      operationId: SecretValue_Get
      summary: Gets the specified secret value resource.
      description: Get the information about the specified named secret value resources. The information does not include the actual value of the secret.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      tags:
        - SecretValues
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      operationId: SecretValue_Delete
      summary: Deletes the specified  value of the named secret resource.
      description: Deletes the secret value resource identified by the name. The name of the resource is typically the version associated with that value. Deletion will fail if the specified value is in use.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      tags:
        - SecretValues
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified named secret value was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/?api-version=2018-09-01-preview:
    get:
      operationId: SecretValue_List
      summary: List names of all values of the specified secret resource.
      description: Gets information about all secret value resources of the specified secret resource. The information includes the names of the secret value resources, but not the actual values.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      tags:
        - SecretValues
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}/list_value/?api-version=2018-09-01-preview:
    post:
      operationId: SecretValue_ListValue
      summary: Lists the specified value of the secret resource.
      description: Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      tags:
        - SecretValues
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValue'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeResourceName}/?api-version=2018-09-01-preview:
    put:
      operationId: Volume_Create
      summary: Creates or updates a volume resource.
      description: Creates a volume resource with the specified name, description and properties. If a volume resource with the same name exists, then it is updated with the specified description and properties.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/VolumeResourceNameRequiredPathParam'
      requestBody:
        description: Description for creating a Volume resource.
        required: true
        x-ms-requestBody-name: volumeResourceDescription
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeResourceDescription'
      tags:
        - Volumes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescription'
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
    get:
      operationId: Volume_Get
      summary: Gets the volume resource with the given name.
      description: Gets the information about the volume resource with the given name. The information include the description and other properties of the volume.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/VolumeResourceNameRequiredPathParam'
      tags:
        - Volumes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      operationId: Volume_Delete
      summary: Deletes the volume resource.
      description: Deletes the volume resource identified by the name.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/VolumeResourceNameRequiredPathParam'
      tags:
        - Volumes
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified volume was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/?api-version=2018-09-01-preview:
    get:
      operationId: Volume_ListByResourceGroup
      summary: Gets all the volume resources in a given resource group.
      description: Gets the information about all volume resources in a given resource group. The information include the description and other properties of the Volume.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      tags:
        - Volumes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes/?api-version=2018-09-01-preview:
    get:
      operationId: Volume_ListBySubscription
      summary: Gets all the volume resources in a given subscription.
      description: Gets the information about all volume resources in a given resource group. The information include the description and other properties of the volume.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      tags:
        - Volumes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkResourceName}/?api-version=2018-09-01-preview:
    put:
      operationId: Network_Create
      summary: Creates or updates a network resource.
      description: Creates a network resource with the specified name, description and properties. If a network resource with the same name exists, then it is updated with the specified description and properties.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/NetworkResourceNameRequiredPathParam'
      requestBody:
        description: Description for creating a Network resource.
        required: true
        x-ms-requestBody-name: networkResourceDescription
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkResourceDescription'
      tags:
        - Networks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescription'
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
    get:
      operationId: Network_Get
      summary: Gets the network resource with the given name.
      description: Gets the information about the network resource with the given name. The information include the description and other properties of the network.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/NetworkResourceNameRequiredPathParam'
      tags:
        - Networks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      operationId: Network_Delete
      summary: Deletes the network resource.
      description: Deletes the network resource identified by the name.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/NetworkResourceNameRequiredPathParam'
      tags:
        - Networks
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified network was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/?api-version=2018-09-01-preview:
    get:
      operationId: Network_ListByResourceGroup
      summary: Gets all the network resources in a given resource group.
      description: Gets the information about all network resources in a given resource group. The information include the description and other properties of the Network.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      tags:
        - Networks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/networks/?api-version=2018-09-01-preview:
    get:
      operationId: Network_ListBySubscription
      summary: Gets all the network resources in a given subscription.
      description: Gets the information about all network resources in a given resource group. The information include the description and other properties of the network.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      tags:
        - Networks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}/?api-version=2018-09-01-preview:
    put:
      operationId: Gateway_Create
      summary: Creates or updates a gateway resource.
      description: Creates a gateway resource with the specified name, description and properties. If a gateway resource with the same name exists, then it is updated with the specified description and properties. Use gateway resources to create a gateway for public connectivity for services within your application.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/GatewayResourceNameRequiredPathParam'
      requestBody:
        description: Description for creating a Gateway resource.
        required: true
        x-ms-requestBody-name: gatewayResourceDescription
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayResourceDescription'
      tags:
        - Gateways
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescription'
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
    get:
      operationId: Gateway_Get
      summary: Gets the gateway resource with the given name.
      description: Gets the information about the gateway resource with the given name. The information include the description and other properties of the gateway.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/GatewayResourceNameRequiredPathParam'
      tags:
        - Gateways
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      operationId: Gateway_Delete
      summary: Deletes the gateway resource.
      description: Deletes the gateway resource identified by the name.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/GatewayResourceNameRequiredPathParam'
      tags:
        - Gateways
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified gateway was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/?api-version=2018-09-01-preview:
    get:
      operationId: Gateway_ListByResourceGroup
      summary: Gets all the gateway resources in a given resource group.
      description: Gets the information about all gateway resources in a given resource group. The information include the description and other properties of the Gateway.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      tags:
        - Gateways
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/gateways/?api-version=2018-09-01-preview:
    get:
      operationId: Gateway_ListBySubscription
      summary: Gets all the gateway resources in a given subscription.
      description: Gets the information about all gateway resources in a given resource group. The information include the description and other properties of the gateway.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      tags:
        - Gateways
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/?api-version=2018-09-01-preview:
    put:
      operationId: Application_Create
      summary: Creates or updates an application resource.
      description: Creates an application resource with the specified name, description and properties. If an application resource with the same name exists, then it is updated with the specified description and properties.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      requestBody:
        description: Description for creating a Application resource.
        required: true
        x-ms-requestBody-name: applicationResourceDescription
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResourceDescription'
      tags:
        - Applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescription'
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
    get:
      operationId: Application_Get
      summary: Gets the application resource with the given name.
      description: Gets the information about the application resource with the given name. The information include the description and other properties of the application.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      tags:
        - Applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      operationId: Application_Delete
      summary: Deletes the application resource.
      description: Deletes the application resource identified by the name.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      tags:
        - Applications
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified application was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/?api-version=2018-09-01-preview:
    get:
      operationId: Application_ListByResourceGroup
      summary: Gets all the application resources in a given resource group.
      description: Gets the information about all application resources in a given resource group. The information include the description and other properties of the Application.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      tags:
        - Applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/applications/?api-version=2018-09-01-preview:
    get:
      operationId: Application_ListBySubscription
      summary: Gets all the application resources in a given subscription.
      description: Gets the information about all application resources in a given resource group. The information include the description and other properties of the application.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      tags:
        - Applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/?api-version=2018-09-01-preview:
    get:
      operationId: Service_Get
      summary: Gets the service resource with the given name.
      description: Gets the information about the service resource with the given name. The information include the description and other properties of the service.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
      tags:
        - Services
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/?api-version=2018-09-01-preview:
    get:
      operationId: Service_List
      summary: Lists all the service resources.
      description: Gets the information about all services of an application resource. The information include the description and other properties of the Service.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      tags:
        - Services
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}/?api-version=2018-09-01-preview:
    get:
      operationId: ServiceReplica_Get
      summary: Gets the given replica of the service of an application.
      description: Gets the information about the service replica with the given name. The information include the description and other properties of the service replica.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ReplicaNameRequiredPathParam'
      tags:
        - ServiceReplicas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceReplicaDescription'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/?api-version=2018-09-01-preview:
    get:
      operationId: ServiceReplica_List
      summary: Gets replicas of a given service.
      description: Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
      tags:
        - ServiceReplicas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceReplicaDescriptionList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}/codePackages/{codePackageName}/logs/?api-version=2018-09-01-preview:
    get:
      operationId: CodePackage_GetContainerLogs
      summary: Gets the logs from the container.
      description: Gets the logs for the container of the specified code package of the service replica.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ReplicaNameRequiredPathParam'
        - $ref: '#/components/parameters/CodePackageNameRequiredPathParam'
        - $ref: '#/components/parameters/TailOptionalQueryParam'
      tags:
        - CodePackages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerLogs'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
