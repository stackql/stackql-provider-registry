openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Data Share
  description: Azure Data Share is a cloud-based service that helps customers share data with other organizations. Azure Data Share provides centralized management, monitoring, and governance for sharing data from multiple Azure data sources. Using this service, you can quickly create shares that consist of multiple datasets from a variety of Azure data stores. You can invite your customers and external partners to access these shares through incremental snapshots of your data and revoke access as needed.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    accountName:
      name: accountName
      in: path
      description: The name of the share account.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: The api version to use.
      required: false
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The resource group name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription identifier
      required: true
      schema:
        type: string
  schemas:
    Account:
      description: An account data transfer object.
      required:
        - identity
      properties:
        location:
          description: Location of the azure resource.
          type: string
        tags:
          description: Tags on the azure resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/Identity'
          description: Identity Info on the Account
        properties:
          $ref: '#/components/schemas/AccountProperties'
          description: Properties on the account
          x-ms-client-flatten: true
      type: object
    AccountList:
      description: List response for get Accounts.
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Account'
    AccountProperties:
      description: Account property bag.
      type: object
      properties:
        createdAt:
          format: date-time
          description: Time at which the account was created.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the Account
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        userEmail:
          description: Email of the user who created the resource
          type: string
          readOnly: true
        userName:
          description: Name of the user who created the resource
          type: string
          readOnly: true
    AccountUpdateParameters:
      description: Update parameters for accounts
      type: object
      properties:
        tags:
          description: Tags on the azure resource.
          type: object
          additionalProperties:
            type: string
    ADLSGen1FileDataSet:
      description: An ADLS Gen 1 file data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen1File
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen1FileProperties'
          description: ADLS Gen 1 file data set properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen1FileProperties:
      description: Properties of the ADLS Gen1 file data set.
      required:
        - subscriptionId
        - resourceGroup
        - accountName
        - folderPath
        - fileName
      type: object
      properties:
        accountName:
          description: The ADLS account name.
          type: string
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        fileName:
          description: The file name in the ADLS account.
          type: string
        folderPath:
          description: The folder path within the ADLS account.
          type: string
        resourceGroup:
          description: Resource group of ADLS account.
          type: string
        subscriptionId:
          description: Subscription id of ADLS account.
          type: string
    ADLSGen1FolderDataSet:
      description: An ADLS Gen 1 folder data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen1Folder
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen1FolderProperties'
          description: ADLS Gen 1 folder data set properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen1FolderProperties:
      description: Properties of the ADLS Gen1 folder data set.
      required:
        - subscriptionId
        - resourceGroup
        - accountName
        - folderPath
      type: object
      properties:
        accountName:
          description: The ADLS account name.
          type: string
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        folderPath:
          description: The folder path within the ADLS account.
          type: string
        resourceGroup:
          description: Resource group of ADLS account.
          type: string
        subscriptionId:
          description: Subscription id of ADLS account.
          type: string
    ADLSGen2FileDataSet:
      description: An ADLS Gen 2 file data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen2File
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen2FileProperties'
          description: ADLS Gen 2 file data set properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen2FileDataSetMapping:
      description: An ADLS Gen2 file data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen2File
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen2FileDataSetMappingProperties'
          description: ADLS Gen2 file data set mapping properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen2FileDataSetMappingProperties:
      description: ADLS Gen 2 file data set mapping property bag.
      required:
        - fileSystem
        - filePath
        - subscriptionId
        - resourceGroup
        - storageAccountName
        - dataSetId
      type: object
      properties:
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        filePath:
          description: File path within the file system.
          type: string
        fileSystem:
          description: File system to which the file belongs.
          type: string
        outputType:
          description: Type of output file
          enum:
            - Csv
            - Parquet
          type: string
          x-ms-enum:
            name: outputType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        resourceGroup:
          description: Resource group of storage account.
          type: string
        storageAccountName:
          description: Storage account name of the source data set.
          type: string
        subscriptionId:
          description: Subscription id of storage account.
          type: string
    ADLSGen2FileProperties:
      description: Properties of the ADLS Gen2 file data set.
      required:
        - fileSystem
        - filePath
        - subscriptionId
        - resourceGroup
        - storageAccountName
      type: object
      properties:
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        filePath:
          description: File path within the file system.
          type: string
        fileSystem:
          description: File system to which the file belongs.
          type: string
        resourceGroup:
          description: Resource group of storage account
          type: string
        storageAccountName:
          description: Storage account name of the source data set
          type: string
        subscriptionId:
          description: Subscription id of storage account
          type: string
    ADLSGen2FileSystemDataSet:
      description: An ADLS Gen 2 file system data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen2FileSystem
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen2FileSystemProperties'
          description: ADLS Gen 2 file system data set properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen2FileSystemDataSetMapping:
      description: An ADLS Gen2 file system data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen2FileSystem
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen2FileSystemDataSetMappingProperties'
          description: ADLS Gen2 file system data set mapping properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen2FileSystemDataSetMappingProperties:
      description: ADLS Gen 2 file system data set mapping property bag.
      required:
        - fileSystem
        - subscriptionId
        - resourceGroup
        - storageAccountName
        - dataSetId
      type: object
      properties:
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        fileSystem:
          description: The file system name.
          type: string
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        resourceGroup:
          description: Resource group of storage account.
          type: string
        storageAccountName:
          description: Storage account name of the source data set.
          type: string
        subscriptionId:
          description: Subscription id of storage account.
          type: string
    ADLSGen2FileSystemProperties:
      description: Properties of the ADLS Gen2 file system data set.
      required:
        - fileSystem
        - subscriptionId
        - resourceGroup
        - storageAccountName
      type: object
      properties:
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        fileSystem:
          description: The file system name.
          type: string
        resourceGroup:
          description: Resource group of storage account
          type: string
        storageAccountName:
          description: Storage account name of the source data set
          type: string
        subscriptionId:
          description: Subscription id of storage account
          type: string
    ADLSGen2FolderDataSet:
      description: An ADLS Gen 2 folder data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen2Folder
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen2FolderProperties'
          description: ADLS Gen 2 folder data set properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen2FolderDataSetMapping:
      description: An ADLS Gen2 folder data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: AdlsGen2Folder
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ADLSGen2FolderDataSetMappingProperties'
          description: ADLS Gen2 folder data set mapping properties.
          x-ms-client-flatten: true
      type: object
    ADLSGen2FolderDataSetMappingProperties:
      description: ADLS Gen 2 folder data set mapping property bag.
      required:
        - fileSystem
        - folderPath
        - subscriptionId
        - resourceGroup
        - storageAccountName
        - dataSetId
      type: object
      properties:
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        fileSystem:
          description: File system to which the folder belongs.
          type: string
        folderPath:
          description: Folder path within the file system.
          type: string
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        resourceGroup:
          description: Resource group of storage account.
          type: string
        storageAccountName:
          description: Storage account name of the source data set.
          type: string
        subscriptionId:
          description: Subscription id of storage account.
          type: string
    ADLSGen2FolderProperties:
      description: Properties of the ADLS Gen2 folder data set.
      required:
        - fileSystem
        - folderPath
        - subscriptionId
        - resourceGroup
        - storageAccountName
      type: object
      properties:
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        fileSystem:
          description: File system to which the folder belongs.
          type: string
        folderPath:
          description: Folder path within the file system.
          type: string
        resourceGroup:
          description: Resource group of storage account
          type: string
        storageAccountName:
          description: Storage account name of the source data set
          type: string
        subscriptionId:
          description: Subscription id of storage account
          type: string
    BlobContainerDataSet:
      description: An Azure storage blob container data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: Container
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/BlobContainerProperties'
          description: Blob container data set properties.
          x-ms-client-flatten: true
      type: object
    BlobContainerDataSetMapping:
      description: A Blob container data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: Container
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/BlobContainerMappingProperties'
          description: Blob container data set mapping properties.
          x-ms-client-flatten: true
      type: object
    BlobContainerMappingProperties:
      description: Azure storage Blob container data set mapping property bag.
      required:
        - containerName
        - subscriptionId
        - resourceGroup
        - storageAccountName
        - dataSetId
      type: object
      properties:
        containerName:
          description: BLOB Container name.
          type: string
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        resourceGroup:
          description: Resource group of storage account.
          type: string
        storageAccountName:
          description: Storage account name of the source data set.
          type: string
        subscriptionId:
          description: Subscription id of storage account.
          type: string
    BlobContainerProperties:
      description: Properties of the BLOB container data set.
      required:
        - containerName
        - subscriptionId
        - resourceGroup
        - storageAccountName
      type: object
      properties:
        containerName:
          description: BLOB Container name.
          type: string
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        resourceGroup:
          description: Resource group of storage account
          type: string
        storageAccountName:
          description: Storage account name of the source data set
          type: string
        subscriptionId:
          description: Subscription id of storage account
          type: string
    BlobDataSet:
      description: An Azure storage blob data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: Blob
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/BlobProperties'
          description: Blob data set properties.
          x-ms-client-flatten: true
      type: object
    BlobDataSetMapping:
      description: A Blob data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: Blob
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/BlobMappingProperties'
          description: Blob data set mapping properties.
          x-ms-client-flatten: true
      type: object
    BlobFolderDataSet:
      description: An Azure storage blob folder data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: BlobFolder
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/BlobFolderProperties'
          description: Blob folder data set properties.
          x-ms-client-flatten: true
      type: object
    BlobFolderDataSetMapping:
      description: A Blob folder data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: BlobFolder
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/BlobFolderMappingProperties'
          description: Blob folder data set mapping properties.
          x-ms-client-flatten: true
      type: object
    BlobFolderMappingProperties:
      description: Azure storage Blob folder data set mapping property bag.
      required:
        - containerName
        - prefix
        - subscriptionId
        - resourceGroup
        - storageAccountName
        - dataSetId
      type: object
      properties:
        containerName:
          description: Container that has the file path.
          type: string
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        prefix:
          description: Prefix for blob folder
          type: string
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        resourceGroup:
          description: Resource group of storage account.
          type: string
        storageAccountName:
          description: Storage account name of the source data set.
          type: string
        subscriptionId:
          description: Subscription id of storage account.
          type: string
    BlobFolderProperties:
      description: Properties of the blob folder data set.
      required:
        - containerName
        - prefix
        - subscriptionId
        - resourceGroup
        - storageAccountName
      type: object
      properties:
        containerName:
          description: Container that has the file path.
          type: string
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        prefix:
          description: Prefix for blob folder
          type: string
        resourceGroup:
          description: Resource group of storage account
          type: string
        storageAccountName:
          description: Storage account name of the source data set
          type: string
        subscriptionId:
          description: Subscription id of storage account
          type: string
    BlobMappingProperties:
      description: Azure storage Blob data set mapping property bag.
      required:
        - containerName
        - filePath
        - subscriptionId
        - resourceGroup
        - storageAccountName
        - dataSetId
      type: object
      properties:
        containerName:
          description: Container that has the file path.
          type: string
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        filePath:
          description: File path within the source data set
          type: string
        outputType:
          description: File output type
          enum:
            - Csv
            - Parquet
          type: string
          x-ms-enum:
            name: outputType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        resourceGroup:
          description: Resource group of storage account.
          type: string
        storageAccountName:
          description: Storage account name of the source data set.
          type: string
        subscriptionId:
          description: Subscription id of storage account.
          type: string
    BlobProperties:
      description: Properties of the blob data set.
      required:
        - containerName
        - filePath
        - subscriptionId
        - resourceGroup
        - storageAccountName
      type: object
      properties:
        containerName:
          description: Container that has the file path.
          type: string
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        filePath:
          description: File path within the source data set
          type: string
        resourceGroup:
          description: Resource group of storage account
          type: string
        storageAccountName:
          description: Storage account name of the source data set
          type: string
        subscriptionId:
          description: Subscription id of storage account
          type: string
    ConsumerInvitation:
      description: A consumer Invitation data transfer object.
      required:
        - properties
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ConsumerInvitationProperties'
          description: Properties on the account
          x-ms-client-flatten: true
      type: object
    ConsumerInvitationList:
      description: List response for get InvitationList
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ConsumerInvitation'
    ConsumerInvitationProperties:
      description: Properties of consumer invitation
      required:
        - invitationId
      type: object
      properties:
        dataSetCount:
          format: int32
          description: Number of data sets in a share
          type: integer
          readOnly: true
        description:
          description: Description shared when the invitation was created
          type: string
          readOnly: true
        expirationDate:
          format: date-time
          description: The expiration date for the share subscription created by accepting the invitation.
          type: string
          readOnly: true
        invitationId:
          description: Unique id of the invitation.
          type: string
        invitationStatus:
          description: The status of the invitation.
          enum:
            - Pending
            - Accepted
            - Rejected
            - Withdrawn
          type: string
          readOnly: true
          x-ms-enum:
            name: invitationStatus
            modelAsString: true
        location:
          description: invitation location
          type: string
          readOnly: true
        providerEmail:
          description: Email of the provider who created the resource
          type: string
          readOnly: true
        providerName:
          description: Name of the provider who created the resource
          type: string
          readOnly: true
        providerTenantName:
          description: Tenant name of the provider who created the resource
          type: string
          readOnly: true
        respondedAt:
          format: date-time
          description: The time the recipient responded to the invitation.
          type: string
          readOnly: true
        sentAt:
          format: date-time
          description: Gets the time at which the invitation was sent.
          type: string
          readOnly: true
        shareName:
          description: Gets the source share Name.
          type: string
          readOnly: true
        termsOfUse:
          description: Terms of use shared when the invitation was created
          type: string
          readOnly: true
        userEmail:
          description: Email of the user who created the resource
          type: string
          readOnly: true
        userName:
          description: Name of the user who created the resource
          type: string
          readOnly: true
    ConsumerSourceDataSet:
      description: A consumer side dataSet data transfer object.
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ConsumerSourceDataSetProperties'
          description: source dataSet properties
          x-ms-client-flatten: true
      type: object
    ConsumerSourceDataSetList:
      description: A consumer side list of source dataSets
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ConsumerSourceDataSet'
    ConsumerSourceDataSetProperties:
      description: Properties of consumer source dataSet
      type: object
      properties:
        dataSetId:
          description: DataSet Id
          type: string
          readOnly: true
        dataSetLocation:
          description: Location of the data set.
          type: string
          readOnly: true
        dataSetName:
          description: DataSet name
          type: string
          readOnly: true
        dataSetPath:
          description: DataSet path
          type: string
          readOnly: true
        dataSetType:
          description: Type of data set
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetType
            modelAsString: true
    DataSet:
      description: A DataSet data transfer object.
      required:
        - kind
      discriminator:
        propertyName: kind
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
      type: object
    DataSetList:
      description: List response for get DataSets
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/DataSet'
    DataSetMapping:
      description: A data set mapping data transfer object.
      required:
        - kind
      discriminator:
        propertyName: kind
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
      type: object
    DataSetMappingList:
      description: List response for get DataSetMappings
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/DataSetMapping'
    DataShareError:
      description: The data share error model.
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/DataShareErrorInfo'
          description: The data share error body
    DataShareErrorInfo:
      description: The data share error body model.
      required:
        - code
        - message
      type: object
      properties:
        code:
          description: Code of the error
          type: string
        details:
          description: Nested details of the error model
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/DataShareErrorInfo'
        message:
          description: Message of the error
          type: string
        target:
          description: Target of the error
          type: string
    DefaultDto:
      description: Base data transfer object implementation for default resources.
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        location:
          description: Location of the azure resource.
          type: string
        tags:
          description: Tags on the azure resource.
          type: object
          additionalProperties:
            type: string
      type: object
    DimensionProperties:
      description: properties for dimension
      type: object
      properties:
        displayName:
          description: localized display name of the dimension to customer
          type: string
        name:
          description: dimension name
          type: string
    EmailRegistration:
      description: Dto for tenant domain registration
      type: object
      properties:
        activationCode:
          description: Activation code for the registration
          type: string
        activationExpirationDate:
          format: date-time
          description: Date of the activation expiration
          type: string
          readOnly: true
        email:
          description: The email to register
          type: string
          readOnly: true
        registrationStatus:
          description: Registration status
          enum:
            - ActivationPending
            - Activated
            - ActivationAttemptsExhausted
          type: string
          readOnly: true
          x-ms-enum:
            name: registrationStatus
            modelAsString: true
        tenantId:
          description: The tenant to register
          type: string
          readOnly: true
    Identity:
      description: Identity of resource
      type: object
      properties:
        principalId:
          description: service principal Id
          type: string
          readOnly: true
        tenantId:
          description: Tenant Id
          type: string
          readOnly: true
        type:
          description: Identity Type
          enum:
            - SystemAssigned
          type: string
          x-ms-enum:
            name: type
            modelAsString: true
    Invitation:
      description: A Invitation data transfer object.
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/InvitationProperties'
          description: Properties on the Invitation
          x-ms-client-flatten: true
      type: object
    InvitationList:
      description: List response for get InvitationList
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
    InvitationProperties:
      description: Invitation property bag.
      type: object
      properties:
        expirationDate:
          format: date-time
          description: The expiration date for the invitation and share subscription.
          type: string
        invitationId:
          description: unique invitation id
          type: string
          readOnly: true
        invitationStatus:
          description: The status of the invitation.
          enum:
            - Pending
            - Accepted
            - Rejected
            - Withdrawn
          type: string
          readOnly: true
          x-ms-enum:
            name: invitationStatus
            modelAsString: true
        respondedAt:
          format: date-time
          description: The time the recipient responded to the invitation.
          type: string
          readOnly: true
        sentAt:
          format: date-time
          description: Gets the time at which the invitation was sent.
          type: string
          readOnly: true
        targetActiveDirectoryId:
          description: The target Azure AD Id. Can't be combined with email.
          type: string
        targetEmail:
          description: The email the invitation is directed to.
          type: string
        targetObjectId:
          description: "The target user or application Id that invitation is being sent to.\r\nMust be specified along TargetActiveDirectoryId. This enables sending\r\ninvitations to specific users or applications in an AD tenant."
          type: string
        userEmail:
          description: Email of the user who created the resource
          type: string
          readOnly: true
        userName:
          description: Name of the user who created the resource
          type: string
          readOnly: true
    KustoClusterDataSet:
      description: A kusto cluster data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: KustoCluster
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/KustoClusterDataSetProperties'
          description: Kusto cluster data set properties.
          x-ms-client-flatten: true
      type: object
    KustoClusterDataSetMapping:
      description: A Kusto cluster data set mapping
      required:
        - properties
        - kind
      x-ms-discriminator-value: KustoCluster
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/KustoClusterDataSetMappingProperties'
          description: Kusto cluster data set mapping properties.
          x-ms-client-flatten: true
      type: object
    KustoClusterDataSetMappingProperties:
      description: Properties of the Kusto cluster data set mapping
      required:
        - kustoClusterResourceId
        - dataSetId
      type: object
      properties:
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        kustoClusterResourceId:
          description: Resource id of the sink kusto cluster.
          type: string
        location:
          description: Location of the sink kusto cluster.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
    KustoClusterDataSetProperties:
      description: Properties of the kusto cluster data set.
      required:
        - kustoClusterResourceId
      type: object
      properties:
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        kustoClusterResourceId:
          description: Resource id of the kusto cluster.
          type: string
        location:
          description: Location of the kusto cluster.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the kusto cluster data set.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
    KustoDatabaseDataSet:
      description: A kusto database data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: KustoDatabase
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/KustoDatabaseDataSetProperties'
          description: Kusto database data set properties.
          x-ms-client-flatten: true
      type: object
    KustoDatabaseDataSetMapping:
      description: A Kusto database data set mapping
      required:
        - properties
        - kind
      x-ms-discriminator-value: KustoDatabase
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/KustoDatabaseDataSetMappingProperties'
          description: Kusto database data set mapping properties.
          x-ms-client-flatten: true
      type: object
    KustoDatabaseDataSetMappingProperties:
      description: Properties of the Kusto database data set mapping
      required:
        - kustoClusterResourceId
        - dataSetId
      type: object
      properties:
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        kustoClusterResourceId:
          description: Resource id of the sink kusto cluster.
          type: string
        location:
          description: Location of the sink kusto cluster.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
    KustoDatabaseDataSetProperties:
      description: Properties of the kusto database data set.
      required:
        - kustoDatabaseResourceId
      type: object
      properties:
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        kustoDatabaseResourceId:
          description: Resource id of the kusto database.
          type: string
        location:
          description: Location of the kusto cluster.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the kusto database data set.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
    OperationList:
      description: List response for get operations.
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OperationModel'
    OperationMetaLogSpecification:
      description: log specifications for operation api
      type: object
      properties:
        blobDuration:
          description: blob duration of the log
          type: string
        displayName:
          description: localized name of the log category
          type: string
        name:
          description: name of the log category
          type: string
    OperationMetaMetricSpecification:
      description: metric specifications for the operation
      type: object
      properties:
        aggregationType:
          description: aggregation type of metric
          type: string
        dimensions:
          description: properties for dimension
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/DimensionProperties'
        displayDescription:
          description: description of the metric
          type: string
        displayName:
          description: localized name of the metric
          type: string
        enableRegionalMdmAccount:
          description: enable regional mdm account
          type: string
        fillGapWithZero:
          description: fill gap with zero
          type: boolean
        internalMetricName:
          description: internal metric name
          type: string
        name:
          description: name of the metric
          type: string
        resourceIdDimensionNameOverride:
          description: dimension name use to replace resource id if specified
          type: string
        supportedAggregationTypes:
          description: supported aggregation types
          uniqueItems: false
          type: array
          items:
            type: string
        supportedTimeGrainTypes:
          description: supported time grain types
          uniqueItems: false
          type: array
          items:
            type: string
        unit:
          description: units for the metric
          type: string
    OperationMetaPropertyInfo:
      description: properties on meta info
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/OperationMetaServiceSpecification'
          description: meta service specification
    OperationMetaServiceSpecification:
      description: The operation meta service specification
      type: object
      properties:
        logSpecifications:
          description: log specifications for the operation
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OperationMetaLogSpecification'
        metricSpecifications:
          description: metric specifications for the operation
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OperationMetaMetricSpecification'
    OperationModel:
      description: The response model for get operations
      properties:
        display:
          $ref: '#/components/schemas/OperationModelProperties'
          description: Properties on the operation
        name:
          description: Operation name for display purposes
          type: string
        origin:
          description: origin of the operation
          type: string
        properties:
          $ref: '#/components/schemas/OperationMetaPropertyInfo'
          description: properties for the operation meta info
          x-ms-client-flatten: true
      type: object
    OperationModelProperties:
      description: Properties on operations
      type: object
      properties:
        description:
          description: Description of the operation for display purposes
          type: string
        operation:
          description: Name of the operation for display purposes
          type: string
        provider:
          description: Name of the provider for display purposes
          type: string
        resource:
          description: Name of the resource type for display purposes
          type: string
    OperationResponse:
      description: Response for long running operation
      required:
        - status
      type: object
      properties:
        endTime:
          format: date-time
          description: start time
          type: string
        error:
          $ref: '#/components/schemas/DataShareErrorInfo'
          description: The error property when status is failed.
        startTime:
          format: date-time
          description: start time
          type: string
        status:
          description: Operation state of the long running operation.
          enum:
            - Accepted
            - InProgress
            - TransientFailure
            - Succeeded
            - Failed
            - Canceled
          type: string
          x-ms-enum:
            name: status
            modelAsString: true
    ProviderShareSubscription:
      description: A provider side share subscription data transfer object.
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ProviderShareSubscriptionProperties'
          description: properties of providerShareSubscription
          x-ms-client-flatten: true
      type: object
    ProviderShareSubscriptionList:
      description: List response for get ShareSubscription.
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProviderShareSubscription'
    ProviderShareSubscriptionProperties:
      description: Provider share subscription properties
      type: object
      properties:
        consumerEmail:
          description: Email of the consumer who created the share subscription
          type: string
          readOnly: true
        consumerName:
          description: Name of the consumer who created the share subscription
          type: string
          readOnly: true
        consumerTenantName:
          description: Tenant name of the consumer who created the share subscription
          type: string
          readOnly: true
        createdAt:
          format: date-time
          description: created at
          type: string
          readOnly: true
        expirationDate:
          format: date-time
          description: Expiration date of the share subscription in UTC format
          type: string
        providerEmail:
          description: Email of the provider who created the share
          type: string
          readOnly: true
        providerName:
          description: Name of the provider who created the share
          type: string
          readOnly: true
        sharedAt:
          format: date-time
          description: Shared at
          type: string
          readOnly: true
        shareSubscriptionObjectId:
          description: share Subscription Object Id
          type: string
          readOnly: true
        shareSubscriptionStatus:
          description: Gets the status of share subscription
          enum:
            - Active
            - Revoked
            - SourceDeleted
            - Revoking
          type: string
          readOnly: true
          x-ms-enum:
            name: shareSubscriptionStatus
            modelAsString: true
    ProxyDto:
      description: Base data transfer object implementation for proxy resources.
      type: object
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
      x-ms-azure-resource: true
    ScheduledSourceShareSynchronizationSettingProperties:
      description: A Scheduled source synchronization setting data transfer object.
      type: object
      properties:
        recurrenceInterval:
          description: Recurrence Interval
          enum:
            - Hour
            - Day
          type: string
          x-ms-enum:
            name: recurrenceInterval
            modelAsString: true
        synchronizationTime:
          format: date-time
          description: Synchronization time
          type: string
    ScheduledSourceSynchronizationSetting:
      description: A type of synchronization setting based on schedule
      required:
        - kind
      x-ms-discriminator-value: ScheduleBased
      properties:
        kind:
          description: Kind of synchronization setting on share.
          enum:
            - ScheduleBased
          type: string
          x-ms-enum:
            name: sourceShareSynchronizationSettingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ScheduledSourceShareSynchronizationSettingProperties'
          description: Properties of scheduled synchronization
          x-ms-client-flatten: true
      type: object
    ScheduledSynchronizationSetting:
      description: A type of synchronization setting based on schedule
      required:
        - properties
        - kind
      x-ms-discriminator-value: ScheduleBased
      properties:
        kind:
          description: Kind of synchronization setting.
          enum:
            - ScheduleBased
          type: string
          x-ms-enum:
            name: synchronizationSettingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ScheduledSynchronizationSettingProperties'
          description: Properties of scheduled synchronization
          x-ms-client-flatten: true
      type: object
    ScheduledSynchronizationSettingProperties:
      description: A Scheduled synchronization setting data transfer object.
      required:
        - recurrenceInterval
        - synchronizationTime
      type: object
      properties:
        createdAt:
          format: date-time
          description: Time at which the synchronization setting was created.
          type: string
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        recurrenceInterval:
          description: Recurrence Interval
          enum:
            - Hour
            - Day
          type: string
          x-ms-enum:
            name: recurrenceInterval
            modelAsString: true
        synchronizationTime:
          format: date-time
          description: Synchronization time
          type: string
        userName:
          description: Name of the user who created the synchronization setting.
          type: string
          readOnly: true
    ScheduledTrigger:
      description: A type of trigger based on schedule
      required:
        - properties
        - kind
      x-ms-discriminator-value: ScheduleBased
      properties:
        kind:
          description: Kind of synchronization on trigger.
          enum:
            - ScheduleBased
          type: string
          x-ms-enum:
            name: triggerKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ScheduledTriggerProperties'
          description: Properties of scheduled synchronization
          x-ms-client-flatten: true
      type: object
    ScheduledTriggerProperties:
      description: A Scheduled trigger data transfer object.
      required:
        - recurrenceInterval
        - synchronizationTime
      type: object
      properties:
        createdAt:
          format: date-time
          description: Time at which the trigger was created.
          type: string
          readOnly: true
        provisioningState:
          description: Gets the provisioning state
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        recurrenceInterval:
          description: Recurrence Interval
          enum:
            - Hour
            - Day
          type: string
          x-ms-enum:
            name: recurrenceInterval
            modelAsString: true
        synchronizationMode:
          description: Synchronization mode
          enum:
            - Incremental
            - FullSync
          type: string
          x-ms-enum:
            name: synchronizationMode
            modelAsString: true
        synchronizationTime:
          format: date-time
          description: Synchronization time
          type: string
        triggerStatus:
          description: Gets the trigger state
          enum:
            - Active
            - Inactive
            - SourceSynchronizationSettingDeleted
          type: string
          readOnly: true
          x-ms-enum:
            name: triggerStatus
            modelAsString: true
        userName:
          description: Name of the user who created the trigger.
          type: string
          readOnly: true
    Share:
      description: A share data transfer object.
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ShareProperties'
          description: Properties on the share
          x-ms-client-flatten: true
      type: object
    ShareList:
      description: List response for get Shares.
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Share'
    ShareProperties:
      description: Share property bag.
      type: object
      properties:
        createdAt:
          format: date-time
          description: Time at which the share was created.
          type: string
          readOnly: true
        description:
          description: Share description.
          type: string
        provisioningState:
          description: Gets or sets the provisioning state
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        shareKind:
          description: Share kind.
          enum:
            - CopyBased
            - InPlace
          type: string
          x-ms-enum:
            name: shareKind
            modelAsString: true
        terms:
          description: Share terms.
          type: string
        userEmail:
          description: Email of the user who created the resource
          type: string
          readOnly: true
        userName:
          description: Name of the user who created the resource
          type: string
          readOnly: true
    ShareSubscription:
      description: A share subscription data transfer object.
      required:
        - properties
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ShareSubscriptionProperties'
          description: Properties on the share subscription
          x-ms-client-flatten: true
      type: object
    ShareSubscriptionList:
      description: List response for get ShareSubscription.
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ShareSubscription'
    ShareSubscriptionProperties:
      description: Share subscription property bag.
      required:
        - invitationId
        - sourceShareLocation
      type: object
      properties:
        createdAt:
          format: date-time
          description: Time at which the share subscription was created.
          type: string
          readOnly: true
        expirationDate:
          format: date-time
          description: The expiration date of the share subscription.
          type: string
        invitationId:
          description: The invitation id.
          type: string
        providerEmail:
          description: Email of the provider who created the resource
          type: string
          readOnly: true
        providerName:
          description: Name of the provider who created the resource
          type: string
          readOnly: true
        providerTenantName:
          description: Tenant name of the provider who created the resource
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the share subscription
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        shareDescription:
          description: Description of share
          type: string
          readOnly: true
        shareKind:
          description: Kind of share
          enum:
            - CopyBased
            - InPlace
          type: string
          readOnly: true
          x-ms-enum:
            name: shareKind
            modelAsString: true
        shareName:
          description: Name of the share
          type: string
          readOnly: true
        shareSubscriptionStatus:
          description: Gets the current status of share subscription.
          enum:
            - Active
            - Revoked
            - SourceDeleted
            - Revoking
          type: string
          readOnly: true
          x-ms-enum:
            name: shareSubscriptionStatus
            modelAsString: true
        shareTerms:
          description: Terms of a share
          type: string
          readOnly: true
        sourceShareLocation:
          description: Source share location.
          type: string
        userEmail:
          description: Email of the user who created the resource
          type: string
          readOnly: true
        userName:
          description: Name of the user who created the resource
          type: string
          readOnly: true
    ShareSubscriptionSynchronization:
      description: A ShareSubscriptionSynchronization data transfer object.
      required:
        - synchronizationId
      type: object
      properties:
        durationMs:
          format: int32
          description: Synchronization duration
          type: integer
          readOnly: true
        endTime:
          format: date-time
          description: End time of synchronization
          type: string
          readOnly: true
        message:
          description: message of Synchronization
          type: string
          readOnly: true
        startTime:
          format: date-time
          description: start time of synchronization
          type: string
          readOnly: true
        status:
          description: Raw Status
          type: string
          readOnly: true
        synchronizationId:
          description: Synchronization id
          type: string
        synchronizationMode:
          description: Synchronization Mode
          enum:
            - Incremental
            - FullSync
          type: string
          readOnly: true
          x-ms-enum:
            name: synchronizationMode
            modelAsString: true
    ShareSubscriptionSynchronizationList:
      description: A consumer side list of share subscription synchronizations
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ShareSubscriptionSynchronization'
    ShareSynchronization:
      description: A ShareSynchronization data transfer object.
      type: object
      properties:
        consumerEmail:
          description: Email of the user who created the synchronization
          type: string
        consumerName:
          description: Name of the user who created the synchronization
          type: string
        consumerTenantName:
          description: Tenant name of the consumer who created the synchronization
          type: string
        durationMs:
          format: int32
          description: synchronization duration
          type: integer
        endTime:
          format: date-time
          description: End time of synchronization
          type: string
        message:
          description: message of synchronization
          type: string
        startTime:
          format: date-time
          description: start time of synchronization
          type: string
        status:
          description: Raw Status
          type: string
        synchronizationId:
          description: Synchronization id
          type: string
        synchronizationMode:
          description: Synchronization mode
          enum:
            - Incremental
            - FullSync
          type: string
          readOnly: true
          x-ms-enum:
            name: synchronizationMode
            modelAsString: true
    ShareSynchronizationList:
      description: List response for get ShareSynchronization.
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ShareSynchronization'
    SourceShareSynchronizationSetting:
      description: A view of synchronization setting added by the provider
      required:
        - kind
      type: object
      properties:
        kind:
          description: Kind of synchronization setting on share.
          enum:
            - ScheduleBased
          type: string
          x-ms-enum:
            name: sourceShareSynchronizationSettingKind
            modelAsString: true
      discriminator:
        propertyName: kind
    SourceShareSynchronizationSettingList:
      description: List response for get source share Synchronization settings
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SourceShareSynchronizationSetting'
    SqlDBTableDataSet:
      description: A SQL DB table data set.
      required:
        - kind
      x-ms-discriminator-value: SqlDBTable
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/SqlDBTableProperties'
          description: SQL DB table data set properties.
          x-ms-client-flatten: true
      type: object
    SqlDBTableDataSetMapping:
      description: A SQL DB Table data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: SqlDBTable
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/SqlDBTableDataSetMappingProperties'
          description: Sql DB data set mapping properties.
          x-ms-client-flatten: true
      type: object
    SqlDBTableDataSetMappingProperties:
      description: Properties of the SQL DB table data set mapping.
      required:
        - databaseName
        - tableName
        - schemaName
        - sqlServerResourceId
        - dataSetId
      type: object
      properties:
        databaseName:
          description: DatabaseName name of the sink data set
          type: string
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        schemaName:
          description: Schema of the table. Default value is dbo.
          type: string
        sqlServerResourceId:
          description: Resource id of SQL server
          type: string
        tableName:
          description: SQL DB table name.
          type: string
    SqlDBTableProperties:
      description: Properties of the SQL DB table data set.
      required:
        - databaseName
        - tableName
        - schemaName
        - sqlServerResourceId
      type: object
      properties:
        databaseName:
          description: Database name of the source data set
          type: string
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        schemaName:
          description: Schema of the table. Default value is dbo.
          type: string
        sqlServerResourceId:
          description: Resource id of SQL server
          type: string
        tableName:
          description: SQL DB table name.
          type: string
    SqlDWTableDataSet:
      description: A SQL DW table data set.
      required:
        - kind
      x-ms-discriminator-value: SqlDWTable
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/SqlDWTableProperties'
          description: SQL DW table data set properties.
          x-ms-client-flatten: true
      type: object
    SqlDWTableDataSetMapping:
      description: A SQL DW Table data set mapping.
      required:
        - properties
        - kind
      x-ms-discriminator-value: SqlDWTable
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/SqlDWTableDataSetMappingProperties'
          description: Sql DW data set mapping properties.
          x-ms-client-flatten: true
      type: object
    SqlDWTableDataSetMappingProperties:
      description: Properties of the SQL DW table data set mapping.
      required:
        - dataWarehouseName
        - tableName
        - schemaName
        - sqlServerResourceId
        - dataSetId
      type: object
      properties:
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        dataWarehouseName:
          description: DataWarehouse name of the source data set
          type: string
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        schemaName:
          description: Schema of the table. Default value is dbo.
          type: string
        sqlServerResourceId:
          description: Resource id of SQL server
          type: string
        tableName:
          description: SQL DW table name.
          type: string
    SqlDWTableProperties:
      description: Properties of the SQL DW table data set.
      required:
        - dataWarehouseName
        - tableName
        - schemaName
        - sqlServerResourceId
      type: object
      properties:
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        dataWarehouseName:
          description: DataWarehouse name of the source data set
          type: string
        schemaName:
          description: Schema of the table. Default value is dbo.
          type: string
        sqlServerResourceId:
          description: Resource id of SQL server
          type: string
        tableName:
          description: SQL DW table name.
          type: string
    SynapseWorkspaceSqlPoolTableDataSet:
      description: A Synapse Workspace Sql Pool Table data set.
      required:
        - properties
        - kind
      x-ms-discriminator-value: SynapseWorkspaceSqlPoolTable
      properties:
        kind:
          description: Kind of data set.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/SynapseWorkspaceSqlPoolTableDataSetProperties'
          description: Synapse Workspace Sql Pool Table data set properties.
          x-ms-client-flatten: true
      type: object
    SynapseWorkspaceSqlPoolTableDataSetMapping:
      description: A Synapse Workspace Sql Pool Table data set mapping
      required:
        - properties
        - kind
      x-ms-discriminator-value: SynapseWorkspaceSqlPoolTable
      properties:
        kind:
          description: Kind of data set mapping.
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          x-ms-enum:
            name: dataSetMappingKind
            modelAsString: true
        properties:
          $ref: '#/components/schemas/SynapseWorkspaceSqlPoolTableDataSetMappingProperties'
          description: A Synapse Workspace Sql Pool Table data set mapping properties.
          x-ms-client-flatten: true
      type: object
    SynapseWorkspaceSqlPoolTableDataSetMappingProperties:
      description: Properties of the Synapse Workspace SQL Pool Table data set mapping
      required:
        - synapseWorkspaceSqlPoolTableResourceId
        - dataSetId
      type: object
      properties:
        dataSetId:
          description: The id of the source data set.
          type: string
        dataSetMappingStatus:
          description: Gets the status of the data set mapping.
          enum:
            - Ok
            - Broken
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetMappingStatus
            modelAsString: true
        provisioningState:
          description: Provisioning state of the data set mapping.
          enum:
            - Succeeded
            - Creating
            - Deleting
            - Moving
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
        synapseWorkspaceSqlPoolTableResourceId:
          description: Resource id of the Synapse Workspace SQL Pool Table
          type: string
    SynapseWorkspaceSqlPoolTableDataSetProperties:
      description: Properties of the Synapse Workspace SQL Pool Table data set.
      required:
        - synapseWorkspaceSqlPoolTableResourceId
      type: object
      properties:
        dataSetId:
          description: Unique id for identifying a data set resource
          type: string
          readOnly: true
        synapseWorkspaceSqlPoolTableResourceId:
          description: Resource id of the Synapse Workspace SQL Pool Table
          type: string
    SynchronizationDetails:
      description: Synchronization details at data set level
      type: object
      properties:
        dataSetId:
          description: Id of data set
          type: string
          readOnly: true
        dataSetType:
          description: Type of the data set
          enum:
            - Blob
            - Container
            - BlobFolder
            - AdlsGen2FileSystem
            - AdlsGen2Folder
            - AdlsGen2File
            - AdlsGen1Folder
            - AdlsGen1File
            - KustoCluster
            - KustoDatabase
            - SqlDBTable
            - SqlDWTable
            - SynapseWorkspaceSqlPoolTable
          type: string
          readOnly: true
          x-ms-enum:
            name: dataSetType
            modelAsString: true
        durationMs:
          format: int32
          description: Duration of data set level copy
          type: integer
          readOnly: true
        endTime:
          format: date-time
          description: End time of data set level copy
          type: string
          readOnly: true
        filesRead:
          format: int64
          description: The number of files read from the source data set
          type: integer
          readOnly: true
        filesWritten:
          format: int64
          description: The number of files written into the sink data set
          type: integer
          readOnly: true
        message:
          description: Error message if any
          type: string
          readOnly: true
        name:
          description: Name of the data set
          type: string
          readOnly: true
        rowsCopied:
          format: int64
          description: The number of files copied into the sink data set
          type: integer
          readOnly: true
        rowsRead:
          format: int64
          description: The number of rows read from the source data set.
          type: integer
          readOnly: true
        sizeRead:
          format: int64
          description: The size of the data read from the source data set in bytes
          type: integer
          readOnly: true
        sizeWritten:
          format: int64
          description: The size of the data written into the sink data set in bytes
          type: integer
          readOnly: true
        startTime:
          format: date-time
          description: Start time of data set level copy
          type: string
          readOnly: true
        status:
          description: Raw Status
          type: string
          readOnly: true
        vCore:
          format: int64
          description: The vCore units consumed for the data set synchronization
          type: integer
          readOnly: true
    SynchronizationDetailsList:
      description: details of synchronization
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SynchronizationDetails'
    SynchronizationSetting:
      description: A Synchronization Setting data transfer object.
      required:
        - kind
      discriminator:
        propertyName: kind
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        kind:
          description: Kind of synchronization setting.
          enum:
            - ScheduleBased
          type: string
          x-ms-enum:
            name: synchronizationSettingKind
            modelAsString: true
      type: object
    SynchronizationSettingList:
      description: List response for get Synchronization settings
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SynchronizationSetting'
    Synchronize:
      description: Payload for the synchronizing the data.
      type: object
      properties:
        synchronizationMode:
          description: Mode of synchronization used in triggers and snapshot sync. Incremental by default
          enum:
            - Incremental
            - FullSync
          type: string
          x-ms-enum:
            name: synchronizationMode
            modelAsString: true
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      properties:
        createdAt:
          format: date-time
          description: The timestamp of resource creation (UTC).
          type: string
        createdBy:
          description: The identity that created the resource.
          type: string
        createdByType:
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          format: date-time
          description: The type of identity that last modified the resource.
          type: string
        lastModifiedBy:
          description: The identity that last modified the resource.
          type: string
        lastModifiedByType:
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            name: lastModifiedByType
            modelAsString: true
    Trigger:
      description: A Trigger data transfer object.
      required:
        - kind
      discriminator:
        propertyName: kind
      properties:
        id:
          description: The resource id of the azure resource
          type: string
          readOnly: true
        name:
          description: Name of the azure resource
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: System Data of the Azure resource.
          readOnly: true
        type:
          description: Type of the azure resource
          type: string
          readOnly: true
        kind:
          description: Kind of synchronization on trigger.
          enum:
            - ScheduleBased
          type: string
          x-ms-enum:
            name: triggerKind
            modelAsString: true
      type: object
    TriggerList:
      description: List response for get triggers
      required:
        - value
      type: object
      properties:
        nextLink:
          description: The Url of next result page.
          type: string
        value:
          description: Collection of items of type DataTransferObjects.
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
  x-stackQL-resources:
    accounts:
      id: azure.data_share.accounts
      name: accounts
      title: accounts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataShare~1accounts?api-version=2020-09-01/get'
            operationId: Accounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}?api-version=2020-09-01/get'
            operationId: Accounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Account
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}?api-version=2020-09-01/put'
            operationId: Accounts_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Account
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}?api-version=2020-09-01/delete'
            operationId: Accounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResponse
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}?api-version=2020-09-01/patch'
            operationId: Accounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Account
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts?api-version=2020-09-01/get'
            operationId: Accounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    consumer_invitations:
      id: azure.data_share.consumer_invitations
      name: consumer_invitations
      title: consumer_invitations
      methods:
        list_invitations:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataShare~1listInvitations?api-version=2020-09-01/get'
            operationId: ConsumerInvitations_ListInvitations
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsumerInvitationList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataShare~1locations~1{location}~1consumerInvitations~1{invitationId}?api-version=2020-09-01/get'
            operationId: ConsumerInvitations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsumerInvitation
        reject_invitation:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataShare~1locations~1{location}~1rejectInvitation?api-version=2020-09-01/post'
            operationId: ConsumerInvitations_RejectInvitation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsumerInvitation
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/consumer_invitations/methods/get'
          - $ref: '#/components/x-stackQL-resources/consumer_invitations/methods/list_invitations'
        insert: []
        update: []
        replace: []
        delete: []
    data_sets:
      id: azure.data_share.data_sets
      name: data_sets
      title: data_sets
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1dataSets~1{dataSetName}?api-version=2020-09-01/get'
            operationId: DataSets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataSet
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1dataSets~1{dataSetName}?api-version=2020-09-01/put'
            operationId: DataSets_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataSet
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1dataSets~1{dataSetName}?api-version=2020-09-01/delete'
            operationId: DataSets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_share:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1dataSets?api-version=2020-09-01/get'
            operationId: DataSets_ListByShare
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataSetList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_sets/methods/list_by_share'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_sets/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_sets/methods/delete'
    data_set_mappings:
      id: azure.data_share.data_set_mappings
      name: data_set_mappings
      title: data_set_mappings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1dataSetMappings~1{dataSetMappingName}?api-version=2020-09-01/get'
            operationId: DataSetMappings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataSetMapping
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1dataSetMappings~1{dataSetMappingName}?api-version=2020-09-01/put'
            operationId: DataSetMappings_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataSetMapping
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1dataSetMappings~1{dataSetMappingName}?api-version=2020-09-01/delete'
            operationId: DataSetMappings_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_share_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1dataSetMappings?api-version=2020-09-01/get'
            operationId: DataSetMappings_ListByShareSubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataSetMappingList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_set_mappings/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_set_mappings/methods/list_by_share_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_set_mappings/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_set_mappings/methods/delete'
    email_registrations:
      id: azure.data_share.email_registrations
      name: email_registrations
      title: email_registrations
      methods:
        activate_email:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataShare~1locations~1{location}~1activateEmail?api-version=2020-09-01/post'
            operationId: EmailRegistrations_ActivateEmail
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EmailRegistration
        register_email:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataShare~1locations~1{location}~1registerEmail?api-version=2020-09-01/post'
            operationId: EmailRegistrations_RegisterEmail
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EmailRegistration
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    invitations:
      id: azure.data_share.invitations
      name: invitations
      title: invitations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1invitations~1{invitationName}?api-version=2020-09-01/get'
            operationId: Invitations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Invitation
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1invitations~1{invitationName}?api-version=2020-09-01/put'
            operationId: Invitations_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Invitation
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1invitations~1{invitationName}?api-version=2020-09-01/delete'
            operationId: Invitations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_share:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1invitations?api-version=2020-09-01/get'
            operationId: Invitations_ListByShare
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InvitationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/invitations/methods/get'
          - $ref: '#/components/x-stackQL-resources/invitations/methods/list_by_share'
        insert:
          - $ref: '#/components/x-stackQL-resources/invitations/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/invitations/methods/delete'
    operations:
      id: azure.data_share.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataShare~1operations?api-version=2020-09-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    shares_synchronization_details:
      id: azure.data_share.shares_synchronization_details
      name: shares_synchronization_details
      title: shares_synchronization_details
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1listSynchronizationDetails?api-version=2020-09-01/post'
            operationId: SharesSynchronizationDetails_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SynchronizationDetailsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shares_synchronization_details/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    shares_synchronizations:
      id: azure.data_share.shares_synchronizations
      name: shares_synchronizations
      title: shares_synchronizations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1listSynchronizations?api-version=2020-09-01/post'
            operationId: SharesSynchronizations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareSynchronizationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shares_synchronizations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    provider_share_subscriptions:
      id: azure.data_share.provider_share_subscriptions
      name: provider_share_subscriptions
      title: provider_share_subscriptions
      methods:
        adjust:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1providerShareSubscriptions~1{providerShareSubscriptionId}~1adjust?api-version=2020-09-01/post'
            operationId: ProviderShareSubscriptions_Adjust
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProviderShareSubscription
        reinstate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1providerShareSubscriptions~1{providerShareSubscriptionId}~1reinstate?api-version=2020-09-01/post'
            operationId: ProviderShareSubscriptions_Reinstate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProviderShareSubscription
        revoke:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1providerShareSubscriptions~1{providerShareSubscriptionId}~1revoke?api-version=2020-09-01/post'
            operationId: ProviderShareSubscriptions_Revoke
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProviderShareSubscription
        get_by_share:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1providerShareSubscriptions~1{providerShareSubscriptionId}?api-version=2020-09-01/get'
            operationId: ProviderShareSubscriptions_GetByShare
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProviderShareSubscription
        list_by_share:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1providerShareSubscriptions?api-version=2020-09-01/get'
            operationId: ProviderShareSubscriptions_ListByShare
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProviderShareSubscriptionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provider_share_subscriptions/methods/get_by_share'
          - $ref: '#/components/x-stackQL-resources/provider_share_subscriptions/methods/list_by_share'
        insert: []
        update: []
        replace: []
        delete: []
    shares:
      id: azure.data_share.shares
      name: shares
      title: shares
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}?api-version=2020-09-01/get'
            operationId: Shares_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Share
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}?api-version=2020-09-01/put'
            operationId: Shares_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Share
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}?api-version=2020-09-01/delete'
            operationId: Shares_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResponse
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares?api-version=2020-09-01/get'
            operationId: Shares_ListByAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shares/methods/get'
          - $ref: '#/components/x-stackQL-resources/shares/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/shares/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/shares/methods/delete'
    share_subscriptions:
      id: azure.data_share.share_subscriptions
      name: share_subscriptions
      title: share_subscriptions
      methods:
        cancel_synchronization:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1cancelSynchronization?api-version=2020-09-01/post'
            operationId: ShareSubscriptions_CancelSynchronization
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareSubscriptionSynchronization
        synchronize:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1synchronize?api-version=2020-09-01/post'
            operationId: ShareSubscriptions_Synchronize
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareSubscriptionSynchronization
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}?api-version=2020-09-01/get'
            operationId: ShareSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareSubscription
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}?api-version=2020-09-01/put'
            operationId: ShareSubscriptions_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareSubscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}?api-version=2020-09-01/delete'
            operationId: ShareSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResponse
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions?api-version=2020-09-01/get'
            operationId: ShareSubscriptions_ListByAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareSubscriptionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/share_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/share_subscriptions/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/share_subscriptions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/share_subscriptions/methods/delete'
    consumer_source_data_sets:
      id: azure.data_share.consumer_source_data_sets
      name: consumer_source_data_sets
      title: consumer_source_data_sets
      methods:
        list_by_share_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1consumerSourceDataSets?api-version=2020-09-01/get'
            operationId: ConsumerSourceDataSets_ListByShareSubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsumerSourceDataSetList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/consumer_source_data_sets/methods/list_by_share_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    share_subscriptions_source_share_synchronization_settings:
      id: azure.data_share.share_subscriptions_source_share_synchronization_settings
      name: share_subscriptions_source_share_synchronization_settings
      title: share_subscriptions_source_share_synchronization_settings
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1listSourceShareSynchronizationSettings?api-version=2020-09-01/post'
            operationId: ShareSubscriptionsSourceShareSynchronizationSettings_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SourceShareSynchronizationSettingList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/share_subscriptions_source_share_synchronization_settings/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    share_subscriptions_synchronization_details:
      id: azure.data_share.share_subscriptions_synchronization_details
      name: share_subscriptions_synchronization_details
      title: share_subscriptions_synchronization_details
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1listSynchronizationDetails?api-version=2020-09-01/post'
            operationId: ShareSubscriptionsSynchronizationDetails_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SynchronizationDetailsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/share_subscriptions_synchronization_details/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    share_subscriptions_synchronizations:
      id: azure.data_share.share_subscriptions_synchronizations
      name: share_subscriptions_synchronizations
      title: share_subscriptions_synchronizations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1listSynchronizations?api-version=2020-09-01/post'
            operationId: ShareSubscriptionsSynchronizations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ShareSubscriptionSynchronizationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/share_subscriptions_synchronizations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    synchronization_settings:
      id: azure.data_share.synchronization_settings
      name: synchronization_settings
      title: synchronization_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1synchronizationSettings~1{synchronizationSettingName}?api-version=2020-09-01/get'
            operationId: SynchronizationSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SynchronizationSetting
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1synchronizationSettings~1{synchronizationSettingName}?api-version=2020-09-01/put'
            operationId: SynchronizationSettings_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SynchronizationSetting
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1synchronizationSettings~1{synchronizationSettingName}?api-version=2020-09-01/delete'
            operationId: SynchronizationSettings_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResponse
        list_by_share:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shares~1{shareName}~1synchronizationSettings?api-version=2020-09-01/get'
            operationId: SynchronizationSettings_ListByShare
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SynchronizationSettingList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/synchronization_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/synchronization_settings/methods/list_by_share'
        insert:
          - $ref: '#/components/x-stackQL-resources/synchronization_settings/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/synchronization_settings/methods/delete'
    triggers:
      id: azure.data_share.triggers
      name: triggers
      title: triggers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1triggers~1{triggerName}?api-version=2020-09-01/get'
            operationId: Triggers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Trigger
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1triggers~1{triggerName}?api-version=2020-09-01/put'
            operationId: Triggers_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Trigger
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1triggers~1{triggerName}?api-version=2020-09-01/delete'
            operationId: Triggers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResponse
        list_by_share_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataShare~1accounts~1{accountName}~1shareSubscriptions~1{shareSubscriptionName}~1triggers?api-version=2020-09-01/get'
            operationId: Triggers_ListByShareSubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TriggerList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/get'
          - $ref: '#/components/x-stackQL-resources/triggers/methods/list_by_share_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/delete'
    vw_accounts:
      id: azure.data_share.vw_accounts
      name: vw_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.createdAt') as "created_at",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.userEmail') as "user_email",
              JSON_EXTRACT(properties, '$.userName') as "user_name",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.data_share.accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.createdAt') as "created_at",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.userEmail') as "user_email",
                json_extract_path_text(properties, '$.userName') as "user_name",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.data_share.accounts
                WHERE subscriptionId = 'replace-me';
    vw_consumer_invitations:
      id: azure.data_share.vw_consumer_invitations
      name: vw_consumer_invitations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.dataSetCount') as "data_set_count",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.expirationDate') as "expiration_date",
              JSON_EXTRACT(properties, '$.invitationId') as "invitation_id",
              JSON_EXTRACT(properties, '$.invitationStatus') as "invitation_status",
              JSON_EXTRACT(properties, '$.location') as "location",
              JSON_EXTRACT(properties, '$.providerEmail') as "provider_email",
              JSON_EXTRACT(properties, '$.providerName') as "provider_name",
              JSON_EXTRACT(properties, '$.providerTenantName') as "provider_tenant_name",
              JSON_EXTRACT(properties, '$.respondedAt') as "responded_at",
              JSON_EXTRACT(properties, '$.sentAt') as "sent_at",
              JSON_EXTRACT(properties, '$.shareName') as "share_name",
              JSON_EXTRACT(properties, '$.termsOfUse') as "terms_of_use",
              JSON_EXTRACT(properties, '$.userEmail') as "user_email",
              JSON_EXTRACT(properties, '$.userName') as "user_name",
              location,
              invitationId
              FROM azure.data_share.consumer_invitations
              WHERE location = 'replace-me' AND invitationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.dataSetCount') as "data_set_count",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.expirationDate') as "expiration_date",
                json_extract_path_text(properties, '$.invitationId') as "invitation_id",
                json_extract_path_text(properties, '$.invitationStatus') as "invitation_status",
                json_extract_path_text(properties, '$.location') as "location",
                json_extract_path_text(properties, '$.providerEmail') as "provider_email",
                json_extract_path_text(properties, '$.providerName') as "provider_name",
                json_extract_path_text(properties, '$.providerTenantName') as "provider_tenant_name",
                json_extract_path_text(properties, '$.respondedAt') as "responded_at",
                json_extract_path_text(properties, '$.sentAt') as "sent_at",
                json_extract_path_text(properties, '$.shareName') as "share_name",
                json_extract_path_text(properties, '$.termsOfUse') as "terms_of_use",
                json_extract_path_text(properties, '$.userEmail') as "user_email",
                json_extract_path_text(properties, '$.userName') as "user_name",
                location,
                invitationId
                FROM azure.data_share.consumer_invitations
                WHERE location = 'replace-me' AND invitationId = 'replace-me';
    vw_invitations:
      id: azure.data_share.vw_invitations
      name: vw_invitations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.expirationDate') as "expiration_date",
              JSON_EXTRACT(properties, '$.invitationId') as "invitation_id",
              JSON_EXTRACT(properties, '$.invitationStatus') as "invitation_status",
              JSON_EXTRACT(properties, '$.respondedAt') as "responded_at",
              JSON_EXTRACT(properties, '$.sentAt') as "sent_at",
              JSON_EXTRACT(properties, '$.targetActiveDirectoryId') as "target_active_directory_id",
              JSON_EXTRACT(properties, '$.targetEmail') as "target_email",
              JSON_EXTRACT(properties, '$.targetObjectId') as "target_object_id",
              JSON_EXTRACT(properties, '$.userEmail') as "user_email",
              JSON_EXTRACT(properties, '$.userName') as "user_name",
              subscriptionId,
              resourceGroupName,
              accountName,
              shareName,
              invitationName
              FROM azure.data_share.invitations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND shareName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.expirationDate') as "expiration_date",
                json_extract_path_text(properties, '$.invitationId') as "invitation_id",
                json_extract_path_text(properties, '$.invitationStatus') as "invitation_status",
                json_extract_path_text(properties, '$.respondedAt') as "responded_at",
                json_extract_path_text(properties, '$.sentAt') as "sent_at",
                json_extract_path_text(properties, '$.targetActiveDirectoryId') as "target_active_directory_id",
                json_extract_path_text(properties, '$.targetEmail') as "target_email",
                json_extract_path_text(properties, '$.targetObjectId') as "target_object_id",
                json_extract_path_text(properties, '$.userEmail') as "user_email",
                json_extract_path_text(properties, '$.userName') as "user_name",
                subscriptionId,
                resourceGroupName,
                accountName,
                shareName,
                invitationName
                FROM azure.data_share.invitations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND shareName = 'replace-me';
    vw_provider_share_subscriptions:
      id: azure.data_share.vw_provider_share_subscriptions
      name: vw_provider_share_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.consumerEmail') as "consumer_email",
              JSON_EXTRACT(properties, '$.consumerName') as "consumer_name",
              JSON_EXTRACT(properties, '$.consumerTenantName') as "consumer_tenant_name",
              JSON_EXTRACT(properties, '$.createdAt') as "created_at",
              JSON_EXTRACT(properties, '$.expirationDate') as "expiration_date",
              JSON_EXTRACT(properties, '$.providerEmail') as "provider_email",
              JSON_EXTRACT(properties, '$.providerName') as "provider_name",
              JSON_EXTRACT(properties, '$.sharedAt') as "shared_at",
              JSON_EXTRACT(properties, '$.shareSubscriptionObjectId') as "share_subscription_object_id",
              JSON_EXTRACT(properties, '$.shareSubscriptionStatus') as "share_subscription_status",
              subscriptionId,
              resourceGroupName,
              accountName,
              shareName,
              providerShareSubscriptionId
              FROM azure.data_share.provider_share_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND shareName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.consumerEmail') as "consumer_email",
                json_extract_path_text(properties, '$.consumerName') as "consumer_name",
                json_extract_path_text(properties, '$.consumerTenantName') as "consumer_tenant_name",
                json_extract_path_text(properties, '$.createdAt') as "created_at",
                json_extract_path_text(properties, '$.expirationDate') as "expiration_date",
                json_extract_path_text(properties, '$.providerEmail') as "provider_email",
                json_extract_path_text(properties, '$.providerName') as "provider_name",
                json_extract_path_text(properties, '$.sharedAt') as "shared_at",
                json_extract_path_text(properties, '$.shareSubscriptionObjectId') as "share_subscription_object_id",
                json_extract_path_text(properties, '$.shareSubscriptionStatus') as "share_subscription_status",
                subscriptionId,
                resourceGroupName,
                accountName,
                shareName,
                providerShareSubscriptionId
                FROM azure.data_share.provider_share_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND shareName = 'replace-me';
    vw_shares:
      id: azure.data_share.vw_shares
      name: vw_shares
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.createdAt') as "created_at",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.shareKind') as "share_kind",
              JSON_EXTRACT(properties, '$.terms') as "terms",
              JSON_EXTRACT(properties, '$.userEmail') as "user_email",
              JSON_EXTRACT(properties, '$.userName') as "user_name",
              subscriptionId,
              resourceGroupName,
              accountName,
              shareName
              FROM azure.data_share.shares
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.createdAt') as "created_at",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.shareKind') as "share_kind",
                json_extract_path_text(properties, '$.terms') as "terms",
                json_extract_path_text(properties, '$.userEmail') as "user_email",
                json_extract_path_text(properties, '$.userName') as "user_name",
                subscriptionId,
                resourceGroupName,
                accountName,
                shareName
                FROM azure.data_share.shares
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_share_subscriptions:
      id: azure.data_share.vw_share_subscriptions
      name: vw_share_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              systemData as system_data,
              type as type,
              JSON_EXTRACT(properties, '$.createdAt') as "created_at",
              JSON_EXTRACT(properties, '$.expirationDate') as "expiration_date",
              JSON_EXTRACT(properties, '$.invitationId') as "invitation_id",
              JSON_EXTRACT(properties, '$.providerEmail') as "provider_email",
              JSON_EXTRACT(properties, '$.providerName') as "provider_name",
              JSON_EXTRACT(properties, '$.providerTenantName') as "provider_tenant_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.shareDescription') as "share_description",
              JSON_EXTRACT(properties, '$.shareKind') as "share_kind",
              JSON_EXTRACT(properties, '$.shareName') as "share_name",
              JSON_EXTRACT(properties, '$.shareSubscriptionStatus') as "share_subscription_status",
              JSON_EXTRACT(properties, '$.shareTerms') as "share_terms",
              JSON_EXTRACT(properties, '$.sourceShareLocation') as "source_share_location",
              JSON_EXTRACT(properties, '$.userEmail') as "user_email",
              JSON_EXTRACT(properties, '$.userName') as "user_name",
              subscriptionId,
              resourceGroupName,
              accountName,
              shareSubscriptionName
              FROM azure.data_share.share_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                systemData as system_data,
                type as type,
                json_extract_path_text(properties, '$.createdAt') as "created_at",
                json_extract_path_text(properties, '$.expirationDate') as "expiration_date",
                json_extract_path_text(properties, '$.invitationId') as "invitation_id",
                json_extract_path_text(properties, '$.providerEmail') as "provider_email",
                json_extract_path_text(properties, '$.providerName') as "provider_name",
                json_extract_path_text(properties, '$.providerTenantName') as "provider_tenant_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.shareDescription') as "share_description",
                json_extract_path_text(properties, '$.shareKind') as "share_kind",
                json_extract_path_text(properties, '$.shareName') as "share_name",
                json_extract_path_text(properties, '$.shareSubscriptionStatus') as "share_subscription_status",
                json_extract_path_text(properties, '$.shareTerms') as "share_terms",
                json_extract_path_text(properties, '$.sourceShareLocation') as "source_share_location",
                json_extract_path_text(properties, '$.userEmail') as "user_email",
                json_extract_path_text(properties, '$.userName') as "user_name",
                subscriptionId,
                resourceGroupName,
                accountName,
                shareSubscriptionName
                FROM azure.data_share.share_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DataShare/accounts?api-version=2020-09-01:
    get:
      tags:
        - Account
      summary: List Accounts in a subscription
      description: List Accounts in Subscription
      operationId: Accounts_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}?api-version=2020-09-01:
    get:
      tags:
        - Account
      summary: Get an account under a resource group
      description: Get an account
      operationId: Accounts_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - Account
      summary: Create an account in the given resource group
      description: Create an account
      operationId: Accounts_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The account payload.
        required: true
        x-ms-requestBody-name: account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Account
      summary: Delete an account
      description: DeleteAccount
      operationId: Accounts_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '202':
          description: Accepted
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Account
      summary: Patch a given account
      description: Patch an account
      operationId: Accounts_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The account update parameters.
        required: true
        x-ms-requestBody-name: accountUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts?api-version=2020-09-01:
    get:
      tags:
        - Account
      summary: List Accounts in a resource group
      description: List Accounts in ResourceGroup
      operationId: Accounts_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.DataShare/listInvitations?api-version=2020-09-01:
    get:
      tags:
        - ConsumerInvitation
      summary: List the invitations
      description: Lists invitations
      operationId: ConsumerInvitations_ListInvitations
      parameters:
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: The continuation token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerInvitationList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.DataShare/locations/{location}/consumerInvitations/{invitationId}?api-version=2020-09-01:
    get:
      tags:
        - ConsumerInvitation
      summary: Gets the invitation identified by invitationId
      description: Get an invitation
      operationId: ConsumerInvitations_Get
      parameters:
        - name: location
          in: path
          description: Location of the invitation
          required: true
          schema:
            type: string
        - name: invitationId
          in: path
          description: An invitation id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerInvitation'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /providers/Microsoft.DataShare/locations/{location}/rejectInvitation?api-version=2020-09-01:
    post:
      tags:
        - ConsumerInvitation
      summary: Rejects the invitation identified by invitationId
      description: Reject an invitation
      operationId: ConsumerInvitations_RejectInvitation
      parameters:
        - name: location
          in: path
          description: Location of the invitation
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: An invitation payload
        required: true
        x-ms-requestBody-name: invitation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumerInvitation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerInvitation'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}?api-version=2020-09-01:
    get:
      tags:
        - DataSet
      summary: Get DataSet in a share.
      description: Get a DataSet in a share
      operationId: DataSets_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: dataSetName
          in: path
          description: The name of the dataSet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - DataSet
      summary: Adds a new data set to an existing share.
      description: 'Create a DataSet '
      operationId: DataSets_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share to add the data set to.
          required: true
          schema:
            type: string
        - name: dataSetName
          in: path
          description: The name of the dataSet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The new data set information.
        required: true
        x-ms-requestBody-name: dataSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSet'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    delete:
      tags:
        - DataSet
      summary: Delete DataSet in a share.
      description: Delete a DataSet in a share
      operationId: DataSets_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: dataSetName
          in: path
          description: The name of the dataSet.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets?api-version=2020-09-01:
    get:
      tags:
        - DataSet
      summary: List DataSets in a share.
      description: List DataSets in a share
      operationId: DataSets_ListByShare
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: continuation token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}?api-version=2020-09-01:
    get:
      tags:
        - DataSetMapping
      summary: Get DataSetMapping in a shareSubscription.
      description: Get a DataSetMapping in a shareSubscription
      operationId: DataSetMappings_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - name: dataSetMappingName
          in: path
          description: The name of the dataSetMapping.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetMapping'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - DataSetMapping
      summary: "Maps a source data set in the source share to a sink data set in the share subscription.\r\nEnables copying the data set from source to destination."
      description: 'Create a DataSetMapping '
      operationId: DataSetMappings_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the share subscription which will hold the data set sink.
          required: true
          schema:
            type: string
        - name: dataSetMappingName
          in: path
          description: The name of the data set mapping to be created.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Destination data set configuration details.
        required: true
        x-ms-requestBody-name: dataSetMapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSetMapping'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetMapping'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetMapping'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    delete:
      tags:
        - DataSetMapping
      summary: Delete DataSetMapping in a shareSubscription.
      description: Delete a DataSetMapping in a shareSubscription
      operationId: DataSetMappings_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - name: dataSetMappingName
          in: path
          description: The name of the dataSetMapping.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings?api-version=2020-09-01:
    get:
      tags:
        - DataSetMapping
      summary: List DataSetMappings in a share subscription.
      description: List DataSetMappings in a share subscription
      operationId: DataSetMappings_ListByShareSubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the share subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetMappingList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.DataShare/locations/{location}/activateEmail?api-version=2020-09-01:
    post:
      tags:
        - EmailRegistration
      summary: Activates the tenant and email combination using email code received.
      description: Activate the email registration for the current tenant
      operationId: EmailRegistrations_ActivateEmail
      parameters:
        - name: location
          in: path
          description: Location of the activation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The payload for tenant domain activation.
        required: true
        x-ms-requestBody-name: emailRegistration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRegistration'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRegistration'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /providers/Microsoft.DataShare/locations/{location}/registerEmail?api-version=2020-09-01:
    post:
      tags:
        - EmailRegistration
      summary: Registers the tenant and email combination for verification.
      description: Register an email for the current tenant
      operationId: EmailRegistrations_RegisterEmail
      parameters:
        - name: location
          in: path
          description: Location of the registration
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailRegistration'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}?api-version=2020-09-01:
    get:
      tags:
        - Invitation
      summary: Get Invitation in a share.
      description: Get an invitation in a share
      operationId: Invitations_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: invitationName
          in: path
          description: The name of the invitation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - Invitation
      summary: Sends a new invitation to a recipient to access a share.
      description: 'Create an invitation '
      operationId: Invitations_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share to send the invitation for.
          required: true
          schema:
            type: string
        - name: invitationName
          in: path
          description: The name of the invitation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Invitation details.
        required: true
        x-ms-requestBody-name: invitation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    delete:
      tags:
        - Invitation
      summary: Delete Invitation in a share.
      description: Delete an invitation in a share
      operationId: Invitations_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: invitationName
          in: path
          description: The name of the invitation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations?api-version=2020-09-01:
    get:
      tags:
        - Invitation
      summary: List all Invitations in a share.
      description: List invitations in a share
      operationId: Invitations_ListByShare
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: The continuation token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.DataShare/operations?api-version=2020-09-01:
    get:
      tags:
        - Operation
      summary: Lists the available operations
      description: List of available operations
      operationId: Operations_List
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizationDetails?api-version=2020-09-01:
    post:
      tags:
        - Share
      summary: List data set level details for a share synchronization
      description: List synchronization details
      operationId: SharesSynchronizationDetails_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      requestBody:
        description: Share Synchronization payload.
        required: true
        x-ms-requestBody-name: shareSynchronization
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareSynchronization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationDetailsList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Shares_ListSynchronizationDetails
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizations?api-version=2020-09-01:
    post:
      tags:
        - Share
      summary: List Synchronizations in a share
      description: List synchronizations of a share
      operationId: SharesSynchronizations_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSynchronizationList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Shares_ListSynchronizations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/adjust?api-version=2020-09-01:
    post:
      tags:
        - Share
      summary: Adjust the expiration date of a share subscription in a provider share.
      description: Adjust a share subscription's expiration date in a provider share
      operationId: ProviderShareSubscriptions_Adjust
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: providerShareSubscriptionId
          in: path
          description: To locate shareSubscription
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The provider share subscription
        required: true
        x-ms-requestBody-name: providerShareSubscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderShareSubscription'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderShareSubscription'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/reinstate?api-version=2020-09-01:
    post:
      tags:
        - Share
      summary: Reinstate share subscription in a provider share.
      description: Reinstate share subscription in a provider share
      operationId: ProviderShareSubscriptions_Reinstate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: providerShareSubscriptionId
          in: path
          description: To locate shareSubscription
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The provider share subscription
        required: true
        x-ms-requestBody-name: providerShareSubscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderShareSubscription'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderShareSubscription'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/revoke?api-version=2020-09-01:
    post:
      tags:
        - Share
      summary: Revoke share subscription in a provider share.
      description: Revoke share subscription in a provider share
      operationId: ProviderShareSubscriptions_Revoke
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: providerShareSubscriptionId
          in: path
          description: To locate shareSubscription
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderShareSubscription'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderShareSubscription'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}?api-version=2020-09-01:
    get:
      tags:
        - Share
      summary: Get share subscription in a provider share.
      description: Get share subscription in a provider share
      operationId: ProviderShareSubscriptions_GetByShare
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: providerShareSubscriptionId
          in: path
          description: To locate shareSubscription
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderShareSubscription'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions?api-version=2020-09-01:
    get:
      tags:
        - Share
      summary: List of available share subscriptions to a provider share.
      description: List share subscriptions in a provider share
      operationId: ProviderShareSubscriptions_ListByShare
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation Token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderShareSubscriptionList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}?api-version=2020-09-01:
    get:
      tags:
        - Share
      summary: Get a specified share
      description: 'Get a share '
      operationId: Shares_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share to retrieve.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - Share
      summary: Create a share in the given account.
      description: 'Create a share '
      operationId: Shares_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The share payload
        required: true
        x-ms-requestBody-name: share
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Share'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    delete:
      tags:
        - Share
      summary: Deletes a share
      description: 'Delete a share '
      operationId: Shares_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '202':
          description: Accepted
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares?api-version=2020-09-01:
    get:
      tags:
        - Share
      summary: List of available shares under an account.
      description: List shares in an account
      operationId: Shares_ListByAccount
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation Token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization?api-version=2020-09-01:
    post:
      tags:
        - ShareSubscription
      summary: Request cancellation of a data share snapshot
      description: Request to cancel a synchronization.
      operationId: ShareSubscriptions_CancelSynchronization
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Share Subscription Synchronization payload.
        required: true
        x-ms-requestBody-name: shareSubscriptionSynchronization
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareSubscriptionSynchronization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscriptionSynchronization'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscriptionSynchronization'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/consumerSourceDataSets?api-version=2020-09-01:
    get:
      tags:
        - ShareSubscription
      summary: Get source dataSets of a shareSubscription.
      description: Get source dataSets of a shareSubscription
      operationId: ConsumerSourceDataSets_ListByShareSubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerSourceDataSetList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings?api-version=2020-09-01:
    post:
      tags:
        - ShareSubscription
      summary: Get source share synchronization settings for a shareSubscription.
      description: Get synchronization settings set on a share
      operationId: ShareSubscriptionsSourceShareSynchronizationSettings_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceShareSynchronizationSettingList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ShareSubscriptions_ListSourceShareSynchronizationSettings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails?api-version=2020-09-01:
    post:
      tags:
        - ShareSubscription
      summary: List data set level details for a share subscription synchronization
      description: List synchronization details
      operationId: ShareSubscriptionsSynchronizationDetails_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the share subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      requestBody:
        description: Share Subscription Synchronization payload.
        required: true
        x-ms-requestBody-name: shareSubscriptionSynchronization
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareSubscriptionSynchronization'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationDetailsList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ShareSubscriptions_ListSynchronizationDetails
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations?api-version=2020-09-01:
    post:
      tags:
        - ShareSubscription
      summary: List Synchronizations in a share subscription.
      description: List synchronizations of a share subscription
      operationId: ShareSubscriptionsSynchronizations_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the share subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscriptionSynchronizationList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ShareSubscriptions_ListSynchronizations
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize?api-version=2020-09-01:
    post:
      tags:
        - ShareSubscription
      summary: Initiate an asynchronous data share job
      description: Initiate a copy
      operationId: ShareSubscriptions_Synchronize
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of share subscription
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Synchronize payload
        required: true
        x-ms-requestBody-name: synchronize
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Synchronize'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscriptionSynchronization'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscriptionSynchronization'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}?api-version=2020-09-01:
    get:
      tags:
        - ShareSubscription
      summary: Get shareSubscription in an account.
      description: Get a shareSubscription in an account
      operationId: ShareSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscription'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - ShareSubscription
      summary: Create shareSubscription in an account.
      description: Create a shareSubscription in an account
      operationId: ShareSubscriptions_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: create parameters for shareSubscription
        required: true
        x-ms-requestBody-name: shareSubscription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareSubscription'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscription'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscription'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    delete:
      tags:
        - ShareSubscription
      summary: Delete shareSubscription in an account.
      description: Delete a shareSubscription in an account
      operationId: ShareSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '202':
          description: Accepted
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions?api-version=2020-09-01:
    get:
      tags:
        - ShareSubscription
      summary: List of available share subscriptions under an account.
      description: List share subscriptions in an account
      operationId: ShareSubscriptions_ListByAccount
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation Token
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: Filters the results using OData syntax.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: Sorts the results using OData syntax.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSubscriptionList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}?api-version=2020-09-01:
    get:
      tags:
        - SynchronizationSetting
      summary: Get synchronizationSetting in a share.
      description: Get a synchronizationSetting in a share
      operationId: SynchronizationSettings_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: synchronizationSettingName
          in: path
          description: The name of the synchronizationSetting.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationSetting'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - SynchronizationSetting
      summary: Adds a new synchronization setting to an existing share.
      description: Create a synchronizationSetting
      operationId: SynchronizationSettings_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share to add the synchronization setting to.
          required: true
          schema:
            type: string
        - name: synchronizationSettingName
          in: path
          description: The name of the synchronizationSetting.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The new synchronization setting information.
        required: true
        x-ms-requestBody-name: synchronizationSetting
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynchronizationSetting'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationSetting'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationSetting'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    delete:
      tags:
        - SynchronizationSetting
      summary: Delete synchronizationSetting in a share.
      description: Delete a synchronizationSetting in a share
      operationId: SynchronizationSettings_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - name: synchronizationSettingName
          in: path
          description: The name of the synchronizationSetting .
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '202':
          description: Accepted
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings?api-version=2020-09-01:
    get:
      tags:
        - SynchronizationSetting
      summary: List synchronizationSettings in a share.
      description: List synchronizationSettings in a share
      operationId: SynchronizationSettings_ListByShare
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareName
          in: path
          description: The name of the share.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: continuation token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationSettingList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}?api-version=2020-09-01:
    get:
      tags:
        - Trigger
      summary: Get Trigger in a shareSubscription.
      description: Get a Trigger in a shareSubscription
      operationId: Triggers_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The name of the trigger.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
    put:
      tags:
        - Trigger
      summary: This method creates a trigger for a share subscription
      description: 'Create a Trigger '
      operationId: Triggers_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the share subscription which will hold the data set sink.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The name of the trigger.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Trigger details.
        required: true
        x-ms-requestBody-name: trigger
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Trigger
      summary: Delete Trigger in a shareSubscription.
      description: Delete a Trigger in a shareSubscription
      operationId: Triggers_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the shareSubscription.
          required: true
          schema:
            type: string
        - name: triggerName
          in: path
          description: The name of the trigger.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '202':
          description: Accepted
        '204':
          description: Success
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers?api-version=2020-09-01:
    get:
      tags:
        - Trigger
      summary: List Triggers in a share subscription.
      description: List Triggers in a share subscription
      operationId: Triggers_ListByShareSubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/accountName'
        - name: shareSubscriptionName
          in: path
          description: The name of the share subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
        - name: $skipToken
          in: query
          description: Continuation token
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerList'
        default:
          description: An error response received from the Microsoft.DataShare resource provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShareError'
      x-ms-pageable:
        nextLinkName: nextLink
