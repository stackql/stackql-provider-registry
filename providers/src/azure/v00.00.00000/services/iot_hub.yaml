openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: IoT Hub
  description: The REST APIs for IoT Hub offer programmatic access to the device, messaging, and job services, as well as the resource provider, in IoT Hub. You can access messaging services from within an IoT service running in Azure, or directly over the Internet from any application that can send an HTTPS request and receive an HTTPS response.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription identifier.
      required: true
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: The version of the API.
      required: true
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group that contains the IoT hub.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceName:
      name: resourceName
      in: path
      description: The name of the IoT hub.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    certificateName:
      name: certificateName
      in: path
      description: The name of the certificate
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9-._]{1,64}$
        type: string
    groupId:
      name: groupId
      in: path
      description: The name of the private link resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    privateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    CertificateVerificationDescription:
      description: The JSON-serialized leaf certificate
      type: object
      properties:
        certificate:
          description: base-64 representation of X509 certificate .cer file or just .pem file content.
          type: string
    CertificateListDescription:
      description: The JSON-serialized array of Certificate objects.
      type: object
      properties:
        value:
          description: The array of Certificate objects.
          type: array
          items:
            $ref: '#/components/schemas/CertificateDescription'
    CertificateBodyDescription:
      description: The JSON-serialized X509 Certificate.
      type: object
      properties:
        certificate:
          description: base-64 representation of the X509 leaf certificate .cer file or just .pem file content.
          type: string
        isVerified:
          description: True indicates that the certificate will be created in verified state and proof of possession will not be required.
          type: boolean
    CertificateDescription:
      description: The X509 Certificate.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/CertificateProperties'
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          description: The name of the certificate.
          type: string
          readOnly: true
        etag:
          description: The entity tag.
          type: string
          readOnly: true
        type:
          readOnly: true
          type: string
          description: The resource type.
      type: object
    CertificateWithNonceDescription:
      description: The X509 Certificate.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/CertificatePropertiesWithNonce'
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          description: The name of the certificate.
          type: string
          readOnly: true
        etag:
          description: The entity tag.
          type: string
          readOnly: true
        type:
          readOnly: true
          type: string
          description: The resource type.
      type: object
    SharedAccessSignatureAuthorizationRule:
      description: The properties of an IoT hub shared access policy.
      type: object
      properties:
        keyName:
          description: The name of the shared access policy.
          type: string
        primaryKey:
          description: The primary key.
          type: string
        secondaryKey:
          description: The secondary key.
          type: string
        rights:
          description: The permissions assigned to the shared access policy.
          enum:
            - RegistryRead
            - RegistryWrite
            - ServiceConnect
            - DeviceConnect
            - RegistryRead, RegistryWrite
            - RegistryRead, ServiceConnect
            - RegistryRead, DeviceConnect
            - RegistryWrite, ServiceConnect
            - RegistryWrite, DeviceConnect
            - ServiceConnect, DeviceConnect
            - RegistryRead, RegistryWrite, ServiceConnect
            - RegistryRead, RegistryWrite, DeviceConnect
            - RegistryRead, ServiceConnect, DeviceConnect
            - RegistryWrite, ServiceConnect, DeviceConnect
            - RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect
          type: string
          x-ms-enum:
            name: AccessRights
            modelAsString: false
      required:
        - keyName
        - rights
    CertificateProperties:
      description: The description of an X509 CA Certificate.
      type: object
      properties:
        subject:
          description: The certificate's subject name.
          type: string
          readOnly: true
        expiry:
          description: The certificate's expiration date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        thumbprint:
          description: The certificate's thumbprint.
          type: string
          readOnly: true
        isVerified:
          description: Determines whether certificate has been verified.
          type: boolean
        created:
          description: The certificate's create date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        updated:
          description: The certificate's last update date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        certificate:
          description: The certificate content
          type: string
    CertificatePropertiesWithNonce:
      description: The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow.
      type: object
      properties:
        subject:
          description: The certificate's subject name.
          type: string
          readOnly: true
        expiry:
          description: The certificate's expiration date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        thumbprint:
          description: The certificate's thumbprint.
          type: string
          readOnly: true
        isVerified:
          description: Determines whether certificate has been verified.
          type: boolean
          readOnly: true
        created:
          description: The certificate's create date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        updated:
          description: The certificate's last update date and time.
          type: string
          format: date-time-rfc1123
          readOnly: true
        verificationCode:
          description: The certificate's verification code that will be used for proof of possession.
          type: string
          readOnly: true
        certificate:
          description: The certificate content
          type: string
          readOnly: true
    IotHubProperties:
      description: The properties of an IoT hub.
      type: object
      properties:
        authorizationPolicies:
          description: The shared access policies you can use to secure a connection to the IoT hub.
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule'
          x-ms-identifiers:
            - keyName
        disableLocalAuth:
          description: If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication.
          type: boolean
        disableDeviceSAS:
          description: If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication.
          type: boolean
        disableModuleSAS:
          description: If true, all module scoped SAS keys cannot be used for authentication.
          type: boolean
        restrictOutboundNetworkAccess:
          description: If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList.
          type: boolean
        allowedFqdnList:
          description: List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.
          type: array
          items:
            description: 'FQDN to be allowed for egress. Example: my-eventhub.servicebus.windows.net'
            type: string
        publicNetworkAccess:
          type: string
          description: Whether requests from Public Network are allowed
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            modelAsString: true
            name: PublicNetworkAccess
        ipFilterRules:
          description: The IP filter rules.
          type: array
          items:
            $ref: '#/components/schemas/IpFilterRule'
          x-ms-identifiers:
            - filterName
        networkRuleSets:
          $ref: '#/components/schemas/NetworkRuleSetProperties'
        minTlsVersion:
          type: string
          description: Specifies the minimum TLS version to support for this hub. Can be set to "1.2" to have clients that use a TLS version below 1.2 to be rejected.
        privateEndpointConnections:
          description: Private endpoint connections created on this IotHub
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        provisioningState:
          description: The provisioning state.
          type: string
          readOnly: true
        state:
          description: The hub state.
          type: string
          readOnly: true
        hostName:
          description: The name of the host.
          type: string
          readOnly: true
        eventHubEndpoints:
          description: The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EventHubProperties'
        routing:
          $ref: '#/components/schemas/RoutingProperties'
        storageEndpoints:
          description: The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StorageEndpointProperties'
        messagingEndpoints:
          description: The messaging endpoint properties for the file upload notification queue.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MessagingEndpointProperties'
        enableFileUploadNotifications:
          description: If True, file upload notifications are enabled.
          type: boolean
        cloudToDevice:
          $ref: '#/components/schemas/CloudToDeviceProperties'
        comments:
          description: IoT hub comments.
          type: string
        features:
          description: The capabilities and features enabled for the IoT hub.
          enum:
            - None
            - DeviceManagement
          type: string
          x-ms-enum:
            name: Capabilities
            modelAsString: true
        locations:
          description: Primary and secondary location for iot hub
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/IotHubLocationDescription'
          x-ms-identifiers:
            - location
        enableDataResidency:
          description: This property when set to true, will enable data residency, thus, disabling disaster recovery.
          type: boolean
    IotHubSkuInfo:
      description: Information about the SKU of the IoT hub.
      type: object
      properties:
        name:
          description: The name of the SKU.
          enum:
            - F1
            - S1
            - S2
            - S3
            - B1
            - B2
            - B3
          type: string
          x-ms-enum:
            name: IotHubSku
            modelAsString: true
        tier:
          description: The billing tier for the IoT hub.
          enum:
            - Free
            - Standard
            - Basic
          type: string
          readOnly: true
          x-ms-enum:
            name: IotHubSkuTier
            modelAsString: false
        capacity:
          format: int64
          description: 'The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.'
          type: integer
      required:
        - name
    EventHubProperties:
      description: The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
      type: object
      properties:
        retentionTimeInDays:
          format: int64
          description: 'The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages'
          type: integer
        partitionCount:
          format: int32
          description: 'The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.'
          type: integer
        partitionIds:
          description: The partition ids in the Event Hub-compatible endpoint.
          readOnly: true
          type: array
          items:
            type: string
        path:
          description: The Event Hub-compatible name.
          type: string
          readOnly: true
        endpoint:
          description: The Event Hub-compatible endpoint.
          type: string
          readOnly: true
    StorageEndpointProperties:
      description: The properties of the Azure Storage endpoint for file upload.
      type: object
      properties:
        sasTtlAsIso8601:
          description: 'The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.'
          type: string
          format: duration
        connectionString:
          description: The connection string for the Azure Storage account to which files are uploaded.
          type: string
        containerName:
          description: The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
          type: string
        authenticationType:
          description: Specifies authentication type being used for connecting to the storage account.
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of storage endpoint for file upload.
          $ref: '#/components/schemas/ManagedIdentity'
      required:
        - connectionString
        - containerName
    MessagingEndpointProperties:
      description: The properties of the messaging endpoints used by this IoT hub.
      type: object
      properties:
        lockDurationAsIso8601:
          description: 'The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.'
          type: string
          format: duration
        ttlAsIso8601:
          description: 'The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.'
          type: string
          format: duration
        maxDeliveryCount:
          description: 'The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.'
          format: int32
          type: integer
          minimum: 1
          maximum: 100
    CloudToDeviceProperties:
      description: The IoT hub cloud-to-device messaging properties.
      type: object
      properties:
        maxDeliveryCount:
          description: 'The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.'
          format: int32
          type: integer
          minimum: 1
          maximum: 100
        defaultTtlAsIso8601:
          description: 'The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.'
          type: string
          format: duration
        feedback:
          $ref: '#/components/schemas/FeedbackProperties'
    IpFilterRule:
      description: The IP filter rules for the IoT hub.
      type: object
      properties:
        filterName:
          description: The name of the IP filter rule.
          type: string
        action:
          description: The desired action for requests captured by this rule.
          enum:
            - Accept
            - Reject
          type: string
          x-ms-enum:
            name: IpFilterActionType
            modelAsString: false
        ipMask:
          description: A string that contains the IP address range in CIDR notation for the rule.
          type: string
      required:
        - filterName
        - action
        - ipMask
    NetworkRuleSetProperties:
      description: Network Rule Set Properties of IotHub
      type: object
      properties:
        defaultAction:
          type: string
          description: Default Action for Network Rule Set
          enum:
            - Deny
            - Allow
          x-ms-enum:
            name: DefaultAction
            modelAsString: true
          default: Deny
        applyToBuiltInEventHubEndpoint:
          type: boolean
          description: If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub
        ipRules:
          type: array
          items:
            $ref: '#/components/schemas/NetworkRuleSetIpRule'
          x-ms-identifiers:
            - filterName
          description: List of IP Rules
      required:
        - applyToBuiltInEventHubEndpoint
        - ipRules
    NetworkRuleSetIpRule:
      description: IP Rule to be applied as part of Network Rule Set
      type: object
      properties:
        filterName:
          type: string
          description: Name of the IP filter rule.
        action:
          type: string
          description: IP Filter Action
          enum:
            - Allow
          x-ms-enum:
            name: NetworkRuleIPAction
            modelAsString: true
          default: Allow
        ipMask:
          type: string
          description: A string that contains the IP address range in CIDR notation for the rule.
      required:
        - filterName
        - ipMask
    PrivateLinkResources:
      description: The available private link resources for an IotHub
      type: object
      properties:
        value:
          description: The list of available private link resources for an IotHub
          type: array
          items:
            $ref: '#/components/schemas/GroupIdInformation'
    GroupIdInformation:
      description: The group information for creating a private endpoint on an IotHub
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          $ref: '#/components/schemas/GroupIdInformationProperties'
      type: object
    GroupIdInformationProperties:
      description: The properties for a group information object
      type: object
      properties:
        groupId:
          type: string
          description: The group id
        requiredMembers:
          description: The required members for a specific group id
          type: array
          items:
            type: string
        requiredZoneNames:
          description: The required DNS zones for a specific group id
          type: array
          items:
            type: string
    PrivateEndpointConnectionsList:
      description: The list of private endpoint connections for an IotHub
      type: array
      items:
        $ref: '#/components/schemas/PrivateEndpointConnection'
    PrivateEndpointConnection:
      description: The private endpoint connection of an IotHub
      x-ms-azure-resource: true
      required:
        - properties
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
      type: object
    PrivateEndpointConnectionProperties:
      description: The properties of a private endpoint connection
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
      required:
        - privateLinkServiceConnectionState
    PrivateEndpoint:
      description: The private endpoint property of a private endpoint connection
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
    PrivateLinkServiceConnectionState:
      description: The current state of a private endpoint connection
      type: object
      properties:
        status:
          description: The status of a private endpoint connection
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateLinkServiceConnectionStatus
            modelAsString: true
        description:
          type: string
          description: The description for the current state of a private endpoint connection
        actionsRequired:
          type: string
          description: Actions required for a private endpoint connection
      required:
        - status
        - description
    FeedbackProperties:
      description: The properties of the feedback queue for cloud-to-device messages.
      type: object
      properties:
        lockDurationAsIso8601:
          description: 'The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.'
          type: string
          format: duration
        ttlAsIso8601:
          description: 'The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.'
          type: string
          format: duration
        maxDeliveryCount:
          description: 'The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.'
          format: int32
          type: integer
          minimum: 1
          maximum: 100
    RoutingProperties:
      description: 'The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging'
      type: object
      properties:
        endpoints:
          $ref: '#/components/schemas/RoutingEndpoints'
        routes:
          description: The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
          type: array
          items:
            $ref: '#/components/schemas/RouteProperties'
          x-ms-identifiers:
            - name
        fallbackRoute:
          description: The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default.
          $ref: '#/components/schemas/FallbackRouteProperties'
        enrichments:
          description: 'The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid'
          type: array
          items:
            $ref: '#/components/schemas/EnrichmentProperties'
          x-ms-identifiers:
            - key
    RoutingEndpoints:
      description: The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
      type: object
      properties:
        serviceBusQueues:
          description: The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
          type: array
          items:
            $ref: '#/components/schemas/RoutingServiceBusQueueEndpointProperties'
        serviceBusTopics:
          description: The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
          type: array
          items:
            $ref: '#/components/schemas/RoutingServiceBusTopicEndpointProperties'
        eventHubs:
          description: The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
          type: array
          items:
            $ref: '#/components/schemas/RoutingEventHubProperties'
        storageContainers:
          description: The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
          type: array
          items:
            $ref: '#/components/schemas/RoutingStorageContainerProperties'
        cosmosDBSqlContainers:
          description: The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.
          type: array
          items:
            $ref: '#/components/schemas/RoutingCosmosDBSqlApiProperties'
    RoutingServiceBusQueueEndpointProperties:
      description: The properties related to service bus queue endpoint types.
      type: object
      properties:
        id:
          description: Id of the service bus queue endpoint
          type: string
        connectionString:
          description: The connection string of the service bus queue endpoint.
          type: string
        endpointUri:
          description: The url of the service bus queue endpoint. It must include the protocol sb://
          type: string
        entityPath:
          description: Queue name on the service bus namespace
          type: string
        authenticationType:
          description: Method used to authenticate against the service bus queue endpoint
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: authenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of routing service bus queue endpoint.
          $ref: '#/components/schemas/ManagedIdentity'
        name:
          description: 'The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.'
          type: string
          pattern: ^[A-Za-z0-9-._]{1,64}$
        subscriptionId:
          description: The subscription identifier of the service bus queue endpoint.
          type: string
        resourceGroup:
          description: The name of the resource group of the service bus queue endpoint.
          type: string
      required:
        - name
    RoutingServiceBusTopicEndpointProperties:
      description: The properties related to service bus topic endpoint types.
      type: object
      properties:
        id:
          description: Id of the service bus topic endpoint
          type: string
        connectionString:
          description: The connection string of the service bus topic endpoint.
          type: string
        endpointUri:
          description: The url of the service bus topic endpoint. It must include the protocol sb://
          type: string
        entityPath:
          description: Queue name on the service bus topic
          type: string
        authenticationType:
          description: Method used to authenticate against the service bus topic endpoint
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: authenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of routing service bus topic endpoint.
          $ref: '#/components/schemas/ManagedIdentity'
        name:
          description: 'The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.'
          type: string
          pattern: ^[A-Za-z0-9-._]{1,64}$
        subscriptionId:
          description: The subscription identifier of the service bus topic endpoint.
          type: string
        resourceGroup:
          description: The name of the resource group of the service bus topic endpoint.
          type: string
      required:
        - name
    RoutingEventHubProperties:
      description: The properties related to an event hub endpoint.
      type: object
      properties:
        id:
          description: Id of the event hub endpoint
          type: string
        connectionString:
          description: 'The connection string of the event hub endpoint. '
          type: string
        endpointUri:
          description: The url of the event hub endpoint. It must include the protocol sb://
          type: string
        entityPath:
          description: Event hub name on the event hub namespace
          type: string
        authenticationType:
          description: Method used to authenticate against the event hub endpoint
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: authenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of routing event hub endpoint.
          $ref: '#/components/schemas/ManagedIdentity'
        name:
          description: 'The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.'
          type: string
          pattern: ^[A-Za-z0-9-._]{1,64}$
        subscriptionId:
          description: The subscription identifier of the event hub endpoint.
          type: string
        resourceGroup:
          description: The name of the resource group of the event hub endpoint.
          type: string
      required:
        - name
    RoutingStorageContainerProperties:
      description: The properties related to a storage container endpoint.
      type: object
      properties:
        id:
          description: Id of the storage container endpoint
          type: string
        connectionString:
          description: The connection string of the storage account.
          type: string
        endpointUri:
          description: The url of the storage endpoint. It must include the protocol https://
          type: string
        authenticationType:
          description: Method used to authenticate against the storage endpoint
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: authenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of routing storage endpoint.
          $ref: '#/components/schemas/ManagedIdentity'
        name:
          description: 'The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.'
          type: string
          pattern: ^[A-Za-z0-9-._]{1,64}$
        subscriptionId:
          description: The subscription identifier of the storage account.
          type: string
        resourceGroup:
          description: The name of the resource group of the storage account.
          type: string
        containerName:
          description: The name of storage container in the storage account.
          type: string
        fileNameFormat:
          description: File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
          type: string
        batchFrequencyInSeconds:
          description: Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
          format: int32
          type: integer
          maximum: 720
          minimum: 60
        maxChunkSizeInBytes:
          description: Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
          format: int32
          type: integer
          maximum: 524288000
          minimum: 10485760
        encoding:
          description: Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.
          type: string
          enum:
            - Avro
            - AvroDeflate
            - JSON
      required:
        - name
        - containerName
    RoutingCosmosDBSqlApiProperties:
      description: The properties related to a cosmos DB sql container endpoint.
      type: object
      properties:
        name:
          description: 'The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.'
          type: string
          pattern: ^[A-Za-z0-9-._]{1,64}$
        id:
          readOnly: true
          description: Id of the cosmos DB sql container endpoint
          type: string
        subscriptionId:
          description: The subscription identifier of the cosmos DB account.
          type: string
        resourceGroup:
          description: The name of the resource group of the cosmos DB account.
          type: string
        endpointUri:
          description: The url of the cosmos DB account. It must include the protocol https://
          type: string
          format: uri
        authenticationType:
          description: Method used to authenticate against the cosmos DB sql container endpoint
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: authenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of routing cosmos DB container endpoint.
          $ref: '#/components/schemas/ManagedIdentity'
        primaryKey:
          description: The primary key of the cosmos DB account.
          type: string
          x-ms-secret: true
        secondaryKey:
          description: The secondary key of the cosmos DB account.
          type: string
          x-ms-secret: true
        databaseName:
          description: The name of the cosmos DB database in the cosmos DB account.
          type: string
        containerName:
          description: The name of the cosmos DB sql container in the cosmos DB database.
          type: string
        partitionKeyName:
          description: The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter.
          type: string
        partitionKeyTemplate:
          description: 'The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified.'
          type: string
      required:
        - name
        - endpointUri
        - databaseName
        - containerName
    RouteProperties:
      description: The properties of a routing rule that your IoT hub uses to route messages to endpoints.
      type: object
      properties:
        name:
          description: The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
          type: string
          pattern: ^[A-Za-z0-9-._]{1,64}$
        source:
          description: The source that the routing rule is to be applied to, such as DeviceMessages.
          enum:
            - Invalid
            - DeviceMessages
            - TwinChangeEvents
            - DeviceLifecycleEvents
            - DeviceJobLifecycleEvents
            - DeviceConnectionStateEvents
          type: string
          x-ms-enum:
            name: RoutingSource
            modelAsString: true
        condition:
          description: 'The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language'
          type: string
        endpointNames:
          description: The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
          minItems: 1
          maxItems: 1
          type: array
          items:
            type: string
        isEnabled:
          description: Used to specify whether a route is enabled.
          type: boolean
      required:
        - name
        - endpointNames
        - source
        - isEnabled
    FallbackRouteProperties:
      description: The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
      type: object
      properties:
        name:
          description: The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
          type: string
        source:
          description: The source to which the routing rule is to be applied to. For example, DeviceMessages
          enum:
            - DeviceMessages
          type: string
          x-ms-enum:
            name: RoutingSource
            modelAsString: true
        condition:
          description: 'The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language'
          type: string
        endpointNames:
          description: The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
          minItems: 1
          maxItems: 1
          type: array
          items:
            type: string
        isEnabled:
          description: Used to specify whether the fallback route is enabled.
          type: boolean
      required:
        - endpointNames
        - source
        - isEnabled
    EnrichmentProperties:
      description: The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.
      type: object
      properties:
        key:
          description: The key or name for the enrichment property.
          type: string
        value:
          description: The value for the enrichment property.
          type: string
        endpointNames:
          description: The list of endpoints for which the enrichment is applied to the message.
          minItems: 1
          type: array
          items:
            type: string
      required:
        - key
        - value
        - endpointNames
    IotHubDescription:
      description: The description of the IoT hub.
      required:
        - sku
      properties:
        etag:
          description: The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
          type: string
        properties:
          description: IotHub properties
          $ref: '#/components/schemas/IotHubProperties'
        sku:
          description: IotHub SKU info
          $ref: '#/components/schemas/IotHubSkuInfo'
        identity:
          description: The managed identities for the IotHub.
          $ref: '#/components/schemas/ArmIdentity'
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    Resource:
      description: The common properties of an Azure resource.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
          pattern: ^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      x-ms-azure-resource: true
      required:
        - location
      type: object
    SharedAccessSignatureAuthorizationRuleListResult:
      description: The list of shared access policies with a next link.
      type: object
      properties:
        value:
          description: The list of shared access policies.
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule'
          x-ms-identifiers:
            - keyName
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    OperationListResult:
      description: Result of the request to list IoT Hub operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          description: List of IoT Hub operations supported by the Microsoft.Devices resource provider.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers: []
        nextLink:
          readOnly: true
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    Operation:
      description: IoT Hub REST API operation
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: 'Operation name: {provider}/{resource}/{read | write | action | delete}'
        display:
          description: The object that represents the operation.
          properties:
            provider:
              readOnly: true
              type: string
              description: 'Service provider: Microsoft Devices'
            resource:
              readOnly: true
              type: string
              description: 'Resource Type: IotHubs'
            operation:
              readOnly: true
              type: string
              description: Name of the operation
            description:
              readOnly: true
              type: string
              description: Description of the operation
    ErrorDetails:
      description: Error details.
      type: object
      properties:
        code:
          description: The error code.
          type: string
          readOnly: true
        httpStatusCode:
          description: The HTTP status code.
          type: string
          readOnly: true
        message:
          description: The error message.
          type: string
          readOnly: true
        details:
          description: The error details.
          type: string
          readOnly: true
    IotHubQuotaMetricInfoListResult:
      description: The JSON-serialized array of IotHubQuotaMetricInfo objects with a next link.
      type: object
      properties:
        value:
          description: The array of quota metrics objects.
          type: array
          items:
            $ref: '#/components/schemas/IotHubQuotaMetricInfo'
          x-ms-identifiers: []
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    EndpointHealthDataListResult:
      description: The JSON-serialized array of EndpointHealthData objects with a next link.
      type: object
      properties:
        value:
          description: JSON-serialized array of Endpoint health data
          type: array
          items:
            $ref: '#/components/schemas/EndpointHealthData'
          x-ms-identifiers: []
        nextLink:
          description: Link to more results
          type: string
          readOnly: true
    EndpointHealthData:
      description: The health data for an endpoint
      type: object
      properties:
        endpointId:
          description: Id of the endpoint
          type: string
        healthStatus:
          description: Health statuses have following meanings. The 'healthy' status shows that the endpoint is accepting messages as expected. The 'unhealthy' status shows that the endpoint is not accepting messages as expected and IoT Hub is retrying to send data to this endpoint. The status of an unhealthy endpoint will be updated to healthy when IoT Hub has established an eventually consistent state of health. The 'dead' status shows that the endpoint is not accepting messages, after IoT Hub retried sending messages for the retrial period. See IoT Hub metrics to identify errors and monitor issues with endpoints. The 'unknown' status shows that the IoT Hub has not established a connection with the endpoint. No messages have been delivered to or rejected from this endpoint
          enum:
            - unknown
            - healthy
            - degraded
            - unhealthy
            - dead
          type: string
          x-ms-enum:
            name: EndpointHealthStatus
            modelAsString: true
        lastKnownError:
          description: Last error obtained when a message failed to be delivered to iot hub
          type: string
        lastKnownErrorTime:
          description: Time at which the last known error occurred
          type: string
          format: date-time-rfc1123
        lastSuccessfulSendAttemptTime:
          description: Last time iot hub successfully sent a message to the endpoint
          type: string
          format: date-time-rfc1123
        lastSendAttemptTime:
          description: Last time iot hub tried to send a message to the endpoint
          type: string
          format: date-time-rfc1123
    RegistryStatistics:
      description: Identity registry statistics.
      type: object
      properties:
        totalDeviceCount:
          format: int64
          description: The total count of devices in the identity registry.
          type: integer
          readOnly: true
        enabledDeviceCount:
          format: int64
          description: The count of enabled devices in the identity registry.
          type: integer
          readOnly: true
        disabledDeviceCount:
          format: int64
          description: The count of disabled devices in the identity registry.
          type: integer
          readOnly: true
    JobResponseListResult:
      description: The JSON-serialized array of JobResponse objects with a next link.
      type: object
      properties:
        value:
          description: The array of JobResponse objects.
          type: array
          items:
            $ref: '#/components/schemas/JobResponse'
          x-ms-identifiers: []
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    IotHubSkuDescription:
      description: SKU properties.
      type: object
      properties:
        resourceType:
          description: The type of the resource.
          type: string
          readOnly: true
        sku:
          description: The type of the resource.
          $ref: '#/components/schemas/IotHubSkuInfo'
        capacity:
          description: IotHub capacity
          $ref: '#/components/schemas/IotHubCapacity'
      required:
        - sku
        - capacity
    TagsResource:
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
      description: A container holding only the Tags for a resource, allowing the user to update the tags on an IoT Hub instance.
      type: object
    IotHubCapacity:
      description: IoT Hub capacity information.
      type: object
      properties:
        minimum:
          format: int64
          description: The minimum number of units.
          type: integer
          minimum: 1
          maximum: 1
          readOnly: true
        maximum:
          format: int64
          description: The maximum number of units.
          type: integer
          readOnly: true
        default:
          format: int64
          description: The default number of units.
          type: integer
          readOnly: true
        scaleType:
          description: The type of the scaling enabled.
          enum:
            - Automatic
            - Manual
            - None
          readOnly: true
          type: string
          x-ms-enum:
            name: IotHubScaleType
            modelAsString: false
    EventHubConsumerGroupsListResult:
      description: The JSON-serialized array of Event Hub-compatible consumer group names with a next link.
      type: object
      properties:
        value:
          description: List of consumer groups objects
          type: array
          items:
            $ref: '#/components/schemas/EventHubConsumerGroupInfo'
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    EventHubConsumerGroupBodyDescription:
      description: The EventHub consumer group.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/EventHubConsumerGroupName'
      type: object
    EventHubConsumerGroupName:
      description: The EventHub consumer group name.
      type: object
      properties:
        name:
          description: EventHub consumer group name
          type: string
      required:
        - name
    EventHubConsumerGroupInfo:
      description: The properties of the EventHubConsumerGroupInfo object.
      x-ms-azure-resource: true
      properties:
        properties:
          description: The tags.
          type: object
          additionalProperties: {}
        id:
          description: The Event Hub-compatible consumer group identifier.
          type: string
          readOnly: true
        name:
          description: The Event Hub-compatible consumer group name.
          type: string
          readOnly: true
        type:
          description: the resource type.
          type: string
          readOnly: true
        etag:
          description: The etag.
          type: string
          readOnly: true
      type: object
    IotHubSkuDescriptionListResult:
      description: The JSON-serialized array of IotHubSkuDescription objects with a next link.
      type: object
      properties:
        value:
          description: The array of IotHubSkuDescription.
          type: array
          items:
            $ref: '#/components/schemas/IotHubSkuDescription'
          x-ms-identifiers: []
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    JobResponse:
      description: The properties of the Job Response object.
      type: object
      properties:
        jobId:
          description: The job identifier.
          type: string
          readOnly: true
        startTimeUtc:
          format: date-time-rfc1123
          description: The start time of the job.
          type: string
          readOnly: true
        endTimeUtc:
          format: date-time-rfc1123
          description: The time the job stopped processing.
          type: string
          readOnly: true
        type:
          description: The type of the job.
          enum:
            - unknown
            - export
            - import
            - backup
            - readDeviceProperties
            - writeDeviceProperties
            - updateDeviceConfiguration
            - rebootDevice
            - factoryResetDevice
            - firmwareUpdate
          type: string
          readOnly: true
          x-ms-enum:
            name: JobType
            modelAsString: true
        status:
          description: The status of the job.
          enum:
            - unknown
            - enqueued
            - running
            - completed
            - failed
            - cancelled
          type: string
          readOnly: true
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        failureReason:
          description: If status == failed, this string containing the reason for the failure.
          type: string
          readOnly: true
        statusMessage:
          description: The status message for the job.
          type: string
          readOnly: true
        parentJobId:
          description: The job identifier of the parent job, if any.
          type: string
          readOnly: true
    IotHubDescriptionListResult:
      description: The JSON-serialized array of IotHubDescription objects with a next link.
      type: object
      properties:
        value:
          description: The array of IotHubDescription objects.
          type: array
          items:
            $ref: '#/components/schemas/IotHubDescription'
        nextLink:
          description: The next link.
          type: string
          readOnly: true
    IotHubQuotaMetricInfo:
      description: Quota metrics properties.
      type: object
      properties:
        name:
          description: The name of the quota metric.
          type: string
          readOnly: true
        currentValue:
          format: int64
          description: The current value for the quota metric.
          type: integer
          readOnly: true
        maxValue:
          format: int64
          description: The maximum value of the quota metric.
          type: integer
          readOnly: true
    OperationInputs:
      description: Input values.
      type: object
      properties:
        name:
          description: The name of the IoT hub to check.
          type: string
      required:
        - name
    IotHubNameAvailabilityInfo:
      description: The properties indicating whether a given IoT hub name is available.
      type: object
      properties:
        nameAvailable:
          description: The value which indicates whether the provided name is available.
          type: boolean
          readOnly: true
        reason:
          description: The reason for unavailability.
          enum:
            - Invalid
            - AlreadyExists
          type: string
          readOnly: true
          x-ms-enum:
            name: IotHubNameUnavailabilityReason
            modelAsString: false
        message:
          description: The detailed reason message.
          type: string
    UserSubscriptionQuotaListResult:
      type: object
      description: Json-serialized array of User subscription quota response
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/UserSubscriptionQuota'
        nextLink:
          type: string
          readOnly: true
    UserSubscriptionQuota:
      description: User subscription quota response
      type: object
      properties:
        id:
          description: IotHub type id
          type: string
        type:
          description: Response type
          type: string
        unit:
          description: Unit of IotHub type
          type: string
        currentValue:
          description: Current number of IotHub type
          format: int32
          type: integer
        limit:
          description: Numerical limit on IotHub type
          format: int32
          type: integer
        name:
          description: IotHub type
          $ref: '#/components/schemas/Name'
    Name:
      description: Name of Iot Hub type
      type: object
      properties:
        value:
          description: IotHub type
          type: string
        localizedValue:
          description: Localized value of name
          type: string
    TestAllRoutesInput:
      description: Input for testing all routes
      type: object
      properties:
        routingSource:
          description: Routing source
          enum:
            - Invalid
            - DeviceMessages
            - TwinChangeEvents
            - DeviceLifecycleEvents
            - DeviceJobLifecycleEvents
            - DeviceConnectionStateEvents
          type: string
          x-ms-enum:
            name: RoutingSource
            modelAsString: true
        message:
          description: Routing message
          $ref: '#/components/schemas/RoutingMessage'
        twin:
          description: Routing Twin Reference
          $ref: '#/components/schemas/RoutingTwin'
    RoutingTwin:
      description: Twin reference input parameter. This is an optional parameter
      properties:
        tags:
          description: Twin Tags
          type: object
        properties:
          properties:
            desired:
              description: Twin desired properties
              type: object
            reported:
              description: Twin desired properties
              type: object
      type: object
    RoutingMessage:
      description: Routing message
      type: object
      properties:
        body:
          description: Body of routing message
          type: string
        appProperties:
          description: App properties
          type: object
          additionalProperties:
            type: string
        systemProperties:
          description: System properties
          type: object
          additionalProperties:
            type: string
    TestAllRoutesResult:
      description: Result of testing all routes
      type: object
      properties:
        routes:
          description: JSON-serialized array of matched routes
          type: array
          items:
            $ref: '#/components/schemas/MatchedRoute'
          x-ms-identifiers: []
    MatchedRoute:
      description: Routes that matched
      properties:
        properties:
          description: Properties of routes that matched
          $ref: '#/components/schemas/RouteProperties'
      type: object
    TestRouteInput:
      required:
        - route
      description: Input for testing route
      type: object
      properties:
        message:
          description: Routing message
          $ref: '#/components/schemas/RoutingMessage'
        route:
          description: Route properties
          $ref: '#/components/schemas/RouteProperties'
        twin:
          description: Routing Twin Reference
          $ref: '#/components/schemas/RoutingTwin'
    TestRouteResult:
      description: Result of testing one route
      type: object
      properties:
        result:
          description: Result of testing route
          enum:
            - undefined
            - 'false'
            - 'true'
          type: string
          x-ms-enum:
            name: TestResultStatus
            modelAsString: true
        details:
          description: Detailed result of testing route
          $ref: '#/components/schemas/TestRouteResultDetails'
    TestRouteResultDetails:
      description: Detailed result of testing a route
      type: object
      properties:
        compilationErrors:
          description: JSON-serialized list of route compilation errors
          type: array
          items:
            $ref: '#/components/schemas/RouteCompilationError'
          x-ms-identifiers: []
    RouteCompilationError:
      description: Compilation error when evaluating route
      type: object
      properties:
        message:
          description: Route error message
          type: string
        severity:
          description: Severity of the route error
          enum:
            - error
            - warning
          type: string
          x-ms-enum:
            name: RouteErrorSeverity
            modelAsString: true
        location:
          description: Location where the route error happened
          $ref: '#/components/schemas/RouteErrorRange'
    RouteErrorRange:
      description: Range of route errors
      type: object
      properties:
        start:
          description: Start where the route error happened
          $ref: '#/components/schemas/RouteErrorPosition'
        end:
          description: End where the route error happened
          $ref: '#/components/schemas/RouteErrorPosition'
    RouteErrorPosition:
      description: Position where the route error happened
      type: object
      properties:
        line:
          description: Line where the route error happened
          format: int32
          type: integer
        column:
          description: Column where the route error happened
          format: int32
          type: integer
    ExportDevicesRequest:
      description: Use to provide parameters when requesting an export of all devices in the IoT hub.
      type: object
      properties:
        exportBlobContainerUri:
          description: The export blob container URI.
          type: string
        excludeKeys:
          description: The value indicating whether keys should be excluded during export.
          type: boolean
        exportBlobName:
          description: The name of the blob that will be created in the provided output blob container. This blob will contain the exported device registry information for the IoT Hub.
          type: string
        authenticationType:
          description: Specifies authentication type being used for connecting to the storage account.
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of storage endpoint for export devices.
          $ref: '#/components/schemas/ManagedIdentity'
        includeConfigurations:
          description: The value indicating whether configurations should be exported.
          type: boolean
        configurationsBlobName:
          description: The name of the blob that will be created in the provided output blob container. This blob will contain the exported configurations for the Iot Hub.
          type: string
      required:
        - exportBlobContainerUri
        - excludeKeys
    ImportDevicesRequest:
      description: Use to provide parameters when requesting an import of all devices in the hub.
      type: object
      properties:
        inputBlobContainerUri:
          description: The input blob container URI.
          type: string
        outputBlobContainerUri:
          description: The output blob container URI.
          type: string
        inputBlobName:
          description: The blob name to be used when importing from the provided input blob container.
          type: string
        outputBlobName:
          description: The blob name to use for storing the status of the import job.
          type: string
        authenticationType:
          description: Specifies authentication type being used for connecting to the storage account.
          enum:
            - keyBased
            - identityBased
          type: string
          x-ms-enum:
            name: AuthenticationType
            modelAsString: true
        identity:
          description: Managed identity properties of storage endpoint for import devices.
          $ref: '#/components/schemas/ManagedIdentity'
        includeConfigurations:
          description: The value indicating whether configurations should be imported.
          type: boolean
        configurationsBlobName:
          description: The blob name to be used when importing configurations from the provided input blob container.
          type: string
      required:
        - inputBlobContainerUri
        - outputBlobContainerUri
    FailoverInput:
      description: Use to provide failover region when requesting manual Failover for a hub.
      type: object
      properties:
        failoverRegion:
          description: Region the hub will be failed over to
          type: string
      required:
        - failoverRegion
    IotHubLocationDescription:
      description: Public representation of one of the locations where a resource is provisioned.
      type: object
      properties:
        location:
          description: The name of the Azure region
          type: string
        role:
          description: The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to.
          enum:
            - primary
            - secondary
          type: string
          x-ms-enum:
            name: IotHubReplicaRoleType
            modelAsString: true
    ArmIdentity:
      type: object
      properties:
        principalId:
          description: Principal Id
          type: string
          readOnly: true
        tenantId:
          description: Tenant Id
          type: string
          readOnly: true
        type:
          description: The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
          type: string
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ArmUserIdentity'
    ArmUserIdentity:
      type: object
      properties:
        principalId:
          type: string
          readOnly: true
        clientId:
          type: string
          readOnly: true
    ManagedIdentity:
      description: The properties of the Managed identity.
      type: object
      properties:
        userAssignedIdentity:
          type: string
          description: The user assigned identity.
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
  x-stackQL-resources:
    operations:
      id: azure.iot_hub.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Devices~1operations~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    resource:
      id: azure.iot_hub.resource
      name: resource
      title: resource
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1?api-version=2023-06-30/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1?api-version=2023-06-30/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1?api-version=2023-06-30/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Devices~1IotHubs~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Devices~1checkNameAvailability~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_all_routes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{iotHubName}~1routing~1routes~1$testall~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        test_route:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{iotHubName}~1routing~1routes~1$testnew~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_devices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1exportDevices~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import_devices:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1importDevices~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource/methods/get'
          - $ref: '#/components/x-stackQL-resources/resource/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/resource/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/resource/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/resource/methods/delete'
    resource_stats:
      id: azure.iot_hub.resource_stats
      name: resource_stats
      title: resource_stats
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1IotHubStats~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_stats/methods/get'
        insert: []
        update: []
        delete: []
    resource_valid_skus:
      id: azure.iot_hub.resource_valid_skus
      name: resource_valid_skus
      title: resource_valid_skus
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1skus~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_valid_skus/methods/get'
        insert: []
        update: []
        delete: []
    resource_event_hub_consumer_groups:
      id: azure.iot_hub.resource_event_hub_consumer_groups
      name: resource_event_hub_consumer_groups
      title: resource_event_hub_consumer_groups
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1eventHubEndpoints~1{eventHubEndpointName}~1ConsumerGroups~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_event_hub_consumer_groups/methods/list'
        insert: []
        update: []
        delete: []
    resource_event_hub_consumer_group:
      id: azure.iot_hub.resource_event_hub_consumer_group
      name: resource_event_hub_consumer_group
      title: resource_event_hub_consumer_group
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1eventHubEndpoints~1{eventHubEndpointName}~1ConsumerGroups~1{name}~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1eventHubEndpoints~1{eventHubEndpointName}~1ConsumerGroups~1{name}~1?api-version=2023-06-30/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1eventHubEndpoints~1{eventHubEndpointName}~1ConsumerGroups~1{name}~1?api-version=2023-06-30/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_event_hub_consumer_group/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_event_hub_consumer_group/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_event_hub_consumer_group/methods/delete'
    resource_jobs:
      id: azure.iot_hub.resource_jobs
      name: resource_jobs
      title: resource_jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1jobs~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_jobs/methods/list'
        insert: []
        update: []
        delete: []
    resource_job:
      id: azure.iot_hub.resource_job
      name: resource_job
      title: resource_job
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1jobs~1{jobId}~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_job/methods/get'
        insert: []
        update: []
        delete: []
    resource_quota_metrics:
      id: azure.iot_hub.resource_quota_metrics
      name: resource_quota_metrics
      title: resource_quota_metrics
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1quotaMetrics~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_quota_metrics/methods/get'
        insert: []
        update: []
        delete: []
    resource_endpoint_health:
      id: azure.iot_hub.resource_endpoint_health
      name: resource_endpoint_health
      title: resource_endpoint_health
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{iotHubName}~1routingEndpointsHealth~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_endpoint_health/methods/get'
        insert: []
        update: []
        delete: []
    resource_provider_common_subscription_quota:
      id: azure.iot_hub.resource_provider_common_subscription_quota
      name: resource_provider_common_subscription_quota
      title: resource_provider_common_subscription_quota
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Devices~1usages~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_provider_common_subscription_quota/methods/get'
        insert: []
        update: []
        delete: []
    resource_keys:
      id: azure.iot_hub.resource_keys
      name: resource_keys
      title: resource_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1listkeys~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_keys/methods/list'
        insert: []
        update: []
        delete: []
    resource_keys_for_key_name:
      id: azure.iot_hub.resource_keys_for_key_name
      name: resource_keys_for_key_name
      title: resource_keys_for_key_name
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1IotHubKeys~1{keyName}~1listkeys~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_keys_for_key_name/methods/get'
        insert: []
        update: []
        delete: []
    certificates:
      id: azure.iot_hub.certificates
      name: certificates
      title: certificates
      methods:
        list_by_iot_hub:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1certificates~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1certificates~1{certificateName}~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1certificates~1{certificateName}~1?api-version=2023-06-30/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1certificates~1{certificateName}~1?api-version=2023-06-30/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_verification_code:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1certificates~1{certificateName}~1generateVerificationCode~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{resourceName}~1certificates~1{certificateName}~1verify~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/list_by_iot_hub'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/delete'
    iot_hub:
      id: azure.iot_hub.iot_hub
      name: iot_hub
      title: iot_hub
      methods:
        manual_failover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1IotHubs~1{iotHubName}~1failover~1?api-version=2023-06-30/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    private_link_resources:
      id: azure.iot_hub.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1iotHubs~1{resourceName}~1privateLinkResources~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1iotHubs~1{resourceName}~1privateLinkResources~1{groupId}~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list'
        insert: []
        update: []
        delete: []
    private_endpoint_connections:
      id: azure.iot_hub.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1iotHubs~1{resourceName}~1privateEndpointConnections~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1iotHubs~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-06-30/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1iotHubs~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-06-30/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Devices~1iotHubs~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-06-30/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
paths:
  /providers/Microsoft.Devices/operations/?api-version=2023-06-30:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available IoT Hub REST API operations.
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get the non-security related metadata of an IoT hub
      description: Get the non-security related metadata of an IoT hub.
      operationId: IotHubResource_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains all the non-security properties of the IoT hub. Security-related properties are set to null.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    put:
      tags:
        - PUT
      summary: Create or update the metadata of an IoT hub.
      description: Create or update the metadata of an Iot hub. The usual pattern to modify a property is to retrieve the IoT hub metadata and security metadata, and then combine them with the modified values in a new body to update the IoT hub. If certain properties are missing in the JSON, updating IoT Hub may cause these values to fallback to default, which may lead to unexpected behavior.
      operationId: IotHubResource_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - name: If-Match
          in: header
          description: ETag of the IoT Hub. Do not specify for creating a brand new IoT Hub. Required to update an existing IoT Hub.
          required: false
          schema:
            type: string
      requestBody:
        description: The IoT hub metadata and security metadata.
        required: true
        x-ms-requestBody-name: iotHubDescription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IotHubDescription'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
        '201':
          description: This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    patch:
      tags:
        - PATCH
      summary: Update an existing IoT Hubs tags.
      description: Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method
      x-ms-long-running-operation: true
      operationId: IotHubResource_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Resource group identifier.
          required: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: Name of iot hub to update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Updated tag information to set into the iot hub instance.
        required: true
        x-ms-requestBody-name: IotHubTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsResource'
      responses:
        '200':
          description: Iot Hub was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
    delete:
      tags:
        - DELETE
      summary: Delete an IoT hub
      description: Delete an IoT hub.
      operationId: IotHubResource_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
        '202':
          description: The Iot Hub resource provider always returns a 202 Accepted status code with valid Location and Retry-After headers. The resource provider also sets the Azure-AsyncOperation header with a URL that points to the operation resource for this operation. Subsequent GET attempts on the resource after a DELETE operation return a resource representation that indicates a transitional provisioning state (such as Terminating). To retrieve the status of the operation, a client can either poll the URL returned in the Location header after the Retry-After interval, get the IoT Hub service status directly, or query the operation resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescription'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
        '204':
          description: Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the Iot hub metadata in the service and the status of the delete operation is set to a completed state.
        '404':
          description: After the long running delete operation completes successfully, a 404 Not Found is returned when the status polling request no longer finds the Iot hub metadata in the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get all the IoT hubs in a subscription
      description: Get all the IoT hubs in a subscription.
      operationId: IotHubResource_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the IoT hubs in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescriptionListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get all the IoT hubs in a resource group
      description: Get all the IoT hubs in a resource group.
      operationId: IotHubResource_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the IoT hubs in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubDescriptionListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get the statistics from an IoT hub
      description: Get the statistics from an IoT hub.
      operationId: IotHubResource_GetStats
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: This is a synchronous operation. The body contains JSON-serialized statistics from the identity registry in the IoT hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistryStatistics'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get the list of valid SKUs for an IoT hub
      description: Get the list of valid SKUs for an IoT hub.
      operationId: IotHubResource_GetValidSkus
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of the valid SKUs for this IoT hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubSkuDescriptionListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub
      description: Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub.
      operationId: IotHubResource_ListEventHubConsumerGroups
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - name: eventHubEndpointName
          in: path
          description: The name of the Event Hub-compatible endpoint.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized list of the consumer groups in the Event Hub-compatible endpoint in this IoT hub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHubConsumerGroupsListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub
      description: Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.
      operationId: IotHubResource_GetEventHubConsumerGroup
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - name: eventHubEndpointName
          in: path
          description: The name of the Event Hub-compatible endpoint in the IoT hub.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the consumer group to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized consumer group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHubConsumerGroupInfo'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    put:
      tags:
        - PUT
      summary: Add a consumer group to an Event Hub-compatible endpoint in an IoT hub
      description: Add a consumer group to an Event Hub-compatible endpoint in an IoT hub.
      operationId: IotHubResource_CreateEventHubConsumerGroup
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - name: eventHubEndpointName
          in: path
          description: The name of the Event Hub-compatible endpoint in the IoT hub.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the consumer group to add.
          required: true
          schema:
            type: string
      requestBody:
        description: The consumer group to add.
        required: true
        x-ms-requestBody-name: consumerGroupBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHubConsumerGroupBodyDescription'
      responses:
        '200':
          description: This is a synchronous operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHubConsumerGroupInfo'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    delete:
      tags:
        - DELETE
      summary: Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub
      description: Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub.
      operationId: IotHubResource_DeleteEventHubConsumerGroup
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - name: eventHubEndpointName
          in: path
          description: The name of the Event Hub-compatible endpoint in the IoT hub.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the consumer group to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: This is a synchronous operation.
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
          x-ms-identifiers: []
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: 'Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry'
      description: 'Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.'
      operationId: IotHubResource_ListJobs
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: This is a synchronous operation. The response contains a JSON-serialized array of all the jobs in the IoT hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: 'Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry'
      description: 'Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.'
      operationId: IotHubResource_GetJob
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - name: jobId
          in: path
          description: The job identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: This is a synchronous operation. The response contains a JSON-serialized description of the job in the IoT hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get the quota metrics for an IoT hub
      description: Get the quota metrics for an IoT hub.
      operationId: IotHubResource_GetQuotaMetrics
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: This is a synchronous operation. The response contains a JSON-serialized array of the quota metrics for the IoT hub.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubQuotaMetricInfoListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth/?api-version=2023-06-30:
    get:
      tags:
        - GET
      operationId: IotHubResource_GetEndpointHealth
      summary: Get the health for routing endpoints
      description: Get the health for routing endpoints.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            type: string
        - name: iotHubName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointHealthDataListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability/?api-version=2023-06-30:
    post:
      tags:
        - POST
      summary: Check if an IoT hub name is available
      description: Check if an IoT hub name is available.
      operationId: IotHubResource_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      requestBody:
        description: Set the name parameter in the OperationInputs structure to the name of the IoT hub to check.
        required: true
        x-ms-requestBody-name: operationInputs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationInputs'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the IoT hub name is available. If the name is not available, the body contains the reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IotHubNameAvailabilityInfo'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get the number of iot hubs in the subscription
      description: Get the number of free and paid iot hubs in the subscription
      operationId: ResourceProviderCommon_GetSubscriptionQuota
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscriptionQuotaListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall/?api-version=2023-06-30:
    post:
      tags:
        - POST
      operationId: IotHubResource_TestAllRoutes
      summary: Test all routes
      description: Test all routes configured in this Iot Hub
      requestBody:
        description: Input for testing all routes
        required: true
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestAllRoutesInput'
      parameters:
        - name: iotHubName
          in: path
          description: IotHub to be tested
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: resource group which Iot Hub belongs to
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestAllRoutesResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testnew/?api-version=2023-06-30:
    post:
      tags:
        - POST
      operationId: IotHubResource_TestRoute
      summary: Test the new route
      description: Test the new route for this Iot Hub
      requestBody:
        description: Route that needs to be tested
        required: true
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRouteInput'
      parameters:
        - name: iotHubName
          in: path
          description: IotHub to be tested
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: resource group which Iot Hub belongs to
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestRouteResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys/?api-version=2023-06-30:
    post:
      tags:
        - POST
      summary: 'Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security'
      description: 'Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.'
      operationId: IotHubResource_ListKeys
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized array of shared access policies, including keys, that you can use to access the IoT hub endpoints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRuleListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys/?api-version=2023-06-30:
    post:
      tags:
        - POST
      summary: 'Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security'
      description: 'Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.'
      operationId: IotHubResource_GetKeysForKeyName
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - name: keyName
          in: path
          description: The name of the shared access policy.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: This is a synchronous operation. The body contains a JSON-serialized shared access policy, including keys, that you can use to access one or more IoT hub endpoints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessSignatureAuthorizationRule'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices/?api-version=2023-06-30:
    post:
      tags:
        - POST
      summary: 'Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities'
      description: 'Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.'
      operationId: IotHubResource_ExportDevices
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      requestBody:
        description: The parameters that specify the export devices operation.
        required: true
        x-ms-requestBody-name: exportDevicesParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDevicesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices/?api-version=2023-06-30:
    post:
      tags:
        - POST
      summary: 'Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities'
      description: 'Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.'
      operationId: IotHubResource_ImportDevices
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      requestBody:
        description: The parameters that specify the import devices operation.
        required: true
        x-ms-requestBody-name: importDevicesParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDevicesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/?api-version=2023-06-30:
    get:
      tags:
        - Certificates
      summary: Get the certificate list.
      description: Returns the list of certificates.
      operationId: Certificates_ListByIotHub
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains all the certificate list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateListDescription'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/?api-version=2023-06-30:
    get:
      tags:
        - Certificates
      summary: Get the certificate.
      description: Returns the certificate.
      operationId: Certificates_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/certificateName'
      responses:
        '200':
          description: The body contains the certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    put:
      tags:
        - Certificates
      summary: Upload the certificate to the IoT hub.
      description: Adds new or replaces existing certificate.
      operationId: Certificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/certificateName'
        - name: If-Match
          in: header
          description: ETag of the Certificate. Do not specify for creating a brand new certificate. Required to update an existing certificate.
          required: false
          schema:
            type: string
      requestBody:
        description: The certificate body.
        required: true
        x-ms-requestBody-name: certificateDescription
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateDescription'
      responses:
        '200':
          description: If certificate already exist and update was successful, the operation returns HTTP status code of 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
        '201':
          description: If certificate didn't exist creation was successful, the operation returns HTTP status code of 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    delete:
      tags:
        - Certificates
      summary: Delete an X509 certificate.
      description: Deletes an existing X509 certificate or does nothing if it does not exist.
      operationId: Certificates_Delete
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/certificateName'
        - name: If-Match
          in: header
          description: ETag of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Certificate has been deleted.
        '204':
          description: Certificate does not exist.
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/generateVerificationCode/?api-version=2023-06-30:
    post:
      tags:
        - Certificates
      summary: Generate verification code for proof of possession flow.
      description: Generates verification code for proof of possession flow. The verification code will be used to generate a leaf certificate.
      operationId: Certificates_GenerateVerificationCode
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/certificateName'
        - name: If-Match
          in: header
          description: ETag of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The body contains the certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateWithNonceDescription'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/verify/?api-version=2023-06-30:
    post:
      tags:
        - Certificates
      summary: Verify certificate's private key possession.
      description: Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.
      operationId: Certificates_Verify
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/certificateName'
        - name: If-Match
          in: header
          description: ETag of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: The name of the certificate
        required: true
        x-ms-requestBody-name: certificateVerificationBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateVerificationDescription'
      responses:
        '200':
          description: The body contains the certificate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDescription'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover/?api-version=2023-06-30:
    post:
      tags:
        - POST
      operationId: IotHub_ManualFailover
      summary: Manually initiate a failover for the IoT Hub to its secondary region
      description: Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see https://aka.ms/manualfailover
      x-ms-long-running-operation: true
      parameters:
        - name: iotHubName
          in: path
          description: Name of the IoT hub to failover
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: Name of the resource group containing the IoT hub resource
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Region to failover to. Must be the Azure paired region. Get the value from the secondary location in the locations property. To learn more, see https://aka.ms/manualfailover/region
        required: true
        x-ms-requestBody-name: failoverInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverInput'
      responses:
        '200':
          description: Long running manual failover operation for the IoT hub completed
        '202':
          description: Manual failover initiated
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: List private link resources
      description: List private link resources for the given IotHub
      operationId: PrivateLinkResources_List
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains the list of private link resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResources'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get the specified private link resource
      description: Get the specified private link resource for the given IotHub
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/groupId'
      responses:
        '200':
          description: The body contains the specified of private link resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupIdInformation'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: List private endpoint connections
      description: List private endpoint connection properties
      operationId: PrivateEndpointConnections_List
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
      responses:
        '200':
          description: The body contains the list of private endpoint connection properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionsList'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2023-06-30:
    get:
      tags:
        - GET
      summary: Get private endpoint connection
      description: Get private endpoint connection properties
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          description: The body contains the private endpoint connection properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    put:
      tags:
        - PUT
      summary: Update private endpoint connection
      description: Update the status of a private endpoint connection with the specified name
      operationId: PrivateEndpointConnections_Update
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection with updated properties
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the update operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
    delete:
      tags:
        - DELETE
      summary: Delete private endpoint connection
      description: Delete private endpoint connection with the specified name
      operationId: PrivateEndpointConnections_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/resourceName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          description: This is returned as a response to the status polling request for the delete operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: This is a long running operation. The operation returns a 202 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for status of the operation.
            Location:
              schema:
                type: string
        '204':
          description: PrivateEndpoint does not exist.
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: false
