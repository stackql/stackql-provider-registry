openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Orbital Ground Station
  description: Azure Orbital Ground Station allows you to schedule contacts with spacecrafts on a pay-as-you-go basis to ingest data from the spacecraft, monitor the spacecraft health and status, or transmit commands to the spacecraft. Incoming data is delivered to your private virtual network allowing it to be processed or stored in Azure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    contactNameParameter:
      name: contactName
      in: path
      description: Contact name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    contactProfileNameParameter:
      name: contactProfileName
      in: path
      description: Contact Profile name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    spacecraftNameParameter:
      name: spacecraftName
      in: path
      description: Spacecraft ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    capabilityParameter:
      name: capability
      in: query
      description: Ground Station Capability.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - EarthObservation
          - Communication
        x-ms-enum:
          name: capabilityParameter
          modelAsString: true
        type: string
    skipTokenParameter:
      name: $skiptoken
      in: query
      description: An opaque string that the resource provider uses to skip over previously-returned results. This is used when a previous list operation call returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    TagsObject:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
    SpacecraftsProperties:
      type: object
      required:
        - titleLine
        - tleLine1
        - tleLine2
        - links
      properties:
        provisioningState:
          type: string
          allOf:
            - $ref: '#/components/schemas/ProvisioningState'
          description: The current state of the resource's creation, deletion, or modification.
        noradId:
          type: string
          description: NORAD ID of the spacecraft.
        titleLine:
          type: string
          description: Title line of the two-line element set (TLE).
        tleLine1:
          type: string
          description: Line 1 of the two-line element set (TLE).
        tleLine2:
          type: string
          description: Line 2 of the two-line element set (TLE).
        links:
          type: array
          items:
            $ref: '#/components/schemas/SpacecraftLink'
          x-ms-identifiers: []
          description: Immutable list of Spacecraft links.
          x-ms-mutability:
            - read
            - create
      description: List of Spacecraft Resource Properties.
    SpacecraftListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Spacecraft'
          description: A list of spacecraft resources in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListSpacecrafts API service call.
    SpacecraftLink:
      type: object
      required:
        - name
        - centerFrequencyMHz
        - bandwidthMHz
        - direction
        - polarization
      properties:
        name:
          type: string
          description: Link name.
          x-ms-mutability:
            - read
            - create
        centerFrequencyMHz:
          type: number
          description: Center Frequency in MHz.
          x-ms-mutability:
            - read
            - create
        bandwidthMHz:
          type: number
          description: Bandwidth in MHz.
          x-ms-mutability:
            - read
            - create
        direction:
          type: string
          description: Direction (Uplink or Downlink).
          enum:
            - Uplink
            - Downlink
          x-ms-enum:
            name: direction
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        polarization:
          type: string
          description: Polarization. e.g. (RHCP, LHCP).
          enum:
            - RHCP
            - LHCP
            - linearVertical
            - linearHorizontal
          x-ms-enum:
            name: polarization
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        authorizations:
          type: array
          description: Authorized Ground Stations
          readOnly: true
          items:
            $ref: '#/components/schemas/AuthorizedGroundstation'
          x-ms-identifiers: []
      description: List of authorized spacecraft links per ground station and the expiration date of the authorization.
    Spacecraft:
      required:
        - properties
      description: Customer creates a spacecraft resource to schedule a contact.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SpacecraftsProperties'
          description: Spacecraft Properties
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ResourceReference:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Resource ID.
      description: Resource Reference.
    EndPoint:
      type: object
      required:
        - ipAddress
        - endPointName
        - port
        - protocol
      properties:
        ipAddress:
          type: string
          description: IP Address (IPv4).
        endPointName:
          type: string
          description: Name of an end point.
        port:
          type: string
          description: TCP port to listen on to receive data.
        protocol:
          type: string
          description: Protocol either UDP or TCP.
          enum:
            - TCP
            - UDP
          x-ms-enum:
            name: protocol
            modelAsString: true
      description: Customer end point to store and retrieve data during a contact with the spacecraft.
    ContactsProperties:
      type: object
      required:
        - reservationStartTime
        - reservationEndTime
        - groundStationName
        - contactProfile
      properties:
        provisioningState:
          type: string
          allOf:
            - $ref: '#/components/schemas/ProvisioningState'
          description: The current state of the resource's creation, deletion, or modification.
        status:
          type: string
          readOnly: true
          enum:
            - scheduled
            - cancelled
            - succeeded
            - failed
            - providerCancelled
          x-ms-enum:
            name: ContactsStatus
            modelAsString: true
          description: Status of a contact.
        reservationStartTime:
          type: string
          format: date-time
          description: Reservation start time of a contact (ISO 8601 UTC standard).
          x-ms-mutability:
            - read
            - create
        reservationEndTime:
          type: string
          format: date-time
          description: Reservation end time of a contact (ISO 8601 UTC standard).
          x-ms-mutability:
            - read
            - create
        rxStartTime:
          type: string
          format: date-time
          readOnly: true
          description: Receive start time of a contact (ISO 8601 UTC standard).
        rxEndTime:
          type: string
          format: date-time
          readOnly: true
          description: Receive end time of a contact (ISO 8601 UTC standard).
        txStartTime:
          type: string
          format: date-time
          readOnly: true
          description: Transmit start time of a contact (ISO 8601 UTC standard).
        txEndTime:
          type: string
          format: date-time
          readOnly: true
          description: Transmit end time of a contact (ISO 8601 UTC standard).
        errorMessage:
          type: string
          readOnly: true
          description: Any error message while scheduling a contact.
        maximumElevationDegrees:
          type: number
          readOnly: true
          description: Maximum elevation of the antenna during the contact in decimal degrees.
        startAzimuthDegrees:
          type: number
          readOnly: true
          description: Azimuth of the antenna at the start of the contact in decimal degrees.
        endAzimuthDegrees:
          type: number
          readOnly: true
          description: Azimuth of the antenna at the end of the contact in decimal degrees.
        groundStationName:
          type: string
          description: Azure Ground Station name.
          x-ms-mutability:
            - read
            - create
        startElevationDegrees:
          type: number
          readOnly: true
          description: Spacecraft elevation above the horizon at contact start.
        endElevationDegrees:
          type: number
          readOnly: true
          description: Spacecraft elevation above the horizon at contact end.
        antennaConfiguration:
          type: object
          readOnly: true
          description: The configuration associated with the allocated antenna.
          properties:
            destinationIp:
              type: string
              description: The destination IP a packet can be sent to. This would for example be the TCP endpoint you would send data to.
            sourceIps:
              type: array
              description: List of Source IP
              items:
                type: string
                description: The source IP a packet can have when being sent. You need to make sure you accept data from all these IPs in your application.
        contactProfile:
          allOf:
            - $ref: '#/components/schemas/ResourceReference'
          description: The reference to the contact profile resource.
      description: Properties of the Contact Resource.
    ContactProfilesProperties:
      type: object
      required:
        - links
        - networkConfiguration
      properties:
        provisioningState:
          type: string
          allOf:
            - $ref: '#/components/schemas/ProvisioningState'
          description: The current state of the resource's creation, deletion, or modification.
        minimumViableContactDuration:
          type: string
          description: Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
        minimumElevationDegrees:
          type: number
          description: Minimum viable elevation for the contact in decimal degrees. Used for listing the available contacts with a spacecraft at a given ground station.
        autoTrackingConfiguration:
          type: string
          enum:
            - disabled
            - xBand
            - sBand
          x-ms-enum:
            name: AutoTrackingConfiguration
            modelAsString: false
          description: Auto-tracking configuration.
        eventHubUri:
          type: string
          description: ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
        networkConfiguration:
          type: object
          required:
            - subnetId
          description: Network configuration of customer virtual network.
          properties:
            subnetId:
              type: string
              description: ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it.
        thirdPartyConfigurations:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ContactProfileThirdPartyConfiguration'
          description: Third-party mission configuration of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
        links:
          type: array
          x-ms-identifiers: []
          items:
            $ref: '#/components/schemas/ContactProfileLink'
          description: Links of the Contact Profile. Describes RF links, modem processing, and IP endpoints.
      description: List of Contact Profile Resource Properties.
    ContactProfileListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ContactProfile'
          description: A list of contact profile resources in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListContactProfiles API service call.
    ContactProfileLinkChannel:
      type: object
      required:
        - name
        - centerFrequencyMHz
        - bandwidthMHz
        - endPoint
      properties:
        name:
          type: string
          description: Channel name.
        centerFrequencyMHz:
          type: number
          description: Center Frequency in MHz.
        bandwidthMHz:
          type: number
          description: Bandwidth in MHz.
        endPoint:
          $ref: '#/components/schemas/EndPoint'
        modulationConfiguration:
          type: string
          description: Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
        demodulationConfiguration:
          type: string
          description: Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
        encodingConfiguration:
          type: string
          description: Currently unused.
        decodingConfiguration:
          type: string
          description: Currently unused.
      description: Contact Profile Link Channel.
    ContactProfileLink:
      type: object
      required:
        - name
        - polarization
        - direction
        - channels
      properties:
        name:
          type: string
          description: Link name.
        polarization:
          type: string
          description: Polarization. e.g. (RHCP, LHCP).
          enum:
            - RHCP
            - LHCP
            - linearVertical
            - linearHorizontal
          x-ms-enum:
            name: polarization
            modelAsString: true
        direction:
          type: string
          description: Direction (Uplink or Downlink).
          enum:
            - Uplink
            - Downlink
          x-ms-enum:
            name: direction
            modelAsString: true
        gainOverTemperature:
          type: number
          description: Gain to noise temperature in db/K. It is the required G/T by the customer. Not used yet.
        eirpdBW:
          type: number
          description: Effective Isotropic Radiated Power (EIRP) in dBW. It is the required EIRP by the customer. Not used yet.
        channels:
          type: array
          items:
            $ref: '#/components/schemas/ContactProfileLinkChannel'
          x-ms-identifiers:
            - name
          description: Contact Profile Link Channel.
      description: Contact Profile Link.
    ContactProfile:
      required:
        - properties
      description: Customer creates a Contact Profile Resource, which will contain all of the configurations required for scheduling a contact.
      properties:
        properties:
          x-ms-client-flatten: true
          allOf:
            - $ref: '#/components/schemas/ContactProfilesProperties'
          description: Properties of the contact profile resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ContactParameters:
      type: object
      description: Parameters that define the contact resource.
      required:
        - contactProfile
        - groundStationName
        - startTime
        - endTime
      properties:
        contactProfile:
          allOf:
            - $ref: '#/components/schemas/ResourceReference'
          description: The reference to the contact profile resource.
        groundStationName:
          type: string
          description: Name of Azure Ground Station.
        startTime:
          type: string
          format: date-time
          description: Start time of a contact (ISO 8601 UTC standard).
        endTime:
          type: string
          format: date-time
          description: End time of a contact (ISO 8601 UTC standard).
    ContactListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: A list of contact resources in a resource group.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListContacts API service call.
    ContactInstanceProperties:
      type: object
      properties:
        maximumElevationDegrees:
          type: number
          readOnly: true
          description: Maximum elevation of the antenna during the contact in decimal degrees.
        txStartTime:
          type: string
          format: date-time
          readOnly: true
          description: Time at which antenna transmit will be enabled (ISO 8601 UTC standard).
        txEndTime:
          type: string
          format: date-time
          readOnly: true
          description: Time at which antenna transmit will be disabled (ISO 8601 UTC standard).
        rxStartTime:
          type: string
          format: date-time
          readOnly: true
          description: Earliest time to receive a signal (ISO 8601 UTC standard).
        rxEndTime:
          type: string
          format: date-time
          readOnly: true
          description: Time to lost receiving a signal (ISO 8601 UTC standard).
        startAzimuthDegrees:
          type: number
          readOnly: true
          description: Azimuth of the antenna at the start of the contact in decimal degrees.
        endAzimuthDegrees:
          type: number
          readOnly: true
          description: Azimuth of the antenna at the end of the contact in decimal degrees.
        startElevationDegrees:
          type: number
          readOnly: true
          description: Spacecraft elevation above the horizon at contact start.
        endElevationDegrees:
          type: number
          readOnly: true
          description: Spacecraft elevation above the horizon at contact end.
      description: Contact Instance Properties.
    Contact:
      required:
        - properties
      description: Customer creates a contact resource for a spacecraft resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ContactsProperties'
      type: object
    AvailableContactsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailableContacts'
          x-ms-identifiers: []
          description: A list of available contacts.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the ListAvailableContacts API service call.
    AvailableContacts:
      description: Customer retrieves list of Available Contacts for a spacecraft resource. Later, one of the available contact can be selected to create a contact.
      properties:
        spacecraft:
          allOf:
            - $ref: '#/components/schemas/ResourceReference'
          description: The reference to the spacecraft resource.
        groundStationName:
          type: string
          readOnly: true
          description: Name of Azure Ground Station.
        properties:
          x-ms-client-flatten: true
          allOf:
            - $ref: '#/components/schemas/ContactInstanceProperties'
          description: Properties of Contact resource.
      type: object
    AvailableGroundStationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailableGroundStation'
          description: A list of ground station resources.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for the AvailableGroundStations API service call.
    AvailableGroundStation:
      x-ms-client-flatten: true
      required:
        - properties
      description: Ground Stations available to schedule Contacts.
      properties:
        id:
          readOnly: true
          type: string
          description: ID of groundStation.
        name:
          readOnly: true
          type: string
          description: Name of the ground station.
        location:
          type: string
          description: Azure region.
        type:
          readOnly: true
          type: string
          description: Resource type.
        properties:
          x-ms-client-flatten: true
          allOf:
            - $ref: '#/components/schemas/AvailableGroundStationProperties'
          description: The properties bag for this resource.
      type: object
    AvailableGroundStationProperties:
      type: object
      properties:
        city:
          type: string
          description: City of ground station.
        providerName:
          type: string
          description: Ground station provider name.
        longitudeDegrees:
          type: number
          description: Longitude of the ground station in decimal degrees.
        latitudeDegrees:
          type: number
          description: Latitude of the ground station in decimal degrees.
        altitudeMeters:
          type: number
          description: Altitude of the ground station.
        releaseMode:
          type: string
          enum:
            - Preview
            - GA
          x-ms-enum:
            name: releaseMode
            modelAsString: true
          description: Release Status of a ground station.
      description: Properties object for Available groundstation.
    Capability:
      type: string
      description: Capability of the Ground Station.
      enum:
        - EarthObservation
        - Communication
      x-ms-enum:
        name: Capability
        modelAsString: true
    ResourceIdListResult:
      type: object
      properties:
        value:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The Azure Resource ID.
          description: A list of Azure Resource IDs.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
      description: Response for an API service call that lists the resource IDs of resources associated with another resource.
    ProvisioningState:
      type: string
      enum:
        - creating
        - succeeded
        - failed
        - canceled
        - updating
        - deleting
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
      description: The current state of the resource's creation, deletion, or modification.
      readOnly: true
    AuthorizedGroundstation:
      type: object
      required:
        - groundStation
        - expirationDate
      readOnly: true
      properties:
        groundStation:
          type: string
          description: Groundstation name.
        expirationDate:
          type: string
          format: date
          description: Date of authorization expiration.
      description: Authorized groundstation.
    OperationResult:
      description: Operation Result Entity.
      properties:
        id:
          readOnly: true
          description: ID of the resource.
          type: string
        name:
          readOnly: true
          description: Name of the resource.
          type: string
        status:
          $ref: '#/components/schemas/Status'
        startTime:
          description: The operation start time (ISO 8601 UTC standard).
          readOnly: true
          type: string
          format: date-time
        endTime:
          description: The operation end time (ISO 8601 UTC standard).
          readOnly: true
          type: string
          format: date-time
        percentComplete:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: Percentage completed.
          readOnly: true
        value:
          type: array
          readOnly: true
          items:
            type: object
            properties: {}
          x-ms-identifiers: []
          description: A list of results when the operation returns multiple results.
        nextLink:
          type: string
          description: The URL to get the next set of results.
          readOnly: true
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OperationResultProperties'
        error:
          $ref: '#/components/schemas/OperationResultErrorProperties'
      type: object
    Status:
      readOnly: true
      description: The status of operation.
      type: string
      enum:
        - Succeeded
        - Canceled
        - Failed
        - Running
      x-ms-enum:
        name: Status
        modelAsString: true
    OperationResultProperties:
      type: object
      properties: {}
      description: Operation result properties.
    OperationResultErrorProperties:
      type: object
      properties:
        code:
          type: string
          description: The code of the error.
          readOnly: true
        message:
          type: string
          description: The error message.
          readOnly: true
      description: Operation result error properties.
    ContactProfileThirdPartyConfiguration:
      type: object
      required:
        - providerName
        - missionConfiguration
      description: Contact Profile third-party partner configuration.
      properties:
        providerName:
          type: string
          description: Name of the third-party provider.
        missionConfiguration:
          type: string
          description: Name of string referencing the configuration describing contact set-up for a particular mission. Expected values are those which have been created in collaboration with the partner network.
  x-stackQL-resources:
    operations:
      id: azure.orbital.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Orbital~1operations~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    spacecrafts:
      id: azure.orbital.spacecrafts
      name: spacecrafts
      title: spacecrafts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Orbital~1spacecrafts~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1?api-version=2022-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1?api-version=2022-11-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/spacecrafts/methods/get'
          - $ref: '#/components/x-stackQL-resources/spacecrafts/methods/list'
          - $ref: '#/components/x-stackQL-resources/spacecrafts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/spacecrafts/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/spacecrafts/methods/delete'
    spacecrafts_tags:
      id: azure.orbital.spacecrafts_tags
      name: spacecrafts_tags
      title: spacecrafts_tags
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1?api-version=2022-11-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    contacts:
      id: azure.orbital.contacts
      name: contacts
      title: contacts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1contacts~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1contacts~1{contactName}~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1contacts~1{contactName}~1?api-version=2022-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1contacts~1{contactName}~1?api-version=2022-11-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/get'
          - $ref: '#/components/x-stackQL-resources/contacts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contacts/methods/delete'
    spacecrafts_available_contacts:
      id: azure.orbital.spacecrafts_available_contacts
      name: spacecrafts_available_contacts
      title: spacecrafts_available_contacts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1spacecrafts~1{spacecraftName}~1listAvailableContacts~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/spacecrafts_available_contacts/methods/list'
        insert: []
        update: []
        delete: []
    contact_profiles:
      id: azure.orbital.contact_profiles
      name: contact_profiles
      title: contact_profiles
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1contactProfiles~1{contactProfileName}~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1contactProfiles~1{contactProfileName}~1?api-version=2022-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1contactProfiles~1{contactProfileName}~1?api-version=2022-11-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Orbital~1contactProfiles~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1contactProfiles~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contact_profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/contact_profiles/methods/list'
          - $ref: '#/components/x-stackQL-resources/contact_profiles/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_profiles/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_profiles/methods/delete'
    contact_profiles_tags:
      id: azure.orbital.contact_profiles_tags
      name: contact_profiles_tags
      title: contact_profiles_tags
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Orbital~1contactProfiles~1{contactProfileName}~1?api-version=2022-11-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    available_ground_stations:
      id: azure.orbital.available_ground_stations
      name: available_ground_stations
      title: available_ground_stations
      methods:
        list_by_capability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Orbital~1availableGroundStations~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_ground_stations/methods/list_by_capability'
        insert: []
        update: []
        delete: []
    operations_results:
      id: azure.orbital.operations_results
      name: operations_results
      title: operations_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Orbital~1locations~1{location}~1operationResults~1{operationId}~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_results/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.Orbital/operations/?api-version=2022-11-01:
    get:
      tags:
        - Operations
      description: Lists all of the available Orbital Rest API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Orbital/spacecrafts/?api-version=2022-11-01:
    get:
      tags:
        - Spacecraft
      description: Returns list of spacecrafts by subscription.
      operationId: Spacecrafts_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/skipTokenParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of spacecraft resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/?api-version=2022-11-01:
    get:
      tags:
        - Spacecraft
      description: Returns list of spacecrafts by resource group.
      operationId: Spacecrafts_List
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/skipTokenParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of spacecraft resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpacecraftListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/?api-version=2022-11-01:
    get:
      tags:
        - Spacecraft
      operationId: Spacecrafts_Get
      description: Gets the specified spacecraft in a specified resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Spacecraft resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spacecraft'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Spacecraft
      description: Creates or updates a spacecraft resource.
      operationId: Spacecrafts_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
      requestBody:
        description: The parameters to provide for the created spacecraft.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Spacecraft'
      responses:
        '200':
          description: Update successful. The operation returns the resulting spacecraft resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spacecraft'
        '201':
          description: Create successful. The operation returns the resulting spacecraft resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spacecraft'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL for checking the ongoing status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Spacecraft
      operationId: Spacecrafts_Delete
      description: Deletes a specified spacecraft resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Spacecraft
      operationId: Spacecrafts_UpdateTags
      description: Updates the specified spacecraft tags.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
      requestBody:
        description: Parameters supplied to update spacecraft tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Spacecraft resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spacecraft'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/contacts/?api-version=2022-11-01:
    get:
      tags:
        - Contact
      description: Returns list of contacts by spacecraftName.
      operationId: Contacts_List
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
        - $ref: '#/components/parameters/skipTokenParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of contacts by spacecraftName.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/contacts/{contactName}/?api-version=2022-11-01:
    get:
      tags:
        - Contact
      operationId: Contacts_Get
      description: Gets the specified contact in a specified resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
        - $ref: '#/components/parameters/contactNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting Contact resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Contact
      description: Creates a contact.
      operationId: Contacts_Create
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
        - $ref: '#/components/parameters/contactNameParameter'
      requestBody:
        description: The parameters to provide for the created contact.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '201':
          description: Create successful. The operation returns the resulting contact resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL for checking the ongoing status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Contact
      operationId: Contacts_Delete
      description: Deletes a specified contact.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
        - $ref: '#/components/parameters/contactNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/spacecrafts/{spacecraftName}/listAvailableContacts/?api-version=2022-11-01:
    post:
      tags:
        - Contact
      description: Returns list of available contacts. A contact is available if the spacecraft is visible from the ground station for more than the minimum viable contact duration provided in the contact profile.
      operationId: Spacecrafts_ListAvailableContacts
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/spacecraftNameParameter'
      requestBody:
        description: The parameters to provide for the contacts.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactParameters'
      responses:
        '200':
          description: Request successful. The operation returns a list of available contacts resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableContactsListResult'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed.
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/{contactProfileName}/?api-version=2022-11-01:
    get:
      tags:
        - Contact Profile
      operationId: ContactProfiles_Get
      description: Gets the specified contact Profile in a specified resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/contactProfileNameParameter'
      responses:
        '200':
          description: Request successful. The operation returns the resulting ContactProfile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactProfile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Contact Profile
      description: Creates or updates a contact profile.
      operationId: ContactProfiles_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/contactProfileNameParameter'
      requestBody:
        description: The parameters to provide for the created Contact Profile.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactProfile'
      responses:
        '200':
          description: Update successful. The operation returns the resulting ContactProfile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactProfile'
        '201':
          description: Create successful. The operation returns the resulting ContactProfile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactProfile'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL for checking the ongoing status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Contact Profile
      operationId: ContactProfiles_Delete
      description: Deletes a specified contact profile resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/contactProfileNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed.
        '204':
          description: Request successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Contact Profile
      operationId: ContactProfiles_UpdateTags
      description: Updates the specified contact profile tags.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/contactProfileNameParameter'
      requestBody:
        description: Parameters supplied to update contact profile tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update successful. The operation returns the resulting Contact Profile resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactProfile'
        '202':
          description: Accepted and the operation will complete asynchronously.
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.Orbital/contactProfiles/?api-version=2022-11-01:
    get:
      tags:
        - Contact Profile
      description: Returns list of contact profiles by Subscription.
      operationId: ContactProfiles_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/skipTokenParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of contact profile resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactProfileListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Orbital/contactProfiles/?api-version=2022-11-01:
    get:
      tags:
        - Contact Profile
      description: Returns list of contact profiles by Resource Group.
      operationId: ContactProfiles_List
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/skipTokenParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of contact profile resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactProfileListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Orbital/availableGroundStations/?api-version=2022-11-01:
    get:
      tags:
        - Ground Station
      description: Returns list of available ground stations.
      operationId: AvailableGroundStations_ListByCapability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/capabilityParameter'
      responses:
        '200':
          description: Request successful. The operation returns a list of Ground Station resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableGroundStationListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Orbital/locations/{location}/operationResults/{operationId}/?api-version=2022-11-01:
    get:
      tags:
        - OperationResults
      description: Returns operation results.
      operationId: OperationsResults_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Successfully retrieved the operation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        '202':
          description: The operation is still in progress.
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
