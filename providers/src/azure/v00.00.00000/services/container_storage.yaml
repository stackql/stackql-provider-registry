openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Container Storage
  description: Manage persistent storage volumes for stateful container applications.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Assignment:
      type: object
      description: Assignment Properties
      properties:
        status:
          $ref: '#/components/schemas/AssignmentStatus'
          description: Indicates if the assignment is in a usable state
          readOnly: true
        id:
          $ref: '#/components/schemas/AssignmentId'
          description: Resource id for the assigned resource
          x-ms-mutability:
            - read
            - create
      required:
        - id
    AssignmentId:
      type: string
      format: arm-id
      description: A type definition that refers the id to an Azure Resource Manager resource.
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.ContainerService/managedClusters
    AssignmentStatus:
      type: object
      description: Status of the assignment resource
      properties:
        state:
          $ref: '#/components/schemas/AssignmentStatusState'
          description: State of the assignment resource
        message:
          type: string
          description: Reason for the status
      required:
        - state
    AssignmentStatusState:
      type: string
      description: Status of the assignment resource
      enum:
        - Assigning
        - Assigned
        - Unassigning
        - Failed
      x-ms-enum:
        name: AssignmentStatusState
        modelAsString: true
        values:
          - name: Assigning
            value: Assigning
            description: The assignment of the pool to the resource is in progress
          - name: Assigned
            value: Assigned
            description: The assignment to the pool was successful.
          - name: Unassigning
            value: Unassigning
            description: The pool is being unassigned.
          - name: Failed
            value: Failed
            description: The operation of assigning or unassigning the pool failed.
    AzureDisk:
      type: object
      description: Azure Disk Pool Properties
      properties:
        resourceGroup:
          type: string
          description: Managed resource group for the pool.
          readOnly: true
        skuName:
          $ref: '#/components/schemas/AzureDiskSkuName'
          description: Sku name
          x-ms-mutability:
            - read
            - create
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption specifies the encryption configuration for the Azure Disk pool
          x-ms-mutability:
            - read
            - create
        disks:
          type: array
          description: Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
          items:
            $ref: '#/components/schemas/Disk'
    AzureDiskSkuName:
      type: string
      description: SKU of the underlying managed disk
      enum:
        - Premium_LRS
        - Standard_LRS
        - StandardSSD_LRS
        - UltraSSD_LRS
        - Premium_ZRS
        - PremiumV2_LRS
        - StandardSSD_ZRS
      x-ms-enum:
        name: AzureDiskSkuName
        modelAsString: true
        values:
          - name: Premium_LRS
            value: Premium_LRS
            description: Premium_LRS SKU
          - name: Standard_LRS
            value: Standard_LRS
            description: Standard_LRS SKU
          - name: StandardSSD_LRS
            value: StandardSSD_LRS
            description: StandardSSD_LRS SKU
          - name: UltraSSD_LRS
            value: UltraSSD_LRS
            description: UltraSSD_LRS SKU
          - name: Premium_ZRS
            value: Premium_ZRS
            description: Premium_ZRS SKU
          - name: PremiumV2_LRS
            value: PremiumV2_LRS
            description: PremiumV2_LRS SKU
          - name: StandardSSD_ZRS
            value: StandardSSD_ZRS
            description: StandardSSD_ZRS SKU
    AzureDiskUpdate:
      type: object
      description: Azure Disk Pool Properties
      properties:
        disks:
          type: array
          description: Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
          items:
            $ref: '#/components/schemas/Disk'
    Disk:
      type: object
      description: Model for disk for that pool is using
      properties:
        id:
          type: string
          description: ID is the disk identifier visible to the OS. It is typically the WWN or disk ID in formats such as eui.e8238fa6bf530001001b448b45263379 or 0x5002cf6cbc5dd460
        reference:
          type: string
          description: Reference is the location of the disk in an external system.
      required:
        - id
        - reference
    DiskPoolProperties:
      type: object
      description: Properties shared between the azureDisk and ephemeralDisk
      properties:
        disks:
          type: array
          description: Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
          items:
            $ref: '#/components/schemas/Disk'
    ElasticSan:
      type: object
      description: Elastic San Pool Properties
      properties:
        resourceGroup:
          type: string
          description: Managed resource group for the pool.
          readOnly: true
        skuName:
          $ref: '#/components/schemas/ElasticSanSkuName'
          description: Sku name
          x-ms-mutability:
            - read
            - create
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption specifies the encryption configuration for the Azure Disk pool
          x-ms-mutability:
            - read
            - create
    ElasticSanSkuName:
      type: string
      description: ElasticSAN SKUs
      enum:
        - Premium_LRS
        - Premium_ZRS
      x-ms-enum:
        name: ElasticSanSkuName
        modelAsString: true
        values:
          - name: Premium_LRS
            value: Premium_LRS
            description: Premium_LRS SKU
          - name: Premium_ZRS
            value: Premium_ZRS
            description: Premium_ZRS SKU
    ElasticSanUpdate:
      description: Elastic San Pool Properties
      properties: {}
      type: object
    ElasticSanVolumeProperties:
      type: object
      description: Properties of the ElasticSAN iSCSI target
      properties:
        targetIqn:
          type: string
          description: 'iSCSI Target IQN (iSCSI Qualified Name); example: "iqn.2005-03.org.iscsi:server"'
        targetPortalHostname:
          type: string
          description: iSCSI Target Portal Host Name
        targetPortalPort:
          type: integer
          format: int32
          description: iSCSI Target Portal Port
      required:
        - targetIqn
        - targetPortalHostname
        - targetPortalPort
    Encryption:
      type: object
      description: Encryption key properties for the pool.
      properties:
        keyName:
          type: string
          description: The name of the key vault key.
        keyVaultUri:
          type: string
          description: The URI of the key vault.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
      required:
        - keyName
        - keyVaultUri
    EphemeralDisk:
      type: object
      description: Ephemeral Disk Pool Properties
      properties:
        replicas:
          type: integer
          format: int64
          description: The number of data copies. Default 3.
          default: 3
          minimum: 1
          maximum: 3
        disks:
          type: array
          description: Only required if individual disk selection is desired. Path to disk, e.g. <nodename>:/dev/sda or WWN. Supports specifying multiple disks (same syntax as tags).
          items:
            $ref: '#/components/schemas/Disk'
    Pool:
      description: Pool resource
      properties:
        properties:
          $ref: '#/components/schemas/PoolProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    PoolListResult:
      type: object
      description: The response of a Pool list operation.
      properties:
        value:
          type: array
          description: The Pool items on this page
          items:
            $ref: '#/components/schemas/Pool'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    PoolProperties:
      type: object
      description: Pool Properties
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
        status:
          $ref: '#/components/schemas/ResourceOperationalStatus'
          description: The operational status of the resource
          readOnly: true
        zones:
          type: array
          description: List of availability zones that resources can be created in.
          maxItems: 3
          items:
            $ref: '#/components/schemas/Zone'
          x-ms-mutability:
            - read
            - create
        resources:
          $ref: '#/components/schemas/Resources'
          description: Resources represent the resources the pool should have.
        poolType:
          $ref: '#/components/schemas/PoolType'
          description: 'Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.'
        reclaimPolicy:
          $ref: '#/components/schemas/ReclaimPolicy'
          description: ReclaimPolicy defines what happens to the backend storage when StoragePool is deleted
          x-ms-mutability:
            - read
            - create
        assignments:
          type: array
          description: List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.
          items:
            $ref: '#/components/schemas/Assignment'
      required:
        - poolType
    PoolType:
      type: object
      description: 'Type of the Pool: ephemeralDisk, azureDisk, or elasticsan'
      properties:
        azureDisk:
          $ref: '#/components/schemas/AzureDisk'
          description: Disk Pool Properties
        elasticSan:
          $ref: '#/components/schemas/ElasticSan'
          description: Elastic San Pool Properties
        ephemeralDisk:
          $ref: '#/components/schemas/EphemeralDisk'
          description: Ephemeral Pool Properties
    PoolTypeUpdate:
      type: object
      description: 'Type of the Pool: ephemeralDisk, azureDisk, or elasticsan'
      properties:
        azureDisk:
          $ref: '#/components/schemas/AzureDiskUpdate'
          description: Disk Pool Properties
        elasticSan:
          $ref: '#/components/schemas/ElasticSanUpdate'
          description: Elastic San Pool Properties
        ephemeralDisk:
          $ref: '#/components/schemas/EphemeralDisk'
          description: Ephemeral Pool Properties
    PoolUpdate:
      description: The type used for update operations of the Pool.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PoolUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    PoolUpdateProperties:
      type: object
      description: The updatable properties of the Pool.
      properties:
        resources:
          $ref: '#/components/schemas/Resources'
          description: Resources represent the resources the pool should have.
        poolType:
          $ref: '#/components/schemas/PoolTypeUpdate'
          description: 'Type of the Pool: ephemeralDisk, azureDisk, or elasticsan.'
        assignments:
          type: array
          description: List of resources that should have access to the pool. Typically ARM references to AKS clusters or ACI Container Groups. For local and standard this must be a single reference. For ElasticSAN there can be many.
          items:
            $ref: '#/components/schemas/Assignment'
    ProvisioningState:
      type: string
      description: Provisioning state of the resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Provisioning
            value: Provisioning
            description: The resource is being provisioned
          - name: Updating
            value: Updating
            description: The resource is updating
          - name: Deleting
            value: Deleting
            description: The resource is being deleted
          - name: Accepted
            value: Accepted
            description: The resource create request has been accepted
    ReclaimPolicy:
      type: string
      description: Reclaim policy
      enum:
        - Delete
        - Retain
      x-ms-enum:
        name: ReclaimPolicy
        modelAsString: true
        values:
          - name: Delete
            value: Delete
            description: Delete resource
          - name: Retain
            value: Retain
            description: Retain resource
    Requests:
      type: object
      description: Requests for capacity for the pool.
      properties:
        storage:
          type: integer
          format: int64
          description: Requested capacity of the pool in GiB.
          default: 1024
          minimum: 1024
          maximum: 65536
    ResourceOperationStatusState:
      type: string
      description: State of the resource.
      enum:
        - Pending
        - Available
        - Unavailable
      x-ms-enum:
        name: ResourceOperationStatusState
        modelAsString: true
        values:
          - name: Pending
            value: Pending
            description: The resource is pending.
          - name: Available
            value: Available
            description: The resource is available.
          - name: Unavailable
            value: Unavailable
            description: The resource is unavailable.
    ResourceOperationalStatus:
      type: object
      description: Status of the resource
      properties:
        state:
          $ref: '#/components/schemas/ResourceOperationStatusState'
          description: state of the resource
        message:
          type: string
          description: Reason for state.
      required:
        - state
    Resources:
      type: object
      description: Resource Requests for the pool.
      properties:
        requests:
          $ref: '#/components/schemas/Requests'
          description: Requests for capacity for the pool.
    Snapshot:
      description: Concrete proxy resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/SnapshotProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    SnapshotListResult:
      type: object
      description: The response of a Snapshot list operation.
      properties:
        value:
          type: array
          description: The Snapshot items on this page
          items:
            $ref: '#/components/schemas/Snapshot'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SnapshotProperties:
      type: object
      description: Volume Snapshot Properties
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
        status:
          $ref: '#/components/schemas/ResourceOperationalStatus'
          description: The status of the resource.
          readOnly: true
        source:
          type: string
          description: Reference to the source volume
          minLength: 3
          maxLength: 253
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
          x-ms-mutability:
            - read
            - create
      required:
        - source
    Volume:
      description: Concrete proxy resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/VolumeProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    VolumeListResult:
      type: object
      description: The response of a Volume list operation.
      properties:
        value:
          type: array
          description: The Volume items on this page
          items:
            $ref: '#/components/schemas/Volume'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VolumeProperties:
      type: object
      description: Volume Properties
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
        status:
          $ref: '#/components/schemas/ResourceOperationalStatus'
          description: The status of the resource.
          readOnly: true
        labels:
          type: object
          description: String KV pairs indicating labels
          additionalProperties:
            type: string
        capacityGiB:
          type: integer
          format: int64
          description: Requested capacity in GiB
          minimum: 1
          maximum: 65536
        volumeType:
          $ref: '#/components/schemas/VolumeType'
          description: Properties of the volume
          readOnly: true
      required:
        - labels
        - capacityGiB
    VolumeType:
      type: object
      description: Properties of the volume
      properties:
        elasticSan:
          $ref: '#/components/schemas/ElasticSanVolumeProperties'
          description: Properties of the ElasticSAN iSCSI target
          readOnly: true
    VolumeUpdate:
      description: The type used for update operations of the Volume.
      properties:
        properties:
          $ref: '#/components/schemas/VolumeUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    VolumeUpdateProperties:
      type: object
      description: The updatable properties of the Volume.
      properties:
        labels:
          type: object
          description: String KV pairs indicating labels
          additionalProperties:
            type: string
        capacityGiB:
          type: integer
          format: int64
          description: Requested capacity in GiB
          minimum: 1
          maximum: 65536
    Zone:
      type: string
      description: Availability Zones
      enum:
        - '1'
        - '2'
        - '3'
      x-ms-enum:
        name: Zone
        modelAsString: true
        values:
          - name: Zone1
            value: '1'
            description: First availability zone.
          - name: Zone2
            value: '2'
            description: Second availability zone.
          - name: Zone3
            value: '3'
            description: Third availability zone.
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.container_storage.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ContainerStorage~1operations?api-version=2023-07-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    pools:
      id: azure.container_storage.pools
      name: pools
      title: pools
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerStorage~1pools?api-version=2023-07-01-preview/get'
            operationId: Pools_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PoolListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools?api-version=2023-07-01-preview/get'
            operationId: Pools_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PoolListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}?api-version=2023-07-01-preview/get'
            operationId: Pools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Pool
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}?api-version=2023-07-01-preview/put'
            operationId: Pools_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Pool
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}?api-version=2023-07-01-preview/patch'
            operationId: Pools_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Pool
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}?api-version=2023-07-01-preview/delete'
            operationId: Pools_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/pools/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pools/methods/delete'
    snapshots:
      id: azure.container_storage.snapshots
      name: snapshots
      title: snapshots
      methods:
        list_by_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1snapshots?api-version=2023-07-01-preview/get'
            operationId: Snapshots_ListByPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SnapshotListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1snapshots~1{snapshotName}?api-version=2023-07-01-preview/get'
            operationId: Snapshots_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Snapshot
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1snapshots~1{snapshotName}?api-version=2023-07-01-preview/put'
            operationId: Snapshots_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Snapshot
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1snapshots~1{snapshotName}?api-version=2023-07-01-preview/delete'
            operationId: Snapshots_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list_by_pool'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/delete'
    volumes:
      id: azure.container_storage.volumes
      name: volumes
      title: volumes
      methods:
        list_by_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1volumes?api-version=2023-07-01-preview/get'
            operationId: Volumes_ListByPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1volumes~1{volumeName}?api-version=2023-07-01-preview/get'
            operationId: Volumes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1volumes~1{volumeName}?api-version=2023-07-01-preview/put'
            operationId: Volumes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1volumes~1{volumeName}?api-version=2023-07-01-preview/patch'
            operationId: Volumes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerStorage~1pools~1{poolName}~1volumes~1{volumeName}?api-version=2023-07-01-preview/delete'
            operationId: Volumes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list_by_pool'
        insert:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/delete'
    vw_pools:
      id: azure.container_storage.vw_pools
      name: vw_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.zones') as "zones",
              JSON_EXTRACT(properties, '$.resources') as "resources",
              JSON_EXTRACT(properties, '$.poolType') as "pool_type",
              JSON_EXTRACT(properties, '$.reclaimPolicy') as "reclaim_policy",
              JSON_EXTRACT(properties, '$.assignments') as "assignments",
              subscriptionId,
              resourceGroupName,
              poolName
              FROM azure.container_storage.pools
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.zones') as "zones",
                json_extract_path_text(properties, '$.resources') as "resources",
                json_extract_path_text(properties, '$.poolType') as "pool_type",
                json_extract_path_text(properties, '$.reclaimPolicy') as "reclaim_policy",
                json_extract_path_text(properties, '$.assignments') as "assignments",
                subscriptionId,
                resourceGroupName,
                poolName
                FROM azure.container_storage.pools
                WHERE subscriptionId = 'replace-me';
    vw_snapshots:
      id: azure.container_storage.vw_snapshots
      name: vw_snapshots
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.source') as "source",
              subscriptionId,
              resourceGroupName,
              poolName,
              snapshotName
              FROM azure.container_storage.snapshots
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND poolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.source') as "source",
                subscriptionId,
                resourceGroupName,
                poolName,
                snapshotName
                FROM azure.container_storage.snapshots
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND poolName = 'replace-me';
    vw_volumes:
      id: azure.container_storage.vw_volumes
      name: vw_volumes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.labels') as "labels",
              JSON_EXTRACT(properties, '$.capacityGiB') as "capacity_gib",
              JSON_EXTRACT(properties, '$.volumeType') as "volume_type",
              subscriptionId,
              resourceGroupName,
              poolName,
              volumeName
              FROM azure.container_storage.volumes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND poolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.labels') as "labels",
                json_extract_path_text(properties, '$.capacityGiB') as "capacity_gib",
                json_extract_path_text(properties, '$.volumeType') as "volume_type",
                subscriptionId,
                resourceGroupName,
                poolName,
                volumeName
                FROM azure.container_storage.volumes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND poolName = 'replace-me';
paths:
  /providers/Microsoft.ContainerStorage/operations?api-version=2023-07-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerStorage/pools?api-version=2023-07-01-preview:
    get:
      operationId: Pools_ListBySubscription
      tags:
        - Pools
      description: List Pool resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools?api-version=2023-07-01-preview:
    get:
      operationId: Pools_ListByResourceGroup
      tags:
        - Pools
      description: List Pool resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}?api-version=2023-07-01-preview:
    get:
      operationId: Pools_Get
      tags:
        - Pools
      description: Get a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Pools_CreateOrUpdate
      tags:
        - Pools
      description: Create a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
      responses:
        '200':
          description: Resource 'Pool' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '201':
          description: Resource 'Pool' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    patch:
      operationId: Pools_Update
      tags:
        - Pools
      description: Update a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Pools_Delete
      tags:
        - Pools
      description: Delete a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/snapshots?api-version=2023-07-01-preview:
    get:
      operationId: Snapshots_ListByPool
      tags:
        - Snapshots
      description: List Snapshot resources by Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/snapshots/{snapshotName}?api-version=2023-07-01-preview:
    get:
      operationId: Snapshots_Get
      tags:
        - Snapshots
      description: Get a Snapshot
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
        - name: snapshotName
          in: path
          description: Volume Snapshot Resource
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Snapshots_CreateOrUpdate
      tags:
        - Snapshots
      description: Create a Snapshot
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
        - name: snapshotName
          in: path
          description: Volume Snapshot Resource
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
      responses:
        '200':
          description: Resource 'Snapshot' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        '201':
          description: Resource 'Snapshot' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Snapshots_Delete
      tags:
        - Snapshots
      description: Delete a Snapshot
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
        - name: snapshotName
          in: path
          description: Volume Snapshot Resource
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/volumes?api-version=2023-07-01-preview:
    get:
      operationId: Volumes_ListByPool
      tags:
        - Volumes
      description: List Volume resources by Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerStorage/pools/{poolName}/volumes/{volumeName}?api-version=2023-07-01-preview:
    get:
      operationId: Volumes_Get
      tags:
        - Volumes
      description: Get a Volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
        - name: volumeName
          in: path
          description: Volume Resource
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Volumes_CreateOrUpdate
      tags:
        - Volumes
      description: Create a Volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
        - name: volumeName
          in: path
          description: Volume Resource
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      responses:
        '200':
          description: Resource 'Volume' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '201':
          description: Resource 'Volume' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    patch:
      operationId: Volumes_Update
      tags:
        - Volumes
      description: Update a Volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
        - name: volumeName
          in: path
          description: Volume Resource
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Volumes_Delete
      tags:
        - Volumes
      description: Delete a Volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Pool Object
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
        - name: volumeName
          in: path
          description: Volume Resource
          required: true
          schema:
            minLength: 3
            maxLength: 253
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
