openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Standby Pools
  description: Azure standby pools is a feature for Virtual Machine Scale Sets with Flexible Orchestration that enables faster scaling out of resources by creating a pool of pre-provisioned virtual machines ready to service your workload.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ContainerGroupProfile:
      type: object
      description: Details of the ContainerGroupProfile.
      properties:
        id:
          type: string
          format: arm-id
          description: Specifies container group profile id of standby container groups.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ContainerInstance/containerGroupProfiles
        revision:
          type: integer
          format: int64
          description: Specifies revision of container group profile.
      required:
        - id
    ContainerGroupProfileUpdate:
      type: object
      description: Details of the ContainerGroupProfile.
      properties:
        id:
          type: string
          format: arm-id
          description: Specifies container group profile id of standby container groups.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ContainerInstance/containerGroupProfiles
        revision:
          type: integer
          format: int64
          description: Specifies revision of container group profile.
    ContainerGroupProperties:
      type: object
      description: Details of the ContainerGroupProperties.
      properties:
        containerGroupProfile:
          $ref: '#/components/schemas/ContainerGroupProfile'
          description: Specifies container group profile of standby container groups.
        subnetIds:
          type: array
          description: Specifies subnet Ids for container group.
          items:
            $ref: '#/components/schemas/Subnet'
      required:
        - containerGroupProfile
    ContainerGroupPropertiesUpdate:
      type: object
      description: Details of the ContainerGroupProperties.
      properties:
        containerGroupProfile:
          $ref: '#/components/schemas/ContainerGroupProfileUpdate'
          description: Specifies container group profile of standby container groups.
        subnetIds:
          type: array
          description: Specifies subnet Ids for container group.
          items:
            $ref: '#/components/schemas/Subnet'
    ProvisioningState:
      type: string
      description: Provisioning state
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Deleting
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: Deleting
            value: Deleting
            description: Resource is being deleted.
      readOnly: true
    RefillPolicy:
      type: string
      description: Refill policy of standby pool
      enum:
        - always
      x-ms-enum:
        name: RefillPolicy
        modelAsString: true
        values:
          - name: always
            value: always
            description: A refill policy that standby pool is automatically refilled to maintain maxReadyCapacity.
    StandbyContainerGroupPoolElasticityProfile:
      type: object
      description: Specifies the elasticity profile of the standby container group pools.
      properties:
        maxReadyCapacity:
          type: integer
          format: int64
          description: Specifies maximum number of standby container groups in the standby pool.
          minimum: 0
          maximum: 2000
        refillPolicy:
          $ref: '#/components/schemas/RefillPolicy'
          description: Specifies refill policy of the pool.
      required:
        - maxReadyCapacity
    StandbyContainerGroupPoolElasticityProfileUpdate:
      type: object
      description: Specifies the elasticity profile of the standby container group pools.
      properties:
        maxReadyCapacity:
          type: integer
          format: int64
          description: Specifies maximum number of standby container groups in the standby pool.
          minimum: 0
          maximum: 2000
        refillPolicy:
          $ref: '#/components/schemas/RefillPolicy'
          description: Specifies refill policy of the pool.
    StandbyContainerGroupPoolResource:
      description: A StandbyContainerGroupPoolResource.
      properties:
        properties:
          $ref: '#/components/schemas/StandbyContainerGroupPoolResourceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StandbyContainerGroupPoolResourceListResult:
      type: object
      description: The response of a StandbyContainerGroupPoolResource list operation.
      properties:
        value:
          type: array
          description: The StandbyContainerGroupPoolResource items on this page
          items:
            $ref: '#/components/schemas/StandbyContainerGroupPoolResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    StandbyContainerGroupPoolResourceProperties:
      type: object
      description: Details of the StandbyContainerGroupPool.
      properties:
        elasticityProfile:
          $ref: '#/components/schemas/StandbyContainerGroupPoolElasticityProfile'
          description: Specifies elasticity profile of standby container group pools.
        containerGroupProperties:
          $ref: '#/components/schemas/ContainerGroupProperties'
          description: Specifies container group properties of standby container group pools.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - elasticityProfile
        - containerGroupProperties
    StandbyContainerGroupPoolResourceUpdate:
      description: The type used for update operations of the StandbyContainerGroupPoolResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/StandbyContainerGroupPoolResourceUpdateProperties'
          x-ms-client-flatten: true
      type: object
    StandbyContainerGroupPoolResourceUpdateProperties:
      type: object
      description: The updatable properties of the StandbyContainerGroupPoolResource.
      properties:
        elasticityProfile:
          $ref: '#/components/schemas/StandbyContainerGroupPoolElasticityProfileUpdate'
          description: Specifies elasticity profile of standby container group pools.
        containerGroupProperties:
          $ref: '#/components/schemas/ContainerGroupPropertiesUpdate'
          description: Specifies container group properties of standby container group pools.
    StandbyVirtualMachinePoolElasticityProfile:
      type: object
      description: Details of the elasticity profile.
      properties:
        maxReadyCapacity:
          type: integer
          format: int64
          description: Specifies the maximum number of virtual machines in the standby virtual machine pool.
          minimum: 0
          maximum: 2000
      required:
        - maxReadyCapacity
    StandbyVirtualMachinePoolElasticityProfileUpdate:
      type: object
      description: Details of the elasticity profile.
      properties:
        maxReadyCapacity:
          type: integer
          format: int64
          description: Specifies the maximum number of virtual machines in the standby virtual machine pool.
          minimum: 0
          maximum: 2000
    StandbyVirtualMachinePoolResource:
      description: A StandbyVirtualMachinePoolResource.
      properties:
        properties:
          $ref: '#/components/schemas/StandbyVirtualMachinePoolResourceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StandbyVirtualMachinePoolResourceListResult:
      type: object
      description: The response of a StandbyVirtualMachinePoolResource list operation.
      properties:
        value:
          type: array
          description: The StandbyVirtualMachinePoolResource items on this page
          items:
            $ref: '#/components/schemas/StandbyVirtualMachinePoolResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    StandbyVirtualMachinePoolResourceProperties:
      type: object
      description: Details of the StandbyVirtualMachinePool.
      properties:
        elasticityProfile:
          $ref: '#/components/schemas/StandbyVirtualMachinePoolElasticityProfile'
          description: Specifies the elasticity profile of the standby virtual machine pools.
        virtualMachineState:
          $ref: '#/components/schemas/VirtualMachineState'
          description: Specifies the desired state of virtual machines in the pool.
          x-ms-identifiers:
            - vmState
        attachedVirtualMachineScaleSetId:
          type: string
          format: arm-id
          description: Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Compute/virtualMachineScaleSet
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - virtualMachineState
    StandbyVirtualMachinePoolResourceUpdate:
      description: The type used for update operations of the StandbyVirtualMachinePoolResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/StandbyVirtualMachinePoolResourceUpdateProperties'
          x-ms-client-flatten: true
      type: object
    StandbyVirtualMachinePoolResourceUpdateProperties:
      type: object
      description: The updatable properties of the StandbyVirtualMachinePoolResource.
      properties:
        elasticityProfile:
          $ref: '#/components/schemas/StandbyVirtualMachinePoolElasticityProfileUpdate'
          description: Specifies the elasticity profile of the standby virtual machine pools.
        virtualMachineState:
          $ref: '#/components/schemas/VirtualMachineState'
          description: Specifies the desired state of virtual machines in the pool.
          x-ms-identifiers:
            - vmState
        attachedVirtualMachineScaleSetId:
          type: string
          format: arm-id
          description: Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Compute/virtualMachineScaleSet
    StandbyVirtualMachineResource:
      description: Concrete proxy resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/StandbyVirtualMachineResourceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    StandbyVirtualMachineResourceListResult:
      type: object
      description: The response of a StandbyVirtualMachineResource list operation.
      properties:
        value:
          type: array
          description: The StandbyVirtualMachineResource items on this page
          items:
            $ref: '#/components/schemas/StandbyVirtualMachineResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    StandbyVirtualMachineResourceProperties:
      type: object
      description: Details of the StandbyVirtualMachine.
      properties:
        virtualMachineResourceId:
          type: string
          description: Resource id of the virtual machine.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
      required:
        - virtualMachineResourceId
    Subnet:
      type: object
      description: Subnet of container group
      properties:
        id:
          type: string
          format: arm-id
          description: Specifies ARM resource id of the subnet.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/virtualNetworks/subnets
      required:
        - id
    VirtualMachineState:
      type: string
      description: State of standby virtual machines
      enum:
        - Running
        - Deallocated
      x-ms-enum:
        name: VirtualMachineState
        modelAsString: true
        values:
          - name: Running
            value: Running
            description: The virtual machine is up and running.
          - name: Deallocated
            value: Deallocated
            description: The virtual machine has released the lease on the underlying hardware and is powered off.
  x-stackQL-resources:
    operations:
      id: azure.standbypool.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StandbyPool~1operations~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    standby_container_group_pools:
      id: azure.standbypool.standby_container_group_pools
      name: standby_container_group_pools
      title: standby_container_group_pools
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StandbyPool~1standbyContainerGroupPools~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyContainerGroupPools~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyContainerGroupPools~1{standbyContainerGroupPoolName}~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyContainerGroupPools~1{standbyContainerGroupPoolName}~1?api-version=2023-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyContainerGroupPools~1{standbyContainerGroupPoolName}~1?api-version=2023-12-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyContainerGroupPools~1{standbyContainerGroupPoolName}~1?api-version=2023-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/standby_container_group_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/standby_container_group_pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/standby_container_group_pools/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/standby_container_group_pools/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/standby_container_group_pools/methods/delete'
    standby_virtual_machine_pools:
      id: azure.standbypool.standby_virtual_machine_pools
      name: standby_virtual_machine_pools
      title: standby_virtual_machine_pools
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1{standbyVirtualMachinePoolName}~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1{standbyVirtualMachinePoolName}~1?api-version=2023-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1{standbyVirtualMachinePoolName}~1?api-version=2023-12-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1{standbyVirtualMachinePoolName}~1?api-version=2023-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/standby_virtual_machine_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/standby_virtual_machine_pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/standby_virtual_machine_pools/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/standby_virtual_machine_pools/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/standby_virtual_machine_pools/methods/delete'
    standby_virtual_machines:
      id: azure.standbypool.standby_virtual_machines
      name: standby_virtual_machines
      title: standby_virtual_machines
      methods:
        list_by_standby_virtual_machine_pool_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1{standbyVirtualMachinePoolName}~1standbyVirtualMachines~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StandbyPool~1standbyVirtualMachinePools~1{standbyVirtualMachinePoolName}~1standbyVirtualMachines~1{standbyVirtualMachineName}~1?api-version=2023-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/standby_virtual_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/standby_virtual_machines/methods/list_by_standby_virtual_machine_pool_resource'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.StandbyPool/operations/?api-version=2023-12-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyContainerGroupPools_ListBySubscription
      tags:
        - StandbyContainerGroupPools
      description: List StandbyContainerGroupPoolResource resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyContainerGroupPoolResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyVirtualMachinePools_ListBySubscription
      tags:
        - StandbyVirtualMachinePools
      description: List StandbyVirtualMachinePoolResource resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachinePoolResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyContainerGroupPools_ListByResourceGroup
      tags:
        - StandbyContainerGroupPools
      description: List StandbyContainerGroupPoolResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyContainerGroupPoolResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyContainerGroupPools/{standbyContainerGroupPoolName}/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyContainerGroupPools_Get
      tags:
        - StandbyContainerGroupPools
      description: Get a StandbyContainerGroupPoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyContainerGroupPoolName
          in: path
          description: Name of the standby container group pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyContainerGroupPoolResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: StandbyContainerGroupPools_CreateOrUpdate
      tags:
        - StandbyContainerGroupPools
      description: Create a StandbyContainerGroupPoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyContainerGroupPoolName
          in: path
          description: Name of the standby container group pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandbyContainerGroupPoolResource'
      responses:
        '200':
          description: Resource 'StandbyContainerGroupPoolResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyContainerGroupPoolResource'
        '201':
          description: Resource 'StandbyContainerGroupPoolResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyContainerGroupPoolResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: StandbyContainerGroupPools_Update
      tags:
        - StandbyContainerGroupPools
      description: Update a StandbyContainerGroupPoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyContainerGroupPoolName
          in: path
          description: Name of the standby container group pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandbyContainerGroupPoolResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyContainerGroupPoolResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: StandbyContainerGroupPools_Delete
      tags:
        - StandbyContainerGroupPools
      description: Delete a StandbyContainerGroupPoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyContainerGroupPoolName
          in: path
          description: Name of the standby container group pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyVirtualMachinePools_ListByResourceGroup
      tags:
        - StandbyVirtualMachinePools
      description: List StandbyVirtualMachinePoolResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachinePoolResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyVirtualMachinePools_Get
      tags:
        - StandbyVirtualMachinePools
      description: Get a StandbyVirtualMachinePoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyVirtualMachinePoolName
          in: path
          description: Name of the standby virtual machine pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachinePoolResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: StandbyVirtualMachinePools_CreateOrUpdate
      tags:
        - StandbyVirtualMachinePools
      description: Create a StandbyVirtualMachinePoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyVirtualMachinePoolName
          in: path
          description: Name of the standby virtual machine pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandbyVirtualMachinePoolResource'
      responses:
        '200':
          description: Resource 'StandbyVirtualMachinePoolResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachinePoolResource'
        '201':
          description: Resource 'StandbyVirtualMachinePoolResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachinePoolResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: StandbyVirtualMachinePools_Update
      tags:
        - StandbyVirtualMachinePools
      description: Update a StandbyVirtualMachinePoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyVirtualMachinePoolName
          in: path
          description: Name of the standby virtual machine pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandbyVirtualMachinePoolResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachinePoolResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: StandbyVirtualMachinePools_Delete
      tags:
        - StandbyVirtualMachinePools
      description: Delete a StandbyVirtualMachinePoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyVirtualMachinePoolName
          in: path
          description: Name of the standby virtual machine pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/standbyVirtualMachines/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyVirtualMachines_ListByStandbyVirtualMachinePoolResource
      tags:
        - StandbyVirtualMachines
      description: List StandbyVirtualMachineResource resources by StandbyVirtualMachinePoolResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyVirtualMachinePoolName
          in: path
          description: Name of the standby virtual machine pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachineResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/{standbyVirtualMachinePoolName}/standbyVirtualMachines/{standbyVirtualMachineName}/?api-version=2023-12-01-preview:
    get:
      operationId: StandbyVirtualMachines_Get
      tags:
        - StandbyVirtualMachines
      description: Get a StandbyVirtualMachineResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: standbyVirtualMachinePoolName
          in: path
          description: Name of the standby virtual machine pool
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: standbyVirtualMachineName
          in: path
          description: Name of the standby virtual machine
          required: true
          schema:
            pattern: ^[_a-zA-Z0-9-]{3,64}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandbyVirtualMachineResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
