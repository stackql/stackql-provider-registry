openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Attestation
  description: A unified solution for remotely verifying the trustworthiness of a platform and integrity of the binaries running inside it.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ProviderName:
      name: providerName
      in: path
      description: The name of the attestation provider.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9-]{3,24}$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
  schemas:
    OperationList:
      properties:
        systemData:
          readOnly: true
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        value:
          type: array
          description: List of supported operations.
          items:
            $ref: '#/components/schemas/OperationsDefinition'
          x-ms-identifiers:
            - name
      description: List of supported operations.
      type: object
    OperationsDefinition:
      description: Definition object with the name and properties of an operation.
      properties:
        name:
          type: string
          description: Name of the operation.
        display:
          $ref: '#/components/schemas/OperationsDisplayDefinition'
          description: Display object with properties of the operation.
        properties:
          $ref: '#/components/schemas/OperationProperties'
          description: Properties of the operation
      type: object
    OperationsDisplayDefinition:
      type: object
      description: Display object with properties of the operation.
      properties:
        provider:
          type: string
          description: Resource provider of the operation.
        resource:
          type: string
          description: Resource for the operation.
        operation:
          type: string
          description: Short description of the operation.
        description:
          type: string
          description: Description of the operation.
    OperationProperties:
      description: Extra Operation properties
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: Service specifications of the operation
    ServiceSpecification:
      description: Service specification payload
      type: object
      properties:
        logSpecifications:
          description: Specifications of the Log for Microsoft Azure Attestation
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - name
    LogSpecification:
      description: Specifications of the Log for Microsoft Azure Attestation
      type: object
      properties:
        name:
          description: Name of the log
          type: string
        displayName:
          description: Localized friendly display name of the log
          type: string
    AttestationProvider:
      description: Attestation service response message.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        systemData:
          readOnly: true
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          type: object
          $ref: '#/components/schemas/StatusResult'
          description: Describes Attestation service status.
          x-ms-client-flatten: true
      type: object
    StatusResult:
      type: object
      description: Status of attestation service.
      properties:
        trustModel:
          type: string
          description: Trust model for the attestation provider.
        status:
          type: string
          description: Status of attestation service.
          enum:
            - Ready
            - NotReady
            - Error
          x-ms-enum:
            name: AttestationServiceStatus
            modelAsString: true
        attestUri:
          type: string
          description: Gets the uri of attestation service
        publicNetworkAccess:
          description: Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of private endpoint connections associated with the attestation provider.
        tpmAttestationAuthentication:
          description: The setting that controls whether authentication is enabled or disabled for TPM Attestation REST APIs.
          $ref: '#/components/schemas/TpmAttestationAuthenticationType'
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
      description: An error response from Attestation.
      type: object
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for displaying in a user interface.
      description: An error response from Attestation.
      type: object
    AttestationProviderListResult:
      description: Attestation Providers List.
      properties:
        systemData:
          readOnly: true
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        value:
          type: array
          description: Attestation Provider array.
          items:
            $ref: '#/components/schemas/AttestationProvider'
      type: object
    AttestationServicePatchParams:
      description: Parameters for patching an attestation provider
      x-ms-azure-resource: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags that will be assigned to the attestation provider.
        properties:
          $ref: '#/components/schemas/AttestationServicePatchSpecificParams'
          description: Properties of the attestation provider
      type: object
    AttestationServicePatchSpecificParams:
      type: object
      description: Client supplied parameters used to patch an existing attestation provider.
      properties:
        publicNetworkAccess:
          description: Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        tpmAttestationAuthentication:
          description: The setting that controls whether authentication is enabled or disabled for TPM Attestation REST APIs.
          $ref: '#/components/schemas/TpmAttestationAuthenticationType'
    AttestationServiceCreationParams:
      description: Parameters for creating an attestation provider
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          description: The supported Azure location where the attestation provider should be created.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The tags that will be assigned to the attestation provider.
        properties:
          $ref: '#/components/schemas/AttestationServiceCreationSpecificParams'
          description: Properties of the attestation provider
      type: object
    AttestationServiceCreationSpecificParams:
      description: Client supplied parameters used to create a new attestation provider.
      properties:
        publicNetworkAccess:
          description: Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        policySigningCertificates:
          description: JSON Web Key Set defining a set of X.509 Certificates that will represent the parent certificate for the signing certificate used for policy operations
          $ref: '#/components/schemas/JSONWebKeySet'
        tpmAttestationAuthentication:
          description: The setting that controls whether authentication is enabled or disabled for TPM Attestation REST APIs.
          $ref: '#/components/schemas/TpmAttestationAuthenticationType'
      type: object
    PublicNetworkAccessType:
      type: string
      description: The public network access type for API calls to the Attestation Provider.
      default: Enabled
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: PublicNetworkAccessType
        modelAsString: true
        values:
          - value: Enabled
            description: Enables public network connectivity to the Attestation Provider REST APIs.
          - value: Disabled
            description: Disables public network connectivity to the Attestation Provider REST APIs.
    TpmAttestationAuthenticationType:
      type: string
      description: The type for specifying the requirement of authentication for TPM Attestation REST APIs.
      default: Enabled
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: TpmAttestationAuthenticationType
        modelAsString: true
        values:
          - value: Enabled
            description: Enables the requirement of authentication for TPM Attestation REST APIs.
          - value: Disabled
            description: Disables the requirement of authentication for TPM Attestation REST APIs.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    JSONWebKey:
      type: object
      required:
        - kty
      properties:
        alg:
          description: |-
            The "alg" (algorithm) parameter identifies the algorithm intended for
            use with the key.  The values used should either be registered in the
            IANA "JSON Web Signature and Encryption Algorithms" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.
          type: string
        crv:
          description: The "crv" (curve) parameter identifies the curve type
          type: string
        d:
          description: RSA private exponent or ECC private key
          type: string
        dp:
          description: RSA Private Key Parameter
          type: string
        dq:
          description: RSA Private Key Parameter
          type: string
        e:
          description: RSA public exponent, in Base64
          type: string
        k:
          description: Symmetric key
          type: string
        kid:
          description: |-
            The "kid" (key ID) parameter is used to match a specific key.  This
            is used, for instance, to choose among a set of keys within a JWK Set
            during key rollover.  The structure of the "kid" value is
            unspecified.  When "kid" values are used within a JWK Set, different
            keys within the JWK Set SHOULD use distinct "kid" values.  (One
            example in which different keys might use the same "kid" value is if
            they have different "kty" (key type) values but are considered to be
            equivalent alternatives by the application using them.)  The "kid"
            value is a case-sensitive string.
          type: string
        kty:
          description: |-
            The "kty" (key type) parameter identifies the cryptographic algorithm
            family used with the key, such as "RSA" or "EC". "kty" values should
            either be registered in the IANA "JSON Web Key Types" registry
            established by [JWA] or be a value that contains a Collision-
            Resistant Name.  The "kty" value is a case-sensitive string.
          type: string
        'n':
          description: RSA modulus, in Base64
          type: string
        p:
          description: RSA secret prime
          type: string
        q:
          description: RSA secret prime, with p < q
          type: string
        qi:
          description: RSA Private Key Parameter
          type: string
        use:
          description: |-
            Use ("public key use") identifies the intended use of
            the public key. The "use" parameter is employed to indicate whether
            a public key is used for encrypting data or verifying the signature
            on data. Values are commonly "sig" (signature) or "enc" (encryption).
          type: string
        x:
          description: X coordinate for the Elliptic Curve point
          type: string
        x5c:
          description: |-
            The "x5c" (X.509 certificate chain) parameter contains a chain of one
            or more PKIX certificates [RFC5280].  The certificate chain is
            represented as a JSON array of certificate value strings.  Each
            string in the array is a base64-encoded (Section 4 of [RFC4648] --
            not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
            The PKIX certificate containing the key value MUST be the first
            certificate.
          type: array
          items:
            type: string
        'y':
          description: Y coordinate for the Elliptic Curve point
          type: string
    JSONWebKeySet:
      type: object
      properties:
        keys:
          description: |-
            The value of the "keys" parameter is an array of JWK values.  By
            default, the order of the JWK values within the array does not imply
            an order of preference among them, although applications of JWK Sets
            can choose to assign a meaning to the order for their purposes, if
            desired.
          type: array
          items:
            $ref: '#/components/schemas/JSONWebKey'
          x-ms-identifiers: []
  x-stackQL-resources:
    operations:
      id: azure.attestation.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Attestation~1operations~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    providers:
      id: azure.attestation.providers
      name: providers
      title: providers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1?api-version=2021-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Attestation~1attestationProviders~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/providers/methods/get'
          - $ref: '#/components/x-stackQL-resources/providers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/providers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/providers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/providers/methods/delete'
    private_endpoint_connections:
      id: azure.attestation.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1privateEndpointConnections~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.attestation.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_provider:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Attestation~1attestationProviders~1{providerName}~1privateLinkResources~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_provider'
        insert: []
        update: []
        replace: []
        delete: []
    providers_default:
      id: azure.attestation.providers_default
      name: providers_default
      title: providers_default
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Attestation~1defaultProviders~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/providers_default/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    providers_default_by_location:
      id: azure.attestation.providers_default_by_location
      name: providers_default_by_location
      title: providers_default_by_location
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Attestation~1locations~1{location}~1defaultProvider~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/providers_default_by_location/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_providers:
      id: azure.attestation.vw_providers
      name: vw_providers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.trustModel') as trust_model,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.attestUri') as attest_uri,
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
              JSON_EXTRACT(properties, '$.tpmAttestationAuthentication') as tpm_attestation_authentication,
              subscriptionId,
              resourceGroupName,
              providerName
              FROM azure.attestation.providers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.trustModel') as trust_model,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.attestUri') as attest_uri,
                JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
                JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
                JSON_EXTRACT(properties, '$.tpmAttestationAuthentication') as tpm_attestation_authentication,
                subscriptionId,
                resourceGroupName,
                providerName
                FROM azure.attestation.providers
                WHERE subscriptionId = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.attestation.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.privateEndpoint') as private_endpoint,
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              providerName,
              privateEndpointConnectionName
              FROM azure.attestation.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND providerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.privateEndpoint') as private_endpoint,
                JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                providerName,
                privateEndpointConnectionName
                FROM azure.attestation.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND providerName = 'replace-me';
    vw_providers_default_by_location:
      id: azure.attestation.vw_providers_default_by_location
      name: vw_providers_default_by_location
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.trustModel') as trust_model,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.attestUri') as attest_uri,
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
              JSON_EXTRACT(properties, '$.tpmAttestationAuthentication') as tpm_attestation_authentication,
              subscriptionId,
              location
              FROM azure.attestation.providers_default_by_location
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.trustModel') as trust_model,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.attestUri') as attest_uri,
                JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
                JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
                JSON_EXTRACT(properties, '$.tpmAttestationAuthentication') as tpm_attestation_authentication,
                subscriptionId,
                location
                FROM azure.attestation.providers_default_by_location
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
paths:
  /providers/Microsoft.Attestation/operations/?api-version=2021-06-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Azure attestation operations.
      parameters: []
      responses:
        '200':
          description: List all the operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/?api-version=2021-06-01:
    get:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_Get
      description: Get the status of Attestation Provider.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: providerName
          in: path
          description: Name of the attestation provider.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The status of the specified attestation provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProvider'
        default:
          description: Error result from Attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_Create
      description: Creates or updates an Attestation Provider.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: providerName
          in: path
          description: Name of the attestation provider.
          required: true
          schema:
            type: string
      requestBody:
        description: Client supplied parameters.
        required: true
        x-ms-requestBody-name: creationParams
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttestationServiceCreationParams'
      responses:
        '200':
          description: Created or updated attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProvider'
        '201':
          description: Created or updated attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProvider'
        default:
          description: Error result from Attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_Update
      description: Updates the Attestation Provider.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: providerName
          in: path
          description: Name of the attestation provider.
          required: true
          schema:
            type: string
      requestBody:
        description: Client supplied parameters.
        required: true
        x-ms-requestBody-name: updateParams
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttestationServicePatchParams'
      responses:
        '200':
          description: Updated attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProvider'
        default:
          description: Error result from Attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_Delete
      description: Delete Attestation Service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: providerName
          in: path
          description: Name of the attestation service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource exists and was deleted successfully
        '202':
          description: Request accepted for deletion of attestation service
        '204':
          description: Resource does not exist
        default:
          description: Error result from Attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateEndpointConnections/?api-version=2021-06-01:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: List all the private endpoint connections associated with the attestation provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProviderName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error result from Attestation service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2021-06-01:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection associated with the attestation provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProviderName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Create
      description: Update the state of specified private endpoint connection associated with the attestation provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProviderName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK -- Update the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes the specified private endpoint connection associated with the attestation provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProviderName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Delete the private endpoint connection successfully.
        '204':
          description: No Content -- The private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateLinkResources/?api-version=2021-06-01:
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByProvider
      description: Gets the private link resources supported for the attestation provider.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProviderName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Attestation/attestationProviders/?api-version=2021-06-01:
    get:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_List
      description: Returns a list of attestation providers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProviderListResult'
        default:
          description: Attestation service error result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/?api-version=2021-06-01:
    get:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_ListByResourceGroup
      description: Returns attestation providers list in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProviderListResult'
        default:
          description: Attestation service error result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Attestation/defaultProviders/?api-version=2021-06-01:
    get:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_ListDefault
      description: Get the default provider
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Retrieved information about the default provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProviderListResult'
        default:
          description: Attestation service error result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Attestation/locations/{location}/defaultProvider/?api-version=2021-06-01:
    get:
      tags:
        - AttestationProviders
      operationId: AttestationProviders_GetDefaultByLocation
      description: Get the default provider by location.
      parameters:
        - name: location
          in: path
          description: The location of the default provider.
          required: true
          schema:
            minLength: 1
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Retrieved information about the default provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttestationProvider'
        default:
          description: Attestation service error result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
