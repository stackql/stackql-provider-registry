openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Managed DevOps Infrastructure
  description: Managed DevOps Infrastructure Resource Provider.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AgentProfile:
      type: object
      description: The agent profile of the machines in the pool.
      properties:
        kind:
          type: string
          description: Discriminator property for AgentProfile.
        resourcePredictions:
          $ref: '#/components/schemas/ResourcePredictions'
          description: Defines pool buffer/stand-by agents.
        resourcePredictionsProfile:
          $ref: '#/components/schemas/ResourcePredictionsProfile'
          description: Defines how the pool buffer/stand-by agents is provided.
      discriminator:
        propertyName: kind
      required:
        - kind
    AutomaticResourcePredictionsProfile:
      description: The stand-by agent scheme is determined based on historical demand.
      x-ms-discriminator-value: Automatic
      properties:
        predictionPreference:
          $ref: '#/components/schemas/PredictionPreference'
          description: Determines the balance between cost and performance.
        kind:
          $ref: '#/components/schemas/ResourcePredictionsProfileType'
          description: Determines how the stand-by scheme should be provided.
      type: object
    Azure.Core.azureLocation:
      type: string
      description: Represents an Azure geography region where supported resource providers live.
    AzureDevOpsOrganizationProfile:
      description: Azure DevOps organization profile
      required:
        - organizations
      x-ms-discriminator-value: AzureDevOps
      properties:
        organizations:
          type: array
          description: The list of Azure DevOps organizations the pool should be present in.
          items:
            $ref: '#/components/schemas/Organization'
          x-ms-identifiers: []
        permissionProfile:
          $ref: '#/components/schemas/AzureDevOpsPermissionProfile'
          description: The type of permission which determines which accounts are admins on the Azure DevOps pool.
        kind:
          type: string
          description: Discriminator property for OrganizationProfile.
      type: object
    AzureDevOpsPermissionProfile:
      type: object
      description: Defines the type of Azure DevOps pool permission.
      properties:
        kind:
          $ref: '#/components/schemas/AzureDevOpsPermissionType'
          description: Determines who has admin permissions to the Azure DevOps pool.
        users:
          type: array
          description: User email addresses
          items:
            type: string
        groups:
          type: array
          description: Group email addresses
          items:
            type: string
      required:
        - kind
    AzureDevOpsPermissionType:
      type: string
      description: Determines who has admin permissions to the Azure DevOps pool.
      enum:
        - Inherit
        - CreatorOnly
        - SpecificAccounts
      x-ms-enum:
        name: AzureDevOpsPermissionType
        modelAsString: true
        values:
          - name: Inherit
            value: Inherit
            description: Pool will inherit permissions from the project or organization.
          - name: CreatorOnly
            value: CreatorOnly
            description: Only the pool creator will be an admin of the pool.
          - name: SpecificAccounts
            value: SpecificAccounts
            description: Only the specified accounts will be admins of the pool.
    CachingType:
      type: string
      description: The type of caching in a data disk.
      enum:
        - None
        - ReadOnly
        - ReadWrite
      x-ms-enum:
        name: CachingType
        modelAsString: true
        values:
          - name: None
            value: None
            description: Don't use host caching.
          - name: ReadOnly
            value: ReadOnly
            description: For workloads that only do read operations.
          - name: ReadWrite
            value: ReadWrite
            description: For workloads that do a balance of read and write operations.
    DataDisk:
      type: object
      description: The data disk of the VMSS.
      properties:
        caching:
          $ref: '#/components/schemas/CachingType'
          description: 'The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.'
        diskSizeGiB:
          type: integer
          format: int32
          description: The initial disk size in gigabytes.
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: The storage Account type to be used for the data disk. If omitted, the default is "standard_lrs".
        driveLetter:
          type: string
          description: The drive letter for the empty data disk. If not specified, it will be the first available letter.
    DevOpsAzureSku:
      type: object
      description: The Azure SKU of the machines in the pool.
      properties:
        name:
          type: string
          description: The Azure SKU name of the machines in the pool.
      required:
        - name
    FabricProfile:
      type: object
      description: Defines the type of fabric the agent will run on.
      properties:
        kind:
          type: string
          description: Discriminator property for FabricProfile.
      discriminator:
        propertyName: kind
      required:
        - kind
    GitHubOrganization:
      type: object
      description: Defines a GitHub organization
      properties:
        url:
          type: string
          format: uri
          description: The GitHub organization URL in which the pool should be created.
        repositories:
          type: array
          description: Optional list of repositories in which the pool should be created.
          items:
            type: string
      required:
        - url
    GitHubOrganizationProfile:
      description: GitHub organization profile
      required:
        - organizations
      x-ms-discriminator-value: GitHub
      properties:
        organizations:
          type: array
          description: The list of GitHub organizations/repositories the pool should be present in.
          items:
            $ref: '#/components/schemas/GitHubOrganization'
          x-ms-identifiers: []
        kind:
          type: string
          description: Discriminator property for OrganizationProfile.
      type: object
    ImageVersion:
      description: An image version object
      properties:
        properties:
          $ref: '#/components/schemas/ImageVersionProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ImageVersionListResult:
      type: object
      description: The response of a ImageVersion list operation.
      properties:
        value:
          type: array
          description: The ImageVersion items on this page
          items:
            $ref: '#/components/schemas/ImageVersion'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ImageVersionProperties:
      type: object
      description: Details of the ImageVersionProperties.
      properties:
        version:
          type: string
          description: Version of the image.
      required:
        - version
    LogonType:
      type: string
      description: Determines how the service should be run.
      enum:
        - Service
        - Interactive
      x-ms-enum:
        name: LogonType
        modelAsString: true
        values:
          - name: Service
            value: Service
            description: Run as a service.
          - name: Interactive
            value: Interactive
            description: Run in interactive mode.
    ManualResourcePredictionsProfile:
      description: Customer provides the stand-by agent scheme.
      x-ms-discriminator-value: Manual
      properties:
        kind:
          $ref: '#/components/schemas/ResourcePredictionsProfileType'
          description: Determines how the stand-by scheme should be provided.
      type: object
    NetworkProfile:
      type: object
      description: The network profile of the machines in the pool.
      properties:
        subnetId:
          type: string
          description: The subnet id on which to put all machines created in the pool.
      required:
        - subnetId
    Organization:
      type: object
      description: Defines an Azure DevOps organization.
      properties:
        url:
          type: string
          format: uri
          description: The Azure DevOps organization URL in which the pool should be created.
        projects:
          type: array
          description: Optional list of projects in which the pool should be created.
          items:
            type: string
        parallelism:
          type: integer
          format: int32
          description: How many machines can be created at maximum in this organization out of the maximumConcurrency of the pool.
      required:
        - url
    OrganizationProfile:
      type: object
      description: Defines the organization in which the pool will be used.
      properties:
        kind:
          type: string
          description: Discriminator property for OrganizationProfile.
      discriminator:
        propertyName: kind
      required:
        - kind
    OsDiskStorageAccountType:
      type: string
      description: The storage account type of the OS disk.
      enum:
        - Standard
        - Premium
        - StandardSSD
      x-ms-enum:
        name: OsDiskStorageAccountType
        modelAsString: true
        values:
          - name: Standard
            value: Standard
            description: Standard OS disk type.
          - name: Premium
            value: Premium
            description: Premium OS disk type.
          - name: StandardSSD
            value: StandardSSD
            description: Standard SSD OS disk type.
    OsProfile:
      type: object
      description: The OS profile of the machines in the pool.
      properties:
        secretsManagementSettings:
          $ref: '#/components/schemas/SecretsManagementSettings'
          description: The secret management settings of the machines in the pool.
        logonType:
          $ref: '#/components/schemas/LogonType'
          description: Determines how the service should be run. By default, this will be set to Service.
    PagedQuota:
      type: object
      description: Paged collection of Quota items
      properties:
        value:
          type: array
          description: The Quota items on this page
          items:
            $ref: '#/components/schemas/Quota'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    Pool:
      description: Concrete tracked resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/PoolProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    PoolImage:
      type: object
      description: The VM image of the machines in the pool.
      properties:
        resourceId:
          type: string
          description: The resource id of the image.
        wellKnownImageName:
          type: string
          description: The image to use from a well-known set of images made available to customers.
        aliases:
          type: array
          description: List of aliases to reference the image by.
          items:
            type: string
        buffer:
          type: string
          description: The percentage of the buffer to be allocated to this image.
          default: '*'
    PoolListResult:
      type: object
      description: The response of a Pool list operation.
      properties:
        value:
          type: array
          description: The Pool items on this page
          items:
            $ref: '#/components/schemas/Pool'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    PoolProperties:
      type: object
      description: Pool properties
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the current operation.
        maximumConcurrency:
          type: integer
          format: int32
          description: Defines how many resources can there be created at any given time.
          minimum: 1
          maximum: 10000
        organizationProfile:
          $ref: '#/components/schemas/OrganizationProfile'
          description: Defines the organization in which the pool will be used.
        agentProfile:
          $ref: '#/components/schemas/AgentProfile'
          description: Defines how the machine will be handled once it executed a job.
        fabricProfile:
          $ref: '#/components/schemas/FabricProfile'
          description: Defines the type of fabric the agent will run on.
        devCenterProjectResourceId:
          type: string
          description: The resource id of the DevCenter Project the pool belongs to.
      required:
        - maximumConcurrency
        - organizationProfile
        - agentProfile
        - fabricProfile
        - devCenterProjectResourceId
    PoolUpdate:
      description: The type used for update operations of the Pool.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PoolUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    PoolUpdateProperties:
      type: object
      description: The updatable properties of the Pool.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the current operation.
        maximumConcurrency:
          type: integer
          format: int32
          description: Defines how many resources can there be created at any given time.
          minimum: 1
          maximum: 10000
        organizationProfile:
          $ref: '#/components/schemas/OrganizationProfile'
          description: Defines the organization in which the pool will be used.
        agentProfile:
          $ref: '#/components/schemas/AgentProfile'
          description: Defines how the machine will be handled once it executed a job.
        fabricProfile:
          $ref: '#/components/schemas/FabricProfile'
          description: Defines the type of fabric the agent will run on.
        devCenterProjectResourceId:
          type: string
          description: The resource id of the DevCenter Project the pool belongs to.
    PredictionPreference:
      type: string
      description: Determines the balance between cost and performance.
      enum:
        - Balanced
        - MostCostEffective
        - MoreCostEffective
        - MorePerformance
        - BestPerformance
      x-ms-enum:
        name: PredictionPreference
        modelAsString: true
        values:
          - name: Balanced
            value: Balanced
            description: Balance between cost and performance.
          - name: MostCostEffective
            value: MostCostEffective
            description: Optimizes for cost over performance.
          - name: MoreCostEffective
            value: MoreCostEffective
            description: Halfway through cost and balanced.
          - name: MorePerformance
            value: MorePerformance
            description: Halfway through balanced and performance.
          - name: BestPerformance
            value: BestPerformance
            description: Optimizes for performance over cost.
    ProvisioningState:
      type: string
      description: The status of the current operation.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Provisioning
        - Updating
        - Deleting
        - Accepted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Represents a succeeded operation.
          - name: Failed
            value: Failed
            description: Represents a failed operation.
          - name: Canceled
            value: Canceled
            description: Represents a canceled operation.
          - name: Provisioning
            value: Provisioning
            description: Represents a pending operation.
          - name: Updating
            value: Updating
            description: Represents a pending operation.
          - name: Deleting
            value: Deleting
            description: Represents an operation under deletion.
          - name: Accepted
            value: Accepted
            description: Represents an accepted operation.
    Quota:
      type: object
      description: Describes Resource Quota
      properties:
        name:
          $ref: '#/components/schemas/QuotaName'
          description: The name of the quota.
          readOnly: true
        id:
          type: string
          format: arm-id
          description: Fully qualified ARM resource id
        unit:
          type: string
          description: The unit of usage measurement.
        currentValue:
          type: integer
          format: int64
          description: The current usage of the resource.
        limit:
          type: integer
          format: int64
          description: The maximum permitted usage of the resource.
      required:
        - id
        - unit
        - currentValue
        - limit
    QuotaName:
      type: object
      description: The Quota Names
      properties:
        value:
          type: string
          description: The name of the resource.
        localizedValue:
          type: string
          description: The localized name of the resource.
    ResourceDetailsObject:
      description: A ResourceDetailsObject
      properties:
        properties:
          $ref: '#/components/schemas/ResourceDetailsObjectProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ResourceDetailsObjectListResult:
      type: object
      description: The response of a ResourceDetailsObject list operation.
      properties:
        value:
          type: array
          description: The ResourceDetailsObject items on this page
          items:
            $ref: '#/components/schemas/ResourceDetailsObject'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ResourceDetailsObjectProperties:
      type: object
      description: Details of the ResourceDetailsObject.
      properties:
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: The status of the resource.
        image:
          type: string
          description: The image name of the resource.
        imageVersion:
          type: string
          description: The version of the image running on the resource.
      required:
        - status
        - image
        - imageVersion
    ResourcePredictions:
      description: Defines pool buffer.
      properties: {}
      type: object
    ResourcePredictionsProfile:
      type: object
      description: Determines how the stand-by scheme should be provided.
      properties:
        kind:
          $ref: '#/components/schemas/ResourcePredictionsProfileType'
          description: Determines how the stand-by scheme should be provided.
      discriminator:
        propertyName: kind
      required:
        - kind
    ResourcePredictionsProfileType:
      type: string
      description: Determines how the stand-by scheme should be provided.
      enum:
        - Manual
        - Automatic
      x-ms-enum:
        name: ResourcePredictionsProfileType
        modelAsString: true
        values:
          - name: Manual
            value: Manual
            description: Customer provides the stand-by agent scheme.
          - name: Automatic
            value: Automatic
            description: The stand-by agent scheme is determined based on historical demand.
    ResourceSku:
      description: A ResourceSku
      properties:
        properties:
          $ref: '#/components/schemas/ResourceSkuProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    ResourceSkuCapabilities:
      type: object
      description: Describes The SKU capabilities object.
      properties:
        name:
          type: string
          description: The name of the SKU capability.
        value:
          type: string
          description: The value of the SKU capability.
      required:
        - name
        - value
    ResourceSkuListResult:
      type: object
      description: The response of a ResourceSku list operation.
      properties:
        value:
          type: array
          description: The ResourceSku items on this page
          items:
            $ref: '#/components/schemas/ResourceSku'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ResourceSkuLocationInfo:
      type: object
      description: Describes an available Compute SKU Location Information.
      properties:
        location:
          $ref: '#/components/schemas/Azure.Core.azureLocation'
          description: Location of the SKU
        zones:
          type: array
          description: List of availability zones where the SKU is supported.
          items:
            type: string
        zoneDetails:
          type: array
          description: Gets details of capabilities available to a SKU in specific zones.
          items:
            $ref: '#/components/schemas/ResourceSkuZoneDetails'
          x-ms-identifiers: []
      required:
        - location
        - zones
        - zoneDetails
    ResourceSkuProperties:
      type: object
      description: Properties of a ResourceSku
      properties:
        resourceType:
          type: string
          description: The type of resource the SKU applies to.
        tier:
          type: string
          description: The tier of virtual machines in a scale set
        size:
          type: string
          description: The size of the SKU.
        family:
          type: string
          description: The family of the SKU.
        locations:
          type: array
          description: The set of locations that the SKU is available.
          items:
            $ref: '#/components/schemas/Azure.Core.azureLocation'
        locationInfo:
          type: array
          description: A list of locations and availability zones in those locations where the SKU is available
          items:
            $ref: '#/components/schemas/ResourceSkuLocationInfo'
          x-ms-identifiers: []
        capabilities:
          type: array
          description: Name value pairs to describe the capability.
          items:
            $ref: '#/components/schemas/ResourceSkuCapabilities'
          x-ms-identifiers: []
        restrictions:
          type: array
          description: The restrictions of the SKU.
          items:
            $ref: '#/components/schemas/ResourceSkuRestrictions'
          x-ms-identifiers: []
      required:
        - resourceType
        - tier
        - size
        - family
        - locations
        - locationInfo
        - capabilities
        - restrictions
    ResourceSkuRestrictionInfo:
      type: object
      description: Describes an available Compute SKU Restriction Information.
      properties:
        locations:
          type: array
          description: Locations where the SKU is restricted
          items:
            $ref: '#/components/schemas/Azure.Core.azureLocation'
        zones:
          type: array
          description: List of availability zones where the SKU is restricted.
          items:
            type: string
    ResourceSkuRestrictions:
      type: object
      description: The restrictions of the SKU.
      properties:
        type:
          $ref: '#/components/schemas/ResourceSkuRestrictionsType'
          description: the type of restrictions.
        values:
          type: array
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
          items:
            type: string
        restrictionInfo:
          $ref: '#/components/schemas/ResourceSkuRestrictionInfo'
          description: The information about the restriction where the SKU cannot be used.
        reasonCode:
          $ref: '#/components/schemas/ResourceSkuRestrictionsReasonCode'
          description: the reason for restriction.
      required:
        - values
        - restrictionInfo
    ResourceSkuRestrictionsReasonCode:
      type: string
      description: Describes the reason for SKU restriction.
      enum:
        - QuotaId
        - NotAvailableForSubscription
      x-ms-enum:
        name: ResourceSkuRestrictionsReasonCode
        modelAsString: true
        values:
          - name: QuotaId
            value: QuotaId
            description: The restriction is due to exceeding a quota limitation.
          - name: NotAvailableForSubscription
            value: NotAvailableForSubscription
            description: The restriction is not available for this subscription.
    ResourceSkuRestrictionsType:
      type: string
      description: Describes the kind of SKU restrictions that can exist
      enum:
        - Location
        - Zone
      x-ms-enum:
        name: ResourceSkuRestrictionsType
        modelAsString: true
        values:
          - name: Location
            value: Location
            description: SKU restricted by location.
          - name: Zone
            value: Zone
            description: SKU restricted by availability zone.
    ResourceSkuZoneDetails:
      type: object
      description: Describes The zonal capabilities of a SKU.
      properties:
        name:
          type: array
          description: Gets the set of zones that the SKU is available in with the specified capabilities.
          items:
            type: string
        capabilities:
          type: array
          description: A list of capabilities that are available for the SKU in the specified list of zones.
          items:
            $ref: '#/components/schemas/ResourceSkuCapabilities'
          x-ms-identifiers: []
      required:
        - name
        - capabilities
    ResourceStatus:
      type: string
      description: The status of the machine resource.
      enum:
        - Ready
        - NotReady
        - Allocated
        - PendingReturn
        - Returned
        - Leased
        - Provisioning
        - Updating
        - Starting
        - PendingReimage
        - Reimaging
      x-ms-enum:
        name: ResourceStatus
        modelAsString: true
        values:
          - name: Ready
            value: Ready
            description: Represents a machine resource that is ready.
          - name: NotReady
            value: NotReady
            description: Represents a machine resource that is not ready.
          - name: Allocated
            value: Allocated
            description: Represents a machine resource that is allocated.
          - name: PendingReturn
            value: PendingReturn
            description: Represents a machine resource that is pending return.
          - name: Returned
            value: Returned
            description: Represents a machine resource that is returned.
          - name: Leased
            value: Leased
            description: Represents a machine resource that is leased.
          - name: Provisioning
            value: Provisioning
            description: Represents a machine resource that is provisioning.
          - name: Updating
            value: Updating
            description: Represents a machine resource that is updating.
          - name: Starting
            value: Starting
            description: Represents a machine resource that is starting.
          - name: PendingReimage
            value: PendingReimage
            description: Represents a machine resource that is pending reimage.
          - name: Reimaging
            value: Reimaging
            description: Represents a machine resource that is reimaging.
    SecretsManagementSettings:
      type: object
      description: The secret management settings of the machines in the pool.
      properties:
        certificateStoreLocation:
          type: string
          description: Where to store certificates on the machine.
        observedCertificates:
          type: array
          description: The list of certificates to install on all machines in the pool.
          items:
            type: string
            format: uri
        keyExportable:
          type: boolean
          description: Defines if the key of the certificates should be exportable.
      required:
        - observedCertificates
        - keyExportable
    Stateful:
      description: Stateful profile meaning that the machines will be returned to the pool after running a job.
      x-ms-discriminator-value: Stateful
      properties:
        maxAgentLifetime:
          type: string
          description: How long should stateful machines be kept around. The maximum is one week.
        gracePeriodTimeSpan:
          type: string
          description: How long should the machine be kept around after it ran a workload when there are no stand-by agents. The maximum is one week.
        kind:
          type: string
          description: Discriminator property for AgentProfile.
        resourcePredictions:
          $ref: '#/components/schemas/ResourcePredictions'
          description: Defines pool buffer/stand-by agents.
        resourcePredictionsProfile:
          $ref: '#/components/schemas/ResourcePredictionsProfile'
          description: Defines how the pool buffer/stand-by agents is provided.
      type: object
    StatelessAgentProfile:
      description: Stateless profile meaning that the machines will be cleaned up after running a job.
      x-ms-discriminator-value: Stateless
      properties:
        kind:
          type: string
          description: Discriminator property for AgentProfile.
        resourcePredictions:
          $ref: '#/components/schemas/ResourcePredictions'
          description: Defines pool buffer/stand-by agents.
        resourcePredictionsProfile:
          $ref: '#/components/schemas/ResourcePredictionsProfile'
          description: Defines how the pool buffer/stand-by agents is provided.
      type: object
    StorageAccountType:
      type: string
      description: StorageAccountType enums
      enum:
        - Standard_LRS
        - Premium_LRS
        - StandardSSD_LRS
        - Premium_ZRS
        - StandardSSD_ZRS
      x-ms-enum:
        name: StorageAccountType
        modelAsString: true
        values:
          - name: StandardLRS
            value: Standard_LRS
            description: The data disk should use standard locally redundant storage.
          - name: PremiumLRS
            value: Premium_LRS
            description: The data disk should use premium locally redundant storage.
          - name: StandardSSDLRS
            value: StandardSSD_LRS
            description: The data disk should use standard SSD locally redundant storage.
          - name: PremiumZRS
            value: Premium_ZRS
            description: The data disk should use premium SSD zonal redundant storage.
          - name: StandardSSDZRS
            value: StandardSSD_ZRS
            description: The data disk should use standard SSD zonal redundant storage.
    StorageProfile:
      type: object
      description: The storage profile of the VMSS.
      properties:
        osDiskStorageAccountType:
          $ref: '#/components/schemas/OsDiskStorageAccountType'
          description: The Azure SKU name of the machines in the pool.
        dataDisks:
          type: array
          description: A list of empty data disks to attach.
          items:
            $ref: '#/components/schemas/DataDisk'
          x-ms-identifiers: []
    VmssFabricProfile:
      description: The agents will run on Virtual Machine Scale Sets.
      required:
        - sku
        - images
      x-ms-discriminator-value: Vmss
      properties:
        sku:
          $ref: '#/components/schemas/DevOpsAzureSku'
          description: The Azure SKU of the machines in the pool.
        images:
          type: array
          description: The VM images of the machines in the pool.
          items:
            $ref: '#/components/schemas/PoolImage'
          x-ms-identifiers: []
        osProfile:
          $ref: '#/components/schemas/OsProfile'
          description: The OS profile of the machines in the pool.
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: The storage profile of the machines in the pool.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: The network profile of the machines in the pool.
        kind:
          type: string
          description: Discriminator property for FabricProfile.
      type: object
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.devops_infrastructure.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DevOpsInfrastructure~1operations?api-version=2024-04-04-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    skus:
      id: azure.devops_infrastructure.skus
      name: skus
      title: skus
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevOpsInfrastructure~1locations~1{locationName}~1skus?api-version=2024-04-04-preview/get'
            operationId: Sku_ListByLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceSkuListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus/methods/list_by_location'
        insert: []
        update: []
        replace: []
        delete: []
    subscription_usages:
      id: azure.devops_infrastructure.subscription_usages
      name: subscription_usages
      title: subscription_usages
      methods:
        usages:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevOpsInfrastructure~1locations~1{location}~1usages?api-version=2024-04-04-preview/get'
            operationId: SubscriptionUsages_Usages
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedQuota
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    pools:
      id: azure.devops_infrastructure.pools
      name: pools
      title: pools
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevOpsInfrastructure~1pools?api-version=2024-04-04-preview/get'
            operationId: Pools_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PoolListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevOpsInfrastructure~1pools?api-version=2024-04-04-preview/get'
            operationId: Pools_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PoolListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevOpsInfrastructure~1pools~1{poolName}?api-version=2024-04-04-preview/get'
            operationId: Pools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Pool
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevOpsInfrastructure~1pools~1{poolName}?api-version=2024-04-04-preview/put'
            operationId: Pools_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Pool
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevOpsInfrastructure~1pools~1{poolName}?api-version=2024-04-04-preview/patch'
            operationId: Pools_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Pool
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevOpsInfrastructure~1pools~1{poolName}?api-version=2024-04-04-preview/delete'
            operationId: Pools_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/pools/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pools/methods/delete'
    image_versions:
      id: azure.devops_infrastructure.image_versions
      name: image_versions
      title: image_versions
      methods:
        list_by_image:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevOpsInfrastructure~1images~1{imageName}~1versions?api-version=2024-04-04-preview/get'
            operationId: ImageVersions_ListByImage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImageVersionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/image_versions/methods/list_by_image'
        insert: []
        update: []
        replace: []
        delete: []
    resource_details:
      id: azure.devops_infrastructure.resource_details
      name: resource_details
      title: resource_details
      methods:
        list_by_pool:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevOpsInfrastructure~1pools~1{poolName}~1resources?api-version=2024-04-04-preview/get'
            operationId: ResourceDetails_ListByPool
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceDetailsObjectListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_details/methods/list_by_pool'
        insert: []
        update: []
        replace: []
        delete: []
    vw_pools:
      id: azure.devops_infrastructure.vw_pools
      name: vw_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.maximumConcurrency') as "maximum_concurrency",
              JSON_EXTRACT(properties, '$.organizationProfile') as "organization_profile",
              JSON_EXTRACT(properties, '$.agentProfile') as "agent_profile",
              JSON_EXTRACT(properties, '$.fabricProfile') as "fabric_profile",
              JSON_EXTRACT(properties, '$.devCenterProjectResourceId') as "dev_center_project_resource_id",
              subscriptionId,
              resourceGroupName,
              poolName
              FROM azure.devops_infrastructure.pools
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.maximumConcurrency') as "maximum_concurrency",
                json_extract_path_text(properties, '$.organizationProfile') as "organization_profile",
                json_extract_path_text(properties, '$.agentProfile') as "agent_profile",
                json_extract_path_text(properties, '$.fabricProfile') as "fabric_profile",
                json_extract_path_text(properties, '$.devCenterProjectResourceId') as "dev_center_project_resource_id",
                subscriptionId,
                resourceGroupName,
                poolName
                FROM azure.devops_infrastructure.pools
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.DevOpsInfrastructure/operations?api-version=2024-04-04-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{locationName}/skus?api-version=2024-04-04-preview:
    get:
      operationId: Sku_ListByLocation
      tags:
        - Sku
      description: List ResourceSku resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: locationName
          in: path
          description: Name of the location.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkuListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/locations/{location}/usages?api-version=2024-04-04-preview:
    get:
      operationId: SubscriptionUsages_Usages
      tags:
        - SubscriptionUsages
      description: List Quota resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedQuota'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DevOpsInfrastructure/pools?api-version=2024-04-04-preview:
    get:
      operationId: Pools_ListBySubscription
      tags:
        - Pools
      description: List Pool resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/images/{imageName}/versions?api-version=2024-04-04-preview:
    get:
      operationId: ImageVersions_ListByImage
      tags:
        - ImageVersions
      description: List ImageVersion resources by Image
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: imageName
          in: path
          description: Name of the image.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools?api-version=2024-04-04-preview:
    get:
      operationId: Pools_ListByResourceGroup
      tags:
        - Pools
      description: List Pool resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}?api-version=2024-04-04-preview:
    get:
      operationId: Pools_Get
      tags:
        - Pools
      description: Get a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Name of the pool. It needs to be globally unique.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Pools_CreateOrUpdate
      tags:
        - Pools
      description: Create a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Name of the pool. It needs to be globally unique.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]*$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pool'
      responses:
        '200':
          description: Resource 'Pool' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '201':
          description: Resource 'Pool' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Pools_Update
      tags:
        - Pools
      description: Update a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Name of the pool. It needs to be globally unique.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]*$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pool'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Pools_Delete
      tags:
        - Pools
      description: Delete a Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Name of the pool. It needs to be globally unique.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]*$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevOpsInfrastructure/pools/{poolName}/resources?api-version=2024-04-04-preview:
    get:
      operationId: ResourceDetails_ListByPool
      tags:
        - ResourceDetails
      description: List ResourceDetailsObject resources by Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: poolName
          in: path
          description: Name of the pool. It needs to be globally unique.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9-.]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetailsObjectListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
