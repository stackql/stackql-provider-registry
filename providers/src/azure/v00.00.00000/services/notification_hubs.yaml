openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Notification Hubs
  description: Azure Notification Hubs provide an easy-to-use and scaled-out push engine that allows you to send notifications to any platform (iOS, Android, Windows, Kindle, Baidu, etc.) from any backend (cloud or on-premises).
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    NamespaceName:
      name: namespaceName
      in: path
      description: Namespace name
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 1
        pattern: ^[a-zA-Z][a-zA-Z0-9-]*$
        type: string
    HubName:
      name: notificationHubName
      in: path
      description: Notification Hub name
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 265
        minLength: 1
        pattern: ^[a-zA-Z][a-zA-Z0-9-./_]*$
        type: string
    AuthorizationRuleName:
      name: authorizationRuleName
      in: path
      description: Authorization Rule Name
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 256
        minLength: 1
        pattern: ^[a-zA-Z0-9!()*-._]+$
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: Private Endpoint Connection Name
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 87
        minLength: 1
        pattern: ^[a-zA-Z][a-zA-Z0-9-]*\.[a-fA-F0-9\-]+$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    AccessRights:
      description: Defines values for AccessRights.
      enum:
        - Manage
        - Send
        - Listen
      type: string
      x-ms-enum:
        name: AccessRights
        modelAsString: true
    AdmCredential:
      description: Description of a NotificationHub AdmCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AdmCredentialProperties'
      type: object
    AdmCredentialProperties:
      description: Description of a NotificationHub AdmCredential.
      required:
        - authTokenUrl
        - clientId
        - clientSecret
      type: object
      properties:
        clientId:
          description: Gets or sets the client identifier.
          minLength: 1
          type: string
          x-ms-secret: true
        clientSecret:
          description: Gets or sets the credential secret access key.
          minLength: 1
          type: string
          x-ms-secret: true
        authTokenUrl:
          description: Gets or sets the URL of the authorization token.
          minLength: 1
          type: string
          x-ms-secret: true
    ApnsCredential:
      description: Description of a NotificationHub ApnsCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApnsCredentialProperties'
      type: object
    ApnsCredentialProperties:
      description: Description of a NotificationHub ApnsCredential.
      required:
        - endpoint
      type: object
      properties:
        apnsCertificate:
          description: Gets or sets the APNS certificate.
          type: string
          x-ms-secret: true
        certificateKey:
          description: Gets or sets the certificate key.
          type: string
          x-ms-secret: true
        endpoint:
          description: Gets or sets the endpoint of this credential.
          minLength: 1
          type: string
          x-ms-secret: true
        thumbprint:
          description: Gets or sets the APNS certificate Thumbprint
          type: string
          x-ms-secret: true
        keyId:
          description: "Gets or sets a 10-character key identifier (kid) key, obtained from\r\nyour developer account"
          type: string
          x-ms-secret: true
        appName:
          description: Gets or sets the name of the application
          type: string
          x-ms-secret: true
        appId:
          description: "Gets or sets the issuer (iss) registered claim key, whose value is\r\nyour 10-character Team ID, obtained from your developer account"
          type: string
          x-ms-secret: true
        token:
          description: "Gets or sets provider Authentication Token, obtained through your\r\ndeveloper account"
          type: string
          x-ms-secret: true
    Availability:
      description: Represents metric availability (part of RP operation descriptions).
      type: object
      properties:
        timeGrain:
          description: Time grain of the availability.
          type: string
          readOnly: true
        blobDuration:
          description: Duration of the availability blob.
          type: string
          readOnly: true
    BaiduCredential:
      description: Description of a NotificationHub BaiduCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BaiduCredentialProperties'
      type: object
    BaiduCredentialProperties:
      description: Description of a NotificationHub BaiduCredential.
      required:
        - baiduApiKey
        - baiduEndPoint
        - baiduSecretKey
      type: object
      properties:
        baiduApiKey:
          description: Gets or sets baidu Api Key.
          minLength: 1
          type: string
          x-ms-secret: true
        baiduEndPoint:
          description: Gets or sets baidu Endpoint.
          minLength: 1
          type: string
          x-ms-secret: true
        baiduSecretKey:
          description: Gets or sets baidu Secret Key
          minLength: 1
          type: string
          x-ms-secret: true
    BrowserCredential:
      description: Description of a NotificationHub BrowserCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BrowserCredentialProperties'
      type: object
    BrowserCredentialProperties:
      description: Description of a NotificationHub BrowserCredential.
      required:
        - subject
        - vapidPrivateKey
        - vapidPublicKey
      type: object
      properties:
        subject:
          description: Gets or sets web push subject.
          minLength: 1
          type: string
          x-ms-secret: true
        vapidPrivateKey:
          description: Gets or sets VAPID private key.
          minLength: 1
          type: string
          x-ms-secret: true
        vapidPublicKey:
          description: Gets or sets VAPID public key.
          minLength: 1
          type: string
          x-ms-secret: true
    CheckAvailabilityParameters:
      description: "Parameters supplied to the Check Name Availability for Namespace and\r\nNotificationHubs."
      required:
        - name
      type: object
      properties:
        id:
          description: Gets resource Id
          type: string
          readOnly: true
        name:
          description: Gets or sets resource name
          minLength: 1
          type: string
        type:
          description: Gets resource type
          type: string
          readOnly: true
        location:
          description: Gets or sets resource location
          type: string
        tags:
          description: Gets or sets resource tags
          type: object
          additionalProperties:
            type: string
        isAvailiable:
          description: Not used and deprecated since API version 2023-01-01-preview
          type: boolean
        sku:
          $ref: '#/components/schemas/Sku'
    CheckAvailabilityResult:
      description: Description of a CheckAvailability resource.
      properties:
        isAvailiable:
          description: "Gets or sets true if the name is available and can be used to\r\ncreate new Namespace/NotificationHub. Otherwise false."
          type: boolean
        location:
          description: Deprecated - only for compatibility.
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Deprecated - only for compatibility.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
      type: object
    ConnectionDetails:
      description: "Part of Private Endpoint description that stores information about a connection between Private Endpoint and Notification Hubs namespace.\r\nThis is internal class, not visible to customers, and we use it only to discover the link identifier."
      type: object
      properties:
        id:
          description: "A unique ID of the connection. This is not the ARM id, but rather an internal identifier set by the Networking RP. Notification Hubs code\r\ndoes not analyze it."
          type: string
          readOnly: true
        privateIpAddress:
          description: IP address of the Private Endpoint. This is not used by Notification Hubs.
          type: string
          readOnly: true
        linkIdentifier:
          description: "Link identifier. This is a string representation of an integer that is also encoded in every IPv6 frame received by Front Door,\r\nand we use it to create implicit authorization rule that allows connection from the associated Private Endpoint."
          type: string
          readOnly: true
        groupId:
          description: Group name. Always "namespace" for Notification Hubs.
          type: string
          readOnly: true
        memberName:
          description: Member name. Always "namespace" for Notification Hubs.
          type: string
          readOnly: true
    DebugSendResponse:
      description: Description of a NotificationHub Resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DebugSendResult'
        location:
          description: Deprecated - only for compatibility.
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Deprecated - only for compatibility.
          type: object
          additionalProperties:
            type: string
      type: object
    DebugSendResult:
      description: Result of DebugSend operations.
      type: object
      properties:
        success:
          format: int64
          description: Gets or sets successful send
          type: integer
          readOnly: true
        failure:
          format: int64
          description: Gets or sets send failure
          type: integer
          readOnly: true
        results:
          description: Gets or sets actual failure description
          type: array
          items:
            $ref: '#/components/schemas/RegistrationResult'
          readOnly: true
          x-ms-identifiers: []
    FcmV1Credential:
      description: Description of a NotificationHub FcmV1Credential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FcmV1CredentialProperties'
      type: object
    FcmV1CredentialProperties:
      description: Description of a NotificationHub FcmV1Credential.
      required:
        - clientEmail
        - privateKey
        - projectId
      type: object
      properties:
        clientEmail:
          description: Gets or sets client email.
          minLength: 1
          type: string
          x-ms-secret: true
        privateKey:
          description: Gets or sets private key.
          minLength: 1
          type: string
          x-ms-secret: true
        projectId:
          description: Gets or sets project id.
          minLength: 1
          type: string
          x-ms-secret: true
    GcmCredential:
      description: Description of a NotificationHub GcmCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GcmCredentialProperties'
      type: object
    GcmCredentialProperties:
      description: Description of a NotificationHub GcmCredential.
      required:
        - googleApiKey
      type: object
      properties:
        gcmEndpoint:
          description: Gets or sets the GCM endpoint.
          type: string
          x-ms-secret: true
        googleApiKey:
          description: Gets or sets the Google API key.
          minLength: 1
          type: string
          x-ms-secret: true
    GroupConnectivityInformation:
      description: "Represents a connectivity information to Notification Hubs namespace. This is part of PrivateLinkService proxy that tell\r\nthe Networking RP how to connect to the Notification Hubs namespace."
      type: object
      properties:
        groupId:
          description: Group id. Always set to "namespace".
          type: string
          readOnly: true
        memberName:
          description: Member name. Always set to "namespace".
          type: string
          readOnly: true
        customerVisibleFqdns:
          description: List of customer-visible domain names that point to a Notification Hubs namespace.
          type: array
          items:
            type: string
          readOnly: true
        internalFqdn:
          description: "One of the domain name from the customer-visible names; this is used internally by Private Link service to make connection to Notification Hubs\r\nnamespace."
          type: string
          readOnly: true
        redirectMapId:
          description: Not used by Notification Hubs.
          type: string
          readOnly: true
        privateLinkServiceArmRegion:
          description: ARM region for Private Link Service. We use the region that contains the connected Notification Hubs namespace.
          type: string
          readOnly: true
    IpRule:
      description: A network authorization rule that filters traffic based on IP address.
      required:
        - ipMask
        - rights
      type: object
      properties:
        ipMask:
          description: IP mask.
          minLength: 1
          type: string
        rights:
          description: List of access rights.
          type: array
          items:
            $ref: '#/components/schemas/AccessRights'
    LogSpecification:
      description: A single log category specification.
      type: object
      properties:
        name:
          description: Name of the log category.
          type: string
          readOnly: true
        displayName:
          description: Display name of the log category.
          type: string
          readOnly: true
        blobDuration:
          description: Duration of data written to a single blob.
          type: string
          readOnly: true
        categoryGroups:
          description: Category group for the log specification.
          type: array
          items:
            type: string
    MetricSpecification:
      description: A metric specification.
      type: object
      properties:
        name:
          description: Metric name / id.
          type: string
          readOnly: true
        displayName:
          description: User-visible metric name.
          type: string
          readOnly: true
        displayDescription:
          description: Description of the metric.
          type: string
          readOnly: true
        unit:
          description: Metric unit.
          type: string
          readOnly: true
        aggregationType:
          description: Type of the aggregation (Average, Minimum, Maximum, Total or Count).
          type: string
          readOnly: true
        availabilities:
          description: List of availabilities.
          type: array
          items:
            $ref: '#/components/schemas/Availability'
          readOnly: true
          x-ms-identifiers: []
        supportedTimeGrainTypes:
          description: List of supported time grain types.
          type: array
          items:
            type: string
          readOnly: true
          x-ms-identifiers: []
        metricFilterPattern:
          description: The matching regex pattern to be applied to the field pointed by the "metricsFilterPathSelector" flag in the ARM manifest.
          type: string
          readOnly: true
        fillGapWithZero:
          description: Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published.
          type: boolean
          readOnly: true
    MpnsCredential:
      description: Description of a NotificationHub MpnsCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MpnsCredentialProperties'
      type: object
    MpnsCredentialProperties:
      description: Description of a NotificationHub MpnsCredential.
      required:
        - certificateKey
        - mpnsCertificate
        - thumbprint
      type: object
      properties:
        mpnsCertificate:
          description: Gets or sets the MPNS certificate.
          minLength: 1
          type: string
          x-ms-secret: true
        certificateKey:
          description: Gets or sets the certificate key for this credential.
          minLength: 1
          type: string
          x-ms-secret: true
        thumbprint:
          description: Gets or sets the MPNS certificate Thumbprint
          minLength: 1
          type: string
          x-ms-secret: true
    NamespaceListResult:
      description: The response of the List Namespace operation.
      type: object
      properties:
        value:
          description: Gets or sets result of the List AuthorizationRules operation.
          type: array
          items:
            $ref: '#/components/schemas/NamespaceResource'
          readOnly: true
        nextLink:
          description: Gets or sets link to the next set of results.
          type: string
          readOnly: true
    NamespacePatchParameters:
      description: Patch parameter for NamespaceResource.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
        properties:
          $ref: '#/components/schemas/NamespaceProperties'
        tags:
          type: object
          additionalProperties:
            type: string
      type: object
    NamespaceProperties:
      description: Represents namespace properties.
      type: object
      properties:
        name:
          description: "Name of the Notification Hubs namespace. This is immutable property, set automatically \r\nby the service when the namespace is created."
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/OperationProvisioningState'
        status:
          $ref: '#/components/schemas/NamespaceStatus'
        enabled:
          description: Gets or sets whether or not the namespace is currently enabled.
          type: boolean
          readOnly: true
        critical:
          description: Gets or sets whether or not the namespace is set as Critical.
          type: boolean
          readOnly: true
        subscriptionId:
          description: Namespace subscription id.
          type: string
          readOnly: true
        region:
          description: "Region. The value is always set to the same value as Namespace.Location, so we are deprecating\r\nthis property."
          type: string
          readOnly: true
        metricId:
          description: Azure Insights Metrics id.
          type: string
          readOnly: true
        createdAt:
          format: date-time
          description: Time when the namespace was created.
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          description: Time when the namespace was updated.
          type: string
          readOnly: true
        namespaceType:
          $ref: '#/components/schemas/NamespaceType'
        replicationRegion:
          $ref: '#/components/schemas/ReplicationRegion'
        zoneRedundancy:
          $ref: '#/components/schemas/ZoneRedundancyPreference'
        networkAcls:
          $ref: '#/components/schemas/NetworkAcls'
        pnsCredentials:
          $ref: '#/components/schemas/PnsCredentials'
        serviceBusEndpoint:
          description: "Gets or sets endpoint you can use to perform NotificationHub\r\noperations."
          type: string
          readOnly: true
        privateEndpointConnections:
          description: Private Endpoint Connections for namespace
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnectionResource'
          readOnly: true
        scaleUnit:
          description: Gets or sets scaleUnit where the namespace gets created
          type: string
          x-ms-mutability:
            - create
            - read
        dataCenter:
          description: Deprecated.
          type: string
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
    NamespaceResource:
      description: Notification Hubs Namespace Resource.
      required:
        - location
        - sku
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        sku:
          $ref: '#/components/schemas/Sku'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NamespaceProperties'
      type: object
    NamespaceStatus:
      description: Namespace status.
      enum:
        - Created
        - Creating
        - Suspended
        - Deleting
      type: string
      x-ms-enum:
        name: NamespaceStatus
        modelAsString: true
    NamespaceType:
      description: Defines values for NamespaceType.
      enum:
        - Messaging
        - NotificationHub
      type: string
      x-ms-enum:
        name: NamespaceType
        modelAsString: true
    NetworkAcls:
      description: A collection of network authorization rules.
      type: object
      properties:
        ipRules:
          description: List of IP rules.
          type: array
          items:
            $ref: '#/components/schemas/IpRule'
          x-ms-identifiers: []
        publicNetworkRule:
          $ref: '#/components/schemas/PublicInternetAuthorizationRule'
    NotificationHubListResult:
      description: The response of the List NotificationHub operation.
      type: object
      properties:
        value:
          description: Gets or sets result of the List AuthorizationRules operation.
          type: array
          items:
            $ref: '#/components/schemas/NotificationHubResource'
          readOnly: true
        nextLink:
          description: Gets or sets link to the next set of results.
          type: string
          readOnly: true
    NotificationHubPatchParameters:
      description: Patch parameter for NamespaceResource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NotificationHubProperties'
        sku:
          $ref: '#/components/schemas/Sku'
        tags:
          type: object
          additionalProperties:
            type: string
      type: object
    NotificationHubProperties:
      description: NotificationHub properties.
      type: object
      properties:
        name:
          description: Gets or sets the NotificationHub name.
          type: string
          x-ms-mutability:
            - create
            - read
        registrationTtl:
          description: Gets or sets the RegistrationTtl of the created NotificationHub
          type: string
        authorizationRules:
          description: Gets or sets the AuthorizationRules of the created NotificationHub
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessAuthorizationRuleProperties'
          readOnly: true
          x-ms-secret: true
          x-ms-identifiers:
            - keyName
        apnsCredential:
          $ref: '#/components/schemas/ApnsCredential'
        wnsCredential:
          $ref: '#/components/schemas/WnsCredential'
        gcmCredential:
          $ref: '#/components/schemas/GcmCredential'
        mpnsCredential:
          $ref: '#/components/schemas/MpnsCredential'
        admCredential:
          $ref: '#/components/schemas/AdmCredential'
        baiduCredential:
          $ref: '#/components/schemas/BaiduCredential'
        browserCredential:
          $ref: '#/components/schemas/BrowserCredential'
        xiaomiCredential:
          $ref: '#/components/schemas/XiaomiCredential'
        fcmV1Credential:
          $ref: '#/components/schemas/FcmV1Credential'
        dailyMaxActiveDevices:
          format: int64
          type: integer
          readOnly: true
    NotificationHubResource:
      description: Notification Hub Resource.
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NotificationHubProperties'
        sku:
          $ref: '#/components/schemas/Sku'
      type: object
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationDisplay:
      description: The object that represents the operation.
      type: object
      properties:
        provider:
          description: 'Gets service provider: Microsoft.NotificationHubs'
          type: string
          readOnly: true
        resource:
          description: 'Gets resource on which the operation is performed: Invoice, etc.'
          type: string
          readOnly: true
        operation:
          description: 'Gets operation type: Read, write, delete, etc.'
          type: string
          readOnly: true
        description:
          description: Human-friendly operation description.
          type: string
          readOnly: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationProperties:
      description: Optional operation properties.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
    OperationProvisioningState:
      description: Defines values for OperationProvisioningState.
      enum:
        - Unknown
        - InProgress
        - Succeeded
        - Failed
        - Canceled
        - Pending
        - Disabled
      type: string
      x-ms-enum:
        name: OperationProvisioningState
        modelAsString: true
    PnsCredentials:
      description: Collection of Notification Hub or Notification Hub Namespace PNS credentials.
      type: object
      properties:
        admCredential:
          $ref: '#/components/schemas/AdmCredential'
        apnsCredential:
          $ref: '#/components/schemas/ApnsCredential'
        baiduCredential:
          $ref: '#/components/schemas/BaiduCredential'
        browserCredential:
          $ref: '#/components/schemas/BrowserCredential'
        gcmCredential:
          $ref: '#/components/schemas/GcmCredential'
        mpnsCredential:
          $ref: '#/components/schemas/MpnsCredential'
        wnsCredential:
          $ref: '#/components/schemas/WnsCredential'
        xiaomiCredential:
          $ref: '#/components/schemas/XiaomiCredential'
        fcmV1Credential:
          $ref: '#/components/schemas/FcmV1Credential'
      x-ms-secret: true
    PnsCredentialsResource:
      description: "Description of a NotificationHub PNS Credentials. This is a response of the POST requests that return namespace or hubs\r\nPNS credentials."
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PnsCredentials'
        location:
          description: Deprecated - only for compatibility.
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Deprecated - only for compatibility.
          type: object
          additionalProperties:
            type: string
      type: object
    PolicyKeyResource:
      description: Namespace / NotificationHub Regenerate Keys request.
      required:
        - policyKey
      type: object
      properties:
        policyKey:
          $ref: '#/components/schemas/PolicyKeyType'
    PolicyKeyType:
      description: Type of Shared Access Policy Key (primary or secondary).
      enum:
        - PrimaryKey
        - SecondaryKey
      type: string
      x-ms-enum:
        name: PolicyKeyType
        modelAsString: true
    PrivateEndpointConnectionProperties:
      description: Private Endpoint Connection properties.
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
        privateEndpoint:
          $ref: '#/components/schemas/RemotePrivateEndpointConnection'
        groupIds:
          description: List of group ids. For Notification Hubs, it always contains a single "namespace" element.
          type: array
          items:
            type: string
          readOnly: true
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/RemotePrivateLinkServiceConnectionState'
    PrivateEndpointConnectionProvisioningState:
      description: State of Private Endpoint Connection.
      enum:
        - Unknown
        - Succeeded
        - Creating
        - Updating
        - UpdatingByProxy
        - Deleting
        - DeletingByProxy
        - Deleted
      type: string
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateEndpointConnectionResource:
      description: Represents a Private Endpoint Connection ARM resource - a sub-resource of Notification Hubs namespace.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
      type: object
    PrivateEndpointConnectionResourceListResult:
      description: The response of the List Private Endpoint Connections operation.
      type: object
      properties:
        value:
          description: Gets or sets result of the List AuthorizationRules operation.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnectionResource'
          readOnly: true
        nextLink:
          description: Gets or sets link to the next set of results.
          type: string
          readOnly: true
    PrivateLinkConnectionStatus:
      description: State of Private Link Connection.
      enum:
        - Disconnected
        - Pending
        - Approved
        - Rejected
      type: string
      x-ms-enum:
        name: PrivateLinkConnectionStatus
        modelAsString: true
    PrivateLinkResource:
      description: A Private Link Arm Resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
      type: object
    PrivateLinkResourceListResult:
      description: The response of the List Private Link Resources operation.
      type: object
      properties:
        value:
          description: Gets or sets result of the List AuthorizationRules operation.
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
          readOnly: true
        nextLink:
          description: Gets or sets link to the next set of results.
          type: string
          readOnly: true
    PrivateLinkResourceProperties:
      description: Represents properties of Private Link Resource.
      type: object
      properties:
        groupId:
          description: A Group Id for Private Link. For Notification Hubs, it is always set to "namespace".
          type: string
          readOnly: true
        requiredMembers:
          description: Required members. For Notification Hubs, it's always a collection with a single "namespace" item.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          description: Required DNS zone names. For Notification Hubs, it contains two CNames for Service Bus and Notification Hubs zones.
          type: array
          items:
            type: string
          readOnly: true
    PrivateLinkServiceConnection:
      description: A customer-visible sub-resource of Private Endpoint, which describe the connection between Private Endpoint and Notification Hubs namespace.
      type: object
      properties:
        name:
          description: Name of the Private Link Service connection.
          type: string
        groupIds:
          description: List of group ids. Always contains a single element - "namespace" - for Notification Hub Namespace.
          type: array
          items:
            type: string
        requestMessage:
          description: Request message provided by the user that created the connection. This is usually used when the connection requires manual approval.
          type: string
    PublicInternetAuthorizationRule:
      description: A default (public Internet) network authorization rule, which contains rights if no other network rule matches.
      required:
        - rights
      type: object
      properties:
        rights:
          description: List of access rights.
          type: array
          items:
            $ref: '#/components/schemas/AccessRights'
    PublicNetworkAccess:
      description: Type of public network access.
      default: Enabled
      enum:
        - Enabled
        - Disabled
      type: string
      x-ms-enum:
        name: PublicNetworkAccess
        modelAsString: true
    RegistrationResult:
      description: Notification result for a single registration.
      type: object
      properties:
        applicationPlatform:
          description: PNS type.
          type: string
          readOnly: true
        pnsHandle:
          description: PNS handle.
          type: string
          readOnly: true
        registrationId:
          description: Registration id.
          type: string
          readOnly: true
        outcome:
          description: Notification outcome.
          type: string
          readOnly: true
    RemotePrivateEndpointConnection:
      description: Represents a Private Endpoint that is connected to Notification Hubs namespace using Private Endpoint Connection.
      type: object
      properties:
        id:
          description: ARM resource ID of the Private Endpoint. This may belong to different subscription and resource group than a Notification Hubs namespace.
          type: string
          readOnly: true
    RemotePrivateLinkServiceConnectionState:
      description: State of the Private Link Service connection.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateLinkConnectionStatus'
        description:
          description: Human-friendly description.
          type: string
          readOnly: true
        actionsRequired:
          description: Human-friendly description of required actions.
          type: string
          readOnly: true
    ReplicationRegion:
      description: Allowed replication region
      enum:
        - Default
        - WestUs2
        - NorthEurope
        - AustraliaEast
        - BrazilSouth
        - SouthEastAsia
        - SouthAfricaNorth
        - None
      type: string
      x-ms-enum:
        name: ReplicationRegion
        modelAsString: true
    ResourceListKeys:
      description: Response for the POST request that returns Namespace or NotificationHub access keys (connection strings).
      type: object
      properties:
        primaryConnectionString:
          description: Gets or sets primaryConnectionString of the AuthorizationRule.
          type: string
          readOnly: true
          x-ms-secret: true
        secondaryConnectionString:
          description: "Gets or sets secondaryConnectionString of the created\r\nAuthorizationRule"
          type: string
          readOnly: true
          x-ms-secret: true
        primaryKey:
          description: Gets or sets primaryKey of the created AuthorizationRule.
          type: string
          readOnly: true
          x-ms-secret: true
        secondaryKey:
          description: Gets or sets secondaryKey of the created AuthorizationRule
          type: string
          readOnly: true
          x-ms-secret: true
        keyName:
          description: Gets or sets keyName of the created AuthorizationRule
          type: string
          readOnly: true
    ServiceSpecification:
      description: Optional service specification used in Operations API.
      type: object
      properties:
        logSpecifications:
          description: Log specifications.
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          readOnly: true
          x-ms-identifiers:
            - name
        metricSpecifications:
          description: Metric specification.
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          readOnly: true
          x-ms-identifiers:
            - name
            - unit
    SharedAccessAuthorizationRuleListResult:
      description: The response of the List Namespace operation.
      type: object
      properties:
        value:
          description: Gets or sets result of the List AuthorizationRules operation.
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          readOnly: true
        nextLink:
          description: Gets or sets link to the next set of results.
          type: string
          readOnly: true
    SharedAccessAuthorizationRuleProperties:
      description: SharedAccessAuthorizationRule properties.
      required:
        - rights
      type: object
      properties:
        rights:
          description: Gets or sets the rights associated with the rule.
          type: array
          items:
            $ref: '#/components/schemas/AccessRights'
        primaryKey:
          description: "Gets a base64-encoded 256-bit primary key for signing and\r\nvalidating the SAS token."
          type: string
          x-ms-secret: true
        secondaryKey:
          description: "Gets a base64-encoded 256-bit primary key for signing and\r\nvalidating the SAS token."
          type: string
          x-ms-secret: true
        keyName:
          description: Gets a string that describes the authorization rule.
          type: string
          readOnly: true
        modifiedTime:
          format: date-time
          description: Gets the last modified time for this rule
          type: string
          readOnly: true
        createdTime:
          format: date-time
          description: Gets the created time for this rule
          type: string
          readOnly: true
        claimType:
          description: Gets a string that describes the claim type
          type: string
          readOnly: true
        claimValue:
          description: Gets a string that describes the claim value
          type: string
          readOnly: true
        revision:
          format: int32
          description: Gets the revision number for the rule
          type: integer
          readOnly: true
    SharedAccessAuthorizationRuleResource:
      description: Response for POST requests that return single SharedAccessAuthorizationRule.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedAccessAuthorizationRuleProperties'
        location:
          description: Deprecated - only for compatibility.
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Deprecated - only for compatibility.
          type: object
          additionalProperties:
            type: string
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    SkuName:
      description: Namespace SKU name.
      enum:
        - Free
        - Basic
        - Standard
      type: string
      x-ms-enum:
        name: SkuName
        modelAsString: true
    WnsCredential:
      description: Description of a NotificationHub WnsCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WnsCredentialProperties'
      type: object
    WnsCredentialProperties:
      description: Description of a NotificationHub WnsCredential.
      type: object
      properties:
        packageSid:
          description: Gets or sets the package ID for this credential.
          type: string
          x-ms-secret: true
        secretKey:
          description: Gets or sets the secret key.
          type: string
          x-ms-secret: true
        windowsLiveEndpoint:
          description: Gets or sets the Windows Live endpoint.
          type: string
          x-ms-secret: true
        certificateKey:
          description: Ges or sets the WNS Certificate Key.
          type: string
          x-ms-secret: true
        wnsCertificate:
          description: Gets or sets the WNS Certificate.
          type: string
          x-ms-secret: true
    XiaomiCredential:
      description: Description of a NotificationHub XiaomiCredential.
      required:
        - properties
      x-ms-secret: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/XiaomiCredentialProperties'
      type: object
    XiaomiCredentialProperties:
      description: Description of a NotificationHub XiaomiCredentialProperties.
      type: object
      properties:
        appSecret:
          description: Gets or sets app secret.
          type: string
          x-ms-secret: true
        endpoint:
          description: Gets or sets xiaomi service endpoint.
          type: string
          x-ms-secret: true
    ZoneRedundancyPreference:
      description: Namespace SKU name.
      default: Disabled
      enum:
        - Disabled
        - Enabled
      type: string
      x-ms-enum:
        name: ZoneRedundancyPreference
        modelAsString: true
      x-ms-mutability:
        - create
        - read
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    notification_hubs:
      id: azure.notification_hubs.notification_hubs
      name: notification_hubs
      title: notification_hubs
      methods:
        check_notification_hub_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1checkNotificationHubAvailability?api-version=2023-10-01-preview/post'
            operationId: NotificationHubs_CheckNotificationHubAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckAvailabilityResult
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}?api-version=2023-10-01-preview/get'
            operationId: NotificationHubs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotificationHubResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}?api-version=2023-10-01-preview/put'
            operationId: NotificationHubs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotificationHubResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}?api-version=2023-10-01-preview/patch'
            operationId: NotificationHubs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotificationHubResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}?api-version=2023-10-01-preview/delete'
            operationId: NotificationHubs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs?api-version=2023-10-01-preview/get'
            operationId: NotificationHubs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotificationHubListResult
            objectKey: $.value
        debug_send:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1debugsend?api-version=2023-10-01-preview/post'
            operationId: NotificationHubs_DebugSend
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DebugSendResponse
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1authorizationRules~1{authorizationRuleName}~1regenerateKeys?api-version=2023-10-01-preview/post'
            operationId: NotificationHubs_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceListKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/get'
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/delete'
    authorization_rules:
      id: azure.notification_hubs.authorization_rules
      name: authorization_rules
      title: authorization_rules
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1authorizationRules~1{authorizationRuleName}?api-version=2023-10-01-preview/put'
            operationId: NotificationHubsAuthorizationRule_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SharedAccessAuthorizationRuleResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1authorizationRules~1{authorizationRuleName}?api-version=2023-10-01-preview/delete'
            operationId: NotificationHubsAuthorizationRule_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1authorizationRules~1{authorizationRuleName}?api-version=2023-10-01-preview/get'
            operationId: NotificationHubsAuthorizationRule_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SharedAccessAuthorizationRuleResource
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1authorizationRules?api-version=2023-10-01-preview/get'
            operationId: NotificationHubsAuthorizationRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SharedAccessAuthorizationRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/authorization_rules/methods/delete'
    keys:
      id: azure.notification_hubs.keys
      name: keys
      title: keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1authorizationRules~1{authorizationRuleName}~1listKeys?api-version=2023-10-01-preview/post'
            operationId: NotificationHubsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceListKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    pns_credentials:
      id: azure.notification_hubs.pns_credentials
      name: pns_credentials
      title: pns_credentials
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1pnsCredentials?api-version=2023-10-01-preview/post'
            operationId: NotificationHubsPnsCredentials_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PnsCredentialsResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pns_credentials/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    namespaces:
      id: azure.notification_hubs.namespaces
      name: namespaces
      title: namespaces
      methods:
        check_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NotificationHubs~1checkNamespaceAvailability?api-version=2023-10-01-preview/post'
            operationId: Namespaces_CheckAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckAvailabilityResult
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}?api-version=2023-10-01-preview/get'
            operationId: Namespaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}?api-version=2023-10-01-preview/put'
            operationId: Namespaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}?api-version=2023-10-01-preview/patch'
            operationId: Namespaces_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}?api-version=2023-10-01-preview/delete'
            operationId: Namespaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_all:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NotificationHubs~1namespaces?api-version=2023-10-01-preview/get'
            operationId: Namespaces_ListAll
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces?api-version=2023-10-01-preview/get'
            operationId: Namespaces_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NamespaceListResult
            objectKey: $.value
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1regenerateKeys?api-version=2023-10-01-preview/post'
            operationId: Namespaces_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceListKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list_all'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/delete'
    namespaces_authorization_rules:
      id: azure.notification_hubs.namespaces_authorization_rules
      name: namespaces_authorization_rules
      title: namespaces_authorization_rules
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}?api-version=2023-10-01-preview/put'
            operationId: NamespacesAuthorizationRule_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SharedAccessAuthorizationRuleResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}?api-version=2023-10-01-preview/delete'
            operationId: NamespacesAuthorizationRule_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}?api-version=2023-10-01-preview/get'
            operationId: NamespacesAuthorizationRule_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SharedAccessAuthorizationRuleResource
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1authorizationRules?api-version=2023-10-01-preview/get'
            operationId: NamespacesAuthorizationRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SharedAccessAuthorizationRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/delete'
    namespaces_keys:
      id: azure.notification_hubs.namespaces_keys
      name: namespaces_keys
      title: namespaces_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1listKeys?api-version=2023-10-01-preview/post'
            operationId: NamespacesKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceListKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    namespaces_pns_credentials:
      id: azure.notification_hubs.namespaces_pns_credentials
      name: namespaces_pns_credentials
      title: namespaces_pns_credentials
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1pnsCredentials?api-version=2023-10-01-preview/post'
            operationId: NamespacesPnsCredentials_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PnsCredentialsResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_pns_credentials/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.notification_hubs.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.NotificationHubs~1operations?api-version=2023-10-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connections:
      id: azure.notification_hubs.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-10-01-preview/put'
            operationId: PrivateEndpointConnections_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-10-01-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-10-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionResource
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1privateEndpointConnections?api-version=2023-10-01-preview/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_endpoint_connections_group_ids:
      id: azure.notification_hubs.private_endpoint_connections_group_ids
      name: private_endpoint_connections_group_ids
      title: private_endpoint_connections_group_ids
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1privateLinkResources~1{subResourceName}?api-version=2023-10-01-preview/get'
            operationId: PrivateEndpointConnectionsGroupId_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1privateLinkResources?api-version=2023-10-01-preview/get'
            operationId: PrivateEndpointConnectionsGroupIds_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections_group_ids/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections_group_ids/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_notification_hubs:
      id: azure.notification_hubs.vw_notification_hubs
      name: vw_notification_hubs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.registrationTtl') as "registration_ttl",
              JSON_EXTRACT(properties, '$.authorizationRules') as "authorization_rules",
              JSON_EXTRACT(properties, '$.apnsCredential') as "apns_credential",
              JSON_EXTRACT(properties, '$.wnsCredential') as "wns_credential",
              JSON_EXTRACT(properties, '$.gcmCredential') as "gcm_credential",
              JSON_EXTRACT(properties, '$.mpnsCredential') as "mpns_credential",
              JSON_EXTRACT(properties, '$.admCredential') as "adm_credential",
              JSON_EXTRACT(properties, '$.baiduCredential') as "baidu_credential",
              JSON_EXTRACT(properties, '$.browserCredential') as "browser_credential",
              JSON_EXTRACT(properties, '$.xiaomiCredential') as "xiaomi_credential",
              JSON_EXTRACT(properties, '$.fcmV1Credential') as "fcm_v1_credential",
              JSON_EXTRACT(properties, '$.dailyMaxActiveDevices') as "daily_max_active_devices",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              notificationHubName
              FROM azure.notification_hubs.notification_hubs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.registrationTtl') as "registration_ttl",
                json_extract_path_text(properties, '$.authorizationRules') as "authorization_rules",
                json_extract_path_text(properties, '$.apnsCredential') as "apns_credential",
                json_extract_path_text(properties, '$.wnsCredential') as "wns_credential",
                json_extract_path_text(properties, '$.gcmCredential') as "gcm_credential",
                json_extract_path_text(properties, '$.mpnsCredential') as "mpns_credential",
                json_extract_path_text(properties, '$.admCredential') as "adm_credential",
                json_extract_path_text(properties, '$.baiduCredential') as "baidu_credential",
                json_extract_path_text(properties, '$.browserCredential') as "browser_credential",
                json_extract_path_text(properties, '$.xiaomiCredential') as "xiaomi_credential",
                json_extract_path_text(properties, '$.fcmV1Credential') as "fcm_v1_credential",
                json_extract_path_text(properties, '$.dailyMaxActiveDevices') as "daily_max_active_devices",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                notificationHubName
                FROM azure.notification_hubs.notification_hubs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_authorization_rules:
      id: azure.notification_hubs.vw_authorization_rules
      name: vw_authorization_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.rights') as "rights",
              JSON_EXTRACT(properties, '$.primaryKey') as "primary_key",
              JSON_EXTRACT(properties, '$.secondaryKey') as "secondary_key",
              JSON_EXTRACT(properties, '$.keyName') as "key_name",
              JSON_EXTRACT(properties, '$.modifiedTime') as "modified_time",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.claimType') as "claim_type",
              JSON_EXTRACT(properties, '$.claimValue') as "claim_value",
              JSON_EXTRACT(properties, '$.revision') as "revision",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              notificationHubName,
              authorizationRuleName
              FROM azure.notification_hubs.authorization_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me' AND notificationHubName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.rights') as "rights",
                json_extract_path_text(properties, '$.primaryKey') as "primary_key",
                json_extract_path_text(properties, '$.secondaryKey') as "secondary_key",
                json_extract_path_text(properties, '$.keyName') as "key_name",
                json_extract_path_text(properties, '$.modifiedTime') as "modified_time",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.claimType') as "claim_type",
                json_extract_path_text(properties, '$.claimValue') as "claim_value",
                json_extract_path_text(properties, '$.revision') as "revision",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                notificationHubName,
                authorizationRuleName
                FROM azure.notification_hubs.authorization_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me' AND notificationHubName = 'replace-me';
    vw_namespaces:
      id: azure.notification_hubs.vw_namespaces
      name: vw_namespaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.enabled') as "enabled",
              JSON_EXTRACT(properties, '$.critical') as "critical",
              JSON_EXTRACT(properties, '$.subscriptionId') as "subscription_id",
              JSON_EXTRACT(properties, '$.region') as "region",
              JSON_EXTRACT(properties, '$.metricId') as "metric_id",
              JSON_EXTRACT(properties, '$.createdAt') as "created_at",
              JSON_EXTRACT(properties, '$.updatedAt') as "updated_at",
              JSON_EXTRACT(properties, '$.namespaceType') as "namespace_type",
              JSON_EXTRACT(properties, '$.replicationRegion') as "replication_region",
              JSON_EXTRACT(properties, '$.zoneRedundancy') as "zone_redundancy",
              JSON_EXTRACT(properties, '$.networkAcls') as "network_acls",
              JSON_EXTRACT(properties, '$.pnsCredentials') as "pns_credentials",
              JSON_EXTRACT(properties, '$.serviceBusEndpoint') as "service_bus_endpoint",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.scaleUnit') as "scale_unit",
              JSON_EXTRACT(properties, '$.dataCenter') as "data_center",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              subscriptionId,
              resourceGroupName,
              namespaceName
              FROM azure.notification_hubs.namespaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.enabled') as "enabled",
                json_extract_path_text(properties, '$.critical') as "critical",
                json_extract_path_text(properties, '$.subscriptionId') as "subscription_id",
                json_extract_path_text(properties, '$.region') as "region",
                json_extract_path_text(properties, '$.metricId') as "metric_id",
                json_extract_path_text(properties, '$.createdAt') as "created_at",
                json_extract_path_text(properties, '$.updatedAt') as "updated_at",
                json_extract_path_text(properties, '$.namespaceType') as "namespace_type",
                json_extract_path_text(properties, '$.replicationRegion') as "replication_region",
                json_extract_path_text(properties, '$.zoneRedundancy') as "zone_redundancy",
                json_extract_path_text(properties, '$.networkAcls') as "network_acls",
                json_extract_path_text(properties, '$.pnsCredentials') as "pns_credentials",
                json_extract_path_text(properties, '$.serviceBusEndpoint') as "service_bus_endpoint",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.scaleUnit') as "scale_unit",
                json_extract_path_text(properties, '$.dataCenter') as "data_center",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                subscriptionId,
                resourceGroupName,
                namespaceName
                FROM azure.notification_hubs.namespaces
                WHERE subscriptionId = 'replace-me';
    vw_namespaces_authorization_rules:
      id: azure.notification_hubs.vw_namespaces_authorization_rules
      name: vw_namespaces_authorization_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.rights') as "rights",
              JSON_EXTRACT(properties, '$.primaryKey') as "primary_key",
              JSON_EXTRACT(properties, '$.secondaryKey') as "secondary_key",
              JSON_EXTRACT(properties, '$.keyName') as "key_name",
              JSON_EXTRACT(properties, '$.modifiedTime') as "modified_time",
              JSON_EXTRACT(properties, '$.createdTime') as "created_time",
              JSON_EXTRACT(properties, '$.claimType') as "claim_type",
              JSON_EXTRACT(properties, '$.claimValue') as "claim_value",
              JSON_EXTRACT(properties, '$.revision') as "revision",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              authorizationRuleName
              FROM azure.notification_hubs.namespaces_authorization_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.rights') as "rights",
                json_extract_path_text(properties, '$.primaryKey') as "primary_key",
                json_extract_path_text(properties, '$.secondaryKey') as "secondary_key",
                json_extract_path_text(properties, '$.keyName') as "key_name",
                json_extract_path_text(properties, '$.modifiedTime') as "modified_time",
                json_extract_path_text(properties, '$.createdTime') as "created_time",
                json_extract_path_text(properties, '$.claimType') as "claim_type",
                json_extract_path_text(properties, '$.claimValue') as "claim_value",
                json_extract_path_text(properties, '$.revision') as "revision",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                authorizationRuleName
                FROM azure.notification_hubs.namespaces_authorization_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.notification_hubs.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              privateEndpointConnectionName
              FROM azure.notification_hubs.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                privateEndpointConnectionName
                FROM azure.notification_hubs.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_private_endpoint_connections_group_ids:
      id: azure.notification_hubs.vw_private_endpoint_connections_group_ids
      name: vw_private_endpoint_connections_group_ids
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              namespaceName,
              subResourceName
              FROM azure.notification_hubs.private_endpoint_connections_group_ids
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                namespaceName,
                subResourceName
                FROM azure.notification_hubs.private_endpoint_connections_group_ids
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability?api-version=2023-10-01-preview:
    post:
      tags:
        - Hubs
      summary: Checks the availability of the given notificationHub in a namespace.
      operationId: NotificationHubs_CheckNotificationHubAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAvailabilityParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAvailabilityResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}?api-version=2023-10-01-preview:
    get:
      tags:
        - Hubs
      summary: Gets the notification hub.
      operationId: NotificationHubs_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Hubs
      summary: Creates/Update a NotificationHub in a namespace.
      operationId: NotificationHubs_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationHubResource'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Hubs
      summary: Patch a NotificationHub in a namespace.
      operationId: NotificationHubs_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationHubPatchParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Hubs
      summary: Deletes a notification hub associated with a namespace.
      operationId: NotificationHubs_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs?api-version=2023-10-01-preview:
    get:
      tags:
        - Hubs
      summary: Lists the notification hubs associated with a namespace.
      operationId: NotificationHubs_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - name: $skipToken
          in: query
          description: Continuation token.
          schema:
            type: string
        - name: $top
          in: query
          description: Page size.
          schema:
            format: int32
            default: 100
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/debugsend?api-version=2023-10-01-preview:
    post:
      tags:
        - Hubs
      summary: Test send a push notification.
      operationId: NotificationHubs_DebugSend
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebugSendResponse'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}?api-version=2023-10-01-preview:
    put:
      tags:
        - Hubs
      summary: Creates/Updates an authorization rule for a NotificationHub
      operationId: NotificationHubsAuthorizationRule_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NotificationHubs_CreateOrUpdateAuthorizationRule
    delete:
      tags:
        - Hubs
      summary: Deletes a notificationHub authorization rule
      operationId: NotificationHubsAuthorizationRule_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NotificationHubs_DeleteAuthorizationRule
    get:
      tags:
        - Hubs
      summary: Gets an authorization rule for a NotificationHub by name.
      operationId: NotificationHubsAuthorizationRule_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NotificationHubs_GetAuthorizationRule
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules?api-version=2023-10-01-preview:
    get:
      tags:
        - Hubs
      summary: Gets the authorization rules for a NotificationHub.
      operationId: NotificationHubsAuthorizationRules_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: nextLink
      x-ms-original-operationId: NotificationHubs_ListAuthorizationRules
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/listKeys?api-version=2023-10-01-preview:
    post:
      tags:
        - Hubs
      summary: Gets the Primary and Secondary ConnectionStrings to the NotificationHub
      operationId: NotificationHubsKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NotificationHubs_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys?api-version=2023-10-01-preview:
    post:
      tags:
        - Hubs
      summary: Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule
      operationId: NotificationHubs_RegenerateKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyKeyResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/pnsCredentials?api-version=2023-10-01-preview:
    post:
      tags:
        - Hubs
      summary: Lists the PNS Credentials associated with a notification hub.
      operationId: NotificationHubsPnsCredentials_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/HubName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PnsCredentialsResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NotificationHubs_GetPnsCredentials
  /subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability?api-version=2023-10-01-preview:
    post:
      tags:
        - Namespaces
      summary: Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.
      operationId: Namespaces_CheckAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAvailabilityParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAvailabilityResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}?api-version=2023-10-01-preview:
    get:
      tags:
        - Namespaces
      summary: Returns the given namespace.
      operationId: Namespaces_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Namespaces
      summary: Creates / Updates a Notification Hub namespace. This operation is idempotent.
      operationId: Namespaces_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceResource'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Namespaces
      summary: Patches the existing namespace.
      operationId: Namespaces_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespacePatchParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Namespaces
      summary: Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.
      operationId: Namespaces_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces?api-version=2023-10-01-preview:
    get:
      tags:
        - Namespaces
      summary: Lists all the available namespaces within the subscription.
      operationId: Namespaces_ListAll
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $skipToken
          in: query
          description: Skip token for subsequent requests.
          schema:
            type: string
        - name: $top
          in: query
          description: Maximum number of results to return.
          schema:
            format: int32
            default: 100
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces?api-version=2023-10-01-preview:
    get:
      tags:
        - Namespaces
      summary: Lists the available namespaces within a resource group.
      operationId: Namespaces_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $skipToken
          in: query
          description: Skip token for subsequent requests.
          schema:
            type: string
        - name: $top
          in: query
          description: Maximum number of results to return.
          schema:
            format: int32
            default: 100
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}?api-version=2023-10-01-preview:
    put:
      tags:
        - Namespaces
      summary: Creates an authorization rule for a namespace
      operationId: NamespacesAuthorizationRule_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_CreateOrUpdateAuthorizationRule
    delete:
      tags:
        - Namespaces
      summary: Deletes a namespace authorization rule
      operationId: NamespacesAuthorizationRule_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_DeleteAuthorizationRule
    get:
      tags:
        - Namespaces
      summary: Gets an authorization rule for a namespace by name.
      operationId: NamespacesAuthorizationRule_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_GetAuthorizationRule
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules?api-version=2023-10-01-preview:
    get:
      tags:
        - Namespaces
      summary: Gets the authorization rules for a namespace.
      operationId: NamespacesAuthorizationRules_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: nextLink
      x-ms-original-operationId: Namespaces_ListAuthorizationRules
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys?api-version=2023-10-01-preview:
    post:
      tags:
        - Namespaces
      summary: Gets the Primary and Secondary ConnectionStrings to the namespace.
      operationId: NamespacesKeys_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys?api-version=2023-10-01-preview:
    post:
      tags:
        - Namespaces
      summary: Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule
      operationId: Namespaces_RegenerateKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/AuthorizationRuleName'
      requestBody:
        description: Request content.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyKeyResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/pnsCredentials?api-version=2023-10-01-preview:
    post:
      tags:
        - Namespaces
      summary: Lists the PNS credentials associated with a namespace.
      operationId: NamespacesPnsCredentials_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PnsCredentialsResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Namespaces_GetPnsCredentials
  /providers/Microsoft.NotificationHubs/operations?api-version=2023-10-01-preview:
    get:
      tags:
        - Operations
      summary: Lists all available Notification Hubs operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2023-10-01-preview:
    put:
      tags:
        - PrivateLink
      summary: "Approves or rejects Private Endpoint Connection.\r\nThis is a public API that can be called directly by Notification Hubs users."
      operationId: PrivateEndpointConnections_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: Description of the Private Endpoint Connection resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnectionResource'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - PrivateLink
      summary: "Deletes the Private Endpoint Connection.\r\nThis is a public API that can be called directly by Notification Hubs users."
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      tags:
        - PrivateLink
      summary: "Returns a Private Endpoint Connection with a given name. \r\nThis is a public API that can be called directly by Notification Hubs users."
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections?api-version=2023-10-01-preview:
    get:
      tags:
        - PrivateLink
      summary: "Returns all Private Endpoint Connections that belong to the given Notification Hubs namespace.\r\nThis is a public API that can be called directly by Notification Hubs users."
      operationId: PrivateEndpointConnections_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResourceListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources/{subResourceName}?api-version=2023-10-01-preview:
    get:
      tags:
        - PrivateLink
      summary: "Returns Group Id response. \r\nThis is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users."
      description: "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\r\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request."
      operationId: PrivateEndpointConnectionsGroupId_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
        - name: subResourceName
          in: path
          description: Name of the Private Link sub-resource. The only supported sub-resource is "namespace"
          required: true
          schema:
            pattern: ^namespace$
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: PrivateEndpointConnections_GetGroupId
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources?api-version=2023-10-01-preview:
    get:
      tags:
        - PrivateLink
      summary: "Returns all Group Ids supported by the Notification Hubs RP.\r\nThis is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users."
      description: "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\r\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request."
      operationId: PrivateEndpointConnectionsGroupIds_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceName'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error code with reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        itemName: value
        nextLinkName: null
      x-ms-original-operationId: PrivateEndpointConnections_ListGroupIds
