openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Arc Kubernetes Configuration and Cluster Extensionsource Control Configuration Client (Microsoft.KubernetesConfiguration)
  description: GitOps is the practice of declaring the desired state of Kubernetes cluster configuration (deployments, etc.) in a Git repository. GitOps Configurations enable you to declare these for Kubernetes clusters. Cluster extensions allow you to add management services like Azure Monitor, Azure Data services to your Kubernetes clusters.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    FluxConfigurationNameParameter:
      name: fluxConfigurationName
      in: path
      description: Name of the Flux Configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ExtensionNameParameter:
      name: extensionName
      in: path
      description: Name of the Extension.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SourceControlConfigurationNameParameter:
      name: sourceControlConfigurationName
      in: path
      description: Name of the Source Control Configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ClusterRpParameter:
      name: clusterRp
      in: path
      description: The Kubernetes cluster RP - i.e. Microsoft.ContainerService, Microsoft.Kubernetes, Microsoft.HybridContainerService.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ClusterResourceNameParameter:
      name: clusterResourceName
      in: path
      description: The Kubernetes cluster resource name - i.e. managedClusters, connectedClusters, provisionedClusters.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ClusterNameParameter:
      name: clusterName
      in: path
      description: The name of the kubernetes cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ScopeDefinition:
      description: Scope at which the configuration will be installed.
      type: string
      enum:
        - cluster
        - namespace
      default: cluster
      x-ms-enum:
        name: ScopeType
        modelAsString: true
    SourceKindDefinition:
      description: Source Kind to pull the configuration data from.
      type: string
      enum:
        - GitRepository
        - Bucket
        - AzureBlob
        - OCIRepository
      x-ms-enum:
        name: SourceKindType
        modelAsString: true
    GitRepositoryDefinition:
      description: Parameters to reconcile to the GitRepository source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration git repository.
          type: string
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster git repository source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster git repository source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        repositoryRef:
          description: The source reference for the GitRepository object.
          $ref: '#/components/schemas/RepositoryRefDefinition'
        sshKnownHosts:
          description: Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
          type: string
          nullable: true
        httpsUser:
          description: Plaintext HTTPS username used to access private git repositories over HTTPS
          type: string
          nullable: true
        httpsCACert:
          description: Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
          type: string
          nullable: true
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    GitRepositoryPatchDefinition:
      description: Parameters to reconcile to the GitRepository source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration git repository.
          type: string
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster git repository source with the remote.
          type: integer
          format: int64
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster git repository source with the remote.
          type: integer
          format: int64
          nullable: true
        repositoryRef:
          description: The source reference for the GitRepository object.
          $ref: '#/components/schemas/RepositoryRefDefinition'
        sshKnownHosts:
          description: Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH
          type: string
          nullable: true
        httpsUser:
          description: Plaintext HTTPS username used to access private git repositories over HTTPS
          type: string
          nullable: true
        httpsCACert:
          description: Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS
          type: string
          nullable: true
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    RepositoryRefDefinition:
      description: The source reference for the GitRepository object.
      type: object
      nullable: true
      properties:
        branch:
          description: The git repository branch name to checkout.
          type: string
          nullable: true
        tag:
          description: The git repository tag name to checkout. This takes precedence over branch.
          type: string
          nullable: true
        semver:
          description: The semver range used to match against git repository tags. This takes precedence over tag.
          type: string
          nullable: true
        commit:
          description: The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.
          type: string
          nullable: true
    BucketDefinition:
      description: Parameters to reconcile to the Bucket source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration S3 bucket.
          type: string
        bucketName:
          description: The bucket name to sync from the url endpoint for the flux configuration.
          type: string
        insecure:
          description: Specify whether to use insecure communication when puling data from the S3 bucket.
          type: boolean
          default: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster bucket source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster bucket source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        accessKey:
          description: Plaintext access key used to securely access the S3 bucket
          type: string
          nullable: true
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    BucketPatchDefinition:
      description: Parameters to reconcile to the Bucket source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration S3 bucket.
          type: string
          nullable: true
        bucketName:
          description: The bucket name to sync from the url endpoint for the flux configuration.
          type: string
          nullable: true
        insecure:
          description: Specify whether to use insecure communication when puling data from the S3 bucket.
          type: boolean
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster bucket source with the remote.
          type: integer
          format: int64
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster bucket source with the remote.
          type: integer
          format: int64
          nullable: true
        accessKey:
          description: Plaintext access key used to securely access the S3 bucket
          type: string
          nullable: true
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    AzureBlobDefinition:
      description: Parameters to reconcile to the AzureBlob source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration Azure Blob storage account.
          type: string
          nullable: true
        containerName:
          description: The Azure Blob container name to sync from the url endpoint for the flux configuration.
          type: string
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster Azure Blob source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        servicePrincipal:
          description: Parameters to authenticate using Service Principal.
          type: object
          $ref: '#/components/schemas/ServicePrincipalDefinition'
        accountKey:
          description: The account key (shared key) to access the storage account
          type: string
          nullable: true
          x-ms-secret: true
        sasToken:
          description: The Shared Access token to access the storage container
          type: string
          nullable: true
          x-ms-secret: true
        managedIdentity:
          description: Parameters to authenticate using a Managed Identity.
          type: object
          $ref: '#/components/schemas/ManagedIdentityDefinition'
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    AzureBlobPatchDefinition:
      description: Parameters to reconcile to the AzureBlob source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration Azure Blob storage account.
          type: string
          nullable: true
        containerName:
          description: The Azure Blob container name to sync from the url endpoint for the flux configuration.
          type: string
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.
          type: integer
          format: int64
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster Azure Blob source with the remote.
          type: integer
          format: int64
          nullable: true
        servicePrincipal:
          description: Parameters to authenticate using Service Principal.
          type: object
          $ref: '#/components/schemas/ServicePrincipalPatchDefinition'
        accountKey:
          description: The account key (shared key) to access the storage account
          type: string
          nullable: true
          x-ms-secret: true
        sasToken:
          description: The Shared Access token to access the storage container
          type: string
          nullable: true
          x-ms-secret: true
        managedIdentity:
          description: Parameters to authenticate using a Managed Identity.
          type: object
          $ref: '#/components/schemas/ManagedIdentityPatchDefinition'
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    ServicePrincipalDefinition:
      description: Parameters to authenticate using Service Principal.
      type: object
      nullable: true
      properties:
        clientId:
          description: The client Id for authenticating a Service Principal.
          type: string
          nullable: true
        tenantId:
          description: The tenant Id for authenticating a Service Principal
          type: string
          nullable: true
        clientSecret:
          description: The client secret for authenticating a Service Principal
          type: string
          nullable: true
          x-ms-secret: true
        clientCertificate:
          description: 'Base64-encoded certificate used to authenticate a Service Principal '
          type: string
          nullable: true
          x-ms-secret: true
        clientCertificatePassword:
          description: 'The password for the certificate used to authenticate a Service Principal '
          type: string
          nullable: true
          x-ms-secret: true
        clientCertificateSendChain:
          description: Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
          type: boolean
          default: false
    ServicePrincipalPatchDefinition:
      description: Parameters to authenticate using Service Principal.
      type: object
      nullable: true
      properties:
        clientId:
          description: The client Id for authenticating a Service Principal.
          type: string
          nullable: true
        tenantId:
          description: The tenant Id for authenticating a Service Principal
          type: string
          nullable: true
        clientSecret:
          description: The client secret for authenticating a Service Principal
          type: string
          nullable: true
          x-ms-secret: true
        clientCertificate:
          description: 'Base64-encoded certificate used to authenticate a Service Principal '
          type: string
          nullable: true
          x-ms-secret: true
        clientCertificatePassword:
          description: 'The password for the certificate used to authenticate a Service Principal '
          type: string
          nullable: true
          x-ms-secret: true
        clientCertificateSendChain:
          description: Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate
          type: boolean
    ManagedIdentityDefinition:
      description: Parameters to authenticate using a Managed Identity.
      type: object
      nullable: true
      properties:
        clientId:
          description: The client Id for authenticating a Managed Identity.
          type: string
          nullable: true
    ManagedIdentityPatchDefinition:
      description: Parameters to authenticate using a Managed Identity.
      type: object
      nullable: true
      properties:
        clientId:
          description: The client Id for authenticating a Managed Identity.
          type: string
          nullable: true
    OCIRepositoryDefinition:
      description: Parameters to reconcile to the OCIRepository source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration OCI repository.
          type: string
          format: uri
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster OCI repository source with the remote.
          type: integer
          format: int64
          default: 600
          nullable: true
        repositoryRef:
          description: The source reference for the OCIRepository object.
          $ref: '#/components/schemas/OCIRepositoryRefDefinition'
        layerSelector:
          description: The layer to be pulled from the OCI artifact.
          $ref: '#/components/schemas/LayerSelectorDefinition'
        verify:
          description: Verification of the authenticity of an OCI Artifact.
          $ref: '#/components/schemas/VerifyDefinition'
        insecure:
          description: Specify whether to allow connecting to a non-TLS HTTP container registry.
          type: boolean
          default: false
        useWorkloadIdentity:
          description: Specifies whether to use Workload Identity to authenticate with the OCI repository.
          type: boolean
          default: false
        serviceAccountName:
          description: The service account name to authenticate with the OCI repository.
          type: string
          nullable: true
        tlsConfig:
          description: Parameters to authenticate using TLS config for OCI repository.
          type: object
          $ref: '#/components/schemas/TlsConfigDefinition'
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    OCIRepositoryPatchDefinition:
      description: Parameters to reconcile to the OCIRepository source kind type.
      type: object
      nullable: true
      properties:
        url:
          description: The URL to sync for the flux configuration OCI repository.
          type: string
          format: uri
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the cluster OCI repository source with the remote.
          type: integer
          format: int64
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the cluster OCI repository source with the remote.
          type: integer
          format: int64
          nullable: true
        repositoryRef:
          description: The source reference for the OCIRepository object.
          $ref: '#/components/schemas/OCIRepositoryRefPatchDefinition'
        layerSelector:
          description: The layer to be pulled from the OCI artifact.
          $ref: '#/components/schemas/LayerSelectorPatchDefinition'
        verify:
          description: Verification of the authenticity of an OCI Artifact.
          $ref: '#/components/schemas/VerifyPatchDefinition'
        insecure:
          description: Specify whether to allow connecting to a non-TLS HTTP container registry.
          type: boolean
          default: false
        useWorkloadIdentity:
          description: Specifies whether to use Workload Identity to authenticate with the OCI repository.
          type: boolean
          default: false
        serviceAccountName:
          description: The service account name to authenticate with the OCI repository.
          type: string
          nullable: true
        tlsConfig:
          description: Parameters to authenticate using TLS config for OCI repository.
          type: object
          $ref: '#/components/schemas/TlsConfigPatchDefinition'
        localAuthRef:
          description: Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.
          type: string
          nullable: true
    TlsConfigDefinition:
      description: Parameters to authenticate using TLS config for OCI repository.
      type: object
      nullable: true
      properties:
        clientCertificate:
          description: Base64-encoded certificate used to authenticate a client with the OCI repository.
          type: string
          nullable: true
          x-ms-secret: true
        privateKey:
          description: Base64-encoded private key used to authenticate a client with the OCI repository.
          type: string
          nullable: true
          x-ms-secret: true
        caCertificate:
          description: Base64-encoded CA certificate used to verify the server.
          type: string
          nullable: true
          x-ms-secret: true
    TlsConfigPatchDefinition:
      description: Parameters to authenticate using TLS config for OCI repository.
      type: object
      nullable: true
      properties:
        clientCertificate:
          description: Base64-encoded certificate used to authenticate a client with the OCI repository.
          type: string
          nullable: true
          x-ms-secret: true
        privateKey:
          description: Base64-encoded private key used to authenticate a client with the OCI repository.
          type: string
          nullable: true
          x-ms-secret: true
        caCertificate:
          description: Base64-encoded CA certificate used to verify the server.
          type: string
          nullable: true
          x-ms-secret: true
    OCIRepositoryRefDefinition:
      description: The source reference for the OCIRepository object.
      type: object
      nullable: true
      properties:
        tag:
          description: The OCI repository image tag name to pull. This defaults to 'latest'.
          type: string
          nullable: true
        semver:
          description: The semver range used to match against OCI repository tags. This takes precedence over tag.
          type: string
          nullable: true
        digest:
          description: The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
          type: string
          nullable: true
    OCIRepositoryRefPatchDefinition:
      description: The source reference for the OCIRepository object.
      type: object
      nullable: true
      properties:
        tag:
          description: The OCI repository image tag name to pull. This defaults to 'latest'.
          type: string
          nullable: true
        semver:
          description: The semver range used to match against OCI repository tags. This takes precedence over tag.
          type: string
          nullable: true
        digest:
          description: The image digest to pull from OCI repository, the value should be in the format ‘sha256:’. This takes precedence over semver.
          type: string
          nullable: true
    LayerSelectorDefinition:
      description: Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.
      type: object
      nullable: true
      properties:
        mediaType:
          description: The first layer matching the specified media type will be used.
          type: string
          nullable: true
        operation:
          description: The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
          $ref: '#/components/schemas/OperationDefinition'
          nullable: true
          x-nullable: true
    LayerSelectorPatchDefinition:
      description: Parameters to specify which layer to pull from the OCI artifact. By default, the first layer in the artifact is pulled.
      type: object
      nullable: true
      properties:
        mediaType:
          description: The first layer matching the specified media type will be used.
          type: string
          nullable: true
        operation:
          description: The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
          $ref: '#/components/schemas/OperationDefinition'
          nullable: true
          x-nullable: true
    OperationDefinition:
      description: The operation to be performed on the selected layer. The default value is 'extract', but it can be set to 'copy'.
      type: string
      enum:
        - extract
        - copy
      x-ms-enum:
        name: OperationType
        modelAsString: true
    VerifyDefinition:
      description: Parameters to verify the authenticity of an OCI Artifact.
      type: object
      nullable: true
      properties:
        provider:
          description: Verification provider name.
          type: string
        verificationConfig:
          description: An object containing trusted public keys of trusted authors.
          type: object
          nullable: true
          additionalProperties:
            type: string
        matchOidcIdentity:
          description: Array defining the criteria for matching the identity while verifying an OCI artifact.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/MatchOidcIdentityDefinition'
          x-ms-identifiers: []
          nullable: true
    VerifyPatchDefinition:
      description: Parameters to verify the authenticity of an OCI Artifact.
      type: object
      nullable: true
      properties:
        provider:
          description: Verification provider name.
          type: string
        verificationConfig:
          description: An object containing trusted public keys of trusted authors.
          type: object
          nullable: true
          additionalProperties:
            type: string
        matchOidcIdentity:
          description: Array defining the criteria for matching the OIDC identity while verifying an OCI artifact.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/MatchOidcIdentityPatchDefinition'
          x-ms-identifiers: []
          nullable: true
    MatchOidcIdentityDefinition:
      description: MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.
      type: object
      nullable: true
      properties:
        issuer:
          description: The regex pattern to match against to verify the OIDC issuer.
          type: string
        subject:
          description: The regex pattern to match against to verify the identity subject.
          type: string
    MatchOidcIdentityPatchDefinition:
      description: MatchOIDCIdentity defines the criteria for matching the identity while verifying an OCI artifact.
      type: object
      nullable: true
      properties:
        issuer:
          description: The regex pattern to match against to verify the OIDC issuer.
          type: string
        subject:
          description: The regex pattern to match against to verify the identity subject.
          type: string
    PostBuildDefinition:
      description: The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
      type: object
      nullable: true
      properties:
        substitute:
          description: Key/value pairs holding the variables to be substituted in this Kustomization.
          type: object
          nullable: true
          additionalProperties:
            type: string
        substituteFrom:
          description: Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/SubstituteFromDefinition'
          x-ms-identifiers: []
          nullable: true
    PostBuildPatchDefinition:
      description: The postBuild definitions defining variable substitutions for this Kustomization after kustomize build.
      type: object
      nullable: true
      properties:
        substitute:
          description: Key/value pairs holding the variables to be substituted in this Kustomization.
          type: object
          nullable: true
          additionalProperties:
            type: string
        substituteFrom:
          description: Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
          type: array
          items:
            type: object
            $ref: '#/components/schemas/SubstituteFromPatchDefinition'
          x-ms-identifiers: []
          nullable: true
    SubstituteFromDefinition:
      description: Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
      type: object
      nullable: true
      properties:
        kind:
          description: Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.
          type: string
        name:
          description: Name of the ConfigMap/Secret that holds the variables to be used in substitution.
          type: string
        optional:
          description: Set to True to proceed without ConfigMap/Secret, if it is not present.
          type: boolean
          default: false
    SubstituteFromPatchDefinition:
      description: Array of ConfigMaps/Secrets from which the variables are substituted for this Kustomization.
      type: object
      nullable: true
      properties:
        kind:
          description: Define whether it is ConfigMap or Secret that holds the variables to be used in substitution.
          type: string
        name:
          description: Name of the ConfigMap/Secret that holds the variables to be used in substitution.
          type: string
        optional:
          description: Set to True to proceed without ConfigMap/Secret, if it is not present.
          type: boolean
          default: false
    KustomizationDefinition:
      description: The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
      type: object
      nullable: true
      properties:
        name:
          description: Name of the Kustomization, matching the key in the Kustomizations object map.
          type: string
          readOnly: true
        path:
          description: The path in the source reference to reconcile on the cluster.
          type: string
          default: ''
        dependsOn:
          description: Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
          type: array
          items:
            description: Kustomization name of dependency.
            type: string
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the Kustomization on the cluster.
          type: integer
          format: int64
          default: 600
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the Kustomization on the cluster.
          type: integer
          format: int64
          default: 600
          nullable: true
        retryIntervalInSeconds:
          description: The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
          type: integer
          format: int64
          nullable: true
        prune:
          description: Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
          type: boolean
          default: false
        force:
          description: Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
          type: boolean
          default: false
        wait:
          description: Enable/disable health check for all Kubernetes objects created by this Kustomization.
          type: boolean
          default: true
        postBuild:
          description: Used for variable substitution for this Kustomization after kustomize build.
          type: object
          $ref: '#/components/schemas/PostBuildDefinition'
          nullable: true
          x-nullable: true
    KustomizationPatchDefinition:
      description: The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.
      type: object
      nullable: true
      properties:
        path:
          description: The path in the source reference to reconcile on the cluster.
          type: string
          nullable: true
        dependsOn:
          description: Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.
          type: array
          items:
            description: Kustomization name of dependency.
            type: string
          nullable: true
        timeoutInSeconds:
          description: The maximum time to attempt to reconcile the Kustomization on the cluster.
          type: integer
          format: int64
          nullable: true
        syncIntervalInSeconds:
          description: The interval at which to re-reconcile the Kustomization on the cluster.
          type: integer
          format: int64
          nullable: true
        retryIntervalInSeconds:
          description: The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.
          type: integer
          format: int64
          nullable: true
        prune:
          description: Enable/disable garbage collections of Kubernetes objects created by this Kustomization.
          type: boolean
          nullable: true
        force:
          description: Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.
          type: boolean
          nullable: true
        wait:
          description: Enable/disable health check for all Kubernetes objects created by this Kustomization.
          type: boolean
          nullable: true
        postBuild:
          description: Used for variable substitution for this Kustomization after kustomize build.
          type: object
          $ref: '#/components/schemas/PostBuildPatchDefinition'
          nullable: true
          x-nullable: true
    KustomizationValidationDefinition:
      description: Specify whether to validate the Kubernetes objects referenced in the Kustomization before applying them to the cluster.
      type: string
      enum:
        - none
        - client
        - server
      default: none
      x-ms-enum:
        name: KustomizationValidationType
        modelAsString: true
    ObjectStatusDefinition:
      description: Statuses of objects deployed by the user-specified kustomizations from the git repository.
      type: object
      nullable: true
      properties:
        name:
          description: Name of the applied object
          type: string
        namespace:
          description: Namespace of the applied object
          type: string
        kind:
          description: Kind of the applied object
          type: string
        complianceState:
          description: Compliance state of the applied object showing whether the applied object has come into a ready state on the cluster.
          type: string
          $ref: '#/components/schemas/FluxComplianceStateDefinition'
        appliedBy:
          description: Object reference to the Kustomization that applied this object
          type: object
          $ref: '#/components/schemas/ObjectReferenceDefinition'
          nullable: true
          x-nullable: true
        statusConditions:
          description: List of Kubernetes object status conditions present on the cluster
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ObjectStatusConditionDefinition'
          nullable: true
          x-ms-identifiers:
            - type
        helmReleaseProperties:
          description: Additional properties that are provided from objects of the HelmRelease kind
          type: object
          $ref: '#/components/schemas/HelmReleasePropertiesDefinition'
          nullable: true
          x-nullable: true
    ObjectReferenceDefinition:
      description: Object reference to a Kubernetes object on a cluster
      type: object
      nullable: true
      properties:
        name:
          description: Name of the object
          type: string
        namespace:
          description: Namespace of the object
          type: string
    ObjectStatusConditionDefinition:
      description: Status condition of Kubernetes object
      type: object
      properties:
        lastTransitionTime:
          description: Last time this status condition has changed
          type: string
          format: date-time
        message:
          description: A more verbose description of the object status condition
          type: string
        reason:
          description: Reason for the specified status condition type status
          type: string
        status:
          description: Status of the Kubernetes object condition type
          type: string
        type:
          description: Object status condition type for this object
          type: string
    HelmReleasePropertiesDefinition:
      description: Properties for HelmRelease objects
      type: object
      nullable: true
      properties:
        lastRevisionApplied:
          description: The revision number of the last released object change
          type: integer
          format: int64
          nullable: true
        helmChartRef:
          description: The reference to the HelmChart object used as the source to this HelmRelease
          type: object
          $ref: '#/components/schemas/ObjectReferenceDefinition'
        failureCount:
          description: Total number of times that the HelmRelease failed to install or upgrade
          type: integer
          format: int64
          nullable: true
        installFailureCount:
          description: Number of times that the HelmRelease failed to install
          type: integer
          format: int64
          nullable: true
        upgradeFailureCount:
          description: Number of times that the HelmRelease failed to upgrade
          type: integer
          format: int64
          nullable: true
    FluxComplianceStateDefinition:
      description: Compliance state of the cluster object.
      type: string
      enum:
        - Compliant
        - Non-Compliant
        - Pending
        - Suspended
        - Unknown
      default: Unknown
      x-ms-enum:
        name: FluxComplianceState
        modelAsString: true
    FluxConfiguration:
      description: The Flux Configuration object returned in Get & Put response.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Properties to create a Flux Configuration resource
          properties:
            scope:
              description: Scope at which the operator will be installed.
              $ref: '#/components/schemas/ScopeDefinition'
              x-ms-mutability:
                - create
                - read
            namespace:
              description: The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
              type: string
              default: default
              x-ms-mutability:
                - create
                - read
            sourceKind:
              description: Source Kind to pull the configuration data from.
              $ref: '#/components/schemas/SourceKindDefinition'
              default: GitRepository
            suspend:
              description: Whether this configuration should suspend its reconciliation of its kustomizations and sources.
              type: boolean
              default: false
            gitRepository:
              description: Parameters to reconcile to the GitRepository source kind type.
              type: object
              $ref: '#/components/schemas/GitRepositoryDefinition'
            bucket:
              description: Parameters to reconcile to the Bucket source kind type.
              type: object
              $ref: '#/components/schemas/BucketDefinition'
            azureBlob:
              description: Parameters to reconcile to the AzureBlob source kind type.
              type: object
              $ref: '#/components/schemas/AzureBlobDefinition'
            ociRepository:
              description: Parameters to reconcile to the OCIRepository source kind type.
              type: object
              $ref: '#/components/schemas/OCIRepositoryDefinition'
            kustomizations:
              description: Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
              type: object
              nullable: true
              additionalProperties:
                type: object
                $ref: '#/components/schemas/KustomizationDefinition'
            configurationProtectedSettings:
              description: Key-value pairs of protected configuration settings for the configuration
              type: object
              nullable: true
              x-ms-secret: true
              additionalProperties:
                type: string
            statuses:
              description: Statuses of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects provisioned by the fluxConfiguration.
              type: array
              readOnly: true
              nullable: true
              items:
                type: object
                $ref: '#/components/schemas/ObjectStatusDefinition'
              x-ms-identifiers:
                - name
                - namespace
                - kind
            repositoryPublicKey:
              description: Public Key associated with this fluxConfiguration (either generated within the cluster or provided by the user).
              type: string
              nullable: true
              readOnly: true
            sourceSyncedCommitId:
              description: Branch and/or SHA of the source commit synced with the cluster.
              type: string
              nullable: true
              readOnly: true
            sourceUpdatedAt:
              description: Datetime the fluxConfiguration synced its source on the cluster.
              type: string
              format: date-time
              nullable: true
              readOnly: true
            statusUpdatedAt:
              description: Datetime the fluxConfiguration synced its status on the cluster with Azure.
              type: string
              format: date-time
              nullable: true
              readOnly: true
            waitForReconciliation:
              description: Whether flux configuration deployment should wait for cluster to reconcile the kustomizations.
              type: boolean
              nullable: true
            reconciliationWaitDuration:
              description: Maximum duration to wait for flux configuration reconciliation. E.g PT1H, PT5M, P1D
              type: string
              nullable: true
            complianceState:
              description: Combined status of the Flux Kubernetes resources created by the fluxConfiguration or created by the managed objects.
              type: string
              readOnly: true
              $ref: '#/components/schemas/FluxComplianceStateDefinition'
            provisioningState:
              description: Status of the creation of the fluxConfiguration.
              type: string
              readOnly: true
              $ref: '#/components/schemas/ProvisioningStateDefinition'
            errorMessage:
              description: Error message returned to the user in the case of provisioning failure.
              type: string
              nullable: true
              readOnly: true
        systemData:
          description: Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
          $ref: '#/components/schemas/systemData'
      type: object
    FluxConfigurationPatch:
      description: The Flux Configuration Patch Request object.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Updatable properties of an Flux Configuration Patch Request
          properties:
            sourceKind:
              description: Source Kind to pull the configuration data from.
              $ref: '#/components/schemas/SourceKindDefinition'
              nullable: true
              x-nullable: true
            suspend:
              description: Whether this configuration should suspend its reconciliation of its kustomizations and sources.
              type: boolean
              nullable: true
            gitRepository:
              description: Parameters to reconcile to the GitRepository source kind type.
              type: object
              $ref: '#/components/schemas/GitRepositoryPatchDefinition'
            bucket:
              description: Parameters to reconcile to the Bucket source kind type.
              type: object
              $ref: '#/components/schemas/BucketPatchDefinition'
            azureBlob:
              description: Parameters to reconcile to the AzureBlob source kind type.
              type: object
              $ref: '#/components/schemas/AzureBlobPatchDefinition'
            ociRepository:
              description: Parameters to reconcile to the OCIRepository source kind type.
              type: object
              $ref: '#/components/schemas/OCIRepositoryPatchDefinition'
            kustomizations:
              description: Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.
              type: object
              nullable: true
              additionalProperties:
                type: object
                $ref: '#/components/schemas/KustomizationPatchDefinition'
            configurationProtectedSettings:
              description: Key-value pairs of protected configuration settings for the configuration
              type: object
              nullable: true
              x-ms-secret: true
              additionalProperties:
                type: string
      type: object
    FluxConfigurationsList:
      description: Result of the request to list Flux Configurations.  It contains a list of FluxConfiguration objects and a URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FluxConfiguration'
          description: List of Flux Configurations within a Kubernetes cluster.
        nextLink:
          type: string
          readOnly: true
          description: URL to get the next set of configuration objects, if any.
    ScopeCluster:
      description: Specifies that the scope of the extension is Cluster
      type: object
      properties:
        releaseNamespace:
          description: Namespace where the extension Release must be placed, for a Cluster scoped extension.  If this namespace does not exist, it will be created
          type: string
    ScopeNamespace:
      description: Specifies that the scope of the extension is Namespace
      type: object
      properties:
        targetNamespace:
          description: Namespace where the extension will be created for an Namespace scoped extension.  If this namespace does not exist, it will be created
          type: string
    Scope:
      description: Scope of the extension. It can be either Cluster or Namespace; but not both.
      type: object
      properties:
        cluster:
          type: object
          nullable: true
          x-nullable: true
          description: Specifies that the scope of the extension is Cluster
          $ref: '#/components/schemas/ScopeCluster'
        namespace:
          type: object
          nullable: true
          x-nullable: true
          description: Specifies that the scope of the extension is Namespace
          $ref: '#/components/schemas/ScopeNamespace'
    ExtensionStatus:
      description: Status from the extension.
      type: object
      readOnly: true
      properties:
        code:
          type: string
          description: Status code provided by the Extension
        displayStatus:
          type: string
          description: Short description of status of the extension.
        level:
          type: string
          description: Level of the status.
          enum:
            - Error
            - Warning
            - Information
          default: Information
          x-ms-enum:
            name: LevelType
            modelAsString: true
        message:
          type: string
          description: Detailed message of the status from the Extension.
        time:
          type: string
          description: DateLiteral (per ISO8601) noting the time of installation status.
    Extension:
      description: The Extension object.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Properties of an Extension resource
          properties:
            extensionType:
              description: Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.
              type: string
            autoUpgradeMinorVersion:
              description: Flag to note if this extension participates in auto upgrade of minor version, or not.
              type: boolean
              default: true
            releaseTrain:
              description: ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
              type: string
              default: Stable
            version:
              description: User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be 'false'.
              type: string
              nullable: true
            scope:
              description: Scope at which the extension is installed.
              $ref: '#/components/schemas/Scope'
            configurationSettings:
              description: Configuration settings, as name-value pairs for configuring this extension.
              type: object
              nullable: true
              additionalProperties:
                type: string
            configurationProtectedSettings:
              description: Configuration settings that are sensitive, as name-value pairs for configuring this extension.
              type: object
              nullable: true
              x-ms-secret: true
              additionalProperties:
                type: string
            currentVersion:
              description: Currently installed version of the extension.
              type: string
              readOnly: true
              nullable: true
            provisioningState:
              description: Status of installation of this extension.
              type: string
              readOnly: true
              $ref: '#/components/schemas/ProvisioningStateDefinition'
            statuses:
              description: Status from this extension.
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/ExtensionStatus'
              x-ms-identifiers: []
            errorInfo:
              description: Error information from the Agent - e.g. errors during installation.
              type: object
              readOnly: true
              nullable: true
              x-nullable: true
              $ref: '#/components/schemas/ErrorDetail'
            customLocationSettings:
              description: Custom Location settings properties.
              type: object
              readOnly: true
              nullable: true
              additionalProperties:
                type: string
            packageUri:
              description: Uri of the Helm package
              type: string
              readOnly: true
              nullable: true
            aksAssignedIdentity:
              description: Identity of the Extension resource in an AKS cluster
              nullable: true
              type: object
              properties:
                principalId:
                  readOnly: true
                  type: string
                  description: The principal ID of resource identity.
                tenantId:
                  readOnly: true
                  type: string
                  description: The tenant ID of resource.
                type:
                  type: string
                  description: The identity type.
                  enum:
                    - SystemAssigned
                    - UserAssigned
                  x-ms-enum:
                    name: AKSIdentityType
                    modelAsString: false
            isSystemExtension:
              readOnly: true
              description: Flag to note if this extension is a system extension
              type: boolean
              default: false
        identity:
          description: Identity of the Extension resource
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/Identity'
        systemData:
          description: Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
          $ref: '#/components/schemas/systemData'
        plan:
          description: The plan information.
          $ref: '#/components/schemas/Plan'
      type: object
    ExtensionsList:
      description: Result of the request to list Extensions.  It contains a list of Extension objects and a URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Extension'
          description: List of Extensions within a Kubernetes cluster.
        nextLink:
          type: string
          readOnly: true
          description: URL to get the next set of extension objects, if any.
    patchExtension:
      description: The Extension Patch Request object.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Updatable properties of an Extension Patch Request
          properties:
            autoUpgradeMinorVersion:
              description: Flag to note if this extension participates in auto upgrade of minor version, or not.
              type: boolean
              default: true
            releaseTrain:
              description: ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.
              type: string
              default: Stable
            version:
              description: Version of the extension for this extension, if it is 'pinned' to a specific version. autoUpgradeMinorVersion must be 'false'.
              type: string
              nullable: true
            configurationSettings:
              description: Configuration settings, as name-value pairs for configuring this extension.
              type: object
              nullable: true
              additionalProperties:
                type: string
            configurationProtectedSettings:
              description: Configuration settings that are sensitive, as name-value pairs for configuring this extension.
              type: object
              nullable: true
              x-ms-secret: true
              additionalProperties:
                type: string
      type: object
    ComplianceStatus:
      description: Compliance Status details
      type: object
      readOnly: true
      properties:
        complianceState:
          description: The compliance state of the configuration.
          type: string
          readOnly: true
          x-ms-enum:
            name: ComplianceStateType
            modelAsString: true
          enum:
            - Pending
            - Compliant
            - Noncompliant
            - Installed
            - Failed
        lastConfigApplied:
          description: Datetime the configuration was last applied.
          type: string
          format: date-time
        message:
          description: Message from when the configuration was applied.
          type: string
        messageLevel:
          description: Level of the message.
          type: string
          enum:
            - Error
            - Warning
            - Information
          x-ms-enum:
            name: MessageLevelType
            modelAsString: true
    ChartVersion:
      description: Version of the operator Helm chart.
      type: string
    ChartValues:
      description: Values override for the operator Helm chart.
      type: string
    HelmOperatorProperties:
      description: Properties for Helm operator.
      type: object
      properties:
        chartVersion:
          description: Version of the operator Helm chart.
          $ref: '#/components/schemas/ChartVersion'
        chartValues:
          description: Values override for the operator Helm chart.
          $ref: '#/components/schemas/ChartValues'
    ConfigurationProtectedSettings:
      description: Name-value pairs of protected configuration settings for the configuration
      additionalProperties:
        type: string
      properties: {}
      type: object
    OperatorTypeDefinition:
      description: Type of the operator
      type: string
      enum:
        - Flux
      x-ms-enum:
        name: OperatorType
        modelAsString: true
    OperatorScopeDefinition:
      description: Scope at which the operator will be installed.
      type: string
      enum:
        - cluster
        - namespace
      default: cluster
      x-ms-enum:
        name: OperatorScopeType
        modelAsString: true
    SourceControlConfiguration:
      description: The SourceControl Configuration object returned in Get & Put response.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: Properties to create a Source Control Configuration resource
          properties:
            repositoryUrl:
              type: string
              description: Url of the SourceControl Repository.
            operatorNamespace:
              description: The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.
              type: string
              default: default
            operatorInstanceName:
              description: Instance name of the operator - identifying the specific configuration.
              type: string
            operatorType:
              description: Type of the operator
              $ref: '#/components/schemas/OperatorTypeDefinition'
            operatorParams:
              description: Any Parameters for the Operator instance in string format.
              type: string
            configurationProtectedSettings:
              description: Name-value pairs of protected configuration settings for the configuration
              type: object
              $ref: '#/components/schemas/ConfigurationProtectedSettings'
            operatorScope:
              description: Scope at which the operator will be installed.
              $ref: '#/components/schemas/OperatorScopeDefinition'
            repositoryPublicKey:
              description: Public Key associated with this SourceControl configuration (either generated within the cluster or provided by the user).
              type: string
              readOnly: true
            sshKnownHostsContents:
              description: Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances
              type: string
            enableHelmOperator:
              description: Option to enable Helm Operator for this git configuration.
              type: boolean
            helmOperatorProperties:
              description: Properties for Helm operator.
              type: object
              $ref: '#/components/schemas/HelmOperatorProperties'
            provisioningState:
              type: string
              description: The provisioning state of the resource provider.
              readOnly: true
              x-ms-enum:
                modelAsString: true
                name: ProvisioningStateType
              enum:
                - Accepted
                - Deleting
                - Running
                - Succeeded
                - Failed
            complianceStatus:
              type: object
              description: Compliance Status of the Configuration
              readOnly: true
              $ref: '#/components/schemas/ComplianceStatus'
        systemData:
          description: Top level metadata https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/common-api-contracts.md#system-metadata-for-all-azure-resources
          $ref: '#/components/schemas/systemData'
      type: object
    SourceControlConfigurationList:
      description: Result of the request to list Source Control Configurations.  It contains a list of SourceControlConfiguration objects and a URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SourceControlConfiguration'
          description: List of Source Control Configurations within a Kubernetes cluster.
        nextLink:
          type: string
          readOnly: true
          description: URL to get the next set of configuration objects, if any.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        properties:
          description: Additional information, if available.
          type: object
          nullable: true
          additionalProperties:
            type: string
        error:
          description: If present, details of the operation error.
          type: object
          readOnly: true
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ProvisioningStateDefinition:
      type: string
      readOnly: true
      description: The provisioning state of the resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    OperationStatusList:
      description: The async operations in progress, in the cluster.
      type: object
      readOnly: true
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/OperationStatusResult'
          description: List of async operations in progress, in the cluster.
        nextLink:
          type: string
          readOnly: true
          description: URL to get the next set of Operation Result objects, if any.
    ResourceProviderOperation:
      description: Supported operation of this resource provider.
      type: object
      readOnly: true
      properties:
        name:
          description: Operation name, in format of {provider}/{resource}/{operation}
          type: string
        display:
          description: Display metadata associated with the operation.
          type: object
          properties:
            provider:
              description: 'Resource provider: Microsoft KubernetesConfiguration.'
              type: string
            resource:
              description: Resource on which the operation is performed.
              type: string
            operation:
              description: 'Type of operation: get, read, delete, etc.'
              type: string
            description:
              description: Description of this operation.
              type: string
        isDataAction:
          description: The flag that indicates whether the operation applies to data plane.
          type: boolean
          readOnly: true
        origin:
          description: Origin of the operation
          type: string
          readOnly: true
    ResourceProviderOperationList:
      description: Result of the request to list operations.
      type: object
      readOnly: true
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceProviderOperation'
          description: List of operations supported by this resource provider.
          x-ms-identifiers:
            - name
        nextLink:
          type: string
          readOnly: true
          description: URL to the next set of results, if any.
  x-stackQL-resources:
    flux_configurations:
      id: azure.kubernetes_configuration.flux_configurations
      name: flux_configurations
      title: flux_configurations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1fluxConfigurations~1{fluxConfigurationName}?api-version=2024-04-01-preview/get'
            operationId: FluxConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluxConfiguration
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1fluxConfigurations~1{fluxConfigurationName}?api-version=2024-04-01-preview/put'
            operationId: FluxConfigurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluxConfiguration
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1fluxConfigurations~1{fluxConfigurationName}?api-version=2024-04-01-preview/patch'
            operationId: FluxConfigurations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluxConfiguration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1fluxConfigurations~1{fluxConfigurationName}?api-version=2024-04-01-preview/delete'
            operationId: FluxConfigurations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1fluxConfigurations?api-version=2024-04-01-preview/get'
            operationId: FluxConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FluxConfigurationsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flux_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/flux_configurations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/flux_configurations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/flux_configurations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/flux_configurations/methods/delete'
    flux_config_operation_status:
      id: azure.kubernetes_configuration.flux_config_operation_status
      name: flux_config_operation_status
      title: flux_config_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1fluxConfigurations~1{fluxConfigurationName}~1operations~1{operationId}?api-version=2024-04-01-preview/get'
            operationId: FluxConfigOperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatusResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/flux_config_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operation_status:
      id: azure.kubernetes_configuration.operation_status
      name: operation_status
      title: operation_status
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1operations?api-version=2023-05-01/get'
            operationId: OperationStatus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatusList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1extensions~1{extensionName}~1operations~1{operationId}?api-version=2023-05-01/get'
            operationId: OperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatusResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.kubernetes_configuration.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.KubernetesConfiguration~1operations?api-version=2023-05-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceProviderOperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    extensions:
      id: azure.kubernetes_configuration.extensions
      name: extensions
      title: extensions
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1extensions~1{extensionName}?api-version=2023-05-01/put'
            operationId: Extensions_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Extension
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1extensions~1{extensionName}?api-version=2023-05-01/get'
            operationId: Extensions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Extension
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1extensions~1{extensionName}?api-version=2023-05-01/delete'
            operationId: Extensions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1extensions~1{extensionName}?api-version=2023-05-01/patch'
            operationId: Extensions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Extension
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1extensions?api-version=2023-05-01/get'
            operationId: Extensions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExtensionsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/extensions/methods/delete'
    source_control_configurations:
      id: azure.kubernetes_configuration.source_control_configurations
      name: source_control_configurations
      title: source_control_configurations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1sourceControlConfigurations~1{sourceControlConfigurationName}?api-version=2023-05-01/get'
            operationId: SourceControlConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SourceControlConfiguration
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1sourceControlConfigurations~1{sourceControlConfigurationName}?api-version=2023-05-01/put'
            operationId: SourceControlConfigurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SourceControlConfiguration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1sourceControlConfigurations~1{sourceControlConfigurationName}?api-version=2023-05-01/delete'
            operationId: SourceControlConfigurations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{clusterRp}~1{clusterResourceName}~1{clusterName}~1providers~1Microsoft.KubernetesConfiguration~1sourceControlConfigurations?api-version=2023-05-01/get'
            operationId: SourceControlConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SourceControlConfigurationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/source_control_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/source_control_configurations/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/source_control_configurations/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/source_control_configurations/methods/delete'
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/fluxConfigurations/{fluxConfigurationName}?api-version=2024-04-01-preview:
    get:
      tags:
        - FluxConfiguration
        - Flux
      description: Gets details of the Flux Configuration.
      operationId: FluxConfigurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FluxConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluxConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - FluxConfiguration
        - Flux
      description: Create a new Kubernetes Flux Configuration.
      operationId: FluxConfigurations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FluxConfigurationNameParameter'
      requestBody:
        description: Properties necessary to Create a FluxConfiguration.
        required: true
        x-ms-requestBody-name: fluxConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FluxConfiguration'
      responses:
        '200':
          description: Request received successfully for an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluxConfiguration'
        '201':
          description: Request received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluxConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - FluxConfiguration
        - Flux
      description: Update an existing Kubernetes Flux Configuration.
      operationId: FluxConfigurations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FluxConfigurationNameParameter'
      requestBody:
        description: Properties to Patch in an existing Flux Configuration.
        required: true
        x-ms-requestBody-name: fluxConfigurationPatch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FluxConfigurationPatch'
      responses:
        '200':
          description: No update is done to fluxConfiguration so return OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluxConfiguration'
        '202':
          description: Request received successfully, and the resource will be updated asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluxConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - FluxConfiguration
        - Flux
      description: This will delete the YAML file used to set up the Flux Configuration, thus stopping future sync from the source repo.
      operationId: FluxConfigurations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FluxConfigurationNameParameter'
        - name: forceDelete
          in: query
          description: Delete the extension resource in Azure - not the normal asynchronous delete.
          schema:
            type: boolean
      responses:
        '200':
          description: OK.  The request has been completed successfully.
        '202':
          description: Accepted.  The request has been accepted for processing.
        '204':
          description: No Content.  The request has been accepted but the configuration was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/fluxConfigurations?api-version=2024-04-01-preview:
    get:
      tags:
        - FluxConfiguration
        - Flux
      description: List all Flux Configurations.
      operationId: FluxConfigurations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FluxConfigurationsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/fluxConfigurations/{fluxConfigurationName}/operations/{operationId}?api-version=2024-04-01-preview:
    get:
      tags:
        - FluxConfiguration Operation Status
      operationId: FluxConfigOperationStatus_Get
      description: Get Async Operation status
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/FluxConfigurationNameParameter'
        - name: operationId
          in: path
          description: operation Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: FluxConfiguration Operation Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/operations?api-version=2023-05-01:
    get:
      tags:
        - Operations in a Cluster
      operationId: OperationStatus_List
      description: List Async Operations, currently in progress, in a cluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Operations in a cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.KubernetesConfiguration/operations?api-version=2023-05-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: List all the available operations the KubernetesConfiguration resource provider supports.
      parameters: []
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderOperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/extensions/{extensionName}?api-version=2023-05-01:
    put:
      tags:
        - Extensions
        - ClusterExtensions
      description: Create a new Kubernetes Cluster Extension.
      operationId: Extensions_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      requestBody:
        description: Properties necessary to Create an Extension.
        required: true
        x-ms-requestBody-name: extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Extension'
      responses:
        '200':
          description: Request received successfully for an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '201':
          description: Request received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    get:
      tags:
        - Extensions
        - ClusterExtensions
      description: Gets Kubernetes Cluster Extension.
      operationId: Extensions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Extensions
        - ClusterExtensions
      description: Delete a Kubernetes Cluster Extension. This will cause the Agent to Uninstall the extension from the cluster.
      operationId: Extensions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
        - name: forceDelete
          in: query
          description: Delete the extension resource in Azure - not the normal asynchronous delete.
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '202':
          description: Accepted.  The request has been accepted for processing.
        '204':
          description: No Content.  The request has been accepted but the extension was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Extensions
        - ClusterExtensions
      description: Patch an existing Kubernetes Cluster Extension.
      operationId: Extensions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
      requestBody:
        description: Properties to Patch in an existing Extension.
        required: true
        x-ms-requestBody-name: patchExtension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchExtension'
      responses:
        '200':
          description: No update is done to extension so return OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        '202':
          description: Request received successfully, and the resource will be updated asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/extensions?api-version=2023-05-01:
    get:
      tags:
        - Extensions
        - ClusterExtensions
      description: List all Extensions in the cluster.
      operationId: Extensions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/extensions/{extensionName}/operations/{operationId}?api-version=2023-05-01:
    get:
      tags:
        - Extension Operation Status
      operationId: OperationStatus_Get
      description: Get Async Operation status
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/ExtensionNameParameter'
        - name: operationId
          in: path
          description: operation Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Extension Operation Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/sourceControlConfigurations/{sourceControlConfigurationName}?api-version=2023-05-01:
    get:
      tags:
        - SourceControlConfiguration
      description: Gets details of the Source Control Configuration.
      operationId: SourceControlConfigurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SourceControlConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SourceControlConfiguration
      description: Create a new Kubernetes Source Control Configuration.
      operationId: SourceControlConfigurations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SourceControlConfigurationNameParameter'
      requestBody:
        description: Properties necessary to Create KubernetesConfiguration.
        required: true
        x-ms-requestBody-name: sourceControlConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceControlConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlConfiguration'
        '201':
          description: Created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SourceControlConfiguration
      description: This will delete the YAML file used to set up the Source control configuration, thus stopping future sync from the source repo.
      operationId: SourceControlConfigurations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SourceControlConfigurationNameParameter'
      responses:
        '200':
          description: OK.  The request has been completed successfully.
        '204':
          description: No Content.  The request has been accepted but the configuration was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{clusterRp}/{clusterResourceName}/{clusterName}/providers/Microsoft.KubernetesConfiguration/sourceControlConfigurations?api-version=2023-05-01:
    get:
      tags:
        - SourceControlConfiguration
      description: List all Source Control Configurations.
      operationId: SourceControlConfigurations_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterRpParameter'
        - $ref: '#/components/parameters/ClusterResourceNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlConfigurationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
