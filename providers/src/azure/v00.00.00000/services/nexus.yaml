openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Operator Nexus - Network Cloud
  description: Azure Operator Nexus - Network Cloud APIs provide management of the on-premises clusters and their resources, such as, racks, bare metal hosts, virtual machines, workload networks and more.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    AgentPoolNameParameter:
      name: agentPoolName
      in: path
      description: The name of the Kubernetes cluster agent pool.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    BareMetalMachineKeySetNameParameter:
      name: bareMetalMachineKeySetName
      in: path
      description: The name of the bare metal machine key set.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    BareMetalMachineNameParameter:
      name: bareMetalMachineName
      in: path
      description: The name of the bare metal machine.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$
        type: string
    BmcKeySetNameParameter:
      name: bmcKeySetName
      in: path
      description: The name of the baseboard management controller key set.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    CloudServicesNetworkNameParameter:
      name: cloudServicesNetworkName
      in: path
      description: The name of the cloud services network.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    ClusterManagerNameParameter:
      name: clusterManagerName
      in: path
      description: The name of the cluster manager.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    ClusterNameParameter:
      name: clusterName
      in: path
      description: The name of the cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    ConsoleNameParameter:
      name: consoleName
      in: path
      description: The name of the virtual machine console.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^default$
        type: string
    FeatureNameParameter:
      name: featureName
      in: path
      description: The name of the feature.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$
        type: string
    KubernetesClusterNameParameter:
      name: kubernetesClusterName
      in: path
      description: The name of the Kubernetes cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    L2NetworkNameParameter:
      name: l2NetworkName
      in: path
      description: The name of the L2 network.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    L3NetworkNameParameter:
      name: l3NetworkName
      in: path
      description: The name of the L3 network.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    MetricsConfigurationName:
      name: metricsConfigurationName
      in: path
      description: The name of the metrics configuration for the cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^default$
        type: string
    RackNameParameter:
      name: rackName
      in: path
      description: The name of the rack.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    RackSkuNameParameter:
      name: rackSkuName
      in: path
      description: The name of the rack SKU.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,126}[a-zA-Z0-9])$
        type: string
    StorageApplianceNameParameter:
      name: storageApplianceName
      in: path
      description: The name of the storage appliance.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    TrunkedNetworkNameParameter:
      name: trunkedNetworkName
      in: path
      description: The name of the trunked network.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
        type: string
    VirtualMachineNameParameter:
      name: virtualMachineName
      in: path
      description: The name of the virtual machine.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$
        type: string
    VolumeNameParameter:
      name: volumeName
      in: path
      description: The name of the volume.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,62}[a-zA-Z0-9])$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    AadConfiguration:
      type: object
      title: AadConfiguration represents the Azure Active Directory Integration properties.
      required:
        - adminGroupObjectIds
      properties:
        adminGroupObjectIds:
          description: The list of Azure Active Directory group object IDs that will have an administrative role on the Kubernetes cluster.
          type: array
          minItems: 1
          items:
            type: string
          x-ms-mutability:
            - read
            - create
    AdministrativeCredentials:
      type: object
      title: AdministrativeCredentials represents the admin credentials for the device requiring password-based authentication.
      required:
        - username
        - password
      properties:
        password:
          description: The password of the administrator of the device used during initialization.
          type: string
          minLength: 1
          x-ms-secret: true
        username:
          description: The username of the administrator of the device used during initialization.
          type: string
          minLength: 1
    AdministratorConfiguration:
      type: object
      title: AdministratorConfiguration represents the administrative credentials that will be applied to the control plane and agent pool nodes in Kubernetes clusters.
      properties:
        adminUsername:
          description: The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied, a user name will be chosen by the service.
          type: string
          x-ms-mutability:
            - read
            - create
        sshPublicKeys:
          description: The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification of public keys may be required to produce a working environment.
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
    AdministratorConfigurationPatch:
      type: object
      title: AdministratorConfigurationPatch represents the patching capabilities for the administrator configuration.
      properties:
        sshPublicKeys:
          description: SshPublicKey represents the public key used to authenticate with a resource through SSH.
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers:
            - keyData
    AgentOptions:
      type: object
      title: AgentOptions are configurations that will be applied to each agent in an agent pool.
      required:
        - hugepagesCount
      properties:
        hugepagesCount:
          description: The number of hugepages to allocate.
          type: integer
          format: int64
        hugepagesSize:
          description: The size of the hugepages to allocate.
          type: string
          default: 2M
          enum:
            - 2M
            - 1G
          x-ms-enum:
            modelAsString: true
            name: HugepagesSize
          x-ms-mutability:
            - read
            - create
    AgentPool:
      title: AgentPool represents the agent pool of Kubernetes cluster.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/AgentPoolProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    AgentPoolConfiguration:
      type: object
      title: AgentPoolConfiguration specifies the configuration of a pool of nodes.
      required:
        - count
        - mode
        - vmSkuName
      properties:
        administratorConfiguration:
          $ref: '#/components/schemas/AdministratorConfiguration'
          description: The administrator credentials to be used for the nodes in this agent pool.
        agentOptions:
          $ref: '#/components/schemas/AgentOptions'
          description: The configurations that will be applied to each agent in this agent pool.
          x-ms-mutability:
            - read
            - create
        attachedNetworkConfiguration:
          $ref: '#/components/schemas/AttachedNetworkConfiguration'
          description: The configuration of networks being attached to the agent pool for use by the workloads that run on this Kubernetes cluster.
          x-ms-mutability:
            - read
            - create
        availabilityZones:
          description: The list of availability zones of the Network Cloud cluster used for the provisioning of nodes in this agent pool. If not specified, all availability zones will be used.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        count:
          description: The number of virtual machines that use this configuration.
          type: integer
          format: int64
        labels:
          description: The labels applied to the nodes in this agent pool.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-mutability:
            - read
            - create
        mode:
          description: The selection of how this agent pool is utilized, either as a system pool or a user pool. System pools run the features and critical services for the Kubernetes Cluster, while user pools are dedicated to user workloads. Every Kubernetes cluster must contain at least one system node pool with at least one node.
          type: string
          enum:
            - System
            - User
            - NotApplicable
          x-ms-enum:
            modelAsString: true
            name: AgentPoolMode
          x-ms-mutability:
            - read
            - create
        taints:
          description: The taints applied to the nodes in this agent pool.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-mutability:
            - read
            - create
        upgradeSettings:
          $ref: '#/components/schemas/AgentPoolUpgradeSettings'
          description: The configuration of the agent pool.
        vmSkuName:
          description: The name of the VM SKU that determines the size of resources allocated for node VMs.
          type: string
          x-ms-mutability:
            - read
            - create
    AgentPoolList:
      type: object
      title: AgentPoolList represents a list of Kubernetes cluster agent pools.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of agent pools.
          type: array
          items:
            $ref: '#/components/schemas/AgentPool'
    AgentPoolPatchParameters:
      title: AgentPoolPatchParameters represents the body of the request to patch the Kubernetes cluster agent pool.
      properties:
        properties:
          $ref: '#/components/schemas/AgentPoolPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    AgentPoolPatchProperties:
      type: object
      title: AgentPoolPatchProperties represents the properties of an agent pool that can be modified.
      properties:
        administratorConfiguration:
          $ref: '#/components/schemas/NodePoolAdministratorConfigurationPatch'
          description: The configuration of administrator credentials for the control plane nodes.
        count:
          description: The number of virtual machines that use this configuration.
          type: integer
          format: int64
        upgradeSettings:
          $ref: '#/components/schemas/AgentPoolUpgradeSettings'
          description: The configuration of the agent pool.
    AgentPoolProperties:
      type: object
      title: AgentPoolProperties represents the properties of the Kubernetes cluster agent pool.
      required:
        - count
        - mode
        - vmSkuName
      properties:
        administratorConfiguration:
          $ref: '#/components/schemas/AdministratorConfiguration'
          description: The administrator credentials to be used for the nodes in this agent pool.
          x-ms-mutability:
            - read
            - create
        agentOptions:
          $ref: '#/components/schemas/AgentOptions'
          description: The configurations that will be applied to each agent in this agent pool.
          x-ms-mutability:
            - read
            - create
        attachedNetworkConfiguration:
          $ref: '#/components/schemas/AttachedNetworkConfiguration'
          description: The configuration of networks being attached to the agent pool for use by the workloads that run on this Kubernetes cluster.
          x-ms-mutability:
            - read
            - create
        availabilityZones:
          description: The list of availability zones of the Network Cloud cluster used for the provisioning of nodes in this agent pool. If not specified, all availability zones will be used.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        count:
          description: The number of virtual machines that use this configuration.
          type: integer
          format: int64
        detailedStatus:
          description: The current status of the agent pool.
          type: string
          enum:
            - Available
            - Error
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: AgentPoolDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        kubernetesVersion:
          description: The Kubernetes version running in this agent pool.
          type: string
          readOnly: true
        labels:
          description: The labels applied to the nodes in this agent pool.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-mutability:
            - read
            - create
        mode:
          description: The selection of how this agent pool is utilized, either as a system pool or a user pool. System pools run the features and critical services for the Kubernetes Cluster, while user pools are dedicated to user workloads. Every Kubernetes cluster must contain at least one system node pool with at least one node.
          type: string
          enum:
            - System
            - User
            - NotApplicable
          x-ms-enum:
            modelAsString: true
            name: AgentPoolMode
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: The provisioning state of the agent pool.
          type: string
          enum:
            - Accepted
            - Canceled
            - Deleting
            - Failed
            - InProgress
            - Succeeded
            - Updating
          x-ms-enum:
            modelAsString: true
            name: AgentPoolProvisioningState
          readOnly: true
        taints:
          description: The taints applied to the nodes in this agent pool.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-mutability:
            - read
            - create
        upgradeSettings:
          $ref: '#/components/schemas/AgentPoolUpgradeSettings'
          description: The configuration of the agent pool.
        vmSkuName:
          description: The name of the VM SKU that determines the size of resources allocated for node VMs.
          type: string
          x-ms-mutability:
            - read
            - create
    AgentPoolUpgradeSettings:
      type: object
      title: AgentPoolUpgradeSettings specifies the upgrade settings for an agent pool.
      properties:
        drainTimeout:
          description: The maximum time in seconds that is allowed for a node drain to complete before proceeding with the upgrade of the agent pool. If not specified during creation, a value of 1800 seconds is used.
          type: integer
          format: int64
          maximum: 86400
          minimum: 60
        maxSurge:
          description: The maximum number or percentage of nodes that are surged during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified during creation, a value of 1 is used. One of MaxSurge and MaxUnavailable must be greater than 0.
          type: string
        maxUnavailable:
          description: The maximum number or percentage of nodes that can be unavailable during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified during creation, a value of 0 is used. One of MaxSurge and MaxUnavailable must be greater than 0.
          type: string
    AttachedNetworkConfiguration:
      type: object
      title: AttachedNetworkConfiguration represents the set of workload networks to attach to a resource.
      properties:
        l2Networks:
          description: The list of Layer 2 Networks and related configuration for attachment.
          type: array
          items:
            $ref: '#/components/schemas/L2NetworkAttachmentConfiguration'
          x-ms-mutability:
            - read
            - create
        l3Networks:
          description: The list of Layer 3 Networks and related configuration for attachment.
          type: array
          items:
            $ref: '#/components/schemas/L3NetworkAttachmentConfiguration'
          x-ms-mutability:
            - read
            - create
        trunkedNetworks:
          description: The list of Trunked Networks and related configuration for attachment.
          type: array
          items:
            $ref: '#/components/schemas/TrunkedNetworkAttachmentConfiguration'
          x-ms-mutability:
            - read
            - create
    AvailableUpgrade:
      type: object
      title: AvailableUpgrade represents an upgrade available for a Kubernetes cluster.
      properties:
        availabilityLifecycle:
          description: The version lifecycle indicator.
          type: string
          enum:
            - Preview
            - GenerallyAvailable
          x-ms-enum:
            modelAsString: true
            name: AvailabilityLifecycle
          readOnly: true
        version:
          description: The version available for upgrading.
          type: string
          readOnly: true
    BareMetalMachine:
      title: BareMetalMachine represents the physical machine in the rack.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/BareMetalMachineProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BareMetalMachineCommandSpecification:
      type: object
      title: BareMetalMachineCommandSpecification represents the command and optional arguments to exercise against the bare metal machine.
      required:
        - command
      properties:
        arguments:
          description: The list of string arguments that will be passed to the script in order as separate arguments.
          type: array
          items:
            type: string
        command:
          description: The command to execute against the bare metal machine.
          type: string
    BareMetalMachineConfigurationData:
      type: object
      title: BareMetalMachineConfigurationData represents configuration for the bare metal machine.
      required:
        - rackSlot
        - bootMacAddress
        - bmcCredentials
        - bmcMacAddress
        - serialNumber
      properties:
        bmcConnectionString:
          description: The connection string for the baseboard management controller including IP address and protocol.
          type: string
          readOnly: true
        bmcCredentials:
          $ref: '#/components/schemas/AdministrativeCredentials'
          description: The credentials of the baseboard management controller on this bare metal machine.
        bmcMacAddress:
          description: The MAC address of the BMC for this machine.
          type: string
          pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        bootMacAddress:
          description: The MAC address associated with the PXE NIC card.
          type: string
          pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        machineDetails:
          description: The free-form additional information about the machine, e.g. an asset tag.
          type: string
          maxLength: 256
        machineName:
          description: |-
            The user-provided name for the bare metal machine created from this specification.
            If not provided, the machine name will be generated programmatically.
          type: string
          pattern: ^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$
        rackSlot:
          description: The slot the physical machine is in the rack based on the BOM configuration.
          type: integer
          format: int64
          maximum: 256
          minimum: 1
        serialNumber:
          description: The serial number of the machine. Hardware suppliers may use an alternate value. For example, service tag.
          type: string
          maxLength: 64
    BareMetalMachineCordonParameters:
      type: object
      title: BareMetalMachineCordonParameters represents the body of the request to evacuate workloads from node on a bare metal machine.
      properties:
        evacuate:
          description: The indicator of whether to evacuate the node workload when the bare metal machine is cordoned.
          type: string
          default: 'False'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineEvacuate
    BareMetalMachineKeySet:
      title: BareMetalMachineKeySet represents the bare metal machine key set.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/BareMetalMachineKeySetProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BareMetalMachineKeySetList:
      type: object
      title: BareMetalMachineKeySetList represents a list of bare metal machine key sets.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of bare metal machine key sets.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalMachineKeySet'
    BareMetalMachineKeySetPatchParameters:
      title: BareMetalMachineKeySetPatchParameters represents the body of the request to patch the bare metal machine key set.
      properties:
        properties:
          $ref: '#/components/schemas/BareMetalMachineKeySetPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    BareMetalMachineKeySetPatchProperties:
      type: object
      title: BareMetalMachineKeySetPatchProperties represents the properties of bare metal machine key set that can be patched.
      properties:
        expiration:
          description: The date and time after which the users in this key set will be removed from the bare metal machines.
          type: string
          format: date-time
        jumpHostsAllowed:
          description: The list of IP addresses of jump hosts with management network access from which a login will be allowed for the users.
          type: array
          items:
            type: string
        userList:
          description: The unique list of permitted users.
          type: array
          items:
            $ref: '#/components/schemas/KeySetUser'
          x-ms-identifiers:
            - azureUserName
    BareMetalMachineKeySetProperties:
      type: object
      title: BareMetalMachineKeySetProperties represents the properties of bare metal machine key set.
      required:
        - privilegeLevel
        - expiration
        - azureGroupId
        - jumpHostsAllowed
        - userList
      properties:
        azureGroupId:
          description: The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access.
          type: string
          x-ms-mutability:
            - read
            - create
        detailedStatus:
          description: The more detailed status of the key set.
          type: string
          enum:
            - AllActive
            - SomeInvalid
            - AllInvalid
            - Validating
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineKeySetDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        expiration:
          description: The date and time after which the users in this key set will be removed from the bare metal machines.
          type: string
          format: date-time
        jumpHostsAllowed:
          description: The list of IP addresses of jump hosts with management network access from which a login will be allowed for the users.
          type: array
          items:
            type: string
        lastValidation:
          description: The last time this key set was validated.
          type: string
          format: date-time
          readOnly: true
        osGroupName:
          description: The name of the group that users will be assigned to on the operating system of the machines.
          type: string
          maxLength: 32
          pattern: ^([A-Za-z]([A-Za-z0-9]*))$
          x-ms-mutability:
            - read
            - create
        privilegeLevel:
          description: The access level allowed for the users in this key set.
          type: string
          enum:
            - Standard
            - Superuser
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineKeySetPrivilegeLevel
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: The provisioning state of the bare metal machine key set.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineKeySetProvisioningState
          readOnly: true
        userList:
          description: The unique list of permitted users.
          type: array
          items:
            $ref: '#/components/schemas/KeySetUser'
          x-ms-identifiers:
            - azureUserName
        userListStatus:
          description: The status evaluation of each user.
          type: array
          items:
            $ref: '#/components/schemas/KeySetUserStatus'
          x-ms-identifiers:
            - azureUserName
          readOnly: true
    BareMetalMachineList:
      type: object
      title: BareMetalMachineList represents a list of bare metal machines.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of bare metal machines.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalMachine'
    BareMetalMachinePatchParameters:
      title: BareMetalMachinePatchParameters represents the body of the request to patch bare metal machine properties.
      properties:
        properties:
          $ref: '#/components/schemas/BareMetalMachinePatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    BareMetalMachinePatchProperties:
      type: object
      title: BareMetalMachinePatchProperties represents the properties of the bare metal machine that can be patched.
      properties:
        machineDetails:
          description: |-
            The details provided by the customer during the creation of rack manifests
            that allows for custom data to be associated with this machine.
          type: string
          maxLength: 256
    BareMetalMachinePowerOffParameters:
      type: object
      title: BareMetalMachinePowerOffParameters represents the body of the request to power off bare metal machine.
      properties:
        skipShutdown:
          description: The indicator of whether to skip the graceful OS shutdown and power off the bare metal machine immediately.
          type: string
          default: 'False'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineSkipShutdown
    BareMetalMachineProperties:
      type: object
      title: BareMetalMachineProperties represents the properties of a bare metal machine.
      required:
        - rackId
        - machineSkuId
        - rackSlot
        - machineName
        - bootMacAddress
        - bmcMacAddress
        - bmcCredentials
        - bmcConnectionString
        - machineDetails
        - serialNumber
      properties:
        associatedResourceIds:
          description: The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
          type: array
          items:
            type: string
          readOnly: true
        bmcConnectionString:
          description: The connection string for the baseboard management controller including IP address and protocol.
          type: string
        bmcCredentials:
          $ref: '#/components/schemas/AdministrativeCredentials'
          description: The credentials of the baseboard management controller on this bare metal machine.
        bmcMacAddress:
          description: The MAC address of the BMC device.
          type: string
          pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        bootMacAddress:
          description: The MAC address of a NIC connected to the PXE network.
          type: string
          pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        clusterId:
          description: The resource ID of the cluster this bare metal machine is associated with.
          type: string
          format: arm-id
          readOnly: true
        cordonStatus:
          description: The cordon status of the bare metal machine.
          type: string
          enum:
            - Cordoned
            - Uncordoned
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineCordonStatus
          readOnly: true
        detailedStatus:
          description: The more detailed status of the bare metal machine.
          type: string
          enum:
            - Preparing
            - Error
            - Available
            - Provisioning
            - Provisioned
            - Deprovisioning
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        hardwareInventory:
          $ref: '#/components/schemas/HardwareInventory'
          description: The hardware inventory, including information acquired from the model/sku information and from the ironic inspector.
          readOnly: true
        hardwareValidationStatus:
          $ref: '#/components/schemas/HardwareValidationStatus'
          description: The details of the latest hardware validation performed for this bare metal machine.
          readOnly: true
        hybridAksClustersAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the HybridAksClusters that have nodes hosted on this bare metal machine.
          type: array
          items:
            type: string
          readOnly: true
        kubernetesNodeName:
          description: The name of this machine represented by the host object in the Cluster's Kubernetes control plane.
          type: string
          readOnly: true
        kubernetesVersion:
          description: The version of Kubernetes running on this machine.
          type: string
          readOnly: true
        machineClusterVersion:
          description: The cluster version that has been applied to this machine during deployment or a version update.
          type: string
        machineDetails:
          description: The custom details provided by the customer.
          type: string
          maxLength: 256
        machineName:
          description: The OS-level hostname assigned to this machine.
          type: string
          pattern: ^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$
        machineRoles:
          description: The list of roles that are assigned to the cluster node running on this machine.
          type: array
          items:
            type: string
          readOnly: true
        machineSkuId:
          description: The unique internal identifier of the bare metal machine SKU.
          type: string
        oamIpv4Address:
          description: The IPv4 address that is assigned to the bare metal machine during the cluster deployment.
          type: string
          readOnly: true
        oamIpv6Address:
          description: The IPv6 address that is assigned to the bare metal machine during the cluster deployment.
          type: string
          readOnly: true
        osImage:
          description: The image that is currently provisioned to the OS disk.
          type: string
          readOnly: true
        powerState:
          description: The power state derived from the baseboard management controller.
          type: string
          enum:
            - 'On'
            - 'Off'
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachinePowerState
          readOnly: true
        provisioningState:
          description: The provisioning state of the bare metal machine.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineProvisioningState
          readOnly: true
        rackId:
          description: The resource ID of the rack where this bare metal machine resides.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/racks
        rackSlot:
          description: The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.
          type: integer
          format: int64
          maximum: 256
          minimum: 1
        readyState:
          description: The indicator of whether the bare metal machine is ready to receive workloads.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineReadyState
          readOnly: true
        runtimeProtectionStatus:
          $ref: '#/components/schemas/RuntimeProtectionStatus'
          description: The runtime protection status of the bare metal machine.
          readOnly: true
        secretRotationStatus:
          description: The list of statuses that represent secret rotation activity.
          type: array
          items:
            $ref: '#/components/schemas/SecretRotationStatus'
          x-ms-identifiers:
            - secretType
          readOnly: true
        serialNumber:
          description: The serial number of the bare metal machine.
          type: string
          maxLength: 64
          minLength: 1
        serviceTag:
          description: The discovered value of the machine's service tag.
          type: string
          readOnly: true
        virtualMachinesAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of the resource IDs for the VirtualMachines that are hosted on this bare metal machine.
          type: array
          items:
            type: string
          readOnly: true
    BareMetalMachineReplaceParameters:
      type: object
      title: BareMetalMachineReplaceParameters represents the body of the request to physically swap a bare metal machine for another.
      properties:
        bmcCredentials:
          $ref: '#/components/schemas/AdministrativeCredentials'
          description: The credentials of the baseboard management controller on this bare metal machine.
        bmcMacAddress:
          description: The MAC address of the BMC device.
          type: string
          pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        bootMacAddress:
          description: The MAC address of a NIC connected to the PXE network.
          type: string
          pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
        machineName:
          description: The OS-level hostname assigned to this machine.
          type: string
          pattern: ^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$
        serialNumber:
          description: The serial number of the bare metal machine.
          type: string
          maxLength: 64
          minLength: 1
    BareMetalMachineRunCommandParameters:
      type: object
      title: BareMetalMachineRunCommandParameters represents the body of the request to execute a script on the bare metal machine.
      required:
        - script
        - limitTimeSeconds
      properties:
        arguments:
          description: The list of string arguments that will be passed to the script in order as separate arguments.
          type: array
          items:
            type: string
        limitTimeSeconds:
          description: |-
            The maximum time the script is allowed to run.
            If the execution time exceeds the maximum, the script will be stopped, any output produced until then will be captured, and the exit code matching a timeout will be returned (252).
          type: integer
          format: int64
          maximum: 14400
          minimum: 60
        script:
          description: The base64 encoded script to execute on the bare metal machine.
          type: string
    BareMetalMachineRunDataExtractsParameters:
      type: object
      title: BareMetalMachineRunDataExtractsParameters represents the body of request containing list of curated data extraction commands to run on the bare metal machine.
      required:
        - commands
        - limitTimeSeconds
      properties:
        commands:
          description: The list of curated data extraction commands to be executed directly against the target machine.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/BareMetalMachineCommandSpecification'
          x-ms-identifiers: []
        limitTimeSeconds:
          description: |-
            The maximum time the commands are allowed to run.
            If the execution time exceeds the maximum, the script will be stopped, any output produced until then will be captured, and the exit code matching a timeout will be returned (252).
          type: integer
          format: int64
          maximum: 14400
          minimum: 60
    BareMetalMachineRunReadCommandsParameters:
      type: object
      title: BareMetalMachineRunReadCommandsParameters represents the body of request containing list of read-only commands to run on the bare metal machine.
      required:
        - commands
        - limitTimeSeconds
      properties:
        commands:
          description: The list of read-only commands to be executed directly against the target machine.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/BareMetalMachineCommandSpecification'
          x-ms-identifiers: []
        limitTimeSeconds:
          description: |-
            The maximum time the commands are allowed to run.
            If the execution time exceeds the maximum, the script will be stopped, any output produced until then will be captured, and the exit code matching a timeout will be returned (252).
          type: integer
          format: int64
          maximum: 14400
          minimum: 60
    BgpAdvertisement:
      type: object
      title: BgpAdvertisement represents the association of IP address pools to the communities and peers.
      required:
        - ipAddressPools
      properties:
        advertiseToFabric:
          description: The indicator of if this advertisement is also made to the network fabric associated with the Network Cloud Cluster. This field is ignored if fabricPeeringEnabled is set to False.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: AdvertiseToFabric
          x-ms-mutability:
            - read
            - create
        communities:
          description: The names of the BGP communities to be associated with the announcement, utilizing a BGP community string in 1234:1234 format.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        ipAddressPools:
          description: The names of the IP address pools associated with this announcement.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        peers:
          description: The names of the BGP peers to limit this advertisement to. If no values are specified, all BGP peers will receive this advertisement.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
    BgpServiceLoadBalancerConfiguration:
      type: object
      title: BgpServiceLoadBalancerConfiguration represents the configuration of a BGP service load balancer.
      properties:
        bgpAdvertisements:
          description: The association of IP address pools to the communities and peers, allowing for announcement of IPs.
          type: array
          items:
            $ref: '#/components/schemas/BgpAdvertisement'
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
        bgpPeers:
          description: The list of additional BgpPeer entities that the Kubernetes cluster will peer with. All peering must be explicitly defined.
          type: array
          items:
            $ref: '#/components/schemas/ServiceLoadBalancerBgpPeer'
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
        fabricPeeringEnabled:
          description: The indicator to specify if the load balancer peers with the network fabric.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: FabricPeeringEnabled
          x-ms-mutability:
            - read
            - create
        ipAddressPools:
          description: The list of pools of IP addresses that can be allocated to load balancer services.
          type: array
          items:
            $ref: '#/components/schemas/IpAddressPool'
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
    BmcKeySet:
      title: BmcKeySet represents the baseboard management controller key set.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/BmcKeySetProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BmcKeySetList:
      type: object
      title: BmcKeySetList represents a list of baseboard management controller key sets.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of baseboard management controller key sets.
          type: array
          items:
            $ref: '#/components/schemas/BmcKeySet'
    BmcKeySetPatchParameters:
      title: BmcKeySetPatchParameters represents the body of the request to patch the baseboard management controller key set.
      properties:
        properties:
          $ref: '#/components/schemas/BmcKeySetPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    BmcKeySetPatchProperties:
      type: object
      title: BmcKeySetPatchProperties represents the properties of baseboard management controller key set that are patchable.
      properties:
        expiration:
          description: The date and time after which the users in this key set will be removed from the baseboard management controllers.
          type: string
          format: date-time
        userList:
          description: The unique list of permitted users.
          type: array
          items:
            $ref: '#/components/schemas/KeySetUser'
          x-ms-identifiers:
            - azureUserName
    BmcKeySetProperties:
      type: object
      title: BmcKeySetProperties represents the properties of baseboard management controller key set.
      required:
        - privilegeLevel
        - expiration
        - azureGroupId
        - userList
      properties:
        azureGroupId:
          description: The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access.
          type: string
          x-ms-mutability:
            - read
            - create
        detailedStatus:
          description: The more detailed status of the key set.
          type: string
          enum:
            - AllActive
            - SomeInvalid
            - AllInvalid
            - Validating
          x-ms-enum:
            modelAsString: true
            name: BmcKeySetDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        expiration:
          description: The date and time after which the users in this key set will be removed from the baseboard management controllers.
          type: string
          format: date-time
        lastValidation:
          description: The last time this key set was validated.
          type: string
          format: date-time
          readOnly: true
        privilegeLevel:
          description: The access level allowed for the users in this key set.
          type: string
          enum:
            - ReadOnly
            - Administrator
          x-ms-enum:
            modelAsString: true
            name: BmcKeySetPrivilegeLevel
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: The provisioning state of the baseboard management controller key set.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: BmcKeySetProvisioningState
          readOnly: true
        userList:
          description: The unique list of permitted users.
          type: array
          items:
            $ref: '#/components/schemas/KeySetUser'
          x-ms-identifiers:
            - azureUserName
        userListStatus:
          description: The status evaluation of each user.
          type: array
          items:
            $ref: '#/components/schemas/KeySetUserStatus'
          x-ms-identifiers:
            - azureUserName
          readOnly: true
    CloudServicesNetwork:
      description: |-
        Upon creation, the additional services that are provided by the platform will be allocated and
        represented in the status of this resource. All resources associated with this cloud services network will be part
        of the same layer 2 (L2) isolation domain. At least one service network must be created but may be reused across many
        virtual machines and/or Hybrid AKS clusters.
      title: CloudServicesNetwork represents additional egress information that will be used by associated virtual machines or hybrid AKS clusters.
      required:
        - extendedLocation
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/CloudServicesNetworkProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    CloudServicesNetworkList:
      type: object
      title: CloudServicesNetworkList represents a list of cloud services networks.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of cloud services networks.
          type: array
          items:
            $ref: '#/components/schemas/CloudServicesNetwork'
    CloudServicesNetworkPatchParameters:
      title: CloudServicesNetworkPatchParameters represents the body of the request to patch the cloud services network.
      properties:
        properties:
          $ref: '#/components/schemas/CloudServicesNetworkPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    CloudServicesNetworkPatchProperties:
      type: object
      title: CloudServicesNetworkPatchProperties represents the properties of the cloud services network that can be updated using a patch request.
      properties:
        additionalEgressEndpoints:
          description: The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
          type: array
          items:
            $ref: '#/components/schemas/EgressEndpoint'
          x-ms-identifiers: []
        enableDefaultEgressEndpoints:
          description: The indicator of whether the platform default endpoints are allowed for the egress traffic.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: CloudServicesNetworkEnableDefaultEgressEndpoints
    CloudServicesNetworkProperties:
      type: object
      title: CloudServicesNetworkProperties represents properties of the cloud services network.
      properties:
        additionalEgressEndpoints:
          description: The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint.
          type: array
          items:
            $ref: '#/components/schemas/EgressEndpoint'
          x-ms-identifiers: []
        associatedResourceIds:
          description: The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
          type: array
          items:
            type: string
          readOnly: true
        clusterId:
          description: The resource ID of the Network Cloud cluster this cloud services network is associated with.
          type: string
          format: arm-id
          readOnly: true
        detailedStatus:
          description: The more detailed status of the cloud services network.
          type: string
          enum:
            - Error
            - Available
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: CloudServicesNetworkDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        enableDefaultEgressEndpoints:
          description: The indicator of whether the platform default endpoints are allowed for the egress traffic.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: CloudServicesNetworkEnableDefaultEgressEndpoints
        enabledEgressEndpoints:
          description: The full list of additional and default egress endpoints that are currently enabled.
          type: array
          items:
            $ref: '#/components/schemas/EgressEndpoint'
          x-ms-identifiers: []
          readOnly: true
        hybridAksClustersAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.
          type: array
          items:
            type: string
          readOnly: true
        interfaceName:
          description: The name of the interface that will be present in the virtual machine to represent this network.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state of the cloud services network.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: CloudServicesNetworkProvisioningState
          readOnly: true
        virtualMachinesAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.
          type: array
          items:
            type: string
          readOnly: true
    Cluster:
      title: Cluster represents the on-premises Network Cloud cluster.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster manager associated with the cluster.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity for the resource.
        properties:
          $ref: '#/components/schemas/ClusterProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ClusterAvailableUpgradeVersion:
      type: object
      title: ClusterAvailableUpgradeVersion represents the various cluster upgrade parameters.
      properties:
        controlImpact:
          description: The indicator of whether the control plane will be impacted during the upgrade.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: ControlImpact
          readOnly: true
        expectedDuration:
          description: The expected duration needed for this upgrade.
          type: string
          readOnly: true
        impactDescription:
          description: The impact description including the specific details and release notes.
          type: string
          readOnly: true
        supportExpiryDate:
          description: The last date the version of the platform is supported.
          type: string
          readOnly: true
        targetClusterVersion:
          description: The target version this cluster will be upgraded to.
          type: string
          readOnly: true
        workloadImpact:
          description: The indicator of whether the workload will be impacted during the upgrade.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: WorkloadImpact
          readOnly: true
    ClusterAvailableVersion:
      type: object
      title: ClusterAvailableVersion represents the cluster version that the cluster manager can be asked to create and manage.
      properties:
        supportExpiryDate:
          description: The last date the version of the platform is supported.
          type: string
          readOnly: true
        targetClusterVersion:
          description: The version of the cluster to be deployed.
          type: string
          readOnly: true
    ClusterCapacity:
      type: object
      title: ClusterCapacity represents various details regarding compute capacity.
      properties:
        availableApplianceStorageGB:
          description: The remaining appliance-based storage in GB available for workload use. Measured in gibibytes.
          type: integer
          format: int64
        availableCoreCount:
          description: The remaining number of cores that are available in this cluster for workload use.
          type: integer
          format: int64
        availableHostStorageGB:
          description: The remaining machine or host-based storage in GB available for workload use. Measured in gibibytes.
          type: integer
          format: int64
        availableMemoryGB:
          description: The remaining memory in GB that are available in this cluster for workload use. Measured in gibibytes.
          type: integer
          format: int64
        totalApplianceStorageGB:
          description: The total appliance-based storage in GB supported by this cluster for workload use. Measured in gibibytes.
          type: integer
          format: int64
        totalCoreCount:
          description: The total number of cores that are supported by this cluster for workload use.
          type: integer
          format: int64
        totalHostStorageGB:
          description: The total machine or host-based storage in GB supported by this cluster for workload use. Measured in gibibytes.
          type: integer
          format: int64
        totalMemoryGB:
          description: The total memory supported by this cluster for workload use. Measured in gibibytes.
          type: integer
          format: int64
    ClusterContinueUpdateVersionParameters:
      type: object
      title: ClusterContinueUpdateVersionParameters represents the body of the request to continue the update of a cluster version.
      properties:
        machineGroupTargetingMode:
          description: The mode by which the cluster will target the next grouping of servers to continue the update.
          type: string
          default: AlphaByRack
          enum:
            - AlphaByRack
          x-ms-enum:
            modelAsString: true
            name: ClusterContinueUpdateVersionMachineGroupTargetingMode
    ClusterDeployParameters:
      type: object
      title: ClusterDeployParameters represents the body of the request to deploy cluster.
      properties:
        skipValidationsForMachines:
          description: The names of bare metal machines in the cluster that should be skipped during environment validation.
          type: array
          items:
            type: string
    ClusterList:
      type: object
      title: ClusterList represents a list of clusters.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
    ClusterManager:
      title: ClusterManager represents a control-plane to manage one or more on-premises clusters.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the cluster manager.
        properties:
          $ref: '#/components/schemas/ClusterManagerProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ClusterManagerList:
      type: object
      title: ClusterManagerList represents a list of cluster manager objects.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of cluster managers.
          type: array
          items:
            $ref: '#/components/schemas/ClusterManager'
    ClusterManagerPatchParameters:
      type: object
      title: ClusterManagerPatchParameters represents the body of the request to patch the cluster properties.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity for the resource.
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
    ClusterManagerProperties:
      type: object
      title: ClusterManagerProperties represents the properties of a cluster manager.
      required:
        - fabricControllerId
      properties:
        analyticsWorkspaceId:
          description: The resource ID of the Log Analytics workspace that is used for the logs collection.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.OperationalInsights/workspaces
          x-ms-mutability:
            - read
            - create
        availabilityZones:
          description: Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a future version. The Azure availability zones within the region that will be used to support the cluster manager resource.
          type: array
          items:
            type: string
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
        clusterVersions:
          description: The list of the cluster versions the manager supports. It is used as input in clusterVersion property of a cluster resource.
          type: array
          items:
            $ref: '#/components/schemas/ClusterAvailableVersion'
          x-ms-identifiers:
            - targetClusterVersion
          readOnly: true
        detailedStatus:
          description: The detailed status that provides additional information about the cluster manager.
          type: string
          enum:
            - Error
            - Available
            - Provisioning
            - ProvisioningFailed
            - Updating
            - UpdateFailed
          x-ms-enum:
            modelAsString: true
            name: ClusterManagerDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        fabricControllerId:
          description: The resource ID of the fabric controller that has one to one mapping with the cluster manager.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        managedResourceGroupConfiguration:
          $ref: '#/components/schemas/ManagedResourceGroupConfiguration'
          description: The configuration of the managed resource group associated with the resource.
        managerExtendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location (custom location) that represents the cluster manager's control plane location. This extended location is used when creating cluster and rack manifest resources.
          readOnly: true
        provisioningState:
          description: The provisioning state of the cluster manager.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
            - Updating
          x-ms-enum:
            modelAsString: true
            name: ClusterManagerProvisioningState
          readOnly: true
        vmSize:
          description: Field deprecated, this value will no longer influence the cluster manager allocation process and will be removed in a future version. The size of the Azure virtual machines to use for hosting the cluster manager resource.
          type: string
          x-ms-mutability:
            - read
            - create
    ClusterMetricsConfiguration:
      title: ClusterMetricsConfiguration represents the metrics configuration of an on-premises Network Cloud cluster.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/ClusterMetricsConfigurationProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ClusterMetricsConfigurationList:
      type: object
      title: ClusterMetricsConfigurationList represents a list of metrics configuration of the cluster.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of metrics configurations.
          type: array
          items:
            $ref: '#/components/schemas/ClusterMetricsConfiguration'
    ClusterMetricsConfigurationPatchParameters:
      title: ClusterMetricsConfigurationPatchParameters represents the body of the request to patch the metrics configuration of cluster.
      properties:
        properties:
          $ref: '#/components/schemas/ClusterMetricsConfigurationPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    ClusterMetricsConfigurationPatchProperties:
      type: object
      title: ClusterMetricsConfigurationPatchProperties represents the properties of metrics configuration for the cluster for patching.
      properties:
        collectionInterval:
          description: The interval in minutes by which metrics will be collected.
          type: integer
          format: int64
          maximum: 1440
          minimum: 1
        enabledMetrics:
          description: The list of metric names that have been chosen to be enabled in addition to the core set of enabled metrics.
          type: array
          items:
            type: string
    ClusterMetricsConfigurationProperties:
      type: object
      title: ClusterMetricsConfigurationProperties represents the properties of metrics configuration for the cluster.
      required:
        - collectionInterval
      properties:
        collectionInterval:
          description: The interval in minutes by which metrics will be collected.
          type: integer
          format: int64
          maximum: 1440
          minimum: 1
        detailedStatus:
          description: The more detailed status of the metrics configuration.
          type: string
          enum:
            - Processing
            - Applied
            - Error
          x-ms-enum:
            modelAsString: true
            name: ClusterMetricsConfigurationDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        disabledMetrics:
          description: The list of metrics that are available for the cluster but disabled at the moment.
          type: array
          items:
            type: string
          readOnly: true
        enabledMetrics:
          description: The list of metric names that have been chosen to be enabled in addition to the core set of enabled metrics.
          type: array
          items:
            type: string
        provisioningState:
          description: The provisioning state of the metrics configuration.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: ClusterMetricsConfigurationProvisioningState
          readOnly: true
    ClusterPatchParameters:
      title: ClusterPatchParameters represents the body of the request to patch the cluster properties.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity for the resource.
        properties:
          $ref: '#/components/schemas/ClusterPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    ClusterPatchProperties:
      type: object
      title: ClusterPatchProperties represents the properties of the cluster for patching.
      properties:
        aggregatorOrSingleRackDefinition:
          $ref: '#/components/schemas/RackDefinition'
          description: The rack definition that is intended to reflect only a single rack in a single rack cluster, or an aggregator rack in a multi-rack cluster.
        clusterLocation:
          description: The customer-provided location information to identify where the cluster resides.
          type: string
        clusterServicePrincipal:
          $ref: '#/components/schemas/ServicePrincipalInformation'
          description: The service principal to be used by the cluster during Arc Appliance installation.
        commandOutputSettings:
          $ref: '#/components/schemas/CommandOutputSettings'
          description: The settings for commands run in this cluster, such as bare metal machine run read only commands and data extracts.
        computeDeploymentThreshold:
          $ref: '#/components/schemas/ValidationThreshold'
          description: The validation threshold indicating the allowable failures of compute machines during environment validation and deployment.
        computeRackDefinitions:
          description: |-
            The list of rack definitions for the compute racks in a multi-rack
            cluster, or an empty list in a single-rack cluster.
          type: array
          items:
            $ref: '#/components/schemas/RackDefinition'
          x-ms-identifiers:
            - networkRackId
        runtimeProtectionConfiguration:
          $ref: '#/components/schemas/RuntimeProtectionConfiguration'
          description: The settings for cluster runtime protection.
        secretArchive:
          $ref: '#/components/schemas/ClusterSecretArchive'
          description: The configuration for use of a key vault to store secrets for later retrieval by the operator.
        updateStrategy:
          $ref: '#/components/schemas/ClusterUpdateStrategy'
          description: The strategy for updating the cluster.
    ClusterProperties:
      type: object
      title: ClusterProperties represents the properties of a cluster.
      required:
        - networkFabricId
        - clusterType
        - clusterVersion
        - aggregatorOrSingleRackDefinition
      properties:
        aggregatorOrSingleRackDefinition:
          $ref: '#/components/schemas/RackDefinition'
          description: The rack definition that is intended to reflect only a single rack in a single rack cluster, or an aggregator rack in a multi-rack cluster.
        analyticsWorkspaceId:
          description: The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.OperationalInsights/workspaces
          x-ms-mutability:
            - read
            - create
        availableUpgradeVersions:
          description: The list of cluster runtime version upgrades available for this cluster.
          type: array
          items:
            $ref: '#/components/schemas/ClusterAvailableUpgradeVersion'
          x-ms-identifiers:
            - targetClusterVersion
          readOnly: true
        clusterCapacity:
          $ref: '#/components/schemas/ClusterCapacity'
          description: The capacity supported by this cluster.
          readOnly: true
        clusterConnectionStatus:
          description: The latest heartbeat status between the cluster manager and the cluster.
          type: string
          enum:
            - Connected
            - Disconnected
            - Timeout
            - Undefined
          x-ms-enum:
            modelAsString: true
            name: ClusterConnectionStatus
          readOnly: true
        clusterExtendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location (custom location) that represents the cluster's control plane location. This extended location is used to route the requests of child objects of the cluster that are handled by the platform operator.
          readOnly: true
        clusterLocation:
          description: The customer-provided location information to identify where the cluster resides.
          type: string
          maxLength: 256
        clusterManagerConnectionStatus:
          description: The latest connectivity status between cluster manager and the cluster.
          type: string
          enum:
            - Connected
            - Unreachable
          x-ms-enum:
            modelAsString: true
            name: ClusterManagerConnectionStatus
          readOnly: true
        clusterManagerId:
          description: The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster is created.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/clusterManagers
          readOnly: true
        clusterServicePrincipal:
          $ref: '#/components/schemas/ServicePrincipalInformation'
          description: The service principal to be used by the cluster during Arc Appliance installation.
        clusterType:
          description: The type of rack configuration for the cluster.
          type: string
          enum:
            - SingleRack
            - MultiRack
          x-ms-enum:
            modelAsString: true
            name: ClusterType
          x-ms-mutability:
            - read
            - create
        clusterVersion:
          description: The current runtime version of the cluster.
          type: string
          x-ms-mutability:
            - read
            - create
        commandOutputSettings:
          $ref: '#/components/schemas/CommandOutputSettings'
          description: The settings for commands run in this cluster, such as bare metal machine run read only commands and data extracts.
        computeDeploymentThreshold:
          $ref: '#/components/schemas/ValidationThreshold'
          description: The validation threshold indicating the allowable failures of compute machines during environment validation and deployment.
        computeRackDefinitions:
          description: |-
            The list of rack definitions for the compute racks in a multi-rack
            cluster, or an empty list in a single-rack cluster.
          type: array
          items:
            $ref: '#/components/schemas/RackDefinition'
          x-ms-identifiers:
            - networkRackId
        detailedStatus:
          description: The current detailed status of the cluster.
          type: string
          enum:
            - PendingDeployment
            - Deploying
            - Running
            - Updating
            - UpdatePaused
            - Degraded
            - Deleting
            - Disconnected
            - Failed
          x-ms-enum:
            modelAsString: true
            name: ClusterDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the detailed status.
          type: string
          readOnly: true
        hybridAksExtendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: Field Deprecated. This field will not be populated in an upcoming version. The extended location (custom location) that represents the Hybrid AKS control plane location. This extended location is used when creating provisioned clusters (Hybrid AKS clusters).
          readOnly: true
        managedResourceGroupConfiguration:
          $ref: '#/components/schemas/ManagedResourceGroupConfiguration'
          description: The configuration of the managed resource group associated with the resource.
        manualActionCount:
          description: The count of Manual Action Taken (MAT) events that have not been validated.
          type: integer
          format: int64
          readOnly: true
        networkFabricId:
          description: The resource ID of the Network Fabric associated with the cluster.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: The provisioning state of the cluster.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - Validating
            - Updating
          x-ms-enum:
            modelAsString: true
            name: ClusterProvisioningState
          readOnly: true
        runtimeProtectionConfiguration:
          $ref: '#/components/schemas/RuntimeProtectionConfiguration'
          description: The settings for cluster runtime protection.
        secretArchive:
          $ref: '#/components/schemas/ClusterSecretArchive'
          description: The configuration for use of a key vault to store secrets for later retrieval by the operator.
        supportExpiryDate:
          description: The support end date of the runtime version of the cluster.
          type: string
          readOnly: true
        updateStrategy:
          $ref: '#/components/schemas/ClusterUpdateStrategy'
          description: The strategy for updating the cluster.
        workloadResourceIds:
          description: The list of workload resource IDs that are hosted within this cluster.
          type: array
          items:
            type: string
          readOnly: true
    ClusterScanRuntimeParameters:
      type: object
      title: ClusterScanRuntimeParameters defines the parameters for the cluster scan runtime operation.
      properties:
        scanActivity:
          description: The choice of if the scan operation should run the scan.
          type: string
          default: Scan
          enum:
            - Scan
            - Skip
          x-ms-enum:
            modelAsString: true
            name: ClusterScanRuntimeParametersScanActivity
    ClusterSecretArchive:
      type: object
      title: ClusterSecretArchive configures the key vault to archive the secrets of the cluster for later retrieval.
      required:
        - keyVaultId
      properties:
        keyVaultId:
          description: The resource ID of the key vault to archive the secrets of the cluster.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.KeyVault/vaults
        useKeyVault:
          description: The indicator if the specified key vault should be used to archive the secrets of the cluster.
          type: string
          default: 'False'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: ClusterSecretArchiveEnabled
    ClusterUpdateStrategy:
      type: object
      title: ClusterUpdateStrategy represents the strategy for updating the cluster.
      required:
        - strategyType
        - thresholdType
        - thresholdValue
      properties:
        maxUnavailable:
          description: |-
            The maximum number of worker nodes that can be offline within the increment of update, e.g., rack-by-rack.
            Limited by the maximum number of machines in the increment. Defaults to the whole increment size.
          type: integer
          format: int64
          minimum: 1
        strategyType:
          description: The mode of operation for runtime protection.
          type: string
          enum:
            - Rack
            - PauseAfterRack
          x-ms-enum:
            modelAsString: true
            name: ClusterUpdateStrategyType
        thresholdType:
          description: Selection of how the threshold should be evaluated.
          type: string
          enum:
            - CountSuccess
            - PercentSuccess
          x-ms-enum:
            modelAsString: true
            name: ValidationThresholdType
        thresholdValue:
          description: The numeric threshold value.
          type: integer
          format: int64
          minimum: 0
        waitTimeMinutes:
          description: The time to wait between the increments of update defined by the strategy.
          type: integer
          format: int64
          default: 15
          maximum: 60
          minimum: 0
    ClusterUpdateVersionParameters:
      type: object
      title: ClusterUpdateVersionParameters represents the body of the request to update cluster version.
      required:
        - targetClusterVersion
      properties:
        targetClusterVersion:
          description: The version to be applied to the cluster during update.
          type: string
    CommandOutputSettings:
      type: object
      title: CommandOutputSettings represents the settings for commands run within the cluster such as bare metal machine run read-only commands.
      properties:
        associatedIdentity:
          $ref: '#/components/schemas/IdentitySelector'
          description: The selection of the managed identity to use with this storage account container. The identity type must be either system assigned or user assigned.
        containerUrl:
          description: The URL of the storage account container that is to be used by the specified identities.
          type: string
          format: uri
    Console:
      title: Console represents the console of an on-premises Network Cloud virtual machine.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster manager associated with the cluster this virtual machine is created on.
        properties:
          $ref: '#/components/schemas/ConsoleProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ConsoleList:
      type: object
      title: ConsoleList represents a list of virtual machine consoles.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of virtual machine consoles.
          type: array
          items:
            $ref: '#/components/schemas/Console'
    ConsolePatchParameters:
      title: ConsolePatchParameters represents the body of the request to patch the virtual machine console.
      properties:
        properties:
          $ref: '#/components/schemas/ConsolePatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    ConsolePatchProperties:
      type: object
      title: ConsolePatchProperties represents the properties of the virtual machine console that can be patched.
      properties:
        enabled:
          description: The indicator of whether the console access is enabled.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: ConsoleEnabled
        expiration:
          description: The date and time after which the key will be disallowed access.
          type: string
          format: date-time
        sshPublicKey:
          $ref: '#/components/schemas/SshPublicKey'
          description: The SSH public key that will be provisioned for user access. The user is expected to have the corresponding SSH private key for logging in.
    ConsoleProperties:
      type: object
      title: ConsoleProperties represents the properties of the virtual machine console.
      required:
        - sshPublicKey
        - enabled
      properties:
        detailedStatus:
          description: The more detailed status of the console.
          type: string
          enum:
            - Ready
            - Error
          x-ms-enum:
            modelAsString: true
            name: ConsoleDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        enabled:
          description: The indicator of whether the console access is enabled.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: ConsoleEnabled
        expiration:
          description: The date and time after which the key will be disallowed access.
          type: string
          format: date-time
        privateLinkServiceId:
          description: The resource ID of the private link service that is used to provide virtual machine console access.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/privateLinkServices
          readOnly: true
        provisioningState:
          description: The provisioning state of the virtual machine console.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: ConsoleProvisioningState
          readOnly: true
        sshPublicKey:
          $ref: '#/components/schemas/SshPublicKey'
          description: The SSH public key that will be provisioned for user access. The user is expected to have the corresponding SSH private key for logging in.
        virtualMachineAccessId:
          description: The unique identifier for the virtual machine that is used to access the console.
          type: string
          readOnly: true
    ControlPlaneNodeConfiguration:
      type: object
      title: ControlPlaneNodeConfiguration represents the selection of virtual machines and size of the control plane for a Kubernetes cluster.
      required:
        - count
        - vmSkuName
      properties:
        administratorConfiguration:
          $ref: '#/components/schemas/AdministratorConfiguration'
          description: The administrator credentials to be used for the nodes in the control plane.
          x-ms-mutability:
            - read
            - create
        availabilityZones:
          description: The list of availability zones of the Network Cloud cluster to be used for the provisioning of nodes in the control plane. If not specified, all availability zones will be used.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        count:
          description: The number of virtual machines that use this configuration.
          type: integer
          format: int64
          minimum: 1
        vmSkuName:
          description: The name of the VM SKU supplied during creation.
          type: string
          x-ms-mutability:
            - read
            - create
    ControlPlaneNodePatchConfiguration:
      type: object
      title: ControlPlaneNodePatchConfiguration represents the properties of the control plane that can be patched for this Kubernetes cluster.
      properties:
        administratorConfiguration:
          $ref: '#/components/schemas/AdministratorConfigurationPatch'
          description: The configuration of administrator credentials for the control plane nodes.
        count:
          description: The number of virtual machines that use this configuration.
          type: integer
          format: int64
          minimum: 1
    EgressEndpoint:
      type: object
      title: EgressEndpoint represents the connection from a cloud services network to the specified endpoint for a common purpose.
      required:
        - category
        - endpoints
      properties:
        category:
          description: The descriptive category name of endpoints accessible by the AKS agent node. For example, azure-resource-management, API server, etc. The platform egress endpoints provided by default will use the category 'default'.
          type: string
        endpoints:
          description: The list of endpoint dependencies.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/EndpointDependency'
          x-ms-identifiers: []
    EndpointDependency:
      type: object
      title: EndpointDependency represents the definition of an endpoint, including the domain and details.
      required:
        - domainName
      properties:
        domainName:
          description: The domain name of the dependency.
          type: string
        port:
          description: The port of this endpoint.
          type: integer
          format: int64
          maximum: 65535
          minimum: 1
    ExtendedLocation:
      type: object
      title: ExtendedLocation represents the Azure custom location where the resource will be created.
      required:
        - type
        - name
      properties:
        name:
          description: The resource ID of the extended location on which the resource will be created.
          type: string
          x-ms-mutability:
            - read
            - create
        type:
          description: The extended location type, for example, CustomLocation.
          type: string
          x-ms-mutability:
            - read
            - create
    FeatureStatus:
      type: object
      title: FeatureStatus contains information regarding a Kubernetes cluster feature.
      properties:
        detailedStatus:
          description: The status representing the state of this feature.
          type: string
          enum:
            - Running
            - Failed
            - Unknown
          x-ms-enum:
            modelAsString: true
            name: FeatureDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        name:
          description: The name of the feature.
          type: string
          readOnly: true
        version:
          description: The version of the feature.
          type: string
          readOnly: true
    HardwareInventory:
      type: object
      title: HardwareInventory represents the hardware configuration of this machine as exposed to the customer, including information acquired from the model/sku information and from the ironic inspector.
      properties:
        additionalHostInformation:
          description: Freeform data extracted from the environment about this machine. This information varies depending on the specific hardware and configuration.
          type: string
          readOnly: true
        interfaces:
          description: The list of network interfaces and associated details for the bare metal machine.
          type: array
          items:
            $ref: '#/components/schemas/HardwareInventoryNetworkInterface'
          x-ms-identifiers:
            - name
          readOnly: true
        nics:
          description: Field Deprecated. Will be removed in an upcoming version. The list of network interface cards and associated details for the bare metal machine.
          type: array
          items:
            $ref: '#/components/schemas/Nic'
          x-ms-identifiers:
            - name
          readOnly: true
    HardwareInventoryNetworkInterface:
      type: object
      title: HardwareInventoryNetworkInterface represents the network interface details as part of a hardware inventory.
      properties:
        linkStatus:
          description: The current status of the link.
          type: string
          readOnly: true
        macAddress:
          description: The MAC address associated with this interface.
          type: string
          readOnly: true
        name:
          description: The name of the interface.
          type: string
          readOnly: true
        networkInterfaceId:
          description: The resource ID of the network interface for the port on the switch that this machine's interface is connected to.
          type: string
          readOnly: true
    HardwareValidationStatus:
      type: object
      title: HardwareValidationStatus represents the latest hardware validation details performed for this bare metal machine.
      properties:
        lastValidationTime:
          description: The timestamp of the hardware validation execution.
          type: string
          format: date-time
          readOnly: true
        result:
          description: The outcome of the hardware validation.
          type: string
          enum:
            - Pass
            - Fail
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineHardwareValidationResult
          readOnly: true
    IdentitySelector:
      type: object
      title: IdentitySelector represents the selection of a managed identity for use.
      properties:
        identityType:
          description: The type of managed identity that is being selected.
          type: string
          enum:
            - SystemAssignedIdentity
            - UserAssignedIdentity
          x-ms-enum:
            modelAsString: true
            name: ManagedServiceIdentitySelectorType
        userAssignedIdentityResourceId:
          description: The user assigned managed identity resource ID to use. Mutually exclusive with a system assigned identity type.
          type: string
          format: arm-id
    ImageRepositoryCredentials:
      type: object
      title: ImageRepositoryCredentials represents the credentials used to login to the image repository.
      required:
        - username
        - password
        - registryUrl
      properties:
        password:
          description: The password or token used to access an image in the target repository.
          type: string
          minLength: 1
          x-ms-secret: true
        registryUrl:
          description: The URL of the authentication server used to validate the repository credentials.
          type: string
        username:
          description: The username used to access an image in the target repository.
          type: string
          minLength: 1
    InitialAgentPoolConfiguration:
      type: object
      title: InitialAgentPoolConfiguration specifies the configuration of a pool of virtual machines that are initially defined with a Kubernetes cluster.
      required:
        - count
        - mode
        - vmSkuName
        - name
      properties:
        administratorConfiguration:
          $ref: '#/components/schemas/AdministratorConfiguration'
          description: The administrator credentials to be used for the nodes in this agent pool.
          x-ms-mutability:
            - read
            - create
        agentOptions:
          $ref: '#/components/schemas/AgentOptions'
          description: The configurations that will be applied to each agent in this agent pool.
          x-ms-mutability:
            - read
            - create
        attachedNetworkConfiguration:
          $ref: '#/components/schemas/AttachedNetworkConfiguration'
          description: The configuration of networks being attached to the agent pool for use by the workloads that run on this Kubernetes cluster.
          x-ms-mutability:
            - read
            - create
        availabilityZones:
          description: The list of availability zones of the Network Cloud cluster used for the provisioning of nodes in this agent pool. If not specified, all availability zones will be used.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        count:
          description: The number of virtual machines that use this configuration.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
        labels:
          description: The labels applied to the nodes in this agent pool.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-mutability:
            - read
            - create
        mode:
          description: The selection of how this agent pool is utilized, either as a system pool or a user pool. System pools run the features and critical services for the Kubernetes Cluster, while user pools are dedicated to user workloads. Every Kubernetes cluster must contain at least one system node pool with at least one node.
          type: string
          enum:
            - System
            - User
            - NotApplicable
          x-ms-enum:
            modelAsString: true
            name: AgentPoolMode
          x-ms-mutability:
            - read
            - create
        name:
          description: The name that will be used for the agent pool resource representing this agent pool.
          type: string
          pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
          x-ms-mutability:
            - read
            - create
        taints:
          description: The taints applied to the nodes in this agent pool.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-mutability:
            - read
            - create
        upgradeSettings:
          $ref: '#/components/schemas/AgentPoolUpgradeSettings'
          description: The configuration of the agent pool.
        vmSkuName:
          description: The name of the VM SKU that determines the size of resources allocated for node VMs.
          type: string
          x-ms-mutability:
            - read
            - create
    IpAddressPool:
      type: object
      title: IpAddressPool represents a pool of IP addresses that can be allocated to a service.
      required:
        - addresses
        - name
      properties:
        addresses:
          description: The list of IP address ranges. Each range can be a either a subnet in CIDR format or an explicit start-end range of IP addresses. For a BGP service load balancer configuration, only CIDR format is supported and excludes /32 (IPv4) and /128 (IPv6) prefixes.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        autoAssign:
          description: The indicator to determine if automatic allocation from the pool should occur.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: BfdEnabled
          x-ms-mutability:
            - read
            - create
        name:
          description: The name used to identify this IP address pool for association with a BGP advertisement.
          type: string
          pattern: ^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$
          x-ms-mutability:
            - read
            - create
        onlyUseHostIps:
          description: The indicator to prevent the use of IP addresses ending with .0 and .255 for this pool. Enabling this option will only use IP addresses between .1 and .254 inclusive.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: BfdEnabled
          x-ms-mutability:
            - read
            - create
    KeySetUser:
      type: object
      title: KeySetUser represents the properties of the user in the key set.
      required:
        - azureUserName
        - sshPublicKey
      properties:
        azureUserName:
          description: The user name that will be used for access.
          type: string
        description:
          description: The free-form description for this user.
          type: string
          maxLength: 256
        sshPublicKey:
          $ref: '#/components/schemas/SshPublicKey'
          description: The SSH public key that will be provisioned for user access. The user is expected to have the corresponding SSH private key for logging in.
        userPrincipalName:
          description: The user principal name (email format) used to validate this user's group membership.
          type: string
    KeySetUserStatus:
      type: object
      title: KeySetUserStatus represents the status of the key set user.
      properties:
        azureUserName:
          description: The user name that will be used for access.
          type: string
          readOnly: true
        status:
          description: The indicator of whether the user is currently deployed for access.
          type: string
          enum:
            - Active
            - Invalid
          x-ms-enum:
            modelAsString: true
            name: BareMetalMachineKeySetUserSetupStatus
          readOnly: true
        statusMessage:
          description: The additional information describing the current status of this user, if any available.
          type: string
          maxLength: 256
          readOnly: true
    KubernetesCluster:
      title: KubernetesCluster represents the Kubernetes cluster hosted on Network Cloud.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/KubernetesClusterProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    KubernetesClusterFeature:
      title: KubernetesClusterFeature represents the feature of a Kubernetes cluster.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/KubernetesClusterFeatureProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    KubernetesClusterFeatureList:
      type: object
      title: KubernetesClusterFeatureList represents the list of Kubernetes cluster feature resources.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of Kubernetes cluster features.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesClusterFeature'
    KubernetesClusterFeaturePatchParameters:
      title: KubernetesClusterFeaturePatchParameters represents the body of the request to patch the Kubernetes cluster feature.
      properties:
        properties:
          $ref: '#/components/schemas/KubernetesClusterFeaturePatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    KubernetesClusterFeaturePatchProperties:
      type: object
      title: KubernetesClusterFeaturePatchProperties represents the Kubernetes cluster feature properties for patching.
      properties:
        options:
          description: The configured options for the feature.
          type: array
          items:
            $ref: '#/components/schemas/StringKeyValuePair'
          x-ms-identifiers:
            - key
    KubernetesClusterFeatureProperties:
      type: object
      title: KubernetesClusterFeatureProperties represents the properties of a Kubernetes cluster feature.
      properties:
        availabilityLifecycle:
          description: The lifecycle indicator of the feature.
          type: string
          enum:
            - Preview
            - GenerallyAvailable
          x-ms-enum:
            modelAsString: true
            name: KubernetesClusterFeatureAvailabilityLifecycle
          readOnly: true
        detailedStatus:
          description: The detailed status of the feature.
          type: string
          enum:
            - Error
            - Provisioning
            - Installed
          x-ms-enum:
            modelAsString: true
            name: KubernetesClusterFeatureDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message for the detailed status of the feature.
          type: string
          readOnly: true
        options:
          description: The configured options for the feature.
          type: array
          items:
            $ref: '#/components/schemas/StringKeyValuePair'
          x-ms-identifiers:
            - key
        provisioningState:
          description: The provisioning state of the Kubernetes cluster feature.
          type: string
          enum:
            - Accepted
            - Canceled
            - Deleting
            - Failed
            - Succeeded
            - Updating
          x-ms-enum:
            modelAsString: true
            name: KubernetesClusterFeatureProvisioningState
          readOnly: true
        required:
          description: The indicator of if the feature is required or optional. Optional features may be deleted by the user, while required features are managed with the kubernetes cluster lifecycle.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: KubernetesClusterFeatureRequired
          readOnly: true
        version:
          description: The version of the feature.
          type: string
          readOnly: true
    KubernetesClusterList:
      type: object
      title: KubernetesClusterList represents a list of Kubernetes clusters.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of additional details related to Kubernetes clusters.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesCluster'
    KubernetesClusterNode:
      type: object
      title: KubernetesClusterNode represents the details of a node in a Kubernetes cluster.
      properties:
        agentPoolId:
          description: The resource ID of the agent pool that this node belongs to. This value is not represented on control plane nodes.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/kubernetesClusters/agentPools
          readOnly: true
        availabilityZone:
          description: The availability zone this node is running within.
          type: string
          readOnly: true
        bareMetalMachineId:
          description: The resource ID of the bare metal machine that hosts this node.
          type: string
          format: arm-id
          readOnly: true
        cpuCores:
          description: The number of CPU cores configured for this node, derived from the VM SKU specified.
          type: integer
          format: int64
          readOnly: true
        detailedStatus:
          description: The detailed state of this node.
          type: string
          enum:
            - Available
            - Error
            - Provisioning
            - Running
            - Scheduling
            - Stopped
            - Terminating
            - Unknown
          x-ms-enum:
            modelAsString: true
            name: KubernetesClusterNodeDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        diskSizeGB:
          description: The size of the disk configured for this node. Allocations are measured in gibibytes.
          type: integer
          format: int64
          readOnly: true
        image:
          description: The machine image used to deploy this node.
          type: string
          readOnly: true
        kubernetesVersion:
          description: The currently running version of Kubernetes and bundled features running on this node.
          type: string
          readOnly: true
        labels:
          description: The list of labels on this node that have been assigned to the agent pool containing this node.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-identifiers:
            - key
          readOnly: true
        memorySizeGB:
          description: The amount of memory configured for this node, derived from the vm SKU specified. Allocations are measured in gibibytes.
          type: integer
          format: int64
          readOnly: true
        mode:
          description: The mode of the agent pool containing this node. Not applicable for control plane nodes.
          type: string
          enum:
            - System
            - User
            - NotApplicable
          x-ms-enum:
            modelAsString: true
            name: AgentPoolMode
          readOnly: true
        name:
          description: The name of this node, as realized in the Kubernetes cluster.
          type: string
          readOnly: true
        networkAttachments:
          description: The NetworkAttachments made to this node.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAttachment'
          x-ms-identifiers:
            - networkAttachmentName
          readOnly: true
        powerState:
          description: The power state of this node.
          type: string
          enum:
            - 'On'
            - 'Off'
            - Unknown
          x-ms-enum:
            modelAsString: true
            name: KubernetesNodePowerState
          readOnly: true
        role:
          description: The role of this node in the cluster.
          type: string
          enum:
            - ControlPlane
            - Worker
          x-ms-enum:
            modelAsString: true
            name: KubernetesNodeRole
          readOnly: true
        taints:
          description: The list of taints that have been assigned to the agent pool containing this node.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesLabel'
          x-ms-identifiers:
            - key
          readOnly: true
        vmSkuName:
          description: The VM SKU name that was used to create this cluster node.
          type: string
          readOnly: true
    KubernetesClusterPatchParameters:
      title: KubernetesClusterPatchParameters represents the body of the request to patch the Hybrid AKS cluster.
      properties:
        properties:
          $ref: '#/components/schemas/KubernetesClusterPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    KubernetesClusterPatchProperties:
      type: object
      title: KubernetesClusterPatchProperties represents the properties of the Kubernetes cluster that can be patched.
      properties:
        administratorConfiguration:
          $ref: '#/components/schemas/AdministratorConfigurationPatch'
          description: The configuration of the default administrator credentials.
        controlPlaneNodeConfiguration:
          $ref: '#/components/schemas/ControlPlaneNodePatchConfiguration'
          description: The defining characteristics of the control plane that can be patched for this Kubernetes cluster.
        kubernetesVersion:
          description: The Kubernetes version for this cluster.
          type: string
    KubernetesClusterProperties:
      type: object
      title: KubernetesClusterProperties represents the properties of Kubernetes cluster resource.
      required:
        - initialAgentPoolConfigurations
        - controlPlaneNodeConfiguration
        - kubernetesVersion
        - networkConfiguration
      properties:
        aadConfiguration:
          $ref: '#/components/schemas/AadConfiguration'
          description: The Azure Active Directory Integration properties.
          x-ms-mutability:
            - read
            - create
        administratorConfiguration:
          $ref: '#/components/schemas/AdministratorConfiguration'
          description: The administrative credentials that will be applied to the control plane and agent pool nodes that do not specify their own values.
        attachedNetworkIds:
          description: The full list of network resource IDs that are attached to this cluster, including those attached only to specific agent pools.
          type: array
          items:
            type: string
          readOnly: true
        availableUpgrades:
          description: The list of versions that this Kubernetes cluster can be upgraded to.
          type: array
          items:
            $ref: '#/components/schemas/AvailableUpgrade'
          x-ms-identifiers: []
          readOnly: true
        clusterId:
          description: The resource ID of the Network Cloud cluster.
          type: string
          format: arm-id
          readOnly: true
        connectedClusterId:
          description: The resource ID of the connected cluster set up when this Kubernetes cluster is created.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Kubernetes/connectedClusters
          readOnly: true
        controlPlaneKubernetesVersion:
          description: The current running version of Kubernetes on the control plane.
          type: string
          readOnly: true
        controlPlaneNodeConfiguration:
          $ref: '#/components/schemas/ControlPlaneNodeConfiguration'
          description: The defining characteristics of the control plane for this Kubernetes Cluster.
        detailedStatus:
          description: The current status of the Kubernetes cluster.
          type: string
          enum:
            - Available
            - Error
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: KubernetesClusterDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        featureStatuses:
          description: The current feature settings.
          type: array
          items:
            $ref: '#/components/schemas/FeatureStatus'
          x-ms-identifiers:
            - name
          readOnly: true
        initialAgentPoolConfigurations:
          description: The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes Cluster. After creation, the management of agent pools is done using the agentPools sub-resource.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/InitialAgentPoolConfiguration'
          x-ms-identifiers:
            - name
          x-ms-mutability:
            - read
            - create
        kubernetesVersion:
          description: The Kubernetes version for this cluster.
          type: string
        managedResourceGroupConfiguration:
          $ref: '#/components/schemas/ManagedResourceGroupConfiguration'
          description: The configuration of the managed resource group associated with the resource.
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
          description: The configuration of the Kubernetes cluster networking, including the attachment of networks that span the cluster.
          x-ms-mutability:
            - read
            - create
        nodes:
          description: The details of the nodes in this cluster.
          type: array
          items:
            $ref: '#/components/schemas/KubernetesClusterNode'
          x-ms-identifiers:
            - name
          readOnly: true
        provisioningState:
          description: The provisioning state of the Kubernetes cluster resource.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Accepted
            - InProgress
            - Created
            - Updating
            - Deleting
          x-ms-enum:
            modelAsString: true
            name: KubernetesClusterProvisioningState
          readOnly: true
    KubernetesClusterRestartNodeParameters:
      type: object
      title: KubernetesClusterRestartNodeParameters represents the body of the request to restart the node of a Kubernetes cluster.
      required:
        - nodeName
      properties:
        nodeName:
          description: The name of the node to restart.
          type: string
    KubernetesLabel:
      type: object
      title: KubernetesLabel represents a single entry for a Kubernetes label or taint such as those used on a node or pod.
      required:
        - key
        - value
      properties:
        key:
          description: The name of the label or taint.
          type: string
          x-ms-mutability:
            - read
            - create
        value:
          description: The value of the label or taint.
          type: string
          x-ms-mutability:
            - read
            - create
    L2Network:
      title: L2Network represents a network that utilizes a single isolation domain set up for layer-2 resources.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/L2NetworkProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    L2NetworkAttachmentConfiguration:
      type: object
      title: L2NetworkAttachmentConfiguration represents the configuration of the attachment of a Layer 2 network.
      required:
        - networkId
      properties:
        networkId:
          description: The resource ID of the network that is being configured for attachment.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/l2Networks
          x-ms-mutability:
            - read
            - create
        pluginType:
          description: The indicator of how this network will be utilized by the Kubernetes cluster.
          type: string
          default: SRIOV
          enum:
            - DPDK
            - SRIOV
            - OSDevice
            - MACVLAN
            - IPVLAN
          x-ms-enum:
            modelAsString: true
            name: KubernetesPluginType
          x-ms-mutability:
            - read
            - create
    L2NetworkList:
      type: object
      title: L2NetworkList represents a list of L2 networks.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of L2 networks.
          type: array
          items:
            $ref: '#/components/schemas/L2Network'
    L2NetworkPatchParameters:
      type: object
      title: L2NetworkPatchParameters represents the body of the request to patch the L2 network.
      properties:
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
    L2NetworkProperties:
      type: object
      title: L2NetworkProperties represents properties of the L2 network.
      required:
        - l2IsolationDomainId
      properties:
        associatedResourceIds:
          description: The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
          type: array
          items:
            type: string
          readOnly: true
        clusterId:
          description: The resource ID of the Network Cloud cluster this L2 network is associated with.
          type: string
          format: arm-id
          readOnly: true
        detailedStatus:
          description: The more detailed status of the L2 network.
          type: string
          enum:
            - Error
            - Available
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: L2NetworkDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        hybridAksClustersAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource ID(s) that are associated with this L2 network.
          type: array
          items:
            type: string
          readOnly: true
        hybridAksPluginType:
          description: Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
          type: string
          default: SRIOV
          enum:
            - DPDK
            - SRIOV
            - OSDevice
          x-ms-enum:
            modelAsString: true
            name: HybridAksPluginType
          x-ms-mutability:
            - read
            - create
        interfaceName:
          description: The default interface name for this L2 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
          type: string
          maxLength: 12
          pattern: ^[a-zA-Z0-9@._-]*$
          x-ms-mutability:
            - read
            - create
        l2IsolationDomainId:
          description: The resource ID of the Network Fabric l2IsolationDomain.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: The provisioning state of the L2 network.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: L2NetworkProvisioningState
          readOnly: true
        virtualMachinesAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource ID(s), excluding any Hybrid AKS virtual machines, that are currently using this L2 network.
          type: array
          items:
            type: string
          readOnly: true
    L2ServiceLoadBalancerConfiguration:
      type: object
      title: L2ServiceLoadBalancerConfiguration represents the configuration of a layer 2 service load balancer.
      properties:
        ipAddressPools:
          description: The list of pools of IP addresses that can be allocated to load balancer services.
          type: array
          items:
            $ref: '#/components/schemas/IpAddressPool'
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
    L3Network:
      title: L3Network represents a network that utilizes a single isolation domain set up for layer-3 resources.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/L3NetworkProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    L3NetworkAttachmentConfiguration:
      type: object
      title: L3NetworkAttachmentConfiguration represents the configuration of the attachment of a Layer 3 network.
      required:
        - networkId
      properties:
        ipamEnabled:
          description: The indication of whether this network will or will not perform IP address management and allocate IP addresses when attached.
          type: string
          default: 'False'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: L3NetworkConfigurationIpamEnabled
          x-ms-mutability:
            - read
            - create
        networkId:
          description: The resource ID of the network that is being configured for attachment.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/l3Networks
          x-ms-mutability:
            - read
            - create
        pluginType:
          description: The indicator of how this network will be utilized by the Kubernetes cluster.
          type: string
          default: SRIOV
          enum:
            - DPDK
            - SRIOV
            - OSDevice
            - MACVLAN
            - IPVLAN
          x-ms-enum:
            modelAsString: true
            name: KubernetesPluginType
          x-ms-mutability:
            - read
            - create
    L3NetworkList:
      type: object
      title: L3NetworkList represents a list of L3 networks.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of L3 networks.
          type: array
          items:
            $ref: '#/components/schemas/L3Network'
    L3NetworkPatchParameters:
      type: object
      title: L3NetworkPatchParameters represents the body of the request to patch the cloud services network.
      properties:
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
    L3NetworkProperties:
      type: object
      title: L3NetworkProperties represents properties of the L3 network.
      required:
        - l3IsolationDomainId
        - vlan
      properties:
        associatedResourceIds:
          description: The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
          type: array
          items:
            type: string
          readOnly: true
        clusterId:
          description: The resource ID of the Network Cloud cluster this L3 network is associated with.
          type: string
          format: arm-id
          readOnly: true
        detailedStatus:
          description: The more detailed status of the L3 network.
          type: string
          enum:
            - Error
            - Available
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: L3NetworkDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        hybridAksClustersAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this L3 network.
          type: array
          items:
            type: string
          readOnly: true
        hybridAksIpamEnabled:
          description: Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: HybridAksIpamEnabled
          x-ms-mutability:
            - read
            - create
        hybridAksPluginType:
          description: Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
          type: string
          default: SRIOV
          enum:
            - DPDK
            - SRIOV
            - OSDevice
          x-ms-enum:
            modelAsString: true
            name: HybridAksPluginType
          x-ms-mutability:
            - read
            - create
        interfaceName:
          description: The default interface name for this L3 network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
          type: string
          maxLength: 12
          pattern: ^[a-zA-Z0-9@._-]*$
          x-ms-mutability:
            - read
            - create
        ipAllocationType:
          description: The type of the IP address allocation, defaulted to "DualStack".
          type: string
          default: DualStack
          enum:
            - IPV4
            - IPV6
            - DualStack
          x-ms-enum:
            modelAsString: true
            name: IpAllocationType
        ipv4ConnectedPrefix:
          description: |-
            The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
            is IPV4 or DualStack.
          type: string
          x-ms-mutability:
            - read
            - create
        ipv6ConnectedPrefix:
          description: |-
            The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type
            is IPV6 or DualStack.
          type: string
          x-ms-mutability:
            - read
            - create
        l3IsolationDomainId:
          description: The resource ID of the Network Fabric l3IsolationDomain.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: The provisioning state of the L3 network.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: L3NetworkProvisioningState
          readOnly: true
        virtualMachinesAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this L3 network.
          type: array
          items:
            type: string
          readOnly: true
        vlan:
          description: The VLAN from the l3IsolationDomain that is used for this network.
          type: integer
          format: int64
          x-ms-mutability:
            - read
            - create
    LldpNeighbor:
      type: object
      title: Type Deprecated. Will be removed in an upcoming version. LldpNeighbor represents the details about the device connected to the NIC.
      properties:
        portDescription:
          description: The descriptive information about the port on the connected device.
          type: string
          readOnly: true
        portName:
          description: The system-assigned name of the port on the connected device.
          type: string
          readOnly: true
        systemDescription:
          description: The descriptive information about the connected device.
          type: string
          readOnly: true
        systemName:
          description: The system-assigned name of the connected device.
          type: string
          readOnly: true
    MachineDisk:
      type: object
      title: Disk represents the properties of the disk.
      properties:
        capacityGB:
          description: The maximum amount of storage. Measured in gibibytes.
          type: integer
          format: int64
          readOnly: true
        connection:
          description: The connection type of the rack SKU resource.
          type: string
          enum:
            - PCIE
            - SATA
            - RAID
            - SAS
          x-ms-enum:
            modelAsString: true
            name: MachineSkuDiskConnectionType
          readOnly: true
        type:
          description: The disk type of rack SKU resource.
          type: string
          enum:
            - HDD
            - SSD
          x-ms-enum:
            modelAsString: true
            name: DiskType
          readOnly: true
    MachineSkuProperties:
      type: object
      title: MachineSkuProperties represents the properties of the machine SKU.
      properties:
        bootstrapProtocol:
          description: The type of bootstrap protocol used.
          type: string
          enum:
            - PXE
          x-ms-enum:
            modelAsString: true
            name: BootstrapProtocol
          readOnly: true
        cpuCores:
          description: The count of CPU cores for this machine.
          type: integer
          format: int64
          readOnly: true
        cpuSockets:
          description: The count of CPU sockets for this machine.
          type: integer
          format: int64
          readOnly: true
        disks:
          description: The list of disks.
          type: array
          items:
            $ref: '#/components/schemas/MachineDisk'
          x-ms-identifiers: []
          readOnly: true
        generation:
          description: The generation of the architecture.
          type: string
          readOnly: true
        hardwareVersion:
          description: The hardware version of the machine.
          type: string
          readOnly: true
        memoryCapacityGB:
          description: The maximum amount of memory. Measured in gibibytes.
          type: integer
          format: int64
          readOnly: true
        model:
          description: The model of the machine.
          type: string
          readOnly: true
        networkInterfaces:
          description: The list of network interfaces.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers: []
          readOnly: true
        totalThreads:
          description: The count of SMT and physical core threads for this machine.
          type: integer
          format: int64
          readOnly: true
        vendor:
          description: The make of the machine.
          type: string
          readOnly: true
    MachineSkuSlot:
      title: MachineSkuSlot represents a single SKU and rack slot associated with the machine.
      properties:
        properties:
          $ref: '#/components/schemas/MachineSkuProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        rackSlot:
          description: The position in the rack for the machine.
          type: integer
          format: int64
          readOnly: true
      type: object
    ManagedResourceGroupConfiguration:
      type: object
      title: ManagedResourceGroupConfiguration represents the configuration of the resource group managed by Azure.
      properties:
        location:
          description: The location of the managed resource group. If not specified, the location of the parent resource is chosen.
          type: string
          x-ms-mutability:
            - read
            - create
        name:
          description: The name for the managed resource group. If not specified, the unique name is automatically generated.
          type: string
          maxLength: 75
          x-ms-mutability:
            - read
            - create
    NetworkAttachment:
      type: object
      title: NetworkAttachment represents the single network attachment.
      required:
        - attachedNetworkId
        - ipAllocationMethod
      properties:
        attachedNetworkId:
          description: |-
            The resource ID of the associated network attached to the virtual machine.
            It can be one of cloudServicesNetwork, l3Network, l2Network or trunkedNetwork resources.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        defaultGateway:
          description: |-
            The indicator of whether this is the default gateway.
            Only one of the attached networks (including the CloudServicesNetwork attachment) for a single machine may be specified as True.
          type: string
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: DefaultGateway
        ipAllocationMethod:
          description: |-
            The IP allocation mechanism for the virtual machine.
            Dynamic and Static are only valid for l3Network which may also specify Disabled.
            Otherwise, Disabled is the only permitted value.
          type: string
          enum:
            - Dynamic
            - Static
            - Disabled
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineIPAllocationMethod
          x-ms-mutability:
            - read
            - create
        ipv4Address:
          description: |-
            The IPv4 address of the virtual machine.

            This field is used only if the attached network has IPAllocationType of IPV4 or DualStack.

            If IPAllocationMethod is:
            Static - this field must contain a user specified IPv4 address from within the subnet specified in the attached network.
            Dynamic - this field is read-only, but will be populated with an address from within the subnet specified in the attached network.
            Disabled - this field will be empty.
          type: string
          x-ms-mutability:
            - read
            - create
        ipv6Address:
          description: |-
            The IPv6 address of the virtual machine.

            This field is used only if the attached network has IPAllocationType of IPV6 or DualStack.

            If IPAllocationMethod is:
            Static - this field must contain an IPv6 address range from within the range specified in the attached network.
            Dynamic - this field is read-only, but will be populated with an range from within the subnet specified in the attached network.
            Disabled - this field will be empty.
          type: string
          x-ms-mutability:
            - read
            - create
        macAddress:
          description: The MAC address of the interface for the virtual machine that corresponds to this network attachment.
          type: string
          readOnly: true
        networkAttachmentName:
          description: |-
            The associated network's interface name.
            If specified, the network attachment name has a maximum length of 15 characters and must be unique to this virtual machine.
            If the user doesn’t specify this value, the default interface name of the network resource will be used.
            For a CloudServicesNetwork resource, this name will be ignored.
          type: string
          maxLength: 15
          x-ms-mutability:
            - read
            - create
    NetworkConfiguration:
      type: object
      title: NetworkConfiguration specifies the Kubernetes cluster network related configuration.
      required:
        - cloudServicesNetworkId
        - cniNetworkId
      properties:
        attachedNetworkConfiguration:
          $ref: '#/components/schemas/AttachedNetworkConfiguration'
          description: The configuration of networks being attached to the cluster for use by the workloads that run on this Kubernetes cluster.
          x-ms-mutability:
            - read
            - create
        bgpServiceLoadBalancerConfiguration:
          $ref: '#/components/schemas/BgpServiceLoadBalancerConfiguration'
          description: The configuration of the BGP service load balancer for this Kubernetes cluster. A maximum of one service load balancer may be specified, either Layer 2 or BGP.
          x-ms-mutability:
            - read
            - create
        cloudServicesNetworkId:
          description: The resource ID of the associated Cloud Services network.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        cniNetworkId:
          description: The resource ID of the Layer 3 network that is used for creation of the Container Networking Interface network.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        dnsServiceIp:
          description: The IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in service CIDR.
          type: string
          x-ms-mutability:
            - read
            - create
        l2ServiceLoadBalancerConfiguration:
          $ref: '#/components/schemas/L2ServiceLoadBalancerConfiguration'
          description: The configuration of the Layer 2 service load balancer for this Kubernetes cluster. A maximum of one service load balancer may be specified, either Layer 2 or BGP.
          x-ms-mutability:
            - read
            - create
        podCidrs:
          description: The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        serviceCidrs:
          description: The CIDR notation IP ranges from which to assign service IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
          type: array
          items:
            type: string
          x-ms-mutability:
            - read
            - create
    NetworkInterface:
      type: object
      title: NetworkInterface represents properties of the network interface.
      properties:
        address:
          description: The partial address of Peripheral Component Interconnect (PCI).
          type: string
          readOnly: true
        deviceConnectionType:
          description: The connection type of the device.
          type: string
          enum:
            - PCI
          x-ms-enum:
            modelAsString: true
            name: DeviceConnectionType
          readOnly: true
        model:
          description: The model name of the device.
          type: string
          readOnly: true
        physicalSlot:
          description: The physical slot for this device.
          type: integer
          format: int64
          readOnly: true
        portCount:
          description: The number of ports on the device.
          type: integer
          format: int64
          readOnly: true
        portSpeed:
          description: The maximum amount of data in gigabits that the line card transmits through a port at any given second.
          type: integer
          format: int64
          readOnly: true
        vendor:
          description: The vendor name of the device.
          type: string
          readOnly: true
    Nic:
      type: object
      title: Type Deprecated. Will be removed in an upcoming version. Nic represents the network interface card details.
      properties:
        lldpNeighbor:
          $ref: '#/components/schemas/LldpNeighbor'
          description: The information about the device connected to this NIC.
          readOnly: true
        macAddress:
          description: The MAC address associated with this NIC.
          type: string
          readOnly: true
        name:
          description: The name of the NIC/interface.
          type: string
          readOnly: true
    NodePoolAdministratorConfigurationPatch:
      type: object
      title: NodePoolAdministratorConfigurationPatch represents the patching capabilities for the administrator configuration.
      properties:
        sshPublicKeys:
          description: SshPublicKey represents the public key used to authenticate with a resource through SSH.
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers:
            - keyData
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    OperationStatusResultProperties:
      type: object
      title: OperationStatusResultProperties represents additional properties of the operation status result.
      properties:
        exitCode:
          description: For actions that run commands or scripts, the exit code of the script execution.
          type: string
          readOnly: true
        outputHead:
          description: For actions that run commands or scripts, the leading bytes of the output of the script execution.
          type: string
          readOnly: true
        resultRef:
          description: For actions that run commands or scripts, a reference to the location of the result.
          type: string
          format: uri
          readOnly: true
        resultUrl:
          description: For actions that run commands or scripts, the URL where the full output of the script output can be retrieved.
          type: string
          format: uri
          readOnly: true
    OsDisk:
      type: object
      title: OsDisk represents configuration of the boot disk.
      required:
        - diskSizeGB
      properties:
        createOption:
          description: The strategy for creating the OS disk.
          type: string
          default: Ephemeral
          enum:
            - Ephemeral
          x-ms-enum:
            modelAsString: true
            name: OsDiskCreateOption
        deleteOption:
          description: The strategy for deleting the OS disk.
          type: string
          default: Delete
          enum:
            - Delete
          x-ms-enum:
            modelAsString: true
            name: OsDiskDeleteOption
        diskSizeGB:
          description: The size of the disk. Required if the createOption is Ephemeral. Allocations are measured in gibibytes.
          type: integer
          format: int64
    Rack:
      title: Rack represents the hardware of the rack and is dependent upon the cluster for lifecycle.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/RackProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    RackDefinition:
      type: object
      title: RackDefinition represents details regarding the rack.
      required:
        - networkRackId
        - rackSkuId
        - rackSerialNumber
      properties:
        availabilityZone:
          description: The zone name used for this rack when created. Availability zones are used for workload placement.
          type: string
          pattern: ^[a-zA-Z0-9]{1,10}$
        bareMetalMachineConfigurationData:
          description: The unordered list of bare metal machine configuration.
          type: array
          items:
            $ref: '#/components/schemas/BareMetalMachineConfigurationData'
          x-ms-identifiers: []
        networkRackId:
          description: The resource ID of the network rack that matches this rack definition.
          type: string
          format: arm-id
        rackLocation:
          description: The free-form description of the rack's location.
          type: string
          maxLength: 256
        rackSerialNumber:
          description: The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
          type: string
          maxLength: 64
          minLength: 1
        rackSkuId:
          description: The resource ID of the sku for the rack being added.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/rackSkus
        storageApplianceConfigurationData:
          description: The list of storage appliance configuration data for this rack.
          type: array
          items:
            $ref: '#/components/schemas/StorageApplianceConfigurationData'
          x-ms-identifiers: []
    RackList:
      type: object
      title: RackList represents a list of racks.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of racks.
          type: array
          items:
            $ref: '#/components/schemas/Rack'
    RackPatchParameters:
      title: RackPatchParameters represents the body of the request to patch the rack properties.
      properties:
        properties:
          $ref: '#/components/schemas/RacksPatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    RackProperties:
      type: object
      title: RackProperties represents the properties of the rack.
      required:
        - rackSkuId
        - rackSerialNumber
        - availabilityZone
        - rackLocation
      properties:
        availabilityZone:
          description: The value that will be used for machines in this rack to represent the availability zones that can be referenced by Hybrid AKS Clusters for node arrangement.
          type: string
          pattern: ^[a-zA-Z0-9]{1,10}$
        clusterId:
          description: The resource ID of the cluster the rack is created for. This value is set when the rack is created by the cluster.
          type: string
          format: arm-id
          readOnly: true
        detailedStatus:
          description: The more detailed status of the rack.
          type: string
          enum:
            - Error
            - Available
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: RackDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state of the rack resource.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: RackProvisioningState
          readOnly: true
        rackLocation:
          description: The free-form description of the rack location. (e.g. “DTN Datacenter, Floor 3, Isle 9, Rack 2B”)
          type: string
          maxLength: 256
        rackSerialNumber:
          description: The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.
          type: string
          maxLength: 64
          minLength: 1
        rackSkuId:
          description: The SKU for the rack.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/rackSkus
    RackSku:
      title: RackSku represents the SKU information of the rack.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/RackSkuProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    RackSkuList:
      type: object
      title: RackSkuList represents a list of rack SKUs.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of Rack SKUs.
          type: array
          items:
            $ref: '#/components/schemas/RackSku'
    RackSkuProperties:
      type: object
      title: RackSkuProperties represents the properties of compute-related hardware for a rack. This supports both aggregator and compute racks.
      properties:
        computeMachines:
          description: The list of machine SKUs and associated rack slot for the compute-dedicated machines in this rack model.
          type: array
          items:
            $ref: '#/components/schemas/MachineSkuSlot'
          x-ms-identifiers: []
          readOnly: true
        controllerMachines:
          description: The list of machine SKUs and associated rack slot for the control-plane dedicated machines in this rack model.
          type: array
          items:
            $ref: '#/components/schemas/MachineSkuSlot'
          x-ms-identifiers: []
          readOnly: true
        description:
          description: The free-form text describing the rack.
          type: string
          readOnly: true
        maxClusterSlots:
          description: The maximum number of compute racks supported by an aggregator rack. 0 if this is a compute rack or a rack for a single rack cluster(rackType="Single").
          type: integer
          format: int64
          readOnly: true
        provisioningState:
          description: The provisioning state of the rack SKU resource.
          type: string
          enum:
            - Canceled
            - Failed
            - Succeeded
          x-ms-enum:
            modelAsString: true
            name: RackSkuProvisioningState
          readOnly: true
        rackType:
          description: The type of the rack.
          type: string
          enum:
            - Aggregator
            - Compute
            - Single
          x-ms-enum:
            modelAsString: true
            name: RackSkuType
          readOnly: true
        storageAppliances:
          description: The list of appliance SKUs and associated rack slot for the storage appliance(s) in this rack model.
          type: array
          items:
            $ref: '#/components/schemas/StorageApplianceSkuSlot'
          x-ms-identifiers: []
          readOnly: true
        supportedRackSkuIds:
          description: The list of supported SKUs if the rack is an aggregator.
          type: array
          items:
            type: string
          readOnly: true
    RacksPatchProperties:
      type: object
      title: RacksPatchProperties represents the properties of the rack during patching.
      properties:
        rackLocation:
          description: The free-form description of the rack location. (e.g. “DTN Datacenter, Floor 3, Isle 9, Rack 2B”)
          type: string
          maxLength: 256
        rackSerialNumber:
          description: The globally unique identifier for the rack.
          type: string
          maxLength: 64
          minLength: 1
    RuntimeProtectionConfiguration:
      type: object
      title: RuntimeProtectionConfiguration represents the runtime protection configuration for the cluster.
      properties:
        enforcementLevel:
          description: The mode of operation for runtime protection.
          type: string
          default: Disabled
          enum:
            - Audit
            - Disabled
            - OnDemand
            - Passive
            - RealTime
          x-ms-enum:
            modelAsString: true
            name: RuntimeProtectionEnforcementLevel
    RuntimeProtectionStatus:
      type: object
      title: RuntimeProtectionStatus represents the runtime protection status of the bare metal machine.
      properties:
        definitionsLastUpdated:
          description: The timestamp when the malware definitions were last updated.
          type: string
          format: date-time
          readOnly: true
        definitionsVersion:
          description: The version of the malware definitions.
          type: string
          readOnly: true
        scanCompletedTime:
          description: The timestamp of the most recently completed scan, or empty if there has never been a scan.
          type: string
          format: date-time
          readOnly: true
        scanScheduledTime:
          description: The timestamp of the most recently scheduled scan, or empty if no scan has been scheduled.
          type: string
          format: date-time
          readOnly: true
        scanStartedTime:
          description: The timestamp of the most recently started scan, or empty if there has never been a scan.
          type: string
          format: date-time
          readOnly: true
    SecretArchiveReference:
      type: object
      title: SecretArchiveReference represents the reference to a secret in a key vault.
      properties:
        keyVaultId:
          description: The resource ID of the key vault containing the secret.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.KeyVault/vaults
          readOnly: true
        secretName:
          description: The name of the secret in the key vault.
          type: string
          readOnly: true
        secretVersion:
          description: The version of the secret in the key vault.
          type: string
          readOnly: true
    SecretRotationStatus:
      type: object
      title: SecretRotationStatus represents the status of a secret rotation.
      properties:
        expirePeriodDays:
          description: The maximum number of days the secret may be used before it must be changed.
          type: integer
          format: int64
          readOnly: true
        lastRotationTime:
          description: The date and time when the secret was last changed.
          type: string
          format: date-time
          readOnly: true
        rotationPeriodDays:
          description: The number of days a secret exists before rotations will be attempted.
          type: integer
          format: int64
          readOnly: true
        secretArchiveReference:
          $ref: '#/components/schemas/SecretArchiveReference'
          description: The reference to the secret in a key vault.
          readOnly: true
        secretType:
          description: The type name used to identify the purpose of the secret.
          type: string
          readOnly: true
    ServiceLoadBalancerBgpPeer:
      type: object
      title: ServiceLoadBalancerBgpPeer represents the configuration of the BGP service load balancer for the Kubernetes cluster.
      required:
        - name
        - peerAddress
        - peerAsn
      properties:
        bfdEnabled:
          description: The indicator of BFD enablement for this BgpPeer.
          type: string
          default: 'False'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: BfdEnabled
          x-ms-mutability:
            - read
            - create
        bgpMultiHop:
          description: The indicator to enable multi-hop peering support.
          type: string
          default: 'False'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: BgpMultiHop
          x-ms-mutability:
            - read
            - create
        holdTime:
          description: Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The requested BGP hold time value. This field uses ISO 8601 duration format, for example P1H.
          type: string
          x-ms-mutability:
            - read
            - create
        keepAliveTime:
          description: Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The requested BGP keepalive time value. This field uses ISO 8601 duration format, for example P1H.
          type: string
          x-ms-mutability:
            - read
            - create
        myAsn:
          description: The autonomous system number used for the local end of the BGP session.
          type: integer
          format: int64
          maximum: 4294967295
          minimum: 0
          x-ms-mutability:
            - read
            - create
        name:
          description: The name used to identify this BGP peer for association with a BGP advertisement.
          type: string
          pattern: ^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$
          x-ms-mutability:
            - read
            - create
        password:
          description: The authentication password for routers enforcing TCP MD5 authenticated sessions.
          type: string
          maxLength: 80
          pattern: ^[a-zA-Z0-9]{0,80}$
          x-ms-mutability:
            - create
          x-ms-secret: true
        peerAddress:
          description: The IPv4 or IPv6 address used to connect this BGP session.
          type: string
          x-ms-mutability:
            - read
            - create
        peerAsn:
          description: The autonomous system number expected from the remote end of the BGP session.
          type: integer
          format: int64
          maximum: 4294967295
          minimum: 0
          x-ms-mutability:
            - read
            - create
        peerPort:
          description: The port used to connect this BGP session.
          type: integer
          format: int64
          default: 179
          x-ms-mutability:
            - read
            - create
    ServicePrincipalInformation:
      type: object
      title: ServicePrincipalInformation represents the details of the service principal to be used by the cluster during Arc Appliance installation.
      required:
        - tenantId
        - principalId
        - applicationId
        - password
      properties:
        applicationId:
          description: The application ID, also known as client ID, of the service principal.
          type: string
        password:
          description: The password of the service principal.
          type: string
          x-ms-secret: true
        principalId:
          description: The principal ID, also known as the object ID, of the service principal.
          type: string
        tenantId:
          description: The tenant ID, also known as the directory ID, of the tenant in which the service principal is created.
          type: string
    SshPublicKey:
      type: object
      title: SshPublicKey represents the public key used to authenticate with a resource through SSH.
      required:
        - keyData
      properties:
        keyData:
          description: The SSH public key data.
          type: string
          minLength: 1
    StorageAppliance:
      title: StorageAppliance represents on-premises Network Cloud storage appliance.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/StorageApplianceProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StorageApplianceConfigurationData:
      type: object
      title: StorageApplianceConfigurationData represents configuration for the storage application.
      required:
        - rackSlot
        - adminCredentials
        - serialNumber
      properties:
        adminCredentials:
          $ref: '#/components/schemas/AdministrativeCredentials'
          description: The credentials of the administrative interface on this storage appliance.
        rackSlot:
          description: The slot that storage appliance is in the rack based on the BOM configuration.
          type: integer
          format: int64
          maximum: 256
          minimum: 1
        serialNumber:
          description: The serial number of the appliance.
          type: string
        storageApplianceName:
          description: The user-provided name for the storage appliance that will be created from this specification.
          type: string
          pattern: ^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$
    StorageApplianceEnableRemoteVendorManagementParameters:
      type: object
      title: StorageApplianceEnableRemoteVendorManagementParameters represents the body of the request to enable remote vendor management of a storage appliance.
      properties:
        supportEndpoints:
          description: Field Deprecated. This field is not used and will be rejected if provided. The list of IPv4 subnets (in CIDR format), IPv6 subnets (in CIDR format), or hostnames that the storage appliance needs accessible in order to turn on the remote vendor management.
          type: array
          items:
            type: string
    StorageApplianceList:
      type: object
      title: StorageApplianceList represents a list of storage appliances.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of storage appliances.
          type: array
          items:
            $ref: '#/components/schemas/StorageAppliance'
    StorageAppliancePatchParameters:
      title: StorageAppliancePatchParameters represents the body of the request to patch storage appliance properties.
      properties:
        properties:
          $ref: '#/components/schemas/StorageAppliancePatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    StorageAppliancePatchProperties:
      type: object
      title: StorageAppliancePatchProperties represents the properties of the storage appliance that can be patched.
      properties:
        serialNumber:
          description: The serial number for the storage appliance.
          type: string
    StorageApplianceProperties:
      type: object
      title: StorageApplianceProperties represents the properties of the storage appliance.
      required:
        - rackId
        - storageApplianceSkuId
        - rackSlot
        - serialNumber
        - administratorCredentials
      properties:
        administratorCredentials:
          $ref: '#/components/schemas/AdministrativeCredentials'
          description: The credentials of the administrative interface on this storage appliance.
          x-ms-mutability:
            - read
            - create
        capacity:
          description: The total capacity of the storage appliance.
          type: integer
          format: int64
          readOnly: true
        capacityUsed:
          description: The amount of storage consumed.
          type: integer
          format: int64
          readOnly: true
        clusterId:
          description: The resource ID of the cluster this storage appliance is associated with.
          type: string
          format: arm-id
          readOnly: true
        detailedStatus:
          description: The detailed status of the storage appliance.
          type: string
          enum:
            - Error
            - Available
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: StorageApplianceDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        managementIpv4Address:
          description: The endpoint for the management interface of the storage appliance.
          type: string
          readOnly: true
        manufacturer:
          description: The manufacturer of the storage appliance.
          type: string
          readOnly: true
        model:
          description: The model of the storage appliance.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state of the storage appliance.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: StorageApplianceProvisioningState
          readOnly: true
        rackId:
          description: The resource ID of the rack where this storage appliance resides.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        rackSlot:
          description: The slot the storage appliance is in the rack based on the BOM configuration.
          type: integer
          format: int64
          maximum: 256
          minimum: 1
          x-ms-mutability:
            - read
            - create
        remoteVendorManagementFeature:
          description: The indicator of whether the storage appliance supports remote vendor management.
          type: string
          enum:
            - Supported
            - Unsupported
          x-ms-enum:
            modelAsString: true
            name: RemoteVendorManagementFeature
          readOnly: true
        remoteVendorManagementStatus:
          description: The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported feature.
          type: string
          enum:
            - Enabled
            - Disabled
            - Unsupported
          x-ms-enum:
            modelAsString: true
            name: RemoteVendorManagementStatus
          readOnly: true
        secretRotationStatus:
          description: The list of statuses that represent secret rotation activity.
          type: array
          items:
            $ref: '#/components/schemas/SecretRotationStatus'
          x-ms-identifiers:
            - secretType
          readOnly: true
        serialNumber:
          description: The serial number for the storage appliance.
          type: string
        storageApplianceSkuId:
          description: The SKU for the storage appliance.
          type: string
          x-ms-mutability:
            - read
            - create
        version:
          description: The version of the storage appliance.
          type: string
          readOnly: true
    StorageApplianceSkuProperties:
      type: object
      title: StorageApplianceSkuProperties represents the properties of the storage appliance SKU.
      properties:
        capacityGB:
          description: The maximum capacity of the storage appliance. Measured in gibibytes.
          type: integer
          format: int64
          readOnly: true
        model:
          description: The model of the storage appliance.
          type: string
          readOnly: true
    StorageApplianceSkuSlot:
      title: StorageApplianceSkuSlot represents the single SKU and rack slot associated with the storage appliance.
      properties:
        properties:
          $ref: '#/components/schemas/StorageApplianceSkuProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        rackSlot:
          description: The position in the rack for the storage appliance.
          type: integer
          format: int64
          readOnly: true
      type: object
    StorageProfile:
      type: object
      title: StorageProfile represents information about a disk.
      required:
        - osDisk
      properties:
        osDisk:
          $ref: '#/components/schemas/OsDisk'
          description: The disk to use with this virtual machine.
        volumeAttachments:
          description: The resource IDs of volumes that are requested to be attached to the virtual machine.
          type: array
          items:
            type: string
    StringKeyValuePair:
      type: object
      title: StringKeyValuePair represents a single entry in a mapping of keys to values.
      required:
        - key
        - value
      properties:
        key:
          description: The key to the mapped value.
          type: string
          x-ms-mutability:
            - read
            - create
        value:
          description: The value of the mapping key.
          type: string
          x-ms-mutability:
            - read
            - create
    TagsParameter:
      type: object
      title: TagsParameter represents the resource tags.
      properties:
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
    TrunkedNetwork:
      title: TrunkedNetwork represents a network that utilizes multiple isolation domains and specified VLANs to create a trunked network.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/TrunkedNetworkProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    TrunkedNetworkAttachmentConfiguration:
      type: object
      title: TrunkedNetworkAttachmentConfiguration represents the configuration of the attachment of a trunked network.
      required:
        - networkId
      properties:
        networkId:
          description: The resource ID of the network that is being configured for attachment.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetworkCloud/trunkedNetworks
          x-ms-mutability:
            - read
            - create
        pluginType:
          description: The indicator of how this network will be utilized by the Kubernetes cluster.
          type: string
          default: SRIOV
          enum:
            - DPDK
            - SRIOV
            - OSDevice
            - MACVLAN
            - IPVLAN
          x-ms-enum:
            modelAsString: true
            name: KubernetesPluginType
          x-ms-mutability:
            - read
            - create
    TrunkedNetworkList:
      type: object
      title: TrunkedNetworkList represents a list of trunked networks.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of trunked networks.
          type: array
          items:
            $ref: '#/components/schemas/TrunkedNetwork'
    TrunkedNetworkPatchParameters:
      type: object
      title: TrunkedNetworkPatchParameters represents the body of the request to patch the Trunked network.
      properties:
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
    TrunkedNetworkProperties:
      type: object
      title: TrunkedNetworkProperties represents properties of the trunked network.
      required:
        - isolationDomainIds
        - vlans
      properties:
        associatedResourceIds:
          description: The list of resource IDs for the other Microsoft.NetworkCloud resources that have attached this network.
          type: array
          items:
            type: string
          readOnly: true
        clusterId:
          description: The resource ID of the Network Cloud cluster this trunked network is associated with.
          type: string
          format: arm-id
          readOnly: true
        detailedStatus:
          description: The more detailed status of the trunked network.
          type: string
          enum:
            - Error
            - Available
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: TrunkedNetworkDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        hybridAksClustersAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of Hybrid AKS cluster resource IDs that are associated with this trunked network.
          type: array
          items:
            type: string
          readOnly: true
        hybridAksPluginType:
          description: Field Deprecated. The field was previously optional, now it will have no defined behavior and will be ignored. The network plugin type for Hybrid AKS.
          type: string
          default: SRIOV
          enum:
            - DPDK
            - SRIOV
            - OSDevice
          x-ms-enum:
            modelAsString: true
            name: HybridAksPluginType
          x-ms-mutability:
            - read
            - create
        interfaceName:
          description: The default interface name for this trunked network in the virtual machine. This name can be overridden by the name supplied in the network attachment configuration of that virtual machine.
          type: string
          maxLength: 12
          pattern: ^[a-zA-Z0-9@._-]*$
          x-ms-mutability:
            - read
            - create
        isolationDomainIds:
          description: The list of resource IDs representing the Network Fabric isolation domains. It can be any combination of l2IsolationDomain and l3IsolationDomain resources.
          type: array
          minItems: 1
          items:
            type: string
          x-ms-mutability:
            - read
            - create
        provisioningState:
          description: The provisioning state of the trunked network.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: TrunkedNetworkProvisioningState
          readOnly: true
        virtualMachinesAssociatedIds:
          description: Field Deprecated. These fields will be empty/omitted. The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this trunked network.
          type: array
          items:
            type: string
          readOnly: true
        vlans:
          description: The list of vlans that are selected from the isolation domains for trunking.
          type: array
          minItems: 1
          items:
            type: integer
            format: int64
          x-ms-mutability:
            - read
            - create
    ValidationThreshold:
      type: object
      title: ValidationThreshold indicates allowed machine and node hardware and deployment failures.
      required:
        - type
        - grouping
        - value
      properties:
        grouping:
          description: Selection of how the type evaluation is applied to the cluster calculation.
          type: string
          enum:
            - PerCluster
            - PerRack
          x-ms-enum:
            modelAsString: true
            name: ValidationThresholdGrouping
        type:
          description: Selection of how the threshold should be evaluated.
          type: string
          enum:
            - CountSuccess
            - PercentSuccess
          x-ms-enum:
            modelAsString: true
            name: ValidationThresholdType
        value:
          description: The numeric threshold value.
          type: integer
          format: int64
          minimum: 0
    VirtualMachine:
      title: VirtualMachine represents the on-premises Network Cloud virtual machine.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/VirtualMachineProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    VirtualMachineList:
      type: object
      title: VirtualMachineList represents a list of virtual machines.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of virtual machines.
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachine'
    VirtualMachinePatchParameters:
      title: VirtualMachinePatchParameters represents the body of the request to patch the virtual machine.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualMachinePatchProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
      type: object
    VirtualMachinePatchProperties:
      type: object
      title: VirtualMachinePatchProperties represents the properties of the virtual machine that can be patched.
      properties:
        vmImageRepositoryCredentials:
          $ref: '#/components/schemas/ImageRepositoryCredentials'
          description: The credentials used to login to the image repository that has access to the specified image.
    VirtualMachinePlacementHint:
      type: object
      title: VirtualMachinePlacementHint represents a single scheduling hint of the virtual machine.
      required:
        - hintType
        - schedulingExecution
        - resourceId
        - scope
      properties:
        hintType:
          description: The specification of whether this hint supports affinity or anti-affinity with the referenced resources.
          type: string
          enum:
            - Affinity
            - AntiAffinity
          x-ms-enum:
            modelAsString: true
            name: VirtualMachinePlacementHintType
          x-ms-mutability:
            - read
            - create
        resourceId:
          description: The resource ID of the target object that the placement hints will be checked against, e.g., the bare metal node to host the virtual machine.
          type: string
          format: arm-id
          x-ms-mutability:
            - read
            - create
        schedulingExecution:
          description: The indicator of whether the hint is a hard or soft requirement during scheduling.
          type: string
          enum:
            - Hard
            - Soft
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineSchedulingExecution
          x-ms-mutability:
            - read
            - create
        scope:
          description: The scope for the virtual machine affinity or anti-affinity placement hint. It should always be "Machine" in the case of node affinity.
          type: string
          enum:
            - Rack
            - Machine
          x-ms-enum:
            modelAsString: true
            name: VirtualMachinePlacementHintPodAffinityScope
          x-ms-mutability:
            - read
            - create
    VirtualMachinePowerOffParameters:
      type: object
      title: VirtualMachinePowerOffParameters represents the body of the request to power off virtual machine.
      properties:
        skipShutdown:
          description: The indicator of whether to skip the graceful OS shutdown and power off the virtual machine immediately.
          type: string
          default: 'False'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: SkipShutdown
    VirtualMachineProperties:
      type: object
      title: VirtualMachineProperties represents the properties of the virtual machine.
      required:
        - vmImage
        - cpuCores
        - memorySizeGB
        - storageProfile
        - cloudServicesNetworkAttachment
        - adminUsername
      properties:
        adminUsername:
          description: The name of the administrator to which the ssh public keys will be added into the authorized keys.
          type: string
          maxLength: 32
          minLength: 1
          pattern: ^[a-z_][a-z0-9_]{0,31}$
          x-ms-mutability:
            - read
            - create
        availabilityZone:
          description: The cluster availability zone containing this virtual machine.
          type: string
          readOnly: true
        bareMetalMachineId:
          description: The resource ID of the bare metal machine that hosts the virtual machine.
          type: string
          format: arm-id
          readOnly: true
        bootMethod:
          description: Selects the boot method for the virtual machine.
          type: string
          default: UEFI
          enum:
            - UEFI
            - BIOS
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineBootMethod
          x-ms-mutability:
            - read
            - create
        cloudServicesNetworkAttachment:
          $ref: '#/components/schemas/NetworkAttachment'
          description: The cloud service network that provides platform-level services for the virtual machine.
          x-ms-mutability:
            - read
            - create
        clusterId:
          description: The resource ID of the cluster the virtual machine is created for.
          type: string
          format: arm-id
          readOnly: true
        cpuCores:
          description: The number of CPU cores in the virtual machine.
          type: integer
          format: int64
          minimum: 2
          x-ms-mutability:
            - read
            - create
        detailedStatus:
          description: The more detailed status of the virtual machine.
          type: string
          enum:
            - Available
            - Error
            - Provisioning
            - Running
            - Scheduling
            - Stopped
            - Terminating
            - Unknown
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        isolateEmulatorThread:
          description: Field Deprecated, the value will be ignored if provided. The indicator of whether one of the specified CPU cores is isolated to run the emulator thread for this virtual machine.
          type: string
          default: 'True'
          enum:
            - 'True'
            - 'False'
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineIsolateEmulatorThread
          x-ms-mutability:
            - read
            - create
        memorySizeGB:
          description: The memory size of the virtual machine. Allocations are measured in gibibytes.
          type: integer
          format: int64
          minimum: 1
          x-ms-mutability:
            - read
            - create
        networkAttachments:
          description: The list of network attachments to the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/NetworkAttachment'
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
        networkData:
          description: The Base64 encoded cloud-init network data.
          type: string
          x-ms-mutability:
            - read
            - create
        placementHints:
          description: The scheduling hints for the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachinePlacementHint'
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
        powerState:
          description: The power state of the virtual machine.
          type: string
          enum:
            - 'On'
            - 'Off'
            - Unknown
          x-ms-enum:
            modelAsString: true
            name: VirtualMachinePowerState
          readOnly: true
        provisioningState:
          description: The provisioning state of the virtual machine.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineProvisioningState
          readOnly: true
        sshPublicKeys:
          description: The list of ssh public keys. Each key will be added to the virtual machine using the cloud-init ssh_authorized_keys mechanism for the adminUsername.
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers: []
          x-ms-mutability:
            - read
            - create
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: The storage profile that specifies size and other parameters about the disks related to the virtual machine.
          x-ms-mutability:
            - read
            - create
        userData:
          description: The Base64 encoded cloud-init user data.
          type: string
          x-ms-mutability:
            - read
            - create
        virtioInterface:
          description: Field Deprecated, use virtualizationModel instead. The type of the virtio interface.
          type: string
          default: Modern
          enum:
            - Modern
            - Transitional
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineVirtioInterfaceType
          x-ms-mutability:
            - read
            - create
        vmDeviceModel:
          description: The type of the device model to use.
          type: string
          default: T2
          enum:
            - T1
            - T2
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineDeviceModelType
          x-ms-mutability:
            - read
            - create
        vmImage:
          description: The virtual machine image that is currently provisioned to the OS disk, using the full url and tag notation used to pull the image.
          type: string
          x-ms-mutability:
            - read
            - create
        vmImageRepositoryCredentials:
          $ref: '#/components/schemas/ImageRepositoryCredentials'
          description: The credentials used to login to the image repository that has access to the specified image.
        volumes:
          description: The resource IDs of volumes that are attached to the virtual machine.
          type: array
          items:
            type: string
          readOnly: true
    Volume:
      title: Volume represents storage made available for use by resources running on the cluster.
      required:
        - extendedLocation
        - properties
      x-ms-azure-resource: true
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the cluster associated with the resource.
        properties:
          $ref: '#/components/schemas/VolumeProperties'
          description: The list of the resource properties.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    VolumeList:
      type: object
      title: VolumeList represents a list of volumes.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of volumes.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
    VolumePatchParameters:
      type: object
      title: VolumePatchParameters represents the body of the request to patch the volume resource.
      properties:
        tags:
          description: The Azure resource tags that will replace the existing ones.
          type: object
          additionalProperties:
            type: string
    VolumeProperties:
      type: object
      title: VolumeProperties represents properties of the volume resource.
      required:
        - sizeMiB
      properties:
        attachedTo:
          description: The list of resource IDs that attach the volume. It may include virtual machines and Hybrid AKS clusters.
          type: array
          items:
            type: string
          readOnly: true
        detailedStatus:
          description: The more detailed status of the volume.
          type: string
          enum:
            - Error
            - Active
            - Provisioning
          x-ms-enum:
            modelAsString: true
            name: VolumeDetailedStatus
          readOnly: true
        detailedStatusMessage:
          description: The descriptive message about the current detailed status.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning state of the volume.
          type: string
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Provisioning
            - Accepted
          x-ms-enum:
            modelAsString: true
            name: VolumeProvisioningState
          readOnly: true
        serialNumber:
          description: The unique identifier of the volume.
          type: string
          readOnly: true
        sizeMiB:
          description: The size of the allocation for this volume in Mebibytes.
          type: integer
          format: int64
          minimum: 1
          x-ms-mutability:
            - read
            - create
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.nexus.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.NetworkCloud~1operations?api-version=2024-06-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    bare_metal_machines:
      id: azure.nexus.bare_metal_machines
      name: bare_metal_machines
      title: bare_metal_machines
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines?api-version=2024-06-01-preview/get'
            operationId: BareMetalMachines_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachineList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines?api-version=2024-06-01-preview/get'
            operationId: BareMetalMachines_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachineList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}?api-version=2024-06-01-preview/get'
            operationId: BareMetalMachines_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachine
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}?api-version=2024-06-01-preview/put'
            operationId: BareMetalMachines_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachine
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}?api-version=2024-06-01-preview/delete'
            operationId: BareMetalMachines_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}?api-version=2024-06-01-preview/patch'
            operationId: BareMetalMachines_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachine
        cordon:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1cordon?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_Cordon
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1powerOff?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_PowerOff
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1reimage?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_Reimage
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1replace?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_Replace
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1restart?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        run_command:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1runCommand?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_RunCommand
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        run_data_extracts:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1runDataExtracts?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_RunDataExtracts
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        run_read_commands:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1runReadCommands?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_RunReadCommands
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1start?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_Start
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        uncordon:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1bareMetalMachines~1{bareMetalMachineName}~1uncordon?api-version=2024-06-01-preview/post'
            operationId: BareMetalMachines_Uncordon
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/bare_metal_machines/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/bare_metal_machines/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machines/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machines/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machines/methods/delete'
    cloud_services_networks:
      id: azure.nexus.cloud_services_networks
      name: cloud_services_networks
      title: cloud_services_networks
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1cloudServicesNetworks?api-version=2024-06-01-preview/get'
            operationId: CloudServicesNetworks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudServicesNetworkList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1cloudServicesNetworks?api-version=2024-06-01-preview/get'
            operationId: CloudServicesNetworks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudServicesNetworkList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1cloudServicesNetworks~1{cloudServicesNetworkName}?api-version=2024-06-01-preview/get'
            operationId: CloudServicesNetworks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudServicesNetwork
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1cloudServicesNetworks~1{cloudServicesNetworkName}?api-version=2024-06-01-preview/put'
            operationId: CloudServicesNetworks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudServicesNetwork
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1cloudServicesNetworks~1{cloudServicesNetworkName}?api-version=2024-06-01-preview/delete'
            operationId: CloudServicesNetworks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1cloudServicesNetworks~1{cloudServicesNetworkName}?api-version=2024-06-01-preview/patch'
            operationId: CloudServicesNetworks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CloudServicesNetwork
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_services_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_services_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/cloud_services_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/cloud_services_networks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/cloud_services_networks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_services_networks/methods/delete'
    cluster_managers:
      id: azure.nexus.cluster_managers
      name: cluster_managers
      title: cluster_managers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1clusterManagers?api-version=2024-06-01-preview/get'
            operationId: ClusterManagers_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterManagerList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusterManagers?api-version=2024-06-01-preview/get'
            operationId: ClusterManagers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterManagerList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusterManagers~1{clusterManagerName}?api-version=2024-06-01-preview/get'
            operationId: ClusterManagers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterManager
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusterManagers~1{clusterManagerName}?api-version=2024-06-01-preview/put'
            operationId: ClusterManagers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterManager
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusterManagers~1{clusterManagerName}?api-version=2024-06-01-preview/delete'
            operationId: ClusterManagers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusterManagers~1{clusterManagerName}?api-version=2024-06-01-preview/patch'
            operationId: ClusterManagers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterManager
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cluster_managers/methods/get'
          - $ref: '#/components/x-stackQL-resources/cluster_managers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/cluster_managers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/cluster_managers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/cluster_managers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cluster_managers/methods/delete'
    clusters:
      id: azure.nexus.clusters
      name: clusters
      title: clusters
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1clusters?api-version=2024-06-01-preview/get'
            operationId: Clusters_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters?api-version=2024-06-01-preview/get'
            operationId: Clusters_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}?api-version=2024-06-01-preview/get'
            operationId: Clusters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}?api-version=2024-06-01-preview/put'
            operationId: Clusters_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}?api-version=2024-06-01-preview/delete'
            operationId: Clusters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}?api-version=2024-06-01-preview/patch'
            operationId: Clusters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        continue_update_version:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1continueUpdateVersion?api-version=2024-06-01-preview/post'
            operationId: Clusters_ContinueUpdateVersion
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        deploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1deploy?api-version=2024-06-01-preview/post'
            operationId: Clusters_Deploy
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        scan_runtime:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1scanRuntime?api-version=2024-06-01-preview/post'
            operationId: Clusters_ScanRuntime
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    kubernetes_clusters:
      id: azure.nexus.kubernetes_clusters
      name: kubernetes_clusters
      title: kubernetes_clusters
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters?api-version=2024-06-01-preview/get'
            operationId: KubernetesClusters_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesClusterList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters?api-version=2024-06-01-preview/get'
            operationId: KubernetesClusters_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesClusterList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}?api-version=2024-06-01-preview/get'
            operationId: KubernetesClusters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesCluster
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}?api-version=2024-06-01-preview/put'
            operationId: KubernetesClusters_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesCluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}?api-version=2024-06-01-preview/delete'
            operationId: KubernetesClusters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}?api-version=2024-06-01-preview/patch'
            operationId: KubernetesClusters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesCluster
        restart_node:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1restartNode?api-version=2024-06-01-preview/post'
            operationId: KubernetesClusters_RestartNode
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/kubernetes_clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/kubernetes_clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/kubernetes_clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/kubernetes_clusters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/kubernetes_clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/kubernetes_clusters/methods/delete'
    l2_networks:
      id: azure.nexus.l2_networks
      name: l2_networks
      title: l2_networks
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1l2Networks?api-version=2024-06-01-preview/get'
            operationId: L2Networks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2NetworkList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l2Networks?api-version=2024-06-01-preview/get'
            operationId: L2Networks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2NetworkList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l2Networks~1{l2NetworkName}?api-version=2024-06-01-preview/get'
            operationId: L2Networks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2Network
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l2Networks~1{l2NetworkName}?api-version=2024-06-01-preview/put'
            operationId: L2Networks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2Network
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l2Networks~1{l2NetworkName}?api-version=2024-06-01-preview/delete'
            operationId: L2Networks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l2Networks~1{l2NetworkName}?api-version=2024-06-01-preview/patch'
            operationId: L2Networks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L2Network
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/l2_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/l2_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/l2_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/l2_networks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/l2_networks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/l2_networks/methods/delete'
    l3_networks:
      id: azure.nexus.l3_networks
      name: l3_networks
      title: l3_networks
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1l3Networks?api-version=2024-06-01-preview/get'
            operationId: L3Networks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3NetworkList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l3Networks?api-version=2024-06-01-preview/get'
            operationId: L3Networks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3NetworkList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l3Networks~1{l3NetworkName}?api-version=2024-06-01-preview/get'
            operationId: L3Networks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3Network
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l3Networks~1{l3NetworkName}?api-version=2024-06-01-preview/put'
            operationId: L3Networks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3Network
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l3Networks~1{l3NetworkName}?api-version=2024-06-01-preview/delete'
            operationId: L3Networks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1l3Networks~1{l3NetworkName}?api-version=2024-06-01-preview/patch'
            operationId: L3Networks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: L3Network
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/l3_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/l3_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/l3_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/l3_networks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/l3_networks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/l3_networks/methods/delete'
    rack_skus:
      id: azure.nexus.rack_skus
      name: rack_skus
      title: rack_skus
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1rackSkus?api-version=2024-06-01-preview/get'
            operationId: RackSkus_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RackSkuList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1rackSkus~1{rackSkuName}?api-version=2024-06-01-preview/get'
            operationId: RackSkus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RackSku
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rack_skus/methods/get'
          - $ref: '#/components/x-stackQL-resources/rack_skus/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    racks:
      id: azure.nexus.racks
      name: racks
      title: racks
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1racks?api-version=2024-06-01-preview/get'
            operationId: Racks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RackList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1racks?api-version=2024-06-01-preview/get'
            operationId: Racks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RackList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1racks~1{rackName}?api-version=2024-06-01-preview/get'
            operationId: Racks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Rack
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1racks~1{rackName}?api-version=2024-06-01-preview/put'
            operationId: Racks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Rack
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1racks~1{rackName}?api-version=2024-06-01-preview/delete'
            operationId: Racks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1racks~1{rackName}?api-version=2024-06-01-preview/patch'
            operationId: Racks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Rack
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/racks/methods/get'
          - $ref: '#/components/x-stackQL-resources/racks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/racks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/racks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/racks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/racks/methods/delete'
    storage_appliances:
      id: azure.nexus.storage_appliances
      name: storage_appliances
      title: storage_appliances
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1storageAppliances?api-version=2024-06-01-preview/get'
            operationId: StorageAppliances_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageApplianceList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1storageAppliances?api-version=2024-06-01-preview/get'
            operationId: StorageAppliances_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageApplianceList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1storageAppliances~1{storageApplianceName}?api-version=2024-06-01-preview/get'
            operationId: StorageAppliances_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAppliance
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1storageAppliances~1{storageApplianceName}?api-version=2024-06-01-preview/put'
            operationId: StorageAppliances_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAppliance
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1storageAppliances~1{storageApplianceName}?api-version=2024-06-01-preview/delete'
            operationId: StorageAppliances_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1storageAppliances~1{storageApplianceName}?api-version=2024-06-01-preview/patch'
            operationId: StorageAppliances_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageAppliance
        disable_remote_vendor_management:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1storageAppliances~1{storageApplianceName}~1disableRemoteVendorManagement?api-version=2024-06-01-preview/post'
            operationId: StorageAppliances_DisableRemoteVendorManagement
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        enable_remote_vendor_management:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1storageAppliances~1{storageApplianceName}~1enableRemoteVendorManagement?api-version=2024-06-01-preview/post'
            operationId: StorageAppliances_EnableRemoteVendorManagement
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_appliances/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_appliances/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/storage_appliances/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_appliances/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/storage_appliances/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_appliances/methods/delete'
    trunked_networks:
      id: azure.nexus.trunked_networks
      name: trunked_networks
      title: trunked_networks
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1trunkedNetworks?api-version=2024-06-01-preview/get'
            operationId: TrunkedNetworks_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrunkedNetworkList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1trunkedNetworks?api-version=2024-06-01-preview/get'
            operationId: TrunkedNetworks_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrunkedNetworkList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1trunkedNetworks~1{trunkedNetworkName}?api-version=2024-06-01-preview/get'
            operationId: TrunkedNetworks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrunkedNetwork
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1trunkedNetworks~1{trunkedNetworkName}?api-version=2024-06-01-preview/put'
            operationId: TrunkedNetworks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrunkedNetwork
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1trunkedNetworks~1{trunkedNetworkName}?api-version=2024-06-01-preview/delete'
            operationId: TrunkedNetworks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1trunkedNetworks~1{trunkedNetworkName}?api-version=2024-06-01-preview/patch'
            operationId: TrunkedNetworks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrunkedNetwork
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/trunked_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/trunked_networks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/trunked_networks/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/trunked_networks/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/trunked_networks/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/trunked_networks/methods/delete'
    virtual_machines:
      id: azure.nexus.virtual_machines
      name: virtual_machines
      title: virtual_machines
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1virtualMachines?api-version=2024-06-01-preview/get'
            operationId: VirtualMachines_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachineList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines?api-version=2024-06-01-preview/get'
            operationId: VirtualMachines_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachineList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}?api-version=2024-06-01-preview/get'
            operationId: VirtualMachines_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachine
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}?api-version=2024-06-01-preview/put'
            operationId: VirtualMachines_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachine
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}?api-version=2024-06-01-preview/delete'
            operationId: VirtualMachines_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}?api-version=2024-06-01-preview/patch'
            operationId: VirtualMachines_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachine
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1powerOff?api-version=2024-06-01-preview/post'
            operationId: VirtualMachines_PowerOff
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1reimage?api-version=2024-06-01-preview/post'
            operationId: VirtualMachines_Reimage
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1restart?api-version=2024-06-01-preview/post'
            operationId: VirtualMachines_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1start?api-version=2024-06-01-preview/post'
            operationId: VirtualMachines_Start
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/delete'
    volumes:
      id: azure.nexus.volumes
      name: volumes
      title: volumes
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetworkCloud~1volumes?api-version=2024-06-01-preview/get'
            operationId: Volumes_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1volumes?api-version=2024-06-01-preview/get'
            operationId: Volumes_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VolumeList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1volumes~1{volumeName}?api-version=2024-06-01-preview/get'
            operationId: Volumes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1volumes~1{volumeName}?api-version=2024-06-01-preview/put'
            operationId: Volumes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1volumes~1{volumeName}?api-version=2024-06-01-preview/delete'
            operationId: Volumes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1volumes~1{volumeName}?api-version=2024-06-01-preview/patch'
            operationId: Volumes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Volume
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/delete'
    bare_metal_machine_key_sets:
      id: azure.nexus.bare_metal_machine_key_sets
      name: bare_metal_machine_key_sets
      title: bare_metal_machine_key_sets
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bareMetalMachineKeySets?api-version=2024-06-01-preview/get'
            operationId: BareMetalMachineKeySets_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachineKeySetList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bareMetalMachineKeySets~1{bareMetalMachineKeySetName}?api-version=2024-06-01-preview/get'
            operationId: BareMetalMachineKeySets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachineKeySet
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bareMetalMachineKeySets~1{bareMetalMachineKeySetName}?api-version=2024-06-01-preview/put'
            operationId: BareMetalMachineKeySets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachineKeySet
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bareMetalMachineKeySets~1{bareMetalMachineKeySetName}?api-version=2024-06-01-preview/delete'
            operationId: BareMetalMachineKeySets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bareMetalMachineKeySets~1{bareMetalMachineKeySetName}?api-version=2024-06-01-preview/patch'
            operationId: BareMetalMachineKeySets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BareMetalMachineKeySet
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machine_key_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/bare_metal_machine_key_sets/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machine_key_sets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machine_key_sets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bare_metal_machine_key_sets/methods/delete'
    bmc_key_sets:
      id: azure.nexus.bmc_key_sets
      name: bmc_key_sets
      title: bmc_key_sets
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bmcKeySets?api-version=2024-06-01-preview/get'
            operationId: BmcKeySets_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BmcKeySetList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bmcKeySets~1{bmcKeySetName}?api-version=2024-06-01-preview/get'
            operationId: BmcKeySets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BmcKeySet
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bmcKeySets~1{bmcKeySetName}?api-version=2024-06-01-preview/put'
            operationId: BmcKeySets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BmcKeySet
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bmcKeySets~1{bmcKeySetName}?api-version=2024-06-01-preview/delete'
            operationId: BmcKeySets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1bmcKeySets~1{bmcKeySetName}?api-version=2024-06-01-preview/patch'
            operationId: BmcKeySets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BmcKeySet
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bmc_key_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/bmc_key_sets/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/bmc_key_sets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/bmc_key_sets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bmc_key_sets/methods/delete'
    metrics_configurations:
      id: azure.nexus.metrics_configurations
      name: metrics_configurations
      title: metrics_configurations
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1metricsConfigurations?api-version=2024-06-01-preview/get'
            operationId: MetricsConfigurations_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterMetricsConfigurationList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1metricsConfigurations~1{metricsConfigurationName}?api-version=2024-06-01-preview/get'
            operationId: MetricsConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterMetricsConfiguration
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1metricsConfigurations~1{metricsConfigurationName}?api-version=2024-06-01-preview/put'
            operationId: MetricsConfigurations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterMetricsConfiguration
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1metricsConfigurations~1{metricsConfigurationName}?api-version=2024-06-01-preview/delete'
            operationId: MetricsConfigurations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1metricsConfigurations~1{metricsConfigurationName}?api-version=2024-06-01-preview/patch'
            operationId: MetricsConfigurations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterMetricsConfiguration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metrics_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/metrics_configurations/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/metrics_configurations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/metrics_configurations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/metrics_configurations/methods/delete'
    clusters_versions:
      id: azure.nexus.clusters_versions
      name: clusters_versions
      title: clusters_versions
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1clusters~1{clusterName}~1updateVersion?api-version=2024-06-01-preview/post'
            operationId: ClustersVersion_Update
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    agent_pools:
      id: azure.nexus.agent_pools
      name: agent_pools
      title: agent_pools
      methods:
        list_by_kubernetes_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1agentPools?api-version=2024-06-01-preview/get'
            operationId: AgentPools_ListByKubernetesCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AgentPoolList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1agentPools~1{agentPoolName}?api-version=2024-06-01-preview/get'
            operationId: AgentPools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AgentPool
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1agentPools~1{agentPoolName}?api-version=2024-06-01-preview/put'
            operationId: AgentPools_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AgentPool
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1agentPools~1{agentPoolName}?api-version=2024-06-01-preview/delete'
            operationId: AgentPools_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1agentPools~1{agentPoolName}?api-version=2024-06-01-preview/patch'
            operationId: AgentPools_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AgentPool
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/list_by_kubernetes_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/agent_pools/methods/delete'
    kubernetes_cluster_features:
      id: azure.nexus.kubernetes_cluster_features
      name: kubernetes_cluster_features
      title: kubernetes_cluster_features
      methods:
        list_by_kubernetes_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1features?api-version=2024-06-01-preview/get'
            operationId: KubernetesClusterFeatures_ListByKubernetesCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesClusterFeatureList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1features~1{featureName}?api-version=2024-06-01-preview/get'
            operationId: KubernetesClusterFeatures_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesClusterFeature
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1features~1{featureName}?api-version=2024-06-01-preview/put'
            operationId: KubernetesClusterFeatures_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesClusterFeature
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1features~1{featureName}?api-version=2024-06-01-preview/delete'
            operationId: KubernetesClusterFeatures_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1kubernetesClusters~1{kubernetesClusterName}~1features~1{featureName}?api-version=2024-06-01-preview/patch'
            operationId: KubernetesClusterFeatures_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: KubernetesClusterFeature
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/kubernetes_cluster_features/methods/get'
          - $ref: '#/components/x-stackQL-resources/kubernetes_cluster_features/methods/list_by_kubernetes_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/kubernetes_cluster_features/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/kubernetes_cluster_features/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/kubernetes_cluster_features/methods/delete'
    consoles:
      id: azure.nexus.consoles
      name: consoles
      title: consoles
      methods:
        list_by_virtual_machine:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1consoles?api-version=2024-06-01-preview/get'
            operationId: Consoles_ListByVirtualMachine
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConsoleList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1consoles~1{consoleName}?api-version=2024-06-01-preview/get'
            operationId: Consoles_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Console
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1consoles~1{consoleName}?api-version=2024-06-01-preview/put'
            operationId: Consoles_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Console
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1consoles~1{consoleName}?api-version=2024-06-01-preview/delete'
            operationId: Consoles_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetworkCloud~1virtualMachines~1{virtualMachineName}~1consoles~1{consoleName}?api-version=2024-06-01-preview/patch'
            operationId: Consoles_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Console
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/get'
          - $ref: '#/components/x-stackQL-resources/consoles/methods/list_by_virtual_machine'
        insert:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/consoles/methods/delete'
    vw_bare_metal_machines:
      id: azure.nexus.vw_bare_metal_machines
      name: vw_bare_metal_machines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.associatedResourceIds') as "associated_resource_ids",
              JSON_EXTRACT(properties, '$.bmcConnectionString') as "bmc_connection_string",
              JSON_EXTRACT(properties, '$.bmcCredentials') as "bmc_credentials",
              JSON_EXTRACT(properties, '$.bmcMacAddress') as "bmc_mac_address",
              JSON_EXTRACT(properties, '$.bootMacAddress') as "boot_mac_address",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.cordonStatus') as "cordon_status",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.hardwareInventory') as "hardware_inventory",
              JSON_EXTRACT(properties, '$.hardwareValidationStatus') as "hardware_validation_status",
              JSON_EXTRACT(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
              JSON_EXTRACT(properties, '$.kubernetesNodeName') as "kubernetes_node_name",
              JSON_EXTRACT(properties, '$.kubernetesVersion') as "kubernetes_version",
              JSON_EXTRACT(properties, '$.machineClusterVersion') as "machine_cluster_version",
              JSON_EXTRACT(properties, '$.machineDetails') as "machine_details",
              JSON_EXTRACT(properties, '$.machineName') as "machine_name",
              JSON_EXTRACT(properties, '$.machineRoles') as "machine_roles",
              JSON_EXTRACT(properties, '$.machineSkuId') as "machine_sku_id",
              JSON_EXTRACT(properties, '$.oamIpv4Address') as "oam_ipv4_address",
              JSON_EXTRACT(properties, '$.oamIpv6Address') as "oam_ipv6_address",
              JSON_EXTRACT(properties, '$.osImage') as "os_image",
              JSON_EXTRACT(properties, '$.powerState') as "power_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.rackId') as "rack_id",
              JSON_EXTRACT(properties, '$.rackSlot') as "rack_slot",
              JSON_EXTRACT(properties, '$.readyState') as "ready_state",
              JSON_EXTRACT(properties, '$.runtimeProtectionStatus') as "runtime_protection_status",
              JSON_EXTRACT(properties, '$.secretRotationStatus') as "secret_rotation_status",
              JSON_EXTRACT(properties, '$.serialNumber') as "serial_number",
              JSON_EXTRACT(properties, '$.serviceTag') as "service_tag",
              JSON_EXTRACT(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
              subscriptionId,
              resourceGroupName,
              bareMetalMachineName
              FROM azure.nexus.bare_metal_machines
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.associatedResourceIds') as "associated_resource_ids",
                json_extract_path_text(properties, '$.bmcConnectionString') as "bmc_connection_string",
                json_extract_path_text(properties, '$.bmcCredentials') as "bmc_credentials",
                json_extract_path_text(properties, '$.bmcMacAddress') as "bmc_mac_address",
                json_extract_path_text(properties, '$.bootMacAddress') as "boot_mac_address",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.cordonStatus') as "cordon_status",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.hardwareInventory') as "hardware_inventory",
                json_extract_path_text(properties, '$.hardwareValidationStatus') as "hardware_validation_status",
                json_extract_path_text(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
                json_extract_path_text(properties, '$.kubernetesNodeName') as "kubernetes_node_name",
                json_extract_path_text(properties, '$.kubernetesVersion') as "kubernetes_version",
                json_extract_path_text(properties, '$.machineClusterVersion') as "machine_cluster_version",
                json_extract_path_text(properties, '$.machineDetails') as "machine_details",
                json_extract_path_text(properties, '$.machineName') as "machine_name",
                json_extract_path_text(properties, '$.machineRoles') as "machine_roles",
                json_extract_path_text(properties, '$.machineSkuId') as "machine_sku_id",
                json_extract_path_text(properties, '$.oamIpv4Address') as "oam_ipv4_address",
                json_extract_path_text(properties, '$.oamIpv6Address') as "oam_ipv6_address",
                json_extract_path_text(properties, '$.osImage') as "os_image",
                json_extract_path_text(properties, '$.powerState') as "power_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.rackId') as "rack_id",
                json_extract_path_text(properties, '$.rackSlot') as "rack_slot",
                json_extract_path_text(properties, '$.readyState') as "ready_state",
                json_extract_path_text(properties, '$.runtimeProtectionStatus') as "runtime_protection_status",
                json_extract_path_text(properties, '$.secretRotationStatus') as "secret_rotation_status",
                json_extract_path_text(properties, '$.serialNumber') as "serial_number",
                json_extract_path_text(properties, '$.serviceTag') as "service_tag",
                json_extract_path_text(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
                subscriptionId,
                resourceGroupName,
                bareMetalMachineName
                FROM azure.nexus.bare_metal_machines
                WHERE subscriptionId = 'replace-me';
    vw_cloud_services_networks:
      id: azure.nexus.vw_cloud_services_networks
      name: vw_cloud_services_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.additionalEgressEndpoints') as "additional_egress_endpoints",
              JSON_EXTRACT(properties, '$.associatedResourceIds') as "associated_resource_ids",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.enableDefaultEgressEndpoints') as "enable_default_egress_endpoints",
              JSON_EXTRACT(properties, '$.enabledEgressEndpoints') as "enabled_egress_endpoints",
              JSON_EXTRACT(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
              JSON_EXTRACT(properties, '$.interfaceName') as "interface_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
              subscriptionId,
              resourceGroupName,
              cloudServicesNetworkName
              FROM azure.nexus.cloud_services_networks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.additionalEgressEndpoints') as "additional_egress_endpoints",
                json_extract_path_text(properties, '$.associatedResourceIds') as "associated_resource_ids",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.enableDefaultEgressEndpoints') as "enable_default_egress_endpoints",
                json_extract_path_text(properties, '$.enabledEgressEndpoints') as "enabled_egress_endpoints",
                json_extract_path_text(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
                json_extract_path_text(properties, '$.interfaceName') as "interface_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
                subscriptionId,
                resourceGroupName,
                cloudServicesNetworkName
                FROM azure.nexus.cloud_services_networks
                WHERE subscriptionId = 'replace-me';
    vw_cluster_managers:
      id: azure.nexus.vw_cluster_managers
      name: vw_cluster_managers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.analyticsWorkspaceId') as "analytics_workspace_id",
              JSON_EXTRACT(properties, '$.availabilityZones') as "availability_zones",
              JSON_EXTRACT(properties, '$.clusterVersions') as "cluster_versions",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.fabricControllerId') as "fabric_controller_id",
              JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
              JSON_EXTRACT(properties, '$.managerExtendedLocation') as "manager_extended_location",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.vmSize') as "vm_size",
              subscriptionId,
              resourceGroupName,
              clusterManagerName
              FROM azure.nexus.cluster_managers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.analyticsWorkspaceId') as "analytics_workspace_id",
                json_extract_path_text(properties, '$.availabilityZones') as "availability_zones",
                json_extract_path_text(properties, '$.clusterVersions') as "cluster_versions",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.fabricControllerId') as "fabric_controller_id",
                json_extract_path_text(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
                json_extract_path_text(properties, '$.managerExtendedLocation') as "manager_extended_location",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.vmSize') as "vm_size",
                subscriptionId,
                resourceGroupName,
                clusterManagerName
                FROM azure.nexus.cluster_managers
                WHERE subscriptionId = 'replace-me';
    vw_clusters:
      id: azure.nexus.vw_clusters
      name: vw_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.aggregatorOrSingleRackDefinition') as "aggregator_or_single_rack_definition",
              JSON_EXTRACT(properties, '$.analyticsWorkspaceId') as "analytics_workspace_id",
              JSON_EXTRACT(properties, '$.availableUpgradeVersions') as "available_upgrade_versions",
              JSON_EXTRACT(properties, '$.clusterCapacity') as "cluster_capacity",
              JSON_EXTRACT(properties, '$.clusterConnectionStatus') as "cluster_connection_status",
              JSON_EXTRACT(properties, '$.clusterExtendedLocation') as "cluster_extended_location",
              JSON_EXTRACT(properties, '$.clusterLocation') as "cluster_location",
              JSON_EXTRACT(properties, '$.clusterManagerConnectionStatus') as "cluster_manager_connection_status",
              JSON_EXTRACT(properties, '$.clusterManagerId') as "cluster_manager_id",
              JSON_EXTRACT(properties, '$.clusterServicePrincipal') as "cluster_service_principal",
              JSON_EXTRACT(properties, '$.clusterType') as "cluster_type",
              JSON_EXTRACT(properties, '$.clusterVersion') as "cluster_version",
              JSON_EXTRACT(properties, '$.commandOutputSettings') as "command_output_settings",
              JSON_EXTRACT(properties, '$.computeDeploymentThreshold') as "compute_deployment_threshold",
              JSON_EXTRACT(properties, '$.computeRackDefinitions') as "compute_rack_definitions",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.hybridAksExtendedLocation') as "hybrid_aks_extended_location",
              JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
              JSON_EXTRACT(properties, '$.manualActionCount') as "manual_action_count",
              JSON_EXTRACT(properties, '$.networkFabricId') as "network_fabric_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.runtimeProtectionConfiguration') as "runtime_protection_configuration",
              JSON_EXTRACT(properties, '$.secretArchive') as "secret_archive",
              JSON_EXTRACT(properties, '$.supportExpiryDate') as "support_expiry_date",
              JSON_EXTRACT(properties, '$.updateStrategy') as "update_strategy",
              JSON_EXTRACT(properties, '$.workloadResourceIds') as "workload_resource_ids",
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure.nexus.clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.aggregatorOrSingleRackDefinition') as "aggregator_or_single_rack_definition",
                json_extract_path_text(properties, '$.analyticsWorkspaceId') as "analytics_workspace_id",
                json_extract_path_text(properties, '$.availableUpgradeVersions') as "available_upgrade_versions",
                json_extract_path_text(properties, '$.clusterCapacity') as "cluster_capacity",
                json_extract_path_text(properties, '$.clusterConnectionStatus') as "cluster_connection_status",
                json_extract_path_text(properties, '$.clusterExtendedLocation') as "cluster_extended_location",
                json_extract_path_text(properties, '$.clusterLocation') as "cluster_location",
                json_extract_path_text(properties, '$.clusterManagerConnectionStatus') as "cluster_manager_connection_status",
                json_extract_path_text(properties, '$.clusterManagerId') as "cluster_manager_id",
                json_extract_path_text(properties, '$.clusterServicePrincipal') as "cluster_service_principal",
                json_extract_path_text(properties, '$.clusterType') as "cluster_type",
                json_extract_path_text(properties, '$.clusterVersion') as "cluster_version",
                json_extract_path_text(properties, '$.commandOutputSettings') as "command_output_settings",
                json_extract_path_text(properties, '$.computeDeploymentThreshold') as "compute_deployment_threshold",
                json_extract_path_text(properties, '$.computeRackDefinitions') as "compute_rack_definitions",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.hybridAksExtendedLocation') as "hybrid_aks_extended_location",
                json_extract_path_text(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
                json_extract_path_text(properties, '$.manualActionCount') as "manual_action_count",
                json_extract_path_text(properties, '$.networkFabricId') as "network_fabric_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.runtimeProtectionConfiguration') as "runtime_protection_configuration",
                json_extract_path_text(properties, '$.secretArchive') as "secret_archive",
                json_extract_path_text(properties, '$.supportExpiryDate') as "support_expiry_date",
                json_extract_path_text(properties, '$.updateStrategy') as "update_strategy",
                json_extract_path_text(properties, '$.workloadResourceIds') as "workload_resource_ids",
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure.nexus.clusters
                WHERE subscriptionId = 'replace-me';
    vw_kubernetes_clusters:
      id: azure.nexus.vw_kubernetes_clusters
      name: vw_kubernetes_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.aadConfiguration') as "aad_configuration",
              JSON_EXTRACT(properties, '$.administratorConfiguration') as "administrator_configuration",
              JSON_EXTRACT(properties, '$.attachedNetworkIds') as "attached_network_ids",
              JSON_EXTRACT(properties, '$.availableUpgrades') as "available_upgrades",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.connectedClusterId') as "connected_cluster_id",
              JSON_EXTRACT(properties, '$.controlPlaneKubernetesVersion') as "control_plane_kubernetes_version",
              JSON_EXTRACT(properties, '$.controlPlaneNodeConfiguration') as "control_plane_node_configuration",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.featureStatuses') as "feature_statuses",
              JSON_EXTRACT(properties, '$.initialAgentPoolConfigurations') as "initial_agent_pool_configurations",
              JSON_EXTRACT(properties, '$.kubernetesVersion') as "kubernetes_version",
              JSON_EXTRACT(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
              JSON_EXTRACT(properties, '$.networkConfiguration') as "network_configuration",
              JSON_EXTRACT(properties, '$.nodes') as "nodes",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              kubernetesClusterName
              FROM azure.nexus.kubernetes_clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.aadConfiguration') as "aad_configuration",
                json_extract_path_text(properties, '$.administratorConfiguration') as "administrator_configuration",
                json_extract_path_text(properties, '$.attachedNetworkIds') as "attached_network_ids",
                json_extract_path_text(properties, '$.availableUpgrades') as "available_upgrades",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.connectedClusterId') as "connected_cluster_id",
                json_extract_path_text(properties, '$.controlPlaneKubernetesVersion') as "control_plane_kubernetes_version",
                json_extract_path_text(properties, '$.controlPlaneNodeConfiguration') as "control_plane_node_configuration",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.featureStatuses') as "feature_statuses",
                json_extract_path_text(properties, '$.initialAgentPoolConfigurations') as "initial_agent_pool_configurations",
                json_extract_path_text(properties, '$.kubernetesVersion') as "kubernetes_version",
                json_extract_path_text(properties, '$.managedResourceGroupConfiguration') as "managed_resource_group_configuration",
                json_extract_path_text(properties, '$.networkConfiguration') as "network_configuration",
                json_extract_path_text(properties, '$.nodes') as "nodes",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                kubernetesClusterName
                FROM azure.nexus.kubernetes_clusters
                WHERE subscriptionId = 'replace-me';
    vw_l2_networks:
      id: azure.nexus.vw_l2_networks
      name: vw_l2_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.associatedResourceIds') as "associated_resource_ids",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
              JSON_EXTRACT(properties, '$.hybridAksPluginType') as "hybrid_aks_plugin_type",
              JSON_EXTRACT(properties, '$.interfaceName') as "interface_name",
              JSON_EXTRACT(properties, '$.l2IsolationDomainId') as "l2_isolation_domain_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
              subscriptionId,
              resourceGroupName,
              l2NetworkName
              FROM azure.nexus.l2_networks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.associatedResourceIds') as "associated_resource_ids",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
                json_extract_path_text(properties, '$.hybridAksPluginType') as "hybrid_aks_plugin_type",
                json_extract_path_text(properties, '$.interfaceName') as "interface_name",
                json_extract_path_text(properties, '$.l2IsolationDomainId') as "l2_isolation_domain_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
                subscriptionId,
                resourceGroupName,
                l2NetworkName
                FROM azure.nexus.l2_networks
                WHERE subscriptionId = 'replace-me';
    vw_l3_networks:
      id: azure.nexus.vw_l3_networks
      name: vw_l3_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.associatedResourceIds') as "associated_resource_ids",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
              JSON_EXTRACT(properties, '$.hybridAksIpamEnabled') as "hybrid_aks_ipam_enabled",
              JSON_EXTRACT(properties, '$.hybridAksPluginType') as "hybrid_aks_plugin_type",
              JSON_EXTRACT(properties, '$.interfaceName') as "interface_name",
              JSON_EXTRACT(properties, '$.ipAllocationType') as "ip_allocation_type",
              JSON_EXTRACT(properties, '$.ipv4ConnectedPrefix') as "ipv4_connected_prefix",
              JSON_EXTRACT(properties, '$.ipv6ConnectedPrefix') as "ipv6_connected_prefix",
              JSON_EXTRACT(properties, '$.l3IsolationDomainId') as "l3_isolation_domain_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
              JSON_EXTRACT(properties, '$.vlan') as "vlan",
              subscriptionId,
              resourceGroupName,
              l3NetworkName
              FROM azure.nexus.l3_networks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.associatedResourceIds') as "associated_resource_ids",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
                json_extract_path_text(properties, '$.hybridAksIpamEnabled') as "hybrid_aks_ipam_enabled",
                json_extract_path_text(properties, '$.hybridAksPluginType') as "hybrid_aks_plugin_type",
                json_extract_path_text(properties, '$.interfaceName') as "interface_name",
                json_extract_path_text(properties, '$.ipAllocationType') as "ip_allocation_type",
                json_extract_path_text(properties, '$.ipv4ConnectedPrefix') as "ipv4_connected_prefix",
                json_extract_path_text(properties, '$.ipv6ConnectedPrefix') as "ipv6_connected_prefix",
                json_extract_path_text(properties, '$.l3IsolationDomainId') as "l3_isolation_domain_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
                json_extract_path_text(properties, '$.vlan') as "vlan",
                subscriptionId,
                resourceGroupName,
                l3NetworkName
                FROM azure.nexus.l3_networks
                WHERE subscriptionId = 'replace-me';
    vw_rack_skus:
      id: azure.nexus.vw_rack_skus
      name: vw_rack_skus
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.computeMachines') as "compute_machines",
              JSON_EXTRACT(properties, '$.controllerMachines') as "controller_machines",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.maxClusterSlots') as "max_cluster_slots",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.rackType') as "rack_type",
              JSON_EXTRACT(properties, '$.storageAppliances') as "storage_appliances",
              JSON_EXTRACT(properties, '$.supportedRackSkuIds') as "supported_rack_sku_ids",
              subscriptionId,
              rackSkuName
              FROM azure.nexus.rack_skus
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.computeMachines') as "compute_machines",
                json_extract_path_text(properties, '$.controllerMachines') as "controller_machines",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.maxClusterSlots') as "max_cluster_slots",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.rackType') as "rack_type",
                json_extract_path_text(properties, '$.storageAppliances') as "storage_appliances",
                json_extract_path_text(properties, '$.supportedRackSkuIds') as "supported_rack_sku_ids",
                subscriptionId,
                rackSkuName
                FROM azure.nexus.rack_skus
                WHERE subscriptionId = 'replace-me';
    vw_racks:
      id: azure.nexus.vw_racks
      name: vw_racks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.availabilityZone') as "availability_zone",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.rackLocation') as "rack_location",
              JSON_EXTRACT(properties, '$.rackSerialNumber') as "rack_serial_number",
              JSON_EXTRACT(properties, '$.rackSkuId') as "rack_sku_id",
              subscriptionId,
              resourceGroupName,
              rackName
              FROM azure.nexus.racks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.availabilityZone') as "availability_zone",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.rackLocation') as "rack_location",
                json_extract_path_text(properties, '$.rackSerialNumber') as "rack_serial_number",
                json_extract_path_text(properties, '$.rackSkuId') as "rack_sku_id",
                subscriptionId,
                resourceGroupName,
                rackName
                FROM azure.nexus.racks
                WHERE subscriptionId = 'replace-me';
    vw_storage_appliances:
      id: azure.nexus.vw_storage_appliances
      name: vw_storage_appliances
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.administratorCredentials') as "administrator_credentials",
              JSON_EXTRACT(properties, '$.capacity') as "capacity",
              JSON_EXTRACT(properties, '$.capacityUsed') as "capacity_used",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.managementIpv4Address') as "management_ipv4_address",
              JSON_EXTRACT(properties, '$.manufacturer') as "manufacturer",
              JSON_EXTRACT(properties, '$.model') as "model",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.rackId') as "rack_id",
              JSON_EXTRACT(properties, '$.rackSlot') as "rack_slot",
              JSON_EXTRACT(properties, '$.remoteVendorManagementFeature') as "remote_vendor_management_feature",
              JSON_EXTRACT(properties, '$.remoteVendorManagementStatus') as "remote_vendor_management_status",
              JSON_EXTRACT(properties, '$.secretRotationStatus') as "secret_rotation_status",
              JSON_EXTRACT(properties, '$.serialNumber') as "serial_number",
              JSON_EXTRACT(properties, '$.storageApplianceSkuId') as "storage_appliance_sku_id",
              JSON_EXTRACT(properties, '$.version') as "version",
              subscriptionId,
              resourceGroupName,
              storageApplianceName
              FROM azure.nexus.storage_appliances
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.administratorCredentials') as "administrator_credentials",
                json_extract_path_text(properties, '$.capacity') as "capacity",
                json_extract_path_text(properties, '$.capacityUsed') as "capacity_used",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.managementIpv4Address') as "management_ipv4_address",
                json_extract_path_text(properties, '$.manufacturer') as "manufacturer",
                json_extract_path_text(properties, '$.model') as "model",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.rackId') as "rack_id",
                json_extract_path_text(properties, '$.rackSlot') as "rack_slot",
                json_extract_path_text(properties, '$.remoteVendorManagementFeature') as "remote_vendor_management_feature",
                json_extract_path_text(properties, '$.remoteVendorManagementStatus') as "remote_vendor_management_status",
                json_extract_path_text(properties, '$.secretRotationStatus') as "secret_rotation_status",
                json_extract_path_text(properties, '$.serialNumber') as "serial_number",
                json_extract_path_text(properties, '$.storageApplianceSkuId') as "storage_appliance_sku_id",
                json_extract_path_text(properties, '$.version') as "version",
                subscriptionId,
                resourceGroupName,
                storageApplianceName
                FROM azure.nexus.storage_appliances
                WHERE subscriptionId = 'replace-me';
    vw_trunked_networks:
      id: azure.nexus.vw_trunked_networks
      name: vw_trunked_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.associatedResourceIds') as "associated_resource_ids",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
              JSON_EXTRACT(properties, '$.hybridAksPluginType') as "hybrid_aks_plugin_type",
              JSON_EXTRACT(properties, '$.interfaceName') as "interface_name",
              JSON_EXTRACT(properties, '$.isolationDomainIds') as "isolation_domain_ids",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
              JSON_EXTRACT(properties, '$.vlans') as "vlans",
              subscriptionId,
              resourceGroupName,
              trunkedNetworkName
              FROM azure.nexus.trunked_networks
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.associatedResourceIds') as "associated_resource_ids",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.hybridAksClustersAssociatedIds') as "hybrid_aks_clusters_associated_ids",
                json_extract_path_text(properties, '$.hybridAksPluginType') as "hybrid_aks_plugin_type",
                json_extract_path_text(properties, '$.interfaceName') as "interface_name",
                json_extract_path_text(properties, '$.isolationDomainIds') as "isolation_domain_ids",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.virtualMachinesAssociatedIds') as "virtual_machines_associated_ids",
                json_extract_path_text(properties, '$.vlans') as "vlans",
                subscriptionId,
                resourceGroupName,
                trunkedNetworkName
                FROM azure.nexus.trunked_networks
                WHERE subscriptionId = 'replace-me';
    vw_virtual_machines:
      id: azure.nexus.vw_virtual_machines
      name: vw_virtual_machines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.adminUsername') as "admin_username",
              JSON_EXTRACT(properties, '$.availabilityZone') as "availability_zone",
              JSON_EXTRACT(properties, '$.bareMetalMachineId') as "bare_metal_machine_id",
              JSON_EXTRACT(properties, '$.bootMethod') as "boot_method",
              JSON_EXTRACT(properties, '$.cloudServicesNetworkAttachment') as "cloud_services_network_attachment",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.cpuCores') as "cpu_cores",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.isolateEmulatorThread') as "isolate_emulator_thread",
              JSON_EXTRACT(properties, '$.memorySizeGB') as "memory_size_gb",
              JSON_EXTRACT(properties, '$.networkAttachments') as "network_attachments",
              JSON_EXTRACT(properties, '$.networkData') as "network_data",
              JSON_EXTRACT(properties, '$.placementHints') as "placement_hints",
              JSON_EXTRACT(properties, '$.powerState') as "power_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.sshPublicKeys') as "ssh_public_keys",
              JSON_EXTRACT(properties, '$.storageProfile') as "storage_profile",
              JSON_EXTRACT(properties, '$.userData') as "user_data",
              JSON_EXTRACT(properties, '$.virtioInterface') as "virtio_interface",
              JSON_EXTRACT(properties, '$.vmDeviceModel') as "vm_device_model",
              JSON_EXTRACT(properties, '$.vmImage') as "vm_image",
              JSON_EXTRACT(properties, '$.vmImageRepositoryCredentials') as "vm_image_repository_credentials",
              JSON_EXTRACT(properties, '$.volumes') as "volumes",
              subscriptionId,
              resourceGroupName,
              virtualMachineName
              FROM azure.nexus.virtual_machines
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.adminUsername') as "admin_username",
                json_extract_path_text(properties, '$.availabilityZone') as "availability_zone",
                json_extract_path_text(properties, '$.bareMetalMachineId') as "bare_metal_machine_id",
                json_extract_path_text(properties, '$.bootMethod') as "boot_method",
                json_extract_path_text(properties, '$.cloudServicesNetworkAttachment') as "cloud_services_network_attachment",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.cpuCores') as "cpu_cores",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.isolateEmulatorThread') as "isolate_emulator_thread",
                json_extract_path_text(properties, '$.memorySizeGB') as "memory_size_gb",
                json_extract_path_text(properties, '$.networkAttachments') as "network_attachments",
                json_extract_path_text(properties, '$.networkData') as "network_data",
                json_extract_path_text(properties, '$.placementHints') as "placement_hints",
                json_extract_path_text(properties, '$.powerState') as "power_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.sshPublicKeys') as "ssh_public_keys",
                json_extract_path_text(properties, '$.storageProfile') as "storage_profile",
                json_extract_path_text(properties, '$.userData') as "user_data",
                json_extract_path_text(properties, '$.virtioInterface') as "virtio_interface",
                json_extract_path_text(properties, '$.vmDeviceModel') as "vm_device_model",
                json_extract_path_text(properties, '$.vmImage') as "vm_image",
                json_extract_path_text(properties, '$.vmImageRepositoryCredentials') as "vm_image_repository_credentials",
                json_extract_path_text(properties, '$.volumes') as "volumes",
                subscriptionId,
                resourceGroupName,
                virtualMachineName
                FROM azure.nexus.virtual_machines
                WHERE subscriptionId = 'replace-me';
    vw_volumes:
      id: azure.nexus.vw_volumes
      name: vw_volumes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.attachedTo') as "attached_to",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.serialNumber') as "serial_number",
              JSON_EXTRACT(properties, '$.sizeMiB') as "size_mib",
              subscriptionId,
              resourceGroupName,
              volumeName
              FROM azure.nexus.volumes
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.attachedTo') as "attached_to",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.serialNumber') as "serial_number",
                json_extract_path_text(properties, '$.sizeMiB') as "size_mib",
                subscriptionId,
                resourceGroupName,
                volumeName
                FROM azure.nexus.volumes
                WHERE subscriptionId = 'replace-me';
    vw_bare_metal_machine_key_sets:
      id: azure.nexus.vw_bare_metal_machine_key_sets
      name: vw_bare_metal_machine_key_sets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.azureGroupId') as "azure_group_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.expiration') as "expiration",
              JSON_EXTRACT(properties, '$.jumpHostsAllowed') as "jump_hosts_allowed",
              JSON_EXTRACT(properties, '$.lastValidation') as "last_validation",
              JSON_EXTRACT(properties, '$.osGroupName') as "os_group_name",
              JSON_EXTRACT(properties, '$.privilegeLevel') as "privilege_level",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.userList') as "user_list",
              JSON_EXTRACT(properties, '$.userListStatus') as "user_list_status",
              subscriptionId,
              resourceGroupName,
              clusterName,
              bareMetalMachineKeySetName
              FROM azure.nexus.bare_metal_machine_key_sets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.azureGroupId') as "azure_group_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.expiration') as "expiration",
                json_extract_path_text(properties, '$.jumpHostsAllowed') as "jump_hosts_allowed",
                json_extract_path_text(properties, '$.lastValidation') as "last_validation",
                json_extract_path_text(properties, '$.osGroupName') as "os_group_name",
                json_extract_path_text(properties, '$.privilegeLevel') as "privilege_level",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.userList') as "user_list",
                json_extract_path_text(properties, '$.userListStatus') as "user_list_status",
                subscriptionId,
                resourceGroupName,
                clusterName,
                bareMetalMachineKeySetName
                FROM azure.nexus.bare_metal_machine_key_sets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_bmc_key_sets:
      id: azure.nexus.vw_bmc_key_sets
      name: vw_bmc_key_sets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.azureGroupId') as "azure_group_id",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.expiration') as "expiration",
              JSON_EXTRACT(properties, '$.lastValidation') as "last_validation",
              JSON_EXTRACT(properties, '$.privilegeLevel') as "privilege_level",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.userList') as "user_list",
              JSON_EXTRACT(properties, '$.userListStatus') as "user_list_status",
              subscriptionId,
              resourceGroupName,
              clusterName,
              bmcKeySetName
              FROM azure.nexus.bmc_key_sets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.azureGroupId') as "azure_group_id",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.expiration') as "expiration",
                json_extract_path_text(properties, '$.lastValidation') as "last_validation",
                json_extract_path_text(properties, '$.privilegeLevel') as "privilege_level",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.userList') as "user_list",
                json_extract_path_text(properties, '$.userListStatus') as "user_list_status",
                subscriptionId,
                resourceGroupName,
                clusterName,
                bmcKeySetName
                FROM azure.nexus.bmc_key_sets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_metrics_configurations:
      id: azure.nexus.vw_metrics_configurations
      name: vw_metrics_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.collectionInterval') as "collection_interval",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.disabledMetrics') as "disabled_metrics",
              JSON_EXTRACT(properties, '$.enabledMetrics') as "enabled_metrics",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              metricsConfigurationName
              FROM azure.nexus.metrics_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.collectionInterval') as "collection_interval",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.disabledMetrics') as "disabled_metrics",
                json_extract_path_text(properties, '$.enabledMetrics') as "enabled_metrics",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                metricsConfigurationName
                FROM azure.nexus.metrics_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_agent_pools:
      id: azure.nexus.vw_agent_pools
      name: vw_agent_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.administratorConfiguration') as "administrator_configuration",
              JSON_EXTRACT(properties, '$.agentOptions') as "agent_options",
              JSON_EXTRACT(properties, '$.attachedNetworkConfiguration') as "attached_network_configuration",
              JSON_EXTRACT(properties, '$.availabilityZones') as "availability_zones",
              JSON_EXTRACT(properties, '$.count') as "count",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.kubernetesVersion') as "kubernetes_version",
              JSON_EXTRACT(properties, '$.labels') as "labels",
              JSON_EXTRACT(properties, '$.mode') as "mode",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.taints') as "taints",
              JSON_EXTRACT(properties, '$.upgradeSettings') as "upgrade_settings",
              JSON_EXTRACT(properties, '$.vmSkuName') as "vm_sku_name",
              subscriptionId,
              resourceGroupName,
              kubernetesClusterName,
              agentPoolName
              FROM azure.nexus.agent_pools
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND kubernetesClusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.administratorConfiguration') as "administrator_configuration",
                json_extract_path_text(properties, '$.agentOptions') as "agent_options",
                json_extract_path_text(properties, '$.attachedNetworkConfiguration') as "attached_network_configuration",
                json_extract_path_text(properties, '$.availabilityZones') as "availability_zones",
                json_extract_path_text(properties, '$.count') as "count",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.kubernetesVersion') as "kubernetes_version",
                json_extract_path_text(properties, '$.labels') as "labels",
                json_extract_path_text(properties, '$.mode') as "mode",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.taints') as "taints",
                json_extract_path_text(properties, '$.upgradeSettings') as "upgrade_settings",
                json_extract_path_text(properties, '$.vmSkuName') as "vm_sku_name",
                subscriptionId,
                resourceGroupName,
                kubernetesClusterName,
                agentPoolName
                FROM azure.nexus.agent_pools
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND kubernetesClusterName = 'replace-me';
    vw_kubernetes_cluster_features:
      id: azure.nexus.vw_kubernetes_cluster_features
      name: vw_kubernetes_cluster_features
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.availabilityLifecycle') as "availability_lifecycle",
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.options') as "options",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.required') as "required",
              JSON_EXTRACT(properties, '$.version') as "version",
              subscriptionId,
              resourceGroupName,
              kubernetesClusterName,
              featureName
              FROM azure.nexus.kubernetes_cluster_features
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND kubernetesClusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.availabilityLifecycle') as "availability_lifecycle",
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.options') as "options",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.required') as "required",
                json_extract_path_text(properties, '$.version') as "version",
                subscriptionId,
                resourceGroupName,
                kubernetesClusterName,
                featureName
                FROM azure.nexus.kubernetes_cluster_features
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND kubernetesClusterName = 'replace-me';
    vw_consoles:
      id: azure.nexus.vw_consoles
      name: vw_consoles
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              extendedLocation as extended_location,
              tags as tags,
              JSON_EXTRACT(properties, '$.detailedStatus') as "detailed_status",
              JSON_EXTRACT(properties, '$.detailedStatusMessage') as "detailed_status_message",
              JSON_EXTRACT(properties, '$.enabled') as "enabled",
              JSON_EXTRACT(properties, '$.expiration') as "expiration",
              JSON_EXTRACT(properties, '$.privateLinkServiceId') as "private_link_service_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.sshPublicKey') as "ssh_public_key",
              JSON_EXTRACT(properties, '$.virtualMachineAccessId') as "virtual_machine_access_id",
              subscriptionId,
              resourceGroupName,
              virtualMachineName,
              consoleName
              FROM azure.nexus.consoles
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND virtualMachineName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                extendedLocation as extended_location,
                tags as tags,
                json_extract_path_text(properties, '$.detailedStatus') as "detailed_status",
                json_extract_path_text(properties, '$.detailedStatusMessage') as "detailed_status_message",
                json_extract_path_text(properties, '$.enabled') as "enabled",
                json_extract_path_text(properties, '$.expiration') as "expiration",
                json_extract_path_text(properties, '$.privateLinkServiceId') as "private_link_service_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.sshPublicKey') as "ssh_public_key",
                json_extract_path_text(properties, '$.virtualMachineAccessId') as "virtual_machine_access_id",
                subscriptionId,
                resourceGroupName,
                virtualMachineName,
                consoleName
                FROM azure.nexus.consoles
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND virtualMachineName = 'replace-me';
paths:
  /providers/Microsoft.NetworkCloud/operations?api-version=2024-06-01-preview:
    get:
      description: Get a list of all available resource provider operations. It contains a URL link to get the next set of results.
      summary: List resource provider operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/bareMetalMachines?api-version=2024-06-01-preview:
    get:
      description: Get a list of bare metal machines in the provided subscription.
      summary: List bare metal machines in the subscription.
      operationId: BareMetalMachines_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/cloudServicesNetworks?api-version=2024-06-01-preview:
    get:
      description: Get a list of cloud services networks in the provided subscription.
      summary: List cloud services networks in the subscription.
      operationId: CloudServicesNetworks_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServicesNetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusterManagers?api-version=2024-06-01-preview:
    get:
      description: Get a list of cluster managers in the provided subscription.
      summary: List cluster managers in the subscription.
      operationId: ClusterManagers_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterManagerList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters?api-version=2024-06-01-preview:
    get:
      description: Get a list of clusters in the provided subscription.
      summary: List clusters in the subscription.
      operationId: Clusters_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/kubernetesClusters?api-version=2024-06-01-preview:
    get:
      description: Get a list of Kubernetes clusters in the provided subscription.
      summary: List Kubernetes clusters in the subscription.
      operationId: KubernetesClusters_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/l2Networks?api-version=2024-06-01-preview:
    get:
      description: Get a list of layer 2 (L2) networks in the provided subscription.
      summary: List layer 2 (L2) networks in the subscription.
      operationId: L2Networks_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2NetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/l3Networks?api-version=2024-06-01-preview:
    get:
      description: Get a list of layer 3 (L3) networks in the provided subscription.
      summary: List layer 3 (L3) networks in the subscription.
      operationId: L3Networks_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3NetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/rackSkus?api-version=2024-06-01-preview:
    get:
      description: Get a list of rack SKUs in the provided subscription.
      summary: List rack SKUs in the subscription.
      operationId: RackSkus_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RackSkuList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/rackSkus/{rackSkuName}?api-version=2024-06-01-preview:
    get:
      description: Get the properties of the provided rack SKU.
      summary: Retrieve the rack SKU.
      operationId: RackSkus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/RackSkuNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RackSku'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/racks?api-version=2024-06-01-preview:
    get:
      description: Get a list of racks in the provided subscription.
      summary: List racks in the subscription.
      operationId: Racks_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RackList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/storageAppliances?api-version=2024-06-01-preview:
    get:
      description: Get a list of storage appliances in the provided subscription.
      summary: List storage appliances in the subscription.
      operationId: StorageAppliances_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageApplianceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/trunkedNetworks?api-version=2024-06-01-preview:
    get:
      description: Get a list of trunked networks in the provided subscription.
      summary: List trunked networks in the subscription.
      operationId: TrunkedNetworks_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunkedNetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/virtualMachines?api-version=2024-06-01-preview:
    get:
      description: Get a list of virtual machines in the provided subscription.
      summary: List virtual machines in the subscription.
      operationId: VirtualMachines_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/volumes?api-version=2024-06-01-preview:
    get:
      description: Get a list of volumes in the provided subscription.
      summary: List volumes in the subscription.
      operationId: Volumes_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines?api-version=2024-06-01-preview:
    get:
      description: Get a list of bare metal machines in the provided resource group.
      summary: List bare metal machines in the resource group.
      operationId: BareMetalMachines_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided bare metal machine.
      summary: Retrieve the bare metal machine.
      operationId: BareMetalMachines_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: |-
        Create a new bare metal machine or update the properties of the existing one.
        All customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
      summary: Create or update the bare metal machine.
      operationId: BareMetalMachines_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: bareMetalMachineParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachine'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachine'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachine'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: |-
        Delete the provided bare metal machine.
        All customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
      summary: Delete the bare metal machine.
      operationId: BareMetalMachines_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch properties of the provided bare metal machine, or update tags associated with the bare metal machine. Properties and tag updates can be done independently.
      summary: Patch the bare metal machine.
      operationId: BareMetalMachines_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: bareMetalMachineUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachinePatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachine'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachine'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/cordon?api-version=2024-06-01-preview:
    post:
      description: Cordon the provided bare metal machine's Kubernetes node.
      summary: Cordon the bare metal machine.
      operationId: BareMetalMachines_Cordon
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: bareMetalMachineCordonParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachineCordonParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/powerOff?api-version=2024-06-01-preview:
    post:
      description: Power off the provided bare metal machine.
      summary: Power off the bare metal machine.
      operationId: BareMetalMachines_PowerOff
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: bareMetalMachinePowerOffParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachinePowerOffParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/reimage?api-version=2024-06-01-preview:
    post:
      description: Reimage the provided bare metal machine.
      summary: Reimage the bare metal machine.
      operationId: BareMetalMachines_Reimage
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/replace?api-version=2024-06-01-preview:
    post:
      description: Replace the provided bare metal machine.
      summary: Replace (service) the bare metal machine.
      operationId: BareMetalMachines_Replace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: bareMetalMachineReplaceParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachineReplaceParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/restart?api-version=2024-06-01-preview:
    post:
      description: Restart the provided bare metal machine.
      summary: Restart the bare metal machine.
      operationId: BareMetalMachines_Restart
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/runCommand?api-version=2024-06-01-preview:
    post:
      description: Run the command or the script on the provided bare metal machine. The URL to storage account with the command execution results and the command exit code can be retrieved from the operation status API once available.
      summary: Run the command on the bare metal machine.
      operationId: BareMetalMachines_RunCommand
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: bareMetalMachineRunCommandParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachineRunCommandParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/runDataExtracts?api-version=2024-06-01-preview:
    post:
      description: Run one or more data extractions on the provided bare metal machine. The URL to storage account with the command execution results and the command exit code can be retrieved from the operation status API once available.
      summary: Run data extraction for a bare metal machine.
      operationId: BareMetalMachines_RunDataExtracts
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: bareMetalMachineRunDataExtractsParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachineRunDataExtractsParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/runReadCommands?api-version=2024-06-01-preview:
    post:
      description: Run one or more read-only commands on the provided bare metal machine. The URL to storage account with the command execution results and the command exit code can be retrieved from the operation status API once available.
      summary: Run read-only commands against a bare metal machine.
      operationId: BareMetalMachines_RunReadCommands
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: bareMetalMachineRunReadCommandsParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachineRunReadCommandsParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/start?api-version=2024-06-01-preview:
    post:
      description: Start the provided bare metal machine.
      summary: Start the bare metal machine.
      operationId: BareMetalMachines_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/uncordon?api-version=2024-06-01-preview:
    post:
      description: Uncordon the provided bare metal machine's Kubernetes node.
      summary: Uncordon the bare metal machine.
      operationId: BareMetalMachines_Uncordon
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks?api-version=2024-06-01-preview:
    get:
      description: Get a list of cloud services networks in the provided resource group.
      summary: List cloud services networks in the resource group.
      operationId: CloudServicesNetworks_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServicesNetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{cloudServicesNetworkName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided cloud services network.
      summary: Retrieve the cloud services network.
      operationId: CloudServicesNetworks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CloudServicesNetworkNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServicesNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new cloud services network or update the properties of the existing cloud services network.
      summary: Create or update the cloud services network.
      operationId: CloudServicesNetworks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CloudServicesNetworkNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: cloudServicesNetworkParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudServicesNetwork'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServicesNetwork'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServicesNetwork'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided cloud services network.
      summary: Delete the cloud services network.
      operationId: CloudServicesNetworks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CloudServicesNetworkNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Update properties of the provided cloud services network, or update the tags associated with it. Properties and tag updates can be done independently.
      summary: Patch the cloud services network.
      operationId: CloudServicesNetworks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CloudServicesNetworkNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: cloudServicesNetworkUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudServicesNetworkPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServicesNetwork'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServicesNetwork'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterManagers?api-version=2024-06-01-preview:
    get:
      description: Get a list of cluster managers in the provided resource group.
      summary: List cluster managers in the resource group.
      operationId: ClusterManagers_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterManagerList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterManagers/{clusterManagerName}?api-version=2024-06-01-preview:
    get:
      description: Get the properties of the provided cluster manager.
      summary: Retrieve the cluster manager.
      operationId: ClusterManagers_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterManagerNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterManager'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new cluster manager or update properties of the cluster manager if it exists.
      summary: Create or update the cluster manager.
      operationId: ClusterManagers_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterManagerNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: clusterManagerParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterManager'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterManager'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterManager'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided cluster manager.
      summary: Delete the cluster manager.
      operationId: ClusterManagers_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterManagerNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch properties of the provided cluster manager, or update the tags assigned to the cluster manager. Properties and tag updates can be done independently.
      summary: Patch the cluster manager.
      operationId: ClusterManagers_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterManagerNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: clusterManagerUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterManagerPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterManager'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters?api-version=2024-06-01-preview:
    get:
      description: Get a list of clusters in the provided resource group.
      summary: List clusters in the resource group.
      operationId: Clusters_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided cluster.
      summary: Retrieve the cluster.
      operationId: Clusters_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new cluster or update the properties of the cluster if it exists.
      summary: Create or update the cluster.
      operationId: Clusters_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: clusterParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided cluster.
      summary: Delete the cluster.
      operationId: Clusters_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch the properties of the provided cluster, or update the tags associated with the cluster. Properties and tag updates can be done independently.
      summary: Patch the cluster.
      operationId: Clusters_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: clusterUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bareMetalMachineKeySets?api-version=2024-06-01-preview:
    get:
      description: Get a list of bare metal machine key sets for the provided cluster.
      summary: List bare metal machine key sets of the cluster.
      operationId: BareMetalMachineKeySets_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineKeySetList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bareMetalMachineKeySets/{bareMetalMachineKeySetName}?api-version=2024-06-01-preview:
    get:
      description: Get bare metal machine key set of the provided cluster.
      summary: Retrieve the bare metal machine key set of the cluster.
      operationId: BareMetalMachineKeySets_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineKeySetNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineKeySet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new bare metal machine key set or update the existing one for the provided cluster.
      summary: Create or update the bare metal machine key set of the cluster.
      operationId: BareMetalMachineKeySets_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineKeySetNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: bareMetalMachineKeySetParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachineKeySet'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineKeySet'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineKeySet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the bare metal machine key set of the provided cluster.
      summary: Delete the bare metal machine key set of the cluster.
      operationId: BareMetalMachineKeySets_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineKeySetNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch properties of bare metal machine key set for the provided cluster, or update the tags associated with it. Properties and tag updates can be done independently.
      summary: Patch bare metal machine key set of the cluster.
      operationId: BareMetalMachineKeySets_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BareMetalMachineKeySetNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: bareMetalMachineKeySetUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BareMetalMachineKeySetPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineKeySet'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BareMetalMachineKeySet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bmcKeySets?api-version=2024-06-01-preview:
    get:
      description: Get a list of baseboard management controller key sets for the provided cluster.
      summary: List baseboard management controller key sets of the cluster.
      operationId: BmcKeySets_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BmcKeySetList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bmcKeySets/{bmcKeySetName}?api-version=2024-06-01-preview:
    get:
      description: Get baseboard management controller key set of the provided cluster.
      summary: Retrieve the baseboard management controller key set of the cluster.
      operationId: BmcKeySets_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BmcKeySetNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BmcKeySet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new baseboard management controller key set or update the existing one for the provided cluster.
      summary: Create or update the baseboard management controller key set of the cluster.
      operationId: BmcKeySets_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BmcKeySetNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: bmcKeySetParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BmcKeySet'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BmcKeySet'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BmcKeySet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the baseboard management controller key set of the provided cluster.
      summary: Delete the baseboard management controller key set of the cluster.
      operationId: BmcKeySets_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BmcKeySetNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch properties of baseboard management controller key set for the provided cluster, or update the tags associated with it. Properties and tag updates can be done independently.
      summary: Patch baseboard management controller key set of the cluster.
      operationId: BmcKeySets_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/BmcKeySetNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: bmcKeySetUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BmcKeySetPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BmcKeySet'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BmcKeySet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/continueUpdateVersion?api-version=2024-06-01-preview:
    post:
      description: Trigger the continuation of an update for a cluster with a matching update strategy that has paused after completing a segment of the update.
      summary: Continue a paused update to the cluster version.
      operationId: Clusters_ContinueUpdateVersion
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: clusterContinueUpdateVersionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterContinueUpdateVersionParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/deploy?api-version=2024-06-01-preview:
    post:
      description: Deploy the cluster using the rack configuration provided during creation.
      summary: Deploy the cluster.
      operationId: Clusters_Deploy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: clusterDeployParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterDeployParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/metricsConfigurations?api-version=2024-06-01-preview:
    get:
      description: Get a list of metrics configurations for the provided cluster.
      summary: List metrics configurations of the cluster.
      operationId: MetricsConfigurations_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsConfigurationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/metricsConfigurations/{metricsConfigurationName}?api-version=2024-06-01-preview:
    get:
      description: Get metrics configuration of the provided cluster.
      summary: Retrieve the metrics configuration of the cluster.
      operationId: MetricsConfigurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/MetricsConfigurationName'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create new or update the existing metrics configuration of the provided cluster.
      summary: Create or update metrics configuration of the cluster.
      operationId: MetricsConfigurations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/MetricsConfigurationName'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: metricsConfigurationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterMetricsConfiguration'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsConfiguration'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsConfiguration'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the metrics configuration of the provided cluster.
      summary: Delete the metrics configuration of the cluster.
      operationId: MetricsConfigurations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/MetricsConfigurationName'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch properties of metrics configuration for the provided cluster, or update the tags associated with it. Properties and tag updates can be done independently.
      summary: Patch metrics configuration of the cluster.
      operationId: MetricsConfigurations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/MetricsConfigurationName'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: metricsConfigurationUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterMetricsConfigurationPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsConfiguration'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMetricsConfiguration'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/scanRuntime?api-version=2024-06-01-preview:
    post:
      description: Triggers the execution of a runtime protection scan to detect and remediate detected issues, in accordance with the cluster configuration.
      summary: Execute a runtime protection scan on the cluster.
      operationId: Clusters_ScanRuntime
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: ClusterScanRuntimeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterScanRuntimeParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/updateVersion?api-version=2024-06-01-preview:
    post:
      description: Update the version of the provided cluster to one of the available supported versions.
      summary: Update the cluster version.
      operationId: ClustersVersion_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: clusterUpdateVersionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdateVersionParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
      x-ms-original-operationId: Clusters_UpdateVersion
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters?api-version=2024-06-01-preview:
    get:
      description: Get a list of Kubernetes clusters in the provided resource group.
      summary: List Kubernetes clusters in the resource group.
      operationId: KubernetesClusters_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided the Kubernetes cluster.
      summary: Retrieve the Kubernetes cluster.
      operationId: KubernetesClusters_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new Kubernetes cluster or update the properties of the existing one.
      summary: Create or update the Kubernetes cluster.
      operationId: KubernetesClusters_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: kubernetesClusterParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesCluster'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided Kubernetes cluster.
      summary: Delete the Kubernetes cluster.
      operationId: KubernetesClusters_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch the properties of the provided Kubernetes cluster, or update the tags associated with the Kubernetes cluster. Properties and tag updates can be done independently.
      summary: Patch the Kubernetes cluster.
      operationId: KubernetesClusters_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: kubernetesClusterUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesClusterPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/agentPools?api-version=2024-06-01-preview:
    get:
      description: Get a list of agent pools for the provided Kubernetes cluster.
      summary: List agent pools of the Kubernetes cluster.
      operationId: AgentPools_ListByKubernetesCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/agentPools/{agentPoolName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided Kubernetes cluster agent pool.
      summary: Retrieve the Kubernetes cluster agent pool.
      operationId: AgentPools_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new Kubernetes cluster agent pool or update the properties of the existing one.
      summary: Create or update the Kubernetes cluster agent pool.
      operationId: AgentPools_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: agentPoolParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPool'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided Kubernetes cluster agent pool.
      summary: Delete the Kubernetes cluster agent pool.
      operationId: AgentPools_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch the properties of the provided Kubernetes cluster agent pool, or update the tags associated with the Kubernetes cluster agent pool. Properties and tag updates can be done independently.
      summary: Patch the Kubernetes cluster agent pool.
      operationId: AgentPools_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/AgentPoolNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: agentPoolUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPool'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/features?api-version=2024-06-01-preview:
    get:
      description: Get a list of features for the provided Kubernetes cluster.
      summary: List features for the Kubernetes cluster.
      operationId: KubernetesClusterFeatures_ListByKubernetesCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterFeatureList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/features/{featureName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided the Kubernetes cluster feature.
      summary: Retrieve the Kubernetes cluster feature.
      operationId: KubernetesClusterFeatures_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/FeatureNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterFeature'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new Kubernetes cluster feature or update properties of the Kubernetes cluster feature if it exists.
      summary: Create or update the Kubernetes cluster feature.
      operationId: KubernetesClusterFeatures_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/FeatureNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: kubernetesClusterFeatureParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesClusterFeature'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterFeature'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterFeature'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided Kubernetes cluster feature.
      summary: Delete the Kubernetes cluster feature.
      operationId: KubernetesClusterFeatures_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/FeatureNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch properties of the provided Kubernetes cluster feature.
      summary: Patch the Kubernetes cluster feature.
      operationId: KubernetesClusterFeatures_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
        - $ref: '#/components/parameters/FeatureNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: kubernetesClusterFeatureUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesClusterFeaturePatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterFeature'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterFeature'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/restartNode?api-version=2024-06-01-preview:
    post:
      description: Restart a targeted node of a Kubernetes cluster.
      summary: Restart a targeted node.
      operationId: KubernetesClusters_RestartNode
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/KubernetesClusterNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: kubernetesClusterRestartNodeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesClusterRestartNodeParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l2Networks?api-version=2024-06-01-preview:
    get:
      description: Get a list of layer 2 (L2) networks in the provided resource group.
      summary: List layer 2 (L2) networks in the resource group.
      operationId: L2Networks_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2NetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l2Networks/{l2NetworkName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided layer 2 (L2) network.
      summary: Retrieve the layer 2 (L2) network.
      operationId: L2Networks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2NetworkNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Network'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new layer 2 (L2) network or update the properties of the existing network.
      summary: Create or update the layer 2 (L2) network.
      operationId: L2Networks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2NetworkNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: l2NetworkParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L2Network'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Network'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Network'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided layer 2 (L2) network.
      summary: Delete the layer 2 (L2) network.
      operationId: L2Networks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2NetworkNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Update tags associated with the provided layer 2 (L2) network.
      summary: Patch the layer 2 (L2) network.
      operationId: L2Networks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L2NetworkNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: l2NetworkUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L2NetworkPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L2Network'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks?api-version=2024-06-01-preview:
    get:
      description: Get a list of layer 3 (L3) networks in the provided resource group.
      summary: List layer 3 (L3) networks in the resource group.
      operationId: L3Networks_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3NetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks/{l3NetworkName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided layer 3 (L3) network.
      summary: Retrieve the layer 3 (L3) network.
      operationId: L3Networks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3NetworkNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3Network'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new layer 3 (L3) network or update the properties of the existing network.
      summary: Create or update the layer 3 (L3) network.
      operationId: L3Networks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3NetworkNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: l3NetworkParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L3Network'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3Network'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3Network'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided layer 3 (L3) network.
      summary: Delete the layer 3 (L3) network.
      operationId: L3Networks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3NetworkNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Update tags associated with the provided layer 3 (L3) network.
      summary: Patch the layer 3 (L3) network.
      operationId: L3Networks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/L3NetworkNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: l3NetworkUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L3NetworkPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/L3Network'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/racks?api-version=2024-06-01-preview:
    get:
      description: Get a list of racks in the provided resource group.
      summary: List racks in the resource group.
      operationId: Racks_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RackList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/racks/{rackName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided rack.
      summary: Retrieve the rack.
      operationId: Racks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RackNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rack'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: |-
        Create a new rack or update properties of the existing one.
        All customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
      summary: Create or update the rack.
      operationId: Racks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RackNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: rackParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rack'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rack'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rack'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: |-
        Delete the provided rack.
        All customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
      summary: Delete the rack.
      operationId: Racks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RackNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch properties of the provided rack, or update the tags associated with the rack. Properties and tag updates can be done independently.
      summary: Patch the rack.
      operationId: Racks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RackNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: rackUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RackPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rack'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rack'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances?api-version=2024-06-01-preview:
    get:
      description: Get a list of storage appliances in the provided resource group.
      summary: List storage appliances in the resource group.
      operationId: StorageAppliances_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageApplianceList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided storage appliance.
      summary: Retrieve the storage appliance.
      operationId: StorageAppliances_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageApplianceNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAppliance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: |-
        Create a new storage appliance or update the properties of the existing one.
        All customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
      summary: Create or update the storage appliance.
      operationId: StorageAppliances_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageApplianceNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: storageApplianceParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAppliance'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAppliance'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAppliance'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: |-
        Delete the provided storage appliance.
        All customer initiated requests will be rejected as the life cycle of this resource is managed by the system.
      summary: Delete the storage appliance.
      operationId: StorageAppliances_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageApplianceNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Update properties of the provided storage appliance, or update tags associated with the storage appliance Properties and tag updates can be done independently.
      summary: Patch the storage appliance.
      operationId: StorageAppliances_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageApplianceNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: storageApplianceUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageAppliancePatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAppliance'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAppliance'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}/disableRemoteVendorManagement?api-version=2024-06-01-preview:
    post:
      description: Disable remote vendor management of the provided storage appliance.
      summary: Turn off remote vendor management for a storage appliance, if supported.
      operationId: StorageAppliances_DisableRemoteVendorManagement
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageApplianceNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}/enableRemoteVendorManagement?api-version=2024-06-01-preview:
    post:
      description: Enable remote vendor management of the provided storage appliance.
      summary: Turn on remote vendor management for a storage appliance, if supported.
      operationId: StorageAppliances_EnableRemoteVendorManagement
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageApplianceNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: storageApplianceEnableRemoteVendorManagementParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageApplianceEnableRemoteVendorManagementParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/trunkedNetworks?api-version=2024-06-01-preview:
    get:
      description: Get a list of trunked networks in the provided resource group.
      summary: List trunked networks in the resource group.
      operationId: TrunkedNetworks_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunkedNetworkList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/trunkedNetworks/{trunkedNetworkName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided trunked network.
      summary: Retrieve the trunked network.
      operationId: TrunkedNetworks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TrunkedNetworkNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunkedNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new trunked network or update the properties of the existing trunked network.
      summary: Create or update the trunked network.
      operationId: TrunkedNetworks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TrunkedNetworkNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: trunkedNetworkParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrunkedNetwork'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunkedNetwork'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunkedNetwork'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided trunked network.
      summary: Delete the trunked network.
      operationId: TrunkedNetworks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TrunkedNetworkNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Update tags associated with the provided trunked network.
      summary: Patch the trunked network.
      operationId: TrunkedNetworks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TrunkedNetworkNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: trunkedNetworkUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrunkedNetworkPatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunkedNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines?api-version=2024-06-01-preview:
    get:
      description: Get a list of virtual machines in the provided resource group.
      summary: List virtual machines in the resource group.
      operationId: VirtualMachines_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided virtual machine.
      summary: Retrieve the virtual machine.
      operationId: VirtualMachines_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new virtual machine or update the properties of the existing virtual machine.
      summary: Create or update the virtual machine.
      operationId: VirtualMachines_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: virtualMachineParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachine'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided virtual machine.
      summary: Delete the virtual machine.
      operationId: VirtualMachines_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch the properties of the provided virtual machine, or update the tags associated with the virtual machine. Properties and tag updates can be done independently.
      summary: Patch the virtual machine.
      operationId: VirtualMachines_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: virtualMachineUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachinePatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/consoles?api-version=2024-06-01-preview:
    get:
      description: Get a list of consoles for the provided virtual machine.
      summary: List consoles of the virtual machine.
      operationId: Consoles_ListByVirtualMachine
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsoleList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/consoles/{consoleName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided virtual machine console.
      summary: Retrieve the virtual machine console.
      operationId: Consoles_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
        - $ref: '#/components/parameters/ConsoleNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Console'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new virtual machine console or update the properties of the existing virtual machine console.
      summary: Create or update the virtual machine console.
      operationId: Consoles_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
        - $ref: '#/components/parameters/ConsoleNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: consoleParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Console'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Console'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Console'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided virtual machine console.
      summary: Delete the virtual machine console.
      operationId: Consoles_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
        - $ref: '#/components/parameters/ConsoleNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Patch the properties of the provided virtual machine console, or update the tags associated with the virtual machine console. Properties and tag updates can be done independently.
      summary: Patch the virtual machine console.
      operationId: Consoles_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
        - $ref: '#/components/parameters/ConsoleNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: consoleUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsolePatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Console'
        '202':
          description: The resource has been accepted for update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Console'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/powerOff?api-version=2024-06-01-preview:
    post:
      description: Power off the provided virtual machine.
      summary: Power off the virtual machine.
      operationId: VirtualMachines_PowerOff
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: virtualMachinePowerOffParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachinePowerOffParameters'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/reimage?api-version=2024-06-01-preview:
    post:
      description: Reimage the provided virtual machine.
      summary: Reimage the virtual machine.
      operationId: VirtualMachines_Reimage
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/restart?api-version=2024-06-01-preview:
    post:
      description: Restart the provided virtual machine.
      summary: Restart the virtual machine.
      operationId: VirtualMachines_Restart
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/start?api-version=2024-06-01-preview:
    post:
      description: Start the provided virtual machine.
      summary: Start the virtual machine.
      operationId: VirtualMachines_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualMachineNameParameter'
      responses:
        '202':
          description: The action has been initiated for the resource.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/volumes?api-version=2024-06-01-preview:
    get:
      description: Get a list of volumes in the provided resource group.
      summary: List volumes in the resource group.
      operationId: Volumes_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The resource list has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/volumes/{volumeName}?api-version=2024-06-01-preview:
    get:
      description: Get properties of the provided volume.
      summary: Retrieve the volume.
      operationId: Volumes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      responses:
        '200':
          description: The resource has been successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      description: Create a new volume or update the properties of the existing one.
      summary: Create or update the volume.
      operationId: Volumes_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      requestBody:
        description: The request body.
        required: true
        x-ms-requestBody-name: volumeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
      responses:
        '200':
          description: The resource has been successfully created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        '201':
          description: The resource has been accepted for creation or update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      description: Delete the provided volume.
      summary: Delete the volume.
      operationId: Volumes_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      responses:
        '202':
          description: The resource has been accepted for deletion.
          headers:
            Location:
              schema:
                type: string
              description: The URL to retrieve the status of the asynchronous operation.
        '204':
          description: The resource has been successfully deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/networkcloud/resource-manager/Microsoft.NetworkCloud/preview/2024-06-01-preview/networkcloud.json#/components/schemas/OperationStatusResult
    patch:
      description: Update tags associated with the provided volume.
      summary: Patch the volume.
      operationId: Volumes_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VolumeNameParameter'
      requestBody:
        description: The request body.
        x-ms-requestBody-name: volumeUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumePatchParameters'
      responses:
        '200':
          description: The resource has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
