openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Traffic Manager Management Client (Microsoft.Network)
  description: Traffic Manager Management Client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-29-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
  schemas:
    DeleteOperationResult:
      properties:
        boolean:
          type: boolean
          x-ms-client-name: operationResult
          readOnly: true
          description: The result of the operation or request.
      description: The result of the request or operation.
      type: object
    EndpointProperties:
      properties:
        targetResourceId:
          type: string
          description: The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
        target:
          type: string
          description: The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
        endpointStatus:
          type: string
          description: The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EndpointStatus
            modelAsString: true
        weight:
          type: integer
          format: int64
          description: The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
        priority:
          type: integer
          format: int64
          description: The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
        endpointLocation:
          type: string
          description: Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
        endpointMonitorStatus:
          type: string
          description: The monitoring status of the endpoint.
          enum:
            - CheckingEndpoint
            - Online
            - Degraded
            - Disabled
            - Inactive
            - Stopped
          x-ms-enum:
            name: EndpointMonitorStatus
            modelAsString: true
        minChildEndpoints:
          type: integer
          format: int64
          description: The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        minChildEndpointsIPv4:
          type: integer
          format: int64
          description: The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        minChildEndpointsIPv6:
          type: integer
          format: int64
          description: The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        geoMapping:
          type: array
          items:
            type: string
          description: The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
        subnets:
          type: array
          items:
            type: object
            properties:
              first:
                type: string
                description: First address in the subnet.
              last:
                type: string
                description: Last address in the subnet.
              scope:
                type: integer
                description: Block size (number of leading bits in the subnet mask).
            description: Subnet first address, scope, and/or last address.
          description: The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
        customHeaders:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Header name.
              value:
                type: string
                description: Header value.
            description: Custom header name and value.
          description: List of custom headers.
      description: Class representing a Traffic Manager endpoint properties.
      type: object
    HeatMapModel:
      description: Class representing a Traffic Manager HeatMap.
      properties:
        startTime:
          type: string
          format: date-time
          description: The beginning of the time window for this HeatMap, inclusive.
        endTime:
          type: string
          format: date-time
          description: The ending of the time window for this HeatMap, exclusive.
        endpoints:
          type: array
          description: The endpoints used in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/HeatMapEndpoint'
        trafficFlows:
          type: array
          description: The traffic flows produced in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/TrafficFlow'
      type: object
    UserMetricsModel:
      description: Class representing Traffic Manager User Metrics.
      properties:
        key:
          type: string
          description: The key returned by the User Metrics operation.
      type: object
    QueryExperience:
      properties:
        endpointId:
          type: integer
          description: The id of the endpoint from the 'endpoints' array which these queries were routed to.
        queryCount:
          type: integer
          description: The number of queries originating from this location.
        latency:
          type: number
          format: double
          description: The latency experienced by queries originating from this location.
      required:
        - endpointId
        - queryCount
      description: Class representing a Traffic Manager HeatMap query experience properties.
      type: object
    TrafficFlow:
      properties:
        sourceIp:
          type: string
          description: The IP address that this query experience originated from.
        latitude:
          type: number
          format: double
          description: The approximate latitude that these queries originated from.
        longitude:
          type: number
          format: double
          description: The approximate longitude that these queries originated from.
        queryExperiences:
          type: array
          description: The query experiences produced in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/QueryExperience'
      description: Class representing a Traffic Manager HeatMap traffic flow properties.
      type: object
    HeatMapProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: The beginning of the time window for this HeatMap, inclusive.
        endTime:
          type: string
          format: date-time
          description: The ending of the time window for this HeatMap, exclusive.
        endpoints:
          type: array
          description: The endpoints used in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/HeatMapEndpoint'
        trafficFlows:
          type: array
          description: The traffic flows produced in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/TrafficFlow'
      description: Class representing a Traffic Manager HeatMap properties.
      type: object
    HeatMapEndpoint:
      properties:
        resourceId:
          type: string
          description: The ARM Resource ID of this Traffic Manager endpoint.
        endpointId:
          type: integer
          description: A number uniquely identifying this endpoint in query experiences.
      description: Class which is a sparse representation of a Traffic Manager endpoint.
      type: object
    Endpoint:
      description: Class representing a Traffic Manager endpoint.
      properties:
        targetResourceId:
          type: string
          description: The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
        target:
          type: string
          description: The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
        endpointStatus:
          type: string
          description: The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EndpointStatus
            modelAsString: true
        weight:
          type: integer
          format: int64
          description: The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
        priority:
          type: integer
          format: int64
          description: The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
        endpointLocation:
          type: string
          description: Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
        endpointMonitorStatus:
          type: string
          description: The monitoring status of the endpoint.
          enum:
            - CheckingEndpoint
            - Online
            - Degraded
            - Disabled
            - Inactive
            - Stopped
          x-ms-enum:
            name: EndpointMonitorStatus
            modelAsString: true
        minChildEndpoints:
          type: integer
          format: int64
          description: The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        minChildEndpointsIPv4:
          type: integer
          format: int64
          description: The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        minChildEndpointsIPv6:
          type: integer
          format: int64
          description: The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        geoMapping:
          type: array
          items:
            type: string
          description: The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
        subnets:
          type: array
          items:
            type: object
            properties:
              first:
                type: string
                description: First address in the subnet.
              last:
                type: string
                description: Last address in the subnet.
              scope:
                type: integer
                description: Block size (number of leading bits in the subnet mask).
            description: Subnet first address, scope, and/or last address.
          description: The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
        customHeaders:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Header name.
              value:
                type: string
                description: Header value.
            description: Custom header name and value.
          description: List of custom headers.
      type: object
    CheckTrafficManagerRelativeDnsNameAvailabilityParameters:
      properties:
        name:
          type: string
          description: The name of the resource.
        type:
          type: string
          description: The type of the resource.
      description: Parameters supplied to check Traffic Manager name operation.
      type: object
    DnsConfig:
      properties:
        relativeName:
          type: string
          description: The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
        fqdn:
          type: string
          readOnly: true
          description: The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
        ttl:
          type: integer
          format: int64
          description: The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
      description: Class containing DNS settings in a Traffic Manager profile.
      type: object
    MonitorConfig:
      properties:
        profileMonitorStatus:
          type: string
          description: The profile-level monitoring status of the Traffic Manager profile.
          enum:
            - CheckingEndpoints
            - Online
            - Degraded
            - Disabled
            - Inactive
          x-ms-enum:
            name: ProfileMonitorStatus
            modelAsString: true
        protocol:
          type: string
          description: The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
          enum:
            - HTTP
            - HTTPS
            - TCP
          x-ms-enum:
            name: MonitorProtocol
            modelAsString: true
        port:
          type: integer
          format: int64
          description: The TCP port used to probe for endpoint health.
        path:
          type: string
          description: The path relative to the endpoint domain name used to probe for endpoint health.
        intervalInSeconds:
          type: integer
          format: int64
          description: The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
        timeoutInSeconds:
          type: integer
          format: int64
          description: The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
        toleratedNumberOfFailures:
          type: integer
          format: int64
          description: The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
        customHeaders:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Header name.
              value:
                type: string
                description: Header value.
            description: Custom header name and value.
          description: List of custom headers.
        expectedStatusCodeRanges:
          type: array
          items:
            type: object
            properties:
              min:
                type: integer
                description: Min status code.
              max:
                type: integer
                description: Max status code.
            description: Min and max value of a status code range.
          description: List of expected status code ranges.
      description: Class containing endpoint monitoring settings in a Traffic Manager profile.
      type: object
    ProfileProperties:
      properties:
        profileStatus:
          type: string
          description: The status of the Traffic Manager profile.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ProfileStatus
            modelAsString: true
        trafficRoutingMethod:
          type: string
          description: The traffic routing method of the Traffic Manager profile.
          enum:
            - Performance
            - Priority
            - Weighted
            - Geographic
            - MultiValue
            - Subnet
          x-ms-enum:
            name: TrafficRoutingMethod
            modelAsString: true
        dnsConfig:
          $ref: '#/components/schemas/DnsConfig'
          description: The DNS settings of the Traffic Manager profile.
        monitorConfig:
          $ref: '#/components/schemas/MonitorConfig'
          description: The endpoint monitoring settings of the Traffic Manager profile.
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
          description: The list of endpoints in the Traffic Manager profile.
        trafficViewEnrollmentStatus:
          type: string
          description: Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: TrafficViewEnrollmentStatus
            modelAsString: true
        allowedEndpointRecordTypes:
          type: array
          items:
            $ref: '#/components/schemas/AllowedEndpointRecordType'
          description: The list of allowed endpoint record types.
        maxReturn:
          type: integer
          description: Maximum number of endpoints to be returned for MultiValue routing type.
          format: int64
      description: Class representing the Traffic Manager profile properties.
      type: object
    AllowedEndpointRecordType:
      description: The allowed type DNS record types for this profile.
      type: string
      enum:
        - DomainName
        - IPv4Address
        - IPv6Address
        - Any
      x-ms-enum:
        name: AllowedEndpointRecordType
        modelAsString: true
    Profile:
      description: Class representing a Traffic Manager profile.
      properties:
        profileStatus:
          type: string
          description: The status of the Traffic Manager profile.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ProfileStatus
            modelAsString: true
        trafficRoutingMethod:
          type: string
          description: The traffic routing method of the Traffic Manager profile.
          enum:
            - Performance
            - Priority
            - Weighted
            - Geographic
            - MultiValue
            - Subnet
          x-ms-enum:
            name: TrafficRoutingMethod
            modelAsString: true
        dnsConfig:
          $ref: '#/components/schemas/DnsConfig'
          description: The DNS settings of the Traffic Manager profile.
        monitorConfig:
          $ref: '#/components/schemas/MonitorConfig'
          description: The endpoint monitoring settings of the Traffic Manager profile.
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
          description: The list of endpoints in the Traffic Manager profile.
        trafficViewEnrollmentStatus:
          type: string
          description: Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: TrafficViewEnrollmentStatus
            modelAsString: true
        allowedEndpointRecordTypes:
          type: array
          items:
            $ref: '#/components/schemas/AllowedEndpointRecordType'
          description: The list of allowed endpoint record types.
        maxReturn:
          type: integer
          description: Maximum number of endpoints to be returned for MultiValue routing type.
          format: int64
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The Azure Region where the resource lives
      type: object
    ProfileListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
          description: Gets the list of Traffic manager profiles.
      description: The list Traffic Manager profiles operation response.
      type: object
    TrafficManagerNameAvailability:
      properties:
        name:
          type: string
          description: The relative name.
        type:
          type: string
          description: Traffic Manager profile resource type.
        nameAvailable:
          type: boolean
          description: Describes whether the relative name is available or not.
        reason:
          type: string
          description: The reason why the name is not available, when applicable.
        message:
          type: string
          description: Descriptive message that explains why the name is not available, when applicable.
      description: Class representing a Traffic Manager Name Availability response.
      type: object
    Region:
      properties:
        code:
          type: string
          description: The code of the region
        name:
          type: string
          description: The name of the region
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
          description: The list of Regions grouped under this Region in the Geographic Hierarchy.
      description: Class representing a region in the Geographic hierarchy used with the Geographic traffic routing method.
      type: object
    GeographicHierarchyProperties:
      properties:
        geographicHierarchy:
          $ref: '#/components/schemas/Region'
          description: The region at the root of the hierarchy from all the regions in the hierarchy can be retrieved.
      description: Class representing the properties of the Geographic hierarchy used with the Geographic traffic routing method.
      type: object
    TrafficManagerGeographicHierarchy:
      description: Class representing the Geographic hierarchy used with the Geographic traffic routing method.
      properties:
        geographicHierarchy:
          $ref: '#/components/schemas/Region'
          description: The region at the root of the hierarchy from all the regions in the hierarchy can be retrieved.
      type: object
    UserMetricsProperties:
      properties:
        key:
          type: string
          description: The key returned by the User Metrics operation.
      description: Class representing a Traffic Manager Real User Metrics key response.
      type: object
    Resource:
      description: The core properties of ARM resources
      properties:
        id:
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
        name:
          type: string
          description: The name of the resource
        type:
          type: string
          description: The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
      x-ms-azure-resource: true
      type: object
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The Azure Region where the resource lives
        id:
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
        name:
          type: string
          description: The name of the resource
        type:
          type: string
          description: The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      properties:
        id:
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
        name:
          type: string
          description: The name of the resource
        type:
          type: string
          description: The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
      type: object
    CloudError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: The content of the error.
      description: An error returned by the Azure Resource Manager
      x-ms-external: true
    CloudErrorBody:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        target:
          type: string
          description: Error target
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          description: Error details
      description: The content of an error returned by the Azure Resource Manager
      x-ms-external: true
  x-stackQL-resources:
    endpoints:
      id: azure.traffic_manager.endpoints
      name: endpoints
      title: Endpoints
      methods:
        Endpoints_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}~1?api-version=2018-08-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Endpoints_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}~1?api-version=2018-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Endpoints_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}~1?api-version=2018-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Endpoints_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}~1?api-version=2018-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/Endpoints_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/Endpoints_Delete'
    profiles:
      id: azure.traffic_manager.profiles
      name: profiles
      title: Profiles
      methods:
        Profiles_CheckTrafficManagerRelativeDnsNameAvailability:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Network~1checkTrafficManagerNameAvailability~1?api-version=2018-08-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Profiles_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1?api-version=2018-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Profiles_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1?api-version=2018-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Profiles_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1?api-version=2018-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Profiles_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1?api-version=2018-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Profiles_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1?api-version=2018-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Profiles_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1?api-version=2018-08-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/Profiles_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/Profiles_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/Profiles_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/Profiles_Delete'
    geographic_hierarchies:
      id: azure.traffic_manager.geographic_hierarchies
      name: geographic_hierarchies
      title: Geographic_hierarchies
      methods:
        GeographicHierarchies_GetDefault:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Network~1trafficManagerGeographicHierarchies~1default~1?api-version=2018-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    heat_map:
      id: azure.traffic_manager.heat_map
      name: heat_map
      title: Heat_map
      methods:
        HeatMap_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1heatMaps~1{heatMapType}~1?api-version=2018-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    user_metrics_keys:
      id: azure.traffic_manager.user_metrics_keys
      name: user_metrics_keys
      title: User_metrics_keys
      methods:
        TrafficManagerUserMetricsKeys_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficManagerUserMetricsKeys~1default~1?api-version=2018-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        TrafficManagerUserMetricsKeys_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficManagerUserMetricsKeys~1default~1?api-version=2018-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        TrafficManagerUserMetricsKeys_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficManagerUserMetricsKeys~1default~1?api-version=2018-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/user_metrics_keys/methods/TrafficManagerUserMetricsKeys_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_metrics_keys/methods/TrafficManagerUserMetricsKeys_Delete'
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}/?api-version=2018-08-01:
    patch:
      tags:
        - Endpoints
      operationId: Endpoints_Update
      description: Update a Traffic Manager endpoint.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager endpoint to be updated.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint to be updated.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint to be updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager endpoint parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '200':
          description: The updated Traffic Manager endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: endpoints
      x-stackQL-verb: exec
    get:
      tags:
        - Endpoints
      operationId: Endpoints_Get
      description: Gets a Traffic Manager endpoint.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager endpoint.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: endpoints
      x-stackQL-verb: exec
    put:
      tags:
        - Endpoints
      operationId: Endpoints_CreateOrUpdate
      description: Create or update a Traffic Manager endpoint.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager endpoint to be created or updated.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint to be created or updated.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint to be created or updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager endpoint parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '200':
          description: The created or updated Endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '201':
          description: The created or updated Endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: endpoints
      x-stackQL-verb: insert
    delete:
      tags:
        - Endpoints
      operationId: Endpoints_Delete
      description: Deletes a Traffic Manager endpoint.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager endpoint to be deleted.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint to be deleted.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint to be deleted.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager Endpoint was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOperationResult'
        '204':
          description: The Traffic Manager Endpoint does not exist. It could have been deleted on a previous request.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: endpoints
      x-stackQL-verb: delete
  /providers/Microsoft.Network/checkTrafficManagerNameAvailability/?api-version=2018-08-01:
    post:
      tags:
        - Profiles
      operationId: Profiles_CheckTrafficManagerRelativeDnsNameAvailability
      description: Checks the availability of a Traffic Manager Relative DNS name.
      requestBody:
        description: The Traffic Manager name parameters supplied to the CheckTrafficManagerNameAvailability operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckTrafficManagerRelativeDnsNameAvailabilityParameters'
      parameters: []
      responses:
        '200':
          description: The Traffic Manager Name Availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficManagerNameAvailability'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/?api-version=2018-08-01:
    get:
      tags:
        - Profiles
      x-ms-pageable:
        nextLinkName: null
      operationId: Profiles_ListByResourceGroup
      description: Lists all Traffic Manager profiles within a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager profiles to be listed.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Traffic Manager profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficmanagerprofiles/?api-version=2018-08-01:
    get:
      tags:
        - Profiles
      x-ms-pageable:
        nextLinkName: null
      operationId: Profiles_ListBySubscription
      description: Lists all Traffic Manager profiles within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Traffic Manager profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/?api-version=2018-08-01:
    get:
      tags:
        - Profiles
      operationId: Profiles_Get
      description: Gets a Traffic Manager profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: exec
    put:
      tags:
        - Profiles
      operationId: Profiles_CreateOrUpdate
      description: Create or update a Traffic Manager profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager profile parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: The created or updated Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '201':
          description: The created or updated Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: insert
    delete:
      tags:
        - Profiles
      operationId: Profiles_Delete
      description: Deletes a Traffic Manager profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager profile to be deleted.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile to be deleted.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager Profile was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOperationResult'
        '204':
          description: The profile does not exist. It could have been deleted on a previous request.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: delete
    patch:
      tags:
        - Profiles
      operationId: Profiles_Update
      description: Update a Traffic Manager profile.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager profile parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: The updated Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: profiles
      x-stackQL-verb: exec
  /providers/Microsoft.Network/trafficManagerGeographicHierarchies/default/?api-version=2018-08-01:
    get:
      tags:
        - GeographicHierarchies
      operationId: GeographicHierarchies_GetDefault
      description: Gets the default Geographic Hierarchy used by the Geographic traffic routing method.
      parameters: []
      responses:
        '200':
          description: The default Geographic Hierarchy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficManagerGeographicHierarchy'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: geographic_hierarchies
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/heatMaps/{heatMapType}/?api-version=2018-08-01:
    get:
      tags:
        - HeatMaps
      operationId: HeatMap_Get
      description: Gets latest heatmap for Traffic Manager profile.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group containing the Traffic Manager endpoint.
          required: true
          schema:
            type: string
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: heatMapType
          in: path
          description: The type of HeatMap for the Traffic Manager profile.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: HeatMapType
              modelAsString: false
            type: string
        - name: topLeft
          in: query
          description: The top left latitude,longitude pair of the rectangular viewport to query for.
          allowEmptyValue: true
          required: false
          style: form
          schema:
            minItems: 2
            maxItems: 2
            type: array
            items:
              type: number
              format: double
        - name: botRight
          in: query
          description: The bottom right latitude,longitude pair of the rectangular viewport to query for.
          allowEmptyValue: true
          required: false
          style: form
          schema:
            minItems: 2
            maxItems: 2
            type: array
            items:
              type: number
              format: double
      responses:
        '200':
          description: The Traffic Manager heatmap.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatMapModel'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: heat_map
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default/?api-version=2018-08-01:
    get:
      tags:
        - RealUserMetrics
      operationId: TrafficManagerUserMetricsKeys_Get
      description: Get the subscription-level key used for Real User Metrics collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The subscription-level Traffic Manager Real User Metrics key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMetricsModel'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: user_metrics_keys
      x-stackQL-verb: exec
    put:
      tags:
        - RealUserMetrics
      operationId: TrafficManagerUserMetricsKeys_CreateOrUpdate
      description: Create or update a subscription-level key used for Real User Metrics collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '201':
          description: A new subscription-level key has been created for Real User Metrics collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMetricsModel'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: user_metrics_keys
      x-stackQL-verb: insert
    delete:
      tags:
        - RealUserMetrics
      operationId: TrafficManagerUserMetricsKeys_Delete
      description: Delete a subscription-level key used for Real User Metrics collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager Real User Metrics key was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOperationResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: user_metrics_keys
      x-stackQL-verb: delete
