openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Hybrid Network (Microsoft.HybridNetwork)
  description: Hybrid Network
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-29-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Device:
      description: Device resource.
      properties:
        status:
          type: string
          readOnly: true
          description: The current device status.
          enum:
            - Unknown
            - NotRegistered
            - Registered
            - Deleted
          x-ms-enum:
            name: Status
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the device resource.
        deviceType:
          type: string
          description: The type of the device.
          enum:
            - Unknown
            - AzureStackEdge
          x-ms-enum:
            name: DeviceType
            modelAsString: true
        networkFunctions:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of network functions deployed on the device.
        systemData:
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    AzureStackEdgeFormat:
      description: The reference to the Azure stack edge device.
      required:
        - azureStackEdge
      x-ms-discriminator-value: AzureStackEdge
      properties:
        status:
          type: string
          readOnly: true
          description: The current device status.
          enum:
            - Unknown
            - NotRegistered
            - Registered
            - Deleted
          x-ms-enum:
            name: Status
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the device resource.
        deviceType:
          type: string
          description: The type of the device.
          enum:
            - Unknown
            - AzureStackEdge
          x-ms-enum:
            name: DeviceType
            modelAsString: true
        networkFunctions:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of network functions deployed on the device.
        azureStackEdge:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the Azure stack edge device.
      type: object
    DevicePropertiesFormat:
      type: object
      description: Device properties.
      required:
        - deviceType
      discriminator:
        propertyName: deviceType
      properties:
        status:
          type: string
          readOnly: true
          description: The current device status.
          enum:
            - Unknown
            - NotRegistered
            - Registered
            - Deleted
          x-ms-enum:
            name: Status
            modelAsString: true
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the device resource.
        deviceType:
          type: string
          description: The type of the device.
          enum:
            - Unknown
            - AzureStackEdge
          x-ms-enum:
            name: DeviceType
            modelAsString: true
        networkFunctions:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The list of network functions deployed on the device.
    DeviceRegistrationKey:
      type: object
      description: The device registration key.
      properties:
        registrationKey:
          readOnly: true
          type: string
          description: The registration key for the device.
    DeviceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          description: A list of devices.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for devices API service call.
    Vendor:
      description: Vendor resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the vendor resource.
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          readOnly: true
          description: A list of IDs of the vendor skus offered by the vendor.
        systemData:
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    VendorPropertiesFormat:
      type: object
      description: Vendor properties.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the vendor resource.
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          readOnly: true
          description: A list of IDs of the vendor skus offered by the vendor.
    VendorSku:
      description: Sku sub resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the vendor sku sub resource.
        skuType:
          $ref: '#/components/schemas/SkuType'
          description: The sku type.
        deploymentMode:
          type: string
          description: The sku deployment mode.
          enum:
            - Unknown
            - Azure
            - PrivateEdgeZone
          x-ms-enum:
            name: SkuDeploymentMode
            modelAsString: true
        networkFunctionType:
          type: string
          description: The network function type.
          enum:
            - Unknown
            - VirtualNetworkFunction
            - ContainerizedNetworkFunction
          x-ms-enum:
            name: NetworkFunctionType
            modelAsString: true
        preview:
          type: boolean
          description: Indicates if the vendor sku is in preview mode.
        managedApplicationParameters:
          $ref: '#/components/schemas/ManagedApplicationParameters'
          description: The parameters for the managed application to be supplied by the vendor.
        managedApplicationTemplate:
          type: object
          description: The template for the managed application deployment.
        networkFunctionTemplate:
          $ref: '#/components/schemas/NetworkFunctionTemplate'
          description: The template definition of the network function.
        systemData:
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    VendorSkuPropertiesFormat:
      type: object
      description: Sku properties
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the vendor sku sub resource.
        skuType:
          $ref: '#/components/schemas/SkuType'
          description: The sku type.
        deploymentMode:
          type: string
          description: The sku deployment mode.
          enum:
            - Unknown
            - Azure
            - PrivateEdgeZone
          x-ms-enum:
            name: SkuDeploymentMode
            modelAsString: true
        networkFunctionType:
          type: string
          description: The network function type.
          enum:
            - Unknown
            - VirtualNetworkFunction
            - ContainerizedNetworkFunction
          x-ms-enum:
            name: NetworkFunctionType
            modelAsString: true
        preview:
          type: boolean
          description: Indicates if the vendor sku is in preview mode.
        managedApplicationParameters:
          $ref: '#/components/schemas/ManagedApplicationParameters'
          description: The parameters for the managed application to be supplied by the vendor.
        managedApplicationTemplate:
          type: object
          description: The template for the managed application deployment.
        networkFunctionTemplate:
          $ref: '#/components/schemas/NetworkFunctionTemplate'
          description: The template definition of the network function.
    VendorSkuListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VendorSku'
          description: A list of vendor skus offered by the vendor.
        nextLink:
          readOnly: true
          type: string
          description: The URI to get the next set of results.
      description: Response for list vendor sku API service call.
    VendorListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Vendor'
          description: A list of vendors.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for vendors API service call.
    NetworkFunctionTemplate:
      type: object
      properties:
        networkFunctionRoleConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionRoleConfiguration'
          x-ms-identifiers:
            - roleName
          description: An array of network function role definitions.
      description: The network function template.
    NetworkFunctionRoleConfiguration:
      type: object
      description: Network function role configuration.
      properties:
        roleName:
          type: string
          description: The name of the network function role.
        roleType:
          type: string
          description: Role type.
          enum:
            - Unknown
            - VirtualMachine
          x-ms-enum:
            name: NetworkFunctionRoleConfigurationType
            modelAsString: true
        virtualMachineSize:
          type: string
          description: The size of the virtual machine.
          enum:
            - Unknown
            - Standard_D1_v2
            - Standard_D2_v2
            - Standard_D3_v2
            - Standard_D4_v2
            - Standard_D5_v2
            - Standard_D11_v2
            - Standard_D12_v2
            - Standard_D13_v2
            - Standard_DS1_v2
            - Standard_DS2_v2
            - Standard_DS3_v2
            - Standard_DS4_v2
            - Standard_DS5_v2
            - Standard_DS11_v2
            - Standard_DS12_v2
            - Standard_DS13_v2
            - Standard_F1
            - Standard_F2
            - Standard_F4
            - Standard_F8
            - Standard_F16
            - Standard_F1s
            - Standard_F2s
            - Standard_F4s
            - Standard_F8s
            - Standard_F16s
          x-ms-enum:
            name: VirtualMachineSizeTypes
            modelAsString: true
        osProfile:
          description: Specifies the operating system settings for the role instance. This value can be updated during the deployment of network function.
          $ref: '#/components/schemas/OsProfile'
        userDataTemplate:
          $ref: '#/components/schemas/UserDataTemplate'
          description: The user data template for customers. This is a json schema template describing the format and data type of user data parameters.
        userDataParameters:
          $ref: '#/components/schemas/UserDataParameters'
          description: The user parameters for customers. The format of user data parameters has to be matched with the provided user data template.
        networkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers: []
          description: The network interface configurations.
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        customProfile:
          $ref: '#/components/schemas/CustomProfile'
          description: Specifies the custom settings for the virtual machine.
    ImageReference:
      type: object
      properties:
        publisher:
          type: string
          description: The image publisher.
        offer:
          type: string
          description: Specifies the offer of the image used to create the virtual machine.
        sku:
          type: string
          description: The image SKU.
        version:
          type: string
          description: Specifies the version of the image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
        exactVersion:
          type: string
          description: Specifies in decimal numbers, the exact version of image used to create the virtual machine.
      description: The image reference properties.
    StorageProfile:
      type: object
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: The image reference properties.
        osDisk:
          $ref: '#/components/schemas/OsDisk'
          description: Specifies information about the operating system disk used by the virtual machine.
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/DataDisk'
          x-ms-identifiers:
            - name
          description: Specifies the parameters that are used to add a data disk to a virtual machine.
      description: Specifies the storage settings for the virtual machine disks.
    OsDisk:
      type: object
      properties:
        osType:
          type: string
          description: The OS type.
          enum:
            - Unknown
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: true
        name:
          type: string
          description: The VHD name.
        vhd:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The virtual hard disk.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of os disk in gigabytes. This is the fully expanded disk size needed of the VHD image on the ASE. This disk size should be greater than the size of the VHD provided in vhdUri.
      description: Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
    VirtualHardDisk:
      type: object
      properties:
        uri:
          type: string
          x-ms-secret: true
          x-ms-mutability:
            - create
            - update
          description: Specifies the virtual hard disk's uri.
      description: Describes the uri of a disk.
    DataDisk:
      type: object
      properties:
        createOption:
          type: string
          description: Specifies how the virtual machine should be created.
          enum:
            - Unknown
            - Empty
          x-ms-enum:
            name: DiskCreateOptionTypes
            modelAsString: true
        name:
          type: string
          description: The name of data disk.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image.
      description: Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
    CustomProfile:
      type: object
      properties:
        metadataConfigurationPath:
          type: string
          description: Path for metadata configuration.
      description: Specifies the custom settings for the virtual machine.
    PreviewSubscription:
      x-ms-azure-resource: true
      description: Customer subscription which can use a sku.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the PreviewSubscription resource.
        name:
          type: string
          readOnly: true
          description: The preview subscription ID.
        id:
          type: string
          readOnly: true
          description: The ARM ID of the resource.
        type:
          type: string
          readOnly: true
          description: The type of the resource.
        systemData:
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    PreviewSubscriptionProperties:
      description: PreviewSubscription properties
      type: object
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the PreviewSubscription resource.
    PreviewSubscriptionsList:
      type: object
      description: A list of customer subscriptions which can use a sku.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PreviewSubscription'
          description: A list of preview subscriptions.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
    SkuCredential:
      description: The Sku credential definition.
      type: object
      properties:
        username:
          type: string
          description: The username of the sku credential.
        acrToken:
          type: string
          description: The credential value.
        acrServerUrl:
          type: string
          description: The Acr server url
        repositories:
          type: array
          description: The repositories that could be accessed using the current credential.
          items:
            type: string
            description: The repository that could be accessed using the current credential.
        expiry:
          type: string
          format: date-time
          description: The UTC time when credential will expire.
    VendorNetworkFunctionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VendorNetworkFunction'
          description: A list of vendor network functions.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
      description: Response for vendors API service call.
    VendorNetworkFunction:
      description: Vendor network function sub resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the vendor network function sub resource.
        vendorProvisioningState:
          $ref: '#/components/schemas/VendorProvisioningState'
          description: The vendor controlled provisioning state of the vendor network function.
        skuName:
          readOnly: true
          type: string
          description: The name of the sku. Once set, it cannot be updated.
        skuType:
          $ref: '#/components/schemas/SkuType'
          description: The sku type.
          readOnly: true
        networkFunctionVendorConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionVendorConfiguration'
          x-ms-identifiers: []
          description: An array of network function vendor configurations.
        systemData:
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    VendorNetworkFunctionPropertiesFormat:
      type: object
      description: Vendor network function properties.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the vendor network function sub resource.
        vendorProvisioningState:
          $ref: '#/components/schemas/VendorProvisioningState'
          description: The vendor controlled provisioning state of the vendor network function.
        skuName:
          readOnly: true
          type: string
          description: The name of the sku. Once set, it cannot be updated.
        skuType:
          $ref: '#/components/schemas/SkuType'
          description: The sku type.
          readOnly: true
        networkFunctionVendorConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionVendorConfiguration'
          x-ms-identifiers: []
          description: An array of network function vendor configurations.
    NetworkFunctionVendorConfiguration:
      type: object
      properties:
        roleName:
          type: string
          description: The name of the vendor network function role.
        osProfile:
          description: Specifies the operating system settings for the role instance.
          $ref: '#/components/schemas/OsProfile'
        userDataParameters:
          $ref: '#/components/schemas/UserDataParameters'
          readOnly: true
          description: The user parameters from the customer.
        networkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers: []
          description: The network interface configurations.
      description: Network function vendor configuration.
    NetworkFunctionRoleInstanceListResult:
      type: object
      description: List of role instances of vendor network function.
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RoleInstance'
          description: A list of role instances.
        nextLink:
          readOnly: true
          type: string
          description: The URL to get the next set of results.
    RoleInstance:
      x-ms-azure-resource: true
      description: The role instance sub resource.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the RoleInstance resource.
        operationalState:
          type: string
          description: The operational state of the role instance.
          enum:
            - Unknown
            - Stopped
            - Running
            - Stopping
            - Starting
          x-ms-enum:
            name: OperationalState
            modelAsString: true
        name:
          type: string
          description: The role instance name.
        id:
          type: string
          description: The ARM ID of the resource.
        type:
          type: string
          description: The type of the resource.
        systemData:
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    RoleInstanceProperties:
      type: object
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the RoleInstance resource.
        operationalState:
          type: string
          description: The operational state of the role instance.
          enum:
            - Unknown
            - Stopped
            - Running
            - Stopping
            - Starting
          x-ms-enum:
            name: OperationalState
            modelAsString: true
      description: The role instance properties of the network function.
    SubResource:
      type: object
      properties:
        id:
          type: string
          description: Resource ID.
      description: Reference to another sub resource.
      x-ms-azure-resource: true
    ProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Unknown
        - Succeeded
        - Accepted
        - Deleting
        - Failed
        - Canceled
        - Deleted
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    VendorProvisioningState:
      type: string
      description: The current vendor provisioning state.
      enum:
        - Unknown
        - NotProvisioned
        - Provisioning
        - Provisioned
        - Deprovisioned
        - UserDataValidationFailed
      x-ms-enum:
        name: VendorProvisioningState
        modelAsString: true
    TagsObject:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
    NetworkInterface:
      type: object
      description: Network interface properties.
      properties:
        networkInterfaceName:
          type: string
          description: The name of the network interface.
        macAddress:
          type: string
          description: The MAC address of the network interface.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceIPConfiguration'
          x-ms-identifiers: []
          description: A list of IP configurations of the network interface.
        vmSwitchType:
          type: string
          description: The type of the VM switch.
          enum:
            - Unknown
            - Management
            - Wan
            - Lan
          x-ms-enum:
            name: VMSwitchType
            modelAsString: true
    NetworkInterfaceIPConfiguration:
      type: object
      description: Network interface IP configuration properties.
      properties:
        ipAllocationMethod:
          type: string
          description: IP address allocation method.
          enum:
            - Unknown
            - Static
            - Dynamic
          x-ms-enum:
            name: IPAllocationMethod
            modelAsString: true
        ipAddress:
          type: string
          description: The value of the IP address.
        subnet:
          type: string
          description: The value of the subnet.
        gateway:
          type: string
          description: The value of the gateway.
        ipVersion:
          type: string
          description: IP address version.
          enum:
            - Unknown
            - IPv4
          x-ms-enum:
            name: IPVersion
            modelAsString: true
        dnsServers:
          type: array
          description: The list of DNS servers IP addresses.
          items:
            type: string
    UserDataTemplate:
      description: The user data template.
      properties: {}
      type: object
    UserDataParameters:
      description: The user data parameters.
      properties: {}
      type: object
    ManagedApplicationParameters:
      description: The parameters for the managed application.
      properties: {}
      type: object
    SkuType:
      type: string
      description: Sku type.
      enum:
        - Unknown
        - EvolvedPacketCore
        - SDWAN
        - Firewall
      x-ms-enum:
        name: SkuType
        modelAsString: true
    OsProfile:
      type: object
      properties:
        adminUsername:
          type: string
          description: Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for Linux on Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json) <br><br> For running non-endorsed distributions, see [Information for Non-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
        customData:
          type: string
          description: 'Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the virtual machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file. For more information see [Custom Data on Azure VMs](https://azure.microsoft.com/en-us/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)'
        customDataRequired:
          type: boolean
          default: true
          description: Indicates if custom data is required to deploy this role.
      description: Specifies the operating system settings for the role instance.
    LinuxConfiguration:
      type: object
      properties:
        ssh:
          $ref: '#/components/schemas/SshConfiguration'
          description: Specifies the ssh key configuration for a Linux OS.
      description: Specifies the Linux operating system settings on the virtual machine.
    SshConfiguration:
      type: object
      properties:
        publicKeys:
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers:
            - path
          description: The list of SSH public keys used to authenticate with linux based VMs.
      description: SSH configuration for Linux based VMs running on Azure
    SshPublicKey:
      type: object
      properties:
        path:
          type: string
          description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
        keyData:
          type: string
          description: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
      description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
    SkuOverview:
      type: object
      properties:
        skuName:
          type: string
          description: The vendor sku name.
        skuType:
          $ref: '#/components/schemas/SkuType'
          description: The vendor sku type.
      description: The network function sku overview.
    NetworkFunctionSkuDetails:
      type: object
      properties:
        skuType:
          $ref: '#/components/schemas/SkuType'
          description: The network function sku type.
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionSkuRoleDetails'
          x-ms-identifiers: []
          description: The network function sku role details.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: The network function sku details.
    VendorDetails:
      type: object
      properties:
        vendorName:
          type: string
          description: The network function vendor name.
        skuList:
          type: array
          items:
            $ref: '#/components/schemas/SkuOverview'
          x-ms-identifiers: []
          description: The network function sku list.
      description: The network function vendor details.
    NetworkFunctionVendor:
      description: The network function vendor.
      properties:
        vendorName:
          type: string
          description: The network function vendor name.
        skuList:
          type: array
          items:
            $ref: '#/components/schemas/SkuOverview'
          x-ms-identifiers: []
          description: The network function sku list.
      type: object
    NetworkFunctionVendorListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionVendor'
          x-ms-identifiers: []
          description: A list of available network function vendors and skus.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: The network function vendor list result.
    NetworkFunctionSkuRoleDetails:
      type: object
      properties:
        roleName:
          type: string
          description: The name of the network function role.
        userDataTemplate:
          $ref: '#/components/schemas/UserDataTemplate'
          description: The user data template for customers.
        userDataParameters:
          $ref: '#/components/schemas/UserDataParameters'
          description: The user parameters for customers.
        networkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers: []
          description: The network interface configuration.
      description: The network function user configuration.
    NetworkFunctionSkuListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SkuOverview'
          x-ms-identifiers: []
          description: The network function vendor sku overview properties.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: A list of available network function skus.
    NetworkFunction:
      description: Network function resource response.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function resource.
        device:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the device resource. Once set, it cannot be updated.
        skuName:
          type: string
          description: The sku name for the network function. Once set, it cannot be updated.
        skuType:
          readOnly: true
          $ref: '#/components/schemas/SkuType'
          description: The sku type for the network function.
        vendorName:
          type: string
          description: The vendor name for the network function. Once set, it cannot be updated.
        serviceKey:
          type: string
          readOnly: true
          description: The service key for the network function resource.
        vendorProvisioningState:
          readOnly: true
          $ref: '#/components/schemas/VendorProvisioningState'
          description: The vendor provisioning state for the network function resource.
        managedApplication:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The resource URI of the managed application.
        managedApplicationParameters:
          $ref: '#/components/schemas/ManagedApplicationParameters'
          description: The parameters for the managed application.
        networkFunctionContainerConfigurations:
          type: object
          description: The network function container configurations from the user.
        networkFunctionUserConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionUserConfiguration'
          x-ms-identifiers: []
          description: The network function configurations from the user.
        etag:
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        systemData:
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NetworkFunctionPropertiesFormat:
      type: object
      description: Network function properties.
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the network function resource.
        device:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the device resource. Once set, it cannot be updated.
        skuName:
          type: string
          description: The sku name for the network function. Once set, it cannot be updated.
        skuType:
          readOnly: true
          $ref: '#/components/schemas/SkuType'
          description: The sku type for the network function.
        vendorName:
          type: string
          description: The vendor name for the network function. Once set, it cannot be updated.
        serviceKey:
          type: string
          readOnly: true
          description: The service key for the network function resource.
        vendorProvisioningState:
          readOnly: true
          $ref: '#/components/schemas/VendorProvisioningState'
          description: The vendor provisioning state for the network function resource.
        managedApplication:
          readOnly: true
          $ref: '#/components/schemas/SubResource'
          description: The resource URI of the managed application.
        managedApplicationParameters:
          $ref: '#/components/schemas/ManagedApplicationParameters'
          description: The parameters for the managed application.
        networkFunctionContainerConfigurations:
          type: object
          description: The network function container configurations from the user.
        networkFunctionUserConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunctionUserConfiguration'
          x-ms-identifiers: []
          description: The network function configurations from the user.
    NetworkFunctionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NetworkFunction'
          description: A list of network function resources in a subscription or resource group.
        nextLink:
          type: string
          readOnly: true
          description: The URL to get the next set of results.
      description: Response for network function API service call.
    NetworkFunctionUserConfiguration:
      type: object
      properties:
        roleName:
          type: string
          description: The name of the network function role.
        userDataParameters:
          $ref: '#/components/schemas/UserDataParameters'
          description: The user data parameters from the customer.
        networkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
          x-ms-identifiers: []
          description: The network interface configuration.
        osProfile:
          type: object
          properties:
            customData:
              type: string
              description: 'Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the virtual machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file. For more information see [Custom Data on Azure VMs](https://azure.microsoft.com/en-us/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)'
          description: Specifies the operating system settings for the role instance.
      description: The network function user configuration.
    ExecuteRequestParameters:
      type: object
      properties:
        serviceEndpoint:
          type: string
          description: The endpoint of service to call.
        requestMetadata:
          $ref: '#/components/schemas/RequestMetadata'
          description: The request metadata.
      required:
        - serviceEndpoint
        - requestMetadata
      description: Payload for execute request post call.
    RequestMetadata:
      type: object
      properties:
        relativePath:
          type: string
          description: The relative path of the request.
        httpMethod:
          type: string
          description: The http method of the request.
          enum:
            - Unknown
            - Post
            - Put
            - Get
            - Patch
            - Delete
          x-ms-enum:
            name: HttpMethod
            modelAsString: true
        serializedBody:
          type: string
          description: The serialized body of the request.
        apiVersion:
          type: string
          description: The api version of the request.
      required:
        - relativePath
        - httpMethod
        - serializedBody
      description: Request metadata of execute request post call payload.
  x-stackQL-resources:
    devices:
      id: azure.hybrid_network.devices
      name: devices
      title: Devices
      methods:
        Devices_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1devices~1{deviceName}~1?api-version=2022-01-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Devices_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1devices~1{deviceName}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Devices_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1devices~1{deviceName}~1?api-version=2022-01-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Devices_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1devices~1{deviceName}~1?api-version=2022-01-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Devices_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1devices~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Devices_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1devices~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Devices_ListRegistrationKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1devices~1{deviceName}~1listRegistrationKey~1?api-version=2022-01-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/Devices_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/devices/methods/Devices_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/devices/methods/Devices_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/Devices_Delete'
    vendors:
      id: azure.hybrid_network.vendors
      name: vendors
      title: Vendors
      methods:
        Vendors_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1?api-version=2022-01-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Vendors_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Vendors_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1?api-version=2022-01-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Vendors_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vendors/methods/Vendors_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/vendors/methods/Vendors_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vendors/methods/Vendors_Delete'
    vendor_skus:
      id: azure.hybrid_network.vendor_skus
      name: vendor_skus
      title: Vendor_skus
      methods:
        VendorSkus_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1?api-version=2022-01-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VendorSkus_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VendorSkus_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1?api-version=2022-01-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VendorSkus_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VendorSkus_ListCredential:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1listCredential~1?api-version=2022-01-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vendor_skus/methods/VendorSkus_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/vendor_skus/methods/VendorSkus_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vendor_skus/methods/VendorSkus_Delete'
    vendor_sku_preview:
      id: azure.hybrid_network.vendor_sku_preview
      name: vendor_sku_preview
      title: Vendor_sku_preview
      methods:
        VendorSkuPreview_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1previewSubscriptions~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VendorSkuPreview_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1previewSubscriptions~1{previewSubscription}~1?api-version=2022-01-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VendorSkuPreview_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1previewSubscriptions~1{previewSubscription}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VendorSkuPreview_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1vendors~1{vendorName}~1vendorSkus~1{skuName}~1previewSubscriptions~1{previewSubscription}~1?api-version=2022-01-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vendor_sku_preview/methods/VendorSkuPreview_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/vendor_sku_preview/methods/VendorSkuPreview_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vendor_sku_preview/methods/VendorSkuPreview_Delete'
    vendor_network_functions:
      id: azure.hybrid_network.vendor_network_functions
      name: vendor_network_functions
      title: Vendor_network_functions
      methods:
        VendorNetworkFunctions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1{serviceKey}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VendorNetworkFunctions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1{serviceKey}~1?api-version=2022-01-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VendorNetworkFunctions_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vendor_network_functions/methods/VendorNetworkFunctions_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/vendor_network_functions/methods/VendorNetworkFunctions_CreateOrUpdate'
        update: []
        delete: []
    role_instances:
      id: azure.hybrid_network.role_instances
      name: role_instances
      title: Role_instances
      methods:
        RoleInstances_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1{serviceKey}~1roleInstances~1{roleInstanceName}~1start~1?api-version=2022-01-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        RoleInstances_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1{serviceKey}~1roleInstances~1{roleInstanceName}~1stop~1?api-version=2022-01-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        RoleInstances_Restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1{serviceKey}~1roleInstances~1{roleInstanceName}~1restart~1?api-version=2022-01-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        RoleInstances_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1{serviceKey}~1roleInstances~1{roleInstanceName}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RoleInstances_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1locations~1{locationName}~1vendors~1{vendorName}~1networkFunctions~1{serviceKey}~1roleInstances~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_instances/methods/RoleInstances_List'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.hybrid_network.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.HybridNetwork~1operations~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    network_function_vendors:
      id: azure.hybrid_network.network_function_vendors
      name: network_function_vendors
      title: Network_function_vendors
      methods:
        networkFunctionVendors_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1networkFunctionVendors~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_function_vendors/methods/networkFunctionVendors_List'
        insert: []
        update: []
        delete: []
    network_function_vendor_skus:
      id: azure.hybrid_network.network_function_vendor_skus
      name: network_function_vendor_skus
      title: Network_function_vendor_skus
      methods:
        NetworkFunctionVendorSkus_ListByVendor:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1networkFunctionVendors~1{vendorName}~1vendorSkus~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        networkFunctionVendorSkus_ListBySku:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1networkFunctionVendors~1{vendorName}~1vendorSkus~1{vendorSkuName}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_function_vendor_skus/methods/networkFunctionVendorSkus_ListBySku'
          - $ref: '#/components/x-stackQL-resources/network_function_vendor_skus/methods/NetworkFunctionVendorSkus_ListByVendor'
        insert: []
        update: []
        delete: []
    network_functions:
      id: azure.hybrid_network.network_functions
      name: network_functions
      title: Network_functions
      methods:
        NetworkFunctions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2022-01-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NetworkFunctions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkFunctions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2022-01-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NetworkFunctions_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1?api-version=2022-01-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NetworkFunctions_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkFunctions_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1?api-version=2022-01-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NetworkFunctions_ExecuteRequest:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridNetwork~1networkFunctions~1{networkFunctionName}~1executeRequest~1?api-version=2022-01-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/NetworkFunctions_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/NetworkFunctions_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/NetworkFunctions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_functions/methods/NetworkFunctions_Delete'
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/devices/{deviceName}/?api-version=2022-01-01-preview:
    delete:
      tags:
        - Devices
      operationId: Devices_Delete
      description: Deletes the specified device.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deviceName
          in: path
          description: The name of the device resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation is successful.
        '202':
          description: Accepted. Sets the provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
        '204':
          description: Request is successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: devices
      x-stackQL-verb: delete
    get:
      tags:
        - Devices
      operationId: Devices_Get
      description: Gets information about the specified device.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deviceName
          in: path
          description: The name of the device resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting device resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: devices
      x-stackQL-verb: exec
    put:
      tags:
        - Devices
      operationId: Devices_CreateOrUpdate
      description: Creates or updates a device.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deviceName
          in: path
          description: Resource name for the device resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update device operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: Creation or update is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '201':
          description: Creation or update is successful. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: devices
      x-stackQL-verb: insert
    patch:
      tags:
        - Devices
      operationId: Devices_UpdateTags
      description: Updates device tags.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deviceName
          in: path
          description: The name of the device resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the update device tags operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update is successful. The operation returns the resulting device resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/devices/?api-version=2022-01-01-preview:
    get:
      tags:
        - Devices
      operationId: Devices_ListBySubscription
      description: Lists all the devices in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of device resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/devices/?api-version=2022-01-01-preview:
    get:
      tags:
        - Devices
      operationId: Devices_ListByResourceGroup
      description: Lists all the device resource in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of device resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: devices
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/devices/{deviceName}/listRegistrationKey/?api-version=2022-01-01-preview:
    post:
      tags:
        - Devices
      operationId: Devices_ListRegistrationKey
      description: List the registration key for the device.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deviceName
          in: path
          description: The name of the device resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The registration key information for the device.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegistrationKey'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: devices
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/?api-version=2022-01-01-preview:
    delete:
      tags:
        - Vendors
      operationId: Vendors_Delete
      description: Deletes the specified vendor.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Request is successful.
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vendors
      x-stackQL-verb: delete
    get:
      tags:
        - Vendors
      operationId: Vendors_Get
      description: Gets information about the specified vendor.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting vendor resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vendors
      x-stackQL-verb: exec
    put:
      tags:
        - Vendors
      operationId: Vendors_CreateOrUpdate
      description: Creates or updates a vendor.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create vendor operation.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
      responses:
        '200':
          description: OK. Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        '201':
          description: Created. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vendors
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/?api-version=2022-01-01-preview:
    get:
      tags:
        - Vendors
      operationId: Vendors_ListBySubscription
      description: Lists all the vendors in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of vendor resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vendors
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/vendorSkus/{skuName}/?api-version=2022-01-01-preview:
    delete:
      tags:
        - VendorSkus
      operationId: VendorSkus_Delete
      description: Deletes the specified sku. This operation can take up to 2 hours to complete. This is expected service behavior.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the sku.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Request is successful.
        '202':
          description: Accepted. Sets provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation.
        '204':
          description: Request is successful. Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vendor_skus
      x-stackQL-verb: delete
    get:
      tags:
        - VendorSkus
      operationId: VendorSkus_Get
      description: Gets information about the specified sku.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the sku.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting vendor resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorSku'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vendor_skus
      x-stackQL-verb: exec
    put:
      tags:
        - VendorSkus
      operationId: VendorSkus_CreateOrUpdate
      description: Creates or updates a sku. This operation can take up to 2 hours to complete. This is expected service behavior.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the sku.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update sku operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorSku'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting vendor sku sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorSku'
        '201':
          description: Created. The operation returns the resulting vendor sku sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorSku'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vendor_skus
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/vendorSkus/?api-version=2022-01-01-preview:
    get:
      tags:
        - VendorSkus
      operationId: VendorSkus_List
      description: Lists all the skus of a vendor.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of vendor sku resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorSkuListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vendor_skus
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/vendorSkus/{skuName}/listCredential/?api-version=2022-01-01-preview:
    post:
      tags:
        - VendorSkus
      operationId: VendorSkus_ListCredential
      description: Generate credentials for publishing SKU images.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the sku.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operations returns the credential for publishing SKU images.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuCredential'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vendor_skus
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/vendorSkus/{skuName}/previewSubscriptions/?api-version=2022-01-01-preview:
    get:
      tags:
        - VendorSkuPreview
      operationId: VendorSkuPreview_List
      description: Lists all the preview information of a vendor sku.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the sku.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the preview information of the vendor sku sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewSubscriptionsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vendor_sku_preview
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/vendorSkus/{skuName}/previewSubscriptions/{previewSubscription}/?api-version=2022-01-01-preview:
    put:
      tags:
        - VendorSkuPreview
      operationId: VendorSkuPreview_CreateOrUpdate
      description: Creates or updates preview information of a vendor sku.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the vendor sku.
          required: true
          schema:
            type: string
        - name: previewSubscription
          in: path
          description: Preview subscription ID.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update vendor preview subscription operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewSubscription'
      responses:
        '200':
          description: Request is successful. The operation updated the preview information of the vendor sku sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewSubscription'
        '201':
          description: Request is accepted. The operation is updating or creating the preview information of the vendor sku sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewSubscription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vendor_sku_preview
      x-stackQL-verb: insert
    get:
      tags:
        - VendorSkuPreview
      operationId: VendorSkuPreview_Get
      description: Gets the preview information of a vendor sku.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the vendor sku.
          required: true
          schema:
            type: string
        - name: previewSubscription
          in: path
          description: Preview subscription ID.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation updated the preview information of the vendor sku sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewSubscription'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vendor_sku_preview
      x-stackQL-verb: exec
    delete:
      tags:
        - VendorSkuPreview
      operationId: VendorSkuPreview_Delete
      description: Deletes the preview information of a vendor sku.
      parameters:
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: skuName
          in: path
          description: The name of the vendor sku.
          required: true
          schema:
            type: string
        - name: previewSubscription
          in: path
          description: Preview subscription ID.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation deleted the vendor sku preview resource.
        '202':
          description: Request is accepted. The operation is deleting the vendor sku preview resource.
        '204':
          description: Request is successful. The vendor sku preview resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: vendor_sku_preview
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/networkFunctions/{serviceKey}/?api-version=2022-01-01-preview:
    get:
      tags:
        - VendorNetworkFunctions
      operationId: VendorNetworkFunctions_Get
      description: Gets information about the specified vendor network function.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by the customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: serviceKey
          in: path
          description: The GUID for the vendor network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting vendor network function sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorNetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vendor_network_functions
      x-stackQL-verb: exec
    put:
      tags:
        - VendorNetworkFunctions
      operationId: VendorNetworkFunctions_CreateOrUpdate
      description: Creates or updates a vendor network function. This operation can take up to 6 hours to complete. This is expected service behavior.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by the customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: serviceKey
          in: path
          description: The GUID for the vendor network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update vendor network function operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorNetworkFunction'
      responses:
        '200':
          description: Creation or update is successful. The operation returns the resulting vendor network function sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorNetworkFunction'
        '201':
          description: Created. The operation returns the resulting vendor network function sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorNetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vendor_network_functions
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/networkFunctions/{serviceKey}/roleInstances/{roleInstanceName}/start/?api-version=2022-01-01-preview:
    post:
      tags:
        - RoleInstances
      operationId: RoleInstances_Start
      description: Starts a role instance of a vendor network function.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: serviceKey
          in: path
          description: The GUID for the vendor network function.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The name of the role instance of the vendor network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: role_instances
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/networkFunctions/{serviceKey}/roleInstances/{roleInstanceName}/stop/?api-version=2022-01-01-preview:
    post:
      tags:
        - RoleInstances
      operationId: RoleInstances_Stop
      description: Powers off (stop) a role instance of a vendor network function.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: serviceKey
          in: path
          description: The GUID for the vendor network function.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The name of the role instance of the vendor network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: role_instances
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/networkFunctions/{serviceKey}/roleInstances/{roleInstanceName}/restart/?api-version=2022-01-01-preview:
    post:
      tags:
        - RoleInstances
      operationId: RoleInstances_Restart
      description: Restarts a role instance of a vendor network function.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: serviceKey
          in: path
          description: The GUID for the vendor network function.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The name of the role instance of the vendor network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: role_instances
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/networkFunctions/{serviceKey}/roleInstances/{roleInstanceName}/?api-version=2022-01-01-preview:
    get:
      tags:
        - RoleInstances
      operationId: RoleInstances_Get
      description: Gets the information of role instance of vendor network function.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: serviceKey
          in: path
          description: The GUID for the vendor network function.
          required: true
          schema:
            type: string
        - name: roleInstanceName
          in: path
          description: The name of the role instance of the vendor network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInstance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: role_instances
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/networkFunctions/?api-version=2022-01-01-preview:
    get:
      tags:
        - VendorNetworkFunctions
      operationId: VendorNetworkFunctions_List
      description: Lists all the vendor network function sub resources in an Azure region, filtered by skuType, skuName, vendorProvisioningState.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by the customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply on the operation. The properties you can use for eq (equals) are: skuType, skuName and vendorProvisioningState.'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting vendor network function sub resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorNetworkFunctionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vendor_network_functions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/networkFunctions/{serviceKey}/roleInstances/?api-version=2022-01-01-preview:
    get:
      tags:
        - RoleInstances
      operationId: RoleInstances_List
      description: Lists the information of role instances of vendor network function.
      parameters:
        - name: locationName
          in: path
          description: The Azure region where the network function resource was created by customer.
          required: true
          schema:
            type: string
        - name: vendorName
          in: path
          description: The name of the vendor.
          required: true
          schema:
            type: string
        - name: serviceKey
          in: path
          description: The GUID for the vendor network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionRoleInstanceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: role_instances
      x-stackQL-verb: select
  /providers/Microsoft.HybridNetwork/operations/?api-version=2022-01-01-preview:
    get:
      tags:
        - operations
      operationId: Operations_List
      description: Gets a list of the operations.
      parameters: []
      responses:
        '200':
          description: OK. Returns a list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/networkFunctionVendors/?api-version=2022-01-01-preview:
    get:
      tags:
        - networkFunctionVendors
      operationId: networkFunctionVendors_List
      description: Lists all the available vendor and sku information.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of vendors with available sku information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionVendorListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_function_vendors
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/networkFunctionVendors/{vendorName}/vendorSkus/?api-version=2022-01-01-preview:
    get:
      tags:
        - networkFunctionVendors
      operationId: NetworkFunctionVendorSkus_ListByVendor
      description: Lists all network function vendor sku details in a vendor.
      parameters:
        - name: vendorName
          in: path
          description: The name of the network function vendor.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of network function vendor skus.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionSkuListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_function_vendor_skus
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/networkFunctionVendors/{vendorName}/vendorSkus/{vendorSkuName}/?api-version=2022-01-01-preview:
    get:
      tags:
        - networkFunctionVendors
      operationId: networkFunctionVendorSkus_ListBySku
      description: Lists information about network function vendor sku details.
      parameters:
        - name: vendorName
          in: path
          description: The name of the network function vendor.
          required: true
          schema:
            type: string
        - name: vendorSkuName
          in: path
          description: The name of the network function sku.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns the resulting network function vendor sku details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionSkuDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_function_vendor_skus
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/?api-version=2022-01-01-preview:
    delete:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_Delete
      description: Deletes the specified network function resource. This operation can take up to 1 hour to complete. This is expected service behavior.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: The name of the network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation is completed successfully.
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.
        '204':
          description: Request is successful. Resource with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: network_functions
      x-stackQL-verb: delete
    get:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_Get
      description: Gets information about the specified network function resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: The name of the network function resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Operation is successful. The operation returns the resulting network function resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: network_functions
      x-stackQL-verb: exec
    put:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_CreateOrUpdate
      description: Creates or updates a network function resource. This operation can take up to 6 hours to complete. This is expected service behavior.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: Resource name for the network function resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied in the body to the create or update network function operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkFunction'
      responses:
        '200':
          description: The operation is completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        '201':
          description: Created or Updated. The header contains 'Azure-AsyncOperation' header pointing to an operation resource. The operation URI can be queried to find the current state of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: network_functions
      x-stackQL-verb: insert
    patch:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_UpdateTags
      description: Updates the tags for the network function resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: Resource name for the network function resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the update network function tags operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: Update is completed successfully. The operation returns the resulting network function resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunction'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: network_functions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/networkFunctions/?api-version=2022-01-01-preview:
    get:
      description: Lists all the network functions in a subscription.
      operationId: NetworkFunctions_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of network function resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - NetworkFunctions
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_functions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/?api-version=2022-01-01-preview:
    get:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_ListByResourceGroup
      description: Lists all the network function resources in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request is successful. The operation returns a list of network function resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFunctionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: network_functions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/networkFunctions/{networkFunctionName}/executeRequest/?api-version=2022-01-01-preview:
    post:
      tags:
        - NetworkFunctions
      operationId: NetworkFunctions_ExecuteRequest
      description: Execute a request to services on a network function.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: networkFunctionName
          in: path
          description: The name of the network function.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Payload for execute request post call.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteRequestParameters'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: network_functions
      x-stackQL-verb: exec
