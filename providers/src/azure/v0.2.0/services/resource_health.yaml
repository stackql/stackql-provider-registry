openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Resource Health (Microsoft.ResourceHealth)
  description: Resource Health
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-29-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IssueNameParameter:
      name: issueName
      in: path
      description: The name of the emerging issue.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: IssueNameParameter
          modelAsString: true
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ExpandParameter:
      name: $expand
      in: query
      description: Setting $expand=recommendedactions in url query expands the recommendedactions in the response.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      description: Error details.
      type: object
      properties:
        error:
          type: object
          description: The error object.
          properties:
            code:
              description: The error code.
              type: string
              readOnly: true
            message:
              description: The error message.
              type: string
              readOnly: true
            details:
              description: The error details.
              type: string
              readOnly: true
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    impactedResourceStatus:
      description: impactedResource with health status
      properties:
        properties:
          x-ms-client-flatten: true
          type: object
          description: Properties of impacted resource status.
          properties:
            availabilityState:
              type: string
              description: Impacted resource status of the resource.
              enum:
                - Available
                - Unavailable
                - Degraded
                - Unknown
              x-ms-enum:
                name: AvailabilityStateValues
                modelAsString: true
            title:
              type: string
              description: Title description of the impacted resource status.
            summary:
              type: string
              description: Summary description of the impacted resource status.
            reasonType:
              type: string
              description: When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated.
              enum:
                - Unplanned
                - Planned
                - UserInitiated
              x-ms-enum:
                name: ReasonTypeValues
                modelAsString: true
            occurredTime:
              type: string
              description: Timestamp for when last change in health status occurred.
              format: date-time
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    availabilityStatusListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/availabilityStatus'
          description: The list of availabilityStatuses.
        nextLink:
          type: string
          description: The URI to fetch the next page of availabilityStatuses. Call ListNext() with this URI to fetch the next page of availabilityStatuses.
      required:
        - value
      description: The List availabilityStatus operation response.
    availabilityStatus:
      description: availabilityStatus of a resource.
      properties:
        id:
          type: string
          description: Azure Resource Manager Identity for the availabilityStatuses resource.
        name:
          type: string
          description: current.
        type:
          type: string
          description: Microsoft.ResourceHealth/AvailabilityStatuses.
        location:
          type: string
          description: Azure Resource Manager geo location of the resource.
        properties:
          type: object
          description: Properties of availability state.
          properties:
            availabilityState:
              type: string
              description: Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting event
              enum:
                - Available
                - Unavailable
                - Degraded
                - Unknown
              x-ms-enum:
                name: AvailabilityStateValues
                modelAsString: true
            title:
              type: string
              description: Title description of the availability status.
            summary:
              type: string
              description: Summary description of the availability status.
            detailedStatus:
              type: string
              description: Details of the availability status.
            reasonType:
              type: string
              description: When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples are planned, unplanned, user initiated or an outage etc.
            rootCauseAttributionTime:
              type: string
              description: When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was received.
              format: date-time
            healthEventType:
              type: string
              description: In case of an availability impacting event, it describes when the health impacting event was originated. Examples are Lifecycle, Downtime, Fault Analysis etc.
            healthEventCause:
              type: string
              description: In case of an availability impacting event, it describes where the health impacting event was originated. Examples are PlatformInitiated, UserInitiated etc.
            healthEventCategory:
              type: string
              description: In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples are Planned, Unplanned etc.
            healthEventId:
              type: string
              description: It is a unique Id that identifies the event
            resolutionETA:
              type: string
              description: When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and time for when the issue is expected to be resolved.
              format: date-time
            occurredTime:
              type: string
              description: Timestamp for when last change in health status occurred.
              format: date-time
            reasonChronicity:
              type: string
              description: Chronicity of the availability transition.
              enum:
                - Transient
                - Persistent
              x-ms-enum:
                name: reasonChronicityTypes
                modelAsString: true
            reportedTime:
              type: string
              description: 'Timestamp for when the health was last checked. '
              format: date-time
            recentlyResolved:
              type: object
              description: An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned
              properties:
                unavailableOccurredTime:
                  type: string
                  description: Timestamp for when the availabilityState changed to Unavailable
                  format: date-time
                resolvedTime:
                  type: string
                  description: Timestamp when the availabilityState changes to Available.
                  format: date-time
                unavailabilitySummary:
                  type: string
                  description: Brief description of cause of the resource becoming unavailable.
            recommendedActions:
              type: array
              description: Lists actions the user can take based on the current availabilityState of the resource.
              items:
                $ref: '#/components/schemas/recommendedAction'
            serviceImpactingEvents:
              type: array
              description: Lists the service impacting events that may be affecting the health of the resource.
              items:
                $ref: '#/components/schemas/serviceImpactingEvent'
      type: object
    operationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/operation'
          description: List of operations available in the resourcehealth resource provider.
      required:
        - value
      description: Lists the operations response.
      type: object
    operation:
      description: Operation available in the resourcehealth resource provider.
      properties:
        name:
          type: string
          description: Name of the operation.
        display:
          type: object
          description: Properties of the operation.
          properties:
            provider:
              type: string
              description: Provider name.
            resource:
              type: string
              description: Resource name.
            operation:
              type: string
              description: Operation name.
            description:
              type: string
              description: Description of the operation.
      type: object
    recommendedAction:
      type: object
      description: Lists actions the user can take based on the current availabilityState of the resource.
      properties:
        action:
          type: string
          description: Recommended action.
        actionUrl:
          type: string
          description: Link to the action
        actionUrlText:
          type: string
          description: Substring of action, it describes which text should host the action url.
    serviceImpactingEvent:
      type: object
      description: Lists the service impacting events that may be affecting the health of the resource.
      properties:
        eventStartTime:
          type: string
          description: Timestamp for when the event started.
          format: date-time
        eventStatusLastModifiedTime:
          type: string
          description: Timestamp for when event was submitted/detected.
          format: date-time
        correlationId:
          type: string
          description: Correlation id for the event
        status:
          type: object
          description: Status of the service impacting event.
          properties:
            value:
              type: string
              description: Current status of the event
        incidentProperties:
          type: object
          description: Properties of the service impacting event.
          properties:
            title:
              type: string
              description: Title of the incident.
            service:
              type: string
              description: Service impacted by the event.
            region:
              type: string
              description: Region impacted by the event.
            incidentType:
              type: string
              description: Type of Event.
    statusBanner:
      type: object
      description: Banner type of emerging issue.
      properties:
        title:
          type: string
          description: The banner title.
        message:
          type: string
          description: The details of banner.
        cloud:
          type: string
          description: The cloud type of this banner.
        lastModifiedTime:
          type: string
          description: The last time modified on this banner.
          format: date-time
    impactedRegion:
      type: object
      description: Object of impacted region.
      properties:
        id:
          type: string
          description: The impacted region id.
        name:
          type: string
          description: The impacted region name.
  x-stackQL-resources:
    availability_statuses:
      id: azure.resource_health.availability_statuses
      name: availability_statuses
      title: Availability_statuses
      methods:
        AvailabilityStatuses_ListBySubscriptionId:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ResourceHealth~1availabilityStatuses~1?api-version=2020-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AvailabilityStatuses_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ResourceHealth~1availabilityStatuses~1?api-version=2020-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AvailabilityStatuses_GetByResource:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ResourceHealth~1availabilityStatuses~1current~1?api-version=2020-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AvailabilityStatuses_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ResourceHealth~1availabilityStatuses~1?api-version=2020-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/availability_statuses/methods/AvailabilityStatuses_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/availability_statuses/methods/AvailabilityStatuses_ListBySubscriptionId'
          - $ref: '#/components/x-stackQL-resources/availability_statuses/methods/AvailabilityStatuses_List'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.resource_health.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceHealth~1operations~1?api-version=2020-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses/?api-version=2020-05-01:
    get:
      tags:
        - AvailabilityStatuses
      operationId: AvailabilityStatuses_ListBySubscriptionId
      description: Lists the current availability status for all the resources in the subscription.
      parameters:
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ExpandParameter'
      responses:
        '200':
          description: The list of current availability status for all the resources in the subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availabilityStatusListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: availability_statuses
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceHealth/availabilityStatuses/?api-version=2020-05-01:
    get:
      tags:
        - AvailabilityStatuses
      operationId: AvailabilityStatuses_ListByResourceGroup
      description: Lists the current availability status for all the resources in the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/ExpandParameter'
      responses:
        '200':
          description: The list of current availability status for all the resources in the resource group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availabilityStatusListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: availability_statuses
      x-stackQL-verb: select
  /providers/Microsoft.ResourceHealth/operations/?api-version=2020-05-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists available operations for the resourcehealth resource provider
      parameters: []
      responses:
        '200':
          description: The list of available operations for the resourcehealth resource provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operationListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses/current/?api-version=2020-05-01:
    get:
      tags:
        - AvailabilityStatuses
      operationId: AvailabilityStatuses_GetByResource
      description: Gets current availability status for a single resource
      parameters:
        - name: resourceUri
          in: path
          description: 'The fully qualified ID of the resource, including the resource name and resource type. Currently the API support not nested and one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name} and /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}'
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/ExpandParameter'
      responses:
        '200':
          description: The current availability status for a single resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availabilityStatus'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: availability_statuses
      x-stackQL-verb: exec
  /{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses/?api-version=2020-05-01:
    get:
      tags:
        - AvailabilityStatuses
      operationId: AvailabilityStatuses_List
      description: Lists all historical availability transitions and impacting events for a single resource.
      parameters:
        - name: resourceUri
          in: path
          description: 'The fully qualified ID of the resource, including the resource name and resource type. Currently the API support not nested and one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name} and /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}'
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/ExpandParameter'
      responses:
        '200':
          description: The list of historical availability statuses for a single resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/availabilityStatusListResult'
        default:
          description: DefaultErrorResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: availability_statuses
      x-stackQL-verb: select
