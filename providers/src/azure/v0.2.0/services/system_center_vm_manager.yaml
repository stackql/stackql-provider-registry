openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: System Center VM Manager (Microsoft.ScVmm)
  description: System Center VM Manager
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-29-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to be used with the HTTP request (e.g. YYYY-MM-DD).
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      description: Error response.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorDefinition'
          description: The error details.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    VMMServerProperties:
      description: Defines the resource properties.
      required:
        - fqdn
      type: object
      properties:
        credentials:
          type: object
          description: Credentials to connect to VMMServer.
          properties:
            username:
              type: string
              description: Username to use to connect to VMMServer.
            password:
              type: string
              description: Credentials to use to connect to VMMServer.
              x-ms-mutability:
                - create
                - update
              x-ms-secret: true
        fqdn:
          type: string
          description: Fqdn is the hostname/ip of the vmmServer.
          minLength: 1
        port:
          type: integer
          format: int32
          description: Port is the port on which the vmmServer is listening.
          maximum: 65535
          minimum: 1
        connectionStatus:
          type: string
          description: Gets or sets the connection status to the vmmServer.
          readOnly: true
        errorMessage:
          type: string
          description: Gets or sets any error message if connection to vmmServer is having any issue.
          readOnly: true
        uuid:
          type: string
          description: Unique ID of vmmServer.
          readOnly: true
        version:
          type: string
          description: Version is the version of the vmmSever.
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    ExtendedLocation:
      type: object
      description: The extended location.
      properties:
        type:
          type: string
          description: The extended location type.
        name:
          type: string
          description: The extended location name.
    VMMServer:
      x-ms-azure-resource: true
      required:
        - location
        - properties
        - extendedLocation
      description: The VmmServers resource definition.
      properties:
        credentials:
          type: object
          description: Credentials to connect to VMMServer.
          properties:
            username:
              type: string
              description: Username to use to connect to VMMServer.
            password:
              type: string
              description: Credentials to use to connect to VMMServer.
              x-ms-mutability:
                - create
                - update
              x-ms-secret: true
        fqdn:
          type: string
          description: Fqdn is the hostname/ip of the vmmServer.
          minLength: 1
        port:
          type: integer
          format: int32
          description: Port is the port on which the vmmServer is listening.
          maximum: 65535
          minimum: 1
        connectionStatus:
          type: string
          description: Gets or sets the connection status to the vmmServer.
          readOnly: true
        errorMessage:
          type: string
          description: Gets or sets any error message if connection to vmmServer is having any issue.
          readOnly: true
        uuid:
          type: string
          description: Unique ID of vmmServer.
          readOnly: true
        version:
          type: string
          description: Version is the version of the vmmSever.
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource Name
        type:
          type: string
          readOnly: true
          description: Resource Type
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    VMMServerListResult:
      type: object
      description: List of VmmServers.
      properties:
        value:
          type: array
          description: List of VmmServers.
          items:
            $ref: '#/components/schemas/VMMServer'
        nextLink:
          description: Url to follow for getting next page of resources.
          type: string
    ResourceProviderOperationList:
      type: object
      description: Results of the request to list operations.
      properties:
        value:
          type: array
          description: List of Operations.
          items:
            $ref: '#/components/schemas/ResourceProviderOperation'
          x-ms-identifiers:
            - name
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    CloudProperties:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the cloud.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        cloudName:
          type: string
          description: Name of the cloud in VMMServer.
          readOnly: true
        cloudCapacity:
          $ref: '#/components/schemas/CloudCapacity'
          description: Capacity of the cloud.
          readOnly: true
        storageQoSPolicies:
          description: List of QoS policies available for the cloud.
          type: array
          items:
            $ref: '#/components/schemas/StorageQoSPolicy'
          readOnly: true
        provisioningState:
          type: string
          description: Gets or sets the provisioning state.
          readOnly: true
    Cloud:
      x-ms-azure-resource: true
      required:
        - location
        - properties
        - extendedLocation
      description: The Clouds resource definition.
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the cloud.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        cloudName:
          type: string
          description: Name of the cloud in VMMServer.
          readOnly: true
        cloudCapacity:
          $ref: '#/components/schemas/CloudCapacity'
          description: Capacity of the cloud.
          readOnly: true
        storageQoSPolicies:
          description: List of QoS policies available for the cloud.
          type: array
          items:
            $ref: '#/components/schemas/StorageQoSPolicy'
          readOnly: true
        provisioningState:
          type: string
          description: Gets or sets the provisioning state.
          readOnly: true
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource Name
        type:
          type: string
          readOnly: true
          description: Resource Type
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    CloudListResult:
      type: object
      description: List of Clouds.
      properties:
        value:
          type: array
          description: List of Clouds.
          items:
            $ref: '#/components/schemas/Cloud'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    VirtualNetworkProperties:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the virtual network.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        networkName:
          type: string
          description: Name of the virtual network in vmmServer.
          readOnly: true
        provisioningState:
          type: string
          description: Gets or sets the provisioning state.
          readOnly: true
    VirtualNetwork:
      x-ms-azure-resource: true
      required:
        - location
        - properties
        - extendedLocation
      description: The VirtualNetworks resource definition.
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the virtual network.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        networkName:
          type: string
          description: Name of the virtual network in vmmServer.
          readOnly: true
        provisioningState:
          type: string
          description: Gets or sets the provisioning state.
          readOnly: true
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource Name
        type:
          type: string
          readOnly: true
          description: Resource Type
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    VirtualNetworkListResult:
      type: object
      description: List of VirtualNetworks.
      properties:
        value:
          type: array
          description: List of VirtualNetworks.
          items:
            $ref: '#/components/schemas/VirtualNetwork'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    AvailabilitySetProperties:
      description: Defines the resource properties.
      type: object
      properties:
        availabilitySetName:
          type: string
          description: Name of the availability set.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        provisioningState:
          type: string
          description: Gets or sets the provisioning state.
          readOnly: true
    AvailabilitySet:
      x-ms-azure-resource: true
      description: The AvailabilitySets resource definition.
      properties:
        availabilitySetName:
          type: string
          description: Name of the availability set.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        provisioningState:
          type: string
          description: Gets or sets the provisioning state.
          readOnly: true
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource Name
        type:
          type: string
          readOnly: true
          description: Resource Type
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    AvailabilitySetListResult:
      type: object
      description: List of AvailabilitySets.
      properties:
        value:
          type: array
          description: List of AvailabilitySets.
          items:
            $ref: '#/components/schemas/AvailabilitySet'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    AvailabilitySetList:
      description: Availability Sets in vm.
      type: array
      items:
        description: Availability Set model
        type: object
        properties:
          id:
            description: Gets the ARM Id of the microsoft.scvmm/availabilitySets resource.
            type: string
          name:
            description: Gets or sets the name of the availability set.
            type: string
    VirtualMachineProperties:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        cloudId:
          type: string
          description: ARM Id of the cloud resource to use for deploying the vm.
        templateId:
          type: string
          description: ARM Id of the template resource to use for deploying the vm.
        checkpointType:
          type: string
          description: Type of checkpoint supported for the vm.
        checkpoints:
          description: Checkpoints in the vm.
          type: array
          items:
            description: Checkpoint properties
            $ref: '#/components/schemas/Checkpoint'
            readOnly: true
          x-ms-identifiers:
            - checkpointID
        availabilitySets:
          $ref: '#/components/schemas/AvailabilitySetList'
        osProfile:
          description: OS properties.
          $ref: '#/components/schemas/OsProfile'
        hardwareProfile:
          description: Hardware properties.
          $ref: '#/components/schemas/HardwareProfile'
        networkProfile:
          description: Network properties.
          $ref: '#/components/schemas/NetworkProfile'
        storageProfile:
          description: Storage properties.
          $ref: '#/components/schemas/StorageProfile'
        vmName:
          type: string
          description: VMName is the name of VM on the SCVMM server.
          minLength: 1
        uuid:
          type: string
          description: Unique ID of the virtual machine.
        generation:
          type: integer
          format: int32
          description: Gets or sets the generation for the vm.
        powerState:
          description: Gets the power state of the virtual machine.
          type: string
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    OsType:
      description: Defines the different types of VM guest operating systems.
      enum:
        - Windows
        - Linux
        - Other
      x-ms-enum:
        modelAsString: true
        name: OsType
      type: string
      readOnly: true
    OsProfile:
      description: Defines the resource properties.
      type: object
      properties:
        adminPassword:
          description: Admin password of the virtual machine.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        computerName:
          description: Gets or sets computer name.
          type: string
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets or sets os name.
          type: string
          readOnly: true
    HardwareProfile:
      description: Defines the resource properties.
      type: object
      properties:
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the size of a virtual machine's memory, in MB.
        cpuCount:
          type: integer
          description: Gets or sets the number of vCPUs for the vm.
          format: int32
        limitCpuForMigration:
          type: string
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: LimitCpuForMigration
        dynamicMemoryEnabled:
          type: string
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: DynamicMemoryEnabled
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
        isHighlyAvailable:
          description: Gets highly available property.
          type: string
    HardwareProfileUpdate:
      description: Defines the resource properties.
      type: object
      properties:
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the size of a virtual machine's memory, in MB.
        cpuCount:
          type: integer
          description: Gets or sets the number of vCPUs for the vm.
          format: int32
        limitCpuForMigration:
          type: string
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: LimitCpuForMigration
        dynamicMemoryEnabled:
          type: string
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: DynamicMemoryEnabled
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
    Checkpoint:
      description: Defines the resource properties.
      type: object
      properties:
        parentCheckpointID:
          description: Gets ID of parent of the checkpoint.
          type: string
        checkpointID:
          description: Gets ID of the checkpoint.
          type: string
        name:
          description: Gets name of the checkpoint.
          type: string
        description:
          description: Gets description of the checkpoint.
          type: string
    NetworkProfileUpdate:
      description: Defines the resource properties.
      type: object
      properties:
        networkInterfaces:
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfacesUpdate'
          x-ms-identifiers:
            - name
            - nicId
    NetworkProfile:
      description: Defines the resource properties.
      type: object
      properties:
        networkInterfaces:
          description: Gets or sets the list of network interfaces associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaces'
          x-ms-identifiers:
            - name
            - nicId
    AllocationMethod:
      description: Allocation method.
      enum:
        - Dynamic
        - Static
      x-ms-enum:
        modelAsString: true
        name: AllocationMethod
      type: string
    NetworkInterfaces:
      description: Network Interface model
      type: object
      properties:
        name:
          description: Gets or sets the name of the network interface.
          type: string
        displayName:
          description: Gets the display name of the network interface as shown in the vmmServer. This is the fallback label for a NIC when the name is not set.
          type: string
          readOnly: true
        ipv4Addresses:
          description: Gets or sets the nic ipv4 addresses.
          type: array
          items:
            type: string
          readOnly: true
        ipv6Addresses:
          description: Gets or sets the nic ipv6 addresses.
          type: array
          items:
            type: string
          readOnly: true
        macAddress:
          description: Gets or sets the nic MAC address.
          type: string
        virtualNetworkId:
          description: Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
          type: string
        networkName:
          description: Gets or sets the name of the virtual network in vmmServer that the nic is connected to.
          type: string
          readOnly: true
        ipv4AddressType:
          description: Gets or sets the ipv4 address type.
          $ref: '#/components/schemas/AllocationMethod'
        ipv6AddressType:
          description: Gets or sets the ipv6 address type.
          $ref: '#/components/schemas/AllocationMethod'
        macAddressType:
          description: Gets or sets the mac address type.
          $ref: '#/components/schemas/AllocationMethod'
        nicId:
          description: Gets or sets the nic id.
          type: string
    NetworkInterfacesUpdate:
      description: Network Interface model
      type: object
      properties:
        name:
          description: Gets or sets the name of the network interface.
          type: string
        macAddress:
          description: Gets or sets the nic MAC address.
          type: string
        virtualNetworkId:
          description: Gets or sets the ARM Id of the Microsoft.ScVmm/virtualNetwork resource to connect the nic.
          type: string
        ipv4AddressType:
          description: Gets or sets the ipv4 address type.
          $ref: '#/components/schemas/AllocationMethod'
        ipv6AddressType:
          description: Gets or sets the ipv6 address type.
          $ref: '#/components/schemas/AllocationMethod'
        macAddressType:
          description: Gets or sets the mac address type.
          $ref: '#/components/schemas/AllocationMethod'
        nicId:
          description: Gets or sets the nic id.
          type: string
    CloudCapacity:
      description: Cloud Capacity model
      type: object
      properties:
        cpuCount:
          type: integer
          format: int64
          description: CPUCount specifies the maximum number of CPUs that can be allocated in the cloud.
        memoryMB:
          type: integer
          format: int64
          description: MemoryMB specifies a memory usage limit in megabytes.
        vmCount:
          type: integer
          format: int64
          description: VMCount gives the max number of VMs that can be deployed in the cloud.
      readOnly: true
    StorageQoSPolicyDetails:
      description: The StorageQoSPolicyDetails definition.
      type: object
      properties:
        name:
          description: The name of the policy.
          type: string
        id:
          description: The ID of the QoS policy.
          type: string
    VirtualDisk:
      description: Virtual disk model
      type: object
      properties:
        name:
          description: Gets or sets the name of the disk.
          type: string
        displayName:
          description: Gets the display name of the virtual disk as shown in the vmmServer. This is the fallback label for a disk when the name is not set.
          type: string
          readOnly: true
        diskId:
          description: Gets or sets the disk id.
          type: string
        diskSizeGB:
          format: int32
          description: Gets or sets the disk total size.
          type: integer
        maxDiskSizeGB:
          format: int32
          description: Gets or sets the max disk size.
          type: integer
          readOnly: true
        bus:
          format: int32
          description: Gets or sets the disk bus.
          type: integer
        lun:
          format: int32
          description: Gets or sets the disk lun.
          type: integer
        busType:
          description: Gets or sets the disk bus type.
          type: string
        vhdType:
          description: Gets or sets the disk vhd type.
          type: string
        volumeType:
          description: Gets or sets the disk volume type.
          type: string
          readOnly: true
        vhdFormatType:
          description: Gets the disk vhd format type.
          type: string
          readOnly: true
        templateDiskId:
          description: Gets or sets the disk id in the template.
          type: string
        storageQoSPolicy:
          description: The QoS policy for the disk.
          $ref: '#/components/schemas/StorageQoSPolicyDetails'
        createDiffDisk:
          type: string
          description: Gets or sets a value indicating diff disk.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: CreateDiffDisk
    VirtualDiskUpdate:
      description: Virtual disk model
      type: object
      properties:
        name:
          description: Gets or sets the name of the disk.
          type: string
        diskId:
          description: Gets or sets the disk id.
          type: string
        diskSizeGB:
          format: int32
          description: Gets or sets the disk total size.
          type: integer
        bus:
          format: int32
          description: Gets or sets the disk bus.
          type: integer
        lun:
          format: int32
          description: Gets or sets the disk lun.
          type: integer
        busType:
          description: Gets or sets the disk bus type.
          type: string
        vhdType:
          description: Gets or sets the disk vhd type.
          type: string
        storageQoSPolicy:
          description: The QoS policy for the disk.
          $ref: '#/components/schemas/StorageQoSPolicyDetails'
    StorageProfileUpdate:
      description: Defines the resource properties.
      type: object
      properties:
        disks:
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDiskUpdate'
          x-ms-identifiers:
            - name
            - diskId
    StorageProfile:
      description: Defines the resource properties.
      type: object
      properties:
        disks:
          description: Gets or sets the list of virtual disks associated with the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - name
            - diskId
    StopVirtualMachineOptions:
      description: Defines the stop action properties.
      type: object
      properties:
        skipShutdown:
          description: Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.
          type: boolean
          default: false
    VirtualMachineCreateCheckpoint:
      description: Defines the create checkpoint action properties.
      type: object
      properties:
        name:
          description: Name of the checkpoint.
          type: string
        description:
          description: Description of the checkpoint.
          type: string
    VirtualMachineDeleteCheckpoint:
      description: Defines the delete checkpoint action properties.
      type: object
      properties:
        id:
          description: ID of the checkpoint to be deleted.
          type: string
    VirtualMachineRestoreCheckpoint:
      description: Defines the restore checkpoint action properties.
      type: object
      properties:
        id:
          description: ID of the checkpoint to be restored to.
          type: string
    VirtualMachine:
      x-ms-azure-resource: true
      required:
        - location
        - properties
        - extendedLocation
      description: The VirtualMachines resource definition.
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        cloudId:
          type: string
          description: ARM Id of the cloud resource to use for deploying the vm.
        templateId:
          type: string
          description: ARM Id of the template resource to use for deploying the vm.
        checkpointType:
          type: string
          description: Type of checkpoint supported for the vm.
        checkpoints:
          description: Checkpoints in the vm.
          type: array
          items:
            description: Checkpoint properties
            $ref: '#/components/schemas/Checkpoint'
            readOnly: true
          x-ms-identifiers:
            - checkpointID
        availabilitySets:
          $ref: '#/components/schemas/AvailabilitySetList'
        osProfile:
          description: OS properties.
          $ref: '#/components/schemas/OsProfile'
        hardwareProfile:
          description: Hardware properties.
          $ref: '#/components/schemas/HardwareProfile'
        networkProfile:
          description: Network properties.
          $ref: '#/components/schemas/NetworkProfile'
        storageProfile:
          description: Storage properties.
          $ref: '#/components/schemas/StorageProfile'
        vmName:
          type: string
          description: VMName is the name of VM on the SCVMM server.
          minLength: 1
        uuid:
          type: string
          description: Unique ID of the virtual machine.
        generation:
          type: integer
          format: int32
          description: Gets or sets the generation for the vm.
        powerState:
          description: Gets the power state of the virtual machine.
          type: string
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource Name
        type:
          type: string
          readOnly: true
          description: Resource Type
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    VirtualMachineListResult:
      type: object
      description: List of VirtualMachines.
      properties:
        value:
          type: array
          description: List of VirtualMachines.
          items:
            $ref: '#/components/schemas/VirtualMachine'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    VirtualMachineUpdateProperties:
      description: Defines the resource properties.
      type: object
      properties:
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfileUpdate'
        storageProfile:
          $ref: '#/components/schemas/StorageProfileUpdate'
        networkProfile:
          $ref: '#/components/schemas/NetworkProfileUpdate'
        availabilitySets:
          $ref: '#/components/schemas/AvailabilitySetList'
    VirtualMachineUpdate:
      description: Defines the virtualMachineUpdate.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualMachineUpdateProperties'
        tags:
          description: Gets or sets the Resource tags.
          type: object
          additionalProperties:
            type: string
      type: object
    VirtualMachineTemplateProperties:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the virtual machine template.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets or sets os name.
          type: string
          readOnly: true
        computerName:
          description: Gets or sets computer name.
          type: string
          readOnly: true
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the desired size of a virtual machine's memory, in MB.
          readOnly: true
        cpuCount:
          type: integer
          description: Gets or sets the desired number of vCPUs for the vm.
          format: int32
          readOnly: true
        limitCpuForMigration:
          type: string
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: LimitCpuForMigration
          readOnly: true
        dynamicMemoryEnabled:
          type: string
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: DynamicMemoryEnabled
          readOnly: true
        isCustomizable:
          type: string
          description: Gets or sets a value indicating whether the vm template is customizable or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: IsCustomizable
          readOnly: true
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
          readOnly: true
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
          readOnly: true
        isHighlyAvailable:
          description: Gets highly available property.
          type: string
          readOnly: true
        generation:
          type: integer
          format: int32
          description: Gets or sets the generation for the vm.
          readOnly: true
        networkInterfaces:
          description: Gets or sets the network interfaces of the template.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaces'
          x-ms-identifiers:
            - name
            - nicId
          readOnly: true
        disks:
          description: Gets or sets the disks of the template.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - name
            - diskId
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
    VirtualMachineTemplate:
      x-ms-azure-resource: true
      required:
        - location
        - properties
        - extendedLocation
      description: The VirtualMachineTemplates resource definition.
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        uuid:
          type: string
          description: Unique ID of the virtual machine template.
          minLength: 1
        vmmServerId:
          type: string
          description: ARM Id of the vmmServer resource in which this resource resides.
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets or sets os name.
          type: string
          readOnly: true
        computerName:
          description: Gets or sets computer name.
          type: string
          readOnly: true
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the desired size of a virtual machine's memory, in MB.
          readOnly: true
        cpuCount:
          type: integer
          description: Gets or sets the desired number of vCPUs for the vm.
          format: int32
          readOnly: true
        limitCpuForMigration:
          type: string
          description: Gets or sets a value indicating whether to enable processor compatibility mode for live migration of VMs.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: LimitCpuForMigration
          readOnly: true
        dynamicMemoryEnabled:
          type: string
          description: Gets or sets a value indicating whether to enable dynamic memory or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: DynamicMemoryEnabled
          readOnly: true
        isCustomizable:
          type: string
          description: Gets or sets a value indicating whether the vm template is customizable or not.
          enum:
            - 'false'
            - 'true'
          x-ms-enum:
            modelAsString: true
            name: IsCustomizable
          readOnly: true
        dynamicMemoryMaxMB:
          type: integer
          format: int32
          description: Gets or sets the max dynamic memory for the vm.
          readOnly: true
        dynamicMemoryMinMB:
          type: integer
          format: int32
          description: Gets or sets the min dynamic memory for the vm.
          readOnly: true
        isHighlyAvailable:
          description: Gets highly available property.
          type: string
          readOnly: true
        generation:
          type: integer
          format: int32
          description: Gets or sets the generation for the vm.
          readOnly: true
        networkInterfaces:
          description: Gets or sets the network interfaces of the template.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaces'
          x-ms-identifiers:
            - name
            - nicId
          readOnly: true
        disks:
          description: Gets or sets the disks of the template.
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - name
            - diskId
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state.
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource Name
        type:
          type: string
          readOnly: true
          description: Resource Type
        location:
          description: Gets or sets the location.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location.
      type: object
    VirtualMachineTemplateListResult:
      type: object
      description: List of VirtualMachineTemplates.
      properties:
        value:
          description: List of VirtualMachineTemplates.
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineTemplate'
        nextLink:
          type: string
          description: Url to follow for getting next page of resources.
    InventoryItemsList:
      description: List of InventoryItems.
      type: object
      properties:
        nextLink:
          description: Url to follow for getting next page of InventoryItems.
          type: string
        value:
          description: Array of InventoryItems
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
      required:
        - value
    InventoryItem:
      description: Defines the inventory item.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          description: Gets the provisioning state.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system data.
        kind:
          type: string
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
      type: object
    InventoryItemProperties:
      description: Defines the resource properties.
      required:
        - inventoryType
      discriminator:
        propertyName: inventoryType
      type: object
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          description: Gets the provisioning state.
          type: string
          readOnly: true
    InventoryType:
      type: string
      description: The inventory type.
      enum:
        - Cloud
        - VirtualNetwork
        - VirtualMachineTemplate
        - VirtualMachine
      x-ms-enum:
        name: InventoryType
        modelAsString: true
    InventoryItemDetails:
      description: Defines the resource properties.
      type: object
      properties:
        inventoryItemId:
          description: Gets or sets the inventory Item ID for the resource.
          type: string
        inventoryItemName:
          description: Gets or sets the Managed Object name in VMM for the resource.
          type: string
    CloudInventoryItem:
      description: The Cloud inventory item.
      x-ms-discriminator-value: Cloud
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          description: Gets the provisioning state.
          type: string
          readOnly: true
      type: object
    VirtualNetworkInventoryItem:
      description: The Virtual network inventory item.
      x-ms-discriminator-value: VirtualNetwork
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          description: Gets the provisioning state.
          type: string
          readOnly: true
      type: object
    VirtualMachineTemplateInventoryItem:
      description: The Virtual machine template inventory item.
      x-ms-discriminator-value: VirtualMachineTemplate
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          description: Gets the provisioning state.
          type: string
          readOnly: true
        cpuCount:
          type: integer
          description: Gets or sets the desired number of vCPUs for the vm.
          format: int32
          readOnly: true
        memoryMB:
          type: integer
          format: int32
          description: MemoryMB is the desired size of a virtual machine's memory, in MB.
          readOnly: true
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets or sets os name.
          type: string
          readOnly: true
      type: object
    VirtualMachineInventoryItem:
      description: The Virtual machine inventory item.
      x-ms-discriminator-value: VirtualMachine
      properties:
        inventoryType:
          description: They inventory type.
          $ref: '#/components/schemas/InventoryType'
        managedResourceId:
          description: Gets the tracked resource id corresponding to the inventory resource.
          type: string
          readOnly: true
        uuid:
          description: Gets the UUID (which is assigned by VMM) for the inventory item.
          type: string
          readOnly: true
        inventoryItemName:
          description: Gets the Managed Object name in VMM for the inventory item.
          type: string
          readOnly: true
        provisioningState:
          description: Gets the provisioning state.
          type: string
          readOnly: true
        osType:
          description: Gets or sets the type of the os.
          $ref: '#/components/schemas/OsType'
          readOnly: true
        osName:
          description: Gets or sets os name.
          type: string
          readOnly: true
        powerState:
          description: Gets the power state of the virtual machine.
          type: string
          readOnly: true
        ipAddresses:
          description: Gets or sets the nic ip addresses.
          type: array
          items:
            type: string
        cloud:
          description: Cloud inventory resource details where the VM is present.
          $ref: '#/components/schemas/InventoryItemDetails'
      type: object
    ResourceProviderOperation:
      type: object
      properties:
        isDataAction:
          type: string
          description: Indicates whether the operation applies to data-plane.
        name:
          type: string
          description: Operation name, in format of {provider}/{resource}/{operation}.
        display:
          type: object
          properties:
            provider:
              type: string
              description: The resource provider.
            resource:
              type: string
              description: Resource on which the operation is performed.
            operation:
              type: string
              description: 'Type of operation: read, write, delete, etc.'
            description:
              type: string
              description: Description of this operation.
          description: Display metadata associated with the operation.
      description: Results of the request to list operations.
    ErrorDefinition:
      description: Error definition.
      type: object
      properties:
        code:
          description: Service specific error code which serves as the substatus for the HTTP error code.
          type: string
          readOnly: true
        message:
          description: Description of the error.
          type: string
          readOnly: true
        details:
          description: Internal error details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDefinition'
          x-ms-identifiers: []
          readOnly: true
    StorageQoSPolicy:
      description: The StorageQoSPolicy definition.
      type: object
      properties:
        name:
          description: The name of the policy.
          type: string
        id:
          description: The ID of the QoS policy.
          type: string
        iopsMaximum:
          description: The maximum IO operations per second.
          type: integer
          format: int64
        iopsMinimum:
          description: The minimum IO operations per second.
          type: integer
          format: int64
        bandwidthLimit:
          description: The Bandwidth Limit for internet traffic.
          type: integer
          format: int64
        policyId:
          description: The underlying policy.
          type: string
    ResourcePatch:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Object containing tags updates for patch operations.
  x-stackQL-resources:
    vmm_servers:
      id: azure.system_center_vm_manager.vmm_servers
      name: vmm_servers
      title: Vmm_servers
      methods:
        VmmServers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VmmServers_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2020-06-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VmmServers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2020-06-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VmmServers_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1?api-version=2020-06-05-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VmmServers_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VmmServers_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1vmmServers~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/VmmServers_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/VmmServers_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/VmmServers_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vmm_servers/methods/VmmServers_Delete'
    operations:
      id: azure.system_center_vm_manager.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ScVmm~1operations~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    clouds:
      id: azure.system_center_vm_manager.clouds
      name: clouds
      title: Clouds
      methods:
        Clouds_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudName}~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Clouds_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudName}~1?api-version=2020-06-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Clouds_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudName}~1?api-version=2020-06-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Clouds_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1{cloudName}~1?api-version=2020-06-05-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Clouds_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Clouds_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1clouds~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/Clouds_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/clouds/methods/Clouds_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/Clouds_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clouds/methods/Clouds_Delete'
    virtual_networks:
      id: azure.system_center_vm_manager.virtual_networks
      name: virtual_networks
      title: Virtual_networks
      methods:
        VirtualNetworks_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworks_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2020-06-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualNetworks_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2020-06-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworks_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1{virtualNetworkName}~1?api-version=2020-06-05-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworks_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworks_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualNetworks~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/VirtualNetworks_Delete'
    virtual_machines:
      id: azure.system_center_vm_manager.virtual_machines
      name: virtual_machines
      title: Virtual_machines
      methods:
        VirtualMachines_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualMachines_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1?api-version=2020-06-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualMachines_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1?api-version=2020-06-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualMachines_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1?api-version=2020-06-05-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachines_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1stop~1?api-version=2020-06-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachines_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1start~1?api-version=2020-06-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachines_Restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1restart~1?api-version=2020-06-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachines_CreateCheckpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1createCheckpoint~1?api-version=2020-06-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachines_DeleteCheckpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1deleteCheckpoint~1?api-version=2020-06-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachines_RestoreCheckpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1{virtualMachineName}~1restoreCheckpoint~1?api-version=2020-06-05-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachines_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachines~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualMachines_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualMachines~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/VirtualMachines_Delete'
    virtual_machine_templates:
      id: azure.system_center_vm_manager.virtual_machine_templates
      name: virtual_machine_templates
      title: Virtual_machine_templates
      methods:
        VirtualMachineTemplates_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualMachineTemplates_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2020-06-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        VirtualMachineTemplates_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2020-06-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualMachineTemplates_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1{virtualMachineTemplateName}~1?api-version=2020-06-05-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualMachineTemplates_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualMachineTemplates_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1virtualMachineTemplates~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/VirtualMachineTemplates_Delete'
    availability_sets:
      id: azure.system_center_vm_manager.availability_sets
      name: availability_sets
      title: Availability_sets
      methods:
        AvailabilitySets_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetName}~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AvailabilitySets_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetName}~1?api-version=2020-06-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AvailabilitySets_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetName}~1?api-version=2020-06-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        AvailabilitySets_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1{availabilitySetName}~1?api-version=2020-06-05-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        AvailabilitySets_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        AvailabilitySets_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ScVmm~1availabilitySets~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/AvailabilitySets_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/AvailabilitySets_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/AvailabilitySets_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/AvailabilitySets_Delete'
    inventory_items:
      id: azure.system_center_vm_manager.inventory_items
      name: inventory_items
      title: Inventory_items
      methods:
        InventoryItems_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemName}~1?api-version=2020-06-05-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        InventoryItems_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemName}~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        InventoryItems_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1{inventoryItemName}~1?api-version=2020-06-05-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        InventoryItems_ListByVMMServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ScVmm~1vmmServers~1{vmmServerName}~1inventoryItems~1?api-version=2020-06-05-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/InventoryItems_ListByVMMServer'
        insert:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/InventoryItems_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/inventory_items/methods/InventoryItems_Delete'
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/?api-version=2020-06-05-preview:
    get:
      tags:
        - VmmServers
      operationId: VmmServers_Get
      summary: Gets a VMMServer.
      description: Implements VMMServer GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieves the VmmServers resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: vmm_servers
      x-stackQL-verb: exec
    put:
      tags:
        - VmmServers
      operationId: VmmServers_CreateOrUpdate
      description: Onboards the SCVMM fabric as an Azure VmmServer resource.
      summary: Implements VmmServers PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMMServer'
      responses:
        '200':
          description: Creates or Updates the VmmServers resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        '201':
          description: Creates or Updates the VmmServers resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vmm_servers
      x-stackQL-verb: insert
    delete:
      tags:
        - VmmServers
      operationId: VmmServers_Delete
      description: Deboards the SCVMM fabric from Azure.
      summary: Implements VmmServers DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Deletes the VmmServers resource.
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vmm_servers
      x-stackQL-verb: delete
    patch:
      tags:
        - VmmServers
      operationId: VmmServers_Update
      summary: Implements VmmServers PATCH method.
      description: Updates the VmmServers resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
      requestBody:
        description: VmmServers patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServer'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: vmm_servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/?api-version=2020-06-05-preview:
    get:
      tags:
        - VmmServers
      operationId: VmmServers_ListByResourceGroup
      summary: Implements GET VmmServers in a resource group.
      description: List of VmmServers in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all VmmServers under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vmm_servers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/vmmServers/?api-version=2020-06-05-preview:
    get:
      tags:
        - VmmServers
      operationId: VmmServers_ListBySubscription
      summary: Implements GET VmmServers in a subscription.
      description: List of VmmServers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all VmmServers under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMMServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: vmm_servers
      x-stackQL-verb: select
  /providers/Microsoft.ScVmm/operations/?api-version=2020-06-05-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Returns list of all operations.
      parameters: []
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceProviderOperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds/{cloudName}/?api-version=2020-06-05-preview:
    get:
      tags:
        - Clouds
      operationId: Clouds_Get
      summary: Gets a Cloud.
      description: Implements Cloud GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieves the Clouds resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: clouds
      x-stackQL-verb: exec
    put:
      tags:
        - Clouds
      operationId: Clouds_CreateOrUpdate
      description: Onboards the ScVmm fabric cloud as an Azure cloud resource.
      summary: Implements Clouds PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloud'
      responses:
        '200':
          description: Creates or Updates the Clouds resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '201':
          description: Creates or Updates the Clouds resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: clouds
      x-stackQL-verb: insert
    delete:
      tags:
        - Clouds
      operationId: Clouds_Delete
      description: Deregisters the ScVmm fabric cloud from Azure.
      summary: Implements Cloud resource DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: cloudName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Deletes the Clouds resource.
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: clouds
      x-stackQL-verb: delete
    patch:
      tags:
        - Clouds
      operationId: Clouds_Update
      summary: Implements the Clouds PATCH method.
      description: Updates the Clouds resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: cloudName
          in: path
          description: Name of the Cloud.
          required: true
          schema:
            type: string
      requestBody:
        description: Clouds patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: clouds
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/clouds/?api-version=2020-06-05-preview:
    get:
      tags:
        - Clouds
      operationId: Clouds_ListByResourceGroup
      summary: Implements GET Clouds in a resource group.
      description: List of Clouds in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all Clouds under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clouds
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/clouds/?api-version=2020-06-05-preview:
    get:
      tags:
        - Clouds
      operationId: Clouds_ListBySubscription
      summary: Implements GET Clouds in a subscription.
      description: List of Clouds in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Clouds under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clouds
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks/{virtualNetworkName}/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Get
      summary: Gets a VirtualNetwork.
      description: Implements VirtualNetwork GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieves the VirtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_CreateOrUpdate
      description: Onboards the ScVmm virtual network as an Azure virtual network resource.
      summary: Implements VirtualNetworks PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
      responses:
        '200':
          description: Creates or Updates the VirtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '201':
          description: Creates or Updates the VirtualNetworks resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: insert
    delete:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Delete
      description: Deregisters the ScVmm virtual network from Azure.
      summary: Implements VirtualNetwork DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Deletes the VirtualNetworks resource.
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: delete
    patch:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_Update
      summary: Implements the VirtualNetworks PATCH method.
      description: Updates the VirtualNetworks resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualNetworkName
          in: path
          description: Name of the VirtualNetwork.
          required: true
          schema:
            type: string
      requestBody:
        description: VirtualNetworks patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualNetworks/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_ListByResourceGroup
      summary: Implements GET VirtualNetworks in a resource group.
      description: List of VirtualNetworks in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all VirtualNetworks under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualNetworks/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualNetworks
      operationId: VirtualNetworks_ListBySubscription
      summary: Implements GET VirtualNetworks in a subscription.
      description: List of VirtualNetworks in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all VirtualNetworks under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_networks
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/{virtualMachineName}/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Get
      summary: Gets a VirtualMachine.
      description: Implements VirtualMachine GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieves the VirtualMachines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_CreateOrUpdate
      description: Creates Or Updates virtual machines deployed on scvmm fabric.
      summary: Implements VirtualMachines PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachine'
      responses:
        '200':
          description: Creates or Updates the VirtualMachines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '201':
          description: Creates or Updates the VirtualMachines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: insert
    delete:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Delete
      summary: Implements VirtualMachine DELETE method.
      description: Deletes a VirtualMachine deployed on ScVmm fabric.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
        - name: retain
          in: query
          description: Whether to just disable the VM from azure and retain the VM in the VMM.
          required: false
          schema:
            type: boolean
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Deletes the VirtualMachines resource.
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: delete
    patch:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Update
      summary: Implements the VirtualMachines PATCH method.
      description: Updates the VirtualMachines resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      requestBody:
        description: VirtualMachines patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineUpdate'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '201':
          description: Creates or Updates the VirtualMachines resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/{virtualMachineName}/stop/?api-version=2020-06-05-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Stop
      description: Stop virtual machine.
      summary: Implements the operation to stop a virtual machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      requestBody:
        description: Virtualmachine stop action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopVirtualMachineOptions'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/{virtualMachineName}/start/?api-version=2020-06-05-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Start
      description: Start virtual machine.
      summary: Implements the operation to start a virtual machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/{virtualMachineName}/restart/?api-version=2020-06-05-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Restart
      description: Restart virtual machine.
      summary: Implements the operation to restart a virtual machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/{virtualMachineName}/createCheckpoint/?api-version=2020-06-05-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_CreateCheckpoint
      description: Creates a checkpoint in virtual machine.
      summary: Implements the operation to creates a checkpoint in a virtual machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      requestBody:
        description: Virtualmachine create checkpoint action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineCreateCheckpoint'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/{virtualMachineName}/deleteCheckpoint/?api-version=2020-06-05-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_DeleteCheckpoint
      description: Deletes a checkpoint in virtual machine.
      summary: Implements the operation to delete a checkpoint in a virtual machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      requestBody:
        description: Virtualmachine delete checkpoint action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineDeleteCheckpoint'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/{virtualMachineName}/restoreCheckpoint/?api-version=2020-06-05-preview:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_RestoreCheckpoint
      description: Restores to a checkpoint in virtual machine.
      summary: Implements the operation to restores to a checkpoint in a virtual machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineName
          in: path
          description: Name of the VirtualMachine.
          required: true
          schema:
            type: string
      requestBody:
        description: Virtualmachine restore checkpoint action payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRestoreCheckpoint'
      responses:
        '200':
          description: Success
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachines/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListByResourceGroup
      summary: Implements GET VirtualMachines in a resource group.
      description: List of VirtualMachines in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all VirtualMachines under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualMachines/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListBySubscription
      summary: Implements GET VirtualMachines in a subscription.
      description: List of VirtualMachines in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all VirtualMachines under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machines
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates/{virtualMachineTemplateName}/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Get
      summary: Gets a VirtualMachineTemplate.
      description: Implements VirtualMachineTemplate GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieves the VirtualMachineTemplates resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_CreateOrUpdate
      description: Onboards the ScVmm VM Template as an Azure VM Template resource.
      summary: Implements VirtualMachineTemplates PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineTemplate'
      responses:
        '200':
          description: Creates or Updates the VirtualMachineTemplates resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '201':
          description: Creates or Updates the VirtualMachineTemplates resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: insert
    delete:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Delete
      description: Deregisters the ScVmm VM Template from Azure.
      summary: Implements VirtualMachineTemplate DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Deletes the VirtualMachineTemplates resource.
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: delete
    patch:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_Update
      summary: Implements the VirtualMachineTemplate PATCH method.
      description: Updates the VirtualMachineTemplate resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: virtualMachineTemplateName
          in: path
          description: Name of the VirtualMachineTemplate.
          required: true
          schema:
            type: string
      requestBody:
        description: VirtualMachineTemplates patch details.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/virtualMachineTemplates/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_ListByResourceGroup
      summary: Implements GET VirtualMachineTemplates in a resource group.
      description: List of VirtualMachineTemplates in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all VirtualMachineTemplates under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/virtualMachineTemplates/?api-version=2020-06-05-preview:
    get:
      tags:
        - VirtualMachineTemplates
      operationId: VirtualMachineTemplates_ListBySubscription
      summary: Implements GET VirtualMachineTemplates in a subscription.
      description: List of VirtualMachineTemplates in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all VirtualMachineTemplates under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplateListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_machine_templates
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets/{availabilitySetName}/?api-version=2020-06-05-preview:
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Get
      summary: Gets an AvailabilitySet.
      description: Implements AvailabilitySet GET method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieves the AvailabilitySet resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: availability_sets
      x-stackQL-verb: exec
    put:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_CreateOrUpdate
      description: Onboards the ScVmm availability set as an Azure resource.
      summary: Implements AvailabilitySets PUT method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            type: string
      requestBody:
        description: Request payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilitySet'
      responses:
        '200':
          description: Creates or Updates the AvailabilitySets resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        '201':
          description: Creates or Updates the AvailabilitySets resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: availability_sets
      x-stackQL-verb: insert
    delete:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Delete
      description: Deregisters the ScVmm availability set from Azure.
      summary: Implements AvailabilitySet DELETE method.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: availabilitySetName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Forces the resource to be deleted from azure. The corresponding CR would be attempted to be deleted too.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Deletes the AvailabilitySets resource.
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: availability_sets
      x-stackQL-verb: delete
    patch:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Update
      summary: Implements the AvailabilitySets PATCH method.
      description: Updates the AvailabilitySets resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: availabilitySetName
          in: path
          description: Name of the AvailabilitySet.
          required: true
          schema:
            type: string
      requestBody:
        description: AvailabilitySets patch payload.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcePatch'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: availability_sets
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/availabilitySets/?api-version=2020-06-05-preview:
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_ListByResourceGroup
      summary: Implements GET AvailabilitySets in a resource group.
      description: List of AvailabilitySets in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Lists all AvailabilitySets under the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: availability_sets
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.ScVmm/availabilitySets/?api-version=2020-06-05-preview:
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_ListBySubscription
      summary: Implements GET AvailabilitySets in a subscription.
      description: List of AvailabilitySets in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all AvailabilitySets under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: availability_sets
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems/{inventoryItemName}/?api-version=2020-06-05-preview:
    put:
      tags:
        - InventoryItems
      operationId: InventoryItems_Create
      summary: Implements InventoryItem PUT method.
      description: Create Or Update InventoryItem.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
        - name: inventoryItemName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            type: string
      requestBody:
        description: Request payload.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-verb: insert
    get:
      tags:
        - InventoryItems
      operationId: InventoryItems_Get
      summary: Implements GET InventoryItem method.
      description: Shows an inventory item.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
        - name: inventoryItemName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-verb: exec
    delete:
      tags:
        - InventoryItems
      operationId: InventoryItems_Delete
      summary: Implements inventoryItem DELETE method.
      description: Deletes an inventoryItem.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
        - name: inventoryItemName
          in: path
          description: Name of the inventoryItem.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: inventory_items
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ScVmm/vmmServers/{vmmServerName}/inventoryItems/?api-version=2020-06-05-preview:
    get:
      tags:
        - InventoryItems
      operationId: InventoryItems_ListByVMMServer
      summary: Implements GET for the list of Inventory Items in the VMMServer.
      description: Returns the list of inventoryItems in the given VMMServer.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: vmmServerName
          in: path
          description: Name of the VMMServer.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItemsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: inventory_items
      x-stackQL-verb: select
