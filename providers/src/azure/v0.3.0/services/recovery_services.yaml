openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Recovery Services (Microsoft.RecoveryServices)
  description: Recovery Services
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-09-22-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionId:
      name: subscriptionId
      in: path
      description: The subscription Id.
      required: true
      schema:
        type: string
    ResourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group where the recovery services vault is present.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VaultName:
      name: vaultName
      in: path
      description: The name of the recovery services vault.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ApiVersion:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
  schemas:
    JobsSummary:
      description: Summary of the replication job data for this vault.
      type: object
      properties:
        failedJobs:
          description: Count of failed jobs.
          type: integer
        suspendedJobs:
          description: Count of suspended jobs.
          type: integer
        inProgressJobs:
          description: Count of in-progress jobs.
          type: integer
    MonitoringSummary:
      description: Summary of the replication monitoring data for this vault.
      type: object
      properties:
        unHealthyVmCount:
          description: Count of unhealthy VMs.
          type: integer
        unHealthyProviderCount:
          description: Count of unhealthy replication providers.
          type: integer
        eventsCount:
          description: Count of all critical warnings.
          type: integer
        deprecatedProviderCount:
          description: Count of all deprecated recovery service providers.
          type: integer
        supportedProviderCount:
          description: Count of all the supported recovery service providers.
          type: integer
        unsupportedProviderCount:
          description: Count of all the unsupported recovery service providers.
          type: integer
    ReplicationUsage:
      description: Replication usages of a vault.
      type: object
      properties:
        monitoringSummary:
          $ref: '#/components/schemas/MonitoringSummary'
          description: Summary of the replication monitoring data for this vault.
        jobsSummary:
          $ref: '#/components/schemas/JobsSummary'
          description: Summary of the replication jobs data for this vault.
        protectedItemCount:
          description: Number of replication protected items for this vault.
          type: integer
        recoveryPlanCount:
          description: Number of replication recovery plans for this vault.
          type: integer
        registeredServersCount:
          description: Number of servers registered to this vault.
          type: integer
        recoveryServicesProviderAuthType:
          description: The authentication type of recovery service providers in the vault.
          type: integer
    ReplicationUsageList:
      description: Replication usages for vault.
      type: object
      properties:
        value:
          description: The list of replication usages for the given vault.
          type: array
          items:
            $ref: '#/components/schemas/ReplicationUsage'
    AzureMonitorAlertSettings:
      description: Settings for Azure Monitor based alerts
      type: object
      properties:
        alertsForAllJobFailures:
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: AlertsState
            modelAsString: true
    CheckNameAvailabilityParameters:
      description: Resource Name availability input parameters - Resource type and resource name
      type: object
      properties:
        type:
          description: 'Describes the Resource type: Microsoft.RecoveryServices/Vaults'
          type: string
        name:
          description: Resource name for which availability needs to be checked
          type: string
    CheckNameAvailabilityResult:
      description: Response for check name availability API. Resource provider will set availability as true | false.
      type: object
      properties:
        nameAvailable:
          type: boolean
        reason:
          type: string
        message:
          type: string
    ClassicAlertSettings:
      description: Settings for classic alerts
      type: object
      properties:
        alertsForCriticalOperations:
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: AlertsState
            modelAsString: true
    ClientDiscoveryDisplay:
      description: Localized display information of an operation.
      type: object
      properties:
        provider:
          description: Name of the provider for display purposes
          type: string
        resource:
          description: ResourceType for which this Operation can be performed.
          type: string
        operation:
          description: Operations Name itself.
          type: string
        description:
          description: Description of the operation having details of what operation is about.
          type: string
    ClientDiscoveryForLogSpecification:
      description: Class to represent shoebox log specification in json client discovery.
      type: object
      properties:
        name:
          description: Name of the log.
          type: string
        displayName:
          description: Localized display name
          type: string
        blobDuration:
          description: Blobs created in customer storage account per hour
          type: string
    ClientDiscoveryForProperties:
      description: Class to represent shoebox properties in json client discovery.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ClientDiscoveryForServiceSpecification'
          description: Operation properties.
    ClientDiscoveryForServiceSpecification:
      description: Class to represent shoebox service specification in json client discovery.
      type: object
      properties:
        logSpecifications:
          description: List of log specifications of this operation.
          type: array
          items:
            $ref: '#/components/schemas/ClientDiscoveryForLogSpecification'
    ClientDiscoveryResponse:
      description: Operations List response which contains list of available APIs.
      type: object
      properties:
        value:
          description: List of available operations.
          type: array
          items:
            $ref: '#/components/schemas/ClientDiscoveryValueForSingleApi'
        nextLink:
          description: Link to the next chunk of the response
          type: string
    ClientDiscoveryValueForSingleApi:
      description: Available operation details.
      properties:
        name:
          description: Name of the Operation.
          type: string
        display:
          $ref: '#/components/schemas/ClientDiscoveryDisplay'
          description: Contains the localized display information for this particular operation
        origin:
          description: The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX
          type: string
        properties:
          $ref: '#/components/schemas/ClientDiscoveryForProperties'
          description: ShoeBox properties for the given operation.
      type: object
    MonitoringSettings:
      description: Monitoring Settings of the vault
      type: object
      properties:
        azureMonitorAlertSettings:
          description: Settings for Azure Monitor based alerts
          $ref: '#/components/schemas/AzureMonitorAlertSettings'
        classicAlertSettings:
          description: Settings for classic alerts
          $ref: '#/components/schemas/ClassicAlertSettings'
    Resource:
      description: ARM Resource.
      type: object
      properties:
        id:
          description: Resource Id represents the complete path to the resource.
          type: string
          readOnly: true
        name:
          description: Resource name associated with the resource.
          type: string
          readOnly: true
        type:
          description: Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
          type: string
          readOnly: true
        etag:
          description: Optional ETag.
          type: string
      x-ms-azure-resource: true
    Sku:
      description: Identifies the unique system identifier for each Azure resource.
      required:
        - name
      type: object
      properties:
        name:
          description: Name of SKU is RS0 (Recovery Services 0th version) and the tier is standard tier. They do not have affect on backend storage redundancy or any other vault settings. To manage storage redundancy, use the backupstorageconfig
          enum:
            - Standard
            - RS0
          type: string
          x-ms-enum:
            name: SkuName
            modelAsString: true
        tier:
          description: The Sku tier.
          type: string
        family:
          description: The sku family
          type: string
        size:
          description: The sku size
          type: string
        capacity:
          description: The sku capacity
          type: string
    TrackedResource:
      description: Tracked resource with location.
      required:
        - location
      properties:
        id:
          description: Resource Id represents the complete path to the resource.
          type: string
          readOnly: true
        name:
          description: Resource name associated with the resource.
          type: string
          readOnly: true
        type:
          description: Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
          type: string
          readOnly: true
        etag:
          description: Optional ETag.
          type: string
        location:
          description: Resource location.
          type: string
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
      type: object
    PatchTrackedResource:
      description: Tracked resource with location.
      properties:
        id:
          description: Resource Id represents the complete path to the resource.
          type: string
          readOnly: true
        name:
          description: Resource name associated with the resource.
          type: string
          readOnly: true
        type:
          description: Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
          type: string
          readOnly: true
        etag:
          description: Optional ETag.
          type: string
        location:
          description: Resource location.
          type: string
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
      type: object
    UpgradeDetails:
      description: Details for upgrading vault.
      type: object
      properties:
        operationId:
          description: ID of the vault upgrade operation.
          type: string
          readOnly: true
        startTimeUtc:
          description: UTC time at which the upgrade operation has started.
          type: string
          readOnly: true
          format: date-time
        lastUpdatedTimeUtc:
          description: UTC time at which the upgrade operation status was last updated.
          type: string
          readOnly: true
          format: date-time
        endTimeUtc:
          description: UTC time at which the upgrade operation has ended.
          type: string
          readOnly: true
          format: date-time
        status:
          description: Status of the vault upgrade operation.
          enum:
            - Unknown
            - InProgress
            - Upgraded
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: VaultUpgradeState
            modelAsString: true
        message:
          description: Message to the user containing information about the upgrade operation.
          type: string
          readOnly: true
        triggerType:
          description: The way the vault upgrade was triggered.
          enum:
            - UserTriggered
            - ForcedUpgrade
          type: string
          readOnly: true
          x-ms-enum:
            name: TriggerType
            modelAsString: true
        upgradedResourceId:
          description: Resource ID of the upgraded vault.
          type: string
          readOnly: true
        previousResourceId:
          description: Resource ID of the vault before the upgrade.
          type: string
          readOnly: true
    Vault:
      description: Resource information, as returned by the resource provider.
      properties:
        location:
          description: Resource location.
          type: string
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityData'
        properties:
          $ref: '#/components/schemas/VaultProperties'
        sku:
          $ref: '#/components/schemas/Sku'
        systemData:
          $ref: '#/components/schemas/systemData'
      type: object
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The type of identity that last modified the resource.
    PatchVault:
      description: Patch Resource information, as returned by the resource provider.
      properties:
        location:
          description: Resource location.
          type: string
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/VaultProperties'
        sku:
          $ref: '#/components/schemas/Sku'
        identity:
          $ref: '#/components/schemas/IdentityData'
      type: object
    VaultExtendedInfo:
      description: Vault extended information.
      type: object
      properties:
        integrityKey:
          description: Integrity key.
          type: string
        encryptionKey:
          description: Encryption key.
          type: string
        encryptionKeyThumbprint:
          description: Encryption key thumbprint.
          type: string
        algorithm:
          description: Algorithm for Vault ExtendedInfo
          type: string
    VaultExtendedInfoResource:
      description: Vault extended information.
      properties:
        id:
          description: Resource Id represents the complete path to the resource.
          type: string
          readOnly: true
        name:
          description: Resource name associated with the resource.
          type: string
          readOnly: true
        type:
          description: Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
          type: string
          readOnly: true
        etag:
          description: Optional ETag.
          type: string
        properties:
          $ref: '#/components/schemas/VaultExtendedInfo'
          x-ms-client-flatten: true
      type: object
    VaultList:
      description: The response model for a list of Vaults.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Vault'
        nextLink:
          type: string
          readOnly: true
    VaultProperties:
      description: Properties of the vault.
      type: object
      properties:
        provisioningState:
          description: Provisioning State.
          type: string
          readOnly: true
        upgradeDetails:
          $ref: '#/components/schemas/UpgradeDetails'
        privateEndpointConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnectionVaultProperties'
          description: List of private endpoint connection.
          readOnly: true
        privateEndpointStateForBackup:
          description: Private endpoint state for backup.
          enum:
            - None
            - Enabled
          type: string
          readOnly: true
          x-ms-enum:
            name: VaultPrivateEndpointState
            modelAsString: true
        privateEndpointStateForSiteRecovery:
          description: Private endpoint state for site recovery.
          enum:
            - None
            - Enabled
          type: string
          readOnly: true
          x-ms-enum:
            name: VaultPrivateEndpointState
            modelAsString: true
        encryption:
          description: Customer Managed Key details of the resource.
          type: object
          properties:
            keyVaultProperties:
              $ref: '#/components/schemas/CmkKeyVaultProperties'
            kekIdentity:
              $ref: '#/components/schemas/CmkKekIdentity'
            infrastructureEncryption:
              description: Enabling/Disabling the Double Encryption state
              type: string
              enum:
                - Enabled
                - Disabled
              x-ms-enum:
                name: InfrastructureEncryptionState
                modelAsString: true
        moveDetails:
          description: The details of the latest move operation performed on the Azure Resource
          type: object
          properties:
            operationId:
              description: OperationId of the Resource Move Operation
              type: string
              readOnly: true
            startTimeUtc:
              description: Start Time of the Resource Move Operation
              type: string
              format: date-time
              readOnly: true
            completionTimeUtc:
              description: End Time of the Resource Move Operation
              type: string
              format: date-time
              readOnly: true
            sourceResourceId:
              description: Source Resource of the Resource Move Operation
              type: string
              readOnly: true
            targetResourceId:
              description: Target Resource of the Resource Move Operation
              type: string
              readOnly: true
        moveState:
          description: The State of the Resource after the move operation
          type: string
          readOnly: true
          enum:
            - Unknown
            - InProgress
            - PrepareFailed
            - CommitFailed
            - PrepareTimedout
            - CommitTimedout
            - MoveSucceeded
            - Failure
            - CriticalFailure
            - PartialSuccess
          x-ms-enum:
            name: ResourceMoveState
            modelAsString: true
        backupStorageVersion:
          description: Backup storage version
          enum:
            - V1
            - V2
            - Unassigned
          type: string
          readOnly: true
          x-ms-enum:
            name: BackupStorageVersion
            modelAsString: true
        monitoringSettings:
          description: Monitoring Settings of the vault
          $ref: '#/components/schemas/MonitoringSettings'
        redundancySettings:
          description: The redundancy Settings of a Vault
          type: object
          properties:
            standardTierStorageRedundancy:
              description: The storage redundancy setting of a vault
              enum:
                - LocallyRedundant
                - GeoRedundant
                - ZoneRedundant
              type: string
              readOnly: true
              x-ms-enum:
                name: standardTierStorageRedundancy
                modelAsString: true
            crossRegionRestore:
              description: Flag to show if Cross Region Restore is enabled on the Vault or not
              enum:
                - Enabled
                - Disabled
              type: string
              readOnly: true
              x-ms-enum:
                name: crossRegionRestore
                modelAsString: true
    IdentityData:
      required:
        - type
      type: object
      description: Identity for the resource.
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
          enum:
            - SystemAssigned
            - None
            - UserAssigned
            - SystemAssigned, UserAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: true
        userAssignedIdentities:
          description: 'The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserIdentity'
    UserIdentity:
      type: object
      description: A resource identity that is managed by the user of the service.
      properties:
        principalId:
          description: The principal ID of the user-assigned identity.
          type: string
          readOnly: true
        clientId:
          description: The client ID of the user-assigned identity.
          type: string
          readOnly: true
    PrivateEndpointConnectionVaultProperties:
      description: Information to be stored in Vault properties as an element of privateEndpointConnections List.
      readOnly: true
      properties:
        id:
          description: Format of id subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.[Service]/{resource}/{resourceName}/privateEndpointConnections/{connectionName}.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnection'
        name:
          description: The name of the private Endpoint Connection
          type: string
          readOnly: true
        type:
          description: The type, which will be of the format, Microsoft.RecoveryServices/vaults/privateEndpointConnections
          type: string
          readOnly: true
        location:
          description: The location of the private Endpoint connection
          type: string
          readOnly: true
      type: object
    PrivateEndpointConnection:
      description: Private Endpoint Connection Response Properties.
      readOnly: true
      type: object
      properties:
        provisioningState:
          description: Gets or sets provisioning state of the private endpoint connection.
          readOnly: true
          enum:
            - Succeeded
            - Deleting
            - Failed
            - Pending
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
    PrivateEndpoint:
      description: The Private Endpoint network resource that is linked to the Private Endpoint connection.
      readOnly: true
      type: object
      properties:
        id:
          description: Gets or sets id.
          readOnly: true
          type: string
    PrivateLinkServiceConnectionState:
      description: Gets or sets private link service connection state.
      readOnly: true
      type: object
      properties:
        status:
          description: Gets or sets the status.
          readOnly: true
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateEndpointConnectionStatus
            modelAsString: true
        description:
          description: Gets or sets description.
          readOnly: true
          type: string
        actionsRequired:
          description: Gets or sets actions required.
          readOnly: true
          type: string
    PrivateLinkResources:
      description: Class which represent the stamps associated with the vault.
      readOnly: true
      type: object
      properties:
        value:
          description: A collection of private link resources
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: Link to the next chunk of the response
          type: string
    PrivateLinkResource:
      description: Information of the private link resource.
      readOnly: true
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties
          x-ms-client-flatten: true
        id:
          description: Fully qualified identifier of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the resource.
          type: string
          readOnly: true
        type:
          description: e.g. Microsoft.RecoveryServices/vaults/privateLinkResources
          readOnly: true
          type: string
      type: object
    PrivateLinkResourceProperties:
      type: object
      description: Properties of the private link resource.
      properties:
        groupId:
          description: e.g. f9ad6492-33d4-4690-9999-6bfd52a0d081 (Backup) or f9ad6492-33d4-4690-9999-6bfd52a0d082 (SiteRecovery)
          readOnly: true
          type: string
        requiredMembers:
          description: '[backup-ecs1, backup-prot1, backup-prot1b, backup-prot1c, backup-id1]'
          readOnly: true
          type: array
          items:
            type: string
        requiredZoneNames:
          description: The private link resource Private link DNS zone name.
          readOnly: true
          type: array
          items:
            type: string
    CmkKeyVaultProperties:
      type: object
      description: The properties of the Key Vault which hosts CMK
      properties:
        keyUri:
          description: The key uri of the Customer Managed Key
          type: string
    CmkKekIdentity:
      type: object
      description: The details of the identity used for CMK
      properties:
        useSystemAssignedIdentity:
          type: boolean
          description: Indicate that system assigned identity should be used. Mutually exclusive with 'userAssignedIdentity' field
        userAssignedIdentity:
          type: string
          description: The user assigned identity to be used to grant permissions in case the type of identity used is UserAssigned
    OperationResource:
      type: object
      description: Operation Resource
      properties:
        endTime:
          description: End time of the operation
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/Error'
          description: Required if status == failed or status == canceled. This is the OData v4 error format, used by the RPC and will go into the v2.2 Azure REST API guidelines.
        id:
          description: It should match what is used to GET the operation result
          type: string
        name:
          description: It must match the last segment of the "id" field, and will typically be a GUID / system generated value
          type: string
        status:
          description: The status of the operation. (InProgress/Success/Failed/Cancelled)
          type: string
        startTime:
          description: Start time of the operation
          format: date-time
          type: string
    CloudError:
      description: An error response from Azure Backup.
      properties:
        error:
          $ref: '#/components/schemas/Error'
      title: CloudError
      x-ms-external: true
      type: object
    Error:
      description: The resource management error response.
      properties:
        additionalInfo:
          description: The error additional info.
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          readOnly: true
          type: array
        code:
          description: The error code.
          readOnly: true
          type: string
        details:
          description: The error details.
          items:
            $ref: '#/components/schemas/Error'
          readOnly: true
          type: array
        message:
          description: The error message.
          readOnly: true
          type: string
        target:
          description: The error target.
          readOnly: true
          type: string
      type: object
    ErrorAdditionalInfo:
      description: The resource management error additional info.
      properties:
        info:
          description: The additional info.
          readOnly: true
          type: object
        type:
          description: The additional info type.
          readOnly: true
          type: string
      type: object
    CertificateRequest:
      description: Details of the certificate to be uploaded to the vault.
      properties:
        properties:
          $ref: '#/components/schemas/RawCertificateData'
      type: object
    RawCertificateData:
      description: Raw certificate data.
      type: object
      properties:
        authType:
          description: Specifies the authentication type.
          enum:
            - Invalid
            - ACS
            - AAD
            - AccessControlService
            - AzureActiveDirectory
          type: string
          x-ms-enum:
            name: AuthType
            modelAsString: true
        certificate:
          format: byte
          description: The base64 encoded certificate raw data string
          type: string
    ResourceCertificateAndAadDetails:
      description: Certificate details representing the Vault credentials for AAD.
      required:
        - certificate
        - resourceId
        - aadAuthority
        - aadTenantId
        - servicePrincipalClientId
        - servicePrincipalObjectId
        - azureManagementEndpointAudience
        - subject
        - validFrom
        - validTo
        - thumbprint
        - friendlyName
        - issuer
      x-ms-discriminator-value: AzureActiveDirectory
      properties:
        authType:
          description: This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
          type: string
        certificate:
          format: byte
          description: The base64 encoded certificate raw data string.
          type: string
        friendlyName:
          description: Certificate friendly name.
          type: string
        issuer:
          description: Certificate issuer.
          type: string
        resourceId:
          format: int64
          description: Resource ID of the vault.
          type: integer
        subject:
          description: Certificate Subject Name.
          type: string
        thumbprint:
          description: Certificate thumbprint.
          type: string
        validFrom:
          format: date-time
          description: Certificate Validity start Date time.
          type: string
        validTo:
          format: date-time
          description: Certificate Validity End Date time.
          type: string
        aadAuthority:
          description: AAD tenant authority.
          type: string
        aadTenantId:
          description: AAD tenant Id.
          type: string
        servicePrincipalClientId:
          description: AAD service principal clientId.
          type: string
        servicePrincipalObjectId:
          description: AAD service principal ObjectId.
          type: string
        azureManagementEndpointAudience:
          description: Azure Management Endpoint Audience.
          type: string
        serviceResourceId:
          description: Service Resource Id.
          type: string
        aadAudience:
          description: AAD audience for the resource
          type: string
      type: object
    ResourceCertificateAndAcsDetails:
      description: Certificate details representing the Vault credentials for ACS.
      required:
        - certificate
        - resourceId
        - globalAcsNamespace
        - globalAcsHostName
        - globalAcsRPRealm
        - subject
        - validFrom
        - validTo
        - thumbprint
        - friendlyName
        - issuer
      x-ms-discriminator-value: AccessControlService
      properties:
        authType:
          description: This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
          type: string
        certificate:
          format: byte
          description: The base64 encoded certificate raw data string.
          type: string
        friendlyName:
          description: Certificate friendly name.
          type: string
        issuer:
          description: Certificate issuer.
          type: string
        resourceId:
          format: int64
          description: Resource ID of the vault.
          type: integer
        subject:
          description: Certificate Subject Name.
          type: string
        thumbprint:
          description: Certificate thumbprint.
          type: string
        validFrom:
          format: date-time
          description: Certificate Validity start Date time.
          type: string
        validTo:
          format: date-time
          description: Certificate Validity End Date time.
          type: string
        globalAcsNamespace:
          description: ACS namespace name - tenant for our service.
          type: string
        globalAcsHostName:
          description: Acs mgmt host name to connect to.
          type: string
        globalAcsRPRealm:
          description: Global ACS namespace RP realm.
          type: string
      type: object
    ResourceCertificateDetails:
      description: Certificate details representing the Vault credentials.
      required:
        - authType
      type: object
      properties:
        authType:
          description: This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.
          type: string
        certificate:
          format: byte
          description: The base64 encoded certificate raw data string.
          type: string
        friendlyName:
          description: Certificate friendly name.
          type: string
        issuer:
          description: Certificate issuer.
          type: string
        resourceId:
          format: int64
          description: Resource ID of the vault.
          type: integer
        subject:
          description: Certificate Subject Name.
          type: string
        thumbprint:
          description: Certificate thumbprint.
          type: string
        validFrom:
          format: date-time
          description: Certificate Validity start Date time.
          type: string
        validTo:
          format: date-time
          description: Certificate Validity End Date time.
          type: string
      discriminator:
        propertyName: authType
    VaultCertificateResponse:
      description: Certificate corresponding to a vault that can be used by clients to register themselves with the vault.
      x-ms-azure-resource: true
      properties:
        name:
          description: Resource name associated with the resource.
          type: string
          readOnly: true
        type:
          description: Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
          type: string
          readOnly: true
        id:
          description: Resource Id represents the complete path to the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ResourceCertificateDetails'
      type: object
    VaultUsage:
      description: Usages of a vault.
      type: object
      properties:
        unit:
          description: Unit of the usage.
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountPerSecond
            - BytesPerSecond
          type: string
          x-ms-enum:
            name: UsagesUnit
            modelAsString: true
        quotaPeriod:
          description: Quota period of usage.
          type: string
        nextResetTime:
          format: date-time
          description: Next reset time of usage.
          type: string
        currentValue:
          format: int64
          description: Current value of usage.
          type: integer
        limit:
          format: int64
          description: Limit of usage.
          type: integer
        name:
          $ref: '#/components/schemas/NameInfo'
          description: Name of usage.
    VaultUsageList:
      description: Usage for vault.
      type: object
      properties:
        value:
          description: The list of usages for the given vault.
          type: array
          items:
            $ref: '#/components/schemas/VaultUsage'
    NameInfo:
      description: The name of usage.
      type: object
      properties:
        value:
          description: Value of usage.
          type: string
        localizedValue:
          description: Localized value of usage.
          type: string
  x-stackQL-resources:
    replication_usages:
      id: azure.recovery_services.replication_usages
      name: replication_usages
      title: Replication_usages
      methods:
        ReplicationUsages_List:
          operation:
            $ref: '#/paths/~1Subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1replicationUsages~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replication_usages/methods/ReplicationUsages_List'
        insert: []
        update: []
        delete: []
    private_link_resources:
      id: azure.recovery_services.private_link_resources
      name: private_link_resources
      title: Private_link_resources
      methods:
        PrivateLinkResources_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1privateLinkResources~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkResources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1privateLinkResources~1{privateLinkResourceName}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_Get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_List'
        insert: []
        update: []
        delete: []
    recovery_services:
      id: azure.recovery_services.recovery_services
      name: recovery_services
      title: Recovery_services
      methods:
        RecoveryServices_CheckNameAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1locations~1{location}~1checkNameAvailability~1?api-version=2022-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    vaults:
      id: azure.recovery_services.vaults
      name: vaults
      title: Vaults
      methods:
        Vaults_ListBySubscriptionId:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.RecoveryServices~1vaults~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Vaults_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Vaults_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Vaults_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1?api-version=2022-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Vaults_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1?api-version=2022-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Vaults_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1?api-version=2022-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GetOperationStatus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1operationStatus~1{operationId}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GetOperationResult:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1operationResults~1{operationId}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vaults/methods/Vaults_Get'
          - $ref: '#/components/x-stackQL-resources/vaults/methods/Vaults_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/vaults/methods/Vaults_ListBySubscriptionId'
        insert:
          - $ref: '#/components/x-stackQL-resources/vaults/methods/Vaults_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vaults/methods/Vaults_Delete'
    operations:
      id: azure.recovery_services.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.RecoveryServices~1operations~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    vault_extended_info:
      id: azure.recovery_services.vault_extended_info
      name: vault_extended_info
      title: Vault_extended_info
      methods:
        VaultExtendedInfo_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1extendedInformation~1vaultExtendedInfo~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VaultExtendedInfo_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1extendedInformation~1vaultExtendedInfo~1?api-version=2022-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        VaultExtendedInfo_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1extendedInformation~1vaultExtendedInfo~1?api-version=2022-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vault_extended_info/methods/VaultExtendedInfo_Get'
        insert:
          - $ref: '#/components/x-stackQL-resources/vault_extended_info/methods/VaultExtendedInfo_CreateOrUpdate'
        update: []
        delete: []
    vault_certificates:
      id: azure.recovery_services.vault_certificates
      name: vault_certificates
      title: Vault_certificates
      methods:
        VaultCertificates_Create:
          operation:
            $ref: '#/paths/~1Subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1certificates~1{certificateName}~1?api-version=2022-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/vault_certificates/methods/VaultCertificates_Create'
        update: []
        delete: []
    registered_identities:
      id: azure.recovery_services.registered_identities
      name: registered_identities
      title: Registered_identities
      methods:
        RegisteredIdentities_Delete:
          operation:
            $ref: '#/paths/~1Subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1registeredIdentities~1{identityName}~1?api-version=2022-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/registered_identities/methods/RegisteredIdentities_Delete'
    usages:
      id: azure.recovery_services.usages
      name: usages
      title: Usages
      methods:
        Usages_ListByVaults:
          operation:
            $ref: '#/paths/~1Subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RecoveryServices~1vaults~1{vaultName}~1usages~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/Usages_ListByVaults'
        insert: []
        update: []
        delete: []
paths:
  /Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/replicationUsages/?api-version=2022-04-01:
    get:
      tags:
        - ReplicationUsages
      description: Fetches the replication usages of the vault.
      operationId: ReplicationUsages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationUsageList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: replication_usages
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateLinkResources/?api-version=2022-04-01:
    get:
      tags:
        - ListPrivateLinkResources
      summary: Returns the list of private link resources that need to be created for Backup and SiteRecovery
      operationId: PrivateLinkResources_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResources'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
        itemName: value
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/privateLinkResources/{privateLinkResourceName}/?api-version=2022-04-01:
    get:
      tags:
        - GetPrivateLinkResources
      summary: Returns a specified private link resource that need to be created for Backup and SiteRecovery
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - $ref: '#/components/parameters/ApiVersion'
        - name: privateLinkResourceName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/locations/{location}/checkNameAvailability/?api-version=2022-04-01:
    post:
      tags:
        - RecoveryServices
      summary: "API to check for resource name availability.\r\nA name is available if no other resource exists that has the same SubscriptionId, Resource Name and Type\r\nor if one or more such resources exist, each of these must be GC'd and their time of deletion be more than 24 Hours Ago"
      operationId: RecoveryServices_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/ApiVersion'
        - name: location
          in: path
          description: Location of the resource
          required: true
          schema:
            type: string
      requestBody:
        description: Contains information about Resource type and Resource name
        required: true
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: recovery_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/vaults/?api-version=2022-04-01:
    get:
      tags:
        - Vaults
      description: Fetches all the resources of the specified type in the subscription.
      operationId: Vaults_ListBySubscriptionId
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
        itemName: value
      x-stackQL-resource: vaults
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /providers/Microsoft.RecoveryServices/operations/?api-version=2022-04-01:
    get:
      tags:
        - Operations
      description: Returns the list of available operations.
      operationId: Operations_List
      parameters:
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDiscoveryResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
        itemName: value
      x-stackQL-resource: operations
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/?api-version=2022-04-01:
    get:
      tags:
        - Vaults
      description: Retrieve a list of Vaults.
      operationId: Vaults_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
        itemName: value
      x-stackQL-resource: vaults
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/?api-version=2022-04-01:
    get:
      tags:
        - Vaults
      description: Get the Vault details.
      operationId: Vaults_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-stackQL-resource: vaults
      x-stackQL-verb: select
    put:
      tags:
        - Vaults
      description: Creates or updates a Recovery Services vault.
      operationId: Vaults_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
      requestBody:
        description: Recovery Services Vault to be created.
        required: true
        x-ms-requestBody-name: vault
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vault'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-ms-long-running-operation: true
      x-stackQL-resource: vaults
      x-stackQL-verb: insert
    delete:
      tags:
        - Vaults
      description: Deletes a vault.
      operationId: Vaults_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-stackQL-resource: vaults
      x-stackQL-verb: delete
    patch:
      tags:
        - Vaults
      description: Updates the vault.
      operationId: Vaults_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
      requestBody:
        description: Recovery Services Vault to be created.
        required: true
        x-ms-requestBody-name: vault
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchVault'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-ms-long-running-operation: true
      x-stackQL-resource: vaults
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/extendedInformation/vaultExtendedInfo/?api-version=2022-04-01:
    get:
      tags:
        - VaultExtendedInfo
      description: Get the vault extended info.
      operationId: VaultExtendedInfo_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultExtendedInfoResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-stackQL-resource: vault_extended_info
      x-stackQL-verb: select
    put:
      tags:
        - VaultExtendedInfo
      description: Create vault extended info.
      operationId: VaultExtendedInfo_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: Details of ResourceExtendedInfo
        required: true
        x-ms-requestBody-name: resourceResourceExtendedInfoDetails
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultExtendedInfoResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultExtendedInfoResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-stackQL-resource: vault_extended_info
      x-stackQL-verb: insert
    patch:
      tags:
        - VaultExtendedInfo
      description: Update vault extended info.
      operationId: VaultExtendedInfo_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - $ref: '#/components/parameters/ApiVersion'
      requestBody:
        description: Details of ResourceExtendedInfo
        required: true
        x-ms-requestBody-name: resourceResourceExtendedInfoDetails
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultExtendedInfoResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultExtendedInfoResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      deprecated: false
      x-stackQL-resource: vault_extended_info
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/operationStatus/{operationId}/?api-version=2022-04-01:
    get:
      tags:
        - Vaults
      description: Gets the operation status for a resource.
      operationId: GetOperationStatus
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - name: operationId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vaults
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/operationResults/{operationId}/?api-version=2022-04-01:
    get:
      tags:
        - Vaults
      description: Gets the operation result for a resource.
      operationId: GetOperationResult
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - name: operationId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vault'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: vaults
      x-stackQL-verb: exec
  /Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/certificates/{certificateName}/?api-version=2022-04-01:
    put:
      tags:
        - VaultCertificates
      description: Uploads a certificate for a resource.
      operationId: VaultCertificates_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - name: certificateName
          in: path
          description: Certificate friendly name.
          required: true
          schema:
            type: string
      requestBody:
        description: Input parameters for uploading the vault certificate.
        required: true
        x-ms-requestBody-name: certificateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultCertificateResponse'
      deprecated: false
      x-stackQL-resource: vault_certificates
      x-stackQL-verb: insert
  /Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/registeredIdentities/{identityName}/?api-version=2022-04-01:
    delete:
      tags:
        - RegisteredIdentities
      description: Unregisters the given container from your Recovery Services vault.
      operationId: RegisteredIdentities_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
        - name: identityName
          in: path
          description: Name of the protection container to unregister.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NoContent
      deprecated: false
      x-stackQL-resource: registered_identities
      x-stackQL-verb: delete
  /Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/usages/?api-version=2022-04-01:
    get:
      tags:
        - VaultUsages
      description: Fetches the usages of the vault.
      operationId: Usages_ListByVaults
      parameters:
        - $ref: '#/components/parameters/SubscriptionId'
        - $ref: '#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/ResourceGroupName'
        - $ref: '#/components/parameters/VaultName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultUsageList'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: usages
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
