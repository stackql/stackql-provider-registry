openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Notification Hubs Management Client (Microsoft.NotificationHubs)
  description: Azure Notification Hub client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-24-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    OperationListResult:
      description: Result of the request to list NotificationHubs operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          readOnly: true
          type: array
          description: List of NotificationHubs operations supported by the Microsoft.NotificationHubs resource provider.
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          readOnly: true
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    Operation:
      description: A NotificationHubs REST API operation
      type: object
      properties:
        name:
          readOnly: true
          type: string
          description: 'Operation name: {provider}/{resource}/{operation}'
        display:
          description: The object that represents the operation.
          properties:
            provider:
              readOnly: true
              type: string
              description: 'Service provider: Microsoft.NotificationHubs'
            resource:
              readOnly: true
              type: string
              description: 'Resource on which the operation is performed: Invoice, etc.'
            operation:
              readOnly: true
              type: string
              description: 'Operation type: Read, write, delete, etc.'
    ErrorResponse:
      description: Error response indicates NotificationHubs service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
    CheckAvailabilityParameters:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku of the created namespace
        isAvailiable:
          type: boolean
          description: True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false.
      required:
        - name
      description: Parameters supplied to the Check Name Availability for Namespace and NotificationHubs.
      type: object
    CheckAvailabilityResult:
      properties:
        isAvailiable:
          type: boolean
          description: True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of a CheckAvailability resource.
      type: object
    NamespaceProperties:
      properties:
        name:
          type: string
          description: The name of the namespace.
        provisioningState:
          type: string
          description: Provisioning state of the Namespace.
        region:
          externalDocs:
            url: http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx
          type: string
          description: 'Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe'
        metricId:
          readOnly: true
          type: string
          description: Identifier for Azure Insights metrics
        status:
          externalDocs:
            url: http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx
          type: string
          description: Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
        createdAt:
          type: string
          format: date-time
          description: The time the namespace was created.
        updatedAt:
          type: string
          format: date-time
          description: The time the namespace was updated.
        serviceBusEndpoint:
          externalDocs:
            url: http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx
          type: string
          description: Endpoint you can use to perform NotificationHub operations.
        subscriptionId:
          type: string
          description: The Id of the Azure subscription associated with the namespace.
        scaleUnit:
          type: string
          description: ScaleUnit where the namespace gets created
        enabled:
          type: boolean
          description: Whether or not the namespace is currently enabled.
        critical:
          type: boolean
          description: Whether or not the namespace is set as Critical.
        dataCenter:
          type: string
          description: Data center for the namespace
        namespaceType:
          type: string
          description: The namespace type.
          enum:
            - Messaging
            - NotificationHub
          x-ms-enum:
            name: NamespaceType
            modelAsString: false
      description: Namespace properties.
      type: object
    NamespaceCreateOrUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NamespaceProperties'
          description: Properties of the Namespace.
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Parameters supplied to the CreateOrUpdate Namespace operation.
      type: object
    NamespacePatchParameters:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku of the created namespace
      description: Parameters supplied to the Patch Namespace operation.
      type: object
    NamespaceResource:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NamespaceProperties'
          description: Properties of the Namespace.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of a Namespace resource.
      type: object
    SharedAccessAuthorizationRuleProperties:
      properties:
        rights:
          type: array
          items:
            type: string
            enum:
              - Manage
              - Send
              - Listen
            x-ms-enum:
              name: AccessRights
              modelAsString: false
          description: The rights associated with the rule.
        primaryKey:
          readOnly: true
          type: string
          description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
        secondaryKey:
          readOnly: true
          type: string
          description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
        keyName:
          readOnly: true
          type: string
          description: A string that describes the authorization rule.
        claimType:
          readOnly: true
          type: string
          description: A string that describes the claim type
        claimValue:
          readOnly: true
          type: string
          description: A string that describes the claim value
        modifiedTime:
          readOnly: true
          type: string
          description: The last modified time for this rule
        createdTime:
          readOnly: true
          type: string
          description: The created time for this rule
        revision:
          readOnly: true
          type: integer
          description: The revision number for the rule
      description: SharedAccessAuthorizationRule properties.
      type: object
    SharedAccessAuthorizationRuleCreateOrUpdateParameters:
      properties:
        properties:
          $ref: '#/components/schemas/SharedAccessAuthorizationRuleProperties'
          description: Properties of the Namespace AuthorizationRules.
      required:
        - properties
      description: Parameters supplied to the CreateOrUpdate Namespace AuthorizationRules.
      type: object
    SharedAccessAuthorizationRuleResource:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedAccessAuthorizationRuleProperties'
          description: Properties of the Namespace AuthorizationRule.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of a Namespace AuthorizationRules.
      type: object
    NamespaceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceResource'
          description: Result of the List Namespace operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of Namespaces
      description: The response of the List Namespace operation.
      type: object
    SharedAccessAuthorizationRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Result of the List AuthorizationRules operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of AuthorizationRules
      description: The response of the List Namespace operation.
      type: object
    ResourceListKeys:
      properties:
        primaryConnectionString:
          type: string
          description: PrimaryConnectionString of the AuthorizationRule.
        secondaryConnectionString:
          type: string
          description: SecondaryConnectionString of the created AuthorizationRule
        primaryKey:
          type: string
          description: PrimaryKey of the created AuthorizationRule.
        secondaryKey:
          type: string
          description: SecondaryKey of the created AuthorizationRule
        keyName:
          type: string
          description: KeyName of the created AuthorizationRule
      description: Namespace/NotificationHub Connection String
      type: object
    PolicykeyResource:
      properties:
        policyKey:
          type: string
          description: Name of the key that has to be regenerated for the Namespace/Notification Hub Authorization Rule. The value can be Primary Key/Secondary Key.
      description: Namespace/NotificationHub Regenerate Keys
      type: object
    ApnsCredentialProperties:
      properties:
        apnsCertificate:
          type: string
          description: The APNS certificate. Specify if using Certificate Authentication Mode.
        certificateKey:
          type: string
          description: The APNS certificate password if it exists.
        endpoint:
          type: string
          description: The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
        thumbprint:
          type: string
          description: The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
        keyId:
          type: string
          description: A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
        appName:
          type: string
          description: The name of the application or BundleId. Specify if using Token Authentication Mode.
        appId:
          type: string
          description: The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
        token:
          type: string
          description: Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
      description: Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication Modes. The mode is determined based on the properties passed in.
      type: object
    ApnsCredential:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApnsCredentialProperties'
          description: Properties of NotificationHub ApnsCredential.
      description: Description of a NotificationHub ApnsCredential.
      type: object
    WnsCredentialProperties:
      properties:
        packageSid:
          type: string
          description: The package ID for this credential.
        secretKey:
          type: string
          description: The secret key.
        windowsLiveEndpoint:
          type: string
          description: The Windows Live endpoint.
      description: Description of a NotificationHub WnsCredential.
      type: object
    WnsCredential:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WnsCredentialProperties'
          description: Properties of NotificationHub WnsCredential.
      description: Description of a NotificationHub WnsCredential.
      type: object
    GcmCredentialProperties:
      properties:
        gcmEndpoint:
          type: string
          description: The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
        googleApiKey:
          type: string
          description: The Google API key.
      description: Description of a NotificationHub GcmCredential.
      type: object
    GcmCredential:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GcmCredentialProperties'
          description: Properties of NotificationHub GcmCredential.
      description: Description of a NotificationHub GcmCredential.
      type: object
    MpnsCredentialProperties:
      properties:
        mpnsCertificate:
          type: string
          description: The MPNS certificate.
        certificateKey:
          type: string
          description: The certificate key for this credential.
        thumbprint:
          type: string
          description: The MPNS certificate Thumbprint
      description: Description of a NotificationHub MpnsCredential.
      type: object
    MpnsCredential:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MpnsCredentialProperties'
          description: Properties of NotificationHub MpnsCredential.
      description: Description of a NotificationHub MpnsCredential.
      type: object
    AdmCredentialProperties:
      properties:
        clientId:
          type: string
          description: The client identifier.
        clientSecret:
          type: string
          description: The credential secret access key.
        authTokenUrl:
          type: string
          description: The URL of the authorization token.
      description: Description of a NotificationHub AdmCredential.
      type: object
    AdmCredential:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AdmCredentialProperties'
          description: Properties of NotificationHub AdmCredential.
      description: Description of a NotificationHub AdmCredential.
      type: object
    BaiduCredentialProperties:
      properties:
        baiduApiKey:
          type: string
          description: Baidu Api Key.
        baiduEndPoint:
          type: string
          description: Baidu Endpoint.
        baiduSecretKey:
          type: string
          description: Baidu Secret Key
      description: Description of a NotificationHub BaiduCredential.
      type: object
    BaiduCredential:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BaiduCredentialProperties'
          description: Properties of NotificationHub BaiduCredential.
      description: Description of a NotificationHub BaiduCredential.
      type: object
    NotificationHubProperties:
      properties:
        name:
          type: string
          description: The NotificationHub name.
        registrationTtl:
          type: string
          description: The RegistrationTtl of the created NotificationHub
        authorizationRules:
          type: array
          items:
            $ref: '#/components/schemas/SharedAccessAuthorizationRuleProperties'
          x-ms-identifiers:
            - keyName
          description: The AuthorizationRules of the created NotificationHub
        apnsCredential:
          $ref: '#/components/schemas/ApnsCredential'
          description: The ApnsCredential of the created NotificationHub
        wnsCredential:
          $ref: '#/components/schemas/WnsCredential'
          description: The WnsCredential of the created NotificationHub
        gcmCredential:
          $ref: '#/components/schemas/GcmCredential'
          description: The GcmCredential of the created NotificationHub
        mpnsCredential:
          $ref: '#/components/schemas/MpnsCredential'
          description: The MpnsCredential of the created NotificationHub
        admCredential:
          $ref: '#/components/schemas/AdmCredential'
          description: The AdmCredential of the created NotificationHub
        baiduCredential:
          $ref: '#/components/schemas/BaiduCredential'
          description: The BaiduCredential of the created NotificationHub
      description: NotificationHub properties.
      type: object
    NotificationHubCreateOrUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NotificationHubProperties'
          description: Properties of the NotificationHub.
      required:
        - properties
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Parameters supplied to the CreateOrUpdate NotificationHub operation.
      type: object
    NotificationHubPatchParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NotificationHubProperties'
          description: Properties of the NotificationHub.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Parameters supplied to the patch NotificationHub operation.
      type: object
    DebugSendParameters:
      description: Debug Send payload
      type: object
    NotificationHubResource:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NotificationHubProperties'
          description: Properties of the NotificationHub.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of a NotificationHub Resource.
      type: object
    DebugSendResponse:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DebugSendResult'
          description: Properties of the NotificationHub.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of a NotificationHub Resource.
      type: object
    PnsCredentialsResource:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PnsCredentialsProperties'
          description: NotificationHub PNS Credentials.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of a NotificationHub PNS Credentials.
      type: object
    PnsCredentialsProperties:
      properties:
        apnsCredential:
          $ref: '#/components/schemas/ApnsCredential'
          description: The ApnsCredential of the created NotificationHub
        wnsCredential:
          $ref: '#/components/schemas/WnsCredential'
          description: The WnsCredential of the created NotificationHub
        gcmCredential:
          $ref: '#/components/schemas/GcmCredential'
          description: The GcmCredential of the created NotificationHub
        mpnsCredential:
          $ref: '#/components/schemas/MpnsCredential'
          description: The MpnsCredential of the created NotificationHub
        admCredential:
          $ref: '#/components/schemas/AdmCredential'
          description: The AdmCredential of the created NotificationHub
        baiduCredential:
          $ref: '#/components/schemas/BaiduCredential'
          description: The BaiduCredential of the created NotificationHub
      description: Description of a NotificationHub PNS Credentials.
      type: object
    NotificationHubListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NotificationHubResource'
          description: Result of the List NotificationHub operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if Value contains incomplete list of NotificationHub
      description: The response of the List NotificationHub operation.
      type: object
    Resource:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku of the created namespace
      x-ms-azure-resource: true
      type: object
    SubResource:
      properties:
        id:
          type: string
          description: Resource Id
      x-ms-azure-resource: true
      type: object
    DebugSendResult:
      properties:
        success:
          type: number
          description: successful send
        failure:
          type: number
          description: send failure
        results:
          type: object
          description: actual failure description
      x-ms-azure-resource: true
      type: object
    Sku:
      properties:
        name:
          type: string
          description: Name of the notification hub sku
          enum:
            - Free
            - Basic
            - Standard
          x-ms-enum:
            name: SkuName
            modelAsString: true
        tier:
          type: string
          description: The tier of particular sku
        size:
          type: string
          description: The Sku size
        family:
          type: string
          description: The Sku Family
        capacity:
          type: integer
          description: The capacity of the resource
      required:
        - name
      description: The Sku description for a namespace
      type: object
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: azure.notification_hubs.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.NotificationHubs~1operations~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    namespaces:
      id: azure.notification_hubs.namespaces
      name: namespaces
      title: Namespaces
      methods:
        Namespaces_CheckAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NotificationHubs~1checkNamespaceAvailability~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Namespaces_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1?api-version=2017-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Namespaces_Patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1?api-version=2017-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Namespaces_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1?api-version=2017-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Namespaces_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Namespaces_CreateOrUpdateAuthorizationRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1AuthorizationRules~1{authorizationRuleName}~1?api-version=2017-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Namespaces_DeleteAuthorizationRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1AuthorizationRules~1{authorizationRuleName}~1?api-version=2017-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Namespaces_GetAuthorizationRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1AuthorizationRules~1{authorizationRuleName}~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Namespaces_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Namespaces_ListAll:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NotificationHubs~1namespaces~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Namespaces_ListAuthorizationRules:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1AuthorizationRules~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Namespaces_ListKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1AuthorizationRules~1{authorizationRuleName}~1listKeys~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Namespaces_RegenerateKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1AuthorizationRules~1{authorizationRuleName}~1regenerateKeys~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/Namespaces_List'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/Namespaces_ListAll'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/Namespaces_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/Namespaces_Delete'
    notification_hubs:
      id: azure.notification_hubs.notification_hubs
      name: notification_hubs
      title: Notification_hubs
      methods:
        NotificationHubs_CheckNotificationHubAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1checkNotificationHubAvailability~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NotificationHubs_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1?api-version=2017-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NotificationHubs_Patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1?api-version=2017-04-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NotificationHubs_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1?api-version=2017-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NotificationHubs_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NotificationHubs_DebugSend:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1debugsend~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        NotificationHubs_CreateOrUpdateAuthorizationRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1AuthorizationRules~1{authorizationRuleName}~1?api-version=2017-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NotificationHubs_DeleteAuthorizationRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1AuthorizationRules~1{authorizationRuleName}~1?api-version=2017-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        NotificationHubs_GetAuthorizationRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1AuthorizationRules~1{authorizationRuleName}~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NotificationHubs_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NotificationHubs_ListAuthorizationRules:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1AuthorizationRules~1?api-version=2017-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        NotificationHubs_ListKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1AuthorizationRules~1{authorizationRuleName}~1listKeys~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NotificationHubs_RegenerateKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1AuthorizationRules~1{authorizationRuleName}~1regenerateKeys~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        NotificationHubs_GetPnsCredentials:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NotificationHubs~1namespaces~1{namespaceName}~1notificationHubs~1{notificationHubName}~1pnsCredentials~1?api-version=2017-04-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/NotificationHubs_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/NotificationHubs_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notification_hubs/methods/NotificationHubs_Delete'
paths:
  /providers/Microsoft.NotificationHubs/operations/?api-version=2017-04-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available NotificationHubs REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: NotificationHubs error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability/?api-version=2017-04-01:
    post:
      tags:
        - Namespaces
      operationId: Namespaces_CheckAvailability
      description: Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.
      requestBody:
        description: The namespace name.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAvailabilityParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Checks if the Namespace name is a valid available name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAvailabilityResult'
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/?api-version=2017-04-01:
    put:
      tags:
        - Namespaces
      operationId: Namespaces_CreateOrUpdate
      description: Creates/Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.
      externalDocs:
        url: http://msdn.microsoft.com/en-us/library/windowsazure/jj856303.aspx
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create a Namespace Resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceCreateOrUpdateParameters'
      responses:
        '200':
          description: Namespace is Create/Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
        '201':
          description: Namespace is Create/Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
      x-stackQL-resource: namespaces
      x-stackQL-verb: insert
    patch:
      tags:
        - Namespaces
      operationId: Namespaces_Patch
      description: Patches the existing namespace
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to patch a Namespace Resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespacePatchParameters'
      responses:
        '200':
          description: Namespace is Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
    delete:
      tags:
        - Namespaces
      operationId: Namespaces_Delete
      description: Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.
      externalDocs:
        url: http://msdn.microsoft.com/en-us/library/windowsazure/jj856296.aspx
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace is deleted
        '202':
          description: Namespace delete request has been accepted
        '204':
          description: Namespace is already Deleted
      x-ms-long-running-operation: true
      x-stackQL-resource: namespaces
      x-stackQL-verb: delete
    get:
      tags:
        - Namespaces
      operationId: Namespaces_Get
      description: Returns the description for the specified namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get Namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/?api-version=2017-04-01:
    put:
      tags:
        - Namespaces
      operationId: Namespaces_CreateOrUpdateAuthorizationRule
      description: Creates an authorization rule for a namespace
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: Authorization Rule Name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The shared access authorization rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters'
      responses:
        '200':
          description: Namespace Authorization Rule is Created/Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
    delete:
      tags:
        - Namespaces
      operationId: Namespaces_DeleteAuthorizationRule
      description: Deletes a namespace authorization rule
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: Authorization Rule Name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace AuthorizationRule is deleted
        '204':
          description: Namespace AuthorizationRule is already deleted
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
    get:
      tags:
        - Namespaces
      operationId: Namespaces_GetAuthorizationRule
      description: Gets an authorization rule for a namespace by name.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: Authorization rule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get the Namespace AuthorizationRule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/?api-version=2017-04-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_List
      description: Lists the available namespaces within a resourceGroup.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group. If resourceGroupName value is null the method lists all the namespaces within subscription
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists all Namespaces with the ResourceGroup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: namespaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces/?api-version=2017-04-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_ListAll
      description: Lists all the available namespaces within the subscription irrespective of the resourceGroups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets all the Namespaces within the subscription irrespective of the ResourceGroup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: namespaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/?api-version=2017-04-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_ListAuthorizationRules
      description: Gets the authorization rules for a namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get the List of AuthorizationRules of a Namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys/?api-version=2017-04-01:
    post:
      tags:
        - Namespaces
      operationId: Namespaces_ListKeys
      description: 'Gets the Primary and Secondary ConnectionStrings to the namespace '
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: The connection string of the namespace for the specified authorizationRule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the Namespace AuthorizationRule's Primary keys and Secondary keys along with the ConnectionStrings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys/?api-version=2017-04-01:
    post:
      tags:
        - Namespaces
      operationId: Namespaces_RegenerateKeys
      description: Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: The connection string of the namespace for the specified authorizationRule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to regenerate the Namespace Authorization Rule Key.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicykeyResource'
      responses:
        '200':
          description: Regenerate the Primary/Secondary Key and returns the Keys and the connection string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
      x-stackQL-resource: namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability/?api-version=2017-04-01:
    post:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_CheckNotificationHubAvailability
      description: Checks the availability of the given notificationHub in a namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The notificationHub name.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAvailabilityParameters'
      responses:
        '200':
          description: Checks if the NotificationHub name is a valid available name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAvailabilityResult'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/?api-version=2017-04-01:
    put:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_CreateOrUpdate
      description: Creates/Update a NotificationHub in a namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create/update a NotificationHub Resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationHubCreateOrUpdateParameters'
      responses:
        '200':
          description: NotificationHub is Created/Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
        '201':
          description: NotificationHub is Created/Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: insert
    patch:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_Patch
      description: Patch a NotificationHub in a namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to patch a NotificationHub Resource.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationHubPatchParameters'
      responses:
        '200':
          description: NotificationHub is patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
    delete:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_Delete
      description: Deletes a notification hub associated with a namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace is deleted
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: delete
    get:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_Get
      description: Lists the notification hubs associated with a namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get the NotificationHub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubResource'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/debugsend/?api-version=2017-04-01:
    post:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_DebugSend
      description: test send a push notification
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Debug send parameters
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DebugSendParameters'
      responses:
        '201':
          description: push send status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebugSendResponse'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}/?api-version=2017-04-01:
    put:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_CreateOrUpdateAuthorizationRule
      description: Creates/Updates an authorization rule for a NotificationHub
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: Authorization Rule Name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The shared access authorization rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters'
      responses:
        '200':
          description: NotificationHub AuthorizationRule is Created/Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
    delete:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_DeleteAuthorizationRule
      description: Deletes a notificationHub authorization rule
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: Authorization Rule Name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: NotificationHub AuthorizationRule is deleted
        '204':
          description: NotificationHub AuthorizationRule is already deleted
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
    get:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_GetAuthorizationRule
      description: Gets an authorization rule for a NotificationHub by name.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: authorization rule name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get NotificationHub AuthorizationRule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/?api-version=2017-04-01:
    get:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_List
      description: Lists the notification hubs associated with a namespace.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get all NotificationHubs within a Namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHubListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/?api-version=2017-04-01:
    get:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_ListAuthorizationRules
      description: Gets the authorization rules for a NotificationHub.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Get all NotificationHub AuthorizationRules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}/listKeys/?api-version=2017-04-01:
    post:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_ListKeys
      description: 'Gets the Primary and Secondary ConnectionStrings to the NotificationHub '
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: The connection string of the NotificationHub for the specified authorizationRule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets the Namespace AuthorizationRule's Primary keys and Secondary keys along with the ConnectionStrings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys/?api-version=2017-04-01:
    post:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_RegenerateKeys
      description: Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - name: authorizationRuleName
          in: path
          description: The connection string of the NotificationHub for the specified authorizationRule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to regenerate the NotificationHub Authorization Rule Key.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicykeyResource'
      responses:
        '200':
          description: Regenerate the Primary/Secondary Key and returns the Keys and the connection string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/pnsCredentials/?api-version=2017-04-01:
    post:
      tags:
        - NotificationHubs
      operationId: NotificationHubs_GetPnsCredentials
      description: Lists the PNS Credentials associated with a notification hub .
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: namespaceName
          in: path
          description: The namespace name.
          required: true
          schema:
            type: string
        - name: notificationHubName
          in: path
          description: The notification hub name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Gets all the NotificationHub PNS credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PnsCredentialsResource'
      x-stackQL-resource: notification_hubs
      x-stackQL-verb: exec
x-stackQL-config:
  variations:
    isObjectSchemaImplicitlyUnioned: true
