openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Cognitive Services Management Client (Microsoft.CognitiveServices)
  description: Cognitive Services Management Client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-24-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Kind:
      type: string
      description: The kind (type) of cognitive service account.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    SkuName:
      type: string
      description: The name of SKU.
    Account:
      description: Cognitive Services account is an Azure resource representing the provisioned account, it's type, location and SKU.
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/Kind'
          description: The Kind of the resource.
        sku:
          $ref: '#/components/schemas/Sku'
        identity:
          $ref: '#/components/schemas/Identity'
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/AccountProperties'
          description: Properties of Cognitive Services account.
      allOf:
        - $ref: '#/components/schemas/AzureEntityResource'
    AccountListResult:
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of accounts.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Account'
          description: Gets the list of Cognitive Services accounts and their properties.
      description: The list of cognitive services accounts operation response.
    AccountProperties:
      type: object
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: Gets the status of the cognitive services account at the time the operation was called.
          enum:
            - Accepted
            - Creating
            - Deleting
            - Moving
            - Failed
            - Succeeded
            - ResolvingDNS
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        endpoint:
          type: string
          description: Endpoint of the created account.
          readOnly: true
        internalId:
          type: string
          description: The internal identifier (deprecated, do not use this property).
          readOnly: true
        capabilities:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SkuCapability'
          x-ms-identifiers:
            - name
          description: Gets the capabilities of the cognitive services account. Each item indicates the capability of a specific feature. The values are read-only and for reference only.
        isMigrated:
          type: boolean
          description: If the resource is migrated from an existing key.
          readOnly: true
        migrationToken:
          type: string
          description: Resource migration token.
        skuChangeInfo:
          $ref: '#/components/schemas/SkuChangeInfo'
          description: Sku change info of account.
          readOnly: true
        customSubDomainName:
          type: string
          description: Optional subdomain name used for token-based authentication.
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: A collection of rules governing the accessibility from specific network locations.
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: The encryption properties for this resource.
        userOwnedStorage:
          type: array
          items:
            $ref: '#/components/schemas/UserOwnedStorage'
          x-ms-identifiers:
            - resourceId
          description: The storage accounts for this resource.
        privateEndpointConnections:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: The private endpoint connection associated with the Cognitive Services account.
        publicNetworkAccess:
          type: string
          description: Whether or not public endpoint access is allowed for this account.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        apiProperties:
          $ref: '#/components/schemas/ApiProperties'
          description: The api properties for special APIs.
        dateCreated:
          readOnly: true
          type: string
          description: Gets the date of cognitive services account creation.
        callRateLimit:
          readOnly: true
          $ref: '#/components/schemas/CallRateLimit'
        dynamicThrottlingEnabled:
          type: boolean
          description: The flag to enable dynamic throttling.
        quotaLimit:
          readOnly: true
          $ref: '#/components/schemas/QuotaLimit'
        restrictOutboundNetworkAccess:
          type: boolean
        allowedFqdnList:
          type: array
          items:
            type: string
        disableLocalAuth:
          type: boolean
        endpoints:
          readOnly: true
          type: object
          additionalProperties:
            type: string
        restore:
          type: boolean
        deletionDate:
          type: string
          description: The deletion date, only available for deleted account.
          readOnly: true
        scheduledPurgeDate:
          type: string
          description: The scheduled purge date, only available for deleted account.
          readOnly: true
      description: Properties of Cognitive Services account.
    ApiProperties:
      type: object
      additionalProperties:
        type: object
      properties:
        qnaRuntimeEndpoint:
          type: string
          description: (QnAMaker Only) The runtime endpoint of QnAMaker.
        qnaAzureSearchEndpointKey:
          type: string
          description: (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
        qnaAzureSearchEndpointId:
          type: string
          description: (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
        statisticsEnabled:
          type: boolean
          description: (Bing Search Only) The flag to enable statistics of Bing Search.
        eventHubConnectionString:
          type: string
          description: (Personalization Only) The flag to enable statistics of Bing Search.
          pattern: ^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$
          maxLength: 1000
        storageAccountConnectionString:
          type: string
          description: (Personalization Only) The storage account connection string.
          pattern: ^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$
          maxLength: 1000
        aadClientId:
          type: string
          description: (Metrics Advisor Only) The Azure AD Client Id (Application Id).
          maxLength: 500
        aadTenantId:
          type: string
          description: (Metrics Advisor Only) The Azure AD Tenant Id.
          maxLength: 500
        superUser:
          type: string
          description: (Metrics Advisor Only) The super user of Metrics Advisor.
          maxLength: 500
        websiteName:
          type: string
          description: (Metrics Advisor Only) The website name of Metrics Advisor.
          maxLength: 500
      description: The api properties for special APIs.
    CallRateLimit:
      type: object
      properties:
        count:
          type: number
          description: The count value of Call Rate Limit.
        renewalPeriod:
          type: number
          description: The renewal period in seconds of Call Rate Limit.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ThrottlingRule'
          x-ms-identifiers:
            - key
      description: The call rate limit Cognitive Services account.
    QuotaLimit:
      type: object
      properties:
        count:
          type: number
        renewalPeriod:
          type: number
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ThrottlingRule'
          x-ms-identifiers:
            - key
    ThrottlingRule:
      type: object
      properties:
        key:
          type: string
        renewalPeriod:
          type: number
        count:
          type: number
        minCount:
          type: number
        dynamicThrottlingEnabled:
          type: boolean
        matchPatterns:
          type: array
          items:
            $ref: '#/components/schemas/RequestMatchPattern'
          x-ms-identifiers:
            - path
            - method
    RequestMatchPattern:
      type: object
      properties:
        path:
          type: string
        method:
          type: string
    ApiKeys:
      type: object
      properties:
        key1:
          type: string
          description: Gets the value of key 1.
        key2:
          type: string
          description: Gets the value of key 2.
      description: The access keys for the cognitive services account.
    SkuChangeInfo:
      type: object
      properties:
        countOfDowngrades:
          type: number
          description: Gets the count of downgrades.
        countOfUpgradesAfterDowngrades:
          type: number
          description: Gets the count of upgrades after downgrades.
        lastChangeDate:
          type: string
          description: Gets the last change date.
      description: Sku change info of account.
    RegenerateKeyParameters:
      type: object
      properties:
        keyName:
          type: string
          description: key name to generate (Key1|Key2)
          enum:
            - Key1
            - Key2
          x-ms-enum:
            name: KeyName
            modelAsString: false
      required:
        - keyName
      description: Regenerate key parameters.
    AccountSkuListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccountSku'
          x-ms-identifiers:
            - sku/name
            - resourceType
          description: Gets the list of Cognitive Services accounts and their properties.
      description: The list of cognitive services accounts operation response.
    AccountSku:
      type: object
      properties:
        resourceType:
          type: string
          description: Resource Namespace and Type
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of Cognitive Services account.
      description: Cognitive Services resource type and SKU.
    UsageListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers:
            - name
          description: The list of usages for Cognitive Service account.
      description: The response to a list usage request.
    Usage:
      type: object
      properties:
        unit:
          description: The unit of the metric.
          $ref: '#/components/schemas/UnitType'
        name:
          $ref: '#/components/schemas/MetricName'
          description: The name information for the metric.
        quotaPeriod:
          type: string
          description: The quota period used to summarize the usage values.
        limit:
          type: number
          format: double
          description: Maximum value for this metric.
        currentValue:
          type: number
          format: double
          description: Current value for this metric.
        nextResetTime:
          type: string
          description: Next reset time for current quota.
        status:
          type: string
          description: Cognitive Services account quota usage status.
          enum:
            - Included
            - Blocked
            - InOverage
            - Unknown
          x-ms-enum:
            name: QuotaUsageStatus
            modelAsString: true
      description: The usage data for a usage request.
    MetricName:
      type: object
      properties:
        value:
          type: string
          description: The name of the metric.
        localizedValue:
          type: string
          description: The friendly name of the metric.
      description: A metric name.
    UnitType:
      type: string
      description: The unit of the metric.
      enum:
        - Count
        - Bytes
        - Seconds
        - Percent
        - CountPerSecond
        - BytesPerSecond
        - Milliseconds
      x-ms-enum:
        modelAsString: true
        name: UnitType
    CheckSkuAvailabilityParameter:
      type: object
      description: Check SKU availability parameter.
      properties:
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuName'
          description: The SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: The Kind of the resource.
        type:
          type: string
          description: The Type of the resource.
      required:
        - skus
        - kind
        - type
    SkuAvailabilityListResult:
      type: object
      description: Check SKU availability result list.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SkuAvailability'
          x-ms-identifiers:
            - skuName
            - type
            - kind
          description: Check SKU availability result list.
    SkuAvailability:
      type: object
      description: SKU availability.
      properties:
        kind:
          $ref: '#/components/schemas/Kind'
          description: The Kind of the resource.
        type:
          type: string
          description: The Type of the resource.
        skuName:
          $ref: '#/components/schemas/SkuName'
          description: The SKU of Cognitive Services account.
        skuAvailable:
          type: boolean
          description: Indicates the given SKU is available or not.
        reason:
          type: string
          description: Reason why the SKU is not available.
        message:
          type: string
          description: Additional error message.
    SkuCapability:
      type: object
      properties:
        name:
          type: string
          description: The name of the SkuCapability.
        value:
          type: string
          description: The value of the SkuCapability.
      description: SkuCapability indicates the capability of a certain feature.
    CheckDomainAvailabilityParameter:
      type: object
      description: Check Domain availability parameter.
      properties:
        subdomainName:
          type: string
          description: The subdomain name to use.
        type:
          type: string
          description: The Type of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: The Kind of the resource.
      required:
        - subdomainName
        - type
    DomainAvailability:
      type: object
      description: Domain availability.
      properties:
        isSubdomainAvailable:
          type: boolean
          description: Indicates the given SKU is available or not.
        reason:
          type: string
          description: Reason why the SKU is not available.
        subdomainName:
          type: string
          description: The subdomain name to use.
        type:
          type: string
          description: The Type of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: The Kind of the resource.
    ResourceSkuRestrictions:
      type: object
      properties:
        type:
          type: string
          description: The type of restrictions.
          enum:
            - Location
            - Zone
          x-ms-enum:
            name: ResourceSkuRestrictionsType
            modelAsString: false
        values:
          type: array
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
        restrictionInfo:
          $ref: '#/components/schemas/ResourceSkuRestrictionInfo'
          description: The information about the restriction where the SKU cannot be used.
        reasonCode:
          type: string
          description: The reason for restriction.
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: ResourceSkuRestrictionsReasonCode
            modelAsString: true
      description: Describes restrictions of a SKU.
    ResourceSku:
      type: object
      properties:
        resourceType:
          type: string
          description: The type of resource the SKU applies to.
        name:
          type: string
          description: The name of SKU.
        tier:
          type: string
          description: Specifies the tier of Cognitive Services account.
        kind:
          type: string
          description: The Kind of resources that are supported in this SKU.
        locations:
          type: array
          items:
            type: string
          description: The set of locations that the SKU is available.
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSkuRestrictions'
          x-ms-identifiers: []
          description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
      description: Describes an available Cognitive Services SKU.
    ResourceSkuRestrictionInfo:
      type: object
      properties:
        locations:
          type: array
          items:
            type: string
          description: Locations where the SKU is restricted
        zones:
          type: array
          items:
            type: string
          description: List of availability zones where the SKU is restricted.
    ResourceSkuListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSku'
          x-ms-identifiers:
            - resourceType
            - name
            - kind
          description: The list of skus available for the subscription.
        nextLink:
          type: string
          description: The uri to fetch the next page of Skus.
      required:
        - value
      description: The Get Skus operation response.
    NetworkRuleSet:
      type: object
      properties:
        defaultAction:
          type: string
          description: The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
          enum:
            - Allow
            - Deny
          x-ms-enum:
            name: NetworkRuleAction
            modelAsString: true
        ipRules:
          type: array
          items:
            $ref: '#/components/schemas/IpRule'
          x-ms-identifiers: []
          description: The list of IP address rules.
        virtualNetworkRules:
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: The list of virtual network rules.
      description: A set of rules governing the network accessibility.
    IpRule:
      type: object
      properties:
        value:
          type: string
          description: An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).
      required:
        - value
      description: A rule governing the accessibility from a specific ip address or ip range.
    VirtualNetworkRule:
      type: object
      properties:
        id:
          type: string
          description: Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
        state:
          type: string
          description: Gets the state of virtual network rule.
        ignoreMissingVnetServiceEndpoint:
          type: boolean
          description: Ignore missing vnet service endpoint or not.
      required:
        - id
      description: A rule governing the accessibility from a specific virtual network.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    UserAssignedIdentity:
      type: object
      description: User-assigned managed identity.
      properties:
        principalId:
          readOnly: true
          type: string
          description: Azure Active Directory principal ID associated with this Identity.
        clientId:
          readOnly: true
          type: string
          description: Client App Id associated with this identity.
    Encryption:
      type: object
      properties:
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Properties of KeyVault
        keySource:
          type: string
          description: Enumerates the possible value of keySource for Encryption
          default: Microsoft.KeyVault
          enum:
            - Microsoft.CognitiveServices
            - Microsoft.KeyVault
          x-ms-enum:
            name: keySource
            modelAsString: true
      description: Properties to configure Encryption
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    UserOwnedStorage:
      type: object
      properties:
        resourceId:
          type: string
          description: Full resource id of a Microsoft.Storage resource.
        identityClientId:
          type: string
      description: The user owned storage for Cognitive Services account.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateEndpointConnection:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: The Private Endpoint Connection resource.
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
    PrivateLinkResource:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A private link resource
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    DeploymentListResult:
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of Deployment.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Deployment'
          description: Gets the list of Cognitive Services accounts Deployment and their properties.
      description: The list of cognitive services accounts operation response.
    Deployment:
      description: Cognitive Services account deployment.
      type: object
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        properties:
          $ref: '#/components/schemas/DeploymentProperties'
          description: Properties of Cognitive Services account deployment.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
    DeploymentProperties:
      type: object
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: Gets the status of the resource at the time the operation was called.
          enum:
            - Accepted
            - Creating
            - Deleting
            - Moving
            - Failed
            - Succeeded
          x-ms-enum:
            name: DeploymentProvisioningState
            modelAsString: true
        model:
          type: object
          $ref: '#/components/schemas/DeploymentModel'
        scaleSettings:
          type: object
          $ref: '#/components/schemas/DeploymentScaleSettings'
      description: Properties of Cognitive Services account deployment.
    DeploymentModel:
      type: object
      properties:
        format:
          type: string
          description: Deployment model format.
        name:
          type: string
          description: Deployment model name.
        version:
          type: string
          description: Deployment model version.
      description: Properties of Cognitive Services account deployment model.
    DeploymentScaleSettings:
      type: object
      properties:
        scaleType:
          type: string
          description: Deployment scale type.
          enum:
            - Standard
            - Manual
          x-ms-enum:
            name: DeploymentScaleType
            modelAsString: true
        capacity:
          type: integer
          format: int32
          description: Deployment capacity.
        activeCapacity:
          readOnly: true
          type: integer
          format: int32
          description: Deployment active capacity. This value might be different from `capacity` if customer recently updated `capacity`.
      description: Properties of Cognitive Services account deployment model.
    CommitmentTierListResult:
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of CommitmentTier.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CommitmentTier'
          x-ms-identifiers:
            - kind
            - tier
            - skuName
            - hostingModel
            - planType
          description: Gets the list of Cognitive Services accounts CommitmentTier and their properties.
      description: The list of cognitive services accounts operation response.
    CommitmentTier:
      description: Cognitive Services account commitment tier.
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/Kind'
          description: The Kind of the resource.
        skuName:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        hostingModel:
          $ref: '#/components/schemas/HostingModel'
          description: Account hosting model.
        planType:
          type: string
          description: Commitment plan type.
        tier:
          type: string
          description: Commitment period commitment tier.
        maxCount:
          type: integer
          format: int32
          description: Commitment period commitment max count.
        quota:
          type: object
          $ref: '#/components/schemas/CommitmentQuota'
        cost:
          type: object
          $ref: '#/components/schemas/CommitmentCost'
    CommitmentQuota:
      type: object
      properties:
        quantity:
          type: integer
          format: int64
          description: Commitment quota quantity.
        unit:
          type: string
          description: Commitment quota unit.
      description: Cognitive Services account commitment quota.
    CommitmentCost:
      type: object
      properties:
        commitmentMeterId:
          type: string
          description: Commitment meter Id.
        overageMeterId:
          type: string
          description: Overage meter Id.
      description: Cognitive Services account commitment cost.
    CommitmentPlanListResult:
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of CommitmentPlan.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CommitmentPlan'
          description: Gets the list of Cognitive Services accounts CommitmentPlan and their properties.
      description: The list of cognitive services accounts operation response.
    CommitmentPlan:
      description: Cognitive Services account commitment plan.
      type: object
      properties:
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        properties:
          $ref: '#/components/schemas/CommitmentPlanProperties'
          description: Properties of Cognitive Services account commitment plan.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
    CommitmentPlanProperties:
      type: object
      properties:
        hostingModel:
          $ref: '#/components/schemas/HostingModel'
          description: Account hosting model.
        planType:
          type: string
          description: Commitment plan type.
        current:
          type: object
          $ref: '#/components/schemas/CommitmentPeriod'
        autoRenew:
          type: boolean
          description: AutoRenew commitment plan.
        next:
          type: object
          $ref: '#/components/schemas/CommitmentPeriod'
        last:
          type: object
          $ref: '#/components/schemas/CommitmentPeriod'
          readOnly: true
      description: Properties of Cognitive Services account commitment plan.
    HostingModel:
      type: string
      description: Account hosting model.
      enum:
        - Web
        - ConnectedContainer
        - DisconnectedContainer
      x-ms-enum:
        name: HostingModel
        modelAsString: true
    CommitmentPeriod:
      type: object
      properties:
        tier:
          type: string
          description: Commitment period commitment tier.
        count:
          type: integer
          format: int32
          description: Commitment period commitment count.
        quota:
          type: object
          $ref: '#/components/schemas/CommitmentQuota'
          readOnly: true
        startDate:
          type: string
          description: Commitment period start date.
          readOnly: true
        endDate:
          type: string
          description: Commitment period end date.
          readOnly: true
      description: Cognitive Services account commitment period.
    AccountModelListResult:
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of Model.
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccountModel'
          x-ms-identifiers:
            - name
            - format
            - version
          description: Gets the list of Cognitive Services accounts Model and their properties.
      description: The list of cognitive services accounts operation response.
    AccountModel:
      description: Cognitive Services account Model.
      type: object
      properties:
        baseModel:
          type: object
          description: Base Model Identifier.
          $ref: '#/components/schemas/DeploymentModel'
        maxCapacity:
          type: integer
          format: int32
          description: The max capacity.
        capabilities:
          type: object
          additionalProperties:
            type: string
          description: The capabilities.
        deprecation:
          type: object
          $ref: '#/components/schemas/ModelDeprecationInfo'
        systemData:
          $ref: '#/components/schemas/systemData'
      allOf:
        - $ref: '#/components/schemas/DeploymentModel'
    ModelDeprecationInfo:
      description: Cognitive Services account ModelDeprecationInfo.
      type: object
      properties:
        fineTune:
          type: string
          description: The datetime of deprecation of the fineTune Model.
        inference:
          type: string
          description: The datetime of deprecation of the inference Model.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  parameters:
    accountNameParameter:
      name: accountName
      in: path
      description: The name of Cognitive Services account.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        type: string
    locationParameter:
      name: location
      in: path
      description: Resource location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    usageFilterParameter:
      name: $filter
      in: query
      description: An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    privateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Cognitive Services Account
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    deploymentNameParameter:
      name: deploymentName
      in: path
      description: The name of the deployment associated with the Cognitive Services Account
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    commitmentPlanNameParameter:
      name: commitmentPlanName
      in: path
      description: The name of the commitmentPlan associated with the Cognitive Services Account
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  x-stackQL-resources:
    accounts:
      id: azure.cognitive_services.accounts
      name: accounts
      title: Accounts
      methods:
        Accounts_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1?api-version=2022-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Accounts_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1?api-version=2022-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Accounts_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1?api-version=2022-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Accounts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Accounts_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Accounts_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1accounts~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Accounts_ListKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1listKeys~1?api-version=2022-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Accounts_RegenerateKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1regenerateKey~1?api-version=2022-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Accounts_ListSkus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1skus~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Accounts_ListUsages:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1usages~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Accounts_ListModels:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1models~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_Delete'
    deleted_accounts:
      id: azure.cognitive_services.deleted_accounts
      name: deleted_accounts
      title: Deleted_accounts
      methods:
        DeletedAccounts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1locations~1{location}~1resourceGroups~1{resourceGroupName}~1deletedAccounts~1{accountName}~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DeletedAccounts_Purge:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1locations~1{location}~1resourceGroups~1{resourceGroupName}~1deletedAccounts~1{accountName}~1?api-version=2022-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DeletedAccounts_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1deletedAccounts~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deleted_accounts/methods/DeletedAccounts_List'
        insert: []
        update: []
        delete: []
    resource_skus:
      id: azure.cognitive_services.resource_skus
      name: resource_skus
      title: Resource_skus
      methods:
        ResourceSkus_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1skus~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_skus/methods/ResourceSkus_List'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.cognitive_services.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.CognitiveServices~1operations~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    cognitive_services_accounts:
      id: azure.cognitive_services.cognitive_services_accounts
      name: cognitive_services_accounts
      title: Cognitive_services_accounts
      methods:
        CheckSkuAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1locations~1{location}~1checkSkuAvailability~1?api-version=2022-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        CheckDomainAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1checkDomainAvailability~1?api-version=2022-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    commitment_tiers:
      id: azure.cognitive_services.commitment_tiers
      name: commitment_tiers
      title: Commitment_tiers
      methods:
        CommitmentTiers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.CognitiveServices~1locations~1{location}~1commitmentTiers~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/commitment_tiers/methods/CommitmentTiers_List'
        insert: []
        update: []
        delete: []
    private_endpoint_connections:
      id: azure.cognitive_services.private_endpoint_connections
      name: private_endpoint_connections
      title: Private_endpoint_connections
      methods:
        PrivateEndpointConnections_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1privateEndpointConnections~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateEndpointConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateEndpointConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PrivateEndpointConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_Delete'
    private_link_resources:
      id: azure.cognitive_services.private_link_resources
      name: private_link_resources
      title: Private_link_resources
      methods:
        PrivateLinkResources_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1privateLinkResources~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_List'
        insert: []
        update: []
        delete: []
    deployments:
      id: azure.cognitive_services.deployments
      name: deployments
      title: Deployments
      methods:
        Deployments_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1deployments~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Deployments_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1deployments~1{deploymentName}~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Deployments_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1deployments~1{deploymentName}~1?api-version=2022-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Deployments_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1deployments~1{deploymentName}~1?api-version=2022-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/Deployments_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/Deployments_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/deployments/methods/Deployments_Delete'
    commitment_plans:
      id: azure.cognitive_services.commitment_plans
      name: commitment_plans
      title: Commitment_plans
      methods:
        CommitmentPlans_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1commitmentPlans~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        CommitmentPlans_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1commitmentPlans~1{commitmentPlanName}~1?api-version=2022-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        CommitmentPlans_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1commitmentPlans~1{commitmentPlanName}~1?api-version=2022-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        CommitmentPlans_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.CognitiveServices~1accounts~1{accountName}~1commitmentPlans~1{commitmentPlanName}~1?api-version=2022-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/commitment_plans/methods/CommitmentPlans_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/commitment_plans/methods/CommitmentPlans_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/commitment_plans/methods/CommitmentPlans_Delete'
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/?api-version=2022-03-01:
    put:
      tags:
        - CognitiveServicesAccounts
      description: Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the keys for developer to access intelligent APIs. It's also the resource type for billing.
      operationId: Accounts_Create
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created account.
        required: true
        x-ms-requestBody-name: account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: If resource is created successfully or already existed, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '201':
          description: If resource is created successfully, the service should return 201 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: accounts
      x-stackQL-verb: insert
    patch:
      tags:
        - CognitiveServicesAccounts
      description: Updates a Cognitive Services account
      operationId: Accounts_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created account.
        required: true
        x-ms-requestBody-name: account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
    delete:
      tags:
        - CognitiveServicesAccounts
      description: 'Deletes a Cognitive Services account from the resource group. '
      operationId: Accounts_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A 200 (OK) should be returned if the object exists and was deleted successfully;
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
        '204':
          description: a 204 (NoContent) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: accounts
      x-stackQL-verb: delete
    get:
      tags:
        - CognitiveServicesAccounts
      description: Returns a Cognitive Services account specified by the parameters.
      operationId: Accounts_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\t· a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/resourceGroups/{resourceGroupName}/deletedAccounts/{accountName}/?api-version=2022-03-01:
    get:
      tags:
        - CognitiveServicesAccounts
      description: Returns a Cognitive Services account specified by the parameters.
      operationId: DeletedAccounts_Get
      parameters:
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\t· a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: deleted_accounts
      x-stackQL-verb: exec
    delete:
      tags:
        - CognitiveServicesAccounts
      description: 'Deletes a Cognitive Services account from the resource group. '
      operationId: DeletedAccounts_Purge
      parameters:
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A 200 (OK) should be returned if the object exists and was deleted successfully;
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
        '204':
          description: a 204 (NoContent) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: deleted_accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/?api-version=2022-03-01:
    get:
      tags:
        - CognitiveServicesAccounts
      description: Returns all the resources of a particular type belonging to a resource group
      operationId: Accounts_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with "value" property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResult'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/accounts/?api-version=2022-03-01:
    get:
      tags:
        - CognitiveServicesAccounts
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: Accounts_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.
            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/deletedAccounts/?api-version=2022-03-01:
    get:
      tags:
        - CognitiveServicesAccounts
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: DeletedAccounts_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.
            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: deleted_accounts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/listKeys/?api-version=2022-03-01:
    post:
      tags:
        - CognitiveServicesAccounts
      operationId: Accounts_ListKeys
      description: Lists the account keys for the specified Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: |-
            Returns with a response body containing the subscription keys for the resource: key1
            The first API key for authentication when client calls the API endpoint.

            key2
            The second API key for authentication when client calls the API endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeys'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/regenerateKey/?api-version=2022-03-01:
    post:
      tags:
        - CognitiveServicesAccounts
      operationId: Accounts_RegenerateKey
      description: Regenerates the specified account key for the specified Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: regenerate key parameters.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeyParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeys'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/skus/?api-version=2022-03-01:
    get:
      tags:
        - Skus
        - CognitiveServicesAccounts
      operationId: ResourceSkus_List
      description: Gets the list of Microsoft.CognitiveServices SKUs available for your Subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkuListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: resource_skus
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/skus/?api-version=2022-03-01:
    get:
      tags:
        - CognitiveServicesAccounts
      description: List available SKUs for the requested Cognitive Services account
      operationId: Accounts_ListSkus
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\t· Free\n\t· Basic\n\t· Standard\n\t· Premium\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSkuListResult'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/usages/?api-version=2022-03-01:
    get:
      tags:
        - CognitiveServicesAccounts
      description: Get usages for the requested Cognitive Services account
      operationId: Accounts_ListUsages
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/usageFilterParameter'
      responses:
        '200':
          description: The usages for Cognitive Services account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListResult'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/models/?api-version=2022-03-01:
    get:
      tags:
        - CognitiveServicesAccounts
      description: List available Models for the requested Cognitive Services account
      operationId: Accounts_ListModels
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\t· Free\n\t· Basic\n\t· Standard\n\t· Premium\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountModelListResult'
        default:
          description: Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: accounts
      x-stackQL-verb: exec
  /providers/Microsoft.CognitiveServices/operations/?api-version=2022-03-01:
    get:
      tags:
        - Operations
      description: Lists all the available Cognitive Services account operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkSkuAvailability/?api-version=2022-03-01:
    post:
      tags:
        - CognitiveServicesAccounts
      operationId: CheckSkuAvailability
      description: Check available SKUs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
      requestBody:
        description: Check SKU Availability POST body.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSkuAvailabilityParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuAvailabilityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: cognitive_services_accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/commitmentTiers/?api-version=2022-03-01:
    get:
      tags:
        - CommitmentTiers
      operationId: CommitmentTiers_List
      description: List Commitment Tiers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitmentTierListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: commitment_tiers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/checkDomainAvailability/?api-version=2022-03-01:
    post:
      tags:
        - CognitiveServicesAccounts
      operationId: CheckDomainAvailability
      description: Check whether a domain is available.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Check Domain Availability parameter.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDomainAvailabilityParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: cognitive_services_accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateEndpointConnections/?api-version=2022-03-01:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: Gets the private endpoint connections associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2022-03-01:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/privateEndpointConnectionNameParameter'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_CreateOrUpdate
      description: Update the state of specified private endpoint connection associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/privateEndpointConnectionNameParameter'
      requestBody:
        description: The private endpoint connection properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK -- Update the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: insert
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes the specified private endpoint connection associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/privateEndpointConnectionNameParameter'
      responses:
        '200':
          description: OK -- Delete the private endpoint connection successfully.
        '202':
          description: Accepted -- the operation was successfully started and will complete asynchronously.
        '204':
          description: No Content -- The private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateLinkResources/?api-version=2022-03-01:
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_List
      description: Gets the private link resources that need to be created for a Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/deployments/?api-version=2022-03-01:
    get:
      tags:
        - Deployments
      operationId: Deployments_List
      description: Gets the deployments associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved deployments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: deployments
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/deployments/{deploymentName}/?api-version=2022-03-01:
    get:
      tags:
        - Deployments
      operationId: Deployments_Get
      description: Gets the specified deployments associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/deploymentNameParameter'
      responses:
        '200':
          description: OK -- Get the deployments properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: deployments
      x-stackQL-verb: exec
    put:
      tags:
        - Deployments
      operationId: Deployments_CreateOrUpdate
      description: Update the state of specified deployments associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/deploymentNameParameter'
      requestBody:
        description: The deployment properties.
        required: true
        x-ms-requestBody-name: deployment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployment'
      responses:
        '200':
          description: Create/Update the deployment successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        '201':
          description: Create the deployment successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: deployments
      x-stackQL-verb: insert
    delete:
      tags:
        - Deployments
      operationId: Deployments_Delete
      description: Deletes the specified deployment associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/deploymentNameParameter'
      responses:
        '200':
          description: OK -- Delete the deployment successfully.
        '202':
          description: Accepted -- the operation was successfully started and will complete asynchronously.
        '204':
          description: No Content -- The deployment does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: deployments
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/commitmentPlans/?api-version=2022-03-01:
    get:
      tags:
        - CommitmentPlans
      operationId: CommitmentPlans_List
      description: Gets the commitmentPlans associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved commitmentPlans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitmentPlanListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: commitment_plans
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/commitmentPlans/{commitmentPlanName}/?api-version=2022-03-01:
    get:
      tags:
        - CommitmentPlans
      operationId: CommitmentPlans_Get
      description: Gets the specified commitmentPlans associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/commitmentPlanNameParameter'
      responses:
        '200':
          description: OK -- Get the commitmentPlans properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitmentPlan'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: commitment_plans
      x-stackQL-verb: exec
    put:
      tags:
        - CommitmentPlans
      operationId: CommitmentPlans_CreateOrUpdate
      description: Update the state of specified commitmentPlans associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/commitmentPlanNameParameter'
      requestBody:
        description: The commitmentPlan properties.
        required: true
        x-ms-requestBody-name: commitmentPlan
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitmentPlan'
      responses:
        '200':
          description: Create/Update the CommitmentPlan successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitmentPlan'
        '201':
          description: Create the CommitmentPlan successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitmentPlan'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: commitment_plans
      x-stackQL-verb: insert
    delete:
      tags:
        - CommitmentPlans
      operationId: CommitmentPlans_Delete
      description: Deletes the specified commitmentPlan associated with the Cognitive Services account.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/commitmentPlanNameParameter'
      responses:
        '200':
          description: OK -- Delete the commitmentPlan successfully.
        '202':
          description: Accepted -- the operation was successfully started and will complete asynchronously.
        '204':
          description: No Content -- The commitmentPlan does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: commitment_plans
      x-stackQL-verb: delete
x-stackQL-config:
  variations:
    isObjectSchemaImplicitlyUnioned: true
