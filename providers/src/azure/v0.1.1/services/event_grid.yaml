openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Event Grid (Microsoft.EventGrid)
  description: Event Grid
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-24-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ChannelProperties:
      description: Properties of the Channel.
      type: object
      properties:
        channelType:
          description: The type of the event channel which represents the direction flow of events.
          enum:
            - PartnerTopic
          type: string
          x-ms-enum:
            name: ChannelType
            modelAsString: true
        partnerTopicInfo:
          $ref: '#/components/schemas/PartnerTopicInfo'
          description: This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.
        messageForActivation:
          description: Context or helpful message that can be used during the approval process by the subscriber.
          type: string
        provisioningState:
          description: Provisioning state of the channel.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - IdleDueToMirroredPartnerTopicDeletion
          type: string
          x-ms-enum:
            name: ChannelProvisioningState
            modelAsString: true
        readinessState:
          description: The readiness state of the corresponding partner topic.
          enum:
            - NeverActivated
            - Activated
          type: string
          x-ms-enum:
            name: ReadinessState
            modelAsString: true
        expirationTimeIfNotActivatedUtc:
          format: date-time
          description: "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted."
          type: string
    PartnerTopicInfo:
      description: Properties of the corresponding partner topic of a Channel.
      type: object
      properties:
        azureSubscriptionId:
          description: "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription."
          type: string
        resourceGroupName:
          description: "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group."
          type: string
        name:
          description: Name of the partner topic associated with the channel.
          type: string
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published."
        source:
          description: "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic."
          type: string
    EventTypeInfo:
      description: The event type information for Channels.
      type: object
      properties:
        kind:
          description: The kind of event type used.
          enum:
            - Inline
          type: string
          x-ms-enum:
            name: EventDefinitionKind
            modelAsString: true
        inlineEventTypes:
          description: "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type."
          type: object
          additionalProperties:
            $ref: '#/components/schemas/InlineEventProperties'
    InlineEventProperties:
      description: Additional information about every inline event.
      type: object
      properties:
        description:
          description: The description for the inline event.
          type: string
        displayName:
          description: The displayName for the inline event.
          type: string
        documentationUrl:
          description: The documentationUrl for the inline event.
          type: string
        dataSchemaUrl:
          description: The dataSchemaUrl for the inline event.
          type: string
    Channel:
      description: Channel info.
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/ChannelProperties'
          description: Properties of the Channel.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Channel resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    ChannelUpdateParameters:
      description: Properties of the Channel update.
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/ChannelUpdateParametersProperties'
          x-ms-client-flatten: true
    ChannelUpdateParametersProperties:
      description: Properties of the channel update parameters.
      type: object
      properties:
        expirationTimeIfNotActivatedUtc:
          format: date-time
          description: "Expiration time of the channel. If this timer expires while the corresponding partner topic or partner destination is never activated,\r\nthe channel and corresponding partner topic or partner destination are deleted."
          type: string
        partnerTopicInfo:
          $ref: '#/components/schemas/PartnerUpdateTopicInfo'
          description: Partner topic properties which can be updated if the channel is of type PartnerTopic.
    PartnerUpdateTopicInfo:
      description: Update properties for the corresponding partner topic of a channel.
      type: object
      properties:
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: Event type info for the partner topic
    ChannelsListResult:
      description: Result of the List Channels operation
      type: object
      properties:
        value:
          description: A collection of Channels.
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        nextLink:
          description: A link for the next page of channels.
          type: string
    DomainProperties:
      description: Properties of the Event Grid Domain Resource.
      type: object
      properties:
        privateEndpointConnections:
          description: List of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        provisioningState:
          description: Provisioning state of the Event Grid Domain Resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DomainProvisioningState
            modelAsString: true
        endpoint:
          description: Endpoint for the Event Grid Domain Resource which is used for publishing the events.
          type: string
          readOnly: true
        inputSchema:
          description: This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.
          enum:
            - EventGridSchema
            - CustomEventSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: InputSchema
            modelAsString: true
          default: EventGridSchema
        inputSchemaMapping:
          $ref: '#/components/schemas/InputSchemaMapping'
          description: Information about the InputSchemaMapping which specified the info about mapping event payload.
        metricResourceId:
          description: Metric resource id for the Event Grid Domain Resource.
          type: string
          readOnly: true
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.
          default: false
          type: boolean
        autoCreateTopicWithFirstSubscription:
          description: "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed."
          default: true
          type: boolean
        autoDeleteTopicWithLastSubscription:
          description: "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user."
          default: true
          type: boolean
        dataResidencyBoundary:
          description: Data Residency Boundary of the resource.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
    IdentityInfo:
      description: The identity information for the resource.
      type: object
      properties:
        type:
          description: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
          type: string
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        principalId:
          description: The principal ID of resource identity.
          type: string
        tenantId:
          description: The tenant ID of resource.
          type: string
        userAssignedIdentities:
          description: "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage."
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserIdentityProperties'
    InboundIpRule:
      type: object
      properties:
        ipMask:
          description: IP Address in CIDR notation e.g., 10.0.0.0/8.
          type: string
        action:
          description: Action to perform based on the match or no match of the IpMask.
          enum:
            - Allow
          type: string
          x-ms-enum:
            name: IpActionType
            modelAsString: true
    UserIdentityProperties:
      description: The information about the user identity.
      type: object
      properties:
        principalId:
          description: The principal id of user assigned identity.
          type: string
        clientId:
          description: The client id of user assigned identity.
          type: string
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    PrivateEndpointConnectionProperties:
      description: Properties of the private endpoint connection resource.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The Private Endpoint resource for this Connection.
        groupIds:
          description: GroupIds from the private link service resource.
          type: array
          items:
            type: string
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/ConnectionState'
          description: Details about the state of the connection.
        provisioningState:
          description: Provisioning state of the Private Endpoint Connection.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: ResourceProvisioningState
            modelAsString: true
    PrivateEndpoint:
      description: PrivateEndpoint information.
      type: object
      properties:
        id:
          description: The ARM identifier for Private Endpoint.
          type: string
    ConnectionState:
      description: ConnectionState information.
      type: object
      properties:
        status:
          description: Status of the connection.
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PersistedConnectionStatus
            modelAsString: true
        description:
          description: Description of the connection state.
          type: string
        actionsRequired:
          description: Actions required (if any).
          type: string
    JsonInputSchemaMappingProperties:
      description: This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/JsonField'
          description: The mapping information for the Id property of the Event Grid Event.
        topic:
          $ref: '#/components/schemas/JsonField'
          description: The mapping information for the Topic property of the Event Grid Event.
        eventTime:
          $ref: '#/components/schemas/JsonField'
          description: The mapping information for the EventTime property of the Event Grid Event.
        eventType:
          $ref: '#/components/schemas/JsonFieldWithDefault'
          description: The mapping information for the EventType property of the Event Grid Event.
        subject:
          $ref: '#/components/schemas/JsonFieldWithDefault'
          description: The mapping information for the Subject property of the Event Grid Event.
        dataVersion:
          $ref: '#/components/schemas/JsonFieldWithDefault'
          description: The mapping information for the DataVersion property of the Event Grid Event.
    JsonField:
      description: This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema.
      type: object
      properties:
        sourceField:
          description: Name of a field in the input event schema that's to be used as the source of a mapping.
          type: string
    JsonFieldWithDefault:
      description: "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
      type: object
      properties:
        sourceField:
          description: Name of a field in the input event schema that's to be used as the source of a mapping.
          type: string
        defaultValue:
          description: The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.
          type: string
    JsonInputSchemaMapping:
      description: This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.
      type: object
      allOf:
        - $ref: '#/components/schemas/InputSchemaMapping'
      properties:
        properties:
          $ref: '#/components/schemas/JsonInputSchemaMappingProperties'
          description: JSON Properties of the input schema mapping
          x-ms-client-flatten: true
      x-ms-discriminator-value: Json
    InputSchemaMapping:
      description: By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.
      required:
        - inputSchemaMappingType
      type: object
      properties:
        inputSchemaMappingType:
          description: Type of the custom mapping
          enum:
            - Json
          type: string
          x-ms-enum:
            name: InputSchemaMappingType
            modelAsString: true
      discriminator:
        propertyName: inputSchemaMappingType
    PrivateEndpointConnection:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Properties of the PrivateEndpointConnection.
          x-ms-client-flatten: true
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    Domain:
      description: EventGrid Domain.
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        properties:
          $ref: '#/components/schemas/DomainProperties'
          description: Properties of the Event Grid Domain resource.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to the Event Grid Domain resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the Event Grid Domain resource.
    DomainUpdateParameters:
      description: Properties of the Domain update.
      type: object
      properties:
        tags:
          description: Tags of the domains resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/DomainUpdateParameterProperties'
          description: Properties of the resource.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the resource.
    DomainUpdateParameterProperties:
      description: Information of domain update parameter properties.
      type: object
      properties:
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.
          type: boolean
        autoCreateTopicWithFirstSubscription:
          description: "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed."
          type: boolean
        autoDeleteTopicWithLastSubscription:
          description: "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user."
          type: boolean
        dataResidencyBoundary:
          description: The data residency boundary for the domain.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
    DomainsListResult:
      description: Result of the List Domains operation.
      type: object
      properties:
        value:
          description: A collection of Domains.
          type: array
          items:
            $ref: '#/components/schemas/Domain'
        nextLink:
          description: A link for the next page of domains.
          type: string
    DomainSharedAccessKeys:
      description: Shared access keys of the Domain.
      type: object
      properties:
        key1:
          description: Shared access key1 for the domain.
          type: string
        key2:
          description: Shared access key2 for the domain.
          type: string
    DomainRegenerateKeyRequest:
      description: Domain regenerate share access key request.
      required:
        - keyName
      type: object
      properties:
        keyName:
          description: Key name to regenerate key1 or key2.
          type: string
    DomainTopicProperties:
      description: Properties of the Domain Topic.
      type: object
      readOnly: true
      properties:
        provisioningState:
          description: Provisioning state of the domain topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: DomainTopicProvisioningState
            modelAsString: true
    DomainTopic:
      description: Domain Topic.
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/DomainTopicProperties'
          description: Properties of the Domain Topic.
          readOnly: true
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Domain Topic resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    DomainTopicsListResult:
      description: Result of the List Domain Topics operation.
      type: object
      properties:
        value:
          description: A collection of Domain Topics.
          type: array
          items:
            $ref: '#/components/schemas/DomainTopic'
        nextLink:
          description: A link for the next page of domain topics.
          type: string
    EventSubscriptionProperties:
      description: Properties of the Event Subscription.
      type: object
      properties:
        topic:
          description: Name of the topic of the event subscription.
          type: string
          readOnly: true
        provisioningState:
          description: Provisioning state of the event subscription.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - AwaitingManualAction
          type: string
          readOnly: true
          x-ms-enum:
            name: EventSubscriptionProvisioningState
            modelAsString: true
        destination:
          $ref: '#/components/schemas/EventSubscriptionDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deliveryWithResourceIdentity:
          $ref: '#/components/schemas/DeliveryWithResourceIdentity'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        filter:
          $ref: '#/components/schemas/EventSubscriptionFilter'
          description: Information about the filter for the event subscription.
        labels:
          description: List of user defined labels.
          type: array
          items:
            type: string
        expirationTimeUtc:
          format: date-time
          description: Expiration time of the event subscription.
          type: string
        eventDeliverySchema:
          description: The event delivery schema for the event subscription.
          default: EventGridSchema
          enum:
            - EventGridSchema
            - CustomInputSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: EventDeliverySchema
            modelAsString: true
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
        deadLetterDestination:
          $ref: '#/components/schemas/DeadLetterDestination'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deadLetterWithResourceIdentity:
          $ref: '#/components/schemas/DeadLetterWithResourceIdentity'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
    EventSubscriptionFilter:
      description: Filter for the Event Subscription.
      type: object
      properties:
        subjectBeginsWith:
          description: "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path."
          type: string
        subjectEndsWith:
          description: "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path."
          type: string
        includedEventTypes:
          description: A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.
          type: array
          items:
            type: string
        isSubjectCaseSensitive:
          description: "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner."
          default: false
          type: boolean
        enableAdvancedFilteringOnArrays:
          description: Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.
          type: boolean
        advancedFilters:
          description: An array of advanced filters that are used for filtering event subscriptions.
          type: array
          items:
            $ref: '#/components/schemas/AdvancedFilter'
          x-ms-identifiers: []
    RetryPolicy:
      description: Information about the retry policy for an event subscription.
      type: object
      properties:
        maxDeliveryAttempts:
          format: int32
          description: Maximum number of delivery retry attempts for events.
          default: 30
          type: integer
        eventTimeToLiveInMinutes:
          format: int32
          description: Time To Live (in minutes) for events.
          default: 1440
          type: integer
    WebHookEventSubscriptionDestinationProperties:
      description: Information about the webhook destination properties for an event subscription.
      type: object
      properties:
        endpointUrl:
          description: The URL that represents the endpoint of the destination of an event subscription.
          type: string
          x-ms-secret: true
        endpointBaseUrl:
          description: The base URL that represents the endpoint of the destination of an event subscription.
          type: string
          readOnly: true
        maxEventsPerBatch:
          format: int32
          description: Maximum number of events per batch.
          default: 1
          type: integer
        preferredBatchSizeInKilobytes:
          format: int32
          description: Preferred batch size in Kilobytes.
          default: 64
          type: integer
        azureActiveDirectoryTenantId:
          description: The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
          type: string
        azureActiveDirectoryApplicationIdOrUri:
          description: The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
          type: string
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    StaticDeliveryAttributeMappingProperties:
      description: Properties of static delivery attribute mapping.
      type: object
      properties:
        value:
          description: Value of the delivery attribute.
          type: string
        isSecret:
          description: Boolean flag to tell if the attribute contains sensitive information .
          type: boolean
          default: false
          x-ms-secret: true
    StaticDeliveryAttributeMapping:
      description: Static delivery attribute mapping details.
      type: object
      allOf:
        - $ref: '#/components/schemas/DeliveryAttributeMapping'
      properties:
        properties:
          $ref: '#/components/schemas/StaticDeliveryAttributeMappingProperties'
          description: Properties of static delivery attribute mapping.
          x-ms-client-flatten: true
      x-ms-discriminator-value: Static
    DynamicDeliveryAttributeMappingProperties:
      description: Properties of dynamic delivery attribute mapping.
      type: object
      properties:
        sourceField:
          description: JSON path in the event which contains attribute value.
          type: string
    DynamicDeliveryAttributeMapping:
      description: Dynamic delivery attribute mapping details.
      type: object
      allOf:
        - $ref: '#/components/schemas/DeliveryAttributeMapping'
      properties:
        properties:
          $ref: '#/components/schemas/DynamicDeliveryAttributeMappingProperties'
          description: Properties of dynamic delivery attribute mapping.
          x-ms-client-flatten: true
      x-ms-discriminator-value: Dynamic
    DeliveryAttributeMapping:
      description: Delivery attribute mapping details.
      required:
        - type
      type: object
      properties:
        name:
          description: Name of the delivery attribute or header.
          type: string
        type:
          description: Type of the delivery attribute or header name.
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            name: DeliveryAttributeMappingType
            modelAsString: true
      discriminator:
        propertyName: type
    StorageBlobDeadLetterDestinationProperties:
      description: Properties of the storage blob based dead letter destination.
      type: object
      properties:
        resourceId:
          description: The Azure Resource ID of the storage account that is the destination of the deadletter events
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
        blobContainerName:
          description: The name of the Storage blob container that is the destination of the deadletter events
          type: string
    NumberInAdvancedFilter:
      description: NumberIn Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            format: double
            type: number
      x-ms-discriminator-value: NumberIn
    StorageBlobDeadLetterDestination:
      description: Information about the storage blob based dead letter destination.
      type: object
      allOf:
        - $ref: '#/components/schemas/DeadLetterDestination'
      properties:
        properties:
          $ref: '#/components/schemas/StorageBlobDeadLetterDestinationProperties'
          description: The properties of the Storage Blob based deadletter destination
          x-ms-client-flatten: true
      x-ms-discriminator-value: StorageBlob
    NumberNotInAdvancedFilter:
      description: NumberNotIn Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            format: double
            type: number
      x-ms-discriminator-value: NumberNotIn
    NumberLessThanAdvancedFilter:
      description: NumberLessThan Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        value:
          format: double
          description: The filter value.
          type: number
      x-ms-discriminator-value: NumberLessThan
    NumberGreaterThanAdvancedFilter:
      description: NumberGreaterThan Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        value:
          format: double
          description: The filter value.
          type: number
      x-ms-discriminator-value: NumberGreaterThan
    NumberLessThanOrEqualsAdvancedFilter:
      description: NumberLessThanOrEquals Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        value:
          format: double
          description: The filter value.
          type: number
      x-ms-discriminator-value: NumberLessThanOrEquals
    NumberGreaterThanOrEqualsAdvancedFilter:
      description: NumberGreaterThanOrEquals Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        value:
          format: double
          description: The filter value.
          type: number
      x-ms-discriminator-value: NumberGreaterThanOrEquals
    BoolEqualsAdvancedFilter:
      description: BoolEquals Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        value:
          description: The boolean filter value.
          type: boolean
      x-ms-discriminator-value: BoolEquals
    StringInAdvancedFilter:
      description: StringIn Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringIn
    StringNotInAdvancedFilter:
      description: StringNotIn Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringNotIn
    StringBeginsWithAdvancedFilter:
      description: StringBeginsWith Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringBeginsWith
    StringEndsWithAdvancedFilter:
      description: StringEndsWith Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringEndsWith
    StringContainsAdvancedFilter:
      description: StringContains Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringContains
    NumberInRangeAdvancedFilter:
      description: NumberInRange Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: array
            items:
              format: double
              type: number
      x-ms-discriminator-value: NumberInRange
    NumberNotInRangeAdvancedFilter:
      description: NumberNotInRange Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: array
            items:
              format: double
              type: number
      x-ms-discriminator-value: NumberNotInRange
    StringNotBeginsWithAdvancedFilter:
      description: StringNotBeginsWith Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringNotBeginsWith
    StringNotEndsWithAdvancedFilter:
      description: StringNotEndsWith Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringNotEndsWith
    StringNotContainsAdvancedFilter:
      description: StringNotContains Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties:
        values:
          description: The set of filter values.
          type: array
          items:
            type: string
      x-ms-discriminator-value: StringNotContains
    IsNullOrUndefinedAdvancedFilter:
      description: IsNullOrUndefined Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties: {}
      x-ms-discriminator-value: IsNullOrUndefined
    IsNotNullAdvancedFilter:
      description: IsNotNull Advanced Filter.
      type: object
      allOf:
        - $ref: '#/components/schemas/AdvancedFilter'
      properties: {}
      x-ms-discriminator-value: IsNotNull
    AdvancedFilter:
      description: This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.
      required:
        - operatorType
      type: object
      properties:
        operatorType:
          description: The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.
          enum:
            - NumberIn
            - NumberNotIn
            - NumberLessThan
            - NumberGreaterThan
            - NumberLessThanOrEquals
            - NumberGreaterThanOrEquals
            - BoolEquals
            - StringIn
            - StringNotIn
            - StringBeginsWith
            - StringEndsWith
            - StringContains
            - NumberInRange
            - NumberNotInRange
            - StringNotBeginsWith
            - StringNotEndsWith
            - StringNotContains
            - IsNullOrUndefined
            - IsNotNull
          type: string
          x-ms-enum:
            name: AdvancedFilterOperatorType
            modelAsString: true
        key:
          description: The field/property in the event based on which you want to filter.
          type: string
      discriminator:
        propertyName: operatorType
    DeliveryWithResourceIdentity:
      description: Information about the delivery for an event subscription with resource identity.
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/EventSubscriptionIdentity'
          description: The identity to use when delivering events.
        destination:
          $ref: '#/components/schemas/EventSubscriptionDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
    DeadLetterWithResourceIdentity:
      description: Information about the deadletter destination with resource identity.
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/EventSubscriptionIdentity'
          description: The identity to use when dead-lettering events.
        deadLetterDestination:
          $ref: '#/components/schemas/DeadLetterDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
    EventSubscriptionIdentity:
      description: The identity information with the event subscription.
      type: object
      properties:
        type:
          description: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.
          enum:
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            name: EventSubscriptionIdentityType
            modelAsString: true
        userAssignedIdentity:
          description: The user identity associated with the resource.
          type: string
    WebHookEventSubscriptionDestination:
      description: Information about the webhook destination for an event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventSubscriptionDestination'
      properties:
        properties:
          $ref: '#/components/schemas/WebHookEventSubscriptionDestinationProperties'
          description: WebHook Properties of the event subscription destination.
          x-ms-client-flatten: true
      x-ms-discriminator-value: WebHook
    DeadLetterDestination:
      description: Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.
      type: object
      required:
        - endpointType
      properties:
        endpointType:
          description: Type of the endpoint for the dead letter destination
          enum:
            - StorageBlob
          type: string
          x-ms-enum:
            name: DeadLetterEndPointType
            modelAsString: true
      discriminator:
        propertyName: endpointType
    EventHubEventSubscriptionDestinationProperties:
      description: The properties for a event hub destination.
      type: object
      properties:
        resourceId:
          description: The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.
          type: string
          format: arm-id
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    EventHubEventSubscriptionDestination:
      description: Information about the event hub destination for an event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventSubscriptionDestination'
      properties:
        properties:
          $ref: '#/components/schemas/EventHubEventSubscriptionDestinationProperties'
          description: Event Hub Properties of the event subscription destination.
          x-ms-client-flatten: true
      x-ms-discriminator-value: EventHub
    StorageQueueEventSubscriptionDestinationProperties:
      description: The properties for a storage queue destination.
      type: object
      properties:
        resourceId:
          description: The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
        queueName:
          description: The name of the Storage queue under a storage account that is the destination of an event subscription.
          type: string
        queueMessageTimeToLiveInSeconds:
          format: int64
          description: Storage queue message time to live in seconds.
          type: integer
    StorageQueueEventSubscriptionDestination:
      description: Information about the storage queue destination for an event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventSubscriptionDestination'
      properties:
        properties:
          $ref: '#/components/schemas/StorageQueueEventSubscriptionDestinationProperties'
          description: Storage Queue Properties of the event subscription destination.
          x-ms-client-flatten: true
      x-ms-discriminator-value: StorageQueue
    HybridConnectionEventSubscriptionDestinationProperties:
      description: The properties for a hybrid connection destination.
      type: object
      properties:
        resourceId:
          description: The Azure Resource ID of an hybrid connection that is the destination of an event subscription.
          type: string
          format: arm-id
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    HybridConnectionEventSubscriptionDestination:
      description: Information about the HybridConnection destination for an event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventSubscriptionDestination'
      properties:
        properties:
          $ref: '#/components/schemas/HybridConnectionEventSubscriptionDestinationProperties'
          description: Hybrid connection Properties of the event subscription destination.
          x-ms-client-flatten: true
      x-ms-discriminator-value: HybridConnection
    ServiceBusQueueEventSubscriptionDestinationProperties:
      description: The properties that represent the Service Bus destination of an event subscription.
      type: object
      properties:
        resourceId:
          description: The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ServiceBus/namespaces/queues
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    ServiceBusQueueEventSubscriptionDestination:
      description: Information about the service bus destination for an event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventSubscriptionDestination'
      properties:
        properties:
          $ref: '#/components/schemas/ServiceBusQueueEventSubscriptionDestinationProperties'
          description: Service Bus Properties of the event subscription destination.
          x-ms-client-flatten: true
      x-ms-discriminator-value: ServiceBusQueue
    ServiceBusTopicEventSubscriptionDestinationProperties:
      description: The properties that represent the Service Bus Topic destination of an event subscription.
      type: object
      properties:
        resourceId:
          description: The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.ServiceBus/namespaces/topics
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    ServiceBusTopicEventSubscriptionDestination:
      description: Information about the service bus topic destination for an event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventSubscriptionDestination'
      properties:
        properties:
          $ref: '#/components/schemas/ServiceBusTopicEventSubscriptionDestinationProperties'
          description: Service Bus Topic Properties of the event subscription destination.
          x-ms-client-flatten: true
      x-ms-discriminator-value: ServiceBusTopic
    AzureFunctionEventSubscriptionDestinationProperties:
      description: The properties that represent the Azure Function destination of an event subscription.
      type: object
      properties:
        resourceId:
          description: The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Web/sites/functions
        maxEventsPerBatch:
          format: int32
          description: Maximum number of events per batch.
          default: 1
          type: integer
        preferredBatchSizeInKilobytes:
          format: int32
          description: Preferred batch size in Kilobytes.
          default: 64
          type: integer
        deliveryAttributeMappings:
          description: Delivery attribute details.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    AzureFunctionEventSubscriptionDestination:
      description: Information about the azure function destination for an event subscription.
      type: object
      allOf:
        - $ref: '#/components/schemas/EventSubscriptionDestination'
      properties:
        properties:
          $ref: '#/components/schemas/AzureFunctionEventSubscriptionDestinationProperties'
          description: Azure Function Properties of the event subscription destination.
          x-ms-client-flatten: true
      x-ms-discriminator-value: AzureFunction
    EventSubscriptionDestination:
      description: Information about the destination for an event subscription.
      required:
        - endpointType
      type: object
      properties:
        endpointType:
          description: Type of the endpoint for the event subscription destination.
          enum:
            - WebHook
            - EventHub
            - StorageQueue
            - HybridConnection
            - ServiceBusQueue
            - ServiceBusTopic
            - AzureFunction
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
      discriminator:
        propertyName: endpointType
    EventSubscription:
      description: Event Subscription
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/EventSubscriptionProperties'
          description: Properties of the event subscription.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Event Subscription resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    EventSubscriptionUpdateParameters:
      description: Properties of the Event Subscription update.
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/EventSubscriptionDestination'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deliveryWithResourceIdentity:
          $ref: '#/components/schemas/DeliveryWithResourceIdentity'
          description: "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        filter:
          $ref: '#/components/schemas/EventSubscriptionFilter'
          description: Information about the filter for the event subscription.
        labels:
          description: List of user defined labels.
          type: array
          items:
            type: string
        expirationTimeUtc:
          format: date-time
          description: Information about the expiration time for the event subscription.
          type: string
        eventDeliverySchema:
          description: The event delivery schema for the event subscription.
          enum:
            - EventGridSchema
            - CustomInputSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: EventDeliverySchema
            modelAsString: true
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.
        deadLetterDestination:
          $ref: '#/components/schemas/DeadLetterDestination'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        deadLetterWithResourceIdentity:
          $ref: '#/components/schemas/DeadLetterWithResourceIdentity'
          description: "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering."
    EventSubscriptionFullUrl:
      description: Full endpoint url of an event subscription
      type: object
      properties:
        endpointUrl:
          description: The URL that represents the endpoint of the destination of an event subscription.
          type: string
    EventSubscriptionsListResult:
      description: Result of the List EventSubscriptions operation
      type: object
      properties:
        value:
          description: A collection of EventSubscriptions
          type: array
          items:
            $ref: '#/components/schemas/EventSubscription'
        nextLink:
          description: A link for the next page of event subscriptions
          type: string
    DeliveryAttributeListResult:
      description: Result of the Get delivery attributes operation.
      type: object
      properties:
        value:
          description: A collection of DeliveryAttributeMapping
          type: array
          items:
            $ref: '#/components/schemas/DeliveryAttributeMapping'
    OperationsListResult:
      description: Result of the List Operations operation
      type: object
      properties:
        value:
          description: A collection of operations
          type: array
          items:
            $ref: '#/components/schemas/Operation'
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationInfo:
      description: Information about an operation
      type: object
      properties:
        provider:
          description: Name of the provider
          type: string
        resource:
          description: Name of the resource type
          type: string
        operation:
          description: Name of the operation
          type: string
        description:
          description: Description of the operation
          type: string
    PartnerConfigurationProperties:
      description: Properties of the partner configuration.
      type: object
      properties:
        partnerAuthorization:
          $ref: '#/components/schemas/PartnerAuthorization'
          description: The details of authorized partners.
        provisioningState:
          description: Provisioning state of the partner configuration.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: PartnerConfigurationProvisioningState
            modelAsString: true
    PartnerAuthorization:
      description: The partner authorization details.
      type: object
      properties:
        defaultMaximumExpirationTimeInDays:
          format: int32
          description: "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days."
          type: integer
        authorizedPartnersList:
          description: The list of authorized partners.
          type: array
          items:
            $ref: '#/components/schemas/Partner'
          x-ms-identifiers: []
    Partner:
      description: Information about the partner.
      type: object
      properties:
        partnerRegistrationImmutableId:
          format: uuid
          description: The immutableId of the corresponding partner registration.
          type: string
        partnerName:
          description: The partner name.
          type: string
        authorizationExpirationTimeInUtc:
          format: date-time
          description: "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified."
          type: string
    PartnerConfiguration:
      description: Partner configuration information
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/PartnerConfigurationProperties'
          description: Properties of the partner configuration.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to partner configuration resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
        location:
          description: Location of the resource.
          type: string
        tags:
          description: Tags of the resource.
          type: object
          additionalProperties:
            type: string
    PartnerConfigurationUpdateParameters:
      description: Properties of the partner configuration update.
      type: object
      properties:
        tags:
          description: Tags of the partner configuration resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerConfigurationUpdateParameterProperties'
          description: Properties of the Topic resource.
          x-ms-client-flatten: true
    PartnerConfigurationUpdateParameterProperties:
      description: Information of partner configuration update parameter properties.
      type: object
      properties:
        defaultMaximumExpirationTimeInDays:
          format: int32
          description: The default time used to validate the maximum expiration time for each authorized partners in days. Allowed values ar between 1 and 365 days.
          type: integer
    PartnerConfigurationsListResult:
      description: Result of the List partner configurations operation
      type: object
      properties:
        value:
          description: A collection of partner configurations.
          type: array
          items:
            $ref: '#/components/schemas/PartnerConfiguration'
        nextLink:
          description: A link for the next page of partner configurations.
          type: string
    PartnerNamespaceProperties:
      description: Properties of the partner namespace.
      type: object
      properties:
        privateEndpointConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        provisioningState:
          description: Provisioning state of the partner namespace.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: PartnerNamespaceProvisioningState
            modelAsString: true
        partnerRegistrationFullyQualifiedId:
          description: "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}."
          type: string
        endpoint:
          description: Endpoint for the partner namespace.
          type: string
          readOnly: true
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
          default: false
          type: boolean
        partnerTopicRoutingMode:
          description: "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic."
          default: SourceEventAttribute
          enum:
            - SourceEventAttribute
            - ChannelNameHeader
          type: string
          x-ms-enum:
            name: PartnerTopicRoutingMode
            modelAsString: true
    PartnerNamespace:
      description: EventGrid Partner Namespace.
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        properties:
          $ref: '#/components/schemas/PartnerNamespaceProperties'
          description: Properties of the Partner Namespace.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Partner Namespace resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    PartnerNamespaceUpdateParameters:
      description: Properties of the Partner Namespace update.
      type: object
      properties:
        tags:
          description: Tags of the Partner Namespace.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PartnerNamespaceUpdateParameterProperties'
          description: Properties of the Partner Namespace.
          x-ms-client-flatten: true
    PartnerNamespaceUpdateParameterProperties:
      description: Information of Partner Namespace update parameter properties.
      type: object
      properties:
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceUpdateParameterProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.
          type: boolean
    PartnerNamespacesListResult:
      description: Result of the List Partner Namespaces operation
      type: object
      properties:
        value:
          description: A collection of partner namespaces.
          type: array
          items:
            $ref: '#/components/schemas/PartnerNamespace'
        nextLink:
          description: A link for the next page of partner namespaces.
          type: string
    PartnerNamespaceSharedAccessKeys:
      description: Shared access keys of the partner namespace.
      type: object
      properties:
        key1:
          description: Shared access key1 for the partner namespace.
          type: string
        key2:
          description: Shared access key2 for the partner namespace.
          type: string
    PartnerNamespaceRegenerateKeyRequest:
      description: PartnerNamespace regenerate shared access key request.
      required:
        - keyName
      type: object
      properties:
        keyName:
          description: Key name to regenerate (key1 or key2).
          type: string
    PartnerRegistrationProperties:
      description: Properties of the partner registration.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the partner registration.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: PartnerRegistrationProvisioningState
            modelAsString: true
        partnerRegistrationImmutableId:
          format: uuid
          description: "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version"
          type: string
    PartnerRegistration:
      description: Information about a partner registration.
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        properties:
          $ref: '#/components/schemas/PartnerRegistrationProperties'
          description: Properties of the partner registration.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Partner Registration resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    PartnerRegistrationUpdateParameters:
      description: Properties of the Partner Registration update.
      type: object
      properties:
        tags:
          description: Tags of the partner registration resource.
          type: object
          additionalProperties:
            type: string
    PartnerRegistrationsListResult:
      description: Result of the List Partner Registrations operation.
      type: object
      properties:
        value:
          description: A collection of partner registrations.
          type: array
          items:
            $ref: '#/components/schemas/PartnerRegistration'
        nextLink:
          description: A link for the next page of partner registrations.
          type: string
    PartnerTopicProperties:
      description: Properties of the Partner Topic.
      type: object
      properties:
        partnerRegistrationImmutableId:
          format: uuid
          description: The immutableId of the corresponding partner registration.
          type: string
        source:
          description: Source associated with this partner topic. This represents a unique partner resource.
          type: string
        eventTypeInfo:
          $ref: '#/components/schemas/EventTypeInfo'
          description: Event Type information from the corresponding event channel.
        expirationTimeIfNotActivatedUtc:
          format: date-time
          description: "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted."
          type: string
        provisioningState:
          description: Provisioning state of the partner topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
            - IdleDueToMirroredChannelResourceDeletion
          type: string
          readOnly: true
          x-ms-enum:
            name: PartnerTopicProvisioningState
            modelAsString: true
        activationState:
          description: Activation state of the partner topic.
          enum:
            - NeverActivated
            - Activated
            - Deactivated
          type: string
          x-ms-enum:
            name: PartnerTopicActivationState
            modelAsString: true
        partnerTopicFriendlyDescription:
          description: "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer."
          type: string
        messageForActivation:
          description: Context or helpful message that can be used during the approval process by the subscriber.
          type: string
    PartnerTopic:
      description: Event Grid Partner Topic.
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        properties:
          $ref: '#/components/schemas/PartnerTopicProperties'
          description: Properties of the Partner Topic.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Partner Topic resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the Partner Topic resource.
    PartnerTopicUpdateParameters:
      description: Properties of the Partner Topic update.
      type: object
      properties:
        tags:
          description: Tags of the Partner Topic resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the Partner Topic resource.
    PartnerTopicsListResult:
      description: Result of the List Partner Topics operation.
      type: object
      properties:
        value:
          description: A collection of partner topics.
          type: array
          items:
            $ref: '#/components/schemas/PartnerTopic'
        nextLink:
          description: A link for the next page of partner topics.
          type: string
    PrivateEndpointConnectionListResult:
      description: Result of the list of all private endpoint connections operation.
      type: object
      properties:
        value:
          description: A collection of private endpoint connection resources.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          description: A link for the next page of private endpoint connection resources.
          type: string
    PrivateLinkResource:
      description: Information of the private link resource.
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Properties of the private link resource.
          x-ms-client-flatten: true
        id:
          description: Fully qualified identifier of the resource.
          type: string
        name:
          description: Name of the resource.
          type: string
        type:
          description: Type of the resource.
          type: string
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          type: string
        displayName:
          type: string
        requiredMembers:
          type: array
          items:
            type: string
        requiredZoneNames:
          type: array
          items:
            type: string
    PrivateLinkResourcesListResult:
      description: Result of the List private link resources operation.
      type: object
      properties:
        value:
          description: A collection of private link resources
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: A link for the next page of private link resources.
          type: string
    SystemTopicProperties:
      description: Properties of the System Topic.
      type: object
      properties:
        provisioningState:
          description: Provisioning state of the system topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: ResourceProvisioningState
            modelAsString: true
        source:
          description: Source for the system topic.
          type: string
        topicType:
          description: TopicType for the system topic.
          type: string
        metricResourceId:
          description: Metric resource id for the system topic.
          type: string
          readOnly: true
    SystemTopic:
      description: EventGrid System Topic.
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        properties:
          $ref: '#/components/schemas/SystemTopicProperties'
          description: Properties of the system topic.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the resource.
        systemData:
          description: The system metadata relating to System Topic resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    SystemTopicUpdateParameters:
      description: Properties of the System Topic update.
      type: object
      properties:
        tags:
          description: Tags of the system topic.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Resource identity information.
    SystemTopicsListResult:
      description: Result of the List System topics operation.
      type: object
      properties:
        value:
          description: A collection of system Topics.
          type: array
          items:
            $ref: '#/components/schemas/SystemTopic'
        nextLink:
          description: A link for the next page of topics.
          type: string
    TopicProperties:
      description: Properties of the Topic.
      type: object
      properties:
        privateEndpointConnections:
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        provisioningState:
          description: Provisioning state of the topic.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          readOnly: true
          x-ms-enum:
            name: TopicProvisioningState
            modelAsString: true
        endpoint:
          description: Endpoint for the topic.
          type: string
          readOnly: true
        inputSchema:
          description: This determines the format that Event Grid should expect for incoming events published to the topic.
          enum:
            - EventGridSchema
            - CustomEventSchema
            - CloudEventSchemaV1_0
          type: string
          x-ms-enum:
            name: InputSchema
            modelAsString: true
          default: EventGridSchema
        inputSchemaMapping:
          $ref: '#/components/schemas/InputSchemaMapping'
          description: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.
        metricResourceId:
          description: Metric resource id for the topic.
          type: string
          readOnly: true
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
          default: false
          type: boolean
        dataResidencyBoundary:
          description: Data Residency Boundary of the resource.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
    Topic:
      description: EventGrid Topic
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        properties:
          $ref: '#/components/schemas/TopicProperties'
          description: Properties of the topic.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Identity information for the resource.
        systemData:
          description: The system metadata relating to Topic resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    TopicUpdateParameters:
      description: Properties of the Topic update
      type: object
      properties:
        tags:
          description: Tags of the Topic resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityInfo'
          description: Topic resource identity information.
        properties:
          $ref: '#/components/schemas/TopicUpdateParameterProperties'
          description: Properties of the Topic resource.
          x-ms-client-flatten: true
    TopicUpdateParameterProperties:
      description: Information of topic update parameter properties.
      type: object
      properties:
        publicNetworkAccess:
          description: "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules\" />"
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        inboundIpRules:
          description: 'This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.'
          type: array
          items:
            $ref: '#/components/schemas/InboundIpRule'
          x-ms-identifiers: []
        disableLocalAuth:
          description: This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.
          type: boolean
        dataResidencyBoundary:
          description: The data residency boundary for the topic.
          enum:
            - WithinGeopair
            - WithinRegion
          type: string
          x-ms-enum:
            name: DataResidencyBoundary
            modelAsString: true
    TopicsListResult:
      description: Result of the List Topics operation
      type: object
      properties:
        value:
          description: A collection of Topics
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        nextLink:
          description: A link for the next page of topics
          type: string
    TopicSharedAccessKeys:
      description: Shared access keys of the Topic
      type: object
      properties:
        key1:
          description: Shared access key1 for the topic.
          type: string
        key2:
          description: Shared access key2 for the topic.
          type: string
    TopicRegenerateKeyRequest:
      description: Topic regenerate share access key request
      required:
        - keyName
      type: object
      properties:
        keyName:
          description: Key name to regenerate key1 or key2
          type: string
    ExtensionTopicProperties:
      description: Properties of the Extension Topic
      type: object
      properties:
        description:
          description: Description of the extension topic.
          type: string
        systemTopic:
          description: System topic resource id which is mapped to the source.
          type: string
    ExtensionTopic:
      description: Event grid Extension Topic. This is used for getting Event Grid related metrics for Azure resources.
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/ExtensionTopicProperties'
          description: Properties of the extension topic
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Extension Topic resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    EventTypesListResult:
      description: Result of the List Event Types operation
      type: object
      properties:
        value:
          description: A collection of event types
          type: array
          items:
            $ref: '#/components/schemas/EventType'
    EventTypeProperties:
      description: Properties of the event type
      type: object
      properties:
        displayName:
          description: Display name of the event type.
          type: string
        description:
          description: Description of the event type.
          type: string
        schemaUrl:
          description: Url of the schema for this event type.
          type: string
        isInDefaultSet:
          description: IsInDefaultSet flag of the event type.
          type: boolean
    EventType:
      description: Event Type for a subject under a topic
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/EventTypeProperties'
          description: Properties of the event type.
          x-ms-client-flatten: true
    TopicTypesListResult:
      description: Result of the List Topic Types operation
      type: object
      properties:
        value:
          description: A collection of topic types
          type: array
          items:
            $ref: '#/components/schemas/TopicTypeInfo'
    TopicTypeProperties:
      description: Properties of a topic type.
      type: object
      properties:
        provider:
          description: Namespace of the provider of the topic type.
          type: string
        displayName:
          description: Display Name for the topic type.
          type: string
        description:
          description: Description of the topic type.
          type: string
        resourceRegionType:
          description: Region type of the resource.
          enum:
            - RegionalResource
            - GlobalResource
          type: string
          x-ms-enum:
            name: ResourceRegionType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the topic type
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: TopicTypeProvisioningState
            modelAsString: true
        supportedLocations:
          description: List of locations supported by this topic type.
          type: array
          items:
            type: string
        sourceResourceFormat:
          description: Source resource format.
          type: string
        supportedScopesForSource:
          description: Supported source scopes.
          type: array
          items:
            enum:
              - Resource
              - ResourceGroup
              - AzureSubscription
              - ManagementGroup
            type: string
            x-ms-enum:
              name: TopicTypeSourceScope
              modelAsString: true
    TopicTypeInfo:
      description: Properties of a topic type info.
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/TopicTypeProperties'
          description: Properties of the topic type info
          x-ms-client-flatten: true
    VerifiedPartnerProperties:
      description: Properties of the verified partner.
      type: object
      properties:
        partnerRegistrationImmutableId:
          format: uuid
          description: ImmutableId of the corresponding partner registration.
          type: string
        organizationName:
          description: Official name of the Partner.
          type: string
        partnerDisplayName:
          description: Display name of the verified partner.
          type: string
        partnerTopicDetails:
          $ref: '#/components/schemas/PartnerDetails'
          description: Details of the partner topic scenario.
        provisioningState:
          description: Provisioning state of the verified partner.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: VerifiedPartnerProvisioningState
            modelAsString: true
    PartnerDetails:
      description: Information about the partner.
      type: object
      properties:
        description:
          description: This is short description about the partner. The length of this description should not exceed 256 characters.
          type: string
        longDescription:
          description: Long description for the partner's scenarios and integration.Length of this description should not exceed 2048 characters.
          type: string
        setupUri:
          description: "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source."
          type: string
    VerifiedPartner:
      description: Verified partner information
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          $ref: '#/components/schemas/VerifiedPartnerProperties'
          description: Properties of the verified partner.
          x-ms-client-flatten: true
        systemData:
          description: The system metadata relating to Verified Partner resource.
          type: object
          readOnly: true
          $ref: '#/components/schemas/systemData'
    VerifiedPartnersListResult:
      description: Result of the List verified partners operation
      type: object
      properties:
        value:
          description: A collection of verified partners.
          type: array
          items:
            $ref: '#/components/schemas/VerifiedPartner'
        nextLink:
          description: A link for the next page of verified partners if any.
          type: string
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: 'The query used to filter the search results using OData syntax. Filtering is permitted on the ''name'' property only and with limited number of OData operations. These operations are: the ''contains'' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, ''PATTERN'') and name ne ''PATTERN-1''. The following is not a valid filter example: $filter=location eq ''westus''.'
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TopParameter:
      name: $top
      in: query
      description: The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  x-stackQL-resources:
    channels:
      id: azure.event_grid.channels
      name: channels
      title: Channels
      methods:
        Channels_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Channels_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Channels_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Channels_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Channels_ListByPartnerNamespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Channels_GetFullUrl:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1channels~1{channelName}~1getFullUrl~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/channels/methods/Channels_ListByPartnerNamespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/channels/methods/Channels_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/channels/methods/Channels_Delete'
    domains:
      id: azure.event_grid.domains
      name: domains
      title: Domains
      methods:
        Domains_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Domains_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Domains_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Domains_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Domains_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1domains~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Domains_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Domains_ListSharedAccessKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1listKeys~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Domains_RegenerateKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1regenerateKey~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains/methods/Domains_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/domains/methods/Domains_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/Domains_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/Domains_Delete'
    domain_topics:
      id: azure.event_grid.domain_topics
      name: domain_topics
      title: Domain_topics
      methods:
        DomainTopics_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{domainTopicName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DomainTopics_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{domainTopicName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DomainTopics_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{domainTopicName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DomainTopics_ListByDomain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_topics/methods/DomainTopics_ListByDomain'
        insert:
          - $ref: '#/components/x-stackQL-resources/domain_topics/methods/DomainTopics_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domain_topics/methods/DomainTopics_Delete'
    topic_event_subscriptions:
      id: azure.event_grid.topic_event_subscriptions
      name: topic_event_subscriptions
      title: Topic_event_subscriptions
      methods:
        TopicEventSubscriptions_GetDeliveryAttributes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        TopicEventSubscriptions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        TopicEventSubscriptions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        TopicEventSubscriptions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        TopicEventSubscriptions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        TopicEventSubscriptions_GetFullUrl:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        TopicEventSubscriptions_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/TopicEventSubscriptions_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/TopicEventSubscriptions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/topic_event_subscriptions/methods/TopicEventSubscriptions_Delete'
    domain_event_subscriptions:
      id: azure.event_grid.domain_event_subscriptions
      name: domain_event_subscriptions
      title: Domain_event_subscriptions
      methods:
        DomainEventSubscriptions_GetDeliveryAttributes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DomainEventSubscriptions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DomainEventSubscriptions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DomainEventSubscriptions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DomainEventSubscriptions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DomainEventSubscriptions_GetFullUrl:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DomainEventSubscriptions_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/DomainEventSubscriptions_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/DomainEventSubscriptions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domain_event_subscriptions/methods/DomainEventSubscriptions_Delete'
    event_subscriptions:
      id: azure.event_grid.event_subscriptions
      name: event_subscriptions
      title: Event_subscriptions
      methods:
        EventSubscriptions_Get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        EventSubscriptions_Delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        EventSubscriptions_Update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        EventSubscriptions_GetFullUrl:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        EventSubscriptions_ListGlobalBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListGlobalBySubscriptionForTopicType:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListGlobalByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListGlobalByResourceGroupForTopicType:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListRegionalBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1locations~1{location}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListRegionalByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1locations~1{location}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListRegionalBySubscriptionForTopicType:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1locations~1{location}~1topicTypes~1{topicTypeName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListRegionalByResourceGroupForTopicType:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1locations~1{location}~1topicTypes~1{topicTypeName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListByResource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerNamespace}~1{resourceTypeName}~1{resourceName}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_ListByDomainTopic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        EventSubscriptions_GetDeliveryAttributes:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/EventSubscriptions_ListByResource'
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/EventSubscriptions_ListByDomainTopic'
        insert:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/EventSubscriptions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/event_subscriptions/methods/EventSubscriptions_Delete'
    domain_topic_event_subscriptions:
      id: azure.event_grid.domain_topic_event_subscriptions
      name: domain_topic_event_subscriptions
      title: Domain_topic_event_subscriptions
      methods:
        DomainTopicEventSubscriptions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DomainTopicEventSubscriptions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DomainTopicEventSubscriptions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DomainTopicEventSubscriptions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DomainTopicEventSubscriptions_GetFullUrl:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DomainTopicEventSubscriptions_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        DomainTopicEventSubscriptions_GetDeliveryAttributes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1domains~1{domainName}~1topics~1{topicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/DomainTopicEventSubscriptions_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/DomainTopicEventSubscriptions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domain_topic_event_subscriptions/methods/DomainTopicEventSubscriptions_Delete'
    system_topic_event_subscriptions:
      id: azure.event_grid.system_topic_event_subscriptions
      name: system_topic_event_subscriptions
      title: System_topic_event_subscriptions
      methods:
        SystemTopicEventSubscriptions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SystemTopicEventSubscriptions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SystemTopicEventSubscriptions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        SystemTopicEventSubscriptions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SystemTopicEventSubscriptions_GetFullUrl:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SystemTopicEventSubscriptions_ListBySystemTopic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SystemTopicEventSubscriptions_GetDeliveryAttributes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/SystemTopicEventSubscriptions_ListBySystemTopic'
        insert:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/SystemTopicEventSubscriptions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/system_topic_event_subscriptions/methods/SystemTopicEventSubscriptions_Delete'
    partner_topic_event_subscriptions:
      id: azure.event_grid.partner_topic_event_subscriptions
      name: partner_topic_event_subscriptions
      title: Partner_topic_event_subscriptions
      methods:
        PartnerTopicEventSubscriptions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerTopicEventSubscriptions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerTopicEventSubscriptions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PartnerTopicEventSubscriptions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerTopicEventSubscriptions_GetFullUrl:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getFullUrl~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PartnerTopicEventSubscriptions_ListByPartnerTopic:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerTopicEventSubscriptions_GetDeliveryAttributes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1eventSubscriptions~1{eventSubscriptionName}~1getDeliveryAttributes~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/PartnerTopicEventSubscriptions_ListByPartnerTopic'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/PartnerTopicEventSubscriptions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_topic_event_subscriptions/methods/PartnerTopicEventSubscriptions_Delete'
    operations:
      id: azure.event_grid.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1operations~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    topics:
      id: azure.event_grid.topics
      name: topics
      title: Topics
      methods:
        Topics_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Topics_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Topics_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Topics_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Topics_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1topics~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Topics_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Topics_ListSharedAccessKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1listKeys~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Topics_RegenerateKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1topics~1{topicName}~1regenerateKey~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Topics_ListEventTypes:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{providerNamespace}~1{resourceTypeName}~1{resourceName}~1providers~1Microsoft.EventGrid~1eventTypes~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topics/methods/Topics_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/topics/methods/Topics_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/topics/methods/Topics_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/topics/methods/Topics_Delete'
    partner_configurations:
      id: azure.event_grid.partner_configurations
      name: partner_configurations
      title: Partner_configurations
      methods:
        PartnerConfigurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerConfigurations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerConfigurations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PartnerConfigurations_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerConfigurations_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerConfigurations_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerConfigurations_AuthorizePartner:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1authorizePartner~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PartnerConfigurations_UnauthorizePartner:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerConfigurations~1default~1unauthorizePartner~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/PartnerConfigurations_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/PartnerConfigurations_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/PartnerConfigurations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_configurations/methods/PartnerConfigurations_Delete'
    partner_namespaces:
      id: azure.event_grid.partner_namespaces
      name: partner_namespaces
      title: Partner_namespaces
      methods:
        PartnerNamespaces_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerNamespaces_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerNamespaces_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PartnerNamespaces_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerNamespaces_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerNamespaces_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerNamespaces_ListSharedAccessKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1listKeys~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PartnerNamespaces_RegenerateKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerNamespaces~1{partnerNamespaceName}~1regenerateKey~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/PartnerNamespaces_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/PartnerNamespaces_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/PartnerNamespaces_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_namespaces/methods/PartnerNamespaces_Delete'
    partner_registrations:
      id: azure.event_grid.partner_registrations
      name: partner_registrations
      title: Partner_registrations
      methods:
        PartnerRegistrations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerRegistrations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PartnerRegistrations_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PartnerRegistrations_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1{partnerRegistrationName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerRegistrations_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerRegistrations_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerRegistrations~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/PartnerRegistrations_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/PartnerRegistrations_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/PartnerRegistrations_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_registrations/methods/PartnerRegistrations_Delete'
    partner_topics:
      id: azure.event_grid.partner_topics
      name: partner_topics
      title: Partner_topics
      methods:
        PartnerTopics_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerTopics_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerTopics_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PartnerTopics_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PartnerTopics_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1partnerTopics~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerTopics_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PartnerTopics_Activate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1activate~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PartnerTopics_Deactivate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1partnerTopics~1{partnerTopicName}~1deactivate~1?api-version=2022-06-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/PartnerTopics_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/PartnerTopics_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/PartnerTopics_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/partner_topics/methods/PartnerTopics_Delete'
    private_endpoint_connections:
      id: azure.event_grid.private_endpoint_connections
      name: private_endpoint_connections
      title: Private_endpoint_connections
      methods:
        PrivateEndpointConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateEndpointConnections_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PrivateEndpointConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateEndpointConnections_ListByResource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateEndpointConnections~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_ListByResource'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_Delete'
    private_link_resources:
      id: azure.event_grid.private_link_resources
      name: private_link_resources
      title: Private_link_resources
      methods:
        PrivateLinkResources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateLinkResources~1{privateLinkResourceName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkResources_ListByResource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1{parentType}~1{parentName}~1privateLinkResources~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_ListByResource'
        insert: []
        update: []
        delete: []
    system_topics:
      id: azure.event_grid.system_topics
      name: system_topics
      title: System_topics
      methods:
        SystemTopics_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SystemTopics_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1?api-version=2022-06-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SystemTopics_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1?api-version=2022-06-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        SystemTopics_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1{systemTopicName}~1?api-version=2022-06-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        SystemTopics_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.EventGrid~1systemTopics~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        SystemTopics_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.EventGrid~1systemTopics~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/SystemTopics_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/SystemTopics_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/SystemTopics_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/system_topics/methods/SystemTopics_Delete'
    extension_topics:
      id: azure.event_grid.extension_topics
      name: extension_topics
      title: Extension_topics
      methods:
        ExtensionTopics_Get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.EventGrid~1extensionTopics~1default~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    topic_types:
      id: azure.event_grid.topic_types
      name: topic_types
      title: Topic_types
      methods:
        TopicTypes_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1topicTypes~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        TopicTypes_Get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        TopicTypes_ListEventTypes:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1topicTypes~1{topicTypeName}~1eventTypes~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/topic_types/methods/TopicTypes_List'
        insert: []
        update: []
        delete: []
    verified_partners:
      id: azure.event_grid.verified_partners
      name: verified_partners
      title: Verified_partners
      methods:
        VerifiedPartners_Get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1verifiedPartners~1{verifiedPartnerName}~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VerifiedPartners_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.EventGrid~1verifiedPartners~1?api-version=2022-06-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/verified_partners/methods/VerifiedPartners_List'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/{channelName}/?api-version=2022-06-15:
    get:
      tags:
        - Channels
      summary: Get a channel.
      description: Get properties of a channel.
      operationId: Channels_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: channels
      x-stackQL-verb: exec
    put:
      tags:
        - Channels
      summary: Create or update a channel.
      description: Synchronously creates or updates a new channel with the specified parameters.
      operationId: Channels_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      requestBody:
        description: Channel information.
        required: true
        x-ms-requestBody-name: channelInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: channels
      x-stackQL-verb: insert
    delete:
      tags:
        - Channels
      summary: Delete a channel.
      description: Delete an existing channel.
      operationId: Channels_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: channels
      x-stackQL-verb: delete
    patch:
      tags:
        - Channels
      summary: Update a Channel.
      description: Synchronously updates a channel with the specified parameters.
      operationId: Channels_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the channel.
          required: true
          schema:
            type: string
      requestBody:
        description: Channel update information.
        required: true
        x-ms-requestBody-name: channelUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelUpdateParameters'
      responses:
        '200':
          description: OK
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/?api-version=2022-06-15:
    get:
      tags:
        - Channels
      summary: List channels.
      description: List all the channels in a partner namespace.
      operationId: Channels_ListByPartnerNamespace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: channels
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/channels/{channelName}/getFullUrl/?api-version=2022-06-15:
    post:
      tags:
        - Channels
      summary: Get full URL of partner destination channel.
      description: Get the full endpoint URL of a partner destination channel.
      operationId: Channels_GetFullUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the partners subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
        - name: channelName
          in: path
          description: Name of the Channel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/?api-version=2022-06-15:
    get:
      tags:
        - Domains
      summary: Get a domain.
      description: Get properties of a domain.
      operationId: Domains_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domains
      x-stackQL-verb: exec
    put:
      tags:
        - Domains
      summary: Create or update a domain.
      description: Asynchronously creates or updates a new domain with the specified parameters.
      operationId: Domains_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      requestBody:
        description: Domain information.
        required: true
        x-ms-requestBody-name: domainInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domains
      x-stackQL-verb: insert
    delete:
      tags:
        - Domains
      summary: Delete a domain.
      description: Delete existing domain.
      operationId: Domains_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domains
      x-stackQL-verb: delete
    patch:
      tags:
        - Domains
      summary: Update a domain.
      description: Asynchronously updates a domain with the specified parameters.
      operationId: Domains_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      requestBody:
        description: Domain update information.
        required: true
        x-ms-requestBody-name: domainUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Domain update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/domains/?api-version=2022-06-15:
    get:
      tags:
        - Domains
      summary: List domains under an Azure subscription.
      description: List all the domains under an Azure subscription.
      operationId: Domains_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: domains
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/?api-version=2022-06-15:
    get:
      tags:
        - Domains
      summary: List domains under a resource group.
      description: List all the domains under a resource group.
      operationId: Domains_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: domains
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/listKeys/?api-version=2022-06-15:
    post:
      tags:
        - Domains
      summary: List keys for a domain.
      description: List the two keys used to publish to a domain.
      operationId: Domains_ListSharedAccessKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/regenerateKey/?api-version=2022-06-15:
    post:
      tags:
        - Domains
      summary: Regenerate key for a domain.
      description: Regenerate a shared access key for a domain.
      operationId: Domains_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domains
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{domainTopicName}/?api-version=2022-06-15:
    get:
      tags:
        - DomainTopics
      summary: Get a domain topic.
      description: Get properties of a domain topic.
      operationId: DomainTopics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: domainTopicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domain_topics
      x-stackQL-verb: exec
    put:
      tags:
        - DomainTopics
      summary: Create or update a domain topic.
      description: Asynchronously creates or updates a new domain topic with the specified parameters.
      operationId: DomainTopics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: domainTopicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_topics
      x-stackQL-verb: insert
    delete:
      tags:
        - DomainTopics
      summary: Delete a domain topic.
      description: Delete existing domain topic.
      operationId: DomainTopics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: domainTopicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_topics
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/?api-version=2022-06-15:
    get:
      tags:
        - DomainTopics
      summary: List domain topics.
      description: List all the topics in a domain.
      operationId: DomainTopics_ListByDomain
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Domain name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: domain_topics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription for topic.
      description: Get all delivery attributes for an event subscription for topic.
      operationId: TopicEventSubscriptions_GetDeliveryAttributes
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription for domain.
      description: Get all delivery attributes for an event subscription for domain.
      operationId: DomainEventSubscriptions_GetDeliveryAttributes
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domain_event_subscriptions
      x-stackQL-verb: exec
  /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription.
      description: Get properties of an event subscription.
      operationId: EventSubscriptions_Get
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription.
      description: Asynchronously creates a new event subscription or updates an existing event subscription based on the specified scope.
      operationId: EventSubscriptions_CreateOrUpdate
      parameters:
        - name: scope
          in: path
          description: The identifier of the resource to which the event subscription needs to be created or updated. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '201':
          description: EventSubscription CreateOrUpdate request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: insert
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription.
      description: Delete an existing event subscription.
      operationId: EventSubscriptions_Delete
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: delete
    patch:
      tags:
        - EventSubscriptions
      summary: Update an event subscription.
      description: Asynchronously updates an existing event subscription.
      operationId: EventSubscriptions_Update
      parameters:
        - name: scope
          in: path
          description: The scope of existing event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: EventSubscription update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: Get a nested event subscription for domain topic.
      description: Get properties of a nested event subscription for a domain topic.
      operationId: DomainTopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domain_topic_event_subscriptions
      x-stackQL-verb: exec
    put:
      tags:
        - EventSubscriptions
      summary: Create or update a nested event subscription to a domain topic.
      description: Asynchronously creates a new event subscription or updates an existing event subscription.
      operationId: DomainTopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_topic_event_subscriptions
      x-stackQL-verb: insert
    delete:
      tags:
        - EventSubscriptions
      summary: Delete a nested event subscription for a domain topic.
      description: Delete a nested existing event subscription for a domain topic.
      operationId: DomainTopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_topic_event_subscriptions
      x-stackQL-verb: delete
    patch:
      tags:
        - EventSubscriptions
      summary: Update a nested event subscription for a domain topic.
      description: Update an existing event subscription for a domain topic.
      operationId: DomainTopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a topic.
      description: Get properties of an event subscription of a topic.
      operationId: TopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: topic_event_subscriptions
      x-stackQL-verb: exec
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription to a topic.
      description: Asynchronously creates a new event subscription or updates an existing event subscription.
      operationId: TopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: topic_event_subscriptions
      x-stackQL-verb: insert
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription for a topic.
      description: Delete an existing event subscription for a topic.
      operationId: TopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: topic_event_subscriptions
      x-stackQL-verb: delete
    patch:
      tags:
        - EventSubscriptions
      summary: Update an event subscription for a topic.
      description: Update an existing event subscription for a topic.
      operationId: TopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a domain.
      description: Get properties of an event subscription of a domain.
      operationId: DomainEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domain_event_subscriptions
      x-stackQL-verb: exec
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription to a domain.
      description: Asynchronously creates a new event subscription or updates an existing event subscription.
      operationId: DomainEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_event_subscriptions
      x-stackQL-verb: insert
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription for a domain.
      description: Delete an existing event subscription for a domain.
      operationId: DomainEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be deleted. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_event_subscriptions
      x-stackQL-verb: delete
    patch:
      tags:
        - EventSubscriptions
      summary: Update an event subscription for a domain.
      description: Update an existing event subscription for a topic.
      operationId: DomainEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be updated.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: domain_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a system topic.
      description: Get an event subscription.
      operationId: SystemTopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: system_topic_event_subscriptions
      x-stackQL-verb: exec
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription for a system topic.
      description: Asynchronously creates or updates an event subscription with the specified parameters. Existing event subscriptions will be updated with this API.
      operationId: SystemTopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: system_topic_event_subscriptions
      x-stackQL-verb: insert
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription of a system topic.
      description: Delete an existing event subscription of a system topic.
      operationId: SystemTopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: system_topic_event_subscriptions
      x-stackQL-verb: delete
    patch:
      tags:
        - EventSubscriptions
      summary: Update event subscription of a system topic.
      description: Update an existing event subscription of a system topic.
      operationId: SystemTopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: system_topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription of a system topic
      description: Get the full endpoint URL for an event subscription of a system topic.
      operationId: SystemTopicEventSubscriptions_GetFullUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: system_topic_event_subscriptions
      x-stackQL-verb: exec
  /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getFullUrl/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription.
      description: Get the full endpoint URL for an event subscription.
      operationId: EventSubscriptions_GetFullUrl
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List event subscriptions of a system topic.
      description: List event subscriptions that belong to a specific system topic.
      operationId: SystemTopicEventSubscriptions_ListBySystemTopic
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: system_topic_event_subscriptions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: Get an event subscription of a partner topic.
      description: Get properties of an event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be found. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topic_event_subscriptions
      x-stackQL-verb: exec
    put:
      tags:
        - EventSubscriptions
      summary: Create or update an event subscription of a partner topic.
      description: Asynchronously creates or updates an event subscription of a partner topic with the specified parameters. Existing event subscriptions will be updated with this API.
      operationId: PartnerTopicEventSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Event subscription properties containing the destination and filter information.
        required: true
        x-ms-requestBody-name: eventSubscriptionInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_topic_event_subscriptions
      x-stackQL-verb: insert
    delete:
      tags:
        - EventSubscriptions
      summary: Delete an event subscription of a partner topic.
      description: Delete an existing event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_topic_event_subscriptions
      x-stackQL-verb: delete
    patch:
      tags:
        - EventSubscriptions
      summary: Update event subscription of a partner topic.
      description: Update an existing event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      requestBody:
        description: Updated event subscription information.
        required: true
        x-ms-requestBody-name: eventSubscriptionUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionUpdateParameters'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription of a partner topic.
      description: Get the full endpoint URL for an event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_GetFullUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List event subscriptions of a partner topic.
      description: List event subscriptions that belong to a specific partner topic.
      operationId: PartnerTopicEventSubscriptions_ListByPartnerTopic
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_topic_event_subscriptions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of a nested event subscription for domain topic.
      description: Get the full endpoint URL for a nested event subscription for domain topic.
      operationId: DomainTopicEventSubscriptions_GetFullUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domain_topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription for topic.
      description: Get the full endpoint URL for an event subscription for topic.
      operationId: TopicEventSubscriptions_GetFullUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get full URL of an event subscription for domain.
      description: Get the full endpoint URL for an event subscription for domain.
      operationId: DomainEventSubscriptions_GetFullUrl
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionFullUrl'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domain_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: Get an aggregated list of all global event subscriptions under an Azure subscription.
      description: List all aggregated global event subscriptions under a specific Azure subscription.
      operationId: EventSubscriptions_ListGlobalBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all global event subscriptions for a topic type.
      description: List all global event subscriptions under an Azure subscription for a topic type.
      operationId: EventSubscriptions_ListGlobalBySubscriptionForTopicType
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all global event subscriptions under an Azure subscription and resource group.
      description: List all global event subscriptions under a specific Azure subscription and resource group.
      operationId: EventSubscriptions_ListGlobalByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all global event subscriptions under a resource group for a topic type.
      description: List all global event subscriptions under a resource group for a specific topic type.
      operationId: EventSubscriptions_ListGlobalByResourceGroupForTopicType
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription.
      description: List all event subscriptions from the given location under a specific Azure subscription.
      operationId: EventSubscriptions_ListRegionalBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription and resource group.
      description: List all event subscriptions from the given location under a specific Azure subscription and resource group.
      operationId: EventSubscriptions_ListRegionalByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription for a topic type.
      description: List all event subscriptions from the given location under a specific Azure subscription and topic type.
      operationId: EventSubscriptions_ListRegionalBySubscriptionForTopicType
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all regional event subscriptions under an Azure subscription and resource group for a topic type.
      description: List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type.
      operationId: EventSubscriptions_ListRegionalByResourceGroupForTopicType
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: location
          in: path
          description: Name of the location.
          required: true
          schema:
            type: string
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions.
      description: List all event subscriptions that have been created for a specific resource.
      operationId: EventSubscriptions_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: providerNamespace
          in: path
          description: Namespace of the provider of the topic.
          required: true
          schema:
            type: string
        - name: resourceTypeName
          in: path
          description: Name of the resource type.
          required: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: Name of the resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions for a specific topic.
      description: List all event subscriptions that have been created for a specific topic.
      operationId: TopicEventSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: topic_event_subscriptions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions for a specific domain.
      description: List all event subscriptions that have been created for a specific topic.
      operationId: DomainEventSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the domain.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: domain_event_subscriptions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/providers/Microsoft.EventGrid/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all event subscriptions for a specific domain topic.
      description: List all event subscriptions that have been created for a specific domain topic.
      operationId: EventSubscriptions_ListByDomainTopic
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: select
  /{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription.
      description: Get all delivery attributes for an event subscription.
      operationId: EventSubscriptions_GetDeliveryAttributes
      parameters:
        - name: scope
          in: path
          description: The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription.
      description: Get all delivery attributes for an event subscription.
      operationId: SystemTopicEventSubscriptions_GetDeliveryAttributes
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: system_topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/?api-version=2022-06-15:
    get:
      tags:
        - EventSubscriptions
      summary: List all nested event subscriptions for a specific domain topic.
      description: List all event subscriptions that have been created for a specific domain topic.
      operationId: DomainTopicEventSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscriptionsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: domain_topic_event_subscriptions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription of a partner topic.
      description: Get all delivery attributes for an event subscription of a partner topic.
      operationId: PartnerTopicEventSubscriptions_GetDeliveryAttributes
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topic_event_subscriptions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes/?api-version=2022-06-15:
    post:
      tags:
        - EventSubscriptions
      summary: Get delivery attributes for an event subscription for domain topic.
      description: Get all delivery attributes for an event subscription for domain topic.
      operationId: DomainTopicEventSubscriptions_GetDeliveryAttributes
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: domainName
          in: path
          description: Name of the top level domain.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the domain topic.
          required: true
          schema:
            type: string
        - name: eventSubscriptionName
          in: path
          description: Name of the event subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAttributeListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: domain_topic_event_subscriptions
      x-stackQL-verb: exec
  /providers/Microsoft.EventGrid/operations/?api-version=2022-06-15:
    get:
      tags:
        - Operations
      summary: List available operations.
      description: List the available operations supported by the Microsoft.EventGrid resource provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/?api-version=2022-06-15:
    get:
      tags:
        - Topics
      summary: Get a topic.
      description: Get properties of a topic.
      operationId: Topics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: topics
      x-stackQL-verb: exec
    put:
      tags:
        - Topics
      summary: Create a topic.
      description: Asynchronously creates a new topic with the specified parameters.
      operationId: Topics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Topic information.
        required: true
        x-ms-requestBody-name: topicInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: topics
      x-stackQL-verb: insert
    delete:
      tags:
        - Topics
      summary: Delete a topic.
      description: Delete existing topic.
      operationId: Topics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: topics
      x-stackQL-verb: delete
    patch:
      tags:
        - Topics
      summary: Update a topic.
      description: Asynchronously updates a topic with the specified parameters.
      operationId: Topics_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Topic update information.
        required: true
        x-ms-requestBody-name: topicUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: topics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics/?api-version=2022-06-15:
    get:
      tags:
        - Topics
      summary: List topics under an Azure subscription.
      description: List all the topics under an Azure subscription.
      operationId: Topics_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: topics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/?api-version=2022-06-15:
    get:
      tags:
        - Topics
      summary: List topics under a resource group.
      description: List all the topics under a resource group.
      operationId: Topics_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: topics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/listKeys/?api-version=2022-06-15:
    post:
      tags:
        - Topics
      summary: List keys for a topic.
      description: List the two keys used to publish to a topic.
      operationId: Topics_ListSharedAccessKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: topics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/regenerateKey/?api-version=2022-06-15:
    post:
      tags:
        - Topics
      summary: Regenerate key for a topic.
      description: Regenerate a shared access key for a topic.
      operationId: Topics_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: topicName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicSharedAccessKeys'
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: topics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default/?api-version=2022-06-15:
    get:
      tags:
        - PartnerConfigurations
      summary: Get a partner configuration.
      description: Get properties of a partner configuration.
      operationId: PartnerConfigurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: exec
    put:
      tags:
        - PartnerConfigurations
      summary: Create or update a partner configuration.
      description: Synchronously creates or updates a partner configuration with the specified parameters.
      operationId: PartnerConfigurations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner configuration information.
        required: true
        x-ms-requestBody-name: partnerConfigurationInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: insert
    delete:
      tags:
        - PartnerConfigurations
      summary: Delete a partner configuration.
      description: Delete existing partner configuration.
      operationId: PartnerConfigurations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: delete
    patch:
      tags:
        - PartnerConfigurations
      summary: Update a partner configuration.
      description: Synchronously updates a partner configuration with the specified parameters.
      operationId: PartnerConfigurations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner configuration update information.
        required: true
        x-ms-requestBody-name: partnerConfigurationUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerConfigurationUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/?api-version=2022-06-15:
    get:
      tags:
        - PartnerConfigurations
      summary: List partner configurations under a resource group.
      description: List all the partner configurations under a resource group.
      operationId: PartnerConfigurations_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfigurationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerConfigurations/?api-version=2022-06-15:
    get:
      tags:
        - PartnerConfigurations
      summary: List partner configurations under an Azure subscription.
      description: List all the partner configurations under an Azure subscription.
      operationId: PartnerConfigurations_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfigurationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default/authorizePartner/?api-version=2022-06-15:
    post:
      tags:
        - PartnerConfigurations
      summary: Authorize a partner.
      description: Authorize a single partner either by partner registration immutable Id or by partner name.
      operationId: PartnerConfigurations_AuthorizePartner
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: The information of the partner to be authorized.
        required: true
        x-ms-requestBody-name: partnerInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerConfigurations/default/unauthorizePartner/?api-version=2022-06-15:
    post:
      tags:
        - PartnerConfigurations
      summary: Unauthorize a partner.
      description: Unauthorize a single partner either by partner registration immutable Id or by partner name.
      operationId: PartnerConfigurations_UnauthorizePartner
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: The information of the partner to be unauthorized.
        required: true
        x-ms-requestBody-name: partnerInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerConfiguration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/?api-version=2022-06-15:
    get:
      tags:
        - PartnerNamespaces
      summary: Get a partner namespace.
      description: Get properties of a partner namespace.
      operationId: PartnerNamespaces_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespace'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: exec
    put:
      tags:
        - PartnerNamespaces
      summary: Create a partner namespace.
      description: Asynchronously creates a new partner namespace with the specified parameters.
      operationId: PartnerNamespaces_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      requestBody:
        description: PartnerNamespace information.
        required: true
        x-ms-requestBody-name: partnerNamespaceInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerNamespace'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespace'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: insert
    delete:
      tags:
        - PartnerNamespaces
      summary: Delete a partner namespace.
      description: Delete existing partner namespace.
      operationId: PartnerNamespaces_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: delete
    patch:
      tags:
        - PartnerNamespaces
      summary: Update a partner namespace.
      description: Asynchronously updates a partner namespace with the specified parameters.
      operationId: PartnerNamespaces_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner namespace update information.
        required: true
        x-ms-requestBody-name: partnerNamespaceUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerNamespaceUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Partner namespace update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespace'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerNamespaces/?api-version=2022-06-15:
    get:
      tags:
        - PartnerNamespaces
      summary: List partner namespaces under an Azure subscription.
      description: List all the partner namespaces under an Azure subscription.
      operationId: PartnerNamespaces_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespacesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/?api-version=2022-06-15:
    get:
      tags:
        - PartnerNamespaces
      summary: List partner namespaces under a resource group.
      description: List all the partner namespaces under a resource group.
      operationId: PartnerNamespaces_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespacesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/listKeys/?api-version=2022-06-15:
    post:
      tags:
        - PartnerNamespaces
      summary: List keys for a partner namespace.
      description: List the two keys used to publish to a partner namespace.
      operationId: PartnerNamespaces_ListSharedAccessKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespaceSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/regenerateKey/?api-version=2022-06-15:
    post:
      tags:
        - PartnerNamespaces
      summary: Regenerate key for a partner namespace.
      description: Regenerate a shared access key for a partner namespace.
      operationId: PartnerNamespaces_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerNamespaceName
          in: path
          description: Name of the partner namespace.
          required: true
          schema:
            type: string
      requestBody:
        description: Request body to regenerate key.
        required: true
        x-ms-requestBody-name: regenerateKeyRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerNamespaceRegenerateKeyRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerNamespaceSharedAccessKeys'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_namespaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}/?api-version=2022-06-15:
    get:
      tags:
        - PartnerRegistrations
      summary: Get a partner registration.
      description: Gets a partner registration with the specified parameters.
      operationId: PartnerRegistrations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_registrations
      x-stackQL-verb: exec
    put:
      tags:
        - PartnerRegistrations
      summary: Create a partner registration.
      description: Creates a new partner registration with the specified parameters.
      operationId: PartnerRegistrations_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      requestBody:
        description: PartnerRegistration information.
        required: true
        x-ms-requestBody-name: partnerRegistrationInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRegistration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_registrations
      x-stackQL-verb: insert
    delete:
      tags:
        - PartnerRegistrations
      summary: Delete a partner registration.
      description: Deletes a partner registration with the specified parameters.
      operationId: PartnerRegistrations_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_registrations
      x-stackQL-verb: delete
    patch:
      tags:
        - PartnerRegistrations
      summary: Update a partner registration.
      description: Updates a partner registration with the specified parameters.
      operationId: PartnerRegistrations_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerRegistrationName
          in: path
          description: Name of the partner registration.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner registration update information.
        required: true
        x-ms-requestBody-name: partnerRegistrationUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerRegistrationUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Partner registration update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistration'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_registrations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerRegistrations/?api-version=2022-06-15:
    get:
      tags:
        - PartnerRegistrations
      summary: List partner registrations under an Azure subscription.
      description: List all the partner registrations under an Azure subscription.
      operationId: PartnerRegistrations_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistrationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_registrations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/?api-version=2022-06-15:
    get:
      tags:
        - PartnerRegistrations
      summary: List partner registrations under a resource group.
      description: List all the partner registrations under a resource group.
      operationId: PartnerRegistrations_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerRegistrationsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_registrations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/?api-version=2022-06-15:
    get:
      tags:
        - PartnerTopics
      summary: Get a partner topic.
      description: Get properties of a partner topic.
      operationId: PartnerTopics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topics
      x-stackQL-verb: exec
    put:
      tags:
        - PartnerTopics
      summary: Create a partner topic.
      description: Asynchronously creates a new partner topic with the specified parameters.
      operationId: PartnerTopics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      requestBody:
        description: Partner Topic information.
        required: true
        x-ms-requestBody-name: partnerTopicInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerTopic'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topics
      x-stackQL-verb: insert
    delete:
      tags:
        - PartnerTopics
      summary: Delete a partner topic.
      description: Delete existing partner topic.
      operationId: PartnerTopics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: partner_topics
      x-stackQL-verb: delete
    patch:
      tags:
        - PartnerTopics
      summary: Update a partner topic.
      description: Asynchronously updates a partner topic with the specified parameters.
      operationId: PartnerTopics_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      requestBody:
        description: PartnerTopic update information.
        required: true
        x-ms-requestBody-name: partnerTopicUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerTopicUpdateParameters'
      responses:
        '200':
          description: OK
        '201':
          description: Partner Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerTopics/?api-version=2022-06-15:
    get:
      tags:
        - PartnerTopics
      summary: List partner topics under an Azure subscription.
      description: List all the partner topics under an Azure subscription.
      operationId: PartnerTopics_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_topics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/?api-version=2022-06-15:
    get:
      tags:
        - PartnerTopics
      summary: List partner topics under a resource group.
      description: List all the partner topics under a resource group.
      operationId: PartnerTopics_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: partner_topics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/activate/?api-version=2022-06-15:
    post:
      tags:
        - PartnerTopics
      summary: Activate a partner topic.
      description: Activate a newly created partner topic.
      operationId: PartnerTopics_Activate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/deactivate/?api-version=2022-06-15:
    post:
      tags:
        - PartnerTopics
      summary: Deactivate a partner topic.
      description: Deactivate specific partner topic.
      operationId: PartnerTopics_Deactivate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: partnerTopicName
          in: path
          description: Name of the partner topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: partner_topics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2022-06-15:
    get:
      tags:
        - PrivateEndpointConnections
      summary: Get a specific private endpoint connection.
      description: Get a specific private endpoint connection under a topic, domain, or partner namespace.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name).
          required: true
          schema:
            type: string
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateEndpointConnections
      summary: Update a specific private endpoint connection.
      description: Update a specific private endpoint connection under a topic, domain or partner namespace.
      operationId: PrivateEndpointConnections_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name).
          required: true
          schema:
            type: string
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection connection.
          required: true
          schema:
            type: string
      requestBody:
        description: The private endpoint connection object to update.
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: exec
    delete:
      tags:
        - PrivateEndpointConnections
      summary: Delete a specific private endpoint connection.
      description: Delete a specific private endpoint connection under a topic, domain, or partner namespace.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name).
          required: true
          schema:
            type: string
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection connection.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/?api-version=2022-06-15:
    get:
      tags:
        - PrivateEndpointConnections
      summary: Lists all private endpoint connections under a resource.
      description: Get all private endpoint connections under a topic, domain, or partner namespace.
      operationId: PrivateEndpointConnections_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\'.
          required: true
          schema:
            enum:
              - topics
              - domains
              - partnerNamespaces
            x-ms-enum:
              name: PrivateEndpointConnectionsParentType
              modelAsString: true
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name).
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}/?api-version=2022-06-15:
    get:
      tags:
        - PrivateLinkResources
      summary: Get a private link resource.
      description: Get properties of a private link resource.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\'.
          required: true
          schema:
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name).
          required: true
          schema:
            type: string
        - name: privateLinkResourceName
          in: path
          description: The name of private link resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/?api-version=2022-06-15:
    get:
      tags:
        - PrivateLinkResources
      summary: List private link resources under specific topic, domain, or partner namespace.
      description: List all the private link resources under a topic, domain, or partner namespace.
      operationId: PrivateLinkResources_ListByResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: parentType
          in: path
          description: The type of the parent resource. This can be either \'topics\', \'domains\', or \'partnerNamespaces\'.
          required: true
          schema:
            type: string
        - name: parentName
          in: path
          description: The name of the parent resource (namely, either, the topic name, domain name, or partner namespace name).
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourcesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/?api-version=2022-06-15:
    get:
      tags:
        - SystemTopics
      summary: Get a system topic.
      description: Get properties of a system topic.
      operationId: SystemTopics_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: system_topics
      x-stackQL-verb: exec
    put:
      tags:
        - SystemTopics
      summary: Create a system topic.
      description: Asynchronously creates a new system topic with the specified parameters.
      operationId: SystemTopics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      requestBody:
        description: System Topic information.
        required: true
        x-ms-requestBody-name: systemTopicInfo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemTopic'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: system_topics
      x-stackQL-verb: insert
    delete:
      tags:
        - SystemTopics
      summary: Delete a system topic.
      description: Delete existing system topic.
      operationId: SystemTopics_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: system_topics
      x-stackQL-verb: delete
    patch:
      tags:
        - SystemTopics
      summary: Update a system topic.
      description: Asynchronously updates a system topic with the specified parameters.
      operationId: SystemTopics_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: systemTopicName
          in: path
          description: Name of the system topic.
          required: true
          schema:
            type: string
      requestBody:
        description: SystemTopic update information.
        required: true
        x-ms-requestBody-name: systemTopicUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemTopicUpdateParameters'
      responses:
        '200':
          description: System Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        '201':
          description: System Topic update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-long-running-operation: true
      x-stackQL-resource: system_topics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/systemTopics/?api-version=2022-06-15:
    get:
      tags:
        - SystemTopics
      summary: List system topics under an Azure subscription.
      description: List all the system topics under an Azure subscription.
      operationId: SystemTopics_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: system_topics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/?api-version=2022-06-15:
    get:
      tags:
        - SystemTopics
      summary: List system topics under a resource group.
      description: List all the system topics under a resource group.
      operationId: SystemTopics_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemTopicsListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: system_topics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes/?api-version=2022-06-15:
    get:
      tags:
        - Topics
      summary: List topic event types.
      description: List event types for a topic.
      operationId: Topics_ListEventTypes
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group within the user's subscription.
          required: true
          schema:
            type: string
        - name: providerNamespace
          in: path
          description: Namespace of the provider of the topic.
          required: true
          schema:
            type: string
        - name: resourceTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: Name of the topic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: topics
      x-stackQL-verb: exec
  /{scope}/providers/Microsoft.EventGrid/extensionTopics/default/?api-version=2022-06-15:
    get:
      tags:
        - Topics
      summary: Get properties of an extension topic.
      description: Get the properties of an extension topic.
      operationId: ExtensionTopics_Get
      parameters:
        - name: scope
          in: path
          description: The identifier of the resource to which extension topic is queried. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for Azure resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionTopic'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: extension_topics
      x-stackQL-verb: exec
  /providers/Microsoft.EventGrid/topicTypes/?api-version=2022-06-15:
    get:
      tags:
        - TopicTypes
      summary: List topic types.
      description: List all registered topic types.
      operationId: TopicTypes_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicTypesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: topic_types
      x-stackQL-verb: select
  /providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/?api-version=2022-06-15:
    get:
      tags:
        - TopicTypes
      summary: Get a topic type.
      description: Get information about a topic type.
      operationId: TopicTypes_Get
      parameters:
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicTypeInfo'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-stackQL-resource: topic_types
      x-stackQL-verb: exec
  /providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventTypes/?api-version=2022-06-15:
    get:
      tags:
        - TopicTypes
      summary: List event types.
      description: List event types for a topic type.
      operationId: TopicTypes_ListEventTypes
      parameters:
        - name: topicTypeName
          in: path
          description: Name of the topic type.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypesListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 404 Not Found.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: topic_types
      x-stackQL-verb: exec
  /providers/Microsoft.EventGrid/verifiedPartners/{verifiedPartnerName}/?api-version=2022-06-15:
    get:
      tags:
        - VerifiedPartners
      summary: Get a verified partner.
      description: Get properties of a verified partner.
      operationId: VerifiedPartners_Get
      parameters:
        - name: verifiedPartnerName
          in: path
          description: Name of the verified partner.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiedPartner'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-stackQL-resource: verified_partners
      x-stackQL-verb: exec
  /providers/Microsoft.EventGrid/verifiedPartners/?api-version=2022-06-15:
    get:
      tags:
        - VerifiedPartners
      summary: List all verified partners.
      description: Get a list of all verified partners.
      operationId: VerifiedPartners_List
      parameters:
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiedPartnersListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 Bad Request.

             * 500 Internal Server Error.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: verified_partners
      x-stackQL-verb: select
x-stackQL-config:
  variations:
    isObjectSchemaImplicitlyUnioned: true
