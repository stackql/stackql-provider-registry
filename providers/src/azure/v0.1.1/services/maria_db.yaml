openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: DB for Maria DB (Microsoft.DBforMariaDB)
  description: DB for Maria DB
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-24-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    AdvisorProperties:
      properties: {}
      description: The properties of a recommendation action advisor.
      type: object
    Advisor:
      properties:
        properties:
          $ref: '#/components/schemas/AdvisorProperties'
          x-ms-client-flatten: true
          description: The properties of a recommendation action advisor.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a recommendation action advisor.
      type: object
    AdvisorsResultList:
      description: A list of query statistics.
      type: object
      properties:
        value:
          description: The list of recommendation action advisors.
          type: array
          items:
            $ref: '#/components/schemas/Advisor'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    RecommendationActionProperties:
      properties:
        advisorName:
          type: string
          description: Advisor name.
        sessionId:
          type: string
          description: Recommendation action session identifier.
        actionId:
          type: integer
          format: int32
          description: Recommendation action identifier.
        createdTime:
          type: string
          format: date-time
          description: Recommendation action creation time.
        expirationTime:
          type: string
          format: date-time
          description: Recommendation action expiration time.
        reason:
          type: string
          description: Recommendation action reason.
        recommendationType:
          type: string
          description: Recommendation action type.
        details:
          type: object
          additionalProperties:
            type: string
          description: Recommendation action details.
      description: The properties of a recommendation action.
      type: object
    RecommendationAction:
      properties:
        properties:
          $ref: '#/components/schemas/RecommendationActionProperties'
          x-ms-client-flatten: true
          description: The properties of a recommendation action.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a Recommendation Action.
      type: object
    RecommendationActionsResultList:
      description: A list of recommendation actions.
      type: object
      properties:
        value:
          description: The list of recommendation action advisors.
          type: array
          items:
            $ref: '#/components/schemas/RecommendationAction'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    RecommendedActionSessionsOperationStatus:
      properties:
        name:
          type: string
          description: Operation identifier.
        startTime:
          type: string
          format: date-time
          description: Operation start time.
        status:
          type: string
          description: Operation status.
      description: Recommendation action session operation status.
      type: object
    PrivateEndpointConnectionProperties:
      description: Properties of a private endpoint connection.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpointProperty'
          description: Private endpoint which the connection belongs to.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionStateProperty'
          description: Connection state of the private endpoint connection.
        provisioningState:
          description: State of the private endpoint connection.
          type: string
          readOnly: true
    PrivateEndpointProperty:
      type: object
      properties:
        id:
          description: Resource id of the private endpoint.
          type: string
      x-ms-azure-resource: true
    PrivateLinkServiceConnectionStateProperty:
      required:
        - status
        - description
      type: object
      properties:
        status:
          description: The private link service connection status.
          type: string
        description:
          description: The private link service connection description.
          type: string
        actionsRequired:
          description: The actions required for private link service connection.
          type: string
          readOnly: true
    PrivateEndpointConnection:
      description: A private endpoint connection
      type: object
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Resource properties.
          x-ms-client-flatten: true
    PrivateEndpointConnectionListResult:
      description: A list of private endpoint connections.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
      description: An error response from the Batch service.
      type: object
    TagsObject:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
      type: object
    SecurityAlertPolicyProperties:
      description: Properties of a security alert policy.
      required:
        - state
      type: object
      properties:
        state:
          description: Specifies the state of the policy, whether it is enabled or disabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: ServerSecurityAlertPolicyState
            modelAsString: false
        disabledAlerts:
          description: 'Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly'
          type: array
          items:
            type: string
        emailAddresses:
          description: Specifies an array of e-mail addresses to which the alert is sent.
          type: array
          items:
            type: string
        emailAccountAdmins:
          description: Specifies that the alert is sent to the account administrators.
          type: boolean
        storageEndpoint:
          description: Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
          type: string
        storageAccountAccessKey:
          description: Specifies the identifier key of the Threat Detection audit storage account.
          type: string
        retentionDays:
          format: int32
          description: Specifies the number of days to keep in the Threat Detection audit logs.
          type: integer
    ServerSecurityAlertPolicy:
      description: A server security alert policy.
      type: object
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        properties:
          $ref: '#/components/schemas/SecurityAlertPolicyProperties'
          description: Resource properties.
          x-ms-client-flatten: true
    ServerSecurityAlertPolicyListResult:
      description: A list of the server's security alert policies.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/ServerSecurityAlertPolicy'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      properties:
        name:
          type: string
          description: The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.
        tier:
          type: string
          description: The tier of the particular SKU, e.g. Basic.
          enum:
            - Basic
            - GeneralPurpose
            - MemoryOptimized
          x-ms-enum:
            name: SkuTier
            modelAsString: true
        capacity:
          type: integer
          format: int32
          minimum: 0
          description: The scale up/out capacity, representing server's compute units.
        size:
          type: string
          description: The size code, to be interpreted by resource as appropriate.
        family:
          type: string
          description: The family of hardware.
      required:
        - name
      description: Billing information related properties of a server.
      type: object
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the operation being performed on this particular object.
        display:
          $ref: '#/components/schemas/OperationDisplay'
          readOnly: true
          description: The localized display information for this particular operation or action.
        origin:
          type: string
          readOnly: true
          description: The intended executor of the operation.
          enum:
            - NotSpecified
            - user
            - system
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
        properties:
          type: object
          additionalProperties:
            type: object
          readOnly: true
          x-ms-client-flatten: false
          description: Additional descriptions for the operation.
      description: REST API operation definition.
      type: object
    OperationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: The list of resource provider operations.
      description: A list of resource provider operations.
      type: object
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    PrivateLinkResourceListResult:
      description: A list of private link resources
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    PrivateLinkResourceProperties:
      description: Properties of a private link resource.
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
    PrivateLinkResource:
      description: A private link resource
      type: object
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: The private link resource group id.
          readOnly: true
    QueryTextProperties:
      properties:
        queryId:
          type: string
          description: Query identifier unique to the server.
        queryText:
          type: string
          description: Query text.
      description: The properties of a query text.
      type: object
    QueryText:
      properties:
        properties:
          $ref: '#/components/schemas/QueryTextProperties'
          x-ms-client-flatten: true
          description: The properties of a query text.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a Query Text.
      type: object
    QueryTextsResultList:
      description: A list of query texts.
      type: object
      properties:
        value:
          description: The list of query texts.
          type: array
          items:
            $ref: '#/components/schemas/QueryText'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    TopQueryStatisticsInputProperties:
      properties:
        numberOfTopQueries:
          type: integer
          format: int32
          description: Max number of top queries to return.
        aggregationFunction:
          type: string
          description: Aggregation function name.
        observedMetric:
          type: string
          description: Observed metric name.
        observationStartTime:
          type: string
          format: date-time
          description: Observation start time.
        observationEndTime:
          type: string
          format: date-time
          description: Observation end time.
        aggregationWindow:
          type: string
          description: Aggregation interval type in ISO 8601 format.
      required:
        - numberOfTopQueries
        - aggregationFunction
        - observedMetric
        - observationStartTime
        - observationEndTime
        - aggregationWindow
      description: The properties for input to get top query statistics
      type: object
    TopQueryStatisticsInput:
      properties:
        properties:
          $ref: '#/components/schemas/TopQueryStatisticsInputProperties'
          x-ms-client-flatten: true
          description: The properties of a wait statistics input.
      required:
        - properties
      description: Input to get top query statistics
      type: object
    QueryStatisticProperties:
      properties:
        queryId:
          type: string
          description: Database query identifier.
        startTime:
          type: string
          format: date-time
          description: Observation start time.
        endTime:
          type: string
          format: date-time
          description: Observation end time.
        aggregationFunction:
          type: string
          description: Aggregation function name.
        databaseNames:
          type: array
          items:
            type: string
          description: The list of database names.
        queryExecutionCount:
          type: integer
          format: int64
          description: Number of query executions in this time interval.
        metricName:
          type: string
          description: Metric name.
        metricDisplayName:
          type: string
          description: Metric display name.
        metricValue:
          type: number
          format: double
          description: Metric value.
        metricValueUnit:
          type: string
          description: Metric value unit.
      description: The properties of a query statistic.
      type: object
    QueryStatistic:
      properties:
        properties:
          $ref: '#/components/schemas/QueryStatisticProperties'
          x-ms-client-flatten: true
          description: The properties of a query statistic.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a Query Statistic.
      type: object
    TopQueryStatisticsResultList:
      description: A list of query statistics.
      type: object
      properties:
        value:
          description: The list of top query statistics.
          type: array
          items:
            $ref: '#/components/schemas/QueryStatistic'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    WaitStatisticsInputProperties:
      properties:
        observationStartTime:
          type: string
          format: date-time
          description: Observation start time.
        observationEndTime:
          type: string
          format: date-time
          description: Observation end time.
        aggregationWindow:
          type: string
          description: Aggregation interval type in ISO 8601 format.
      required:
        - observationStartTime
        - observationEndTime
        - aggregationWindow
      description: The properties for input to get wait statistics
      type: object
    WaitStatisticsInput:
      properties:
        properties:
          $ref: '#/components/schemas/WaitStatisticsInputProperties'
          x-ms-client-flatten: true
          description: The properties of a wait statistics input.
      required:
        - properties
      description: Input to get wait statistics
      type: object
    WaitStatisticProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: Observation start time.
        endTime:
          type: string
          format: date-time
          description: Observation end time.
        eventName:
          type: string
          description: Wait event name.
        eventTypeName:
          type: string
          description: Wait event type name.
        queryId:
          type: integer
          format: int64
          description: Database query identifier.
        databaseName:
          type: string
          description: Database Name.
        userId:
          type: integer
          format: int64
          description: Database user identifier.
        count:
          type: integer
          format: int64
          description: Wait event count observed in this time interval.
        totalTimeInMs:
          type: number
          format: double
          description: Total time of wait in milliseconds in this time interval.
      description: The properties of a wait statistic.
      type: object
    WaitStatistic:
      properties:
        properties:
          $ref: '#/components/schemas/WaitStatisticProperties'
          x-ms-client-flatten: true
          description: The properties of a wait statistic.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a Wait Statistic.
      type: object
    WaitStatisticsResultList:
      description: A list of wait statistics.
      type: object
      properties:
        value:
          description: The list of wait statistics.
          type: array
          items:
            $ref: '#/components/schemas/WaitStatistic'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    QueryPerformanceInsightResetDataResult:
      description: Result of Query Performance Insight data reset.
      type: object
      properties:
        status:
          type: string
          enum:
            - Succeeded
            - Failed
          x-ms-enum:
            name: QueryPerformanceInsightResetDataResultState
            modelAsString: true
          description: Indicates result of the operation.
        message:
          type: string
          description: operation message.
    ServerVersion:
      type: string
      description: The version of a server.
      enum:
        - '10.2'
        - '10.3'
      x-ms-enum:
        name: ServerVersion
        modelAsString: true
    SslEnforcement:
      type: string
      description: Enable ssl enforcement or not when connect to server.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SslEnforcementEnum
        modelAsString: false
    MinimalTlsVersion:
      type: string
      description: Enforce a minimal Tls version for the server.
      enum:
        - TLS1_0
        - TLS1_1
        - TLS1_2
        - TLSEnforcementDisabled
      x-ms-enum:
        name: MinimalTlsVersionEnum
        modelAsString: true
    PublicNetworkAccess:
      type: string
      description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: PublicNetworkAccessEnum
        modelAsString: true
    ServerPrivateEndpointConnection:
      description: A private endpoint connection under a server
      type: object
      properties:
        id:
          description: Resource Id of the private endpoint connection.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ServerPrivateEndpointConnectionProperties'
          description: Private endpoint connection properties
          readOnly: true
    ServerPrivateEndpointConnectionProperties:
      description: Properties of a private endpoint connection.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpointProperty'
          description: Private endpoint which the connection belongs to.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/ServerPrivateLinkServiceConnectionStateProperty'
          description: Connection state of the private endpoint connection.
        provisioningState:
          description: State of the private endpoint connection.
          enum:
            - Approving
            - Ready
            - Dropping
            - Failed
            - Rejecting
          type: string
          readOnly: true
          x-ms-enum:
            name: PrivateEndpointProvisioningState
            modelAsString: true
    ServerPrivateLinkServiceConnectionStateProperty:
      required:
        - status
        - description
      type: object
      properties:
        status:
          description: The private link service connection status.
          enum:
            - Approved
            - Pending
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateLinkServiceConnectionStateStatus
            modelAsString: true
        description:
          description: The private link service connection description.
          type: string
        actionsRequired:
          description: The actions required for private link service connection.
          enum:
            - None
          type: string
          readOnly: true
          x-ms-enum:
            name: PrivateLinkServiceConnectionStateActionsRequire
            modelAsString: true
    ServerProperties:
      properties:
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        userVisibleState:
          type: string
          description: A state of a server that is visible to user.
          enum:
            - Ready
            - Dropping
            - Disabled
          x-ms-enum:
            name: ServerState
            modelAsString: true
        fullyQualifiedDomainName:
          type: string
          description: The fully qualified domain name of a server.
        earliestRestoreDate:
          type: string
          format: date-time
          description: Earliest restore point creation time (ISO8601 format)
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        replicationRole:
          type: string
          description: The replication role of the server.
        masterServerId:
          type: string
          description: The master server id of a replica server.
        replicaCapacity:
          type: integer
          format: int32
          minimum: 0
          description: The maximum number of replicas that a master server can have.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        privateEndpointConnections:
          description: List of private endpoint connections on a server
          type: array
          items:
            $ref: '#/components/schemas/ServerPrivateEndpointConnection'
          readOnly: true
      description: The properties of a server.
      type: object
    StorageProfile:
      properties:
        backupRetentionDays:
          type: integer
          format: int32
          description: Backup retention days for the server.
        geoRedundantBackup:
          type: string
          description: Enable Geo-redundant or not for server backup.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: GeoRedundantBackup
            modelAsString: true
        storageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        storageAutogrow:
          type: string
          description: Enable Storage Auto Grow.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: StorageAutogrow
            modelAsString: true
      description: Storage Profile properties of a server
      type: object
    ServerPropertiesForCreate:
      discriminator:
        propertyName: createMode
      required:
        - createMode
      properties:
        version:
          $ref: '#/components/schemas/ServerVersion'
          description: Server version.
        sslEnforcement:
          $ref: '#/components/schemas/SslEnforcement'
          description: Enable ssl enforcement or not when connect to server.
        minimalTlsVersion:
          $ref: '#/components/schemas/MinimalTlsVersion'
          description: Enforce a minimal Tls version for the server.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Storage profile of a server.
        createMode:
          type: string
          description: The mode to create a new server.
          enum:
            - Default
            - PointInTimeRestore
            - GeoRestore
            - Replica
          x-ms-enum:
            name: CreateMode
            modelAsString: true
      description: The properties used to create a new server.
      type: object
    ServerPropertiesForDefaultCreate:
      x-ms-discriminator-value: Default
      allOf:
        - $ref: '#/components/schemas/ServerPropertiesForCreate'
      properties:
        administratorLogin:
          type: string
          description: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).
        administratorLoginPassword:
          type: string
          format: password
          description: The password of the administrator login.
          x-ms-secret: true
      required:
        - administratorLogin
        - administratorLoginPassword
      description: The properties used to create a new server.
      type: object
    ServerPropertiesForRestore:
      x-ms-discriminator-value: PointInTimeRestore
      allOf:
        - $ref: '#/components/schemas/ServerPropertiesForCreate'
      properties:
        sourceServerId:
          type: string
          description: The source server id to restore from.
        restorePointInTime:
          type: string
          format: date-time
          description: Restore point creation time (ISO8601 format), specifying the time to restore from.
      required:
        - sourceServerId
        - restorePointInTime
      description: The properties used to create a new server by restoring from a backup.
      type: object
    ServerPropertiesForGeoRestore:
      x-ms-discriminator-value: GeoRestore
      allOf:
        - $ref: '#/components/schemas/ServerPropertiesForCreate'
      properties:
        sourceServerId:
          type: string
          description: The source server id to restore from.
      required:
        - sourceServerId
      description: The properties used to create a new server by restoring to a different region from a geo replicated backup.
      type: object
    ServerPropertiesForReplica:
      x-ms-discriminator-value: Replica
      allOf:
        - $ref: '#/components/schemas/ServerPropertiesForCreate'
      properties:
        sourceServerId:
          type: string
          description: The master server id to create replica from.
      required:
        - sourceServerId
      description: The properties to create a new replica.
      type: object
    Server:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerProperties'
          x-ms-client-flatten: true
          description: Properties of the server.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: Represents a server.
      type: object
    ServerForCreate:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          $ref: '#/components/schemas/ServerPropertiesForCreate'
          x-ms-client-flatten: false
          description: Properties of the server.
        location:
          type: string
          description: The location the resource resides in.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      required:
        - properties
        - location
      description: Represents a server to be created.
      type: object
    ServerUpdateParameters:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU (pricing tier) of the server.
        properties:
          properties:
            storageProfile:
              $ref: '#/components/schemas/StorageProfile'
              description: Storage profile of a server.
            administratorLoginPassword:
              type: string
              format: password
              description: The password of the administrator login.
            version:
              $ref: '#/components/schemas/ServerVersion'
              description: The version of a server.
            sslEnforcement:
              $ref: '#/components/schemas/SslEnforcement'
              description: Enable ssl enforcement or not when connect to server.
            minimalTlsVersion:
              $ref: '#/components/schemas/MinimalTlsVersion'
              description: Enforce a minimal Tls version for the server.
            publicNetworkAccess:
              $ref: '#/components/schemas/PublicNetworkAccess'
              description: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'
            replicationRole:
              type: string
              description: The replication role of the server.
          x-ms-client-flatten: true
          description: The properties that can be updated for a server.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
      description: Parameters allowed to update for a server.
      type: object
    ServerListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: The list of servers
      description: A list of servers.
      type: object
    FirewallRuleProperties:
      properties:
        startIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The start IP address of the server firewall rule. Must be IPv4 format.
        endIpAddress:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          description: The end IP address of the server firewall rule. Must be IPv4 format.
      required:
        - startIpAddress
        - endIpAddress
      description: The properties of a server firewall rule.
      type: object
    FirewallRule:
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          x-ms-client-flatten: true
          description: The properties of a firewall rule.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      required:
        - properties
      description: Represents a server firewall rule.
      type: object
    FirewallRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The list of firewall rules in a server.
      description: A list of firewall rules.
      type: object
    VirtualNetworkRuleProperties:
      description: Properties of a virtual network rule.
      required:
        - virtualNetworkSubnetId
      type: object
      properties:
        virtualNetworkSubnetId:
          description: The ARM resource id of the virtual network subnet.
          type: string
        ignoreMissingVnetServiceEndpoint:
          description: Create firewall rule before the virtual network has vnet service endpoint enabled.
          type: boolean
        state:
          description: Virtual Network Rule State
          enum:
            - Initializing
            - InProgress
            - Ready
            - Deleting
            - Unknown
          type: string
          readOnly: true
          x-ms-enum:
            name: VirtualNetworkRuleState
            modelAsString: true
    VirtualNetworkRule:
      description: A virtual network rule.
      type: object
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        properties:
          $ref: '#/components/schemas/VirtualNetworkRuleProperties'
          description: Resource properties.
          x-ms-client-flatten: true
    VirtualNetworkRuleListResult:
      description: A list of virtual network rules.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    DatabaseProperties:
      properties:
        charset:
          type: string
          description: The charset of the database.
        collation:
          type: string
          description: The collation of the database.
      description: The properties of a database.
      type: object
    Database:
      properties:
        properties:
          $ref: '#/components/schemas/DatabaseProperties'
          x-ms-client-flatten: true
          description: The properties of a database.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a Database.
      type: object
    DatabaseListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Database'
          description: The list of databases housed in a server
      description: A List of databases.
      type: object
    ConfigurationProperties:
      properties:
        value:
          type: string
          description: Value of the configuration.
        description:
          type: string
          readOnly: true
          description: Description of the configuration.
        defaultValue:
          type: string
          readOnly: true
          description: Default value of the configuration.
        dataType:
          type: string
          readOnly: true
          description: Data type of the configuration.
        allowedValues:
          type: string
          readOnly: true
          description: Allowed values of the configuration.
        source:
          type: string
          description: Source of the configuration.
      description: The properties of a configuration.
      type: object
    Configuration:
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationProperties'
          x-ms-client-flatten: true
          description: The properties of a configuration.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a Configuration.
      type: object
    ConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Configuration'
          description: The list of server configurations.
      description: A list of server configurations.
      type: object
    OperationDisplay:
      properties:
        provider:
          type: string
          readOnly: true
          description: Operation resource provider name.
        resource:
          type: string
          readOnly: true
          description: Resource on which the operation is performed.
        operation:
          type: string
          readOnly: true
          description: Localized friendly name for the operation.
        description:
          type: string
          readOnly: true
          description: Operation description.
      readOnly: true
      description: Display metadata associated with the operation.
      type: object
    LogFileProperties:
      properties:
        sizeInKB:
          type: integer
          format: int64
          description: Size of the log file.
        createdTime:
          type: string
          readOnly: true
          format: date-time
          description: Creation timestamp of the log file.
        lastModifiedTime:
          type: string
          readOnly: true
          format: date-time
          description: Last modified timestamp of the log file.
        type:
          type: string
          description: Type of the log file.
        url:
          type: string
          readOnly: true
          description: The url to download the log file from.
      description: The properties of a log file.
      type: object
    LogFile:
      properties:
        name:
          type: string
          description: The name of the log file.
        properties:
          $ref: '#/components/schemas/LogFileProperties'
          x-ms-client-flatten: true
          description: The properties of the log file.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a log file.
      type: object
    LogFileListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LogFile'
          description: The list of log files.
      description: A list of log files.
      type: object
    PerformanceTierServiceLevelObjectives:
      properties:
        id:
          type: string
          description: ID for the service level objective.
        edition:
          type: string
          description: Edition of the performance tier.
        vCore:
          type: integer
          format: int32
          description: vCore associated with the service level objective
        hardwareGeneration:
          type: string
          description: Hardware generation associated with the service level objective
        maxBackupRetentionDays:
          type: integer
          format: int32
          description: Maximum Backup retention in days for the performance tier edition
        minBackupRetentionDays:
          type: integer
          format: int32
          description: Minimum Backup retention in days for the performance tier edition
        maxStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        minStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
      description: Service level objectives for performance tier.
      type: object
    PerformanceTierProperties:
      properties:
        id:
          type: string
          description: ID of the performance tier.
        maxBackupRetentionDays:
          type: integer
          format: int32
          description: Maximum Backup retention in days for the performance tier edition
        minBackupRetentionDays:
          type: integer
          format: int32
          description: Minimum Backup retention in days for the performance tier edition
        maxStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        minLargeStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        maxLargeStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        minStorageMB:
          type: integer
          format: int32
          description: Max storage allowed for a server.
        serviceLevelObjectives:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceTierServiceLevelObjectives'
          description: Service level objectives associated with the performance tier
      description: Performance tier properties
      type: object
    PerformanceTierListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceTierProperties'
          description: The list of performance tiers
      description: A list of performance tiers.
      type: object
    NameAvailabilityRequest:
      required:
        - name
      properties:
        name:
          type: string
          description: Resource name to verify.
        type:
          type: string
          description: Resource type used for verification.
      description: Request from client to check resource name availability.
      type: object
    NameAvailability:
      properties:
        message:
          type: string
          description: Error Message.
        nameAvailable:
          type: boolean
          description: Indicates whether the resource name is available.
        reason:
          type: string
          description: Reason for name being unavailable.
      description: Represents a resource name availability.
      type: object
    RecoverableServerProperties:
      description: The recoverable server's properties.
      type: object
      properties:
        lastAvailableBackupDateTime:
          type: string
          description: The last available backup date time.
          readOnly: true
        serviceLevelObjective:
          type: string
          description: The service level objective
          readOnly: true
        edition:
          type: string
          description: Edition of the performance tier.
          readOnly: true
        vCore:
          type: integer
          format: int32
          description: vCore associated with the service level objective
          readOnly: true
        hardwareGeneration:
          type: string
          description: Hardware generation associated with the service level objective
          readOnly: true
        version:
          type: string
          description: The MariaDB version
          readOnly: true
    RecoverableServerResource:
      description: A recoverable server resource.
      type: object
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        properties:
          $ref: '#/components/schemas/RecoverableServerProperties'
          description: Resource properties.
          x-ms-client-flatten: true
  parameters:
    ServerNameParameter:
      name: serverName
      in: path
      description: The name of the server.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LocationNameParameter:
      name: locationName
      in: path
      description: The name of the location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AdvisorNameParameter:
      name: advisorName
      in: path
      description: The advisor name for recommendation action.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RecommendedActionNameParameter:
      name: recommendedActionName
      in: path
      description: The recommended action name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The operation identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    QueryIdParameter:
      name: queryId
      in: path
      description: The Query-Store query identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QueryStatisticIdParameter:
      name: queryStatisticId
      in: path
      description: The Query Statistic identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    WaitStatisticsIdParameter:
      name: waitStatisticsId
      in: path
      description: The Wait Statistic identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FirewallRuleNameParameter:
      name: firewallRuleName
      in: path
      description: The name of the server firewall rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    virtualNetworkRuleNameParameter:
      name: virtualNetworkRuleName
      in: path
      description: The name of the virtual network rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DatabaseNameParameter:
      name: databaseName
      in: path
      description: The name of the database.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the server configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  x-stackQL-resources:
    advisors:
      id: azure.maria_db.advisors
      name: advisors
      title: Advisors
      methods:
        Advisors_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Advisors_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/advisors/methods/Advisors_ListByServer'
        insert: []
        update: []
        delete: []
    recommended_action_sessions:
      id: azure.maria_db.recommended_action_sessions
      name: recommended_action_sessions
      title: Recommended_action_sessions
      methods:
        CreateRecommendedActionSession:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}~1createRecommendedActionSession~1?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    recommended_actions:
      id: azure.maria_db.recommended_actions
      name: recommended_actions
      title: Recommended_actions
      methods:
        RecommendedActions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}~1recommendedActions~1{recommendedActionName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        RecommendedActions_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1advisors~1{advisorName}~1recommendedActions~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommended_actions/methods/RecommendedActions_ListByServer'
        insert: []
        update: []
        delete: []
    location_based_recommended_action_sessions_operation_status:
      id: azure.maria_db.location_based_recommended_action_sessions_operation_status
      name: location_based_recommended_action_sessions_operation_status
      title: Location_based_recommended_action_sessions_operation_status
      methods:
        LocationBasedRecommendedActionSessionsOperationStatus_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1locations~1{locationName}~1recommendedActionSessionsAzureAsyncOperation~1{operationId}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    location_based_recommended_action_sessions_result:
      id: azure.maria_db.location_based_recommended_action_sessions_result
      name: location_based_recommended_action_sessions_result
      title: Location_based_recommended_action_sessions_result
      methods:
        LocationBasedRecommendedActionSessionsResult_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1locations~1{locationName}~1recommendedActionSessionsOperationResults~1{operationId}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_based_recommended_action_sessions_result/methods/LocationBasedRecommendedActionSessionsResult_List'
        insert: []
        update: []
        delete: []
    private_endpoint_connections:
      id: azure.maria_db.private_endpoint_connections
      name: private_endpoint_connections
      title: Private_endpoint_connections
      methods:
        PrivateEndpointConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateEndpointConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PrivateEndpointConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateEndpointConnections_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2018-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateEndpointConnections_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateEndpointConnections~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_ListByServer'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_Delete'
    server_security_alert_policies:
      id: azure.maria_db.server_security_alert_policies
      name: server_security_alert_policies
      title: Server_security_alert_policies
      methods:
        ServerSecurityAlertPolicies_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1securityAlertPolicies~1{securityAlertPolicyName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        ServerSecurityAlertPolicies_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1securityAlertPolicies~1{securityAlertPolicyName}~1?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ServerSecurityAlertPolicies_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1securityAlertPolicies~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_security_alert_policies/methods/ServerSecurityAlertPolicies_ListByServer'
        insert:
          - $ref: '#/components/x-stackQL-resources/server_security_alert_policies/methods/ServerSecurityAlertPolicies_CreateOrUpdate'
        update: []
        delete: []
    private_link_resources:
      id: azure.maria_db.private_link_resources
      name: private_link_resources
      title: Private_link_resources
      methods:
        PrivateLinkResources_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateLinkResources~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        PrivateLinkResources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1privateLinkResources~1{groupName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_ListByServer'
        insert: []
        update: []
        delete: []
    servers:
      id: azure.maria_db.servers
      name: servers
      title: Servers
      methods:
        Servers_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1start~1?api-version=2020-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Servers_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1stop~1?api-version=2020-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Servers_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Servers_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1?api-version=2018-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Servers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Servers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Servers_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Servers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1servers~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Servers_Restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1restart~1?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/Servers_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/servers/methods/Servers_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/servers/methods/Servers_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/servers/methods/Servers_Delete'
    query_texts:
      id: azure.maria_db.query_texts
      name: query_texts
      title: Query_texts
      methods:
        QueryTexts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1queryTexts~1{queryId}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        QueryTexts_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1queryTexts~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/query_texts/methods/QueryTexts_ListByServer'
        insert: []
        update: []
        delete: []
    top_query_statistics:
      id: azure.maria_db.top_query_statistics
      name: top_query_statistics
      title: Top_query_statistics
      methods:
        TopQueryStatistics_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1topQueryStatistics~1{queryStatisticId}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        TopQueryStatistics_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1topQueryStatistics~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/top_query_statistics/methods/TopQueryStatistics_ListByServer'
        insert: []
        update: []
        delete: []
    wait_statistics:
      id: azure.maria_db.wait_statistics
      name: wait_statistics
      title: Wait_statistics
      methods:
        WaitStatistics_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1waitStatistics~1{waitStatisticsId}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        WaitStatistics_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1waitStatistics~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/wait_statistics/methods/WaitStatistics_ListByServer'
        insert: []
        update: []
        delete: []
    reset_query_performance_insight_data:
      id: azure.maria_db.reset_query_performance_insight_data
      name: reset_query_performance_insight_data
      title: Reset_query_performance_insight_data
      methods:
        ResetQueryPerformanceInsightData:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1resetQueryPerformanceInsightData~1?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    replicas:
      id: azure.maria_db.replicas
      name: replicas
      title: Replicas
      methods:
        Replicas_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1replicas~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replicas/methods/Replicas_ListByServer'
        insert: []
        update: []
        delete: []
    firewall_rules:
      id: azure.maria_db.firewall_rules
      name: firewall_rules
      title: Firewall_rules
      methods:
        FirewallRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules~1{firewallRuleName}~1?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        FirewallRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules~1{firewallRuleName}~1?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        FirewallRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules~1{firewallRuleName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        FirewallRules_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1firewallRules~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_ListByServer'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_Delete'
    virtual_network_rules:
      id: azure.maria_db.virtual_network_rules
      name: virtual_network_rules
      title: Virtual_network_rules
      methods:
        VirtualNetworkRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        VirtualNetworkRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        VirtualNetworkRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        VirtualNetworkRules_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1virtualNetworkRules~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/VirtualNetworkRules_ListByServer'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/VirtualNetworkRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/VirtualNetworkRules_Delete'
    databases:
      id: azure.maria_db.databases
      name: databases
      title: Databases
      methods:
        Databases_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases~1{databaseName}~1?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Databases_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases~1{databaseName}~1?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Databases_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases~1{databaseName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Databases_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1databases~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/Databases_ListByServer'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/Databases_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/Databases_Delete'
    configurations:
      id: azure.maria_db.configurations
      name: configurations
      title: Configurations
      methods:
        Configurations_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1configurations~1{configurationName}~1?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Configurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1configurations~1{configurationName}~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Configurations_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1configurations~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/Configurations_ListByServer'
        insert:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/Configurations_CreateOrUpdate'
        update: []
        delete: []
    server_parameters:
      id: azure.maria_db.server_parameters
      name: server_parameters
      title: Server_parameters
      methods:
        ServerParameters_ListUpdateConfigurations:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1updateConfigurations~1?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    log_files:
      id: azure.maria_db.log_files
      name: log_files
      title: Log_files
      methods:
        LogFiles_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1logFiles~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_files/methods/LogFiles_ListByServer'
        insert: []
        update: []
        delete: []
    recoverable_servers:
      id: azure.maria_db.recoverable_servers
      name: recoverable_servers
      title: Recoverable_servers
      methods:
        RecoverableServers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1recoverableServers~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    server_based_performance_tier:
      id: azure.maria_db.server_based_performance_tier
      name: server_based_performance_tier
      title: Server_based_performance_tier
      methods:
        ServerBasedPerformanceTier_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBforMariaDB~1servers~1{serverName}~1performanceTiers~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_based_performance_tier/methods/ServerBasedPerformanceTier_List'
        insert: []
        update: []
        delete: []
    location_based_performance_tier:
      id: azure.maria_db.location_based_performance_tier
      name: location_based_performance_tier
      title: Location_based_performance_tier
      methods:
        LocationBasedPerformanceTier_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1locations~1{locationName}~1performanceTiers~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/location_based_performance_tier/methods/LocationBasedPerformanceTier_List'
        insert: []
        update: []
        delete: []
    check_name_availability:
      id: azure.maria_db.check_name_availability
      name: check_name_availability
      title: Check_name_availability
      methods:
        CheckNameAvailability_Execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBforMariaDB~1checkNameAvailability~1?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: azure.maria_db.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBforMariaDB~1operations~1?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/?api-version=2018-06-01:
    get:
      tags:
        - Advisors
      operationId: Advisors_Get
      description: Get a recommendation action advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisor'
      x-stackQL-resource: advisors
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/?api-version=2018-06-01:
    get:
      tags:
        - Advisors
      operationId: Advisors_ListByServer
      description: List recommendation action advisors.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisorsResultList'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: advisors
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/createRecommendedActionSession/?api-version=2018-06-01:
    post:
      tags:
        - RecommendedActionSessions
      operationId: CreateRecommendedActionSession
      description: Create recommendation action session for the advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
        - name: databaseName
          in: query
          description: The name of the database.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-stackQL-resource: recommended_action_sessions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}/?api-version=2018-06-01:
    get:
      tags:
        - RecommendedActions
      operationId: RecommendedActions_Get
      description: Retrieve recommended actions from the advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
        - $ref: '#/components/parameters/RecommendedActionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationAction'
      x-stackQL-resource: recommended_actions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/recommendedActions/?api-version=2018-06-01:
    get:
      tags:
        - RecommendedActions
      operationId: RecommendedActions_ListByServer
      description: Retrieve recommended actions from the advisor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/AdvisorNameParameter'
        - name: sessionId
          in: query
          description: The recommendation action session identifier.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationActionsResultList'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: recommended_actions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/recommendedActionSessionsAzureAsyncOperation/{operationId}/?api-version=2018-06-01:
    get:
      tags:
        - LocationBasedRecommendedActionSessionsOperationStatus
      operationId: LocationBasedRecommendedActionSessionsOperationStatus_Get
      description: Recommendation action session operation status.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedActionSessionsOperationStatus'
      x-stackQL-resource: location_based_recommended_action_sessions_operation_status
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/recommendedActionSessionsOperationResults/{operationId}/?api-version=2018-06-01:
    get:
      tags:
        - LocationBasedRecommendedActionSessionsResult
      operationId: LocationBasedRecommendedActionSessionsResult_List
      description: Recommendation action session operation result.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationActionsResultList'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationActionsResultList'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: location_based_recommended_action_sessions_result
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2018-06-01:
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets a private endpoint connection.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateEndpointConnections
      description: Approve or reject a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully approved or rejected private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: insert
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted private endpoint connection.
        '202':
          description: Accepted
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: delete
    patch:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_UpdateTags
      summary: Updates tags on private endpoint connection.
      description: Updates private endpoint connection with the specified tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: privateEndpointConnectionName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Update private endpoint connection Tags operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateEndpointConnections/?api-version=2018-06-01:
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets all private endpoint connections on a server.
      operationId: PrivateEndpointConnections_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}/?api-version=2018-06-01:
    get:
      tags:
        - ServerSecurityAlertPolicies
      description: Get a server's security alert policy.
      operationId: ServerSecurityAlertPolicies_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: securityAlertPolicyName
          in: path
          description: The name of the security alert policy.
          required: true
          schema:
            enum:
              - Default
            x-ms-enum:
              name: SecurityAlertPolicyName
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the server threat detection policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicy'
        default:
          description: Error response describing why the operation of getting security alert policies failed.
      x-stackQL-resource: server_security_alert_policies
      x-stackQL-verb: exec
    put:
      tags:
        - ServerSecurityAlertPolicies
      description: Creates or updates a threat detection policy.
      operationId: ServerSecurityAlertPolicies_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: securityAlertPolicyName
          in: path
          description: The name of the threat detection policy.
          required: true
          schema:
            enum:
              - Default
            x-ms-enum:
              name: SecurityAlertPolicyName
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The server security alert policy.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerSecurityAlertPolicy'
      responses:
        '200':
          description: Successfully updated the threat detection policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicy'
        '202':
          description: Created request to set the server threat detection policy.
        default:
          description: Error response describing why the operation of setting security alert policies failed.
      x-ms-long-running-operation: true
      x-stackQL-resource: server_security_alert_policies
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/securityAlertPolicies/?api-version=2018-06-01:
    get:
      tags:
        - ServerSecurityAlertPolicies
      description: Get the server's threat detection policies.
      operationId: ServerSecurityAlertPolicies_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the server threat detection policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSecurityAlertPolicyListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.

             * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.

             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress

             * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.

             * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later

             * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: server_security_alert_policies
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateLinkResources/?api-version=2018-06-01:
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources for MariaDB server.
      operationId: PrivateLinkResources_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/privateLinkResources/{groupName}/?api-version=2018-06-01:
    get:
      tags:
        - PrivateLinkResources
      description: Gets a private link resource for MariaDB server.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: groupName
          in: path
          description: The name of the private link resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/start/?api-version=2020-01-01:
    post:
      tags:
        - ServerStart
      operationId: Servers_Start
      description: Starts a stopped server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/stop/?api-version=2020-01-01:
    post:
      tags:
        - ServerStop
      operationId: Servers_Stop
      description: Stops a running server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/queryTexts/{queryId}/?api-version=2018-06-01:
    get:
      tags:
        - QueryTexts
      operationId: QueryTexts_Get
      description: Retrieve the Query-Store query texts for the queryId.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/QueryIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryText'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: query_texts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/queryTexts/?api-version=2018-06-01:
    get:
      tags:
        - QueryTexts
      operationId: QueryTexts_ListByServer
      description: Retrieve the Query-Store query texts for specified queryIds.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - name: queryIds
          in: query
          description: The query identifiers
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTextsResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: query_texts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics/{queryStatisticId}/?api-version=2018-06-01:
    get:
      tags:
        - TopQueryStatistics
      operationId: TopQueryStatistics_Get
      description: Retrieve the query statistic for specified identifier.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/QueryStatisticIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryStatistic'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: top_query_statistics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics/?api-version=2018-06-01:
    get:
      tags:
        - TopQueryStatistics
      operationId: TopQueryStatistics_ListByServer
      description: Retrieve the Query-Store top queries for specified metric and aggregation.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for retrieving top query statistics.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopQueryStatisticsInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopQueryStatisticsResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: top_query_statistics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/waitStatistics/{waitStatisticsId}/?api-version=2018-06-01:
    get:
      tags:
        - WaitStatistics
      operationId: WaitStatistics_Get
      description: Retrieve wait statistics for specified identifier.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/WaitStatisticsIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitStatistic'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: wait_statistics
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/waitStatistics/?api-version=2018-06-01:
    get:
      tags:
        - WaitStatistics
      operationId: WaitStatistics_ListByServer
      description: Retrieve wait statistics for specified aggregation window.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for retrieving wait statistics.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitStatisticsInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitStatisticsResultList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: wait_statistics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/resetQueryPerformanceInsightData/?api-version=2018-06-01:
    post:
      tags:
        - ResetQueryPerformanceInsightData
      operationId: ResetQueryPerformanceInsightData
      description: Reset data for Query Performance Insight.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPerformanceInsightResetDataResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: reset_query_performance_insight_data
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/?api-version=2018-06-01:
    put:
      tags:
        - Servers
      operationId: Servers_Create
      description: Creates a new server or updates an existing server. The update action will overwrite the existing server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerForCreate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: insert
    patch:
      tags:
        - Servers
      operationId: Servers_Update
      description: Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The required parameters for updating a server.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
    delete:
      tags:
        - Servers
      operationId: Servers_Delete
      description: Deletes a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: delete
    get:
      tags:
        - Servers
      operationId: Servers_Get
      description: Gets information about a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/?api-version=2018-06-01:
    get:
      tags:
        - Servers
      operationId: Servers_ListByResourceGroup
      description: List all the servers in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: servers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/servers/?api-version=2018-06-01:
    get:
      tags:
        - Servers
      operationId: Servers_List
      description: List all the servers in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: servers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/restart/?api-version=2018-06-01:
    post:
      tags:
        - ServerRestart
      operationId: Servers_Restart
      description: Restarts a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/replicas/?api-version=2018-06-01:
    get:
      tags:
        - Replicas
      operationId: Replicas_ListByServer
      description: List all the replicas for a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: replicas
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules/{firewallRuleName}/?api-version=2018-06-01:
    put:
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Creates a new firewall rule or updates an existing firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: insert
    delete:
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes a server firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: delete
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      description: Gets information about a server firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules/?api-version=2018-06-01:
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByServer
      description: List all the firewall rules in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}/?api-version=2018-06-01:
    get:
      tags:
        - VirtualNetworkRules
      description: Gets a virtual network rule.
      operationId: VirtualNetworkRules_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/virtualNetworkRuleNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
        default:
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      x-stackQL-resource: virtual_network_rules
      x-stackQL-verb: exec
    put:
      tags:
        - VirtualNetworkRules
      description: Creates or updates an existing virtual network rule.
      operationId: VirtualNetworkRules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/virtualNetworkRuleNameParameter'
      requestBody:
        description: The requested virtual Network Rule Resource state.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkRule'
      responses:
        '200':
          description: Successfully updated a virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
        '201':
          description: Successfully created a virtual network rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceId - Invalid resource identifier.

             * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

             * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

             * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

             * 400 NullVirtualNetworkRequest - Virtual Network Request is Null

             * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null

             * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled

             * 404 OperationIdNotFound - The operation with Id does not exist.

             * 409 OperationCancelled - The operation has been cancelled by user.

             * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

             * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_network_rules
      x-stackQL-verb: insert
    delete:
      tags:
        - VirtualNetworkRules
      description: Deletes the virtual network rule with the given name.
      operationId: VirtualNetworkRules_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/virtualNetworkRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the virtual network rule.
        '202':
          description: Accepted
        '204':
          description: The specified virtual network rule does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceId - Invalid resource identifier.

             * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

             * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

             * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

             * 400 NullVirtualNetworkRequest - Virtual Network Request is Null

             * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 OperationIdNotFound - The operation with Id does not exist.

             * 409 OperationCancelled - The operation has been cancelled by user.

             * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

             * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
      x-ms-long-running-operation: true
      x-stackQL-resource: virtual_network_rules
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules/?api-version=2018-06-01:
    get:
      tags:
        - VirtualNetworkRules
      description: Gets a list of virtual network rules in a server.
      operationId: VirtualNetworkRules_ListByServer
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the list of virtual network rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRuleListResult'
        default:
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: virtual_network_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases/{databaseName}/?api-version=2018-06-01:
    put:
      tags:
        - Databases
      operationId: Databases_CreateOrUpdate
      description: Creates a new database or updates an existing database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      requestBody:
        description: The required parameters for creating or updating a database.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: databases
      x-stackQL-verb: insert
    delete:
      tags:
        - Databases
      operationId: Databases_Delete
      description: Deletes a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: databases
      x-stackQL-verb: delete
    get:
      tags:
        - Databases
      operationId: Databases_Get
      description: Gets information about a database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: databases
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases/?api-version=2018-06-01:
    get:
      tags:
        - Databases
      operationId: Databases_ListByServer
      description: List all the databases in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: databases
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations/{configurationName}/?api-version=2018-06-01:
    put:
      tags:
        - Configurations
      operationId: Configurations_CreateOrUpdate
      description: Updates a configuration of a server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-stackQL-resource: configurations
      x-stackQL-verb: insert
    get:
      tags:
        - Configurations
      operationId: Configurations_Get
      description: Gets information about a configuration of server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations/?api-version=2018-06-01:
    get:
      tags:
        - Configurations
      operationId: Configurations_ListByServer
      description: List all the configurations in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/updateConfigurations/?api-version=2018-06-01:
    post:
      tags:
        - ConfigurationsUpdate
      operationId: ServerParameters_ListUpdateConfigurations
      description: Update a list of configurations in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      requestBody:
        description: The parameters for updating a list of server configuration.
        required: true
        x-ms-requestBody-name: value
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationListResult'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: server_parameters
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/logFiles/?api-version=2018-06-01:
    get:
      tags:
        - LogFiles
      operationId: LogFiles_ListByServer
      description: List all the log files in a given server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogFileListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: log_files
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/recoverableServers/?api-version=2018-06-01:
    get:
      tags:
        - RecoverableServers
      operationId: RecoverableServers_Get
      description: Gets a recoverable MariaDB Server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoverableServerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: recoverable_servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/performanceTiers/?api-version=2018-06-01:
    get:
      tags:
        - ServerBasedPerformanceTier
      operationId: ServerBasedPerformanceTier_List
      description: List all the performance tiers for a MariaDB server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceTierListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: server_based_performance_tier
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/performanceTiers/?api-version=2018-06-01:
    get:
      tags:
        - LocationBasedPerformanceTier
      operationId: LocationBasedPerformanceTier_List
      description: List all the performance tiers at specified location in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceTierListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: location_based_performance_tier
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/checkNameAvailability/?api-version=2018-06-01:
    post:
      tags:
        - CheckNameAvailability
      operationId: CheckNameAvailability_Execute
      description: Check the availability of name for resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: check_name_availability
      x-stackQL-verb: exec
  /providers/Microsoft.DBforMariaDB/operations/?api-version=2018-06-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available REST API operations.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: operations
      x-stackQL-verb: select
x-stackQL-config:
  variations:
    isObjectSchemaImplicitlyUnioned: true
