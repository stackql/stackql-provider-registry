openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Service Linker (Microsoft.ServiceLinker)
  description: Service Linker
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-24-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    TargetServiceType:
      description: The target service type.
      type: string
      enum:
        - AzureResource
        - ConfluentBootstrapServer
        - ConfluentSchemaRegistry
      x-ms-enum:
        name: targetServiceType
        modelAsString: true
    TargetServiceBase:
      description: The target service properties
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          description: The target service type.
          $ref: '#/components/schemas/TargetServiceType'
      required:
        - type
    AzureResourceType:
      description: The azure resource type.
      type: string
      enum:
        - KeyVault
      x-ms-enum:
        name: azureResourceType
        modelAsString: true
    AzureResourcePropertiesBase:
      description: The azure resource properties
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          description: The azure resource type.
          $ref: '#/components/schemas/AzureResourceType'
      required:
        - type
    AzureResource:
      x-ms-discriminator-value: AzureResource
      type: object
      description: The azure resource info when target service type is AzureResource
      allOf:
        - $ref: '#/components/schemas/TargetServiceBase'
      properties:
        id:
          description: The Id of azure resource.
          type: string
        resourceProperties:
          nullable: true
          x-nullable: true
          description: The azure resource connection related properties.
          $ref: '#/components/schemas/AzureResourcePropertiesBase'
    AzureKeyVaultProperties:
      x-ms-discriminator-value: KeyVault
      type: object
      description: The resource properties when type is Azure Key Vault
      allOf:
        - $ref: '#/components/schemas/AzureResourcePropertiesBase'
      properties:
        connectAsKubernetesCsiDriver:
          nullable: true
          description: True if connect via Kubernetes CSI Driver.
          type: boolean
    ConfluentBootstrapServer:
      x-ms-discriminator-value: ConfluentBootstrapServer
      type: object
      description: The service properties when target service type is ConfluentBootstrapServer
      allOf:
        - $ref: '#/components/schemas/TargetServiceBase'
      properties:
        endpoint:
          description: The endpoint of service.
          type: string
    ConfluentSchemaRegistry:
      x-ms-discriminator-value: ConfluentSchemaRegistry
      type: object
      description: The service properties when target service type is ConfluentSchemaRegistry
      allOf:
        - $ref: '#/components/schemas/TargetServiceBase'
      properties:
        endpoint:
          description: The endpoint of service.
          type: string
    AuthType:
      description: The authentication type.
      type: string
      enum:
        - systemAssignedIdentity
        - userAssignedIdentity
        - servicePrincipalSecret
        - servicePrincipalCertificate
        - secret
      x-ms-enum:
        name: AuthType
        modelAsString: true
    SecretType:
      description: The secret type.
      type: string
      enum:
        - rawValue
        - keyVaultSecretUri
        - keyVaultSecretReference
      x-ms-enum:
        name: SecretType
        modelAsString: true
    SecretInfoBase:
      description: The secret info
      discriminator:
        propertyName: secretType
      type: object
      properties:
        secretType:
          description: The secret type.
          $ref: '#/components/schemas/SecretType'
      required:
        - secretType
    ValueSecretInfo:
      x-ms-discriminator-value: rawValue
      type: object
      description: The secret info when type is rawValue. It's for scenarios that user input the secret.
      allOf:
        - $ref: '#/components/schemas/SecretInfoBase'
      properties:
        value:
          nullable: true
          description: The actual value of the secret.
          type: string
          x-ms-secret: true
    KeyVaultSecretReferenceSecretInfo:
      x-ms-discriminator-value: keyVaultSecretReference
      type: object
      description: The secret info when type is keyVaultSecretReference. It's for scenario that user provides a secret stored in user's keyvault and source is Azure Kubernetes. The key Vault's resource id is linked to secretStore.keyVaultId.
      allOf:
        - $ref: '#/components/schemas/SecretInfoBase'
      properties:
        name:
          description: Name of the Key Vault secret.
          type: string
        version:
          nullable: true
          description: Version of the Key Vault secret.
          type: string
    KeyVaultSecretUriSecretInfo:
      x-ms-discriminator-value: keyVaultSecretUri
      type: object
      description: The secret info when type is keyVaultSecretUri. It's for scenario that user provides a secret stored in user's keyvault and source is Web App, Spring Cloud or Container App.
      allOf:
        - $ref: '#/components/schemas/SecretInfoBase'
      properties:
        value:
          description: URI to the keyvault secret
          type: string
    AuthInfoBase:
      description: The authentication info
      discriminator:
        propertyName: authType
      type: object
      properties:
        authType:
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
      required:
        - authType
    SecretAuthInfo:
      x-ms-discriminator-value: secret
      type: object
      description: The authentication info when authType is secret
      allOf:
        - $ref: '#/components/schemas/AuthInfoBase'
      properties:
        name:
          nullable: true
          description: Username or account name for secret auth.
          type: string
        secretInfo:
          nullable: true
          x-nullable: true
          description: Password or key vault secret for secret auth.
          $ref: '#/components/schemas/SecretInfoBase'
    UserAssignedIdentityAuthInfo:
      x-ms-discriminator-value: userAssignedIdentity
      type: object
      description: The authentication info when authType is userAssignedIdentity
      allOf:
        - $ref: '#/components/schemas/AuthInfoBase'
      properties:
        clientId:
          description: Client Id for userAssignedIdentity.
          type: string
        subscriptionId:
          description: Subscription id for userAssignedIdentity.
          type: string
    SystemAssignedIdentityAuthInfo:
      x-ms-discriminator-value: systemAssignedIdentity
      type: object
      description: The authentication info when authType is systemAssignedIdentity
      allOf:
        - $ref: '#/components/schemas/AuthInfoBase'
    ServicePrincipalSecretAuthInfo:
      x-ms-discriminator-value: servicePrincipalSecret
      type: object
      description: The authentication info when authType is servicePrincipal secret
      allOf:
        - $ref: '#/components/schemas/AuthInfoBase'
      properties:
        clientId:
          description: ServicePrincipal application clientId for servicePrincipal auth.
          type: string
        principalId:
          description: Principal Id for servicePrincipal auth.
          type: string
        secret:
          description: Secret for servicePrincipal auth.
          type: string
          x-ms-secret: true
      required:
        - clientId
        - principalId
        - secret
    ServicePrincipalCertificateAuthInfo:
      x-ms-discriminator-value: servicePrincipalCertificate
      type: object
      description: The authentication info when authType is servicePrincipal certificate
      allOf:
        - $ref: '#/components/schemas/AuthInfoBase'
      properties:
        clientId:
          description: Application clientId for servicePrincipal auth.
          type: string
        principalId:
          description: Principal Id for servicePrincipal auth.
          type: string
        certificate:
          description: ServicePrincipal certificate for servicePrincipal auth.
          type: string
          x-ms-secret: true
      required:
        - clientId
        - principalId
        - certificate
    LinkerResource:
      type: object
      description: Linker of source and target resource
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
          description: The resource model definition for an Azure Resource Manager proxy resource.
      required:
        - properties
      properties:
        properties:
          description: The properties of the linker.
          $ref: '#/components/schemas/LinkerProperties'
          x-ms-client-flatten: true
        systemData:
          nullable: true
          x-nullable: true
          readOnly: true
          $ref: '#/components/schemas/systemData'
          description: The system data.
    LinkerPatch:
      description: A linker to be updated.
      type: object
      properties:
        properties:
          description: Linker properties
          type: object
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LinkerProperties'
    LinkerList:
      description: The list of Linker.
      type: object
      properties:
        nextLink:
          nullable: true
          description: The link used to get the next page of Linker list.
          type: string
        value:
          description: The list of Linkers.
          type: array
          items:
            $ref: '#/components/schemas/LinkerResource'
    LinkerProperties:
      description: The properties of the linker.
      type: object
      properties:
        targetService:
          $ref: '#/components/schemas/TargetServiceBase'
          description: The target service properties
        authInfo:
          description: The authentication type.
          $ref: '#/components/schemas/AuthInfoBase'
        clientType:
          description: The application client type
          type: string
          enum:
            - none
            - dotnet
            - java
            - python
            - go
            - php
            - ruby
            - django
            - nodejs
            - springBoot
            - kafka-springBoot
          x-ms-enum:
            name: clientType
            modelAsString: true
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state. '
        vNetSolution:
          nullable: true
          x-nullable: true
          description: The VNet solution.
          $ref: '#/components/schemas/VNetSolution'
        secretStore:
          nullable: true
          x-nullable: true
          description: An option to store secret value in secure place
          $ref: '#/components/schemas/SecretStore'
        scope:
          nullable: true
          type: string
          description: connection scope in source service.
    SourceConfiguration:
      description: A configuration item for source resource
      type: object
      properties:
        name:
          description: The name of setting.
          type: string
        value:
          nullable: true
          description: The value of setting
          type: string
    SourceConfigurationResult:
      description: Configurations for source resource, include appSettings, connectionString and serviceBindings
      type: object
      properties:
        configurations:
          description: The configuration properties for source resource.
          type: array
          items:
            $ref: '#/components/schemas/SourceConfiguration'
          x-ms-identifiers:
            - name
    ValidateOperationResult:
      description: The validation operation result for a linker.
      type: object
      properties:
        properties:
          nullable: true
          x-nullable: true
          description: The validation result detail.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ValidateResult'
        resourceId:
          nullable: true
          description: Validated linker id.
          type: string
        status:
          nullable: true
          description: Validation operation status.
          type: string
    ValidateResult:
      description: The validation result for a linker.
      type: object
      properties:
        linkerName:
          nullable: true
          description: The linker name.
          type: string
        isConnectionAvailable:
          nullable: true
          description: A boolean value indicating whether the connection is available or not
          type: boolean
        reportStartTimeUtc:
          nullable: true
          type: string
          format: date-time
          description: The start time of the validation report.
        reportEndTimeUtc:
          nullable: true
          type: string
          format: date-time
          description: The end time of the validation report.
        sourceId:
          nullable: true
          description: The resource id of the linker source application.
          type: string
        targetId:
          nullable: true
          description: The resource Id of target service.
          type: string
        authType:
          nullable: true
          x-nullable: true
          description: The authentication type.
          $ref: '#/components/schemas/AuthType'
        validationDetail:
          description: The detail of validation result
          type: array
          items:
            $ref: '#/components/schemas/ValidationResultItem'
          x-ms-identifiers:
            - name
    ValidationResultItem:
      description: The validation item for a linker.
      type: object
      properties:
        name:
          description: The validation item name.
          type: string
        description:
          nullable: true
          description: The display name of validation item
          type: string
        result:
          nullable: true
          description: The result of validation
          type: string
          enum:
            - success
            - failure
            - warning
          x-ms-enum:
            name: ValidationResultStatus
            modelAsString: true
        errorMessage:
          nullable: true
          description: The error message of validation result
          type: string
        errorCode:
          nullable: true
          description: The error code of validation result
          type: string
    VNetSolution:
      type: object
      description: The VNet solution for linker
      properties:
        type:
          nullable: true
          description: Type of VNet solution.
          type: string
          enum:
            - serviceEndpoint
            - privateLink
          x-ms-enum:
            name: vNetSolutionType
            modelAsString: true
    SecretStore:
      type: object
      description: An option to store secret value in secure place
      properties:
        keyVaultId:
          nullable: true
          type: string
          description: The key vault id to store secret
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  parameters:
    LinkerNameParameter:
      name: linkerName
      in: path
      description: The name Linker resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceUriParameter:
      name: resourceUri
      in: path
      description: The fully qualified Azure Resource manager identifier of the resource to be connected.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  x-stackQL-resources:
    linker:
      id: azure.service_linker.linker
      name: linker
      title: Linker
      methods:
        Linker_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Linker_Get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Linker_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1?api-version=2022-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Linker_Delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1?api-version=2022-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Linker_Update:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1?api-version=2022-05-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Linker_Validate:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1validateLinker~1?api-version=2022-05-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Linker_ListConfigurations:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.ServiceLinker~1linkers~1{linkerName}~1listConfigurations~1?api-version=2022-05-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linker/methods/Linker_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/linker/methods/Linker_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linker/methods/Linker_Delete'
    operations:
      id: azure.service_linker.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ServiceLinker~1operations~1?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
paths:
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/?api-version=2022-05-01:
    get:
      deprecated: false
      description: Returns list of Linkers which connects to the resource.
      operationId: Linker_List
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: linker details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: linker
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/?api-version=2022-05-01:
    get:
      description: Returns Linker resource for a given name.
      operationId: Linker_Get
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: Linker details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: linker
      x-stackQL-verb: exec
    put:
      description: Create or update linker resource.
      operationId: Linker_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      requestBody:
        description: Linker details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkerResource'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        '201':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: linker
      x-stackQL-verb: insert
    delete:
      tags:
        - Links
      operationId: Linker_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Delete a link.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: OK. The link is deleted.
        '202':
          description: Long running operation.
        '204':
          description: Deleted. The link is not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: linker
      x-stackQL-verb: delete
    patch:
      tags:
        - Links
      operationId: Linker_Update
      description: Operation to update an existing link.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      requestBody:
        description: Linker details.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkerPatch'
      responses:
        '200':
          description: Success. The response describes a link.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        '201':
          description: Long running operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkerResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: linker
      x-stackQL-verb: exec
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/validateLinker/?api-version=2022-05-01:
    post:
      tags:
        - Links
      operationId: Linker_Validate
      description: Validate a link.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateOperationResult'
        '202':
          description: Accepted - Returns this status until the asynchronous operation has completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: linker
      x-stackQL-verb: exec
  /{resourceUri}/providers/Microsoft.ServiceLinker/linkers/{linkerName}/listConfigurations/?api-version=2022-05-01:
    post:
      tags:
        - Links
      operationId: Linker_ListConfigurations
      description: list source configurations for a linker.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/LinkerNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConfigurationResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: linker
      x-stackQL-verb: exec
  /providers/Microsoft.ServiceLinker/operations/?api-version=2022-05-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists the available ServiceLinker REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
x-stackQL-config:
  variations:
    isObjectSchemaImplicitlyUnioned: true
