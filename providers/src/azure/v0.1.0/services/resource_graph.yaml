openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: resource_graph (Microsoft.ResourceGraph)
  description: resource_graph
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-20-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ResourcesHistoryRequest:
      description: Describes a history request to be executed.
      type: object
      properties:
        subscriptions:
          description: Azure subscriptions against which to execute the query.
          type: array
          items:
            type: string
            description: Subscription Id.
        query:
          description: The resources query.
          type: string
        options:
          description: The history request evaluation options
          $ref: '#/components/schemas/ResourcesHistoryRequestOptions'
        managementGroups:
          description: 'Azure management groups against which to execute the query. Example: [ ''mg1'', ''mg2'' ]'
          type: array
          items:
            type: string
            description: The name of Management group.
    ResourcesHistoryRequestOptions:
      description: The options for history request evaluation
      type: object
      properties:
        interval:
          description: The time interval used to fetch history.
          $ref: '#/components/schemas/DateTimeInterval'
        $top:
          description: The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.
          format: int32
          type: integer
          minimum: 1
          maximum: 1000
        $skip:
          description: The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.
          type: integer
          format: int32
          minimum: 0
        $skipToken:
          description: Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
          type: string
        resultFormat:
          description: Defines in which format query result returned.
          type: string
          enum:
            - table
            - objectArray
          x-ms-enum:
            name: ResultFormat
            modelAsString: false
    DateTimeInterval:
      description: An interval in time specifying the date and time for the inclusive start and exclusive end, i.e. `[start, end)`.
      type: object
      properties:
        start:
          description: A datetime indicating the inclusive/closed start of the time interval, i.e. `[`**`start`**`, end)`. Specifying a `start` that occurs chronologically after `end` will result in an error.
          type: string
          format: date-time
        end:
          description: A datetime indicating the exclusive/open end of the time interval, i.e. `[start, `**`end`**`)`. Specifying an `end` that occurs chronologically before `start` will result in an error.
          type: string
          format: date-time
      required:
        - start
        - end
    ErrorResponse:
      title: Error response.
      type: object
      description: An error response from the API.
      properties:
        error:
          $ref: '#/components/schemas/Error'
          description: Error information.
      required:
        - error
    Error:
      title: Error info.
      type: object
      description: Error details.
      properties:
        code:
          type: string
          description: Error code identifying the specific error.
        message:
          type: string
          description: A human readable error message.
        details:
          type: array
          description: Error details
          items:
            $ref: '#/components/schemas/ErrorDetails'
      required:
        - code
        - message
    ErrorDetails:
      title: Error details.
      type: object
      properties:
        code:
          type: string
          description: Error code identifying the specific error.
        message:
          type: string
          description: A human readable error message.
      additionalProperties:
        type: object
      required:
        - code
        - message
    QueryRequest:
      description: Describes a query to be executed.
      type: object
      properties:
        subscriptions:
          description: Azure subscriptions against which to execute the query.
          type: array
          items:
            type: string
            description: Subscription Id.
        managementGroups:
          description: 'Azure management groups against which to execute the query. Example: [ ''mg1'', ''mg2'' ]'
          type: array
          items:
            type: string
            description: The name of Management group.
        query:
          description: The resources query.
          type: string
        options:
          description: The query evaluation options
          $ref: '#/components/schemas/QueryRequestOptions'
        facets:
          description: An array of facet requests to be computed against the query result.
          type: array
          items:
            $ref: '#/components/schemas/FacetRequest'
      required:
        - query
    QueryRequestOptions:
      description: The options for query evaluation
      properties:
        $skipToken:
          description: Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.
          type: string
        $top:
          description: The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
        $skip:
          description: The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.
          type: integer
          format: int32
          minimum: 0
        resultFormat:
          description: Defines in which format query result returned.
          type: string
          enum:
            - table
            - objectArray
          default: objectArray
          x-ms-enum:
            name: ResultFormat
            modelAsString: false
        allowPartialScopes:
          description: Only applicable for tenant and management group level queries to decide whether to allow partial scopes for result in case the number of subscriptions exceed allowed limits.
          type: boolean
          default: false
        authorizationScopeFilter:
          description: Defines what level of authorization resources should be returned based on the which subscriptions and management groups are passed as scopes.
          type: string
          enum:
            - AtScopeAndBelow
            - AtScopeAndAbove
            - AtScopeExact
            - AtScopeAboveAndBelow
          default: AtScopeAndBelow
          x-ms-enum:
            name: AuthorizationScopeFilter
            modelAsString: false
    FacetRequest:
      description: A request to compute additional statistics (facets) over the query results.
      type: object
      properties:
        expression:
          description: The column or list of columns to summarize by
          type: string
        options:
          description: The options for facet evaluation
          $ref: '#/components/schemas/FacetRequestOptions'
      required:
        - expression
    FacetRequestOptions:
      description: The options for facet evaluation
      properties:
        sortBy:
          description: The column name or query expression to sort on. Defaults to count if not present.
          type: string
        sortOrder:
          description: The sorting order by the selected column (count by default).
          type: string
          default: desc
          enum:
            - asc
            - desc
          x-ms-enum:
            name: FacetSortOrder
            modelAsString: false
        filter:
          description: Specifies the filter condition for the 'where' clause which will be run on main query's result, just before the actual faceting.
          type: string
        $top:
          description: The maximum number of facet rows that should be returned.
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
    QueryResponse:
      description: Query result.
      type: object
      properties:
        totalRecords:
          description: Number of total records matching the query.
          type: integer
          format: int64
        count:
          description: Number of records returned in the current response. In the case of paging, this is the number of records in the current page.
          type: integer
          format: int64
        resultTruncated:
          description: Indicates whether the query results are truncated.
          type: string
          enum:
            - 'true'
            - 'false'
          x-ms-enum:
            name: ResultTruncated
            modelAsString: false
        $skipToken:
          description: When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
          type: string
        data:
          description: Query output in JObject array or Table format.
          type: object
        facets:
          description: Query facets.
          type: array
          items:
            $ref: '#/components/schemas/Facet'
      required:
        - totalRecords
        - count
        - resultTruncated
        - data
    Table:
      description: Query output in tabular format.
      type: object
      properties:
        columns:
          description: Query result column descriptors.
          type: array
          items:
            $ref: '#/components/schemas/Column'
            description: Column descriptor.
        rows:
          description: Query result rows.
          type: array
          items:
            $ref: '#/components/schemas/Row'
            description: Query result row.
      required:
        - columns
        - rows
    Column:
      description: Query result column descriptor.
      type: object
      properties:
        name:
          description: Column name.
          type: string
        type:
          description: Column data type.
          $ref: '#/components/schemas/ColumnDataType'
      required:
        - name
        - type
    ColumnDataType:
      description: Data type of a column in a table.
      type: string
      enum:
        - string
        - integer
        - number
        - boolean
        - object
        - datetime
      x-ms-enum:
        name: ColumnDataType
        modelAsString: false
    Row:
      description: Query result row.
      type: array
      items:
        type: object
        description: Cell value.
    Facet:
      description: A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.
      type: object
      properties:
        expression:
          description: Facet expression, same as in the corresponding facet request.
          type: string
        resultType:
          description: Result type
          type: string
      required:
        - expression
        - resultType
      discriminator:
        propertyName: resultType
    FacetResult:
      x-ms-discriminator-value: FacetResult
      description: Successfully executed facet containing additional statistics on the response of a query.
      type: object
      properties:
        totalRecords:
          description: Number of total records in the facet results.
          type: integer
          format: int64
        count:
          description: Number of records returned in the facet response.
          type: integer
          format: int32
        data:
          description: A JObject array or Table containing the desired facets. Only present if the facet is valid.
          type: object
      required:
        - totalRecords
        - count
        - data
      allOf:
        - $ref: '#/components/schemas/Facet'
    FacetError:
      x-ms-discriminator-value: FacetError
      description: A facet whose execution resulted in an error.
      type: object
      properties:
        errors:
          description: An array containing detected facet errors with details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
      required:
        - errors
      allOf:
        - $ref: '#/components/schemas/Facet'
    OperationListResult:
      description: Result of the request to list Resource Graph operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: List of Resource Graph operations supported by the Resource Graph resource provider.
    Operation:
      description: Resource Graph REST API operation definition.
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: Display metadata associated with the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft Resource Graph.'
              type: string
            resource:
              description: Resource on which the operation is performed etc.
              type: string
            operation:
              description: 'Type of operation: get, read, delete, etc.'
              type: string
            description:
              description: Description for the operation.
              type: string
        origin:
          type: string
          description: The origin of operations.
  parameters:
    ApiVersionParameter:
      name: api-version
      in: query
      description: Api Version.
      required: true
      schema:
        type: string
  x-stackQL-resources:
    history:
      id: azure.resource_graph.history
      name: history
      title: History
      methods:
        ResourcesHistory:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1resourcesHistory?api-version=2021-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    resources:
      id: azure.resource_graph.resources
      name: resources
      title: Resources
      methods:
        Resources:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1resources?api-version=2021-06-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: azure.resource_graph.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ResourceGraph~1operations?api-version=2021-06-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.ResourceGraph/resourcesHistory?api-version=2021-06-01-preview:
    x-api-version: 2021-06-01-preview
    post:
      description: List all snapshots of a resource for a given time interval.
      operationId: ResourcesHistory
      tags:
        - History
      requestBody:
        description: Request specifying the query and its options.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesHistoryRequest'
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        default:
          description: A response indicating an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: history
      x-stackQL-verb: exec
  /providers/Microsoft.ResourceGraph/resources?api-version=2021-06-01-preview:
    x-api-version: 2021-06-01-preview
    post:
      tags:
        - Resources
      operationId: Resources
      description: Queries the resources managed by Azure Resource Manager for scopes specified in the request.
      externalDocs:
        description: Learn more about the query syntax here
        url: https://aka.ms/resource-graph/learntoquery
      parameters: []
      requestBody:
        description: Request specifying query and its options.
        required: true
        x-ms-requestBody-name: query
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        '200':
          description: Result of the query operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        default:
          description: An error occurred while processing the request. See the error.code parameter to identify the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: resources
      x-stackQL-verb: exec
  /providers/Microsoft.ResourceGraph/operations?api-version=2021-06-01-preview:
    x-api-version: 2021-06-01-preview
    get:
      tags:
        - Operations
      description: Lists all of the available REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An error occurred while processing the request. See the error.code parameter to identify the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: operations
      x-stackQL-verb: select
