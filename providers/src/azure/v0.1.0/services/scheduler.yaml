openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: scheduler (Microsoft.Scheduler)
  description: scheduler
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-20-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    JobCollectionListResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/JobCollectionDefinition'
          description: Gets the job collections.
        nextLink:
          type: string
          description: Gets or sets the URL to get the next set of job collections.
    JobListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobDefinition'
          description: Gets or sets all jobs under job collection.
        nextLink:
          type: string
          description: Gets or sets the URL to get the next set of jobs.
    JobHistoryListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobHistoryDefinition'
          description: Gets or sets the job histories under job.
        nextLink:
          type: string
          description: Gets or sets the URL to get the next set of job histories.
    JobCollectionDefinition:
      properties:
        id:
          type: string
          readOnly: true
          description: Gets the job collection resource identifier.
        type:
          type: string
          readOnly: true
          description: Gets the job collection resource type.
        name:
          type: string
          description: Gets or sets the job collection resource name.
        location:
          type: string
          description: Gets or sets the storage account location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the tags.
        properties:
          $ref: '#/components/schemas/JobCollectionProperties'
          description: Gets or sets the job collection properties.
    JobCollectionProperties:
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU.
        state:
          type: string
          description: Gets or sets the state.
          enum:
            - Enabled
            - Disabled
            - Suspended
            - Deleted
          x-ms-enum:
            name: JobCollectionState
            modelAsString: false
        quota:
          $ref: '#/components/schemas/JobCollectionQuota'
          description: Gets or sets the job collection quota.
    Sku:
      properties:
        name:
          type: string
          description: Gets or set the SKU.
          enum:
            - Standard
            - Free
            - P10Premium
            - P20Premium
          x-ms-enum:
            name: SkuDefinition
            modelAsString: false
    JobCollectionQuota:
      properties:
        maxJobCount:
          type: integer
          description: Gets or set the maximum job count.
        maxJobOccurrence:
          type: integer
          description: Gets or sets the maximum job occurrence.
        maxRecurrence:
          $ref: '#/components/schemas/JobMaxRecurrence'
          description: Gets or set the maximum recurrence.
    JobDefinition:
      properties:
        id:
          type: string
          readOnly: true
          description: Gets the job resource identifier.
        type:
          type: string
          readOnly: true
          description: Gets the job resource type.
        name:
          type: string
          readOnly: true
          description: Gets the job resource name.
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: Gets or sets the job properties.
    JobProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: Gets or sets the job start time.
        action:
          $ref: '#/components/schemas/JobAction'
          description: Gets or sets the job action.
        recurrence:
          $ref: '#/components/schemas/JobRecurrence'
          description: Gets or sets the job recurrence.
        state:
          $ref: '#/components/schemas/JobState'
          description: Gets or set the job state.
        status:
          $ref: '#/components/schemas/JobStatus'
          readOnly: true
          description: Gets the job status.
    JobHistoryDefinition:
      properties:
        id:
          type: string
          readOnly: true
          description: Gets the job history identifier.
        type:
          type: string
          readOnly: true
          description: Gets the job history resource type.
        name:
          type: string
          readOnly: true
          description: Gets the job history name.
        properties:
          $ref: '#/components/schemas/JobHistoryDefinitionProperties'
          readOnly: true
          description: Gets or sets the job history properties.
    JobHistoryDefinitionProperties:
      properties:
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the start time for this job.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the end time for this job.
        expectedExecutionTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the expected execution time for this job.
        actionName:
          type: string
          readOnly: true
          description: Gets the job history action name.
          enum:
            - MainAction
            - ErrorAction
          x-ms-enum:
            name: JobHistoryActionName
            modelAsString: false
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          readOnly: true
          description: Gets the job history status.
        message:
          type: string
          readOnly: true
          description: Gets the message for the job history.
        retryCount:
          type: integer
          readOnly: true
          description: Gets the retry count for job.
        repeatCount:
          type: integer
          readOnly: true
          description: Gets the repeat count for the job.
    JobAction:
      properties:
        type:
          type: string
          description: Gets or sets the job action type.
          enum:
            - Http
            - Https
            - StorageQueue
            - ServiceBusQueue
            - ServiceBusTopic
          x-ms-enum:
            name: JobActionType
            modelAsString: false
        request:
          $ref: '#/components/schemas/HttpRequest'
          description: Gets or sets the http requests.
        queueMessage:
          $ref: '#/components/schemas/StorageQueueMessage'
          description: Gets or sets the storage queue message.
        serviceBusQueueMessage:
          $ref: '#/components/schemas/ServiceBusQueueMessage'
          description: Gets or sets the service bus queue message.
        serviceBusTopicMessage:
          $ref: '#/components/schemas/ServiceBusTopicMessage'
          description: Gets or sets the service bus topic message.
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: Gets or sets the retry policy.
        errorAction:
          $ref: '#/components/schemas/JobErrorAction'
          description: Gets or sets the error action.
    JobErrorAction:
      properties:
        type:
          type: string
          description: Gets or sets the job error action type.
          enum:
            - Http
            - Https
            - StorageQueue
            - ServiceBusQueue
            - ServiceBusTopic
          x-ms-enum:
            name: JobActionType
            modelAsString: false
        request:
          $ref: '#/components/schemas/HttpRequest'
          description: Gets or sets the http requests.
        queueMessage:
          $ref: '#/components/schemas/StorageQueueMessage'
          description: Gets or sets the storage queue message.
        serviceBusQueueMessage:
          $ref: '#/components/schemas/ServiceBusQueueMessage'
          description: Gets or sets the service bus queue message.
        serviceBusTopicMessage:
          $ref: '#/components/schemas/ServiceBusTopicMessage'
          description: Gets or sets the service bus topic message.
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: Gets or sets the retry policy.
    HttpRequest:
      properties:
        authentication:
          $ref: '#/components/schemas/HttpAuthentication'
          description: Gets or sets the authentication method of the request.
        uri:
          type: string
          description: Gets or sets the URI of the request.
        method:
          type: string
          description: Gets or sets the method of the request.
        body:
          type: string
          description: Gets or sets the request body.
        headers:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the headers.
    ClientCertAuthentication:
      x-ms-discriminator-value: ClientCertificate
      properties:
        password:
          type: string
          description: Gets or sets the certificate password, return value will always be empty.
        pfx:
          type: string
          description: Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty.
        certificateThumbprint:
          type: string
          description: Gets or sets the certificate thumbprint.
        certificateExpirationDate:
          type: string
          format: date-time
          description: Gets or sets the certificate expiration date.
        certificateSubjectName:
          type: string
          description: Gets or sets the certificate subject name.
      allOf:
        - $ref: '#/components/schemas/HttpAuthentication'
    BasicAuthentication:
      x-ms-discriminator-value: Basic
      properties:
        username:
          type: string
          description: Gets or sets the username.
        password:
          type: string
          description: Gets or sets the password, return value will always be empty.
      allOf:
        - $ref: '#/components/schemas/HttpAuthentication'
    OAuthAuthentication:
      x-ms-discriminator-value: ActiveDirectoryOAuth
      properties:
        secret:
          type: string
          description: Gets or sets the secret, return value will always be empty.
        tenant:
          type: string
          description: Gets or sets the tenant.
        audience:
          type: string
          description: Gets or sets the audience.
        clientId:
          type: string
          description: Gets or sets the client identifier.
      allOf:
        - $ref: '#/components/schemas/HttpAuthentication'
    HttpAuthentication:
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          description: Gets or sets the HTTP authentication type.
          enum:
            - NotSpecified
            - ClientCertificate
            - ActiveDirectoryOAuth
            - Basic
          x-ms-enum:
            name: HttpAuthenticationType
            modelAsString: false
    StorageQueueMessage:
      properties:
        storageAccount:
          type: string
          description: Gets or sets the storage account name.
        queueName:
          type: string
          description: Gets or sets the queue name.
        sasToken:
          type: string
          description: Gets or sets the SAS key.
        message:
          type: string
          description: Gets or sets the message.
    ServiceBusQueueMessage:
      properties:
        queueName:
          type: string
          description: Gets or sets the queue name.
      allOf:
        - $ref: '#/components/schemas/ServiceBusMessage'
    ServiceBusTopicMessage:
      properties:
        topicPath:
          type: string
          description: Gets or sets the topic path.
      allOf:
        - $ref: '#/components/schemas/ServiceBusMessage'
    ServiceBusMessage:
      properties:
        authentication:
          $ref: '#/components/schemas/ServiceBusAuthentication'
          description: Gets or sets the Service Bus authentication.
        brokeredMessageProperties:
          $ref: '#/components/schemas/ServiceBusBrokeredMessageProperties'
          description: Gets or sets the brokered message properties.
        customMessageProperties:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets the custom message properties.
        message:
          type: string
          description: Gets or sets the message.
        namespace:
          type: string
          description: Gets or sets the namespace.
        transportType:
          type: string
          description: Gets or sets the transport type.
          enum:
            - NotSpecified
            - NetMessaging
            - AMQP
          x-ms-enum:
            name: ServiceBusTransportType
            modelAsString: false
    ServiceBusAuthentication:
      properties:
        sasKey:
          type: string
          description: Gets or sets the SAS key.
        sasKeyName:
          type: string
          description: Gets or sets the SAS key name.
        type:
          type: string
          description: Gets or sets the authentication type.
          enum:
            - NotSpecified
            - SharedAccessKey
          x-ms-enum:
            name: ServiceBusAuthenticationType
            modelAsString: false
    ServiceBusBrokeredMessageProperties:
      properties:
        contentType:
          type: string
          description: Gets or sets the content type.
        correlationId:
          type: string
          description: Gets or sets the correlation ID.
        forcePersistence:
          type: boolean
          description: Gets or sets the force persistence.
        label:
          type: string
          description: Gets or sets the label.
        messageId:
          type: string
          description: Gets or sets the message ID.
        partitionKey:
          type: string
          description: Gets or sets the partition key.
        replyTo:
          type: string
          description: Gets or sets the reply to.
        replyToSessionId:
          type: string
          description: Gets or sets the reply to session ID.
        scheduledEnqueueTimeUtc:
          type: string
          format: date-time
          description: Gets or sets the scheduled enqueue time UTC.
        sessionId:
          type: string
          description: Gets or sets the session ID.
        timeToLive:
          type: string
          format: duration
          description: Gets or sets the time to live.
        to:
          type: string
          description: Gets or sets the to.
        viaPartitionKey:
          type: string
          description: Gets or sets the via partition key.
    RetryPolicy:
      properties:
        retryType:
          type: string
          description: Gets or sets the retry strategy to be used.
          enum:
            - None
            - Fixed
          x-ms-enum:
            name: RetryType
            modelAsString: false
        retryInterval:
          type: string
          format: duration
          description: Gets or sets the retry interval between retries, specify duration in ISO 8601 format.
        retryCount:
          type: integer
          description: Gets or sets the number of times a retry should be attempted.
    JobMaxRecurrence:
      properties:
        frequency:
          type: string
          description: Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
          enum:
            - Minute
            - Hour
            - Day
            - Week
            - Month
          x-ms-enum:
            name: RecurrenceFrequency
            modelAsString: false
        interval:
          type: integer
          description: Gets or sets the interval between retries.
    JobRecurrence:
      properties:
        frequency:
          type: string
          description: Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).
          enum:
            - Minute
            - Hour
            - Day
            - Week
            - Month
          x-ms-enum:
            name: RecurrenceFrequency
            modelAsString: false
        interval:
          type: integer
          description: Gets or sets the interval between retries.
        count:
          type: integer
          description: Gets or sets the maximum number of times that the job should run.
        endTime:
          type: string
          format: date-time
          description: Gets or sets the time at which the job will complete.
        schedule:
          $ref: '#/components/schemas/JobRecurrenceSchedule'
    RecurrenceFrequency:
      type: string
      description: Gets or sets the frequency of recurrence (minute, hour, day, week, month).
      enum:
        - Minute
        - Hour
        - Day
        - Week
        - Month
      x-ms-enum:
        name: RecurrenceFrequency
        modelAsString: false
    JobRecurrenceSchedule:
      properties:
        weekDays:
          type: array
          items:
            type: string
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            x-ms-enum:
              name: DayOfWeek
              modelAsString: false
          description: Gets or sets the days of the week that the job should execute on.
        hours:
          type: array
          items:
            type: integer
          description: Gets or sets the hours of the day that the job should execute at.
        minutes:
          type: array
          items:
            type: integer
          description: Gets or sets the minutes of the hour that the job should execute at.
        monthDays:
          type: array
          items:
            type: integer
          description: Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.
        monthlyOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/JobRecurrenceScheduleMonthlyOccurrence'
          description: Gets or sets the occurrences of days within a month.
    JobRecurrenceScheduleMonthlyOccurrence:
      properties:
        day:
          type: string
          description: Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          x-ms-enum:
            name: JobScheduleDay
            modelAsString: false
        Occurrence:
          type: integer
          description: Gets or sets the occurrence. Must be between -5 and 5.
    JobStateFilter:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/JobState'
          description: Gets or sets the job state.
    JobState:
      type: string
      description: Gets or set the job state.
      enum:
        - Enabled
        - Disabled
        - Faulted
        - Completed
      x-ms-enum:
        name: JobState
        modelAsString: false
    JobHistoryFilter:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: Gets or sets the job execution status.
    JobExecutionStatus:
      type: string
      description: Gets the job execution status.
      enum:
        - Completed
        - Failed
        - Postponed
      x-ms-enum:
        name: JobExecutionStatus
        modelAsString: false
    JobStatus:
      properties:
        executionCount:
          type: integer
          readOnly: true
          description: Gets the number of times this job has executed.
        failureCount:
          type: integer
          readOnly: true
          description: Gets the number of times this job has failed.
        faultedCount:
          type: integer
          readOnly: true
          description: Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states).
        lastExecutionTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet.
        nextExecutionTime:
          type: string
          format: date-time
          readOnly: true
          description: Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed.
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription id.
      required: true
      schema:
        type: string
    apiVersion:
      name: api-version
      in: query
      description: The API version.
      required: true
      schema:
        type: string
  x-stackQL-resources:
    job_collections:
      id: azure.scheduler.job_collections
      name: job_collections
      title: Job_collections
      methods:
        JobCollections_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Scheduler~1jobCollections?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobCollections_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobCollections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobCollections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}?api-version=2016-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        JobCollections_Patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}?api-version=2016-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobCollections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}?api-version=2016-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        JobCollections_Enable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1enable?api-version=2016-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        JobCollections_Disable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1disable?api-version=2016-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_collections/methods/JobCollections_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/job_collections/methods/JobCollections_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/job_collections/methods/JobCollections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/job_collections/methods/JobCollections_Delete'
    jobs:
      id: azure.scheduler.jobs
      name: jobs
      title: Jobs
      methods:
        Jobs_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1jobs~1{jobName}?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Jobs_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1jobs~1{jobName}?api-version=2016-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        Jobs_Patch:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1jobs~1{jobName}?api-version=2016-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Jobs_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1jobs~1{jobName}?api-version=2016-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Jobs_Run:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1jobs~1{jobName}~1run?api-version=2016-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Jobs_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1jobs?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Jobs_ListJobHistory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Scheduler~1jobCollections~1{jobCollectionName}~1jobs~1{jobName}~1history?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/Jobs_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/Jobs_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/Jobs_Delete'
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Scheduler/jobCollections?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - JobCollections
      operationId: JobCollections_ListBySubscription
      description: Gets all job collections under specified subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job collections have been successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: job_collections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - JobCollections
      operationId: JobCollections_ListByResourceGroup
      description: Gets all job collections under specified resource group.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job collections have been successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: job_collections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - JobCollections
      operationId: JobCollections_Get
      description: Gets a job collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job collection has been successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
      x-stackQL-resource: job_collections
      x-stackQL-verb: exec
    put:
      tags:
        - JobCollections
      operationId: JobCollections_CreateOrUpdate
      description: Provisions a new job collection or updates an existing job collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The job collection definition.
        required: true
        x-ms-requestBody-name: jobCollection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
      responses:
        '200':
          description: The job collection has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
        '201':
          description: The job collection has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
      x-stackQL-resource: job_collections
      x-stackQL-verb: insert
    patch:
      tags:
        - JobCollections
      operationId: JobCollections_Patch
      description: Patches an existing job collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The job collection definition.
        required: true
        x-ms-requestBody-name: jobCollection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
      responses:
        '200':
          description: The job collection has been successfully patched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
      x-stackQL-resource: job_collections
      x-stackQL-verb: exec
    delete:
      tags:
        - JobCollections
      operationId: JobCollections_Delete
      description: Deletes a job collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job collection has been successfully deleted.
        '202':
          description: The delete operation for the job collection has been accepted and will complete asynchronously.
      x-ms-long-running-operation: true
      x-stackQL-resource: job_collections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/enable?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    post:
      tags:
        - JobCollections
      operationId: JobCollections_Enable
      description: Enables all of the jobs in the job collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: All of the jobs in the job collection have been successfully enabled.
        '202':
          description: Accepted and the enable job collection operation will complete asynchronously.
      x-ms-long-running-operation: true
      x-stackQL-resource: job_collections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/disable?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    post:
      tags:
        - JobCollections
      operationId: JobCollections_Disable
      description: Disables all of the jobs in the job collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: All of the jobs in the job collection have been successfully disabled.
        '202':
          description: Accepted and the disable job collection operation will complete asynchronously.
      x-ms-long-running-operation: true
      x-stackQL-resource: job_collections
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - Jobs
      operationId: Jobs_Get
      description: Gets a job.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job has been successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
    put:
      tags:
        - Jobs
      operationId: Jobs_CreateOrUpdate
      description: Provisions a new job or updates an existing job.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The job definition.
        required: true
        x-ms-requestBody-name: job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
      responses:
        '200':
          description: The job has been successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        '201':
          description: The job has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
      x-stackQL-resource: jobs
      x-stackQL-verb: insert
    patch:
      tags:
        - Jobs
      operationId: Jobs_Patch
      description: Patches an existing job.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      requestBody:
        description: The job definition.
        required: true
        x-ms-requestBody-name: job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
      responses:
        '200':
          description: The job has been successfully patched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
    delete:
      tags:
        - Jobs
      operationId: Jobs_Delete
      description: Deletes a job.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job has been successfully deleted.
      x-stackQL-resource: jobs
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/run?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    post:
      tags:
        - Jobs
      operationId: Jobs_Run
      description: Runs a job.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job has been successfully run.
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - Jobs
      operationId: Jobs_List
      description: Lists all jobs under the specified job collection.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
        - name: $top
          in: query
          description: The number of jobs to request, in the of range of [1..100].
          required: false
          schema:
            minimum: 1
            maximum: 100
            type: integer
        - name: $skip
          in: query
          description: The (0-based) index of the job history list from which to begin requesting entries.
          required: false
          schema:
            type: integer
        - name: $filter
          in: query
          description: The filter to apply on the job state.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The job has been successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/JobStateFilter'
      x-stackQL-resource: jobs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/history?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - Jobs
      operationId: Jobs_ListJobHistory
      description: Lists job history.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: resourceGroupName
          in: path
          description: The resource group name.
          required: true
          schema:
            type: string
        - name: jobCollectionName
          in: path
          description: The job collection name.
          required: true
          schema:
            type: string
        - name: jobName
          in: path
          description: The job name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
        - name: $top
          in: query
          description: the number of job history to request, in the of range of [1..100].
          required: false
          schema:
            minimum: 1
            maximum: 100
            type: integer
        - name: $skip
          in: query
          description: The (0-based) index of the job history list from which to begin requesting entries.
          required: false
          schema:
            type: integer
        - name: $filter
          in: query
          description: The filter to apply on the job state.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The job histories have been successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobHistoryListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobHistoryListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/JobHistoryFilter'
      x-stackQL-resource: jobs
      x-stackQL-verb: exec
