openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: postgresql_hsc (Microsoft.DBForPostgreSql)
  description: postgresql_hsc
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-20-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: REST API operation definition.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the operation being performed on this particular object.
        display:
          $ref: '#/components/schemas/OperationDisplay'
          readOnly: true
          description: The localized display information for this particular operation or action.
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        origin:
          type: string
          readOnly: true
          description: The intended executor of the operation.
          enum:
            - NotSpecified
            - user
            - system
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
        properties:
          type: object
          additionalProperties:
            type: object
          readOnly: true
          x-ms-client-flatten: false
          description: Additional descriptions for the operation.
    OperationListResult:
      description: A list of resource provider operations.
      type: object
      properties:
        value:
          description: Collection of available operation details
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    PostgreSQLVersion:
      type: string
      description: The PostgreSQL version.
      enum:
        - '11'
        - '12'
      x-ms-enum:
        name: PostgreSQLVersion
        modelAsString: true
    CitusVersion:
      type: string
      description: The Citus version.
      enum:
        - '8.3'
        - '9.0'
        - '9.1'
        - '9.2'
        - '9.3'
        - '9.4'
        - '9.5'
      x-ms-enum:
        name: CitusVersion
        modelAsString: true
    ServerState:
      type: string
      description: A state of a server group/server that is visible to user.
      enum:
        - Ready
        - Dropping
        - Disabled
        - Starting
        - Stopping
        - Stopped
        - Updating
        - Provisioning
      x-ms-enum:
        name: ServerState
        modelAsString: true
      readOnly: true
    ServerHaState:
      type: string
      description: A state of a server role group/server that is visible to user for HA feature.
      enum:
        - NotEnabled
        - CreatingStandby
        - ReplicatingData
        - FailingOver
        - Healthy
        - RemovingStandby
        - NotSync
      x-ms-enum:
        name: ServerHaState
        modelAsString: true
      readOnly: true
    ServerRole:
      type: string
      description: The role of a server.
      enum:
        - Coordinator
        - Worker
      x-ms-enum:
        name: ServerRole
        modelAsString: true
    FullyQualifiedDomainName:
      type: string
      description: The fully qualified domain name of a server.
      readOnly: true
    ServerProperties:
      description: The properties of a server.
      properties:
        serverEdition:
          type: string
          description: 'The edition of a server (default: GeneralPurpose).'
          enum:
            - GeneralPurpose
            - MemoryOptimized
          x-ms-enum:
            name: ServerEdition
            modelAsString: true
        storageQuotaInMb:
          type: integer
          format: int64
          description: 'The storage of a server in MB (max: 2097152 = 2TiB).'
        vCores:
          type: integer
          format: int64
          description: 'The vCores count of a server (max: 64).'
        enableHa:
          type: boolean
          description: If high availability is enabled or not for the server.
        enablePublicIp:
          type: boolean
          description: If public IP is requested or not for a server.
          readOnly: true
    ServerRoleGroupList:
      type: array
      description: The list of server role groups.
      items:
        $ref: '#/components/schemas/ServerRoleGroup'
      x-ms-identifiers:
        - name
      minItems: 1
      maxItems: 2
      uniqueItems: true
    ServerRoleGroup:
      description: Represents a server role group.
      allOf:
        - $ref: '#/components/schemas/ServerProperties'
      properties:
        name:
          type: string
          description: The name of the server role group.
        role:
          $ref: '#/components/schemas/ServerRole'
          description: The role of servers in the server role group.
        serverCount:
          type: integer
          format: int32
          description: The number of servers in the server role group.
        serverNames:
          type: array
          description: The list of server names in the server role group.
          items:
            $ref: '#/components/schemas/ServerNameItem'
          x-ms-identifiers:
            - name
          readOnly: true
          uniqueItems: true
    ServerNameItem:
      description: The name object for a server.
      properties:
        name:
          type: string
          description: The name of a server.
        fullyQualifiedDomainName:
          $ref: '#/components/schemas/FullyQualifiedDomainName'
          description: The fully qualified domain name of a server.
    ServerGroupServerProperties:
      description: The properties of a server in server group.
      allOf:
        - $ref: '#/components/schemas/ServerProperties'
      properties:
        fullyQualifiedDomainName:
          $ref: '#/components/schemas/FullyQualifiedDomainName'
          description: The fully qualified domain name of a server.
        role:
          $ref: '#/components/schemas/ServerRole'
          description: The role of server in the server group.
        state:
          $ref: '#/components/schemas/ServerState'
          description: A state of a server that is visible to user.
        haState:
          $ref: '#/components/schemas/ServerHaState'
          description: A state of a server group that is visible to user for HA feature.
        administratorLogin:
          type: string
          description: The administrator's login name of a servers in server group.
        postgresqlVersion:
          $ref: '#/components/schemas/PostgreSQLVersion'
          description: The PostgreSQL version of server.
        citusVersion:
          $ref: '#/components/schemas/CitusVersion'
          description: The Citus version of server.
        availabilityZone:
          type: string
          description: Availability Zone information of the server group.
        standbyAvailabilityZone:
          type: string
          description: Standby Availability Zone information of the server group.
    ServerGroupServer:
      description: Represents a server in a server group.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        systemData:
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/ServerGroupServerProperties'
          description: The properties of a server in a server group.
          x-ms-client-flatten: true
    ServerGroupServerListResult:
      description: A list of servers in a server group.
      properties:
        value:
          type: array
          description: The list of servers in a server group.
          items:
            $ref: '#/components/schemas/ServerGroupServer'
    ServerGroupForUpdate:
      description: Represents a server group for update.
      properties:
        location:
          type: string
          description: The location the resource resides in.
        properties:
          $ref: '#/components/schemas/ServerGroupPropertiesForUpdate'
          x-ms-client-flatten: true
          description: Properties of the server group.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
    ServerGroupPropertiesForUpdate:
      description: The properties used to update a server group.
      properties:
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
          description: The password of the administrator login.
        backupRetentionDays:
          type: integer
          format: int32
          description: The backup retention days for server group.
        postgresqlVersion:
          $ref: '#/components/schemas/PostgreSQLVersion'
          description: The PostgreSQL version of server group.
        citusVersion:
          $ref: '#/components/schemas/CitusVersion'
          description: The Citus version of server group.
        enableShardsOnCoordinator:
          type: boolean
          description: If shards on coordinator is enabled or not for the server group.
        serverRoleGroups:
          $ref: '#/components/schemas/ServerRoleGroupList'
          description: The list of server role groups.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: Maintenance window of a server group.
        availabilityZone:
          type: string
          description: Availability Zone information of the server group.
        standbyAvailabilityZone:
          type: string
          description: Standby Availability Zone information of the server group.
    ServerGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServerGroup'
          description: The list of server groups
        nextLink:
          description: The link used to get the next page of operations.
          type: string
          readOnly: true
      description: A list of server groups.
    ServerGroup:
      description: Represents a server group for create.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        systemData:
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/ServerGroupProperties'
          x-ms-client-flatten: true
          description: Properties of the server group create.
    ServerGroupProperties:
      description: The properties used to create a new server group.
      properties:
        createMode:
          type: string
          description: The mode to create a new server group.
          enum:
            - Default
            - PointInTimeRestore
            - ReadReplica
          x-ms-enum:
            name: CreateMode
            modelAsString: true
          x-ms-mutability:
            - create
        administratorLogin:
          type: string
          description: The administrator's login name of servers in server group. Can only be specified when the server is being created (and is required for creation).
          x-ms-mutability:
            - create
            - read
        administratorLoginPassword:
          type: string
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
          description: The password of the administrator login.
        backupRetentionDays:
          type: integer
          format: int32
          description: The backup retention days for server group.
        postgresqlVersion:
          $ref: '#/components/schemas/PostgreSQLVersion'
          description: The PostgreSQL version of server group.
        citusVersion:
          $ref: '#/components/schemas/CitusVersion'
          description: The Citus version of server group.
        enableMx:
          type: boolean
          description: If Citus MX is enabled or not for the server group.
          x-ms-mutability:
            - create
            - read
        enableZfs:
          type: boolean
          description: If ZFS compression is enabled or not for the server group.
          x-ms-mutability:
            - create
            - read
        enableShardsOnCoordinator:
          type: boolean
          description: If shards on coordinator is enabled or not for the server group.
        state:
          $ref: '#/components/schemas/ServerState'
          description: A state of a server group that is visible to user.
        earliestRestoreTime:
          type: string
          format: date-time
          description: The earliest restore point time (ISO8601 format) for server group.
          readOnly: true
        resourceProviderType:
          type: string
          description: The resource provider type of server group.
          enum:
            - Meru
            - Marlin
          x-ms-enum:
            name: ResourceProviderType
            modelAsString: true
          readOnly: true
        serverRoleGroups:
          $ref: '#/components/schemas/ServerRoleGroupList'
          description: The list of server role groups.
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow'
          description: Maintenance window of a server group.
        availabilityZone:
          type: string
          description: Availability Zone information of the server group.
        standbyAvailabilityZone:
          type: string
          description: Standby Availability Zone information of the server group.
        delegatedSubnetArguments:
          description: The delegated subnet arguments for a server group.
          properties:
            subnetArmResourceId:
              type: string
              description: delegated subnet arm resource id.
        privateDnsZoneArguments:
          description: The private dns zone arguments for a server group.
          properties:
            privateDnsZoneArmResourceId:
              type: string
              description: private dns zone arm resource id.
        readReplicas:
          type: array
          description: The array of read replica server groups.
          items:
            type: string
          readOnly: true
          uniqueItems: true
        sourceServerGroup:
          type: string
          description: The source server group id for read replica server groups.
          readOnly: true
        sourceSubscriptionId:
          type: string
          description: The source subscription id to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'ReadReplica'
          x-ms-mutability:
            - create
        sourceResourceGroupName:
          type: string
          description: The source resource group name to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'ReadReplica'
          x-ms-mutability:
            - create
        sourceServerGroupName:
          type: string
          description: The source server group name to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'ReadReplica'
          x-ms-mutability:
            - create
        sourceLocation:
          type: string
          description: The source server group location to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'ReadReplica'
          x-ms-mutability:
            - create
        pointInTimeUTC:
          type: string
          format: date-time
          description: Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore'
          x-ms-mutability:
            - create
    MaintenanceWindow:
      type: object
      description: Maintenance window of a server group.
      properties:
        customWindow:
          type: string
          description: indicates whether custom window is enabled or disabled
        startHour:
          type: integer
          format: int32
          description: start hour for maintenance window
        startMinute:
          type: integer
          format: int32
          description: start minute for maintenance window
        dayOfWeek:
          type: integer
          format: int32
          description: day of week for maintenance window
    ServerGroupConfiguration:
      description: Represents the configuration list of server role groups in a server group.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        systemData:
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/ServerGroupConfigurationProperties'
          description: The properties of server group configuration.
          x-ms-client-flatten: true
    ServerGroupConfigurationProperties:
      description: The properties of server group configuration.
      properties:
        description:
          type: string
          description: Description of the configuration.
          readOnly: true
        dataType:
          type: string
          description: Data type of the configuration.
          enum:
            - Boolean
            - Numeric
            - Integer
            - Enumeration
          x-ms-enum:
            name: ConfigurationDataType
            modelAsString: true
          readOnly: true
        allowedValues:
          type: string
          description: Allowed values of the configuration.
          readOnly: true
        serverRoleGroupConfigurations:
          type: array
          description: The list of server role group configuration values.
          items:
            $ref: '#/components/schemas/ServerRoleGroupConfiguration'
          x-ms-identifiers: []
          uniqueItems: true
      required:
        - serverRoleGroupConfigurations
    ServerRoleGroupConfiguration:
      description: Represents server role group configuration value.
      properties:
        role:
          $ref: '#/components/schemas/ServerRole'
          description: The role of servers in the server role group.
        value:
          type: string
          description: Value of the configuration.
        defaultValue:
          type: string
          description: Default value of the configuration.
          readOnly: true
        source:
          type: string
          description: Source of the configuration.
          readOnly: true
      required:
        - role
        - value
    ServerGroupConfigurationListResult:
      description: A list of server group configurations.
      properties:
        value:
          type: array
          description: The list of server group configurations.
          items:
            $ref: '#/components/schemas/ServerGroupConfiguration'
        nextLink:
          type: string
          description: Link to retrieve next page of results.
          readOnly: true
    ServerConfigurationProperties:
      description: The properties of a configuration.
      properties:
        value:
          type: string
          description: Value of the configuration.
        source:
          type: string
          description: Source of the configuration.
          readOnly: true
        description:
          type: string
          description: Description of the configuration.
          readOnly: true
        defaultValue:
          type: string
          description: Default value of the configuration.
          readOnly: true
        dataType:
          type: string
          description: Data type of the configuration.
          enum:
            - Boolean
            - Numeric
            - Integer
            - Enumeration
          x-ms-enum:
            name: ConfigurationDataType
            modelAsString: true
          readOnly: true
        allowedValues:
          type: string
          description: Allowed values of the configuration.
          readOnly: true
      required:
        - value
    ServerConfiguration:
      description: Represents a configuration.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        systemData:
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/ServerConfigurationProperties'
          description: The properties of a configuration.
          x-ms-client-flatten: true
    ServerConfigurationListResult:
      description: A list of server configurations.
      properties:
        value:
          type: array
          description: The list of server configurations.
          items:
            $ref: '#/components/schemas/ServerConfiguration'
        nextLink:
          type: string
          description: Link to retrieve next page of results.
          readOnly: true
    FirewallRuleProperties:
      description: The properties of a server group firewall rule.
      properties:
        startIpAddress:
          type: string
          description: The start IP address of the server group firewall rule. Must be IPv4 format.
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
        endIpAddress:
          type: string
          description: The end IP address of the server group firewall rule. Must be IPv4 format.
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
      required:
        - startIpAddress
        - endIpAddress
    FirewallRule:
      description: Represents a server group firewall rule.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        systemData:
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          x-ms-client-flatten: true
          description: The properties of a firewall rule.
      required:
        - properties
    FirewallRuleListResult:
      description: A list of firewall rules.
      properties:
        value:
          type: array
          description: The list of firewall rules in a server group.
          items:
            $ref: '#/components/schemas/FirewallRule'
    RoleProperties:
      properties:
        password:
          type: string
          x-ms-secret: true
          format: password
          x-ms-mutability:
            - create
            - update
          description: The password of the server group role.
      required:
        - password
      description: The properties of a server group role.
    Role:
      properties:
        systemData:
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/RoleProperties'
          x-ms-client-flatten: true
          description: The properties of a role.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Represents a server group role.
    RoleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: The list of roles in a server group.
      description: A list of roles.
    OperationDisplay:
      description: Display metadata associated with the operation.
      properties:
        provider:
          type: string
          description: Operation resource provider name.
          readOnly: true
        resource:
          type: string
          description: Resource on which the operation is performed.
          readOnly: true
        operation:
          type: string
          description: Localized friendly name for the operation.
          readOnly: true
        description:
          type: string
          description: Operation description.
          readOnly: true
    NameAvailabilityRequest:
      description: Request from client to check resource name availability.
      properties:
        name:
          type: string
          description: Resource name to verify.
        type:
          type: string
          enum:
            - Microsoft.DBforPostgreSQL/serverGroupsv2
          description: Resource type used for verification.
          x-ms-enum:
            name: CheckNameAvailabilityResourceType
            modelAsString: false
      required:
        - name
        - type
    NameAvailability:
      description: Represents a resource name availability.
      properties:
        message:
          type: string
          description: Error Message.
        nameAvailable:
          type: boolean
          description: Indicates whether the resource name is available.
        name:
          type: string
          description: name of the PostgreSQL server.
        type:
          type: string
          description: type of the server
    CloudError:
      x-ms-external: true
      description: An error response from the Batch service.
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: The error.
    CloudErrorBody:
      x-ms-external: true
      description: An error response from the Batch service.
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          description: A list of additional details about the error.
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers:
            - code
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ServerGroupNameParameter:
      name: serverGroupName
      in: path
      description: The name of the server group.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ServerNameParameter:
      name: serverName
      in: path
      description: The name of the server.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: The name of the server group configuration.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    FirewallRuleNameParameter:
      name: firewallRuleName
      in: path
      description: The name of the server group firewall rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RoleNameParameter:
      name: roleName
      in: path
      description: The name of the server group role name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  x-stackQL-resources:
    server_groups:
      id: azure.postgresql_hsc.server_groups
      name: server_groups
      title: Server_groups
      methods:
        ServerGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ServerGroups_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ServerGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}?api-version=2020-10-05-privatepreview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ServerGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ServerGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}?api-version=2020-10-05-privatepreview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ServerGroups_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}?api-version=2020-10-05-privatepreview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ServerGroups_Restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1restart?api-version=2020-10-05-privatepreview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ServerGroups_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1start?api-version=2020-10-05-privatepreview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ServerGroups_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1stop?api-version=2020-10-05-privatepreview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ServerGroups_CheckNameAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DBForPostgreSql~1checkNameAvailability?api-version=2020-10-05-privatepreview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_groups/methods/ServerGroups_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/server_groups/methods/ServerGroups_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/server_groups/methods/ServerGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/server_groups/methods/ServerGroups_Delete'
    servers:
      id: azure.postgresql_hsc.servers
      name: servers
      title: Servers
      methods:
        Servers_ListByServerGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1servers?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Servers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1servers~1{serverName}?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers/methods/Servers_ListByServerGroup'
        insert: []
        update: []
        delete: []
    configurations:
      id: azure.postgresql_hsc.configurations
      name: configurations
      title: Configurations
      methods:
        Configurations_ListByServer:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1servers~1{serverName}~1configurations?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Configurations_ListByServerGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1configurations?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Configurations_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1configurations~1{configurationName}?api-version=2020-10-05-privatepreview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Configurations_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1configurations~1{configurationName}?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/Configurations_ListByServer'
          - $ref: '#/components/x-stackQL-resources/configurations/methods/Configurations_ListByServerGroup'
        insert: []
        update: []
        delete: []
    firewall_rules:
      id: azure.postgresql_hsc.firewall_rules
      name: firewall_rules
      title: Firewall_rules
      methods:
        FirewallRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1firewallRules~1{firewallRuleName}?api-version=2020-10-05-privatepreview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        FirewallRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1firewallRules~1{firewallRuleName}?api-version=2020-10-05-privatepreview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        FirewallRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1firewallRules~1{firewallRuleName}?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        FirewallRules_ListByServerGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1firewallRules?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_ListByServerGroup'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_Delete'
    roles:
      id: azure.postgresql_hsc.roles
      name: roles
      title: Roles
      methods:
        Roles_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1roles~1{roleName}?api-version=2020-10-05-privatepreview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Roles_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1roles~1{roleName}?api-version=2020-10-05-privatepreview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Roles_ListByServerGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DBForPostgreSql~1serverGroupsv2~1{serverGroupName}~1roles?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/Roles_ListByServerGroup'
        insert:
          - $ref: '#/components/x-stackQL-resources/roles/methods/Roles_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/roles/methods/Roles_Delete'
    operations:
      id: azure.postgresql_hsc.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DBForPostgreSql~1operations?api-version=2020-10-05-privatepreview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DBForPostgreSql/serverGroupsv2?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      tags:
        - ServerGroups
      operationId: ServerGroups_List
      description: List all the server groups in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: server_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      tags:
        - ServerGroups
      operationId: ServerGroups_ListByResourceGroup
      description: List all the server groups in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: server_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    put:
      description: Creates a new server group with servers.
      tags:
        - ServerGroups
      operationId: ServerGroups_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      requestBody:
        description: The required parameters for creating or updating a server group.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: insert
    get:
      description: Gets information about a server group.
      tags:
        - ServerGroups
      operationId: ServerGroups_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: exec
    delete:
      description: Deletes a server group together with servers in it.
      tags:
        - ServerGroups
      operationId: ServerGroups_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: delete
    patch:
      description: Updates an existing server group. The request body can contain one to many of the properties present in the normal server group definition.
      tags:
        - ServerGroups
      operationId: ServerGroups_Update
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      requestBody:
        description: The parameters for updating a server group.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGroupForUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/servers?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      description: Lists servers of a server group.
      tags:
        - Servers
      operationId: Servers_ListByServerGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroupServerListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: servers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/servers/{serverName}?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      description: Gets information about a server in server group.
      tags:
        - Servers
      operationId: Servers_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroupServer'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: servers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/servers/{serverName}/configurations?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      description: List all the configurations of a server in server group.
      tags:
        - Configurations
      operationId: Configurations_ListByServer
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/configurations?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      description: List all the configurations of a server group.
      tags:
        - Configurations
      operationId: Configurations_ListByServerGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroupConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configurations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/configurations/{configurationName}?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    patch:
      description: Updates configuration of server role groups in a server group
      tags:
        - Configurations
      operationId: Configurations_Update
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: The required parameters for updating a server group configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGroupConfiguration'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroupConfiguration'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: configurations
      x-stackQL-verb: exec
    get:
      description: Gets information about single server group configuration.
      tags:
        - Configurations
      operationId: Configurations_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroupConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: configurations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/firewallRules/{firewallRuleName}?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    put:
      description: Creates a new firewall rule or updates an existing firewall rule.
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: insert
    delete:
      description: Deletes a server group firewall rule.
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: delete
    get:
      description: Gets information about a server group firewall rule.
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/FirewallRuleNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/firewallRules?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      description: List all the firewall rules in a given server group.
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByServerGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: firewall_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/roles/{roleName}?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    put:
      tags:
        - Roles
      operationId: Roles_Create
      x-ms-long-running-operation: true
      description: Creates a new role or updates an existing role.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/RoleNameParameter'
      requestBody:
        description: The required parameters for creating or updating a role.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: roles
      x-stackQL-verb: insert
    delete:
      tags:
        - Roles
      operationId: Roles_Delete
      x-ms-long-running-operation: true
      description: Deletes a server group role.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
        - $ref: '#/components/parameters/RoleNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: roles
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/roles?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      tags:
        - Roles
      operationId: Roles_ListByServerGroup
      description: List all the roles in a given server group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: roles
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/restart?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    post:
      description: Restarts the server group.
      tags:
        - ServerGroupOperations
      operationId: ServerGroups_Restart
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/start?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    post:
      description: Starts the server group.
      tags:
        - ServerGroupOperations
      operationId: ServerGroups_Start
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{serverGroupName}/stop?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    post:
      description: Stops the server group.
      tags:
        - ServerGroupOperations
      operationId: ServerGroups_Stop
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ServerGroupNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DBForPostgreSql/checkNameAvailability?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    post:
      description: Check the availability of name for resource
      tags:
        - ServerGroups
      operationId: ServerGroups_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The required parameters for checking if resource name is available.
        required: true
        x-ms-requestBody-name: nameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailability'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: server_groups
      x-stackQL-verb: exec
  /providers/Microsoft.DBForPostgreSql/operations?api-version=2020-10-05-privatepreview:
    x-api-version: 2020-10-05-privatepreview
    get:
      description: Lists all of the available REST API operations.
      tags:
        - Operations
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: operations
      x-stackQL-verb: select
