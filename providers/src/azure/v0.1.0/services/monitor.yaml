openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: monitor (Microsoft.Insights)
  description: monitor
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-20-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    Resource:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: Azure resource Id
        name:
          type: string
          readOnly: true
          description: Azure resource name
        type:
          type: string
          readOnly: true
          description: Azure resource type
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.
        systemData:
          readOnly: true
          description: The system metadata related to the response.
          $ref: '#/components/schemas/systemData'
      required:
        - location
      x-ms-azure-resource: true
      description: The autoscale setting resource.
    RetentionPolicy:
      type: object
      properties:
        enabled:
          type: boolean
          description: a value indicating whether the retention policy is enabled.
        days:
          type: integer
          format: int32
          minimum: 0
          description: the number of days for the retention in days. A value of 0 will retain the events indefinitely.
      required:
        - enabled
        - days
      description: Specifies the retention policy for the log.
    LogProfileProperties:
      required:
        - locations
        - categories
        - retentionPolicy
      properties:
        storageAccountId:
          type: string
          description: the resource id of the storage account to which you would like to send the Activity Log.
        serviceBusRuleId:
          type: string
          description: 'The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format: ''{service bus resource ID}/authorizationrules/{key name}''.'
        locations:
          type: array
          items:
            type: string
          description: List of regions for which Activity Log events should be stored or streamed. It is a comma separated list of valid ARM locations including the 'global' location.
        categories:
          type: array
          items:
            type: string
          description: 'the categories of the logs. These categories are created as is convenient to the user. Some values are: ''Write'', ''Delete'', and/or ''Action.'''
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
          description: the retention policy for the events in the log.
      description: The log profile properties.
    LogProfileResource:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LogProfileProperties'
          description: The log profile properties of the resource.
      required:
        - properties
      description: The log profile resource.
    LogProfileResourcePatch:
      description: The log profile resource for patch operations.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LogProfileProperties'
          description: The log profile properties for an update operation.
    LogProfileCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LogProfileResource'
          description: the values of the log profiles.
      required:
        - value
      description: Represents a collection of log profiles.
    ErrorResponse:
      description: Describes the format of Error response.
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
    MetricNamespaceName:
      properties:
        metricNamespaceName:
          type: string
          description: The metric namespace name.
      description: The fully qualified metric namespace name.
    NamespaceClassification:
      type: string
      description: Kind of namespace
      enum:
        - Platform
        - Custom
        - Qos
      x-ms-enum:
        name: NamespaceClassification
        modelAsString: true
    MetricNamespace:
      type: object
      properties:
        id:
          type: string
          description: The ID of the metric namespace.
        type:
          type: string
          description: The type of the namespace.
        name:
          type: string
          description: The escaped name of the namespace.
        classification:
          $ref: '#/components/schemas/NamespaceClassification'
          description: Kind of namespace
        properties:
          $ref: '#/components/schemas/MetricNamespaceName'
          description: Properties which include the fully qualified namespace name.
      description: Metric namespace class specifies the metadata for a metric namespace.
    MetricNamespaceCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MetricNamespace'
          description: The values for the metric namespaces.
      required:
        - value
      description: Represents collection of metric namespaces.
    LocalizableString:
      required:
        - value
      properties:
        value:
          type: string
          description: the invariant value.
        localizedValue:
          type: string
          description: the locale specific value.
      description: The localizable string class.
    Unit:
      type: string
      description: The unit of the metric.
      enum:
        - Count
        - Bytes
        - Seconds
        - CountPerSecond
        - BytesPerSecond
        - Percent
        - MilliSeconds
        - ByteSeconds
        - Unspecified
        - Cores
        - MilliCores
        - NanoCores
        - BitsPerSecond
      x-ms-enum:
        name: MetricUnit
        modelAsString: true
    MetricValue:
      type: object
      required:
        - timeStamp
      properties:
        timeStamp:
          type: string
          format: date-time
          description: the timestamp for the metric value in ISO 8601 format.
        average:
          type: number
          format: double
          description: the average value in the time range.
        minimum:
          type: number
          format: double
          description: the least value in the time range.
        maximum:
          type: number
          format: double
          description: the greatest value in the time range.
        total:
          type: number
          format: double
          description: the sum of all of the values in the time range.
        count:
          type: number
          format: double
          description: the number of samples in the time range. Can be used to determine the number of values that contributed to the average value.
      description: Represents a metric value.
    MetadataValue:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LocalizableString'
          description: the name of the metadata.
        value:
          type: string
          description: the value of the metadata.
      description: Represents a metric metadata value.
    Response:
      type: object
      properties:
        cost:
          type: number
          format: int32
          minimum: 0
          description: The integer value representing the relative cost of the query.
        timespan:
          type: string
          description: The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested.
        interval:
          type: string
          format: duration
          description: The interval (window size) for which the metric data was returned in.  This may be adjusted in the future and returned back from what was originally requested.  This is not present if a metadata request was made.
        namespace:
          type: string
          description: The namespace of the metrics being queried
        resourceregion:
          type: string
          description: The region of the resource being queried for metrics.
        value:
          type: array
          items:
            $ref: '#/components/schemas/Metric'
          description: the value of the collection.
      required:
        - timespan
        - value
      description: The response to a metrics query.
    Metric:
      type: object
      properties:
        id:
          type: string
          description: the metric Id.
        type:
          type: string
          description: the resource type of the metric resource.
        name:
          $ref: '#/components/schemas/LocalizableString'
          description: the name and the display name of the metric, i.e. it is localizable string.
        displayDescription:
          type: string
          description: Detailed description of this metric.
        errorCode:
          type: string
          description: '''Success'' or the error details on query failures for this metric.'
        errorMessage:
          type: string
          description: Error message encountered querying this specific metric.
        unit:
          $ref: '#/components/schemas/Unit'
          description: The unit of the metric.
        timeseries:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesElement'
          x-ms-identifiers: []
          description: the time series returned when a data query is performed.
      required:
        - id
        - type
        - name
        - unit
        - timeseries
      description: The result data of a query.
    TimeSeriesElement:
      type: object
      properties:
        metadatavalues:
          type: array
          items:
            $ref: '#/components/schemas/MetadataValue'
          x-ms-identifiers:
            - name
          description: the metadata values returned if $filter was specified in the call.
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricValue'
          x-ms-identifiers:
            - timeStamp
          description: An array of data points representing the metric values.  This is only returned if a result type of data is specified.
      description: A time series result type. The discriminator value is always TimeSeries in this case.
    OperationStatus:
      description: The status of operation.
      type: object
      properties:
        id:
          type: string
          description: The operation Id.
        name:
          type: string
          description: The operation name.
        startTime:
          type: string
          format: date-time
          nullable: true
          description: Start time of the job in standard ISO8601 format.
        endTime:
          type: string
          format: date-time
          nullable: true
          description: End time of the job in standard ISO8601 format.
        status:
          type: string
          description: The status of the operation.
        error:
          type: object
          description: The error detail of the operation if any.
          $ref: '#/components/schemas/ErrorDetail'
          nullable: true
          x-nullable: true
    TagsResource:
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
      description: A container holding only the Tags for a resource, allowing the user to update the tags on a PrivateLinkScope instance.
    AzureMonitorPrivateLinkScope:
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties that define a Azure Monitor PrivateLinkScope resource.
          $ref: '#/components/schemas/AzureMonitorPrivateLinkScopeProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System data
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      required:
        - properties
      description: An Azure Monitor PrivateLinkScope definition.
    AzureMonitorPrivateLinkScopeProperties:
      description: Properties that define a Azure Monitor PrivateLinkScope resource.
      properties:
        provisioningState:
          type: string
          description: 'Current state of this PrivateLinkScope: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Provisioning ,Succeeded, Canceled and Failed.'
          readOnly: true
        privateEndpointConnections:
          readOnly: true
          description: List of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        accessModeSettings:
          type: object
          $ref: '#/components/schemas/AccessModeSettings'
          description: Access mode settings
      required:
        - accessModeSettings
    AccessModeSettings:
      type: object
      description: Properties that define the scope private link mode settings.
      properties:
        queryAccessMode:
          description: Specifies the default access mode of queries through associated private endpoints in scope. If not specified default value is 'Open'. You can override this default setting for a specific private endpoint connection by adding an exclusion in the 'exclusions' array.
          $ref: '#/components/schemas/AccessMode'
        ingestionAccessMode:
          description: Specifies the default access mode of ingestion through associated private endpoints in scope. If not specified default value is 'Open'. You can override this default setting for a specific private endpoint connection by adding an exclusion in the 'exclusions' array.
          $ref: '#/components/schemas/AccessMode'
        exclusions:
          description: List of exclusions that override the default access mode settings for specific private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/AccessModeSettingsExclusion'
      required:
        - queryAccessMode
        - ingestionAccessMode
    AccessModeSettingsExclusion:
      type: object
      description: Properties that define the scope private link mode settings exclusion item. This setting applies to a specific private endpoint connection and overrides the default settings for that private endpoint connection.
      properties:
        privateEndpointConnectionName:
          description: The private endpoint connection name associated to the private endpoint on which we want to apply the specific access mode settings.
          type: string
        queryAccessMode:
          description: Specifies the access mode of queries through the specified private endpoint connection in the exclusion.
          $ref: '#/components/schemas/AccessMode'
        ingestionAccessMode:
          description: Specifies the access mode of ingestion through the specified private endpoint connection in the exclusion.
          $ref: '#/components/schemas/AccessMode'
    AccessMode:
      description: Access mode types.
      type: string
      enum:
        - Open
        - PrivateOnly
      x-ms-enum:
        name: AccessMode
        modelAsString: true
    AzureMonitorPrivateLinkScopeListResult:
      description: Describes the list of Azure Monitor PrivateLinkScope resources.
      required:
        - value
      properties:
        value:
          type: array
          description: List of Azure Monitor PrivateLinkScope definitions.
          items:
            $ref: '#/components/schemas/AzureMonitorPrivateLinkScope'
        nextLink:
          type: string
          description: The URI to get the next set of Azure Monitor PrivateLinkScope definitions if too many PrivateLinkScopes where returned in the result set.
    ScopedResourceListResult:
      description: A list of scoped resources in a private link scope.
      type: object
      properties:
        value:
          description: Array of results.
          type: array
          items:
            $ref: '#/components/schemas/ScopedResource'
          readOnly: true
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    ScopedResource:
      description: A private link scoped resource
      type: object
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        properties:
          $ref: '#/components/schemas/ScopedResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System data
          readOnly: true
    ScopedResourceProperties:
      description: Properties of a private link scoped resource.
      type: object
      properties:
        linkedResourceId:
          description: The resource id of the scoped Azure monitor resource.
          type: string
        provisioningState:
          description: State of the private endpoint connection.
          type: string
          readOnly: true
    DefaultErrorResponse:
      title: Default error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    Incident:
      properties:
        name:
          readOnly: true
          type: string
          description: Incident name.
        ruleName:
          readOnly: true
          type: string
          description: Rule name that is associated with the incident.
        isActive:
          readOnly: true
          type: boolean
          description: A boolean to indicate whether the incident is active or resolved.
        activatedTime:
          readOnly: true
          type: string
          format: date-time
          description: The time at which the incident was activated in ISO8601 format.
        resolvedTime:
          readOnly: true
          type: string
          format: date-time
          description: The time at which the incident was resolved in ISO8601 format. If null, it means the incident is still active.
      description: An alert incident indicates the activation status of an alert rule.
    IncidentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Incident'
          x-ms-identifiers:
            - name
          description: the incident collection.
      description: The List incidents operation response.
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResponseWithError:
      type: object
      description: An error response from the API.
      properties:
        error:
          $ref: '#/components/schemas/Error'
          description: Error information.
      required:
        - error
    Error:
      type: object
      description: Error details.
      properties:
        code:
          type: string
          description: Error code identifying the specific error.
        message:
          type: string
          description: Error message in the caller's locale.
      required:
        - code
    WorkspaceInfo:
      type: object
      description: Information about a Log Analytics Workspace.
      properties:
        id:
          type: string
          description: Azure Resource Manager identifier of the Log Analytics Workspace.
        location:
          type: string
          description: Location of the Log Analytics workspace.
        properties:
          x-ms-client-flatten: true
          type: object
          description: Resource properties.
          properties:
            customerId:
              type: string
              description: Log Analytics workspace identifier.
          required:
            - customerId
      required:
        - id
        - location
        - properties
    DataContainer:
      type: object
      description: Information about a container with data for a given resource.
      properties:
        workspace:
          $ref: '#/components/schemas/WorkspaceInfo'
          description: Log Analytics workspace information.
      required:
        - workspace
    VMInsightsOnboardingStatus:
      description: VM Insights onboarding status for a resource.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      properties:
        properties:
          x-ms-client-flatten: true
          type: object
          description: Resource properties.
          properties:
            resourceId:
              type: string
              description: Azure Resource Manager identifier of the resource whose onboarding status is being represented.
            onboardingStatus:
              type: string
              enum:
                - onboarded
                - notOnboarded
                - unknown
              x-ms-enum:
                name: OnboardingStatus
                modelAsString: true
              description: The onboarding status for the resource. Note that, a higher level scope, e.g., resource group or subscription, is considered onboarded if at least one resource under it is onboarded.
            dataStatus:
              type: string
              enum:
                - present
                - notPresent
              x-ms-enum:
                name: DataStatus
                modelAsString: true
              description: The status of VM Insights data from the resource. When reported as `present` the data array will contain information about the data containers to which data for the specified resource is being routed.
            data:
              type: array
              items:
                $ref: '#/components/schemas/DataContainer'
              x-ms-identifiers:
                - /workspace/id
              description: Containers that currently store VM Insights data for the specified resource.
          required:
            - resourceId
            - onboardingStatus
            - dataStatus
    MetricAlertAction:
      description: An alert action.
      properties:
        actionGroupId:
          type: string
          description: the id of the action group to use.
        webHookProperties:
          type: object
          additionalProperties:
            type: string
            description: the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
          description: This field allows specifying custom properties, which would be appended to the alert payload sent as input to the webhook.
    MetricAlertProperties:
      required:
        - enabled
        - severity
        - evaluationFrequency
        - windowSize
        - criteria
        - scopes
      properties:
        description:
          type: string
          description: the description of the metric alert that will be included in the alert email.
        severity:
          type: integer
          format: int32
          description: Alert severity {0, 1, 2, 3, 4}
        enabled:
          type: boolean
          description: the flag that indicates whether the metric alert is enabled.
        scopes:
          type: array
          items:
            type: string
          description: the list of resource id's that this metric alert is scoped to.
        evaluationFrequency:
          type: string
          format: duration
          description: how often the metric alert is evaluated represented in ISO 8601 duration format.
        windowSize:
          type: string
          format: duration
          description: the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.
        targetResourceType:
          type: string
          description: the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.
        targetResourceRegion:
          type: string
          description: the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.
        criteria:
          $ref: '#/components/schemas/MetricAlertCriteria'
          description: defines the specific alert criteria information.
        autoMitigate:
          type: boolean
          description: the flag that indicates whether the alert should be auto resolved or not. The default is true.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/MetricAlertAction'
          x-ms-identifiers:
            - actionGroupId
          description: the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
        lastUpdatedTime:
          readOnly: true
          type: string
          format: date-time
          description: Last time the rule was updated in ISO8601 format.
        isMigrated:
          type: boolean
          description: the value indicating whether this alert rule is migrated.
          readOnly: true
      description: An alert rule.
    MetricAlertPropertiesPatch:
      properties:
        description:
          type: string
          description: the description of the metric alert that will be included in the alert email.
        severity:
          type: integer
          format: int32
          description: Alert severity {0, 1, 2, 3, 4}
        enabled:
          type: boolean
          description: the flag that indicates whether the metric alert is enabled.
        scopes:
          type: array
          items:
            type: string
          description: the list of resource id's that this metric alert is scoped to.
        evaluationFrequency:
          type: string
          format: duration
          description: how often the metric alert is evaluated represented in ISO 8601 duration format.
        windowSize:
          type: string
          format: duration
          description: the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.
        targetResourceType:
          type: string
          description: the resource type of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.
        targetResourceRegion:
          type: string
          description: the region of the target resource(s) on which the alert is created/updated. Mandatory for MultipleResourceMultipleMetricCriteria.
        criteria:
          $ref: '#/components/schemas/MetricAlertCriteria'
          description: defines the specific alert criteria information.
        autoMitigate:
          type: boolean
          description: the flag that indicates whether the alert should be auto resolved or not. The default is true.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/MetricAlertAction'
          x-ms-identifiers:
            - actionGroupId
          description: the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
        lastUpdatedTime:
          readOnly: true
          type: string
          format: date-time
          description: Last time the rule was updated in ISO8601 format.
        isMigrated:
          type: boolean
          description: the value indicating whether this alert rule is migrated.
          readOnly: true
      description: An alert rule properties for patch.
    MetricAlertResource:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MetricAlertProperties'
          description: The alert rule properties of the resource.
      description: The metric alert resource.
    MetricAlertResourcePatch:
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MetricAlertPropertiesPatch'
          description: The alert rule properties of the resource.
      description: The metric alert resource for patch operations.
    MetricAlertResourceCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MetricAlertResource'
          description: the values for the alert rule resources.
      description: Represents a collection of alert rule resources.
    MetricAlertStatusCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MetricAlertStatus'
          description: the values for the alert rule resources.
      description: Represents a collection of alert rule resources.
    MetricAlertStatusProperties:
      description: An alert status properties.
      properties:
        dimensions:
          type: object
          additionalProperties:
            type: string
          description: An object describing the type of the dimensions.
        status:
          type: string
          description: status value
        timestamp:
          type: string
          format: date-time
          description: UTC time when the status was checked.
    MetricAlertStatus:
      description: An alert status.
      properties:
        name:
          type: string
          description: The status name.
        id:
          type: string
          description: The alert rule arm id.
        type:
          type: string
          description: The extended resource type name.
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/MetricAlertStatusProperties'
          description: The alert status properties of the metric alert status.
    MetricAlertCriteria:
      type: object
      additionalProperties:
        type: object
      discriminator:
        propertyName: odata.type
      properties:
        odata.type:
          type: string
          enum:
            - Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria
            - Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria
            - Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria
          x-ms-enum:
            name: odatatype
            modelAsString: true
          description: specifies the type of the alert criteria.
      required:
        - odata.type
      description: The rule criteria that defines the conditions of the alert rule.
    MetricAlertSingleResourceMultipleMetricCriteria:
      x-ms-discriminator-value: Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria
      type: object
      allOf:
        - $ref: '#/components/schemas/MetricAlertCriteria'
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/MetricCriteria'
          x-ms-identifiers:
            - name
          description: 'The list of metric criteria for this ''all of'' operation. '
      description: Specifies the metric alert criteria for a single resource that has multiple metric criteria.
    WebtestLocationAvailabilityCriteria:
      x-ms-discriminator-value: Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria
      type: object
      allOf:
        - $ref: '#/components/schemas/MetricAlertCriteria'
      properties:
        webTestId:
          type: string
          description: The Application Insights web test Id.
        componentId:
          type: string
          description: The Application Insights resource Id.
        failedLocationCount:
          type: number
          description: The number of failed locations.
      required:
        - webTestId
        - componentId
        - failedLocationCount
      description: Specifies the metric alert rule criteria for a web test resource.
    MetricCriteria:
      x-ms-discriminator-value: StaticThresholdCriterion
      type: object
      allOf:
        - $ref: '#/components/schemas/MultiMetricCriteria'
      required:
        - operator
        - threshold
      properties:
        operator:
          type: string
          enum:
            - Equals
            - GreaterThan
            - GreaterThanOrEqual
            - LessThan
            - LessThanOrEqual
          x-ms-enum:
            name: Operator
            modelAsString: true
          description: the criteria operator.
        threshold:
          type: number
          format: double
          description: the criteria threshold value that activates the alert.
      description: Criterion to filter metrics.
    MetricDimension:
      required:
        - name
        - operator
        - values
      properties:
        name:
          type: string
          description: Name of the dimension.
        operator:
          type: string
          description: the dimension operator. Only 'Include' and 'Exclude' are supported
        values:
          type: array
          items:
            type: string
          description: list of dimension values.
      description: Specifies a metric dimension.
    MetricAlertMultipleResourceMultipleMetricCriteria:
      x-ms-discriminator-value: Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria
      type: object
      allOf:
        - $ref: '#/components/schemas/MetricAlertCriteria'
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/MultiMetricCriteria'
          x-ms-identifiers:
            - name
          description: 'the list of multiple metric criteria for this ''all of'' operation. '
      description: Specifies the metric alert criteria for multiple resource that has multiple metric criteria.
    MultiMetricCriteria:
      type: object
      additionalProperties:
        type: object
      discriminator:
        propertyName: criterionType
      properties:
        criterionType:
          type: string
          enum:
            - StaticThresholdCriterion
            - DynamicThresholdCriterion
          x-ms-enum:
            name: criterionType
            modelAsString: true
          description: Specifies the type of threshold criteria
        name:
          type: string
          description: Name of the criteria.
        metricName:
          type: string
          description: Name of the metric.
        metricNamespace:
          type: string
          description: Namespace of the metric.
        timeAggregation:
          type: string
          enum:
            - Average
            - Count
            - Minimum
            - Maximum
            - Total
          x-ms-enum:
            name: AggregationTypeEnum
            modelAsString: true
          description: the criteria time aggregation types.
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
          description: List of dimension conditions.
        skipMetricValidation:
          type: boolean
          description: Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped.
      required:
        - criterionType
        - name
        - metricName
        - timeAggregation
      description: The types of conditions for a multi resource alert.
    DynamicMetricCriteria:
      x-ms-discriminator-value: DynamicThresholdCriterion
      type: object
      allOf:
        - $ref: '#/components/schemas/MultiMetricCriteria'
      required:
        - operator
        - alertSensitivity
        - failingPeriods
      properties:
        operator:
          type: string
          enum:
            - GreaterThan
            - LessThan
            - GreaterOrLessThan
          x-ms-enum:
            name: DynamicThresholdOperator
            modelAsString: true
          description: The operator used to compare the metric value against the threshold.
        alertSensitivity:
          type: string
          enum:
            - Low
            - Medium
            - High
          x-ms-enum:
            name: DynamicThresholdSensitivity
            modelAsString: true
          description: The extent of deviation required to trigger an alert. This will affect how tight the threshold is to the metric series pattern.
        failingPeriods:
          type: object
          $ref: '#/components/schemas/DynamicThresholdFailingPeriods'
          description: The minimum number of violations required within the selected lookback time window required to raise an alert.
        ignoreDataBefore:
          type: string
          format: date-time
          description: Use this option to set the date from which to start learning the metric historical data and calculate the dynamic thresholds (in ISO8601 format)
      description: Criterion for dynamic threshold.
    DynamicThresholdFailingPeriods:
      required:
        - numberOfEvaluationPeriods
        - minFailingPeriodsToAlert
      properties:
        numberOfEvaluationPeriods:
          type: number
          description: The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points.
        minFailingPeriodsToAlert:
          type: number
          description: The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods.
      description: The minimum number of violations required within the selected lookback time window required to raise an alert.
    Metadata:
      description: Metadata about the resource
      type: object
      properties:
        provisionedBy:
          description: Azure offering managing this resource on-behalf-of customer.
          type: string
          readOnly: true
          example: Azure Security Center
          x-ms-mutability:
            - read
    DataCollectionRuleAssociation:
      description: Definition of association of a data collection rule with a monitored Azure resource.
      type: object
      properties:
        description:
          description: Description of the association.
          type: string
        dataCollectionRuleId:
          description: The resource ID of the data collection rule that is to be associated.
          type: string
          example: /subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.Insights/dataCollectionRules/myCollectionRule
        dataCollectionEndpointId:
          description: The resource ID of the data collection endpoint that is to be associated.
          type: string
          example: /subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.Insights/dataCollectionEndpoints/myCollectionEndpoint
        provisioningState:
          description: The resource provisioning state.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
          type: string
          readOnly: true
          example: Creating
          x-ms-enum:
            name: KnownDataCollectionRuleAssociationProvisioningState
            modelAsString: true
          x-ms-mutability:
            - read
        metadata:
          description: Metadata about the resource
          allOf:
            - $ref: '#/components/schemas/Metadata'
          readOnly: true
          x-ms-mutability:
            - read
    DataCollectionRuleAssociationProxyOnlyResource:
      description: Definition of generic ARM proxy resource.
      type: object
      properties:
        properties:
          description: Resource properties.
          allOf:
            - $ref: '#/components/schemas/DataCollectionRuleAssociation'
          x-ms-client-flatten: true
        id:
          description: Fully qualified ID of the resource.
          type: string
          readOnly: true
          example: /subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.Insights/dataCollectionRules/myCollectionRule
          x-ms-mutability:
            - read
        name:
          description: The name of the resource.
          type: string
          readOnly: true
          example: myCollectionRule
          x-ms-mutability:
            - read
        type:
          description: The type of the resource.
          type: string
          readOnly: true
          example: Microsoft.Insights/dataCollectionRules
          x-ms-mutability:
            - read
        etag:
          description: Resource entity tag (ETag).
          type: string
          readOnly: true
          x-ms-mutability:
            - read
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          allOf:
            - $ref: '#/components/schemas/systemData'
          readOnly: true
          x-ms-mutability:
            - read
      x-ms-azure-resource: true
    DataCollectionRuleAssociationProxyOnlyResourceListResult:
      description: A pageable list of resources.
      required:
        - value
      type: object
      properties:
        value:
          description: A list of resources.
          type: array
          items:
            $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResource'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
    SenderAuthorization:
      properties:
        action:
          type: string
          description: 'the permissible actions. For instance: microsoft.support/supporttickets/write'
        role:
          type: string
          description: 'the role of the user. For instance: Subscription Admin'
        scope:
          type: string
          description: the scope.
      description: the authorization used by the user who has performed the operation that led to this event. This captures the RBAC properties of the event. These usually include the 'action', 'role' and the 'scope'
    HttpRequestInfo:
      properties:
        clientRequestId:
          type: string
          description: the client request id.
        clientIpAddress:
          type: string
          description: the client Ip Address
        method:
          type: string
          description: the Http request method.
        uri:
          type: string
          description: the Uri.
      description: The Http request info.
    EventData:
      properties:
        authorization:
          readOnly: true
          $ref: '#/components/schemas/SenderAuthorization'
          description: The sender authorization information.
        claims:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: key value pairs to identify ARM permissions.
        caller:
          readOnly: true
          type: string
          description: the email address of the user who has performed the operation, the UPN claim or SPN claim based on availability.
        description:
          readOnly: true
          type: string
          description: the description of the event.
        id:
          readOnly: true
          type: string
          description: the Id of this event as required by ARM for RBAC. It contains the EventDataID and a timestamp information.
        eventDataId:
          readOnly: true
          type: string
          description: the event data Id. This is a unique identifier for an event.
        correlationId:
          readOnly: true
          type: string
          description: the correlation Id, usually a GUID in the string format. The correlation Id is shared among the events that belong to the same uber operation.
        eventName:
          readOnly: true
          $ref: '#/components/schemas/LocalizableString'
          description: the event name. This value should not be confused with OperationName. For practical purposes, OperationName might be more appealing to end users.
        category:
          readOnly: true
          $ref: '#/components/schemas/LocalizableString'
          description: the event category.
        httpRequest:
          readOnly: true
          $ref: '#/components/schemas/HttpRequestInfo'
          description: the HTTP request info. Usually includes the 'clientRequestId', 'clientIpAddress' (IP address of the user who initiated the event) and 'method' (HTTP method e.g. PUT).
        level:
          readOnly: true
          type: string
          description: the event level
          enum:
            - Critical
            - Error
            - Warning
            - Informational
            - Verbose
          x-ms-enum:
            name: EventLevel
            modelAsString: false
        resourceGroupName:
          readOnly: true
          externalDocs:
            url: http://msdn.microsoft.com/en-us/library/azure/dn790546.aspx
          type: string
          description: the resource group name of the impacted resource.
        resourceProviderName:
          readOnly: true
          $ref: '#/components/schemas/LocalizableString'
          externalDocs:
            url: http://msdn.microsoft.com/en-us/library/azure/dn790572.aspx
          description: the resource provider name of the impacted resource.
        resourceId:
          readOnly: true
          externalDocs:
            url: http://msdn.microsoft.com/en-us/library/azure/dn790569.aspx
          type: string
          description: the resource uri that uniquely identifies the resource that caused this event.
        resourceType:
          readOnly: true
          $ref: '#/components/schemas/LocalizableString'
          externalDocs:
            url: http://msdn.microsoft.com/en-us/library/azure/dn790569.aspx
          description: the resource type
        operationId:
          readOnly: true
          type: string
          description: It is usually a GUID shared among the events corresponding to single operation. This value should not be confused with EventName.
        operationName:
          readOnly: true
          $ref: '#/components/schemas/LocalizableString'
          description: the operation name.
        properties:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: the set of <Key, Value> pairs (usually a Dictionary<String, String>) that includes details about the event.
        status:
          readOnly: true
          $ref: '#/components/schemas/LocalizableString'
          description: 'a string describing the status of the operation. Some typical values are: Started, In progress, Succeeded, Failed, Resolved.'
        subStatus:
          readOnly: true
          $ref: '#/components/schemas/LocalizableString'
          description: 'the event sub status. Most of the time, when included, this captures the HTTP status code of the REST call. Common values are: OK (HTTP Status Code: 200), Created (HTTP Status Code: 201), Accepted (HTTP Status Code: 202), No Content (HTTP Status Code: 204), Bad Request(HTTP Status Code: 400), Not Found (HTTP Status Code: 404), Conflict (HTTP Status Code: 409), Internal Server Error (HTTP Status Code: 500), Service Unavailable (HTTP Status Code:503), Gateway Timeout (HTTP Status Code: 504)'
        eventTimestamp:
          readOnly: true
          type: string
          format: date-time
          description: the timestamp of when the event was generated by the Azure service processing the request corresponding the event. It in ISO 8601 format.
        submissionTimestamp:
          readOnly: true
          type: string
          format: date-time
          description: the timestamp of when the event became available for querying via this API. It is in ISO 8601 format. This value should not be confused eventTimestamp. As there might be a delay between the occurrence time of the event, and the time that the event is submitted to the Azure logging infrastructure.
        subscriptionId:
          readOnly: true
          type: string
          description: the Azure subscription Id usually a GUID.
        tenantId:
          readOnly: true
          type: string
          description: the Azure tenant Id
      description: The Azure event log entries are of type EventData
    EventDataCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EventData'
          description: this list that includes the Azure audit logs.
        nextLink:
          type: string
          description: Provides the link to retrieve the next set of events.
      required:
        - value
      description: Represents collection of events.
    DiagnosticSettingsCategory:
      type: object
      readOnly: true
      properties:
        categoryType:
          enum:
            - Metrics
            - Logs
          type: string
          x-ms-enum:
            name: categoryType
            modelAsString: true
          nullable: false
          description: The type of the diagnostic settings category.
        categoryGroups:
          type: array
          items:
            type: string
          description: the collection of what category groups are supported.
      description: The diagnostic settings Category.
    DiagnosticSettingsCategoryResource:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiagnosticSettingsCategory'
          description: The properties of a Diagnostic Settings Category.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/systemData'
      description: The diagnostic settings category resource.
    DiagnosticSettingsCategoryResourceCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticSettingsCategoryResource'
          description: The collection of diagnostic settings category resources.
      description: Represents a collection of diagnostic setting category resources.
    ConfigurationAccessEndpointSpec:
      description: Definition of the endpoint used for accessing configuration.
      type: object
      properties:
        endpoint:
          description: The endpoint. This property is READ-ONLY.
          type: string
          readOnly: true
          example: https://mydce-abcd.eastus-1.control.monitor.azure.com
          x-ms-mutability:
            - read
    LogsIngestionEndpointSpec:
      description: Definition of the endpoint used for ingesting logs.
      type: object
      properties:
        endpoint:
          description: The endpoint. This property is READ-ONLY.
          type: string
          readOnly: true
          example: https://mydce-abcd.eastus-1.ingest.monitor.azure.com
          x-ms-mutability:
            - read
    NetworkRuleSet:
      description: Definition of the network rules.
      type: object
      properties:
        publicNetworkAccess:
          description: The configuration to set whether network access from public internet to the endpoints are allowed.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: KnownPublicNetworkAccessOptions
            modelAsString: true
    DataCollectionEndpoint:
      description: Definition of data collection endpoint.
      type: object
      properties:
        description:
          description: Description of the data collection endpoint.
          type: string
        immutableId:
          description: The immutable ID of this data collection endpoint resource. This property is READ-ONLY.
          type: string
          example: dce-b74e0d383fc9415abaa584ec41adece3
        configurationAccess:
          description: The endpoint used by clients to access their configuration.
          allOf:
            - $ref: '#/components/schemas/ConfigurationAccessEndpointSpec'
        logsIngestion:
          description: The endpoint used by clients to ingest logs.
          allOf:
            - $ref: '#/components/schemas/LogsIngestionEndpointSpec'
        networkAcls:
          description: Network access control rules for the endpoints.
          allOf:
            - $ref: '#/components/schemas/NetworkRuleSet'
        provisioningState:
          description: The resource provisioning state. This property is READ-ONLY.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
          type: string
          readOnly: true
          example: Creating
          x-ms-enum:
            name: KnownDataCollectionEndpointProvisioningState
            modelAsString: true
          x-ms-mutability:
            - read
    DataCollectionEndpointResource:
      description: Definition of ARM tracked top level resource.
      required:
        - location
      type: object
      properties:
        properties:
          description: Resource properties.
          allOf:
            - $ref: '#/components/schemas/DataCollectionEndpoint'
          x-ms-client-flatten: true
        location:
          description: The geo-location where the resource lives.
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        kind:
          description: The kind of the resource.
          enum:
            - Linux
            - Windows
          type: string
          example: Linux
          x-ms-enum:
            name: KnownDataCollectionEndpointResourceKind
            modelAsString: true
        id:
          description: Fully qualified ID of the resource.
          type: string
          readOnly: true
          example: /subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.Insights/dataCollectionEndpoints/myCollectionEndpoint
          x-ms-mutability:
            - read
        name:
          description: The name of the resource.
          type: string
          readOnly: true
          example: myCollectionEndpoint
          x-ms-mutability:
            - read
        type:
          description: The type of the resource.
          type: string
          readOnly: true
          example: Microsoft.Insights/dataCollectionEndpoints
          x-ms-mutability:
            - read
        etag:
          description: Resource entity tag (ETag).
          type: string
          readOnly: true
          x-ms-mutability:
            - read
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          allOf:
            - $ref: '#/components/schemas/systemData'
          readOnly: true
          x-ms-mutability:
            - read
      x-ms-azure-resource: true
    DataCollectionEndpointResourceListResult:
      description: A pageable list of resources.
      required:
        - value
      type: object
      properties:
        value:
          description: A list of resources.
          type: array
          items:
            $ref: '#/components/schemas/DataCollectionEndpointResource'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
    ResourceForUpdate:
      description: Definition of ARM tracked top level resource properties for update operation.
      type: object
      properties:
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
    MetricBaselinesResponse:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SingleMetricBaseline'
          description: The list of metric baselines.
      description: A list of metric baselines.
    SingleMetricBaseline:
      properties:
        id:
          type: string
          description: The metric baseline Id.
        type:
          type: string
          description: The resource type of the metric baseline resource.
        name:
          type: string
          description: The name of the metric for which the baselines were retrieved.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MetricBaselinesProperties'
          description: The metric baseline properties of the metric.
      required:
        - id
        - type
        - name
        - properties
      description: The baseline results of a single metric.
    MetricBaselinesProperties:
      type: object
      properties:
        timespan:
          type: string
          description: The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested.
        interval:
          type: string
          format: duration
          description: The interval (window size) for which the metric data was returned in.  This may be adjusted in the future and returned back from what was originally requested.  This is not present if a metadata request was made.
        namespace:
          type: string
          description: The namespace of the metrics been queried.
        baselines:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesBaseline'
          x-ms-identifiers: []
          description: The baseline for each time series that was queried.
      required:
        - timespan
        - interval
        - baselines
      description: The response to a metric baselines query.
    TimeSeriesBaseline:
      properties:
        aggregation:
          type: string
          description: The aggregation type of the metric.
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/MetricSingleDimension'
          x-ms-identifiers:
            - name
          description: The dimensions of this time series.
        timestamps:
          type: array
          items:
            type: string
            format: date-time
            description: The timestamp for the baseline value in ISO 8601 format.
          description: The list of timestamps of the baselines.
        data:
          type: array
          items:
            $ref: '#/components/schemas/SingleBaseline'
          x-ms-identifiers: []
          description: The baseline values for each sensitivity.
        metadataValues:
          type: array
          items:
            $ref: '#/components/schemas/BaselineMetadata'
          x-ms-identifiers:
            - name
          description: The baseline metadata values.
      required:
        - aggregation
        - timestamps
        - data
      description: The baseline values for a single time series.
    MetricSingleDimension:
      type: object
      properties:
        name:
          type: string
          description: Name of the dimension.
        value:
          type: string
          description: Value of the dimension.
      required:
        - name
        - value
      description: The metric dimension name and value.
    SingleBaseline:
      type: object
      properties:
        sensitivity:
          type: string
          enum:
            - Low
            - Medium
            - High
          x-ms-enum:
            name: BaselineSensitivity
            modelAsString: true
          description: the sensitivity of the baseline.
        lowThresholds:
          type: array
          items:
            type: number
            format: double
            description: A single low threshold value.
          description: The low thresholds of the baseline.
        highThresholds:
          type: array
          items:
            type: number
            format: double
            description: A single high threshold value.
          description: The high thresholds of the baseline.
      required:
        - sensitivity
        - lowThresholds
        - highThresholds
      description: The baseline values for a single sensitivity value.
    BaselineMetadata:
      properties:
        name:
          type: string
          description: Name of the baseline metadata.
        value:
          type: string
          description: Value of the baseline metadata.
      required:
        - name
        - value
      description: Represents a baseline metadata value.
    EventCategoryCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LocalizableString'
          x-ms-identifiers:
            - value
          description: the list that includes the Azure event categories.
      required:
        - value
      description: 'A collection of event categories. Currently possible values are: Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.'
    AzureResource:
      properties:
        id:
          type: string
          readOnly: true
          description: Azure resource Id
        name:
          type: string
          readOnly: true
          description: Azure resource name
        type:
          type: string
          readOnly: true
          description: Azure resource type
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - create
            - read
        tags:
          additionalProperties:
            type: string
          type: object
          description: Resource tags
      required:
        - location
      type: object
      x-ms-azure-resource: true
      description: An azure resource object
    ActivityLogAlertResource:
      description: An Activity Log Alert rule resource.
      allOf:
        - $ref: '#/components/schemas/AzureResource'
      properties:
        properties:
          description: The Activity Log Alert rule properties of the resource.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertRuleProperties'
    AlertRuleList:
      description: A list of Activity Log Alert rules.
      properties:
        value:
          description: The list of Activity Log Alert rules.
          type: array
          items:
            $ref: '#/components/schemas/ActivityLogAlertResource'
          x-ms-identifiers:
            - id
        nextLink:
          description: Provides the link to retrieve the next set of elements.
          type: string
    AlertRuleProperties:
      description: An Azure Activity Log Alert rule.
      type: object
      properties:
        scopes:
          description: A list of resource IDs that will be used as prefixes. The alert will only apply to Activity Log events with resource IDs that fall under one of these prefixes. This list must include at least one item.
          type: array
          items:
            type: string
        condition:
          description: The condition that will cause this alert to activate.
          $ref: '#/components/schemas/AlertRuleAllOfCondition'
        actions:
          description: The actions that will activate when the condition is met.
          $ref: '#/components/schemas/ActionList'
        enabled:
          description: Indicates whether this Activity Log Alert rule is enabled. If an Activity Log Alert rule is not enabled, then none of its actions will be activated.
          type: boolean
          default: true
        description:
          description: A description of this Activity Log Alert rule.
          type: string
      required:
        - scopes
        - condition
        - actions
    AlertRuleAllOfCondition:
      description: An Activity Log Alert rule condition that is met when all its member conditions are met.
      type: object
      properties:
        allOf:
          description: The list of Activity Log Alert rule conditions.
          type: array
          items:
            $ref: '#/components/schemas/AlertRuleAnyOfOrLeafCondition'
          x-ms-identifiers: []
      required:
        - allOf
    AlertRuleAnyOfOrLeafCondition:
      description: |
        An Activity Log Alert rule condition that is met when all its member conditions are met.
        Each condition can be of one of the following types:
        __Important__: Each type has its unique subset of properties. Properties from different types CANNOT exist in one condition.
           * __Leaf Condition -__ must contain 'field' and either 'equals' or 'containsAny'.
          _Please note, 'anyOf' should __not__ be set in a Leaf Condition._
          * __AnyOf Condition -__ must contain __only__ 'anyOf' (which is an array of Leaf Conditions).
          _Please note, 'field', 'equals' and 'containsAny' should __not__ be set in an AnyOf Condition._
      type: object
      allOf:
        - $ref: '#/components/schemas/AlertRuleLeafCondition'
      properties:
        anyOf:
          title: An Activity Log Alert rule 'anyOf' condition.
          description: An Activity Log Alert rule condition that is met when at least one of its member leaf conditions are met.
          type: array
          items:
            $ref: '#/components/schemas/AlertRuleLeafCondition'
          x-ms-identifiers: []
    AlertRuleLeafCondition:
      description: |-
        An Activity Log Alert rule condition that is met by comparing the field and value of an Activity Log event.
        This condition must contain 'field' and either 'equals' or 'containsAny'.
      type: object
      properties:
        field:
          description: |-
            The name of the Activity Log event's field that this condition will examine.
            The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties'.
          type: string
        equals:
          description: The value of the event's field will be compared to this value (case-insensitive) to determine if the condition is met.
          type: string
        containsAny:
          description: The value of the event's field will be compared to the values in this array (case-insensitive) to determine if the condition is met.
          type: array
          items:
            type: string
    ActionList:
      description: A list of Activity Log Alert rule actions.
      properties:
        actionGroups:
          description: The list of the Action Groups.
          type: array
          items:
            $ref: '#/components/schemas/ActionGroup'
          x-ms-identifiers:
            - actionGroupId
    ActionGroup:
      description: An Azure action group.
      type: object
      properties:
        groupShortName:
          type: string
          maxLength: 12
          description: The short name of the action group. This will be used in SMS messages.
        enabled:
          type: boolean
          default: true
          description: Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.
        emailReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/EmailReceiver'
          description: The list of email receivers that are part of this action group.
        smsReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/SmsReceiver'
          description: The list of SMS receivers that are part of this action group.
        webhookReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/WebhookReceiver'
          description: The list of webhook receivers that are part of this action group.
        itsmReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/ItsmReceiver'
          description: The list of ITSM receivers that are part of this action group.
        azureAppPushReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/AzureAppPushReceiver'
          description: The list of AzureAppPush receivers that are part of this action group.
        automationRunbookReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/AutomationRunbookReceiver'
          description: The list of AutomationRunbook receivers that are part of this action group.
        voiceReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/VoiceReceiver'
          description: The list of voice receivers that are part of this action group.
        logicAppReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/LogicAppReceiver'
          description: The list of logic app receivers that are part of this action group.
        azureFunctionReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/AzureFunctionReceiver'
          description: The list of azure function receivers that are part of this action group.
        armRoleReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/ArmRoleReceiver'
          description: The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles and only built-in roles are supported.
        eventHubReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/EventHubReceiver'
          description: The list of event hub receivers that are part of this action group.
      required:
        - groupShortName
        - enabled
    AlertRulePatchObject:
      description: An Activity Log Alert rule object for the body of patch operations.
      properties:
        tags:
          description: The resource tags
          additionalProperties:
            type: string
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertRulePatchProperties'
          description: The activity log alert settings for an update operation.
    AlertRulePatchProperties:
      description: An Activity Log Alert rule properties for patch operations.
      properties:
        enabled:
          description: Indicates whether this Activity Log Alert rule is enabled. If an Activity Log Alert rule is not enabled, then none of its actions will be activated.
          type: boolean
          default: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ColumnDefinition:
      description: Definition of custom data column.
      type: object
      properties:
        name:
          description: The name of the column.
          type: string
        type:
          description: The type of the column data.
          enum:
            - string
            - int
            - long
            - real
            - boolean
            - datetime
            - dynamic
          type: string
          x-ms-enum:
            name: KnownColumnDefinitionType
            modelAsString: true
    StreamDeclaration:
      description: Declaration of a custom stream.
      type: object
      properties:
        columns:
          description: List of columns used by data in this stream.
          type: array
          items:
            $ref: '#/components/schemas/ColumnDefinition'
          x-ms-identifiers:
            - name
    PerfCounterDataSource:
      description: "Definition of which performance counters will be collected and how they will be collected by this data collection rule.\r\nCollected from both Windows and Linux machines where the counter is present."
      type: object
      properties:
        streams:
          description: "List of streams that this data source will be sent to.\r\nA stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."
          type: array
          items:
            enum:
              - Microsoft-Perf
              - Microsoft-InsightsMetrics
            type: string
            x-ms-enum:
              name: KnownPerfCounterDataSourceStreams
              modelAsString: true
        samplingFrequencyInSeconds:
          format: int32
          description: The number of seconds between consecutive counter measurements (samples).
          type: integer
          example: 15
        counterSpecifiers:
          description: "A list of specifier names of the performance counters you want to collect.\r\nUse a wildcard (*) to collect a counter for all instances.\r\nTo get a list of performance counters on Windows, run the command 'typeperf'."
          type: array
          items:
            type: string
        name:
          description: "A friendly name for the data source. \r\nThis name should be unique across all data sources (regardless of type) within the data collection rule."
          type: string
          example: myDataSource1
    WindowsEventLogDataSource:
      description: "Definition of which Windows Event Log events will be collected and how they will be collected.\r\nOnly collected from Windows machines."
      type: object
      properties:
        streams:
          description: "List of streams that this data source will be sent to.\r\nA stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."
          type: array
          items:
            enum:
              - Microsoft-WindowsEvent
              - Microsoft-Event
            type: string
            x-ms-enum:
              name: KnownWindowsEventLogDataSourceStreams
              modelAsString: true
        xPathQueries:
          description: A list of Windows Event Log queries in XPATH format.
          type: array
          items:
            type: string
        name:
          description: "A friendly name for the data source. \r\nThis name should be unique across all data sources (regardless of type) within the data collection rule."
          type: string
          example: myDataSource1
    SyslogDataSource:
      description: "Definition of which syslog data will be collected and how it will be collected.\r\nOnly collected from Linux machines."
      type: object
      properties:
        streams:
          description: "List of streams that this data source will be sent to.\r\nA stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."
          type: array
          items:
            enum:
              - Microsoft-Syslog
            type: string
            x-ms-enum:
              name: KnownSyslogDataSourceStreams
              modelAsString: true
        facilityNames:
          description: The list of facility names.
          type: array
          items:
            enum:
              - auth
              - authpriv
              - cron
              - daemon
              - kern
              - lpr
              - mail
              - mark
              - news
              - syslog
              - user
              - uucp
              - local0
              - local1
              - local2
              - local3
              - local4
              - local5
              - local6
              - local7
              - '*'
            type: string
            x-ms-enum:
              name: KnownSyslogDataSourceFacilityNames
              modelAsString: true
        logLevels:
          description: The log levels to collect.
          type: array
          items:
            enum:
              - Debug
              - Info
              - Notice
              - Warning
              - Error
              - Critical
              - Alert
              - Emergency
              - '*'
            type: string
            x-ms-enum:
              name: KnownSyslogDataSourceLogLevels
              modelAsString: true
        name:
          description: "A friendly name for the data source. \r\nThis name should be unique across all data sources (regardless of type) within the data collection rule."
          type: string
          example: myDataSource1
    ExtensionDataSource:
      description: "Definition of which data will be collected from a separate VM extension that integrates with the Azure Monitor Agent.\r\nCollected from either Windows and Linux machines, depending on which extension is defined."
      required:
        - extensionName
      type: object
      properties:
        streams:
          description: "List of streams that this data source will be sent to.\r\nA stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to."
          type: array
          items:
            enum:
              - Microsoft-Event
              - Microsoft-InsightsMetrics
              - Microsoft-Perf
              - Microsoft-Syslog
              - Microsoft-WindowsEvent
            type: string
            x-ms-enum:
              name: KnownExtensionDataSourceStreams
              modelAsString: true
        extensionName:
          description: The name of the VM extension.
          type: string
          example: AzureSecurityLinuxAgent
        extensionSettings:
          description: The extension settings. The format is specific for particular extension.
          type: object
        inputDataSources:
          description: The list of data sources this extension needs data from.
          type: array
          items:
            type: string
        name:
          description: "A friendly name for the data source. \r\nThis name should be unique across all data sources (regardless of type) within the data collection rule."
          type: string
          example: myDataSource1
    LogFileTextSettings:
      description: Settings for text log files
      required:
        - recordStartTimestampFormat
      type: object
      properties:
        recordStartTimestampFormat:
          description: One of the supported timestamp formats
          enum:
            - ISO 8601
            - YYYY-MM-DD HH:MM:SS
            - M/D/YYYY HH:MM:SS AM/PM
            - Mon DD, YYYY HH:MM:SS
            - yyMMdd HH:mm:ss
            - ddMMyy HH:mm:ss
            - MMM d hh:mm:ss
            - dd/MMM/yyyy:HH:mm:ss zzz
            - yyyy-MM-ddTHH:mm:ssK
          type: string
          example: ISO 8601, yyyy-MM-dd HH:mm:ss
          x-ms-enum:
            name: KnownLogFileTextSettingsRecordStartTimestampFormat
            modelAsString: true
    LogFileSettings:
      description: Settings for different log file formats
      type: object
      properties:
        text:
          description: Text settings
          allOf:
            - $ref: '#/components/schemas/LogFileTextSettings'
    LogFilesDataSource:
      description: Definition of which custom log files will be collected by this data collection rule
      required:
        - filePatterns
        - format
        - streams
      type: object
      properties:
        streams:
          description: "List of streams that this data source will be sent to.\r\nA stream indicates what schema will be used for this data source"
          type: array
          items:
            type: string
        filePatterns:
          description: File Patterns where the log files are located
          type: array
          items:
            type: string
        format:
          description: The data format of the log files
          enum:
            - text
          type: string
          example: text
          x-ms-enum:
            name: KnownLogFilesDataSourceFormat
            modelAsString: true
        settings:
          description: The log files specific settings.
          allOf:
            - $ref: '#/components/schemas/LogFileSettings'
        name:
          description: "A friendly name for the data source. \r\nThis name should be unique across all data sources (regardless of type) within the data collection rule."
          type: string
          example: myDataSource1
    IisLogsDataSource:
      description: Enables IIS logs to be collected by this data collection rule.
      required:
        - streams
      type: object
      properties:
        streams:
          description: IIS streams
          type: array
          items:
            type: string
        logDirectories:
          description: Absolute paths file location
          type: array
          items:
            type: string
        name:
          description: "A friendly name for the data source. \r\nThis name should be unique across all data sources (regardless of type) within the data collection rule."
          type: string
          example: myDataSource1
    DataSourcesSpec:
      description: Specification of data sources that will be collected.
      type: object
      properties:
        performanceCounters:
          description: The list of performance counter data source configurations.
          type: array
          items:
            $ref: '#/components/schemas/PerfCounterDataSource'
          x-ms-identifiers:
            - name
        windowsEventLogs:
          description: The list of Windows Event Log data source configurations.
          type: array
          items:
            $ref: '#/components/schemas/WindowsEventLogDataSource'
          x-ms-identifiers:
            - name
        syslog:
          description: The list of Syslog data source configurations.
          type: array
          items:
            $ref: '#/components/schemas/SyslogDataSource'
          x-ms-identifiers:
            - name
        extensions:
          description: The list of Azure VM extension data source configurations.
          type: array
          items:
            $ref: '#/components/schemas/ExtensionDataSource'
          x-ms-identifiers:
            - name
        logFiles:
          description: The list of Log files source configurations.
          type: array
          items:
            $ref: '#/components/schemas/LogFilesDataSource'
          x-ms-identifiers:
            - name
        iisLogs:
          description: The list of IIS logs source configurations.
          type: array
          items:
            $ref: '#/components/schemas/IisLogsDataSource'
          x-ms-identifiers:
            - name
    LogAnalyticsDestination:
      description: Log Analytics destination.
      type: object
      properties:
        workspaceResourceId:
          description: The resource ID of the Log Analytics workspace.
          type: string
          example: /subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.OperationalInsights/workspaces/centralTeamWorkspace
        workspaceId:
          description: The Customer ID of the Log Analytics workspace.
          type: string
          readOnly: true
          example: 9ba8bc53-bd36-4156-8667-e983e7ae0e4f
          x-ms-mutability:
            - read
        name:
          description: "A friendly name for the destination. \r\nThis name should be unique across all destinations (regardless of type) within the data collection rule."
          type: string
          example: myDest1
    AzureMonitorMetricsDestination:
      description: Azure Monitor Metrics destination.
      type: object
      properties:
        name:
          description: "A friendly name for the destination. \r\nThis name should be unique across all destinations (regardless of type) within the data collection rule."
          type: string
          example: myDest1
    DestinationsSpec:
      description: Specification of destinations that can be used in data flows.
      type: object
      properties:
        logAnalytics:
          description: List of Log Analytics destinations.
          type: array
          items:
            $ref: '#/components/schemas/LogAnalyticsDestination'
          x-ms-identifiers:
            - name
        azureMonitorMetrics:
          description: Azure Monitor Metrics destination.
          allOf:
            - $ref: '#/components/schemas/AzureMonitorMetricsDestination'
    DataFlow:
      description: Definition of which streams are sent to which destinations.
      type: object
      properties:
        streams:
          description: List of streams for this data flow.
          type: array
          items:
            enum:
              - Microsoft-Event
              - Microsoft-InsightsMetrics
              - Microsoft-Perf
              - Microsoft-Syslog
              - Microsoft-WindowsEvent
            type: string
            x-ms-enum:
              name: KnownDataFlowStreams
              modelAsString: true
        destinations:
          description: List of destinations for this data flow.
          type: array
          items:
            type: string
        transformKql:
          description: The KQL query to transform stream data.
          type: string
        outputStream:
          description: The output stream of the transform. Only required if the transform changes data to a different stream.
          type: string
          example: '"Microsoft-SecurityEvent"'
    DataCollectionRule:
      description: Definition of what monitoring data to collect and where that data should be sent.
      type: object
      properties:
        description:
          description: Description of the data collection rule.
          type: string
        immutableId:
          description: The immutable ID of this data collection rule. This property is READ-ONLY.
          type: string
          readOnly: true
          example: dcr-b74e0d383fc9415abaa584ec41adece3
          x-ms-mutability:
            - read
        dataCollectionEndpointId:
          description: The resource ID of the data collection endpoint that this rule can be used with.
          type: string
          example: /subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.Insights/dataCollectionEndpoints/myCollectionEndpoint
        metadata:
          description: Metadata about the resource
          allOf:
            - $ref: '#/components/schemas/Metadata'
          readOnly: true
          x-ms-mutability:
            - read
        streamDeclarations:
          description: Declaration of custom streams used in this rule.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StreamDeclaration'
        dataSources:
          description: "The specification of data sources. \r\nThis property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint."
          allOf:
            - $ref: '#/components/schemas/DataSourcesSpec'
        destinations:
          description: The specification of destinations.
          allOf:
            - $ref: '#/components/schemas/DestinationsSpec'
        dataFlows:
          description: The specification of data flows.
          type: array
          items:
            $ref: '#/components/schemas/DataFlow'
          x-ms-identifiers: []
        provisioningState:
          description: The resource provisioning state.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
          type: string
          readOnly: true
          example: Creating
          x-ms-enum:
            name: KnownDataCollectionRuleProvisioningState
            modelAsString: true
          x-ms-mutability:
            - read
    DataCollectionRuleResource:
      description: Definition of ARM tracked top level resource.
      required:
        - location
      type: object
      properties:
        properties:
          description: Resource properties.
          allOf:
            - $ref: '#/components/schemas/DataCollectionRule'
          x-ms-client-flatten: true
        location:
          description: The geo-location where the resource lives.
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        kind:
          description: The kind of the resource.
          enum:
            - Linux
            - Windows
          type: string
          example: Linux
          x-ms-enum:
            name: KnownDataCollectionRuleResourceKind
            modelAsString: true
        id:
          description: Fully qualified ID of the resource.
          type: string
          readOnly: true
          example: /subscriptions/703362b3-f278-4e4b-9179-c76eaf41ffc2/resourceGroups/myResourceGroup/providers/Microsoft.Insights/dataCollectionRules/myCollectionRule
          x-ms-mutability:
            - read
        name:
          description: The name of the resource.
          type: string
          readOnly: true
          example: myCollectionRule
          x-ms-mutability:
            - read
        type:
          description: The type of the resource.
          type: string
          readOnly: true
          example: Microsoft.Insights/dataCollectionRules
          x-ms-mutability:
            - read
        etag:
          description: Resource entity tag (ETag).
          type: string
          readOnly: true
          x-ms-mutability:
            - read
        systemData:
          description: Metadata pertaining to creation and last modification of the resource.
          allOf:
            - $ref: '#/components/schemas/systemData'
          readOnly: true
          x-ms-mutability:
            - read
      x-ms-azure-resource: true
    DataCollectionRuleResourceListResult:
      description: A pageable list of resources.
      required:
        - value
      type: object
      properties:
        value:
          description: A list of resources.
          type: array
          items:
            $ref: '#/components/schemas/DataCollectionRuleResource'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
    ErrorResponseCommonV2:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    TestNotificationDetailsResponse:
      description: The details of the test notification results.
      type: object
      properties:
        context:
          type: object
          $ref: '#/components/schemas/Context'
        state:
          type: string
          description: The overall state
        completedTime:
          type: string
          description: The completed time
        createdTime:
          type: string
          description: The created time
        actionDetails:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/ActionDetail'
          description: The list of action detail
      required:
        - state
    ActionDetail:
      description: The action detail
      type: object
      properties:
        MechanismType:
          type: string
          description: The mechanism type
        Name:
          type: string
          description: The name of the action
        Status:
          type: string
          description: The status of the action
        SubState:
          type: string
          description: The substatus of the action
        SendTime:
          type: string
          description: The send time
        Detail:
          type: string
          description: The detail of the friendly error message
    Context:
      description: The context info
      type: object
      properties:
        notificationSource:
          type: string
          description: The source of the notification request
        contextType:
          type: string
          description: The context id type
    ActionGroupResource:
      description: An action group resource.
      type: object
      allOf:
        - $ref: '#/components/schemas/AzureResource'
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ActionGroup'
          description: The action groups properties of the resource.
    ActionGroupList:
      description: A list of action groups.
      type: object
      properties:
        value:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/ActionGroupResource'
          description: The list of action groups.
        nextLink:
          type: string
          description: Provides the link to retrieve the next set of elements.
    NotificationRequestBody:
      description: The request body which contain contact detail metadata
      type: object
      properties:
        alertType:
          type: string
          maxLength: 30
          description: The name of the supported alert type.
        emailReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/EmailReceiver'
          description: The list of email receivers that are part of this action group.
        smsReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/SmsReceiver'
          description: The list of SMS receivers that are part of this action group.
        webhookReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/WebhookReceiver'
          description: The list of webhook receivers that are part of this action group.
        itsmReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/ItsmReceiver'
          description: The list of ITSM receivers that are part of this action group.
        azureAppPushReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/AzureAppPushReceiver'
          description: The list of AzureAppPush receivers that are part of this action group.
        automationRunbookReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/AutomationRunbookReceiver'
          description: The list of AutomationRunbook receivers that are part of this action group.
        voiceReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/VoiceReceiver'
          description: The list of voice receivers that are part of this action group.
        logicAppReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/LogicAppReceiver'
          description: The list of logic app receivers that are part of this action group.
        azureFunctionReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/AzureFunctionReceiver'
          description: The list of azure function receivers that are part of this action group.
        armRoleReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/ArmRoleReceiver'
          description: The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles and only built-in roles are supported.
        eventHubReceivers:
          x-ms-identifiers: []
          type: array
          items:
            $ref: '#/components/schemas/EventHubReceiver'
          description: The list of event hub receivers that are part of this action group.
      required:
        - alertType
    EmailReceiver:
      description: An email receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the email receiver. Names must be unique across all receivers within an action group.
        emailAddress:
          type: string
          description: The email address of this receiver.
        useCommonAlertSchema:
          type: boolean
          default: false
          description: Indicates whether to use common alert schema.
        status:
          readOnly: true
          $ref: '#/components/schemas/ReceiverStatus'
          description: The receiver status of the e-mail.
      required:
        - name
        - emailAddress
    SmsReceiver:
      description: An SMS receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the SMS receiver. Names must be unique across all receivers within an action group.
        countryCode:
          type: string
          description: The country code of the SMS receiver.
        phoneNumber:
          type: string
          description: The phone number of the SMS receiver.
        status:
          readOnly: true
          $ref: '#/components/schemas/ReceiverStatus'
          description: The status of the receiver.
      required:
        - name
        - countryCode
        - phoneNumber
    WebhookReceiver:
      description: A webhook receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the webhook receiver. Names must be unique across all receivers within an action group.
        serviceUri:
          type: string
          description: The URI where webhooks should be sent.
        useCommonAlertSchema:
          type: boolean
          default: false
          description: Indicates whether to use common alert schema.
        useAadAuth:
          type: boolean
          default: false
          description: Indicates whether or not use AAD authentication.
        objectId:
          type: string
          description: Indicates the webhook app object Id for aad auth.
        identifierUri:
          type: string
          description: Indicates the identifier uri for aad auth.
        tenantId:
          type: string
          description: Indicates the tenant id for aad auth.
      required:
        - name
        - serviceUri
    ItsmReceiver:
      description: An Itsm receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the Itsm receiver. Names must be unique across all receivers within an action group.
        workspaceId:
          type: string
          description: OMS LA instance identifier.
        connectionId:
          type: string
          description: Unique identification of ITSM connection among multiple defined in above workspace.
        ticketConfiguration:
          type: string
          description: JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
        region:
          type: string
          description: Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'
      required:
        - name
        - workspaceId
        - connectionId
        - ticketConfiguration
        - region
    EventHubReceiver:
      description: An Event hub receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the Event hub receiver. Names must be unique across all receivers within an action group.
        eventHubNameSpace:
          type: string
          description: The Event Hub namespace
        eventHubName:
          type: string
          description: The name of the specific Event Hub queue
        useCommonAlertSchema:
          type: boolean
          default: false
          description: Indicates whether to use common alert schema.
        tenantId:
          type: string
          description: The tenant Id for the subscription containing this event hub
        subscriptionId:
          type: string
          description: The Id for the subscription containing this event hub
      required:
        - name
        - eventHubNameSpace
        - eventHubName
        - subscriptionId
    AzureAppPushReceiver:
      description: The Azure mobile App push notification receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.
        emailAddress:
          type: string
          description: The email address registered for the Azure mobile app.
      required:
        - name
        - emailAddress
    AutomationRunbookReceiver:
      description: The Azure Automation Runbook notification receiver.
      type: object
      properties:
        automationAccountId:
          type: string
          description: The Azure automation account Id which holds this runbook and authenticate to Azure resource.
        runbookName:
          type: string
          description: The name for this runbook.
        webhookResourceId:
          type: string
          description: The resource id for webhook linked to this runbook.
        isGlobalRunbook:
          type: boolean
          description: Indicates whether this instance is global runbook.
        name:
          type: string
          description: Indicates name of the webhook.
        serviceUri:
          type: string
          description: The URI where webhooks should be sent.
        useCommonAlertSchema:
          type: boolean
          default: false
          description: Indicates whether to use common alert schema.
      required:
        - automationAccountId
        - runbookName
        - webhookResourceId
        - isGlobalRunbook
    VoiceReceiver:
      description: A voice receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the voice receiver. Names must be unique across all receivers within an action group.
        countryCode:
          type: string
          description: The country code of the voice receiver.
        phoneNumber:
          type: string
          description: The phone number of the voice receiver.
      required:
        - name
        - countryCode
        - phoneNumber
    LogicAppReceiver:
      description: A logic app receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the logic app receiver. Names must be unique across all receivers within an action group.
        resourceId:
          type: string
          description: The azure resource id of the logic app receiver.
        callbackUrl:
          type: string
          description: The callback url where http request sent to.
        useCommonAlertSchema:
          type: boolean
          default: false
          description: Indicates whether to use common alert schema.
      required:
        - name
        - resourceId
        - callbackUrl
    AzureFunctionReceiver:
      description: An azure function receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the azure function receiver. Names must be unique across all receivers within an action group.
        functionAppResourceId:
          type: string
          description: The azure resource id of the function app.
        functionName:
          type: string
          description: The function name in the function app.
        httpTriggerUrl:
          type: string
          description: The http trigger url where http request sent to.
        useCommonAlertSchema:
          type: boolean
          default: false
          description: Indicates whether to use common alert schema.
      required:
        - name
        - functionAppResourceId
        - functionName
        - httpTriggerUrl
    ArmRoleReceiver:
      description: An arm role receiver.
      type: object
      properties:
        name:
          type: string
          description: The name of the arm role receiver. Names must be unique across all receivers within an action group.
        roleId:
          type: string
          description: The arm role id.
        useCommonAlertSchema:
          type: boolean
          default: false
          description: Indicates whether to use common alert schema.
      required:
        - name
        - roleId
    ReceiverStatus:
      type: string
      enum:
        - NotSpecified
        - Enabled
        - Disabled
      x-ms-enum:
        name: ReceiverStatus
        modelAsString: false
      description: Indicates the status of the receiver. Receivers that are not Enabled will not receive any communications.
    EnableRequest:
      description: Describes a receiver that should be resubscribed.
      type: object
      properties:
        receiverName:
          type: string
          description: The name of the receiver to resubscribe.
      required:
        - receiverName
    ActionGroupPatchBody:
      description: An action group object for the body of patch operations.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ActionGroupPatch'
          description: The action group settings for an update operation.
    ActionGroupPatch:
      description: An Azure action group for patch operations.
      type: object
      properties:
        enabled:
          type: boolean
          default: true
          description: Indicates whether this action group is enabled. If an action group is not enabled, then none of its actions will be activated.
    MetricAvailability:
      type: object
      properties:
        timeGrain:
          type: string
          format: duration
          description: the time grain specifies the aggregation interval for the metric. Expressed as a duration 'PT1M', 'P1D', etc.
        retention:
          type: string
          format: duration
          description: the retention period for the metric at the specified timegrain.  Expressed as a duration 'PT1M', 'P1D', etc.
      description: Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain.
    AggregationType:
      type: string
      description: the aggregation type of the metric.
      enum:
        - None
        - Average
        - Count
        - Minimum
        - Maximum
        - Total
      x-ms-enum:
        name: AggregationType
        modelAsString: false
    MetricClass:
      type: string
      description: The class of the metric.
      enum:
        - Availability
        - Transactions
        - Errors
        - Latency
        - Saturation
      x-ms-enum:
        name: MetricClass
        modelAsString: true
    MetricDefinition:
      type: object
      properties:
        isDimensionRequired:
          type: boolean
          description: Flag to indicate whether the dimension is required.
        resourceId:
          type: string
          description: the resource identifier of the resource that emitted the metric.
        namespace:
          type: string
          description: the namespace the metric belongs to.
        name:
          $ref: '#/components/schemas/LocalizableString'
          description: the name and the display name of the metric, i.e. it is a localizable string.
        displayDescription:
          type: string
          description: Detailed description of this metric.
        category:
          type: string
          description: Custom category name for this metric.
        metricClass:
          $ref: '#/components/schemas/MetricClass'
          description: The class of the metric.
        unit:
          $ref: '#/components/schemas/Unit'
          description: The unit of the metric.
        primaryAggregationType:
          $ref: '#/components/schemas/AggregationType'
          description: the primary aggregation type value defining how to use the values for display.
        supportedAggregationTypes:
          type: array
          items:
            $ref: '#/components/schemas/AggregationType'
          description: the collection of what aggregation types are supported.
        metricAvailabilities:
          type: array
          items:
            $ref: '#/components/schemas/MetricAvailability'
          x-ms-identifiers: []
          description: the collection of what aggregation intervals are available to be queried.
        id:
          type: string
          description: the resource identifier of the metric definition.
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/LocalizableString'
          x-ms-identifiers:
            - value
          description: the name and the display name of the dimension, i.e. it is a localizable string.
      description: Metric definition class specifies the metadata for a metric.
    MetricDefinitionCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MetricDefinition'
          description: the values for the metric definitions.
      required:
        - value
      description: Represents collection of metric definitions.
    RuleCondition:
      type: object
      discriminator:
        propertyName: odata.type
      properties:
        odata.type:
          type: string
          description: 'specifies the type of condition. This can be one of three types: ManagementEventRuleCondition (occurrences of management events), LocationThresholdRuleCondition (based on the number of failures of a web test), and ThresholdRuleCondition (based on the threshold of a metric).'
        dataSource:
          $ref: '#/components/schemas/RuleDataSource'
          description: the resource from which the rule collects its data. For this type dataSource will always be of type RuleMetricDataSource.
      required:
        - odata.type
      description: The condition that results in the alert rule being activated.
    RuleDataSource:
      type: object
      discriminator:
        propertyName: odata.type
      properties:
        odata.type:
          type: string
          description: 'specifies the type of data source. There are two types of rule data sources: RuleMetricDataSource and RuleManagementEventDataSource'
        resourceUri:
          type: string
          description: 'the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.'
        legacyResourceId:
          type: string
          description: 'the legacy resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.'
        resourceLocation:
          type: string
          description: the location of the resource.
        metricNamespace:
          type: string
          description: the namespace of the metric.
      required:
        - odata.type
      description: The resource from which the rule collects its data.
    RuleMetricDataSource:
      x-ms-discriminator-value: Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource
      type: object
      allOf:
        - $ref: '#/components/schemas/RuleDataSource'
      properties:
        metricName:
          type: string
          description: the name of the metric that defines what the rule monitors.
      description: A rule metric data source. The discriminator value is always RuleMetricDataSource in this case.
    RuleManagementEventClaimsDataSource:
      properties:
        emailAddress:
          type: string
          description: the email address.
      description: The claims for a rule management event data source.
    RuleManagementEventDataSource:
      x-ms-discriminator-value: Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource
      type: object
      allOf:
        - $ref: '#/components/schemas/RuleDataSource'
      properties:
        eventName:
          type: string
          description: the event name.
        eventSource:
          type: string
          description: the event source.
        level:
          type: string
          description: the level.
        operationName:
          type: string
          description: The name of the operation that should be checked for. If no name is provided, any operation will match.
        resourceGroupName:
          type: string
          description: the resource group name.
        resourceProviderName:
          type: string
          description: the resource provider name.
        status:
          type: string
          description: The status of the operation that should be checked for. If no status is provided, any status will match.
        subStatus:
          type: string
          description: the substatus.
        claims:
          $ref: '#/components/schemas/RuleManagementEventClaimsDataSource'
          description: the claims.
      description: A rule management event data source. The discriminator fields is always RuleManagementEventDataSource in this case.
    ConditionOperator:
      type: string
      enum:
        - GreaterThan
        - GreaterThanOrEqual
        - LessThan
        - LessThanOrEqual
      x-ms-enum:
        name: ConditionOperator
        modelAsString: false
      description: Operators allowed in the rule condition.
    TimeAggregationOperator:
      type: string
      enum:
        - Average
        - Minimum
        - Maximum
        - Total
        - Last
      x-ms-enum:
        name: TimeAggregationOperator
        modelAsString: false
      description: Aggregation operators allowed in a rule.
    ThresholdRuleCondition:
      x-ms-discriminator-value: Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition
      type: object
      allOf:
        - $ref: '#/components/schemas/RuleCondition'
      required:
        - threshold
        - operator
      properties:
        operator:
          $ref: '#/components/schemas/ConditionOperator'
          description: the operator used to compare the data and the threshold.
        threshold:
          type: number
          format: double
          description: the threshold value that activates the alert.
        windowSize:
          type: string
          format: duration
          description: the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.
        timeAggregation:
          $ref: '#/components/schemas/TimeAggregationOperator'
          description: the time aggregation operator. How the data that are collected should be combined over time. The default value is the PrimaryAggregationType of the Metric.
      description: A rule condition based on a metric crossing a threshold.
      example: "\"condition\": {\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition\",\r\n\t\"dataSource\": {\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource\",\r\n\t\"resourceUri\":\r\n\t\"/subscriptions/089bd33f-d4ec-47fe-8ba5-0753aa5c5b33/resourceGroups/Default-Storage-NorthCentralUS/providers/Microsoft.Web/serverfarms/Plan\",\r\n\t\"metricName\": \"CpuPercentage\",\r\n\t\"operator\": \"GreaterThan\"\r\n\t},\r\n\t\"threshold\": 90,\r\n\t\"windowSize\": \"PT15M\",\r\n\t\"timeAggregation\": \"Average\"}"
    LocationThresholdRuleCondition:
      x-ms-discriminator-value: Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition
      type: object
      allOf:
        - $ref: '#/components/schemas/RuleCondition'
      properties:
        windowSize:
          type: string
          format: duration
          description: the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.
        failedLocationCount:
          type: integer
          format: int32
          minimum: 0
          description: the number of locations that must fail to activate the alert.
      required:
        - failedLocationCount
      description: A rule condition based on a certain number of locations failing.
      example: "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition\",\r\n\t\"dataSource\": {\r\n\t\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource\",\r\n\t\t\"resourceUri\": \"/subscriptions/089bd33f-d4ec-47fe-8ba5-0753aa5c5b33/resourcegroups/Default-Web-CentralUS/providers/microsoft.insights/webtests/homepagetest-newrelapp2\",r\n\t\t\"metricName\": \"GSMT_AvRaW\"\r\n\t},\r\n\t\"windowSize\": \"PT5M\",\r\n\t\"failedLocationCount\": 1\r\n}"
    ManagementEventAggregationCondition:
      properties:
        operator:
          $ref: '#/components/schemas/ConditionOperator'
          description: the condition operator.
        threshold:
          type: number
          format: double
          description: The threshold value that activates the alert.
        windowSize:
          type: string
          format: duration
          description: the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.
      description: How the data that is collected should be combined over time.
    ManagementEventRuleCondition:
      x-ms-discriminator-value: Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition
      type: object
      allOf:
        - $ref: '#/components/schemas/RuleCondition'
      properties:
        aggregation:
          $ref: '#/components/schemas/ManagementEventAggregationCondition'
          description: How the data that is collected should be combined over time and when the alert is activated. Note that for management event alerts aggregation is optional – if it is not provided then any event will cause the alert to activate.
      description: A management event rule condition.
      example: "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition\",\r\n\t\"dataSource\": {\r\n\t\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource\",\r\n\t\t\"operationName\": \"\",\r\n\t\t\"resourceUri\": \"/subscriptions/089bd33f-d4ec-47fe-8ba5-0753aa5c5b33/resourceGroups/Default-Web-CentralUS/providers/Microsoft.Web/sites/TestLatestWebsite\",\r\n\t\t\"status\": \"failed\",\r\n\t\t\"claims\": { }\r\n\t},\r\n\t\"aggregation\": {\r\n\t\t\"threshold\": 1,\r\n\t\t\"windowSize\": \"PT5M\"\r\n\t}\r\n}"
    RuleAction:
      type: object
      discriminator:
        propertyName: odata.type
      properties:
        odata.type:
          type: string
          description: 'specifies the type of the action. There are two types of actions: RuleEmailAction and RuleWebhookAction.'
      required:
        - odata.type
      description: The action that is performed when the alert rule becomes active, and when an alert condition is resolved.
    RuleEmailAction:
      x-ms-discriminator-value: Microsoft.Azure.Management.Insights.Models.RuleEmailAction
      type: object
      allOf:
        - $ref: '#/components/schemas/RuleAction'
      properties:
        sendToServiceOwners:
          type: boolean
          description: Whether the administrators (service and co-administrators) of the service should be notified when the alert is activated.
        customEmails:
          type: array
          items:
            type: string
          description: the list of administrator's custom email addresses to notify of the activation of the alert.
      description: Specifies the action to send email when the rule condition is evaluated. The discriminator is always RuleEmailAction in this case.
      example: "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleEmailAction\",\r\n\t\"sendToServiceOwners\": true,\r\n\t\"customEmails\": [\"email1@contoso.com\",\"email2@contoso.com\" ]\r\n}"
    RuleWebhookAction:
      x-ms-discriminator-value: Microsoft.Azure.Management.Insights.Models.RuleWebhookAction
      type: object
      allOf:
        - $ref: '#/components/schemas/RuleAction'
      properties:
        serviceUri:
          type: string
          description: the service uri to Post the notification when the alert activates or resolves.
        properties:
          type: object
          additionalProperties:
            type: string
          description: the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.
      description: Specifies the action to post to service when the rule condition is evaluated. The discriminator is always RuleWebhookAction in this case.
      example: "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleWebhookAction\",\r\n\t\"serviceUri\": \"http://contoso.com/\",\r\n\t\"properties\": { }\r\n}"
    AlertRule:
      required:
        - name
        - isEnabled
        - condition
      properties:
        name:
          type: string
          description: the name of the alert rule.
        description:
          type: string
          description: the description of the alert rule that will be included in the alert email.
        provisioningState:
          type: string
          description: the provisioning state.
        isEnabled:
          type: boolean
          description: the flag that indicates whether the alert rule is enabled.
        condition:
          $ref: '#/components/schemas/RuleCondition'
          description: the condition that results in the alert rule being activated.
        action:
          $ref: '#/components/schemas/RuleAction'
          description: action that is performed when the alert rule becomes active, and when an alert condition is resolved.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/RuleAction'
          x-ms-identifiers: []
          description: the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.
        lastUpdatedTime:
          readOnly: true
          type: string
          format: date-time
          description: Last time the rule was updated in ISO8601 format.
      description: An alert rule.
    AlertRuleResource:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertRule'
          description: The alert rule properties of the resource.
      description: The alert rule resource.
    AlertRuleResourcePatch:
      description: The alert rule object for patch operations.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertRule'
          description: The properties of an alert rule.
    AlertRuleResourceCollection:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AlertRuleResource'
          description: the values for the alert rule resources.
      description: Represents a collection of alert rule resources.
    LogSearchRuleResource:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LogSearchRule'
          description: The rule properties of the resource.
      description: The Log Search Rule resource.
    LogSearchRuleResourcePatch:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LogSearchRulePatch'
          description: The log search rule properties of the resource.
      description: The log search rule resource for patch operations.
    LogSearchRuleResourceCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LogSearchRuleResource'
          description: The values for the Log Search Rule resources.
      description: Represents a collection of Log Search rule resources.
    Source:
      type: object
      description: Specifies the log search query.
      properties:
        query:
          type: string
          description: Log search query. Required for action type - AlertingAction
        authorizedResources:
          type: array
          items:
            type: string
          description: List of  Resource referred into query
        dataSourceId:
          type: string
          description: The resource uri over which log search query is to be run.
        queryType:
          $ref: '#/components/schemas/QueryType'
          description: Set value to 'ResultCount' .
      required:
        - dataSourceId
    Schedule:
      type: object
      description: Defines how often to run the search and the time interval.
      properties:
        frequencyInMinutes:
          type: integer
          format: int32
          description: frequency (in minutes) at which rule condition should be evaluated.
        timeWindowInMinutes:
          type: integer
          format: int32
          description: Time window for which data needs to be fetched for query (should be greater than or equal to frequencyInMinutes).
      required:
        - frequencyInMinutes
        - timeWindowInMinutes
    TriggerCondition:
      description: The condition that results in the Log Search rule.
      properties:
        thresholdOperator:
          $ref: '#/components/schemas/ConditionalOperator'
          description: Evaluation operation for rule - 'GreaterThan' or 'LessThan.
        threshold:
          description: Result or count threshold based on which rule should be triggered.
          format: double
          type: number
        metricTrigger:
          $ref: '#/components/schemas/LogMetricTrigger'
          description: Trigger condition for metric query rule
      required:
        - thresholdOperator
        - threshold
      type: object
    AzNsActionGroup:
      type: object
      properties:
        actionGroup:
          type: array
          description: Azure Action Group reference.
          items:
            type: string
        emailSubject:
          type: string
          description: Custom subject override for all email ids in Azure action group
        customWebhookPayload:
          type: string
          description: Custom payload to be sent for all webhook URI in Azure action group
      description: Azure action group
    LogMetricTrigger:
      type: object
      properties:
        thresholdOperator:
          $ref: '#/components/schemas/ConditionalOperator'
          description: Evaluation operation for Metric -'GreaterThan' or 'LessThan' or 'Equal'.
        threshold:
          format: double
          type: number
          description: The threshold of the metric trigger.
        metricTriggerType:
          $ref: '#/components/schemas/MetricTriggerType'
          description: Metric Trigger Type - 'Consecutive' or 'Total'
        metricColumn:
          type: string
          description: Evaluation of metric on a particular column
      description: A log metrics trigger descriptor.
    ConditionalOperator:
      type: string
      enum:
        - GreaterThanOrEqual
        - LessThanOrEqual
        - GreaterThan
        - LessThan
        - Equal
      default: GreaterThanOrEqual
      x-ms-enum:
        name: ConditionalOperator
        modelAsString: true
      description: Result Condition Evaluation criteria.
    MetricTriggerType:
      type: string
      enum:
        - Consecutive
        - Total
      default: Consecutive
      x-ms-enum:
        name: metricTriggerType
        modelAsString: true
      description: Metric Trigger Evaluation Type
    AlertSeverity:
      type: string
      enum:
        - '0'
        - '1'
        - '2'
        - '3'
        - '4'
      x-ms-enum:
        name: AlertSeverity
        modelAsString: true
      description: Severity Level of Alert
    QueryType:
      type: string
      enum:
        - ResultCount
      x-ms-enum:
        name: QueryType
        modelAsString: true
      description: Set value to 'ResultAccount'
    LogSearchRule:
      type: object
      description: Log Search Rule Definition
      properties:
        createdWithApiVersion:
          type: string
          readOnly: true
          description: The api-version used when creating this alert rule
        isLegacyLogAnalyticsRule:
          type: boolean
          readOnly: true
          description: True if alert rule is legacy Log Analytic rule
        description:
          type: string
          description: The description of the Log Search rule.
        displayName:
          type: string
          description: The display name of the alert rule
        autoMitigate:
          type: boolean
          default: false
          description: The flag that indicates whether the alert should be automatically resolved or not. The default is false.
        enabled:
          type: string
          description: The flag which indicates whether the Log Search rule is enabled. Value should be true or false
          enum:
            - 'true'
            - 'false'
          x-ms-enum:
            name: enabled
            modelAsString: true
        lastUpdatedTime:
          readOnly: true
          type: string
          format: date-time
          description: Last time the rule was updated in IS08601 format.
        provisioningState:
          readOnly: true
          type: string
          enum:
            - Succeeded
            - Deploying
            - Canceled
            - Failed
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          description: Provisioning state of the scheduled query rule
        source:
          $ref: '#/components/schemas/Source'
          description: Data Source against which rule will Query Data
        schedule:
          $ref: '#/components/schemas/Schedule'
          description: Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction
        action:
          $ref: '#/components/schemas/Action'
          description: Action needs to be taken on rule execution.
      required:
        - source
        - action
    LogSearchRulePatch:
      type: object
      description: Log Search Rule Definition for Patching
      properties:
        enabled:
          type: string
          description: The flag which indicates whether the Log Search rule is enabled. Value should be true or false
          enum:
            - 'true'
            - 'false'
          x-ms-enum:
            name: enabled
            modelAsString: true
    Action:
      type: object
      discriminator:
        propertyName: odata.type
      properties:
        odata.type:
          type: string
          description: Specifies the action. Supported values - AlertingAction, LogToMetricAction
      required:
        - odata.type
      description: Action descriptor.
    AlertingAction:
      description: Specify action need to be taken when rule type is Alert
      x-ms-discriminator-value: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction
      type: object
      allOf:
        - $ref: '#/components/schemas/Action'
      properties:
        severity:
          $ref: '#/components/schemas/AlertSeverity'
          description: Severity of the alert
        aznsAction:
          $ref: '#/components/schemas/AzNsActionGroup'
          description: Azure action group reference.
        throttlingInMin:
          type: integer
          format: int32
          description: time (in minutes) for which Alerts should be throttled or suppressed.
        trigger:
          $ref: '#/components/schemas/TriggerCondition'
          description: The trigger condition that results in the alert rule being.
      required:
        - trigger
        - severity
    Dimension:
      type: object
      description: Specifies the criteria for converting log to metric.
      properties:
        name:
          type: string
          description: Name of the dimension
        operator:
          type: string
          description: Operator for dimension values
          enum:
            - Include
          x-ms-enum:
            name: operator
            modelAsString: true
        values:
          type: array
          items:
            type: string
          description: List of dimension values
      required:
        - name
        - operator
        - values
    Criteria:
      type: object
      description: Specifies the criteria for converting log to metric.
      properties:
        metricName:
          type: string
          description: Name of the metric
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          x-ms-identifiers:
            - name
          description: List of Dimensions for creating metric
      required:
        - metricName
    LogToMetricAction:
      description: Specify action need to be taken when rule type is converting log to metric
      x-ms-discriminator-value: Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction
      type: object
      allOf:
        - $ref: '#/components/schemas/Action'
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/Criteria'
          x-ms-identifiers:
            - metricName
          description: Criteria of Metric
      required:
        - criteria
    ErrorContract:
      description: Describes the format of Error response.
      type: object
      properties:
        error:
          description: The error details.
          $ref: '#/components/schemas/ErrorResponse'
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: The Private Endpoint Connection resource.
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A private link resource
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
    ScaleCapacity:
      type: object
      required:
        - minimum
        - maximum
        - default
      properties:
        minimum:
          type: string
          description: the minimum number of instances for the resource.
        maximum:
          type: string
          description: the maximum number of instances for the resource. The actual maximum number of instances is limited by the cores that are available in the subscription.
        default:
          type: string
          description: the number of instances that will be set if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default.
      description: The number of instances that can be used during this profile.
    MetricTrigger:
      type: object
      required:
        - metricName
        - metricResourceUri
        - timeGrain
        - statistic
        - timeWindow
        - timeAggregation
        - operator
        - threshold
      properties:
        metricName:
          type: string
          description: the name of the metric that defines what the rule monitors.
        metricNamespace:
          type: string
          description: the namespace of the metric that defines what the rule monitors.
        metricResourceUri:
          type: string
          description: the resource identifier of the resource the rule monitors.
        metricResourceLocation:
          type: string
          description: the location of the resource the rule monitors.
        timeGrain:
          type: string
          format: duration
          description: the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute.
        statistic:
          type: string
          description: the metric statistic type. How the metrics from multiple instances are combined.
          enum:
            - Average
            - Min
            - Max
            - Sum
            - Count
          x-ms-enum:
            name: MetricStatisticType
            modelAsString: false
        timeWindow:
          type: string
          format: duration
          description: the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes.
        timeAggregation:
          type: string
          description: time aggregation type. How the data that is collected should be combined over time. The default value is Average.
          enum:
            - Average
            - Minimum
            - Maximum
            - Total
            - Count
            - Last
          x-ms-enum:
            name: TimeAggregationType
            modelAsString: false
        operator:
          type: string
          description: the operator that is used to compare the metric data and the threshold.
          enum:
            - Equals
            - NotEquals
            - GreaterThan
            - GreaterThanOrEqual
            - LessThan
            - LessThanOrEqual
          x-ms-enum:
            name: ComparisonOperationType
            modelAsString: false
        threshold:
          type: number
          format: double
          description: the threshold of the metric that triggers the scale action.
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleMetricDimension'
          x-ms-identifiers: []
          description: 'List of dimension conditions. For example: [{"DimensionName":"AppName","Operator":"Equals","Values":["App1"]},{"DimensionName":"Deployment","Operator":"Equals","Values":["default"]}].'
        dividePerInstance:
          type: boolean
          description: a value indicating whether metric should divide per instance.
      description: The trigger that results in a scaling action.
    ScaleAction:
      type: object
      required:
        - direction
        - type
        - cooldown
      properties:
        direction:
          type: string
          description: the scale direction. Whether the scaling action increases or decreases the number of instances.
          enum:
            - None
            - Increase
            - Decrease
          x-ms-enum:
            name: ScaleDirection
            modelAsString: false
        type:
          type: string
          description: the type of action that should occur when the scale rule fires.
          enum:
            - ChangeCount
            - PercentChangeCount
            - ExactCount
            - ServiceAllowedNextValue
          x-ms-enum:
            name: ScaleType
            modelAsString: false
        value:
          type: string
          description: the number of instances that are involved in the scaling action. This value must be 1 or greater. The default value is 1.
          default: '1'
        cooldown:
          type: string
          format: duration
          description: the amount of time to wait since the last scaling action before this action occurs. It must be between 1 week and 1 minute in ISO 8601 format.
      description: The parameters for the scaling action.
    ScaleRule:
      type: object
      required:
        - scaleAction
        - metricTrigger
      properties:
        metricTrigger:
          $ref: '#/components/schemas/MetricTrigger'
          description: the trigger that results in a scaling action.
        scaleAction:
          $ref: '#/components/schemas/ScaleAction'
          description: the parameters for the scaling action.
      description: A rule that provide the triggers and parameters for the scaling action.
    TimeWindow:
      type: object
      properties:
        timeZone:
          type: string
          description: 'the timezone of the start and end times for the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time'
        start:
          type: string
          format: date-time
          description: the start time for the profile in ISO 8601 format.
        end:
          type: string
          format: date-time
          description: the end time for the profile in ISO 8601 format.
      required:
        - start
        - end
      description: A specific date-time for the profile.
    RecurrentSchedule:
      type: object
      required:
        - timeZone
        - days
        - hours
        - minutes
      properties:
        timeZone:
          type: string
          description: 'the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time'
        days:
          type: array
          items:
            type: string
          description: the collection of days that the profile takes effect on. Possible values are Sunday through Saturday.
        hours:
          type: array
          items:
            type: integer
            format: int32
          description: A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times are not supported).
        minutes:
          type: array
          items:
            type: integer
            format: int32
          description: A collection of minutes at which the profile takes effect at.
      description: The scheduling constraints for when the profile begins.
    Recurrence:
      type: object
      required:
        - frequency
        - schedule
      properties:
        frequency:
          type: string
          description: the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The frequency property specifies that the schedule is repeated weekly.
          enum:
            - None
            - Second
            - Minute
            - Hour
            - Day
            - Week
            - Month
            - Year
          x-ms-enum:
            name: RecurrenceFrequency
            modelAsString: false
        schedule:
          $ref: '#/components/schemas/RecurrentSchedule'
          description: the scheduling constraints for when the profile begins.
      description: The repeating times at which this profile begins. This element is not used if the FixedDate element is used.
    AutoscaleProfile:
      type: object
      required:
        - rules
        - name
        - capacity
      properties:
        name:
          type: string
          description: the name of the profile.
        capacity:
          $ref: '#/components/schemas/ScaleCapacity'
          description: the number of instances that can be used during this profile.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ScaleRule'
          x-ms-identifiers: []
          description: the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified.
        fixedDate:
          $ref: '#/components/schemas/TimeWindow'
          description: the specific date-time for the profile. This element is not used if the Recurrence element is used.
        recurrence:
          $ref: '#/components/schemas/Recurrence'
          description: the repeating times at which this profile begins. This element is not used if the FixedDate element is used.
      description: Autoscale profile.
    PredictiveAutoscalePolicy:
      type: object
      required:
        - scaleMode
      properties:
        scaleMode:
          type: string
          description: the predictive autoscale mode
          enum:
            - Disabled
            - ForecastOnly
            - Enabled
          x-ms-enum:
            name: PredictiveAutoscalePolicyScaleMode
            modelAsString: false
        scaleLookAheadTime:
          type: string
          format: duration
          description: the amount of time to specify by which instances are launched in advance. It must be between 1 minute and 60 minutes in ISO 8601 format.
      description: The parameters for enabling predictive autoscale.
    EmailNotification:
      type: object
      properties:
        sendToSubscriptionAdministrator:
          type: boolean
          description: a value indicating whether to send email to subscription administrator.
          default: false
        sendToSubscriptionCoAdministrators:
          type: boolean
          description: a value indicating whether to send email to subscription co-administrators.
          default: false
        customEmails:
          type: array
          items:
            type: string
          description: the custom e-mails list. This value can be null or empty, in which case this attribute will be ignored.
      description: Email notification of an autoscale event.
    WebhookNotification:
      type: object
      properties:
        serviceUri:
          type: string
          description: the service address to receive the notification.
        properties:
          type: object
          additionalProperties:
            type: string
          description: a property bag of settings. This value can be empty.
      description: Webhook notification of an autoscale event.
    AutoscaleNotification:
      type: object
      required:
        - operation
      properties:
        operation:
          type: string
          description: the operation associated with the notification and its value must be "scale"
          enum:
            - Scale
          x-ms-enum:
            name: OperationType
            modelAsString: false
        email:
          $ref: '#/components/schemas/EmailNotification'
          description: the email notification.
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/WebhookNotification'
          x-ms-identifiers: []
          description: the collection of webhook notifications.
      description: Autoscale notification.
    AutoscaleSetting:
      type: object
      required:
        - profiles
      properties:
        profiles:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/AutoscaleProfile'
          x-ms-identifiers: []
          description: the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified.
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/AutoscaleNotification'
          x-ms-identifiers: []
          description: the collection of notifications.
        enabled:
          type: boolean
          description: the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default value is 'false'.
          default: false
        predictiveAutoscalePolicy:
          $ref: '#/components/schemas/PredictiveAutoscalePolicy'
          description: the predictive autoscale policy mode.
        name:
          type: string
          description: the name of the autoscale setting.
        targetResourceUri:
          type: string
          description: the resource identifier of the resource that the autoscale setting should be added to.
        targetResourceLocation:
          type: string
          description: the location of the resource that the autoscale setting should be added to.
      description: A setting that contains all of the configuration for the automatic scaling of a resource.
    AutoscaleSettingResource:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AutoscaleSetting'
          description: The autoscale setting of the resource.
      description: The autoscale setting resource.
    AutoscaleSettingResourcePatch:
      type: object
      description: The autoscale setting object for patch operations.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AutoscaleSetting'
          description: The autoscale setting properties of the update operation.
    AutoscaleSettingResourceCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AutoscaleSettingResource'
          description: the values for the autoscale setting resources.
        nextLink:
          type: string
          description: URL to get the next set of results.
      required:
        - value
      description: Represents a collection of autoscale setting resources.
    AutoscaleErrorResponse:
      description: Describes the format of Error response.
      type: object
      properties:
        error:
          type: object
          description: The error object.
          properties:
            code:
              description: One of a server-defined set of error codes.
              type: string
            message:
              description: A human-readable representation of the error.
              type: string
            target:
              description: The target of the particular error.
              type: string
            details:
              description: A human-readable representation of the error's details.
              type: string
        systemData:
          readOnly: true
          description: The system metadata related to the response.
          $ref: '#/components/schemas/systemData'
    ScaleRuleMetricDimension:
      type: object
      required:
        - DimensionName
        - Operator
        - Values
      properties:
        DimensionName:
          type: string
          description: Name of the dimension.
        Operator:
          type: string
          description: the dimension operator. Only 'Equals' and 'NotEquals' are supported. 'Equals' being equal to any of the values. 'NotEquals' being not equal to all of the values
          enum:
            - Equals
            - NotEquals
          x-ms-enum:
            name: ScaleRuleMetricDimensionOperationType
            modelAsString: true
        Values:
          type: array
          items:
            type: string
          description: 'list of dimension values. For example: ["App1","App2"].'
      description: Specifies an auto scale rule metric dimension.
    PredictiveResponse:
      type: object
      properties:
        timespan:
          type: string
          description: The timespan for which the data was retrieved. Its value consists of two datetimes concatenated, separated by '/'.  This may be adjusted in the future and returned back from what was originally requested.
        interval:
          type: string
          format: duration
          description: The interval (window size) for which the metric data was returned in.  This may be adjusted in the future and returned back from what was originally requested.  This is not present if a metadata request was made.
        metricName:
          type: string
          description: The metrics being queried
        targetResourceId:
          type: string
          description: resource of the predictive metric.
        data:
          type: array
          items:
            $ref: '#/components/schemas/PredictiveValue'
          x-ms-identifiers: []
          description: the value of the collection.
      description: The response to a metrics query.
    PredictiveValue:
      type: object
      required:
        - timeStamp
        - value
      properties:
        timeStamp:
          type: string
          format: date-time
          description: the timestamp for the metric value in ISO 8601 format.
        value:
          type: number
          format: double
          description: Predictive value in this time bucket.
      description: Represents a predictive metric value in the given bucket.
    MetricSettings:
      type: object
      properties:
        timeGrain:
          type: string
          format: duration
          description: the timegrain of the metric in ISO8601 format.
        category:
          type: string
          description: Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of Diagnostic metric categories for a resource, first perform a GET diagnostic settings operation.
        enabled:
          type: boolean
          description: a value indicating whether this category is enabled.
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
          description: the retention policy for this category.
      required:
        - enabled
      description: Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular metric.
    LogSettings:
      type: object
      properties:
        category:
          type: string
          description: Name of a Diagnostic Log category for a resource type this setting is applied to. To obtain the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation.
        categoryGroup:
          type: string
          description: Name of a Diagnostic Log category group for a resource type this setting is applied to. To obtain the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation.
        enabled:
          type: boolean
          description: a value indicating whether this log is enabled.
        retentionPolicy:
          $ref: '#/components/schemas/RetentionPolicy'
          description: the retention policy for this log.
      required:
        - enabled
      description: Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular log.
    DiagnosticSettings:
      type: object
      properties:
        storageAccountId:
          type: string
          description: The resource ID of the storage account to which you would like to send Diagnostic Logs.
        serviceBusRuleId:
          type: string
          description: The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.
        eventHubAuthorizationRuleId:
          type: string
          description: The resource Id for the event hub authorization rule.
        eventHubName:
          type: string
          description: The name of the event hub. If none is specified, the default event hub will be selected.
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricSettings'
          description: The list of metric settings.
        logs:
          type: array
          items:
            $ref: '#/components/schemas/LogSettings'
          description: The list of logs settings.
        workspaceId:
          type: string
          description: 'The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2'
        marketplacePartnerId:
          type: string
          description: The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs.
        logAnalyticsDestinationType:
          type: string
          description: 'A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized service identity>_<normalized category name>. Possible values are: Dedicated and null (null is default.)'
      description: The diagnostic settings.
    DiagnosticSettingsResource:
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiagnosticSettings'
          description: Properties of a Diagnostic Settings Resource.
        systemData:
          readOnly: true
          description: The system metadata related to this resource.
          $ref: '#/components/schemas/systemData'
      description: The diagnostic setting resource.
    DiagnosticSettingsResourceCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticSettingsResource'
          description: The collection of diagnostic settings resources;.
      description: Represents a collection of alert rule resources.
  parameters:
    LogProfileNameParameter:
      name: logProfileName
      in: path
      description: The name of the log profile.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceUriParameter:
      name: resourceUri
      in: path
      description: The identifier of the resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    StartTimeParameter:
      name: startTime
      in: query
      description: The ISO 8601 conform Date start time from which to query for metric namespaces.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TimespanParameter:
      name: timespan
      in: query
      description: The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IntervalParameter:
      name: interval
      in: query
      description: The interval (i.e. timegrain) of the query.
      required: true
      x-ms-parameter-location: method
      schema:
        format: duration
        type: string
    MetricNamesParameter:
      name: metricName
      in: query
      description: 'The names of the metrics (comma separated) to retrieve. Special case: If a metricname itself has a comma in it then use %2 to indicate it. Eg: ''Metric,Name1'' should be **''Metric%2Name1''**'
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AggregationsParameter:
      name: aggregation
      in: query
      description: The list of aggregation types (comma separated) to retrieve.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    TopParameter:
      name: top
      in: query
      description: |-
        The maximum number of records to retrieve.
        Valid only if $filter is specified.
        Defaults to 10.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    OrderByParameter:
      name: orderby
      in: query
      description: |-
        The aggregation to use for sorting results and the direction of the sort.
        Only one order can be specified.
        Examples: sum asc.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ResultTypeParameter:
      name: resultType
      in: query
      description: Reduces the set of data collected. The syntax allowed depends on the operation. See the operation's description for details.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - Data
          - Metadata
        x-ms-enum:
          name: ResultType
          modelAsString: false
        type: string
    MetricNamespaceParameter:
      name: metricNamespace
      in: query
      description: Metric namespace to query metric definitions for.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateLinkScopeName:
      name: scopeName
      in: path
      description: The name of the Azure Monitor PrivateLinkScope resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GroupNameParameter:
      name: groupName
      in: path
      description: The name of the private link resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RuleNameParameter:
      name: ruleName
      in: path
      description: The name of the rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    StatusNameParameter:
      name: statusName
      in: path
      description: The name of the status.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AssociationNameParameter:
      name: associationName
      in: path
      description: The name of the association. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DataCollectionEndpointNameParameter:
      name: dataCollectionEndpointName
      in: path
      description: The name of the data collection endpoint. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DataCollectionRuleNameParameter:
      name: dataCollectionRuleName
      in: path
      description: The name of the data collection rule. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SelectParameter:
      name: $select
      in: query
      description: 'Used to fetch events with only the given properties.<br>The **$select** argument is a comma separated list of property names to be returned. Possible values are: *authorization*, *claims*, *correlationId*, *description*, *eventDataId*, *eventName*, *eventTimestamp*, *httpRequest*, *level*, *operationId*, *operationName*, *properties*, *resourceGroupName*, *resourceProviderName*, *resourceId*, *status*, *submissionTimestamp*, *subStatus*, *subscriptionId*'
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    NameParameter:
      name: name
      in: path
      description: The name of the diagnostic setting.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SensitivitiesParameter:
      name: sensitivities
      in: query
      description: The list of sensitivities (comma separated) to retrieve.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    BaselineResultTypeParameter:
      name: resultType
      in: query
      description: Allows retrieving only metadata of the baseline. On data request all information is retrieved.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - Data
          - Metadata
        x-ms-enum:
          name: ResultType
          modelAsString: false
        type: string
    ActivityLogAlertNameParameter:
      name: activityLogAlertName
      in: path
      description: The name of the Activity Log Alert rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    NotificationIdParameter:
      name: notificationId
      in: path
      description: The notification id
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ActionGroupNameParameter:
      name: actionGroupName
      in: path
      description: The name of the action group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: The filter to apply on the operation. For more information please see https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AutoscaleSettingNameParameter:
      name: autoscaleSettingName
      in: path
      description: The autoscale setting name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AggregationParameter:
      name: aggregation
      in: query
      description: The list of aggregation types (comma separated) to retrieve.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  x-stackQL-resources:
    operations:
      id: azure.monitor.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Insights~1operations?api-version=2015-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    log_profiles:
      id: azure.monitor.log_profiles
      name: log_profiles
      title: Log_profiles
      methods:
        LogProfiles_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1logprofiles~1{logProfileName}?api-version=2016-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LogProfiles_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1logprofiles~1{logProfileName}?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LogProfiles_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1logprofiles~1{logProfileName}?api-version=2016-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LogProfiles_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1logprofiles~1{logProfileName}?api-version=2016-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LogProfiles_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1logprofiles?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_profiles/methods/LogProfiles_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/log_profiles/methods/LogProfiles_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/log_profiles/methods/LogProfiles_Delete'
    metric_namespaces:
      id: azure.monitor.metric_namespaces
      name: metric_namespaces
      title: Metric_namespaces
      methods:
        MetricNamespaces_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1microsoft.insights~1metricNamespaces?api-version=2017-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metric_namespaces/methods/MetricNamespaces_List'
        insert: []
        update: []
        delete: []
    metrics:
      id: azure.monitor.metrics
      name: metrics
      title: Metrics
      methods:
        Metrics_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1metrics?api-version=2018-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metrics/methods/Metrics_List'
        insert: []
        update: []
        delete: []
    private_link_scopes:
      id: azure.monitor.private_link_scopes
      name: private_link_scopes
      title: Private_link_scopes
      methods:
        PrivateLinkScopes_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1microsoft.insights~1privateLinkScopes?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateLinkScopes_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.insights~1privateLinkScopes?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateLinkScopes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.insights~1privateLinkScopes~1{scopeName}?api-version=2021-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateLinkScopes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.insights~1privateLinkScopes~1{scopeName}?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateLinkScopes_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.insights~1privateLinkScopes~1{scopeName}?api-version=2021-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PrivateLinkScopes_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.insights~1privateLinkScopes~1{scopeName}?api-version=2021-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_scopes/methods/PrivateLinkScopes_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/private_link_scopes/methods/PrivateLinkScopes_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_link_scopes/methods/PrivateLinkScopes_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_link_scopes/methods/PrivateLinkScopes_Delete'
    private_link_scope_operation_status:
      id: azure.monitor.private_link_scope_operation_status
      name: private_link_scope_operation_status
      title: Private_link_scope_operation_status
      methods:
        PrivateLinkScopeOperationStatus_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1microsoft.insights~1privateLinkScopeOperationStatuses~1{asyncOperationId}?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    private_link_resources:
      id: azure.monitor.private_link_resources
      name: private_link_resources
      title: Private_link_resources
      methods:
        PrivateLinkResources_ListByPrivateLinkScope:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1privateLinkResources?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateLinkResources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1privateLinkResources~1{groupName}?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_ListByPrivateLinkScope'
        insert: []
        update: []
        delete: []
    private_endpoint_connections:
      id: azure.monitor.private_endpoint_connections
      name: private_endpoint_connections
      title: Private_endpoint_connections
      methods:
        PrivateEndpointConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateEndpointConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2021-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PrivateEndpointConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2021-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateEndpointConnections_ListByPrivateLinkScope:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1privateEndpointConnections?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_ListByPrivateLinkScope'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_Delete'
    private_link_scoped_resources:
      id: azure.monitor.private_link_scoped_resources
      name: private_link_scoped_resources
      title: Private_link_scoped_resources
      methods:
        PrivateLinkScopedResources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1scopedResources~1{name}?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateLinkScopedResources_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1scopedResources~1{name}?api-version=2021-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        PrivateLinkScopedResources_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1scopedResources~1{name}?api-version=2021-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        PrivateLinkScopedResources_ListByPrivateLinkScope:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1privateLinkScopes~1{scopeName}~1scopedResources?api-version=2021-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_scoped_resources/methods/PrivateLinkScopedResources_ListByPrivateLinkScope'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_link_scoped_resources/methods/PrivateLinkScopedResources_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_link_scoped_resources/methods/PrivateLinkScopedResources_Delete'
    alert_rule_incidents:
      id: azure.monitor.alert_rule_incidents
      name: alert_rule_incidents
      title: Alert_rule_incidents
      methods:
        AlertRuleIncidents_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1microsoft.insights~1alertrules~1{ruleName}~1incidents~1{incidentName}?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AlertRuleIncidents_ListByAlertRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1microsoft.insights~1alertrules~1{ruleName}~1incidents?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_rule_incidents/methods/AlertRuleIncidents_ListByAlertRule'
        insert: []
        update: []
        delete: []
    vm_insights:
      id: azure.monitor.vm_insights
      name: vm_insights
      title: Vm_insights
      methods:
        VMInsights_GetOnboardingStatus:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1vmInsightsOnboardingStatuses~1default?api-version=2018-11-27-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    metric_alerts:
      id: azure.monitor.metric_alerts
      name: metric_alerts
      title: Metric_alerts
      methods:
        MetricAlerts_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1metricAlerts?api-version=2018-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MetricAlerts_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1metricAlerts?api-version=2018-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MetricAlerts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1metricAlerts~1{ruleName}?api-version=2018-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MetricAlerts_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1metricAlerts~1{ruleName}?api-version=2018-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MetricAlerts_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1metricAlerts~1{ruleName}?api-version=2018-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MetricAlerts_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1metricAlerts~1{ruleName}?api-version=2018-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metric_alerts/methods/MetricAlerts_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/metric_alerts/methods/MetricAlerts_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/metric_alerts/methods/MetricAlerts_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/metric_alerts/methods/MetricAlerts_Delete'
    metric_alerts_status:
      id: azure.monitor.metric_alerts_status
      name: metric_alerts_status
      title: Metric_alerts_status
      methods:
        MetricAlertsStatus_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1metricAlerts~1{ruleName}~1status?api-version=2018-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        MetricAlertsStatus_ListByName:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1metricAlerts~1{ruleName}~1status~1{statusName}?api-version=2018-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metric_alerts_status/methods/MetricAlertsStatus_ListByName'
          - $ref: '#/components/x-stackQL-resources/metric_alerts_status/methods/MetricAlertsStatus_List'
        insert: []
        update: []
        delete: []
    data_collection_rule_associations:
      id: azure.monitor.data_collection_rule_associations
      name: data_collection_rule_associations
      title: Data_collection_rule_associations
      methods:
        DataCollectionRuleAssociations_ListByResource:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1dataCollectionRuleAssociations?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRuleAssociations_ListByRule:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionRules~1{dataCollectionRuleName}~1associations?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRuleAssociations_ListByDataCollectionEndpoint:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionEndpoints~1{dataCollectionEndpointName}~1associations?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRuleAssociations_Get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1dataCollectionRuleAssociations~1{associationName}?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRuleAssociations_Create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1dataCollectionRuleAssociations~1{associationName}?api-version=2021-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DataCollectionRuleAssociations_Delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1dataCollectionRuleAssociations~1{associationName}?api-version=2021-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_collection_rule_associations/methods/DataCollectionRuleAssociations_ListByRule'
          - $ref: '#/components/x-stackQL-resources/data_collection_rule_associations/methods/DataCollectionRuleAssociations_ListByDataCollectionEndpoint'
          - $ref: '#/components/x-stackQL-resources/data_collection_rule_associations/methods/DataCollectionRuleAssociations_ListByResource'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_collection_rule_associations/methods/DataCollectionRuleAssociations_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_collection_rule_associations/methods/DataCollectionRuleAssociations_Delete'
    tenant_activity_logs:
      id: azure.monitor.tenant_activity_logs
      name: tenant_activity_logs
      title: Tenant_activity_logs
      methods:
        TenantActivityLogs_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Insights~1eventtypes~1management~1values?api-version=2015-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tenant_activity_logs/methods/TenantActivityLogs_List'
        insert: []
        update: []
        delete: []
    diagnostic_settings_category:
      id: azure.monitor.diagnostic_settings_category
      name: diagnostic_settings_category
      title: Diagnostic_settings_category
      methods:
        DiagnosticSettingsCategory_Get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1diagnosticSettingsCategories~1{name}?api-version=2021-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DiagnosticSettingsCategory_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1diagnosticSettingsCategories?api-version=2021-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings_category/methods/DiagnosticSettingsCategory_List'
        insert: []
        update: []
        delete: []
    data_collection_endpoints:
      id: azure.monitor.data_collection_endpoints
      name: data_collection_endpoints
      title: Data_collection_endpoints
      methods:
        DataCollectionEndpoints_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionEndpoints?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionEndpoints_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1dataCollectionEndpoints?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionEndpoints_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionEndpoints~1{dataCollectionEndpointName}?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionEndpoints_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionEndpoints~1{dataCollectionEndpointName}?api-version=2021-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DataCollectionEndpoints_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionEndpoints~1{dataCollectionEndpointName}?api-version=2021-09-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionEndpoints_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionEndpoints~1{dataCollectionEndpointName}?api-version=2021-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_collection_endpoints/methods/DataCollectionEndpoints_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/data_collection_endpoints/methods/DataCollectionEndpoints_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_collection_endpoints/methods/DataCollectionEndpoints_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_collection_endpoints/methods/DataCollectionEndpoints_Delete'
    baselines:
      id: azure.monitor.baselines
      name: baselines
      title: Baselines
      methods:
        Baselines_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1metricBaselines?api-version=2019-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/baselines/methods/Baselines_List'
        insert: []
        update: []
        delete: []
    event_categories:
      id: azure.monitor.event_categories
      name: event_categories
      title: Event_categories
      methods:
        EventCategories_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Insights~1eventcategories?api-version=2015-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_categories/methods/EventCategories_List'
        insert: []
        update: []
        delete: []
    activity_log_alerts:
      id: azure.monitor.activity_log_alerts
      name: activity_log_alerts
      title: Activity_log_alerts
      methods:
        ActivityLogAlerts_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1activityLogAlerts~1{activityLogAlertName}?api-version=2020-10-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ActivityLogAlerts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1activityLogAlerts~1{activityLogAlertName}?api-version=2020-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActivityLogAlerts_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1activityLogAlerts~1{activityLogAlertName}?api-version=2020-10-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ActivityLogAlerts_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1activityLogAlerts~1{activityLogAlertName}?api-version=2020-10-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActivityLogAlerts_ListBySubscriptionId:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1activityLogAlerts?api-version=2020-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActivityLogAlerts_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1activityLogAlerts?api-version=2020-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/activity_log_alerts/methods/ActivityLogAlerts_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/activity_log_alerts/methods/ActivityLogAlerts_ListBySubscriptionId'
        insert:
          - $ref: '#/components/x-stackQL-resources/activity_log_alerts/methods/ActivityLogAlerts_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/activity_log_alerts/methods/ActivityLogAlerts_Delete'
    data_collection_rules:
      id: azure.monitor.data_collection_rules
      name: data_collection_rules
      title: Data_collection_rules
      methods:
        DataCollectionRules_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionRules?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRules_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1dataCollectionRules?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionRules~1{dataCollectionRuleName}?api-version=2021-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRules_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionRules~1{dataCollectionRuleName}?api-version=2021-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DataCollectionRules_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionRules~1{dataCollectionRuleName}?api-version=2021-09-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataCollectionRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1dataCollectionRules~1{dataCollectionRuleName}?api-version=2021-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_collection_rules/methods/DataCollectionRules_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/data_collection_rules/methods/DataCollectionRules_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_collection_rules/methods/DataCollectionRules_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_collection_rules/methods/DataCollectionRules_Delete'
    action_groups:
      id: azure.monitor.action_groups
      name: action_groups
      title: Action_groups
      methods:
        ActionGroups_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups~1{actionGroupName}?api-version=2022-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ActionGroups_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups~1{actionGroupName}?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActionGroups_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups~1{actionGroupName}?api-version=2022-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ActionGroups_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups~1{actionGroupName}?api-version=2022-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActionGroups_PostTestNotifications:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1createNotifications?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ActionGroups_CreateNotificationsAtResourceGroupLevel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1createNotifications?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ActionGroups_CreateNotificationsAtActionGroupResourceLevel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups~1{actionGroupName}~1createNotifications?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        ActionGroups_GetTestNotifications:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1notificationStatus~1{notificationId}?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActionGroups_GetTestNotificationsAtResourceGroupLevel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1notificationStatus~1{notificationId}?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActionGroups_GetTestNotificationsAtActionGroupResourceLevel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups~1{actionGroupName}~1notificationStatus~1{notificationId}?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActionGroups_ListBySubscriptionId:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1actionGroups?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActionGroups_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups?api-version=2022-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ActionGroups_EnableReceiver:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1actionGroups~1{actionGroupName}~1subscribe?api-version=2022-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/action_groups/methods/ActionGroups_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/action_groups/methods/ActionGroups_ListBySubscriptionId'
        insert:
          - $ref: '#/components/x-stackQL-resources/action_groups/methods/ActionGroups_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/action_groups/methods/ActionGroups_Delete'
    metric_definitions:
      id: azure.monitor.metric_definitions
      name: metric_definitions
      title: Metric_definitions
      methods:
        MetricDefinitions_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1metricDefinitions?api-version=2018-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metric_definitions/methods/MetricDefinitions_List'
        insert: []
        update: []
        delete: []
    alert_rules:
      id: azure.monitor.alert_rules
      name: alert_rules
      title: Alert_rules
      methods:
        AlertRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1alertrules~1{ruleName}?api-version=2016-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AlertRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1alertrules~1{ruleName}?api-version=2016-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        AlertRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1alertrules~1{ruleName}?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AlertRules_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1alertrules~1{ruleName}?api-version=2016-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AlertRules_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1alertrules?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AlertRules_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1alertrules?api-version=2016-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_rules/methods/AlertRules_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/alert_rules/methods/AlertRules_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/alert_rules/methods/AlertRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/alert_rules/methods/AlertRules_Delete'
    scheduled_query_rules:
      id: azure.monitor.scheduled_query_rules
      name: scheduled_query_rules
      title: Scheduled_query_rules
      methods:
        ScheduledQueryRules_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1scheduledQueryRules~1{ruleName}?api-version=2018-04-16/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ScheduledQueryRules_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1scheduledQueryRules~1{ruleName}?api-version=2018-04-16/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ScheduledQueryRules_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1scheduledQueryRules~1{ruleName}?api-version=2018-04-16/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ScheduledQueryRules_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1scheduledQueryRules~1{ruleName}?api-version=2018-04-16/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ScheduledQueryRules_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1scheduledQueryRules?api-version=2018-04-16/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ScheduledQueryRules_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1scheduledQueryRules?api-version=2018-04-16/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scheduled_query_rules/methods/ScheduledQueryRules_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/scheduled_query_rules/methods/ScheduledQueryRules_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/scheduled_query_rules/methods/ScheduledQueryRules_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scheduled_query_rules/methods/ScheduledQueryRules_Delete'
    autoscale_settings:
      id: azure.monitor.autoscale_settings
      name: autoscale_settings
      title: Autoscale_settings
      methods:
        AutoscaleSettings_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1autoscalesettings?api-version=2022-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AutoscaleSettings_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1autoscalesettings~1{autoscaleSettingName}?api-version=2022-10-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        AutoscaleSettings_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1autoscalesettings~1{autoscaleSettingName}?api-version=2022-10-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        AutoscaleSettings_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1autoscalesettings~1{autoscaleSettingName}?api-version=2022-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AutoscaleSettings_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1autoscalesettings~1{autoscaleSettingName}?api-version=2022-10-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        AutoscaleSettings_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1autoscalesettings?api-version=2022-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/autoscale_settings/methods/AutoscaleSettings_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/autoscale_settings/methods/AutoscaleSettings_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/autoscale_settings/methods/AutoscaleSettings_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/autoscale_settings/methods/AutoscaleSettings_Delete'
    predictive_metric:
      id: azure.monitor.predictive_metric
      name: predictive_metric
      title: Predictive_metric
      methods:
        PredictiveMetric_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Insights~1autoscalesettings~1{autoscaleSettingName}~1predictiveMetrics?api-version=2022-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    activity_logs:
      id: azure.monitor.activity_logs
      name: activity_logs
      title: Activity_logs
      methods:
        ActivityLogs_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Insights~1eventtypes~1management~1values?api-version=2015-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/activity_logs/methods/ActivityLogs_List'
        insert: []
        update: []
        delete: []
    diagnostic_settings:
      id: azure.monitor.diagnostic_settings
      name: diagnostic_settings
      title: Diagnostic_settings
      methods:
        DiagnosticSettings_Get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1diagnosticSettings~1{name}?api-version=2021-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DiagnosticSettings_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1diagnosticSettings~1{name}?api-version=2021-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DiagnosticSettings_Delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1diagnosticSettings~1{name}?api-version=2021-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DiagnosticSettings_List:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Insights~1diagnosticSettings?api-version=2021-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings/methods/DiagnosticSettings_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings/methods/DiagnosticSettings_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/diagnostic_settings/methods/DiagnosticSettings_Delete'
paths:
  /providers/Microsoft.Insights/operations?api-version=2015-04-01:
    x-api-version: '2015-04-01'
    get:
      tags:
        - Operations
      description: Lists all of the available operations from Microsoft.Insights provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    delete:
      tags:
        - LogProfiles
      operationId: LogProfiles_Delete
      description: Deletes the log profile.
      parameters:
        - $ref: '#/components/parameters/LogProfileNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to delete a log profile
      x-stackQL-resource: log_profiles
      x-stackQL-verb: delete
    get:
      tags:
        - LogProfiles
      operationId: LogProfiles_Get
      description: Gets the log profile.
      parameters:
        - $ref: '#/components/parameters/LogProfileNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to get more information about a log profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogProfileResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: log_profiles
      x-stackQL-verb: exec
    put:
      tags:
        - LogProfiles
      operationId: LogProfiles_CreateOrUpdate
      description: Create or update a log profile in Azure Monitoring REST API.
      parameters:
        - $ref: '#/components/parameters/LogProfileNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogProfileResource'
      responses:
        '200':
          description: Successful request to create or update a log profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogProfileResource'
      x-stackQL-resource: log_profiles
      x-stackQL-verb: insert
    patch:
      description: Updates an existing LogProfilesResource. To update other fields use the CreateOrUpdate method.
      operationId: LogProfiles_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LogProfileNameParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: logProfilesResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogProfileResourcePatch'
      responses:
        '200':
          description: An existing log profile was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogProfileResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: log_profiles
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - LogProfiles
      operationId: LogProfiles_List
      description: List the log profiles.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to list log profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogProfileCollection'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: log_profiles
      x-stackQL-verb: select
  /{resourceUri}/providers/microsoft.insights/metricNamespaces?api-version=2017-12-01-preview:
    x-api-version: 2017-12-01-preview
    get:
      tags:
        - metricNamespaces
      operationId: MetricNamespaces_List
      description: Lists the metric namespaces for the resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/StartTimeParameter'
      responses:
        '200':
          description: Successful request to get the list of metric namespaces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricNamespaceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: metric_namespaces
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.Insights/metrics?api-version=2018-01-01:
    x-api-version: '2018-01-01'
    get:
      tags:
        - Metrics
      operationId: Metrics_List
      description: '**Lists the metric values for a resource**.'
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/TimespanParameter'
        - $ref: '#/components/parameters/IntervalParameter'
        - $ref: '#/components/parameters/MetricNamesParameter'
        - $ref: '#/components/parameters/AggregationsParameter'
        - $ref: '#/components/parameters/TopParameter'
        - $ref: '#/components/parameters/OrderByParameter'
        - name: $filter
          in: query
          description: 'The **$filter** is used to reduce the set of metric data returned. Example: Metric contains metadata A, B and C. - Return all time series of C where A = a1 and B = b1 or b2 **$filter=A eq ''a1'' and B eq ''b1'' or B eq ''b2'' and C eq ''*''** - Invalid variant: **$filter=A eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''** This is invalid because the logical or operator cannot separate two different metadata names. - Return all time series where A = a1, B = b1 and C = c1: **$filter=A eq ''a1'' and B eq ''b1'' and C eq ''c1''** - Return all time series where A = a1 **$filter=A eq ''a1'' and B eq ''*'' and C eq ''*''**. Special case: When dimension name or dimension value uses round brackets. Eg: When dimension name is **dim (test) 1** Instead of using $filter= "dim (test) 1 eq ''*'' " use **$filter= "dim %2528test%2529 1 eq ''*'' "** When dimension name is **dim (test) 3** and dimension value is **dim3 (test) val** Instead of using $filter= "dim (test) 3 eq ''dim3 (test) val'' " use **$filter= "dim %2528test%2529 3 eq ''dim3 %2528test%2529 val'' "**'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ResultTypeParameter'
        - $ref: '#/components/parameters/MetricNamespaceParameter'
      responses:
        '200':
          description: Successful request to get the list of metric values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-odata: '#/components/schemas/MetadataValue'
      x-stackQL-resource: metrics
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/microsoft.insights/privateLinkScopes?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      description: Gets a list of all Azure Monitor PrivateLinkScopes within a subscription.
      operationId: PrivateLinkScopes_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list containing 0 or more Azure Monitor PrivateLinkScope definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureMonitorPrivateLinkScopeListResult'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_scopes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      description: Gets a list of Azure Monitor PrivateLinkScopes within a resource group.
      operationId: PrivateLinkScopes_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list containing 0 or more Azure Monitor PrivateLinkScope definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureMonitorPrivateLinkScopeListResult'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_scopes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopes/{scopeName}?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    delete:
      description: Deletes a Azure Monitor PrivateLinkScope.
      operationId: PrivateLinkScopes_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
      responses:
        '200':
          description: Successful request when deleting a Azure Monitor PrivateLinkScope.
        '202':
          description: Accepted.
        '204':
          description: The specified PrivateLinkScope does not exist.
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_link_scopes
      x-stackQL-verb: delete
    get:
      description: Returns a Azure Monitor PrivateLinkScope.
      operationId: PrivateLinkScopes_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
      responses:
        '200':
          description: An Azure Monitor PrivateLinkScope definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureMonitorPrivateLinkScope'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_link_scopes
      x-stackQL-verb: exec
    put:
      description: 'Creates (or updates) a Azure Monitor PrivateLinkScope. Note: You cannot specify a different value for InstrumentationKey nor AppId in the Put operation.'
      operationId: PrivateLinkScopes_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
      requestBody:
        description: Properties that need to be specified to create or update a Azure Monitor PrivateLinkScope.
        required: true
        x-ms-requestBody-name: AzureMonitorPrivateLinkScopePayload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureMonitorPrivateLinkScope'
      responses:
        '200':
          description: Successful request when creating or updating a Azure Monitor PrivateLinkScope. The updated PrivateLinkScope is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureMonitorPrivateLinkScope'
        '201':
          description: Successful request when creating or updating a Azure Monitor PrivateLinkScope. The updated PrivateLinkScope was created and is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureMonitorPrivateLinkScope'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_link_scopes
      x-stackQL-verb: insert
    patch:
      description: Updates an existing PrivateLinkScope's tags. To update other fields use the CreateOrUpdate method.
      operationId: PrivateLinkScopes_UpdateTags
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
      requestBody:
        description: Updated tag information to set into the PrivateLinkScope instance.
        required: true
        x-ms-requestBody-name: PrivateLinkScopeTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsResource'
      responses:
        '200':
          description: Updating the Azure Monitor PrivateLinkScope's tags was successful. PrivateLinkScope tags are updated and returned with the rest of the PrivateLinkScope's object properties.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureMonitorPrivateLinkScope'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_link_scopes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/privateLinkScopeOperationStatuses/{asyncOperationId}?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      tags:
        - asyncOperations
      operationId: PrivateLinkScopeOperationStatus_Get
      description: Get the status of an azure asynchronous operation associated with a private link scope operation.
      parameters:
        - name: asyncOperationId
          in: path
          description: The operation Id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Operation status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_link_scope_operation_status
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/privateLinkResources?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources that need to be created for a Azure Monitor PrivateLinkScope.
      operationId: PrivateLinkResources_ListByPrivateLinkScope
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/privateLinkResources/{groupName}?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources that need to be created for a Azure Monitor PrivateLinkScope.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
        - $ref: '#/components/parameters/GroupNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private link resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets a private endpoint connection.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved a specified private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateEndpointConnections
      description: Approve or reject a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully approved or rejected private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: insert
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
        - name: privateEndpointConnectionName
          in: path
          description: The name of the private endpoint connection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted private endpoint connection.
        '202':
          description: Accepted
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/privateEndpointConnections?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets all private endpoint connections on a private link scope.
      operationId: PrivateEndpointConnections_ListByPrivateLinkScope
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/scopedResources/{name}?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      tags:
        - PrivateLinkScopedResources
      description: Gets a scoped resource in a private link scope.
      operationId: PrivateLinkScopedResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
        - name: name
          in: path
          description: The name of the scoped resource object.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved a scoped resource in a private link scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedResource'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-stackQL-resource: private_link_scoped_resources
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateLinkScopedResources
      description: Approve or reject a private endpoint connection with a given name.
      operationId: PrivateLinkScopedResources_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
        - name: name
          in: path
          description: The name of the scoped resource object.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedResource'
      responses:
        '200':
          description: Successfully create or updated a new azure monitor scoped resource in a private link scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedResource'
        '201':
          description: Successfully created a new azure monitor scoped resource in a private link scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedResource'
        '202':
          description: Accepted
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_link_scoped_resources
      x-stackQL-verb: insert
    delete:
      tags:
        - PrivateLinkScopedResources
      description: Deletes a private endpoint connection with a given name.
      operationId: PrivateLinkScopedResources_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
        - name: name
          in: path
          description: The name of the scoped resource object.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted scoped resource.
        '202':
          description: Accepted
        '204':
          description: Scoped resource does not exist.
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_link_scoped_resources
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/privateLinkScopes/{scopeName}/scopedResources?api-version=2021-07-01-preview:
    x-api-version: 2021-07-01-preview
    get:
      tags:
        - PrivateLinkScopedResources
      description: Gets all private endpoint connections on a private link scope.
      operationId: PrivateLinkScopedResources_ListByPrivateLinkScope
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PrivateLinkScopeName'
      responses:
        '200':
          description: Successfully retrieved scoped resources in a private link scope.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedResourceListResult'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_scoped_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}/incidents/{incidentName}?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      description: Gets an incident associated to an alert rule
      tags:
        - AlertRuleIncidents
      operationId: AlertRuleIncidents_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - name: incidentName
          in: path
          description: The name of the incident to retrieve.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for one alert rule related incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: alert_rule_incidents
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}/incidents?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      description: Gets a list of incidents associated to an alert rule
      tags:
        - AlertRuleIncidents
      operationId: AlertRuleIncidents_ListByAlertRule
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of alert rule related incidents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentListResult'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: alert_rule_incidents
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.Insights/vmInsightsOnboardingStatuses/default?api-version=2018-11-27-preview:
    x-api-version: 2018-11-27-preview
    get:
      tags:
        - VM Insights Onboarding
      operationId: VMInsights_GetOnboardingStatus
      description: Retrieves the VM Insights onboarding status for the specified resource or resource scope.
      parameters:
        - name: resourceUri
          in: path
          description: The fully qualified Azure Resource manager identifier of the resource, or scope, whose status to retrieve.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInsightsOnboardingStatus'
        default:
          description: An error occurred while processing the request. See the error.code parameter to identify the specific error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithError'
      x-stackQL-resource: vm_insights
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/metricAlerts?api-version=2018-03-01:
    x-api-version: '2018-03-01'
    get:
      tags:
        - MetricAlerts
      description: Retrieve alert rule definitions in a subscription.
      operationId: MetricAlerts_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of metric alerts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResourceCollection'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: metric_alerts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts?api-version=2018-03-01:
    x-api-version: '2018-03-01'
    get:
      tags:
        - MetricAlerts
      description: Retrieve alert rule definitions in a resource group.
      operationId: MetricAlerts_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Successful request for a list of metric alerts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResourceCollection'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: metric_alerts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}?api-version=2018-03-01:
    x-api-version: '2018-03-01'
    get:
      tags:
        - MetricAlerts
      description: Retrieve an alert rule definition.
      operationId: MetricAlerts_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      responses:
        '200':
          description: Successful request for a list of metric alerts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResource'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metric_alerts
      x-stackQL-verb: exec
    put:
      tags:
        - MetricAlerts
      description: Create or update an metric alert definition.
      operationId: MetricAlerts_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      requestBody:
        description: The parameters of the rule to create or update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricAlertResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResource'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metric_alerts
      x-stackQL-verb: insert
    patch:
      tags:
        - MetricAlerts
      description: Update an metric alert definition.
      operationId: MetricAlerts_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      requestBody:
        description: The parameters of the rule to update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricAlertResourcePatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResource'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metric_alerts
      x-stackQL-verb: exec
    delete:
      tags:
        - MetricAlerts
      description: Delete an alert rule definition.
      operationId: MetricAlerts_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      responses:
        '200':
          description: Successful request to delete an metric alert rule
        '204':
          description: 'No content: the request was successful, but the response is empty'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metric_alerts
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}/status?api-version=2018-03-01:
    x-api-version: '2018-03-01'
    get:
      tags:
        - MetricAlertsStatus
      description: Retrieve an alert rule status.
      operationId: MetricAlertsStatus_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      responses:
        '200':
          description: Successful request for a list of metric alerts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertStatusCollection'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metric_alerts_status
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}/status/{statusName}?api-version=2018-03-01:
    x-api-version: '2018-03-01'
    get:
      tags:
        - MetricAlertsStatus
      description: Retrieve an alert rule status.
      operationId: MetricAlertsStatus_ListByName
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/StatusNameParameter'
      responses:
        '200':
          description: Successful request for a list of metric alerts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertStatusCollection'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: metric_alerts_status
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionRuleAssociations
      summary: Lists associations for the specified resource.
      operationId: DataCollectionRuleAssociations_ListByResource
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_collection_rule_associations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}/associations?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionRuleAssociations
      summary: Lists associations for the specified data collection rule.
      operationId: DataCollectionRuleAssociations_ListByRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionRuleNameParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_collection_rule_associations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}/associations?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionRuleAssociations
      summary: Lists associations for the specified data collection endpoint.
      operationId: DataCollectionRuleAssociations_ListByDataCollectionEndpoint
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionEndpointNameParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_collection_rule_associations
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.Insights/dataCollectionRuleAssociations/{associationName}?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionRuleAssociations
      summary: Returns the specified association.
      operationId: DataCollectionRuleAssociations_Get
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/AssociationNameParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_rule_associations
      x-stackQL-verb: exec
    put:
      tags:
        - DataCollectionRuleAssociations
      summary: Creates or updates an association.
      operationId: DataCollectionRuleAssociations_Create
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/AssociationNameParameter'
      requestBody:
        description: The payload
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResource'
      responses:
        '200':
          description: Association was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResource'
        '201':
          description: Association was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleAssociationProxyOnlyResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_rule_associations
      x-stackQL-verb: insert
    delete:
      tags:
        - DataCollectionRuleAssociations
      summary: Deletes an association.
      operationId: DataCollectionRuleAssociations_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/AssociationNameParameter'
      responses:
        '200':
          description: Association was successfully deleted
        '204':
          description: Association did not exist
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_rule_associations
      x-stackQL-verb: delete
  /providers/Microsoft.Insights/eventtypes/management/values?api-version=2015-04-01:
    x-api-version: '2015-04-01'
    get:
      tags:
        - TenantActivityLogs
      operationId: TenantActivityLogs_List
      description: Gets the Activity Logs for the Tenant.<br>Everything that is applicable to the API to get the Activity Logs for the subscription is applicable to this API (the parameters, $filter, etc.).<br>One thing to point out here is that this API does *not* retrieve the logs at the individual subscription of the tenant but only surfaces the logs that were generated at the tenant level.
      parameters:
        - name: $filter
          in: query
          description: 'Reduces the set of data collected. <br>The **$filter** is very restricted and allows only the following patterns.<br>- List events for a resource group: $filter=eventTimestamp ge ''<Start Time>'' and eventTimestamp le ''<End Time>'' and eventChannels eq ''Admin, Operation'' and resourceGroupName eq ''<ResourceGroupName>''.<br>- List events for resource: $filter=eventTimestamp ge ''<Start Time>'' and eventTimestamp le ''<End Time>'' and eventChannels eq ''Admin, Operation'' and resourceUri eq ''<ResourceURI>''.<br>- List events for a subscription: $filter=eventTimestamp ge ''<Start Time>'' and eventTimestamp le ''<End Time>'' and eventChannels eq ''Admin, Operation''.<br>- List events for a resource provider: $filter=eventTimestamp ge ''<Start Time>'' and eventTimestamp le ''<End Time>'' and eventChannels eq ''Admin, Operation'' and resourceProvider eq ''<ResourceProviderName>''.<br>- List events for a correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and eventChannels eq ''Admin, Operation'' and correlationId eq ''<CorrelationID>''.<br>**NOTE**: No other syntax is allowed.'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SelectParameter'
      responses:
        '200':
          description: Successful request to get a page of events in the tenant activity logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/EventData'
      x-stackQL-resource: tenant_activity_logs
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.Insights/diagnosticSettingsCategories/{name}?api-version=2021-05-01-preview:
    x-api-version: 2021-05-01-preview
    get:
      tags:
        - DiagnosticSettingsCategories
      operationId: DiagnosticSettingsCategory_Get
      description: Gets the diagnostic settings category for the specified resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/NameParameter'
      responses:
        '200':
          description: Successful request to get more information about diagnostic setting category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticSettingsCategoryResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: diagnostic_settings_category
      x-stackQL-verb: exec
  /{resourceUri}/providers/Microsoft.Insights/diagnosticSettingsCategories?api-version=2021-05-01-preview:
    x-api-version: 2021-05-01-preview
    get:
      tags:
        - DiagnosticSettingsCategories
      operationId: DiagnosticSettingsCategory_List
      description: Lists the diagnostic settings categories for the specified resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: Successful request to get more information about diagnostic setting category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticSettingsCategoryResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: diagnostic_settings_category
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionEndpoints
      summary: Lists all data collection endpoints in the specified resource group.
      operationId: DataCollectionEndpoints_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionEndpointResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_collection_endpoints
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionEndpoints?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionEndpoints
      summary: Lists all data collection endpoints in the specified subscription
      operationId: DataCollectionEndpoints_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionEndpointResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_collection_endpoints
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionEndpoints
      summary: Returns the specified data collection endpoint.
      operationId: DataCollectionEndpoints_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionEndpointNameParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionEndpointResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_endpoints
      x-stackQL-verb: exec
    put:
      tags:
        - DataCollectionEndpoints
      summary: Creates or updates a data collection endpoint.
      operationId: DataCollectionEndpoints_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionEndpointNameParameter'
      requestBody:
        description: The payload
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCollectionEndpointResource'
      responses:
        '200':
          description: Data collection endpoint was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionEndpointResource'
        '201':
          description: Data collection endpoint was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionEndpointResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_endpoints
      x-stackQL-verb: insert
    patch:
      tags:
        - DataCollectionEndpoints
      summary: Updates part of a data collection endpoint.
      operationId: DataCollectionEndpoints_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionEndpointNameParameter'
      requestBody:
        description: The payload
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceForUpdate'
      responses:
        '200':
          description: Data collection endpoint was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionEndpointResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_endpoints
      x-stackQL-verb: exec
    delete:
      tags:
        - DataCollectionEndpoints
      summary: Deletes a data collection endpoint.
      operationId: DataCollectionEndpoints_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionEndpointNameParameter'
      responses:
        '200':
          description: Data collection endpoint was successfully deleted
        '204':
          description: Data collection endpoint did not exist
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_endpoints
      x-stackQL-verb: delete
  /{resourceUri}/providers/Microsoft.Insights/metricBaselines?api-version=2019-03-01:
    x-api-version: '2019-03-01'
    get:
      tags:
        - Baseline
        - Metric
      operationId: Baselines_List
      description: '**Lists the metric baseline values for a resource**.'
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/MetricNamesParameter'
        - $ref: '#/components/parameters/MetricNamespaceParameter'
        - $ref: '#/components/parameters/TimespanParameter'
        - $ref: '#/components/parameters/IntervalParameter'
        - $ref: '#/components/parameters/AggregationsParameter'
        - $ref: '#/components/parameters/SensitivitiesParameter'
        - name: $filter
          in: query
          description: 'The **$filter** is used to reduce the set of metric data returned. Example: Metric contains metadata A, B and C. - Return all time series of C where A = a1 and B = b1 or b2 **$filter=A eq ''a1'' and B eq ''b1'' or B eq ''b2'' and C eq ''*''** - Invalid variant: **$filter=A eq ''a1'' and B eq ''b1'' and C eq ''*'' or B = ''b2''** This is invalid because the logical or operator cannot separate two different metadata names. - Return all time series where A = a1, B = b1 and C = c1: **$filter=A eq ''a1'' and B eq ''b1'' and C eq ''c1''** - Return all time series where A = a1 **$filter=A eq ''a1'' and B eq ''*'' and C eq ''*''**. Special case: When dimension name or dimension value uses round brackets. Eg: When dimension name is **dim (test) 1** Instead of using $filter= "dim (test) 1 eq ''*'' " use **$filter= "dim %2528test%2529 1 eq ''*'' "** When dimension name is **dim (test) 3** and dimension value is **dim3 (test) val** Instead of using $filter= "dim (test) 3 eq ''dim3 (test) val'' " use **$filter= "dim %2528test%2529 3 eq ''dim3 %2528test%2529 val'' "**'
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/BaselineResultTypeParameter'
      responses:
        '200':
          description: Successful request to get the list of metric baseline values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricBaselinesResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: baselines
      x-stackQL-verb: select
  /providers/Microsoft.Insights/eventcategories?api-version=2015-04-01:
    x-api-version: '2015-04-01'
    get:
      tags:
        - EventCategories
      operationId: EventCategories_List
      description: 'Get the list of available event categories supported in the Activity Logs Service.<br>The current list includes the following: Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.'
      parameters: []
      responses:
        '200':
          description: Successful request to get the list of event categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCategoryCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: event_categories
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/activityLogAlerts/{activityLogAlertName}?api-version=2020-10-01:
    x-api-version: '2020-10-01'
    put:
      description: Create a new Activity Log Alert rule or update an existing one.
      operationId: ActivityLogAlerts_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActivityLogAlertNameParameter'
      requestBody:
        description: The Activity Log Alert rule to create or use for the update.
        required: true
        x-ms-requestBody-name: activityLogAlertRule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityLogAlertResource'
      responses:
        '200':
          description: An existing Activity Log Alert rule was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogAlertResource'
        '201':
          description: A new Activity Log Alert rule was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogAlertResource'
        default:
          description: An error occurred and the Activity Log Alert rule could not be created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: activity_log_alerts
      x-stackQL-verb: insert
    get:
      description: Get an Activity Log Alert rule.
      operationId: ActivityLogAlerts_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActivityLogAlertNameParameter'
      responses:
        '200':
          description: The request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogAlertResource'
        default:
          description: An error occurred and the Activity Log Alert rule could not be retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: activity_log_alerts
      x-stackQL-verb: exec
    delete:
      description: Delete an Activity Log Alert rule.
      operationId: ActivityLogAlerts_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActivityLogAlertNameParameter'
      responses:
        '200':
          description: The Activity Log Alert rule was successfully deleted.
        '204':
          description: The Activity Log Alert rule does not exist. It may have already been deleted.
        default:
          description: An error occurred and the Activity Log Alert rule could not be deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: activity_log_alerts
      x-stackQL-verb: delete
    patch:
      description: Updates 'tags' and 'enabled' fields in an existing Alert rule. This method is used to update the Alert rule tags, and to enable or disable the Alert rule. To update other fields use CreateOrUpdate operation.
      operationId: ActivityLogAlerts_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActivityLogAlertNameParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: activityLogAlertRulePatch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRulePatchObject'
      responses:
        '200':
          description: An existing Activity Log Alert rule was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogAlertResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: activity_log_alerts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/activityLogAlerts?api-version=2020-10-01:
    x-api-version: '2020-10-01'
    get:
      description: Get a list of all Activity Log Alert rules in a subscription.
      operationId: ActivityLogAlerts_ListBySubscriptionId
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleList'
        default:
          description: An error occurred and the list of Activity Log Alert rules could not be retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: activity_log_alerts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/activityLogAlerts?api-version=2020-10-01:
    x-api-version: '2020-10-01'
    get:
      description: Get a list of all Activity Log Alert rules in a resource group.
      operationId: ActivityLogAlerts_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleList'
        default:
          description: An error occurred and the list of Activity Log Alert rules could not be retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: activity_log_alerts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionRules
      summary: Lists all data collection rules in the specified resource group.
      operationId: DataCollectionRules_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_collection_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/dataCollectionRules?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionRules
      summary: Lists all data collection rules in the specified subscription.
      operationId: DataCollectionRules_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleResourceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_collection_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dataCollectionRuleName}?api-version=2021-09-01-preview:
    x-api-version: 2021-09-01-preview
    get:
      tags:
        - DataCollectionRules
      summary: Returns the specified data collection rule.
      operationId: DataCollectionRules_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionRuleNameParameter'
      responses:
        '200':
          description: Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_rules
      x-stackQL-verb: exec
    put:
      tags:
        - DataCollectionRules
      summary: Creates or updates a data collection rule.
      operationId: DataCollectionRules_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionRuleNameParameter'
      requestBody:
        description: The payload
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCollectionRuleResource'
      responses:
        '200':
          description: Data collection rule was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleResource'
        '201':
          description: Data collection rule was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_rules
      x-stackQL-verb: insert
    patch:
      tags:
        - DataCollectionRules
      summary: Updates part of a data collection rule.
      operationId: DataCollectionRules_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionRuleNameParameter'
      requestBody:
        description: The payload
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceForUpdate'
      responses:
        '200':
          description: Data collection rule was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCollectionRuleResource'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_rules
      x-stackQL-verb: exec
    delete:
      tags:
        - DataCollectionRules
      summary: Deletes a data collection rule.
      operationId: DataCollectionRules_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DataCollectionRuleNameParameter'
      responses:
        '200':
          description: Data collection rule was successfully deleted
        '204':
          description: Data collection rule did not exist
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseCommonV2'
      x-stackQL-resource: data_collection_rules
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups/{actionGroupName}?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    put:
      description: Create a new action group or update an existing one.
      operationId: ActionGroups_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The action group to create or use for the update.
        required: true
        x-ms-requestBody-name: actionGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionGroupResource'
      responses:
        '200':
          description: An existing action group was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupResource'
        '201':
          description: A new action group was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupResource'
        default:
          description: An error occurred and the action group could not be created or updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: insert
    get:
      description: Get an action group.
      operationId: ActionGroups_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupResource'
        default:
          description: 'An error occurred and the action group could not be retrieved. 404: The action group does not exist.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
    delete:
      description: Delete an action group.
      operationId: ActionGroups_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The action group was successfully deleted.
        '204':
          description: The action group does not exist. It may have already been deleted.
        default:
          description: An error occurred and the action group could not be deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: delete
    patch:
      description: Updates an existing action group's tags. To update other fields use the CreateOrUpdate method.
      operationId: ActionGroups_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActionGroupNameParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: actionGroupPatch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionGroupPatchBody'
      responses:
        '200':
          description: An existing action group was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/createNotifications?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    post:
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      description: Send test notifications to a set of provided receivers
      operationId: ActionGroups_PostTestNotifications
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The notification request body which includes the contact details
        required: true
        x-ms-requestBody-name: notificationRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequestBody'
      responses:
        '200':
          description: The notification succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationDetailsResponse'
        '202':
          description: The notification request accepted
          headers:
            location:
              schema:
                type: string
              description: The location header that has the polling uri.
        default:
          description: An error occurred while sending the test notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/createNotifications?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    post:
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      description: Send test notifications to a set of provided receivers
      operationId: ActionGroups_CreateNotificationsAtResourceGroupLevel
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      requestBody:
        description: The notification request body which includes the contact details
        required: true
        x-ms-requestBody-name: notificationRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequestBody'
      responses:
        '200':
          description: The notification succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationDetailsResponse'
        '202':
          description: The notification request accepted
          headers:
            location:
              schema:
                type: string
              description: The location header that has the polling uri.
        default:
          description: An error occurred while sending the test notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups/{actionGroupName}/createNotifications?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    post:
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      description: Send test notifications to a set of provided receivers
      operationId: ActionGroups_CreateNotificationsAtActionGroupResourceLevel
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActionGroupNameParameter'
      requestBody:
        description: The notification request body which includes the contact details
        required: true
        x-ms-requestBody-name: notificationRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequestBody'
      responses:
        '200':
          description: The notification succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationDetailsResponse'
        '202':
          description: The notification request accepted
          headers:
            location:
              schema:
                type: string
              description: The location header that has the polling uri.
        default:
          description: An error occurred while sending the test notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/notificationStatus/{notificationId}?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    get:
      description: Get the test notifications by the notification id
      operationId: ActionGroups_GetTestNotifications
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/NotificationIdParameter'
      responses:
        '200':
          description: The notification details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationDetailsResponse'
        default:
          description: An error occurred while sending the test notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/notificationStatus/{notificationId}?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    get:
      description: Get the test notifications by the notification id
      operationId: ActionGroups_GetTestNotificationsAtResourceGroupLevel
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NotificationIdParameter'
      responses:
        '200':
          description: The notification details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationDetailsResponse'
        default:
          description: An error occurred while sending the test notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups/{actionGroupName}/notificationStatus/{notificationId}?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    get:
      description: Get the test notifications by the notification id
      operationId: ActionGroups_GetTestNotificationsAtActionGroupResourceLevel
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActionGroupNameParameter'
        - $ref: '#/components/parameters/NotificationIdParameter'
      responses:
        '200':
          description: The notification details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationDetailsResponse'
        default:
          description: An error occurred while sending the test notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/actionGroups?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    get:
      description: Get a list of all action groups in a subscription.
      operationId: ActionGroups_ListBySubscriptionId
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupList'
        default:
          description: An error occurred and the list of action groups could not be retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    get:
      description: Get a list of all action groups in a resource group.
      operationId: ActionGroups_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionGroupList'
        default:
          description: An error occurred and the list of action groups could not be retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/actionGroups/{actionGroupName}/subscribe?api-version=2022-06-01:
    x-api-version: '2022-06-01'
    post:
      description: Enable a receiver in an action group. This changes the receiver's status from Disabled to Enabled. This operation is only supported for Email or SMS receivers.
      operationId: ActionGroups_EnableReceiver
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ActionGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The receiver to re-enable.
        required: true
        x-ms-requestBody-name: enableRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableRequest'
      responses:
        '200':
          description: The receiver was successfully enabled.
        '409':
          description: The receiver is already enabled in the action group.
          x-ms-error-response: true
        default:
          description: 'An error occurred and the receiver could not be enabled, e.g.: 404: The action group was not found or no matching receiver was found in the action group.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: action_groups
      x-stackQL-verb: exec
  /{resourceUri}/providers/Microsoft.Insights/metricDefinitions?api-version=2018-01-01:
    x-api-version: '2018-01-01'
    get:
      tags:
        - MetricDefinitions
      operationId: MetricDefinitions_List
      description: Lists the metric definitions for the resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/MetricNamespaceParameter'
      responses:
        '200':
          description: Successful request to get the list of metric definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: metric_definitions
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/alertrules/{ruleName}?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    put:
      description: Creates or updates a classic metric alert rule.
      tags:
        - AlertRules
      operationId: AlertRules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters of the rule to create or update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleResource'
      responses:
        '200':
          description: Successful request to update an alert rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResource'
        '201':
          description: Created alert rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: alert_rules
      x-stackQL-verb: insert
    delete:
      description: Deletes a classic metric alert rule
      tags:
        - AlertRules
      operationId: AlertRules_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to delete an alert rule
        '204':
          description: 'No content: the request was successful, but the response is empty'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: alert_rules
      x-stackQL-verb: delete
    get:
      description: Gets a classic metric alert rule
      tags:
        - AlertRules
      operationId: AlertRules_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to get an alert rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: alert_rules
      x-stackQL-verb: exec
    patch:
      description: Updates an existing classic metric AlertRuleResource. To update other fields use the CreateOrUpdate method.
      operationId: AlertRules_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: alertRulesResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleResourcePatch'
      responses:
        '200':
          description: Successful request to update an alert rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResource'
        '201':
          description: Successful request to update an alert rule that resulted in a creation of the alert rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: alert_rules
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/alertrules?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - AlertRules
      operationId: AlertRules_ListByResourceGroup
      description: List the classic metric alert rules within a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of alert rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: alert_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/alertrules?api-version=2016-03-01:
    x-api-version: '2016-03-01'
    get:
      tags:
        - AlertRules
      operationId: AlertRules_ListBySubscription
      description: List the classic metric alert rules within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of alert rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: alert_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/scheduledQueryRules/{ruleName}?api-version=2018-04-16:
    x-api-version: '2018-04-16'
    put:
      description: Creates or updates an log search rule.
      tags:
        - scheduledQueryRules
      operationId: ScheduledQueryRules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      requestBody:
        description: The parameters of the rule to create or update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchRuleResource'
      responses:
        '200':
          description: Successful request to update an Log Search rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchRuleResource'
        '201':
          description: Created alert rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchRuleResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorContract'
      x-stackQL-resource: scheduled_query_rules
      x-stackQL-verb: insert
    get:
      description: Gets an Log Search rule
      tags:
        - scheduledQueryRules
      operationId: ScheduledQueryRules_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to get a Log Search rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchRuleResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorContract'
      x-stackQL-resource: scheduled_query_rules
      x-stackQL-verb: exec
    patch:
      tags:
        - scheduledQueryRules
      description: Update log search Rule.
      operationId: ScheduledQueryRules_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
      requestBody:
        description: The parameters of the rule to update.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchRuleResourcePatch'
      responses:
        '200':
          description: Successful request to update an Log Search rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchRuleResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorContract'
      x-stackQL-resource: scheduled_query_rules
      x-stackQL-verb: exec
    delete:
      description: Deletes a Log Search rule
      tags:
        - scheduledQueryRules
      operationId: ScheduledQueryRules_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to delete a  Log Search rule
        '204':
          description: No Content. Resource not found
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorContract'
      x-stackQL-resource: scheduled_query_rules
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/scheduledQueryRules?api-version=2018-04-16:
    x-api-version: '2018-04-16'
    get:
      tags:
        - scheduledQueryRules
      operationId: ScheduledQueryRules_ListBySubscription
      description: List the Log Search rules within a subscription group.
      parameters:
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of alert rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchRuleResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorContract'
      x-ms-pageable:
        nextLinkName: null
      x-ms-odata: '#/components/schemas/LogSearchRuleResource'
      x-stackQL-resource: scheduled_query_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/scheduledQueryRules?api-version=2018-04-16:
    x-api-version: '2018-04-16'
    get:
      tags:
        - scheduledQueryRules
      operationId: ScheduledQueryRules_ListByResourceGroup
      description: List the Log Search rules within a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FilterParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of alert rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchRuleResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorContract'
      x-ms-pageable:
        nextLinkName: null
      x-ms-odata: '#/components/schemas/LogSearchRuleResource'
      x-stackQL-resource: scheduled_query_rules
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings?api-version=2022-10-01:
    x-api-version: '2022-10-01'
    get:
      description: Lists the autoscale settings for a resource group
      tags:
        - AutoscaleSettings
      operationId: AutoscaleSettings_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of autoscale settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleSettingResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: autoscale_settings
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}?api-version=2022-10-01:
    x-api-version: '2022-10-01'
    put:
      description: Creates or updates an autoscale setting.
      tags:
        - AutoscaleSettings
      operationId: AutoscaleSettings_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutoscaleSettingNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscaleSettingResource'
      responses:
        '200':
          description: Successful request to create or update an autoscale setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleSettingResource'
        '201':
          description: Created autoscale setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleSettingResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleErrorResponse'
      x-stackQL-resource: autoscale_settings
      x-stackQL-verb: insert
    delete:
      description: Deletes and autoscale setting
      tags:
        - AutoscaleSettings
      operationId: AutoscaleSettings_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutoscaleSettingNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to delete an autoscale setting
        '204':
          description: 'No content: Successful request to delete an autoscale setting, but the response is intentionally empty'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleErrorResponse'
      x-stackQL-resource: autoscale_settings
      x-stackQL-verb: delete
    get:
      description: Gets an autoscale setting
      tags:
        - AutoscaleSettings
      operationId: AutoscaleSettings_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutoscaleSettingNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to get one autoscale setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleSettingResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleErrorResponse'
      x-stackQL-resource: autoscale_settings
      x-stackQL-verb: exec
    patch:
      description: Updates an existing AutoscaleSettingsResource. To update other fields use the CreateOrUpdate method.
      operationId: AutoscaleSettings_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutoscaleSettingNameParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: autoscaleSettingResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoscaleSettingResourcePatch'
      responses:
        '200':
          description: An existing autoscale setting resource was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleSettingResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleErrorResponse'
      x-stackQL-resource: autoscale_settings
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}/predictiveMetrics?api-version=2022-10-01:
    x-api-version: '2022-10-01'
    get:
      tags:
        - Metrics
      operationId: PredictiveMetric_Get
      description: get predictive autoscale metric future data
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AutoscaleSettingNameParameter'
        - $ref: '#/components/parameters/TimespanParameter'
        - $ref: '#/components/parameters/IntervalParameter'
        - $ref: '#/components/parameters/MetricNamespaceParameter'
        - $ref: '#/components/parameters/MetricNamesParameter'
        - $ref: '#/components/parameters/AggregationParameter'
      responses:
        '200':
          description: Successful request to get the list of metric values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictiveResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleErrorResponse'
      x-stackQL-resource: predictive_metric
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/autoscalesettings?api-version=2022-10-01:
    x-api-version: '2022-10-01'
    get:
      description: Lists the autoscale settings for a subscription
      tags:
        - AutoscaleSettings
      operationId: AutoscaleSettings_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request for a list of autoscale settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleSettingResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoscaleErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: autoscale_settings
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.Insights/eventtypes/management/values?api-version=2015-04-01:
    x-api-version: '2015-04-01'
    get:
      tags:
        - ActivityLogs
      operationId: ActivityLogs_List
      description: Provides the list of records from the activity logs.
      parameters:
        - name: $filter
          in: query
          description: 'Reduces the set of data collected.<br>This argument is required and it also requires at least the start date/time.<br>The **$filter** argument is very restricted and allows only the following patterns.<br>- *List events for a resource group*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and resourceGroupName eq ''resourceGroupName''.<br>- *List events for resource*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and resourceUri eq ''resourceURI''.<br>- *List events for a subscription in a time range*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z''.<br>- *List events for a resource provider*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and resourceProvider eq ''resourceProviderName''.<br>- *List events for a correlation Id*: $filter=eventTimestamp ge ''2014-07-16T04:36:37.6407898Z'' and eventTimestamp le ''2014-07-20T04:36:37.6407898Z'' and correlationId eq ''correlationID''.<br><br>**NOTE**: No other syntax is allowed.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SelectParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful request to get a page of events in the activity logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDataCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/EventData'
      x-stackQL-resource: activity_logs
      x-stackQL-verb: select
  /{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}?api-version=2021-05-01-preview:
    x-api-version: 2021-05-01-preview
    get:
      tags:
        - DiagnosticSettings
      operationId: DiagnosticSettings_Get
      description: Gets the active diagnostic settings for the specified resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/NameParameter'
      responses:
        '200':
          description: Successful request to get more information about diagnostic setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticSettingsResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: diagnostic_settings
      x-stackQL-verb: exec
    put:
      tags:
        - DiagnosticSettings
      operationId: DiagnosticSettings_CreateOrUpdate
      description: Creates or updates diagnostic settings for the specified resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/NameParameter'
      requestBody:
        description: Parameters supplied to the operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosticSettingsResource'
      responses:
        '200':
          description: Successful request to create a diagnostic setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticSettingsResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: diagnostic_settings
      x-stackQL-verb: insert
    delete:
      tags:
        - DiagnosticSettings
      operationId: DiagnosticSettings_Delete
      description: Deletes existing diagnostic settings for the specified resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
        - $ref: '#/components/parameters/NameParameter'
      responses:
        '200':
          description: Successful request to remove a diagnostic setting
        '204':
          description: Successful request to remove a diagnostic setting
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: diagnostic_settings
      x-stackQL-verb: delete
  /{resourceUri}/providers/Microsoft.Insights/diagnosticSettings?api-version=2021-05-01-preview:
    x-api-version: 2021-05-01-preview
    get:
      tags:
        - DiagnosticSettings
      operationId: DiagnosticSettings_List
      description: Gets the active diagnostic settings list for the specified resource.
      parameters:
        - $ref: '#/components/parameters/ResourceUriParameter'
      responses:
        '200':
          description: Successful request to get more information about diagnostic setting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticSettingsResourceCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: diagnostic_settings
      x-stackQL-verb: select
