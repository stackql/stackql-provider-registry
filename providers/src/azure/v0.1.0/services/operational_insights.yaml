openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Log Analytics (Microsoft.OperationalInsights)
  description: Azure Log Analytics API reference.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-20-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    ManagementGroupProperties:
      properties:
        serverCount:
          type: integer
          format: int32
          description: The number of servers connected to the management group.
        isGateway:
          type: boolean
          description: Gets or sets a value indicating whether the management group is a gateway.
        name:
          type: string
          description: The name of the management group.
        id:
          type: string
          description: The unique ID of the management group.
        created:
          type: string
          format: date-time
          description: The datetime that the management group was created.
        dataReceived:
          type: string
          format: date-time
          description: The last datetime that the management group received data.
        version:
          type: string
          description: The version of System Center that is managing the management group.
        sku:
          type: string
          description: The SKU of System Center that is managing the management group.
      description: Management group properties.
    ManagementGroup:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagementGroupProperties'
          description: The properties of the management group.
      description: A management group that is connected to a workspace
    WorkspaceListManagementGroupsResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ManagementGroup'
          x-ms-identifiers:
            - /properties/id
          description: Gets or sets a list of management groups attached to the workspace.
      description: The list workspace management groups operation response.
    DataSourceKind:
      type: string
      enum:
        - WindowsEvent
        - WindowsPerformanceCounter
        - IISLogs
        - LinuxSyslog
        - LinuxSyslogCollection
        - LinuxPerformanceObject
        - LinuxPerformanceCollection
        - CustomLog
        - CustomLogCollection
        - AzureAuditLog
        - AzureActivityLog
        - GenericDataSource
        - ChangeTrackingCustomPath
        - ChangeTrackingPath
        - ChangeTrackingServices
        - ChangeTrackingDataTypeConfiguration
        - ChangeTrackingDefaultRegistry
        - ChangeTrackingRegistry
        - ChangeTrackingLinuxPath
        - LinuxChangeTrackingPath
        - ChangeTrackingContentLocation
        - WindowsTelemetry
        - Office365
        - SecurityWindowsBaselineConfiguration
        - SecurityCenterSecurityWindowsBaselineConfiguration
        - SecurityEventCollectionConfiguration
        - SecurityInsightsSecurityEventCollectionConfiguration
        - ImportComputerGroup
        - NetworkMonitoring
        - Itsm
        - DnsAnalytics
        - ApplicationInsights
        - SqlDataClassification
      x-ms-enum:
        name: DataSourceKind
        modelAsString: true
      description: The kind of the DataSource.
    DataSource:
      properties:
        properties:
          $ref: '#/components/schemas/Object'
          description: The data source properties in raw json format, each kind of data source have it's own schema.
        etag:
          type: string
          description: The ETag of the data source.
        kind:
          $ref: '#/components/schemas/DataSourceKind'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      required:
        - kind
        - properties
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Datasources under OMS Workspace.
    DataSourceFilter:
      properties:
        kind:
          $ref: '#/components/schemas/DataSourceKind'
      description: DataSource filter. Right now, only filter by kind is supported.
    DataSourceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DataSource'
          description: A list of datasources.
        nextLink:
          type: string
          description: The link (url) to the next page of datasources.
      description: The list data source by workspace operation response.
    Object:
      type: object
      properties: {}
      description: JSON object
    WorkspaceSku:
      properties:
        name:
          type: string
          description: The name of the SKU.
          enum:
            - Free
            - Standard
            - Premium
            - PerNode
            - PerGB2018
            - Standalone
            - CapacityReservation
            - LACluster
          x-ms-enum:
            name: WorkspaceSkuNameEnum
            modelAsString: true
        capacityReservationLevel:
          type: integer
          format: int32
          description: The capacity reservation level in GB for this workspace, when CapacityReservation sku is selected.
          enum:
            - 100
            - 200
            - 300
            - 400
            - 500
            - 1000
            - 2000
            - 5000
          x-ms-enum:
            name: CapacityReservationLevel
        lastSkuUpdate:
          type: string
          description: The last time when the sku was updated.
          readOnly: true
      required:
        - name
      description: The SKU (tier) of a workspace.
    WorkspaceCapping:
      description: The daily volume cap for ingestion.
      properties:
        dailyQuotaGb:
          type: number
          format: double
          description: The workspace daily quota for ingestion.
        quotaNextResetTime:
          type: string
          description: The time when the quota will be rest.
          readOnly: true
        dataIngestionStatus:
          type: string
          readOnly: true
          description: The status of data ingestion for this workspace.
          enum:
            - RespectQuota
            - ForceOn
            - ForceOff
            - OverQuota
            - SubscriptionSuspended
            - ApproachingQuota
          x-ms-enum:
            name: DataIngestionStatus
            modelAsString: true
            values:
              - value: RespectQuota
                description: Ingestion enabled following daily cap quota reset, or subscription enablement.
              - value: ForceOn
                description: Ingestion started following service setting change.
              - value: ForceOff
                description: Ingestion stopped following service setting change.
              - value: OverQuota
                description: Reached daily cap quota, ingestion stopped.
              - value: SubscriptionSuspended
                description: Ingestion stopped following suspended subscription.
              - value: ApproachingQuota
                description: 80% of daily cap quota reached.
    WorkspaceProperties:
      properties:
        provisioningState:
          type: string
          description: The provisioning state of the workspace.
          readOnly: true
          enum:
            - Creating
            - Succeeded
            - Failed
            - Canceled
            - Deleting
            - ProvisioningAccount
            - Updating
          x-ms-enum:
            name: WorkspaceEntityStatus
            modelAsString: true
        customerId:
          type: string
          description: This is a read-only property. Represents the ID associated with the workspace.
          readOnly: true
        sku:
          $ref: '#/components/schemas/WorkspaceSku'
          description: The SKU of the workspace.
        retentionInDays:
          type: integer
          format: int32
          nullable: true
          description: The workspace data retention in days. Allowed values are per pricing plan. See pricing tiers documentation for details.
        workspaceCapping:
          $ref: '#/components/schemas/WorkspaceCapping'
          description: The daily volume cap for ingestion.
        createdDate:
          type: string
          description: Workspace creation date.
          readOnly: true
        modifiedDate:
          type: string
          description: Workspace modification date.
          readOnly: true
        publicNetworkAccessForIngestion:
          description: The network access type for accessing Log Analytics ingestion.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        publicNetworkAccessForQuery:
          description: The network access type for accessing Log Analytics query.
          $ref: '#/components/schemas/PublicNetworkAccessType'
        forceCmkForQuery:
          type: boolean
          description: Indicates whether customer managed storage is mandatory for query management.
        privateLinkScopedResources:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkScopedResource'
          x-ms-identifiers:
            - resourceId
          description: List of linked private link scope resources.
        features:
          $ref: '#/components/schemas/WorkspaceFeatures'
          description: Workspace features.
        defaultDataCollectionRuleResourceId:
          type: string
          description: The resource ID of the default Data Collection Rule to use for this workspace. Expected format is - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionRules/{dcrName}.
      description: Workspace properties.
    WorkspaceFeatures:
      properties:
        enableDataExport:
          type: boolean
          nullable: true
          description: Flag that indicate if data should be exported.
        immediatePurgeDataOn30Days:
          type: boolean
          nullable: true
          description: Flag that describes if we want to remove the data after 30 days.
        enableLogAccessUsingOnlyResourcePermissions:
          type: boolean
          nullable: true
          description: Flag that indicate which permission to use - resource or workspace or both.
        clusterResourceId:
          type: string
          nullable: true
          description: Dedicated LA cluster resourceId that is linked to the workspaces.
        disableLocalAuth:
          type: boolean
          nullable: true
          description: Disable Non-AAD based Auth.
      additionalProperties: true
      description: Workspace features.
    PrivateLinkScopedResource:
      properties:
        resourceId:
          type: string
          description: The full resource Id of the private link scope resource.
        scopeId:
          type: string
          description: The private link scope unique Identifier.
      description: The private link scope resource reference.
    Workspace:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkspaceProperties'
          description: Workspace properties.
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
        eTag:
          type: string
          description: The ETag of the workspace.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: The top level Workspace resource container.
    WorkspacePatch:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WorkspaceProperties'
          description: Workspace properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags. Optional.
      allOf:
        - $ref: '#/components/schemas/AzureEntityResource'
      description: The top level Workspace resource container.
    WorkspaceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
          description: A list of workspaces.
      description: The list workspaces operation response.
    PublicNetworkAccessType:
      type: string
      description: The network access type for operating on the Log Analytics Workspace. By default it is Enabled
      default: Enabled
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: PublicNetworkAccessType
        modelAsString: true
        values:
          - value: Enabled
            description: Enables connectivity to Log Analytics through public DNS.
          - value: Disabled
            description: Disables public connectivity to Log Analytics through public DNS.
    DataExport:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataExportProperties'
          description: data export properties.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: The top level data export resource container.
      x-ms-azure-resource: true
    DataExportListResult:
      description: Result of the request to list data exports.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DataExport'
          description: List of data export instances within a workspace..
    DataExportProperties:
      properties:
        dataExportId:
          type: string
          description: The data export rule ID.
        tableNames:
          type: array
          items:
            type: string
          description: 'An array of tables to export, for example: [“Heartbeat, SecurityEvent”].'
        destination:
          $ref: '#/components/schemas/Destination'
          description: destination properties.
          x-ms-client-flatten: true
        enable:
          type: boolean
          description: Active when enabled.
        createdDate:
          type: string
          description: The latest data export rule modification time.
        lastModifiedDate:
          type: string
          description: Date and time when the export was last modified.
      required:
        - tableNames
      description: Data Export properties.
    Destination:
      properties:
        resourceId:
          type: string
          description: The destination resource ID. This can be copied from the Properties entry of the destination resource in Azure.
        type:
          type: string
          readOnly: true
          description: The type of the destination resource
          enum:
            - StorageAccount
            - EventHub
          x-ms-enum:
            name: type
            modelAsString: true
        metaData:
          $ref: '#/components/schemas/DestinationMetaData'
          description: destination meta data.
          x-ms-client-flatten: true
      required:
        - resourceId
      description: Destination properties.
    DestinationMetaData:
      properties:
        eventHubName:
          type: string
          description: Optional. Allows to define an Event Hub name. Not applicable when destination is Storage Account.
      description: Destination meta data.
    AzureResourceProperties:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: Azure resource Id
        name:
          type: string
          readOnly: true
          description: Azure resource name
        type:
          type: string
          readOnly: true
          description: Azure resource type
        systemData:
          $ref: '#/components/schemas/SystemData'
          readOnly: true
          description: Read only system data
      description: An Azure resource QueryPack-Query object
    LogAnalyticsQueryPackQuery:
      type: object
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties that define an Log Analytics QueryPack-Query resource.
          $ref: '#/components/schemas/LogAnalyticsQueryPackQueryProperties'
      allOf:
        - $ref: '#/components/schemas/AzureResourceProperties'
      description: A Log Analytics QueryPack-Query definition.
      x-ms-azure-resource: true
    LogAnalyticsQueryPackQueryProperties:
      type: object
      description: Properties that define an Log Analytics QueryPack-Query resource.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          description: The unique ID of your application. This field cannot be changed.
          readOnly: true
        displayName:
          type: string
          readOnly: false
          description: Unique display name for your query within the Query Pack.
        timeCreated:
          type: string
          readOnly: true
          description: Creation Date for the Log Analytics Query, in ISO 8601 format.
          format: date-time
        timeModified:
          type: string
          readOnly: true
          description: Last modified date of the Log Analytics Query, in ISO 8601 format.
          format: date-time
        author:
          type: string
          readOnly: true
          description: Object Id of user creating the query.
        description:
          type: string
          readOnly: false
          description: Description of the query.
        body:
          type: string
          readOnly: false
          description: Body of the query.
        related:
          description: The related metadata items for the function.
          type: object
          properties:
            categories:
              description: The related categories for the function.
              type: array
              items:
                type: string
            resourceTypes:
              description: The related resource types for the function.
              type: array
              items:
                type: string
            solutions:
              description: The related Log Analytics solutions for the function.
              type: array
              items:
                type: string
        tags:
          description: Tags associated with the query.
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        properties:
          type: object
          description: Additional properties that can be set for the query.
      required:
        - body
        - displayName
    LogAnalyticsQueryPackQuerySearchProperties:
      type: object
      description: Properties that define an Log Analytics QueryPack-Query search properties.
      properties:
        related:
          type: object
          description: The related metadata items for the function.
          properties:
            categories:
              description: The related categories for the function.
              type: array
              items:
                type: string
            resourceTypes:
              description: The related resource types for the function.
              type: array
              items:
                type: string
            solutions:
              description: The related Log Analytics solutions for the function.
              type: array
              items:
                type: string
        tags:
          description: Tags associated with the query.
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    LogAnalyticsQueryPackQueryListResult:
      type: object
      description: Describes the list of Log Analytics QueryPack-Query resources.
      required:
        - value
      properties:
        value:
          type: array
          description: List of Log Analytics QueryPack Query definitions.
          items:
            $ref: '#/components/schemas/LogAnalyticsQueryPackQuery'
        nextLink:
          type: string
          description: The URI to get the next set of Log Analytics QueryPack definitions if too many QueryPack-Queries where returned in the result set.
    SystemData:
      description: Read only system data
      type: object
      properties:
        createdBy:
          type: string
          description: An identifier for the identity that created the resource
        createdByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that created the resource
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC)
        lastModifiedBy:
          type: string
          description: An identifier for the identity that last modified the resource
        lastModifiedByType:
          $ref: '#/components/schemas/IdentityType'
          description: The type of identity that last modified the resource
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    IdentityType:
      description: The type of identity that creates/modifies resources
      type: string
      enum:
        - user
        - application
        - managedIdentity
        - key
      x-ms-enum:
        name: IdentityType
        modelAsString: true
    Tag:
      properties:
        name:
          type: string
          description: The tag name.
        value:
          type: string
          description: The tag value.
      required:
        - name
        - value
      description: A tag of a saved search.
    SavedSearchProperties:
      properties:
        category:
          type: string
          description: 'The category of the saved search. This helps the user to find a saved search faster. '
        displayName:
          type: string
          description: Saved search display name.
        query:
          type: string
          description: The query expression for the saved search.
        functionAlias:
          type: string
          description: The function alias if query serves as a function.
        functionParameters:
          type: string
          description: 'The optional function parameters if query serves as a function. Value should be in the following format: ''param-name1:type1 = default_value1, param-name2:type2 = default_value2''. For more examples and proper syntax please refer to https://docs.microsoft.com/en-us/azure/kusto/query/functions/user-defined-functions.'
        version:
          type: integer
          format: int64
          description: The version number of the query language. The current version is 2 and is the default.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-ms-identifiers:
            - name
          description: The tags attached to the saved search.
      required:
        - category
        - displayName
        - query
      description: Value object for saved search results.
    SavedSearch:
      properties:
        etag:
          type: string
          description: The ETag of the saved search. To override an existing saved search, use "*" or specify the current Etag
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SavedSearchProperties'
          description: The properties of the saved search.
      required:
        - properties
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Value object for saved search results.
    SavedSearchesListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SavedSearch'
          description: The array of result values.
      description: The saved search list operation response.
    LinkedStorageAccountsProperties:
      description: Linked storage accounts properties.
      type: object
      properties:
        dataSourceType:
          description: Linked storage accounts type.
          type: string
          readOnly: true
          enum:
            - CustomLogs
            - AzureWatson
            - Query
            - Ingestion
            - Alerts
          x-ms-enum:
            name: DataSourceType
            modelAsString: false
        storageAccountIds:
          description: Linked storage accounts resources ids.
          type: array
          items:
            type: string
    LinkedStorageAccountsResource:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LinkedStorageAccountsProperties'
          description: Linked storage accounts properties.
      required:
        - properties
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Linked storage accounts top level resource container.
    LinkedStorageAccountsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LinkedStorageAccountsResource'
          description: A list of linked storage accounts instances.
      description: The list linked storage accounts service operation response.
    IntelligencePack:
      properties:
        name:
          type: string
          description: The name of the intelligence pack.
        enabled:
          type: boolean
          description: The enabled boolean for the intelligence pack.
        displayName:
          type: string
          description: The display name of the intelligence pack.
      description: Intelligence Pack containing a string name and boolean indicating if it's enabled.
    QueryPacksResource:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: Azure resource Id
        name:
          type: string
          description: Azure resource name
          readOnly: true
        type:
          type: string
          readOnly: true
          description: Azure resource type
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      required:
        - location
      x-ms-azure-resource: true
      description: An azure resource object
    TagsResource:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: A container holding only the Tags for a resource, allowing the user to update the tags on a QueryPack instance.
    LogAnalyticsQueryPack:
      type: object
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties that define a Log Analytics QueryPack resource.
          $ref: '#/components/schemas/LogAnalyticsQueryPackProperties'
      allOf:
        - $ref: '#/components/schemas/QueryPacksResource'
      required:
        - properties
      description: An Log Analytics QueryPack definition.
    LogAnalyticsQueryPackProperties:
      type: object
      description: Properties that define a Log Analytics QueryPack resource.
      properties:
        queryPackId:
          type: string
          description: The unique ID of your application. This field cannot be changed.
          readOnly: true
        timeCreated:
          type: string
          readOnly: true
          description: Creation Date for the Log Analytics QueryPack, in ISO 8601 format.
          format: date-time
        timeModified:
          type: string
          readOnly: true
          description: Last modified date of the Log Analytics QueryPack, in ISO 8601 format.
          format: date-time
        provisioningState:
          type: string
          description: 'Current state of this QueryPack: whether or not is has been provisioned within the resource group it is defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying, Canceled, and Failed.'
          readOnly: true
    LogAnalyticsQueryPackListResult:
      type: object
      description: Describes the list of Log Analytics QueryPack resources.
      required:
        - value
      properties:
        value:
          type: array
          description: List of Log Analytics QueryPack definitions.
          items:
            $ref: '#/components/schemas/LogAnalyticsQueryPack'
        nextLink:
          type: string
          description: The URI to get the next set of Log Analytics QueryPack definitions if too many QueryPacks where returned in the result set.
    CoreSummary:
      properties:
        status:
          type: string
          description: The status of a core summary.
        numberOfDocuments:
          type: integer
          format: int64
          description: The number of documents of a core summary.
      required:
        - numberOfDocuments
      description: The core summary of a search.
    SearchSort:
      properties:
        name:
          type: string
          description: The name of the field the search query is sorted on.
        order:
          type: string
          description: The sort order of the search.
          enum:
            - asc
            - desc
          x-ms-enum:
            name: SearchSortEnum
            modelAsString: true
      description: The sort parameters for search.
    SearchMetadataSchema:
      properties:
        name:
          type: string
          description: The name of the metadata schema.
        version:
          type: integer
          format: int32
          description: The version of the metadata schema.
      description: Schema metadata for search.
    SearchMetadata:
      properties:
        requestId:
          x-ms-client-name: SearchId
          type: string
          description: The request id of the search.
        resultType:
          type: string
          description: The search result type.
        total:
          type: integer
          format: int64
          description: The total number of search results.
        top:
          type: integer
          format: int64
          description: The number of top search results.
        id:
          type: string
          description: The id of the search results request.
        coreSummaries:
          type: array
          items:
            $ref: '#/components/schemas/CoreSummary'
          x-ms-identifiers: []
          description: The core summaries.
        status:
          type: string
          description: The status of the search results.
        startTime:
          type: string
          format: date-time
          description: The start time for the search.
        lastUpdated:
          type: string
          format: date-time
          description: The time of last update.
        eTag:
          type: string
          description: The ETag of the search results.
        sort:
          type: array
          items:
            $ref: '#/components/schemas/SearchSort'
          x-ms-identifiers:
            - name
          description: How the results are sorted.
        requestTime:
          type: integer
          format: int64
          description: The request time.
        aggregatedValueField:
          type: string
          description: The aggregated value field.
        aggregatedGroupingFields:
          type: string
          description: The aggregated grouping fields.
        sum:
          type: integer
          format: int64
          description: The sum of all aggregates returned in the result set.
        max:
          type: integer
          format: int64
          description: The max of all aggregates returned in the result set.
        schema:
          $ref: '#/components/schemas/SearchMetadataSchema'
          description: The schema.
      description: Metadata for search results.
    SearchSchemaValue:
      properties:
        name:
          type: string
          description: The name of the schema.
        displayName:
          type: string
          description: The display name of the schema.
        type:
          type: string
          description: The type.
        indexed:
          type: boolean
          description: The boolean that indicates the field is searchable as free text.
        stored:
          type: boolean
          description: The boolean that indicates whether or not the field is stored.
        facet:
          type: boolean
          description: The boolean that indicates whether or not the field is a facet.
        ownerType:
          type: array
          items:
            type: string
          description: The array of workflows containing the field.
      required:
        - facet
        - stored
        - indexed
      description: Value object for schema results.
    SearchGetSchemaResponse:
      properties:
        metadata:
          x-ms-client-name: Metadata
          $ref: '#/components/schemas/SearchMetadata'
          description: The metadata from search results.
        value:
          type: array
          items:
            $ref: '#/components/schemas/SearchSchemaValue'
          x-ms-identifiers:
            - name
          description: The array of result values.
      description: The get schema operation response.
    StorageAccount:
      properties:
        id:
          type: string
          description: The Azure Resource Manager ID of the storage account resource.
        key:
          type: string
          description: The storage account key.
      required:
        - id
        - key
      description: Describes a storage account connection.
    StorageInsightStatus:
      properties:
        state:
          type: string
          description: The state of the storage insight connection to the workspace
          enum:
            - OK
            - ERROR
          x-ms-enum:
            name: StorageInsightState
            modelAsString: true
        description:
          type: string
          description: Description of the state of the storage insight.
      required:
        - state
      description: The status of the storage insight.
    StorageInsightProperties:
      properties:
        containers:
          type: array
          items:
            type: string
          description: The names of the blob containers that the workspace should read
        tables:
          type: array
          items:
            type: string
          description: The names of the Azure tables that the workspace should read
        storageAccount:
          $ref: '#/components/schemas/StorageAccount'
          description: The storage account connection details
        status:
          $ref: '#/components/schemas/StorageInsightStatus'
          description: The status of the storage insight
          readOnly: true
      required:
        - storageAccount
      description: Storage insight properties.
    StorageInsight:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageInsightProperties'
          description: Storage insight properties.
        eTag:
          type: string
          description: The ETag of the storage insight.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: The top level storage insight resource container.
    StorageInsightListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StorageInsight'
          description: A list of storage insight items.
        '@odata.nextLink':
          type: string
          description: The link (url) to the next page of results.
          x-ms-client-name: odataNextLink
      description: The list storage insights operation response.
    Column:
      type: object
      properties:
        name:
          type: string
          description: Column name.
        type:
          type: string
          description: Column data type.
          enum:
            - string
            - int
            - long
            - real
            - boolean
            - dateTime
            - guid
            - dynamic
          x-ms-enum:
            name: ColumnTypeEnum
            modelAsString: true
        dataTypeHint:
          type: string
          description: Column data type logical hint.
          enum:
            - uri
            - guid
            - armPath
            - ip
          x-ms-enum:
            name: ColumnDataTypeHintEnum
            modelAsString: true
            values:
              - value: uri
                description: A string that matches the pattern of a URI, for example, scheme://username:password@host:1234/this/is/a/path?k1=v1&k2=v2#fragment
              - value: guid
                description: A standard 128-bit GUID following the standard shape, xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
              - value: armPath
                description: 'An Azure Resource Model (ARM) path: /subscriptions/{...}/resourceGroups/{...}/providers/Microsoft.{...}/{...}/{...}/{...}...'
              - value: ip
                description: A standard V4/V6 ip address following the standard shape, x.x.x.x/y:y:y:y:y:y:y:y
        displayName:
          type: string
          description: Column display name.
        description:
          type: string
          description: Column description.
        isDefaultDisplay:
          readOnly: true
          type: boolean
          description: Is displayed by default.
        isHidden:
          readOnly: true
          type: boolean
          description: Is column hidden.
      description: Table column.
    Schema:
      type: object
      properties:
        name:
          type: string
          description: Table name.
        displayName:
          type: string
          description: Table display name.
        description:
          type: string
          description: Table description.
        columns:
          type: array
          items:
            $ref: '#/components/schemas/Column'
          x-ms-identifiers:
            - name
          description: A list of table custom columns.
        standardColumns:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Column'
          x-ms-identifiers:
            - name
          description: A list of table standard columns.
        categories:
          readOnly: true
          type: array
          items:
            type: string
          description: Table category.
        labels:
          readOnly: true
          type: array
          items:
            type: string
          description: Table labels.
        source:
          readOnly: true
          type: string
          description: Table's creator.
          enum:
            - microsoft
            - customer
          x-ms-enum:
            name: SourceEnum
            modelAsString: true
            values:
              - value: microsoft
                description: Tables provisioned by the system, as collected via Diagnostic Settings, the Agents, or any other standard data collection means.
              - value: customer
                description: Tables created by the owner of the Workspace, and only found in this Workspace.
        tableType:
          readOnly: true
          type: string
          description: Table's creator.
          enum:
            - Microsoft
            - CustomLog
            - RestoredLogs
            - SearchResults
          x-ms-enum:
            name: TableTypeEnum
            modelAsString: true
            values:
              - value: Microsoft
                description: Standard data collected by Azure Monitor.
              - value: CustomLog
                description: Custom log table.
              - value: RestoredLogs
                description: Restored data.
              - value: SearchResults
                description: Data collected by a search job.
        tableSubType:
          readOnly: true
          type: string
          description: The subtype describes what APIs can be used to interact with the table, and what features are available against it.
          enum:
            - Any
            - Classic
            - DataCollectionRuleBased
          x-ms-enum:
            name: TableSubTypeEnum
            modelAsString: true
            values:
              - value: Any
                description: The default subtype with which built-in tables are created.
              - value: Classic
                description: Indicates a table created through the Data Collector API or with the custom logs feature of the MMA agent, or any table against which Custom Fields were created.
              - value: DataCollectionRuleBased
                description: 'A table eligible to have data sent into it via any of the means supported by Data Collection Rules: the Data Collection Endpoint API, ingestion-time transformations, or any other mechanism provided by Data Collection Rules'
        solutions:
          readOnly: true
          type: array
          items:
            type: string
          description: List of solutions the table is affiliated with
        searchResults:
          readOnly: true
          $ref: '#/components/schemas/SearchResults'
          description: Parameters of the search job that initiated this table.
        restoredLogs:
          readOnly: true
          $ref: '#/components/schemas/RestoredLogs'
          description: Parameters of the restore operation that initiated this table.
      description: Table's schema.
    SearchResults:
      type: object
      properties:
        query:
          type: string
          description: Search job query.
        description:
          type: string
          description: Search job Description.
        limit:
          type: integer
          format: int32
          description: Limit the search job to return up to specified number of rows.
        startSearchTime:
          type: string
          format: date-time
          description: The timestamp to start the search from (UTC)
        endSearchTime:
          type: string
          format: date-time
          description: The timestamp to end the search by (UTC)
        sourceTable:
          readOnly: true
          type: string
          description: The table used in the search job.
      description: Parameters of the search job that initiated this table.
    RestoredLogs:
      type: object
      properties:
        startRestoreTime:
          type: string
          format: date-time
          description: The timestamp to start the restore from (UTC).
        endRestoreTime:
          type: string
          format: date-time
          description: The timestamp to end the restore by (UTC).
        sourceTable:
          type: string
          description: The table to restore data from.
      description: Restore parameters.
    ResultStatistics:
      type: object
      properties:
        progress:
          readOnly: true
          type: number
          multipleOf: 0.01
          description: Search job completion percentage.
        ingestedRecords:
          readOnly: true
          type: integer
          format: int32
          description: The number of rows that were returned by the search job.
      description: Search job execution statistics.
    TableProperties:
      type: object
      properties:
        retentionInDays:
          type: integer
          format: int32
          minimum: 4
          maximum: 730
          description: The table retention in days, between 4 and 730. Setting this property to -1 will default to the workspace retention.
        totalRetentionInDays:
          type: integer
          format: int32
          minimum: 4
          maximum: 2555
          description: The table total retention in days, between 4 and 2555. Setting this property to -1 will default to table retention.
        archiveRetentionInDays:
          readOnly: true
          type: integer
          format: int32
          description: The table data archive retention in days. Calculated as (totalRetentionInDays-retentionInDays)
        searchResults:
          $ref: '#/components/schemas/SearchResults'
          description: Parameters of the search job that initiated this table.
        restoredLogs:
          $ref: '#/components/schemas/RestoredLogs'
          description: Parameters of the restore operation that initiated this table.
        resultStatistics:
          $ref: '#/components/schemas/ResultStatistics'
          description: Search job execution statistics.
        plan:
          type: string
          description: Instruct the system how to handle and charge the logs ingested to this table.
          enum:
            - Basic
            - Analytics
          x-ms-enum:
            name: TablePlanEnum
            modelAsString: true
            values:
              - value: Basic
                description: Logs  that are adjusted to support high volume low value verbose logs.
              - value: Analytics
                description: Logs  that allow monitoring and analytics.
        lastPlanModifiedDate:
          readOnly: true
          type: string
          description: The timestamp that table plan was last modified (UTC).
        schema:
          $ref: '#/components/schemas/Schema'
          description: Table schema.
        provisioningState:
          type: string
          readOnly: true
          description: Table's current provisioning state. If set to 'updating', indicates a resource lock due to ongoing operation, forbidding any update to the table until the ongoing operation is concluded.
          enum:
            - Updating
            - InProgress
            - Succeeded
          x-ms-enum:
            name: ProvisioningStateEnum
            modelAsString: true
            values:
              - value: Updating
                description: Table schema is still being built and updated, table is currently locked for any changes till the procedure is done.
              - value: InProgress
                description: Table schema is stable and without changes, table data is being updated.
              - value: Succeeded
                description: Table state is stable and without changes, table is unlocked and open for new updates.
      description: Table properties.
    Table:
      type: object
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TableProperties'
          description: Table's properties.
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: Workspace data table definition.
    TablesListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Table'
          description: A list of data tables.
      description: The list tables operation response.
    ClusterProperties:
      properties:
        clusterId:
          type: string
          readOnly: true
          description: The ID associated with the cluster.
        provisioningState:
          type: string
          readOnly: true
          description: The provisioning state of the cluster.
          enum:
            - Creating
            - Succeeded
            - Failed
            - Canceled
            - Deleting
            - ProvisioningAccount
            - Updating
          x-ms-enum:
            name: ClusterEntityStatus
            modelAsString: true
        isDoubleEncryptionEnabled:
          type: boolean
          readOnly: false
          description: Configures whether cluster will use double encryption. This Property can not be modified after cluster creation. Default value is 'true'
          x-ms-mutability:
            - create
        isAvailabilityZonesEnabled:
          type: boolean
          readOnly: false
          description: Sets whether the cluster will support availability zones. This can be set as true only in regions where Azure Data Explorer support Availability Zones. This Property can not be modified after cluster creation. Default value is 'true' if region supports Availability Zones.
        billingType:
          $ref: '#/components/schemas/billingType'
          description: The cluster's billing type.
        keyVaultProperties:
          $ref: '#/components/schemas/keyVaultProperties'
          description: The associated key properties.
        lastModifiedDate:
          type: string
          description: The last time the cluster was updated.
          readOnly: true
        createdDate:
          type: string
          description: The cluster creation time
          readOnly: true
        associatedWorkspaces:
          description: The list of Log Analytics workspaces associated with the cluster
          type: array
          items:
            $ref: '#/components/schemas/AssociatedWorkspace'
          x-ms-identifiers:
            - workspaceId
        capacityReservationProperties:
          $ref: '#/components/schemas/CapacityReservationProperties'
          description: Additional properties for capacity reservation
      description: Cluster properties.
    ClusterPatchProperties:
      properties:
        keyVaultProperties:
          $ref: '#/components/schemas/keyVaultProperties'
          description: The associated key properties.
        billingType:
          $ref: '#/components/schemas/billingType'
          description: The cluster's billing type.
      description: Log Analytics cluster patch properties.
    ClusterPatch:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClusterPatchProperties'
          description: Log Analytics cluster properties.
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        sku:
          $ref: '#/components/schemas/ClusterSku'
          description: The sku properties.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      description: The top level Log Analytics cluster resource container.
      x-ms-azure-resource: true
    Cluster:
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of the resource.
        sku:
          $ref: '#/components/schemas/ClusterSku'
          description: The sku properties.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClusterProperties'
          description: Log Analytics cluster properties.
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: The top level Log Analytics cluster resource container.
    ClusterListResult:
      properties:
        nextLink:
          description: The link used to get the next page of recommendations.
          type: string
        value:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          description: A list of Log Analytics clusters.
      description: The list clusters operation response.
    keyVaultProperties:
      description: The key vault properties.
      properties:
        keyVaultUri:
          description: The Key Vault uri which holds they key associated with the Log Analytics cluster.
          type: string
        keyName:
          description: The name of the key associated with the Log Analytics cluster.
          type: string
        keyVersion:
          description: The version of the key associated with the Log Analytics cluster.
          type: string
        keyRsaSize:
          description: Selected key minimum required size.
          type: integer
          format: int32
    billingType:
      type: string
      readOnly: false
      description: Configures whether billing will be only on the cluster or each workspace will be billed by its proportional use. This does not change the overall billing, only how it will be distributed. Default value is 'Cluster'
      enum:
        - Cluster
        - Workspaces
      x-ms-enum:
        name: BillingType
        modelAsString: true
    ClusterSku:
      description: The cluster sku definition.
      properties:
        capacity:
          description: The capacity value
          type: integer
          format: int64
          enum:
            - 500
            - 1000
            - 2000
            - 5000
          x-ms-enum:
            name: Capacity
        name:
          type: string
          description: The name of the SKU.
          enum:
            - CapacityReservation
          x-ms-enum:
            name: ClusterSkuNameEnum
            modelAsString: true
    UserIdentityProperties:
      type: object
      description: User assigned identity properties.
      properties:
        principalId:
          readOnly: true
          description: The principal id of user assigned identity.
          type: string
        clientId:
          readOnly: true
          description: The client id of user assigned identity.
          type: string
    AssociatedWorkspace:
      type: object
      description: The list of Log Analytics workspaces associated with the cluster.
      properties:
        workspaceId:
          readOnly: true
          description: The id of the assigned workspace.
          type: string
        workspaceName:
          readOnly: true
          description: The name id the assigned workspace.
          type: string
        resourceId:
          readOnly: true
          description: The ResourceId id the assigned workspace.
          type: string
        associateDate:
          readOnly: true
          description: The time of workspace association.
          type: string
    CapacityReservationProperties:
      description: The Capacity Reservation properties.
      properties:
        lastSkuUpdate:
          readOnly: true
          description: The last time Sku was updated.
          type: string
        minCapacity:
          readOnly: true
          description: Minimum CapacityReservation value in GB.
          type: integer
          format: int64
    WorkspacePurgeBody:
      description: Describes the body of a purge request for an App Insights Workspace
      required:
        - table
        - filters
      properties:
        table:
          type: string
          description: Table from which to purge data.
        filters:
          type: array
          description: The set of columns and filters (queries) to run over them to purge the resulting data.
          items:
            $ref: '#/components/schemas/WorkspacePurgeBodyFilters'
          x-ms-identifiers: []
    WorkspacePurgeBodyFilters:
      description: User-defined filters to return data which will be purged from the table.
      properties:
        column:
          description: The column of the table over which the given query should run
          type: string
        operator:
          description: A query operator to evaluate over the provided column and value(s). Supported operators are ==, =~, in, in~, >, >=, <, <=, between, and have the same behavior as they would in a KQL query.
          type: string
        value:
          description: the value for the operator to function over. This can be a number (e.g., > 100), a string (timestamp >= '2017-09-01') or array of values.
        key:
          description: When filtering over custom dimensions, this key will be used as the name of the custom dimension.
          type: string
    WorkspacePurgeResponse:
      description: Response containing operationId for a specific purge action.
      properties:
        operationId:
          description: Id to use when querying for status for a particular purge operation.
          type: string
      required:
        - operationId
    WorkspacePurgeStatusResponse:
      description: Response containing status for a specific purge operation.
      properties:
        status:
          description: Status of the operation represented by the requested Id.
          type: string
          enum:
            - pending
            - completed
          x-ms-enum:
            name: PurgeState
            modelAsString: true
      required:
        - status
    OperationStatus:
      description: The status of operation.
      type: object
      properties:
        id:
          type: string
          description: The operation Id.
        name:
          type: string
          description: The operation name.
        startTime:
          type: string
          description: The start time of the operation.
        endTime:
          type: string
          description: The end time of the operation.
        status:
          type: string
          description: The status of the operation.
        error:
          type: object
          description: The error detail of the operation if any.
          $ref: '#/components/schemas/ErrorResponse'
    LinkedServiceProperties:
      properties:
        resourceId:
          type: string
          description: The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require read access
        writeAccessResourceId:
          type: string
          description: The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require write access
        provisioningState:
          type: string
          description: The provisioning state of the linked service.
          enum:
            - Succeeded
            - Deleting
            - ProvisioningAccount
            - Updating
          x-ms-enum:
            name: LinkedServiceEntityStatus
            modelAsString: true
      description: Linked service properties.
    LinkedService:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LinkedServiceProperties'
          description: The properties of the linked service.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      required:
        - properties
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: The top level Linked service resource container.
    LinkedServiceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/LinkedService'
          description: The list of linked service instances
      description: The list linked service operation response.
    MetricName:
      properties:
        value:
          type: string
          description: The system name of the metric.
        localizedValue:
          type: string
          description: The localized name of the metric.
      description: The name of a metric.
    UsageMetric:
      properties:
        name:
          $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        unit:
          type: string
          description: The units used for the metric.
        currentValue:
          type: number
          format: double
          description: The current value of the metric.
        limit:
          type: number
          format: double
          description: The quota limit for the metric.
        nextResetTime:
          type: string
          format: date-time
          description: The time that the metric's value will reset.
        quotaPeriod:
          type: string
          description: The quota period that determines the length of time between value resets.
      description: A metric describing the usage of a resource.
    WorkspaceListUsagesResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/UsageMetric'
          x-ms-identifiers:
            - name
          description: Gets or sets a list of usage metrics for a workspace.
      description: The list workspace usages operation response.
    AvailableServiceTier:
      description: Service Tier details.
      properties:
        serviceTier:
          readOnly: true
          type: string
          description: The name of the Service Tier.
          enum:
            - Free
            - Standard
            - Premium
            - PerNode
            - PerGB2018
            - Standalone
            - CapacityReservation
          x-ms-enum:
            name: SkuNameEnum
            modelAsString: true
        enabled:
          readOnly: true
          type: boolean
          description: True if the Service Tier is enabled for the workspace.
        minimumRetention:
          readOnly: true
          type: integer
          format: int64
          description: The minimum retention for the Service Tier, in days.
        maximumRetention:
          readOnly: true
          type: integer
          format: int64
          description: The maximum retention for the Service Tier, in days.
        defaultRetention:
          readOnly: true
          type: integer
          format: int64
          description: The default retention for the Service Tier, in days.
        capacityReservationLevel:
          readOnly: true
          type: integer
          format: int64
          description: The capacity reservation level in GB per day. Returned for the Capacity Reservation Service Tier.
        lastSkuUpdate:
          readOnly: true
          type: string
          description: Time when the sku was last updated for the workspace. Returned for the Capacity Reservation Service Tier.
    SharedKeys:
      properties:
        primarySharedKey:
          type: string
          description: The primary shared key of a workspace.
        secondarySharedKey:
          type: string
          description: The secondary shared key of a workspace.
      description: The shared keys for a workspace.
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    QueryPackNameParameter:
      name: queryPackName
      in: path
      description: The name of the Log Analytics QueryPack resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QueryIdParameter:
      name: id
      in: path
      description: The id of a specific query defined in the Log Analytics QueryPack
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IncludeBodyParameter:
      name: includeBody
      in: query
      description: Flag indicating whether or not to return the body of each applicable query. If false, only return the query information.
      required: false
      x-ms-parameter-location: method
      schema:
        type: boolean
    MaxItemCountParameter:
      name: $top
      in: query
      description: Maximum items returned in page.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int64
        type: integer
    ContinuationTokenParameter:
      name: $skipToken
      in: query
      description: Base64 encoded token used to fetch the next page of items. Default is null.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    DataSourceTypeParameter:
      name: dataSourceType
      in: path
      description: Linked storage accounts type.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - CustomLogs
          - AzureWatson
          - Query
          - Ingestion
          - Alerts
        x-ms-enum:
          name: DataSourceType
          modelAsString: false
        type: string
    ResourceNameParameter:
      name: queryPackName
      in: path
      description: The name of the Log Analytics QueryPack resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    WorkspaceNameParameter:
      name: workspaceName
      in: path
      description: The name of the workspace.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$
        minLength: 4
        maxLength: 63
        type: string
    TableNameParameter:
      name: tableName
      in: path
      description: The name of the table.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GatewayIdParameter:
      name: gatewayId
      in: path
      description: The Log Analytics gateway Id.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    WorkspacePurgeIdParameter:
      name: purgeId
      in: path
      description: In a purge status request, this is the Id of the operation the status of which is returned.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  x-stackQL-resources:
    management_groups:
      id: azure.operational_insights.management_groups
      name: management_groups
      title: Management_groups
      methods:
        ManagementGroups_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1managementGroups?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/management_groups/methods/ManagementGroups_List'
        insert: []
        update: []
        delete: []
    data_sources:
      id: azure.operational_insights.data_sources
      name: data_sources
      title: Data_sources
      methods:
        DataSources_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataSources~1{dataSourceName}?api-version=2020-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DataSources_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataSources~1{dataSourceName}?api-version=2020-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DataSources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataSources~1{dataSourceName}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataSources_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataSources?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/DataSources_ListByWorkspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/DataSources_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/DataSources_Delete'
    workspaces:
      id: azure.operational_insights.workspaces
      name: workspaces
      title: Workspaces
      methods:
        Workspaces_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OperationalInsights~1workspaces?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Workspaces_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Workspaces_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Workspaces_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}?api-version=2021-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Workspaces_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Workspaces_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}?api-version=2021-12-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/Workspaces_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/Workspaces_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/Workspaces_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/Workspaces_Delete'
    deleted_workspaces:
      id: azure.operational_insights.deleted_workspaces
      name: deleted_workspaces
      title: Deleted_workspaces
      methods:
        DeletedWorkspaces_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OperationalInsights~1deletedWorkspaces?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DeletedWorkspaces_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1deletedWorkspaces?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deleted_workspaces/methods/DeletedWorkspaces_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/deleted_workspaces/methods/DeletedWorkspaces_List'
        insert: []
        update: []
        delete: []
    data_exports:
      id: azure.operational_insights.data_exports
      name: data_exports
      title: Data_exports
      methods:
        DataExports_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataExports?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataExports_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataExports~1{dataExportName}?api-version=2020-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        DataExports_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataExports~1{dataExportName}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataExports_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1dataExports~1{dataExportName}?api-version=2020-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_exports/methods/DataExports_ListByWorkspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_exports/methods/DataExports_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_exports/methods/DataExports_Delete'
    queries:
      id: azure.operational_insights.queries
      name: queries
      title: Queries
      methods:
        Queries_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}~1queries?api-version=2019-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Queries_Search:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}~1queries~1search?api-version=2019-09-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Queries_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}~1queries~1{id}?api-version=2019-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Queries_Put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}~1queries~1{id}?api-version=2019-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Queries_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}~1queries~1{id}?api-version=2019-09-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Queries_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}~1queries~1{id}?api-version=2019-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/queries/methods/Queries_List'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/queries/methods/Queries_Delete'
    saved_searches:
      id: azure.operational_insights.saved_searches
      name: saved_searches
      title: Saved_searches
      methods:
        SavedSearches_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1savedSearches~1{savedSearchId}?api-version=2020-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SavedSearches_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1savedSearches~1{savedSearchId}?api-version=2020-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SavedSearches_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1savedSearches~1{savedSearchId}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SavedSearches_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1savedSearches?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/saved_searches/methods/SavedSearches_ListByWorkspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/saved_searches/methods/SavedSearches_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/saved_searches/methods/SavedSearches_Delete'
    linked_storage_accounts:
      id: azure.operational_insights.linked_storage_accounts
      name: linked_storage_accounts
      title: Linked_storage_accounts
      methods:
        LinkedStorageAccounts_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedStorageAccounts~1{dataSourceType}?api-version=2020-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LinkedStorageAccounts_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedStorageAccounts~1{dataSourceType}?api-version=2020-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LinkedStorageAccounts_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedStorageAccounts~1{dataSourceType}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LinkedStorageAccounts_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedStorageAccounts?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linked_storage_accounts/methods/LinkedStorageAccounts_ListByWorkspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/linked_storage_accounts/methods/LinkedStorageAccounts_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linked_storage_accounts/methods/LinkedStorageAccounts_Delete'
    intelligence_packs:
      id: azure.operational_insights.intelligence_packs
      name: intelligence_packs
      title: Intelligence_packs
      methods:
        IntelligencePacks_Disable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1intelligencePacks~1{intelligencePackName}~1Disable?api-version=2020-08-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntelligencePacks_Enable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1intelligencePacks~1{intelligencePackName}~1Enable?api-version=2020-08-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntelligencePacks_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1intelligencePacks?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/intelligence_packs/methods/IntelligencePacks_List'
        insert: []
        update: []
        delete: []
    query_packs:
      id: azure.operational_insights.query_packs
      name: query_packs
      title: Query_packs
      methods:
        QueryPacks_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OperationalInsights~1queryPacks?api-version=2019-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        QueryPacks_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks?api-version=2019-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        QueryPacks_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}?api-version=2019-09-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        QueryPacks_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}?api-version=2019-09-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        QueryPacks_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}?api-version=2019-09-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        QueryPacks_UpdateTags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1queryPacks~1{queryPackName}?api-version=2019-09-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/query_packs/methods/QueryPacks_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/query_packs/methods/QueryPacks_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/query_packs/methods/QueryPacks_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/query_packs/methods/QueryPacks_Delete'
    schema:
      id: azure.operational_insights.schema
      name: schema
      title: Schema
      methods:
        Schema_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1schema?api-version=2020-08-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    storage_insight_configs:
      id: azure.operational_insights.storage_insight_configs
      name: storage_insight_configs
      title: Storage_insight_configs
      methods:
        StorageInsightConfigs_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1storageInsightConfigs~1{storageInsightName}?api-version=2020-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        StorageInsightConfigs_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1storageInsightConfigs~1{storageInsightName}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        StorageInsightConfigs_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1storageInsightConfigs~1{storageInsightName}?api-version=2020-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        StorageInsightConfigs_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1storageInsightConfigs?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_insight_configs/methods/StorageInsightConfigs_ListByWorkspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_insight_configs/methods/StorageInsightConfigs_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_insight_configs/methods/StorageInsightConfigs_Delete'
    tables:
      id: azure.operational_insights.tables
      name: tables
      title: Tables
      methods:
        Tables_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1tables?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Tables_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1tables~1{tableName}?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Tables_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1tables~1{tableName}?api-version=2021-12-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Tables_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1tables~1{tableName}?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Tables_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1tables~1{tableName}?api-version=2021-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Tables_Migrate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1tables~1{tableName}~1migrate?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables/methods/Tables_ListByWorkspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/Tables_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/Tables_Delete'
    gateways:
      id: azure.operational_insights.gateways
      name: gateways
      title: Gateways
      methods:
        Gateways_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1gateways~1{gatewayId}?api-version=2020-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gateways/methods/Gateways_Delete'
    clusters:
      id: azure.operational_insights.clusters
      name: clusters
      title: Clusters
      methods:
        Clusters_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1clusters?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Clusters_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OperationalInsights~1clusters?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Clusters_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1clusters~1{clusterName}?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Clusters_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1clusters~1{clusterName}?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Clusters_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1clusters~1{clusterName}?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Clusters_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1clusters~1{clusterName}?api-version=2021-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_Delete'
    workspace_purge:
      id: azure.operational_insights.workspace_purge
      name: workspace_purge
      title: Workspace_purge
      methods:
        WorkspacePurge_Purge:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1purge?api-version=2020-08-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        WorkspacePurge_GetPurgeStatus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1operations~1{purgeId}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operation_statuses:
      id: azure.operational_insights.operation_statuses
      name: operation_statuses
      title: Operation_statuses
      methods:
        OperationStatuses_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OperationalInsights~1locations~1{location}~1operationStatuses~1{asyncOperationId}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    linked_services:
      id: azure.operational_insights.linked_services
      name: linked_services
      title: Linked_services
      methods:
        LinkedServices_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedServices~1{linkedServiceName}?api-version=2020-08-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        LinkedServices_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedServices~1{linkedServiceName}?api-version=2020-08-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        LinkedServices_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedServices~1{linkedServiceName}?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LinkedServices_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1linkedServices?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linked_services/methods/LinkedServices_ListByWorkspace'
        insert:
          - $ref: '#/components/x-stackQL-resources/linked_services/methods/LinkedServices_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linked_services/methods/LinkedServices_Delete'
    usages:
      id: azure.operational_insights.usages
      name: usages
      title: Usages
      methods:
        Usages_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1usages?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/Usages_List'
        insert: []
        update: []
        delete: []
    available_service_tiers:
      id: azure.operational_insights.available_service_tiers
      name: available_service_tiers
      title: Available_service_tiers
      methods:
        AvailableServiceTiers_ListByWorkspace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1availableServiceTiers?api-version=2020-08-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_service_tiers/methods/AvailableServiceTiers_ListByWorkspace'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.operational_insights.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.OperationalInsights~1operations?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    shared_keys:
      id: azure.operational_insights.shared_keys
      name: shared_keys
      title: Shared_keys
      methods:
        SharedKeys_GetSharedKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1sharedKeys?api-version=2020-08-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        SharedKeys_Regenerate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.OperationalInsights~1workspaces~1{workspaceName}~1regenerateSharedKey?api-version=2020-08-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/managementGroups?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - Workspaces
      operationId: ManagementGroups_List
      description: Gets a list of management groups connected to a workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListManagementGroupsResult'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: management_groups
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataSources/{dataSourceName}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    put:
      tags:
        - DataSources
      operationId: DataSources_CreateOrUpdate
      description: Create or update a data source.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: dataSourceName
          in: path
          description: The name of the datasource resource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters required to create or update a datasource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSource'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
        '201':
          description: Created response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      x-stackQL-resource: data_sources
      x-stackQL-verb: insert
    delete:
      tags:
        - DataSources
      operationId: DataSources_Delete
      description: Deletes a data source instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: dataSourceName
          in: path
          description: Name of the datasource.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
        '204':
          description: NoContent response definition.
      x-stackQL-resource: data_sources
      x-stackQL-verb: delete
    get:
      tags:
        - DataSources
      operationId: DataSources_Get
      description: Gets a datasource instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: dataSourceName
          in: path
          description: Name of the datasource
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSource'
      x-stackQL-resource: data_sources
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataSources?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - DataSources
      operationId: DataSources_ListByWorkspace
      description: Gets the first page of data source instances in a workspace with the link to the next page.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: true
          schema:
            type: string
        - name: $skiptoken
          in: query
          description: Starting point of the collection of data source instances.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResult'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DataSourceFilter'
      x-stackQL-resource: data_sources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/workspaces?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    get:
      tags:
        - Workspaces
      operationId: Workspaces_List
      description: Gets the workspaces in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    get:
      tags:
        - Workspaces
      operationId: Workspaces_ListByResourceGroup
      description: Gets workspaces in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: workspaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    put:
      tags:
        - Workspaces
      operationId: Workspaces_CreateOrUpdate
      description: Create or update a workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters required to create or update a workspace.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '201':
          description: Created response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: workspaces
      x-stackQL-verb: insert
    delete:
      tags:
        - Workspaces
      operationId: Workspaces_Delete
      description: Deletes a workspace resource. To recover the workspace, create it again with the same name, in the same subscription, resource group and location. The name is kept for 14 days and cannot be used for another workspace. To remove the workspace completely and release the name, use the force flag.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: force
          in: query
          description: Deletes the workspace without the recovery option. A workspace that was deleted with this flag cannot be recovered.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK response definition.
        '202':
          description: Accepted
        '204':
          description: NoContent response definition.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: workspaces
      x-stackQL-verb: delete
    get:
      tags:
        - Workspaces
      operationId: Workspaces_Get
      description: Gets a workspace instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
    patch:
      tags:
        - Workspaces
      operationId: Workspaces_Update
      description: Updates a workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters required to patch a workspace.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacePatch'
      responses:
        '200':
          description: The existing workspace was successfully updated. Check provisioningStatus to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: workspaces
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/deletedWorkspaces?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    get:
      tags:
        - DeletedWorkspaces
      operationId: DeletedWorkspaces_List
      description: Gets recently deleted workspaces in a subscription, available for recovery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: deleted_workspaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/deletedWorkspaces?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    get:
      tags:
        - DeletedWorkspaces
      operationId: DeletedWorkspaces_ListByResourceGroup
      description: Gets recently deleted workspaces in a resource group, available for recovery.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: deleted_workspaces
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - DataExport
      operationId: DataExports_ListByWorkspace
      description: Lists the data export instances within a workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExportListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: data_exports
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports/{dataExportName}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    put:
      tags:
        - DataExport
      operationId: DataExports_CreateOrUpdate
      description: Create or update a data export.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: dataExportName
          in: path
          description: The data export rule name.
          required: true
          schema:
            pattern: ^[A-Za-z][A-Za-z0-9-]+[A-Za-z0-9]$
            minLength: 4
            maxLength: 63
            type: string
      requestBody:
        description: The parameters required to create or update a data export.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExport'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExport'
        '201':
          description: Created response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExport'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: data_exports
      x-stackQL-verb: insert
    get:
      tags:
        - DataExport
      operationId: DataExports_Get
      description: Gets a data export instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: dataExportName
          in: path
          description: The data export rule name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataExport'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: data_exports
      x-stackQL-verb: exec
    delete:
      tags:
        - DataExport
      operationId: DataExports_Delete
      description: Deletes the specified data export in a given workspace..
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: dataExportName
          in: path
          description: The data export rule name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK response definition.
        '404':
          description: Not found the specific data export.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: data_exports
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries?api-version=2019-09-01:
    x-api-version: '2019-09-01'
    get:
      description: Gets a list of Queries defined within a Log Analytics QueryPack.
      operationId: Queries_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryPackNameParameter'
        - $ref: '#/components/parameters/MaxItemCountParameter'
        - $ref: '#/components/parameters/IncludeBodyParameter'
        - $ref: '#/components/parameters/ContinuationTokenParameter'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: A list containing 0 or more queries contained within the Log Analytics QueryPack.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPackQueryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: queries
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/search?api-version=2019-09-01:
    x-api-version: '2019-09-01'
    post:
      description: Search a list of Queries defined within a Log Analytics QueryPack according to given search properties.
      operationId: Queries_Search
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryPackNameParameter'
        - $ref: '#/components/parameters/MaxItemCountParameter'
        - $ref: '#/components/parameters/IncludeBodyParameter'
        - $ref: '#/components/parameters/ContinuationTokenParameter'
      requestBody:
        description: Properties by which to search queries in the given Log Analytics QueryPack.
        required: true
        x-ms-requestBody-name: QuerySearchProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogAnalyticsQueryPackQuerySearchProperties'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: A list containing 0 or more queries contained within the Log Analytics QueryPack.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPackQueryListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: queries
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}?api-version=2019-09-01:
    x-api-version: '2019-09-01'
    get:
      description: Gets a specific Log Analytics Query defined within a Log Analytics QueryPack.
      operationId: Queries_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryPackNameParameter'
        - $ref: '#/components/parameters/QueryIdParameter'
      responses:
        '200':
          description: A single query contained within the Log Analytics QueryPack.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPackQuery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: queries
      x-stackQL-verb: exec
    put:
      description: Adds or Updates a specific Query within a Log Analytics QueryPack.
      operationId: Queries_Put
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryPackNameParameter'
        - $ref: '#/components/parameters/QueryIdParameter'
      requestBody:
        description: Properties that need to be specified to create a new query and add it to a Log Analytics QueryPack.
        required: true
        x-ms-requestBody-name: QueryPayload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogAnalyticsQueryPackQuery'
      responses:
        '200':
          description: The new or updated query contained within the Log Analytics QueryPack.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPackQuery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: queries
      x-stackQL-verb: exec
    patch:
      description: Adds or Updates a specific Query within a Log Analytics QueryPack.
      operationId: Queries_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryPackNameParameter'
        - $ref: '#/components/parameters/QueryIdParameter'
      requestBody:
        description: Properties that need to be specified to create a new query and add it to a Log Analytics QueryPack.
        required: true
        x-ms-requestBody-name: QueryPayload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogAnalyticsQueryPackQuery'
      responses:
        '200':
          description: The new or updated query contained within the Log Analytics QueryPack.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPackQuery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: queries
      x-stackQL-verb: exec
    delete:
      description: Deletes a specific Query defined within an Log Analytics QueryPack.
      operationId: Queries_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/QueryPackNameParameter'
        - $ref: '#/components/parameters/QueryIdParameter'
      responses:
        '200':
          description: The query has been successfully removed from the Log Analytics QueryPack
        '204':
          description: The specified query or associated QueryPack does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: queries
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    delete:
      tags:
        - SavedSearches
      operationId: SavedSearches_Delete
      description: Deletes the specified saved search in a given workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: savedSearchId
          in: path
          description: The id of the saved search.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK response definition.
      x-stackQL-resource: saved_searches
      x-stackQL-verb: delete
    put:
      tags:
        - SavedSearches
      operationId: SavedSearches_CreateOrUpdate
      description: Creates or updates a saved search for a given workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: savedSearchId
          in: path
          description: The id of the saved search.
          required: true
          schema:
            type: string
      requestBody:
        description: The parameters required to save a search.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedSearch'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
      x-stackQL-resource: saved_searches
      x-stackQL-verb: insert
    get:
      tags:
        - SavedSearches
      operationId: SavedSearches_Get
      description: Gets the specified saved search for a given workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: savedSearchId
          in: path
          description: The id of the saved search.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
      x-stackQL-resource: saved_searches
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - SavedSearches
      operationId: SavedSearches_ListByWorkspace
      description: Gets the saved searches for a given Log Analytics Workspace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns the list of saved searches for the given Log Analytics Workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearchesListResult'
      x-stackQL-resource: saved_searches
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedStorageAccounts/{dataSourceType}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    put:
      tags:
        - LinkedStorageAccounts
      operationId: LinkedStorageAccounts_CreateOrUpdate
      description: Create or Update a link relation between current workspace and a group of storage accounts of a specific data source type.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/DataSourceTypeParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters required to create or update linked storage accounts.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedStorageAccountsResource'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedStorageAccountsResource'
      x-stackQL-resource: linked_storage_accounts
      x-stackQL-verb: insert
    delete:
      tags:
        - LinkedStorageAccounts
      operationId: LinkedStorageAccounts_Delete
      description: Deletes all linked storage accounts of a specific data source type associated with the specified workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/DataSourceTypeParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
      x-stackQL-resource: linked_storage_accounts
      x-stackQL-verb: delete
    get:
      tags:
        - LinkedStorageAccounts
      operationId: LinkedStorageAccounts_Get
      description: Gets all linked storage account of a specific data source type associated with the specified workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/DataSourceTypeParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedStorageAccountsResource'
      x-stackQL-resource: linked_storage_accounts
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedStorageAccounts?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - LinkedStorageAccounts
      description: Gets all linked storage accounts associated with the specified workspace, storage accounts will be sorted by their data source type.
      operationId: LinkedStorageAccounts_ListByWorkspace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedStorageAccountsListResult'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: linked_storage_accounts
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks/{intelligencePackName}/Disable?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    post:
      tags:
        - Workspaces
        - IntelligencePacks
      operationId: IntelligencePacks_Disable
      description: Disables an intelligence pack for a given workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: intelligencePackName
          in: path
          description: The name of the intelligence pack to be disabled.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
      x-stackQL-resource: intelligence_packs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks/{intelligencePackName}/Enable?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    post:
      tags:
        - Workspaces
        - IntelligencePacks
      operationId: IntelligencePacks_Enable
      description: Enables an intelligence pack for a given workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: intelligencePackName
          in: path
          description: The name of the intelligence pack to be enabled.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
      x-stackQL-resource: intelligence_packs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/intelligencePacks?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - Workspaces
        - IntelligencePacks
      operationId: IntelligencePacks_List
      description: Lists all the intelligence packs possible and whether they are enabled or disabled for a given workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntelligencePack'
      x-stackQL-resource: intelligence_packs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/queryPacks?api-version=2019-09-01:
    x-api-version: '2019-09-01'
    get:
      description: Gets a list of all Log Analytics QueryPacks within a subscription.
      operationId: QueryPacks_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list containing 0 or more Log Analytics QueryPack definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPackListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: query_packs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks?api-version=2019-09-01:
    x-api-version: '2019-09-01'
    get:
      description: Gets a list of Log Analytics QueryPacks within a resource group.
      operationId: QueryPacks_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: A list containing 0 or more Log Analytics QueryPack definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPackListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: query_packs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}?api-version=2019-09-01:
    x-api-version: '2019-09-01'
    delete:
      description: Deletes a Log Analytics QueryPack.
      operationId: QueryPacks_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: Successful request when deleting a Log Analytics QueryPack.
        '204':
          description: The specified QueryPack does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: query_packs
      x-stackQL-verb: delete
    get:
      description: Returns a Log Analytics QueryPack.
      operationId: QueryPacks_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      responses:
        '200':
          description: An Log Analytics QueryPack definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPack'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: query_packs
      x-stackQL-verb: exec
    put:
      description: 'Creates (or updates) a Log Analytics QueryPack. Note: You cannot specify a different value for InstrumentationKey nor AppId in the Put operation.'
      operationId: QueryPacks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Properties that need to be specified to create or update a Log Analytics QueryPack.
        required: true
        x-ms-requestBody-name: LogAnalyticsQueryPackPayload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogAnalyticsQueryPack'
      responses:
        '200':
          description: Successful request when creating or updating a Log Analytics QueryPack. The updated QueryPack is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPack'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: query_packs
      x-stackQL-verb: insert
    patch:
      description: Updates an existing QueryPack's tags. To update other fields use the CreateOrUpdate method.
      operationId: QueryPacks_UpdateTags
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
      requestBody:
        description: Updated tag information to set into the QueryPack instance.
        required: true
        x-ms-requestBody-name: QueryPackTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsResource'
      responses:
        '200':
          description: Updating the Log Analytics QueryPack's tags was successful. QueryPack tags are updated and returned with the rest of the QueryPack's object properties.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsQueryPack'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: query_packs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/schema?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    post:
      tags:
        - Workspaces
      operationId: Schema_Get
      description: Gets the schema for a given workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGetSchemaResponse'
      x-stackQL-resource: schema
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    put:
      tags:
        - StorageInsights
      operationId: StorageInsightConfigs_CreateOrUpdate
      description: Create or update a storage insight.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: storageInsightName
          in: path
          description: Name of the storageInsightsConfigs resource
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters required to create or update a storage insight.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageInsight'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageInsight'
        '201':
          description: Created response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageInsight'
      x-stackQL-resource: storage_insight_configs
      x-stackQL-verb: insert
    get:
      tags:
        - StorageInsights
      operationId: StorageInsightConfigs_Get
      description: Gets a storage insight instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: storageInsightName
          in: path
          description: Name of the storageInsightsConfigs resource
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageInsight'
      x-stackQL-resource: storage_insight_configs
      x-stackQL-verb: exec
    delete:
      tags:
        - StorageInsights
      operationId: StorageInsightConfigs_Delete
      description: Deletes a storageInsightsConfigs resource
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: storageInsightName
          in: path
          description: Name of the storageInsightsConfigs resource
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
        '204':
          description: NoContent response definition.
      x-stackQL-resource: storage_insight_configs
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - StorageInsights
      operationId: StorageInsightConfigs_ListByWorkspace
      description: Lists the storage insight instances within a workspace
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageInsightListResult'
      x-ms-pageable:
        nextLinkName: '@odata.nextLink'
      x-stackQL-resource: storage_insight_configs
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    get:
      tags:
        - Tables
      operationId: Tables_ListByWorkspace
      description: Gets all the tables for the specified Log Analytics workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TablesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: tables
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    put:
      tags:
        - Tables
      operationId: Tables_CreateOrUpdate
      description: Update or Create a Log Analytics workspace table.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/TableNameParameter'
      requestBody:
        description: The parameters required to update table properties.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        '202':
          description: Accepted response definition (Long running operation).
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: tables
      x-stackQL-verb: insert
    patch:
      tags:
        - Tables
      operationId: Tables_Update
      description: Update a Log Analytics workspace table.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/TableNameParameter'
      requestBody:
        description: The parameters required to update table properties.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        '202':
          description: Accepted response definition (Long running operation).
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: tables
      x-stackQL-verb: exec
    get:
      tags:
        - Tables
      operationId: Tables_Get
      description: Gets a Log Analytics workspace table.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/TableNameParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: tables
      x-stackQL-verb: exec
    delete:
      tags:
        - Tables
      operationId: Tables_Delete
      description: Delete a Log Analytics workspace table.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/TableNameParameter'
      responses:
        '200':
          description: OK response definition.
        '202':
          description: Accepted response definition (Long running operation).
        '204':
          description: OK response definition.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-stackQL-resource: tables
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/tables/{tableName}/migrate?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    post:
      tags:
        - Tables
      operationId: Tables_Migrate
      description: Migrate a Log Analytics table from support of the Data Collector API and Custom Fields features to support of Data Collection Rule-based Custom Logs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/TableNameParameter'
      responses:
        '200':
          description: OK response definition.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: tables
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/gateways/{gatewayId}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    delete:
      tags:
        - Workspaces
      operationId: Gateways_Delete
      description: Delete a Log Analytics gateway.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/GatewayIdParameter'
      responses:
        '200':
          description: The specified gateway was deleted successfully.
      x-stackQL-resource: gateways
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters?api-version=2021-06-01:
    x-api-version: '2021-06-01'
    get:
      tags:
        - Clusters
      operationId: Clusters_ListByResourceGroup
      description: Gets Log Analytics clusters in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clusters
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/clusters?api-version=2021-06-01:
    x-api-version: '2021-06-01'
    get:
      tags:
        - Clusters
      operationId: Clusters_List
      description: Gets the Log Analytics clusters in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: clusters
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}?api-version=2021-06-01:
    x-api-version: '2021-06-01'
    put:
      tags:
        - Clusters
      operationId: Clusters_CreateOrUpdate
      description: Create or update a Log Analytics cluster.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: clusterName
          in: path
          description: The name of the Log Analytics cluster.
          required: true
          schema:
            pattern: ^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$
            minLength: 4
            maxLength: 63
            type: string
      requestBody:
        description: The parameters required to create or update a Log Analytics cluster.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: Created response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: Accepted response definition.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: clusters
      x-stackQL-verb: insert
    delete:
      tags:
        - Clusters
      operationId: Clusters_Delete
      description: Deletes a cluster instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: clusterName
          in: path
          description: Name of the Log Analytics Cluster.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
        '202':
          description: Accepted response definition.
        '204':
          description: NoContent response definition.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: clusters
      x-stackQL-verb: delete
    get:
      tags:
        - Clusters
      operationId: Clusters_Get
      description: Gets a Log Analytics cluster instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: clusterName
          in: path
          description: Name of the Log Analytics Cluster.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
    patch:
      tags:
        - Clusters
      operationId: Clusters_Update
      description: Updates a Log Analytics cluster.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: clusterName
          in: path
          description: Name of the Log Analytics Cluster.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters required to patch a Log Analytics cluster.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPatch'
      responses:
        '200':
          description: The existing cluster was successfully updated. Check provisioningStatus to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: clusters
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/purge?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    post:
      tags:
        - Workspaces
      description: |-
        Purges data in an Log Analytics workspace by a set of user-defined filters.

        In order to manage system resources, purge requests are throttled at 50 requests per hour. You should batch the execution of purge requests by sending a single command whose predicate includes all user identities that require purging. Use the in operator to specify multiple identities. You should run the query prior to using for a purge request to verify that the results are expected.
        Log Analytics only supports purge operations required for compliance with GDPR. The Log Analytics product team reserves the right to reject requests for purge operations that are not for the purpose of GDPR compliance. In the event of a dispute, please create a support ticket
      operationId: WorkspacePurge_Purge
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      requestBody:
        description: Describes the body of a request to purge data in a single table of an Log Analytics Workspace
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacePurgeBody'
      responses:
        '202':
          description: Accepted request for purging an Log Analytics workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacePurgeResponse'
          headers:
            x-ms-status-location:
              schema:
                type: string
              description: The location from which to request the operation status.
      x-stackQL-resource: workspace_purge
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/operations/{purgeId}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - Workspaces
      description: Gets status of an ongoing purge operation.
      operationId: WorkspacePurge_GetPurgeStatus
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/WorkspacePurgeIdParameter'
      responses:
        '200':
          description: 'Returns status of purge operation in body of response. e.g.:  running, completed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacePurgeStatusResponse'
      x-stackQL-resource: workspace_purge
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/locations/{location}/operationStatuses/{asyncOperationId}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - asyncOperations
      operationId: OperationStatuses_Get
      description: Get the status of a long running azure asynchronous operation.
      parameters:
        - name: location
          in: path
          description: The region name of operation.
          required: true
          schema:
            type: string
        - name: asyncOperationId
          in: path
          description: The operation Id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. Operation status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
      x-stackQL-resource: operation_statuses
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices/{linkedServiceName}?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    put:
      tags:
        - LinkedServices
      operationId: LinkedServices_CreateOrUpdate
      description: Create or update a linked service.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: linkedServiceName
          in: path
          description: Name of the linkedServices resource
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The parameters required to create or update a linked service.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedService'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedService'
        '201':
          description: Created response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedService'
        '202':
          description: Accepted response definition.
      x-ms-long-running-operation: true
      x-stackQL-resource: linked_services
      x-stackQL-verb: insert
    delete:
      tags:
        - LinkedServices
      operationId: LinkedServices_Delete
      description: Deletes a linked service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: linkedServiceName
          in: path
          description: Name of the linked service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedService'
        '202':
          description: Accepted response definition.
        '204':
          description: NoContent response definition.
      x-ms-long-running-operation: true
      x-stackQL-resource: linked_services
      x-stackQL-verb: delete
    get:
      tags:
        - LinkedServices
      operationId: LinkedServices_Get
      description: Gets a linked service instance.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - name: linkedServiceName
          in: path
          description: Name of the linked service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedService'
      x-stackQL-resource: linked_services
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - LinkedServices
      operationId: LinkedServices_ListByWorkspace
      description: Gets the linked services instances in a workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceListResult'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: linked_services
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/usages?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - Workspaces
      operationId: Usages_List
      description: Gets a list of usage metrics for a workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceListUsagesResult'
      x-ms-pageable:
        nextLinkName: null
      x-stackQL-resource: usages
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/availableServiceTiers?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    get:
      tags:
        - AvailableServiceTiers
      operationId: AvailableServiceTiers_ListByWorkspace
      description: Gets the available service tiers for the workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableServiceTier'
      x-stackQL-resource: available_service_tiers
      x-stackQL-verb: select
  /providers/Microsoft.OperationalInsights/operations?api-version=2021-12-01-preview:
    x-api-version: 2021-12-01-preview
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available OperationalInsights Rest API operations.
      parameters: []
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/sharedKeys?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    post:
      tags:
        - Workspaces
      operationId: SharedKeys_GetSharedKeys
      description: Gets the shared keys for a workspace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK response definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedKeys'
      x-stackQL-resource: shared_keys
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/regenerateSharedKey?api-version=2020-08-01:
    x-api-version: '2020-08-01'
    post:
      tags:
        - Workspaces
      operationId: SharedKeys_Regenerate
      description: Regenerates the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft Operational Insights agents to the workspace.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/WorkspaceNameParameter'
      responses:
        '200':
          description: Returns the new shared keys associated with the Log Analytics Workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedKeys'
      x-stackQL-resource: shared_keys
      x-stackQL-verb: exec
