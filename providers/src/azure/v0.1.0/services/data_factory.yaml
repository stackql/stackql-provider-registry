openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: DataFactoryManagementClient (Microsoft.DataFactory)
  description: DataFactoryManagementClient
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-20-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    IntegrationRuntime:
      description: Azure Data Factory nested object which serves as a compute resource for activities.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          description: Type of integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeType'
        description:
          description: Integration runtime description.
          type: string
      additionalProperties:
        type: object
      required:
        - type
    IntegrationRuntimeType:
      description: The type of integration runtime.
      type: string
      enum:
        - Managed
        - SelfHosted
      x-ms-enum:
        name: IntegrationRuntimeType
        modelAsString: true
    ManagedIntegrationRuntime:
      x-ms-discriminator-value: Managed
      description: Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
      type: object
      allOf:
        - $ref: '#/components/schemas/IntegrationRuntime'
      properties:
        state:
          description: Integration runtime state, only valid for managed dedicated integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeState'
          readOnly: true
        typeProperties:
          description: Managed integration runtime properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedIntegrationRuntimeTypeProperties'
        managedVirtualNetwork:
          description: Managed Virtual Network reference.
          $ref: '#/components/schemas/ManagedVirtualNetworkReference'
      required:
        - typeProperties
    ManagedIntegrationRuntimeTypeProperties:
      description: Managed integration runtime type properties.
      type: object
      properties:
        computeProperties:
          description: The compute resource for managed integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeComputeProperties'
        ssisProperties:
          description: SSIS properties for managed integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeSsisProperties'
        customerVirtualNetwork:
          description: The name of virtual network to which Azure-SSIS integration runtime will join
          $ref: '#/components/schemas/IntegrationRuntimeCustomerVirtualNetwork'
    IntegrationRuntimeComputeProperties:
      description: The compute resource properties for managed integration runtime.
      type: object
      properties:
        location:
          description: The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
          type: string
        nodeSize:
          description: The node size requirement to managed integration runtime.
          type: string
        numberOfNodes:
          description: The required number of nodes for managed integration runtime.
          type: integer
          minimum: 1
        maxParallelExecutionsPerNode:
          description: Maximum parallel executions count per node for managed integration runtime.
          type: integer
          minimum: 1
        dataFlowProperties:
          description: Data flow properties for managed integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeDataFlowProperties'
        vNetProperties:
          description: VNet properties for managed integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeVNetProperties'
      additionalProperties:
        type: object
    IntegrationRuntimeDataFlowProperties:
      description: Data flow properties for managed integration runtime.
      type: object
      properties:
        computeType:
          description: Compute type of the cluster which will execute data flow job.
          type: string
          enum:
            - General
            - MemoryOptimized
            - ComputeOptimized
          x-ms-enum:
            name: DataFlowComputeType
            modelAsString: true
        coreCount:
          description: 'Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.'
          type: integer
        timeToLive:
          description: Time to live (in minutes) setting of the cluster which will execute data flow job.
          type: integer
          minimum: 0
        cleanup:
          description: Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as false. Default is true.
          type: boolean
      additionalProperties:
        type: object
    IntegrationRuntimeVNetProperties:
      description: VNet properties for managed integration runtime.
      type: object
      properties:
        vNetId:
          description: The ID of the VNet that this integration runtime will join.
          type: string
        subnet:
          description: The name of the subnet this integration runtime will join.
          type: string
        publicIPs:
          description: Resource IDs of the public IP addresses that this integration runtime will use.
          type: array
          items:
            type: string
            description: The ID of the public IP address.
        subnetId:
          description: The ID of subnet, to which this Azure-SSIS integration runtime will be joined.
          type: string
      additionalProperties:
        type: object
    IntegrationRuntimeSsisProperties:
      description: SSIS properties for managed integration runtime.
      type: object
      properties:
        catalogInfo:
          description: Catalog information for managed dedicated integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeSsisCatalogInfo'
        licenseType:
          description: License type for bringing your own license scenario.
          type: string
          enum:
            - BasePrice
            - LicenseIncluded
          x-ms-enum:
            name: IntegrationRuntimeLicenseType
            modelAsString: true
        customSetupScriptProperties:
          description: Custom setup script properties for a managed dedicated integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeCustomSetupScriptProperties'
        dataProxyProperties:
          description: Data proxy properties for a managed dedicated integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeDataProxyProperties'
        edition:
          description: The edition for the SSIS Integration Runtime
          type: string
          enum:
            - Standard
            - Enterprise
          x-ms-enum:
            name: IntegrationRuntimeEdition
            modelAsString: true
        expressCustomSetupProperties:
          description: Custom setup without script properties for a SSIS integration runtime.
          type: array
          items:
            $ref: '#/components/schemas/CustomSetupBase'
          x-ms-identifiers: []
        packageStores:
          description: Package stores for the SSIS Integration Runtime.
          type: array
          items:
            $ref: '#/components/schemas/PackageStore'
          x-ms-identifiers:
            - name
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      additionalProperties:
        type: object
    IntegrationRuntimeCustomerVirtualNetwork:
      description: The definition and properties of virtual network to which Azure-SSIS integration runtime will join.
      type: object
      properties:
        subnetId:
          description: The ID of subnet to which Azure-SSIS integration runtime will join.
          type: string
    IntegrationRuntimeSsisCatalogInfo:
      description: Catalog information for managed dedicated integration runtime.
      type: object
      properties:
        catalogServerEndpoint:
          description: The catalog database server URL.
          type: string
        catalogAdminUserName:
          description: The administrator user name of catalog database.
          type: string
          minLength: 1
          maxLength: 128
        catalogAdminPassword:
          description: The password of the administrator user account of the catalog database.
          $ref: '#/components/schemas/SecureString'
        catalogPricingTier:
          description: The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/
          type: string
          enum:
            - Basic
            - Standard
            - Premium
            - PremiumRS
          x-ms-enum:
            name: IntegrationRuntimeSsisCatalogPricingTier
            modelAsString: true
        dualStandbyPairName:
          description: The dual standby pair name of Azure-SSIS Integration Runtimes to support SSISDB failover.
          type: string
      additionalProperties:
        type: object
    IntegrationRuntimeCustomSetupScriptProperties:
      description: Custom setup script properties for a managed dedicated integration runtime.
      type: object
      properties:
        blobContainerUri:
          description: The URI of the Azure blob container that contains the custom setup script.
          type: string
        sasToken:
          description: The SAS token of the Azure blob container.
          $ref: '#/components/schemas/SecureString'
    IntegrationRuntimeDataProxyProperties:
      description: Data proxy properties for a managed dedicated integration runtime.
      type: object
      properties:
        connectVia:
          description: The self-hosted integration runtime reference.
          $ref: '#/components/schemas/EntityReference'
        stagingLinkedService:
          description: The staging linked service reference.
          $ref: '#/components/schemas/EntityReference'
        path:
          description: The path to contain the staged data in the Blob storage.
          type: string
    PackageStore:
      description: Package store for the SSIS integration runtime.
      type: object
      properties:
        name:
          description: The name of the package store
          type: string
        packageStoreLinkedService:
          description: The package store linked service reference.
          $ref: '#/components/schemas/EntityReference'
      required:
        - name
        - packageStoreLinkedService
    CustomSetupBase:
      description: The base definition of the custom setup.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          description: The type of custom setup.
          type: string
      required:
        - type
    CmdkeySetup:
      description: The custom setup of running cmdkey commands.
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomSetupBase'
      properties:
        typeProperties:
          description: Cmdkey command custom setup type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CmdkeySetupTypeProperties'
      required:
        - typeProperties
    CmdkeySetupTypeProperties:
      description: Cmdkey command custom setup type properties.
      type: object
      properties:
        targetName:
          description: The server name of data source access.
          type: object
        userName:
          description: The user name of data source access.
          type: object
        password:
          description: The password of data source access.
          $ref: '#/components/schemas/SecretBase'
      required:
        - targetName
        - userName
        - password
    EnvironmentVariableSetup:
      description: The custom setup of setting environment variable.
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomSetupBase'
      properties:
        typeProperties:
          description: Add environment variable type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EnvironmentVariableSetupTypeProperties'
      required:
        - typeProperties
    EnvironmentVariableSetupTypeProperties:
      description: Environment variable custom setup type properties.
      type: object
      properties:
        variableName:
          description: The name of the environment variable.
          type: string
        variableValue:
          description: The value of the environment variable.
          type: string
      required:
        - variableName
        - variableValue
    ComponentSetup:
      description: The custom setup of installing 3rd party components.
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomSetupBase'
      properties:
        typeProperties:
          description: Install 3rd party component type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LicensedComponentSetupTypeProperties'
      required:
        - typeProperties
    LicensedComponentSetupTypeProperties:
      description: Installation of licensed component setup type properties.
      type: object
      properties:
        componentName:
          description: The name of the 3rd party component.
          type: string
        licenseKey:
          description: The license key to activate the component.
          $ref: '#/components/schemas/SecretBase'
      required:
        - componentName
    AzPowerShellSetup:
      description: The express custom setup of installing Azure PowerShell.
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomSetupBase'
      properties:
        typeProperties:
          description: Install Azure PowerShell type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzPowerShellSetupTypeProperties'
      required:
        - typeProperties
    AzPowerShellSetupTypeProperties:
      description: Installation of Azure PowerShell type properties.
      type: object
      properties:
        version:
          description: The required version of Azure PowerShell to install.
          type: string
      required:
        - version
    EntityReference:
      description: The entity reference.
      type: object
      properties:
        type:
          description: The type of this referenced entity.
          type: string
          enum:
            - IntegrationRuntimeReference
            - LinkedServiceReference
          x-ms-enum:
            name: IntegrationRuntimeEntityReferenceType
            modelAsString: true
        referenceName:
          description: The name of this referenced entity.
          type: string
    SelfHostedIntegrationRuntime:
      x-ms-discriminator-value: SelfHosted
      description: Self-hosted integration runtime.
      type: object
      allOf:
        - $ref: '#/components/schemas/IntegrationRuntime'
      properties:
        typeProperties:
          description: When this property is not null, means this is a linked integration runtime. The property is used to access original integration runtime.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SelfHostedIntegrationRuntimeTypeProperties'
    SelfHostedIntegrationRuntimeTypeProperties:
      description: The self-hosted integration runtime properties.
      type: object
      properties:
        linkedInfo:
          $ref: '#/components/schemas/LinkedIntegrationRuntimeType'
    LinkedIntegrationRuntimeType:
      description: The base definition of a linked integration runtime.
      discriminator:
        propertyName: authorizationType
      type: object
      properties:
        authorizationType:
          type: string
          description: The authorization type for integration runtime sharing.
      required:
        - authorizationType
    LinkedIntegrationRuntimeKeyAuthorization:
      x-ms-discriminator-value: Key
      description: The key authorization type integration runtime.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedIntegrationRuntimeType'
      properties:
        key:
          description: The key used for authorization.
          $ref: '#/components/schemas/SecureString'
      required:
        - key
    LinkedIntegrationRuntimeRbacAuthorization:
      x-ms-discriminator-value: RBAC
      description: The role based access control (RBAC) authorization type integration runtime.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedIntegrationRuntimeType'
      properties:
        resourceId:
          description: The resource identifier of the integration runtime to be shared.
          type: string
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - resourceId
    IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse:
      description: Azure-SSIS integration runtime outbound network dependency endpoints.
      type: object
      properties:
        value:
          description: The list of outbound network dependency endpoints.
          type: array
          items:
            $ref: '#/components/schemas/IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint'
          x-ms-identifiers:
            - category
    IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint:
      description: Azure-SSIS integration runtime outbound network dependency endpoints for one category.
      type: object
      properties:
        category:
          description: The category of outbound network dependency.
          type: string
        endpoints:
          description: The endpoints for outbound network dependency.
          type: array
          items:
            $ref: '#/components/schemas/IntegrationRuntimeOutboundNetworkDependenciesEndpoint'
          x-ms-identifiers:
            - domainName
    IntegrationRuntimeOutboundNetworkDependenciesEndpoint:
      description: The endpoint for Azure-SSIS integration runtime outbound network dependency.
      type: object
      properties:
        domainName:
          description: The domain name of endpoint.
          type: string
        endpointDetails:
          description: The details of endpoint.
          type: array
          items:
            $ref: '#/components/schemas/IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails'
          x-ms-identifiers:
            - port
    IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails:
      description: The details of Azure-SSIS integration runtime outbound network dependency endpoint.
      type: object
      properties:
        port:
          description: The port of endpoint.
          type: integer
          format: int32
    IntegrationRuntimeStatus:
      description: Integration runtime status.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          description: Type of integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeType'
        dataFactoryName:
          description: The data factory name which the integration runtime belong to.
          type: string
          readOnly: true
        state:
          description: The state of integration runtime.
          $ref: '#/components/schemas/IntegrationRuntimeState'
          readOnly: true
      additionalProperties:
        type: object
      required:
        - type
    IntegrationRuntimeState:
      description: The state of integration runtime.
      type: string
      readOnly: true
      enum:
        - Initial
        - Stopped
        - Started
        - Starting
        - Stopping
        - NeedRegistration
        - Online
        - Limited
        - Offline
        - AccessDenied
      x-ms-enum:
        name: IntegrationRuntimeState
        modelAsString: true
    ManagedIntegrationRuntimeStatus:
      x-ms-discriminator-value: Managed
      description: Managed integration runtime status.
      type: object
      allOf:
        - $ref: '#/components/schemas/IntegrationRuntimeStatus'
      properties:
        typeProperties:
          description: Managed integration runtime status type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedIntegrationRuntimeStatusTypeProperties'
      required:
        - typeProperties
    ManagedIntegrationRuntimeStatusTypeProperties:
      description: Managed integration runtime status type properties.
      type: object
      properties:
        createTime:
          description: The time at which the integration runtime was created, in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        nodes:
          description: The list of nodes for managed integration runtime.
          type: array
          items:
            $ref: '#/components/schemas/ManagedIntegrationRuntimeNode'
          readOnly: true
          x-ms-identifiers:
            - nodeId
        otherErrors:
          description: The errors that occurred on this integration runtime.
          type: array
          items:
            $ref: '#/components/schemas/ManagedIntegrationRuntimeError'
          readOnly: true
          x-ms-identifiers: []
        lastOperation:
          description: The last operation result that occurred on this integration runtime.
          $ref: '#/components/schemas/ManagedIntegrationRuntimeOperationResult'
          readOnly: true
    ManagedIntegrationRuntimeOperationResult:
      description: Properties of managed integration runtime operation result.
      properties:
        type:
          description: The operation type. Could be start or stop.
          type: string
          readOnly: true
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
          readOnly: true
        result:
          description: The operation result.
          type: string
          readOnly: true
        errorCode:
          description: The error code.
          type: string
          readOnly: true
        parameters:
          description: Managed integration runtime error parameters.
          type: array
          items:
            type: string
            description: Error message parameters.
          readOnly: true
        activityId:
          description: The activity id for the operation request.
          type: string
          readOnly: true
      additionalProperties:
        type: object
    ManagedIntegrationRuntimeNode:
      description: Properties of integration runtime node.
      properties:
        nodeId:
          description: The managed integration runtime node id.
          type: string
          readOnly: true
        status:
          description: The managed integration runtime node status.
          type: string
          readOnly: true
          enum:
            - Starting
            - Available
            - Recycling
            - Unavailable
          x-ms-enum:
            name: ManagedIntegrationRuntimeNodeStatus
            modelAsString: true
        errors:
          description: The errors that occurred on this integration runtime node.
          type: array
          items:
            $ref: '#/components/schemas/ManagedIntegrationRuntimeError'
          x-ms-identifiers: []
      additionalProperties:
        type: object
    ManagedIntegrationRuntimeError:
      description: Error definition for managed integration runtime.
      properties:
        time:
          description: The time when the error occurred.
          type: string
          format: date-time
          readOnly: true
        code:
          description: Error code.
          type: string
          readOnly: true
        parameters:
          description: Managed integration runtime error parameters.
          type: array
          items:
            type: string
            description: Error message parameters.
          readOnly: true
        message:
          description: Error message.
          type: string
          readOnly: true
      additionalProperties:
        type: object
    SelfHostedIntegrationRuntimeStatus:
      x-ms-discriminator-value: SelfHosted
      description: Self-hosted integration runtime status.
      type: object
      allOf:
        - $ref: '#/components/schemas/IntegrationRuntimeStatus'
      properties:
        typeProperties:
          description: Self-hosted integration runtime status type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SelfHostedIntegrationRuntimeStatusTypeProperties'
      required:
        - typeProperties
    SelfHostedIntegrationRuntimeStatusTypeProperties:
      description: Self-hosted integration runtime status type properties.
      type: object
      properties:
        createTime:
          description: The time at which the integration runtime was created, in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        taskQueueId:
          description: The task queue id of the integration runtime.
          type: string
          readOnly: true
        internalChannelEncryption:
          description: It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).
          type: string
          readOnly: true
          enum:
            - NotSet
            - SslEncrypted
            - NotEncrypted
          x-ms-enum:
            name: IntegrationRuntimeInternalChannelEncryptionMode
            modelAsString: true
        version:
          description: Version of the integration runtime.
          type: string
          readOnly: true
        nodes:
          description: The list of nodes for this integration runtime.
          type: array
          items:
            $ref: '#/components/schemas/SelfHostedIntegrationRuntimeNode'
          x-ms-identifiers:
            - nodeName
        scheduledUpdateDate:
          description: The date at which the integration runtime will be scheduled to update, in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        updateDelayOffset:
          description: The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours
          type: string
          readOnly: true
        localTimeZoneOffset:
          description: The local time zone offset in hours.
          type: string
          readOnly: true
        capabilities:
          description: Object with additional information about integration runtime capabilities.
          type: object
          readOnly: true
          additionalProperties:
            type: string
        serviceUrls:
          description: The URLs for the services used in integration runtime backend service.
          type: array
          items:
            description: The service URL
            type: string
          readOnly: true
        autoUpdate:
          description: Whether Self-hosted integration runtime auto update has been turned on.
          $ref: '#/components/schemas/IntegrationRuntimeAutoUpdate'
          readOnly: true
        versionStatus:
          description: Status of the integration runtime version.
          type: string
          readOnly: true
        links:
          description: The list of linked integration runtimes that are created to share with this integration runtime.
          type: array
          items:
            $ref: '#/components/schemas/LinkedIntegrationRuntime'
          x-ms-identifiers:
            - name
        pushedVersion:
          description: The version that the integration runtime is going to update to.
          type: string
          readOnly: true
        latestVersion:
          description: The latest version on download center.
          type: string
          readOnly: true
        autoUpdateETA:
          description: The estimated time when the self-hosted integration runtime will be updated.
          type: string
          format: date-time
          readOnly: true
    IntegrationRuntimeAutoUpdate:
      description: The state of integration runtime auto update.
      type: string
      enum:
        - 'On'
        - 'Off'
      x-ms-enum:
        name: IntegrationRuntimeAutoUpdate
        modelAsString: true
    LinkedIntegrationRuntime:
      description: The linked integration runtime information.
      type: object
      properties:
        name:
          description: The name of the linked integration runtime.
          type: string
          readOnly: true
        subscriptionId:
          description: The subscription ID for which the linked integration runtime belong to.
          type: string
          readOnly: true
        dataFactoryName:
          description: The name of the data factory for which the linked integration runtime belong to.
          type: string
          readOnly: true
        dataFactoryLocation:
          description: The location of the data factory for which the linked integration runtime belong to.
          type: string
          readOnly: true
        createTime:
          description: The creating time of the linked integration runtime.
          type: string
          format: date-time
          readOnly: true
    SelfHostedIntegrationRuntimeNode:
      description: Properties of Self-hosted integration runtime node.
      properties:
        nodeName:
          description: Name of the integration runtime node.
          type: string
          readOnly: true
        machineName:
          description: Machine name of the integration runtime node.
          type: string
          readOnly: true
        hostServiceUri:
          description: URI for the host machine of the integration runtime.
          type: string
          readOnly: true
        status:
          description: Status of the integration runtime node.
          type: string
          readOnly: true
          enum:
            - NeedRegistration
            - Online
            - Limited
            - Offline
            - Upgrading
            - Initializing
            - InitializeFailed
          x-ms-enum:
            name: SelfHostedIntegrationRuntimeNodeStatus
            modelAsString: true
        capabilities:
          description: The integration runtime capabilities dictionary
          type: object
          readOnly: true
          additionalProperties:
            type: string
        versionStatus:
          description: Status of the integration runtime node version.
          type: string
          readOnly: true
        version:
          description: Version of the integration runtime node.
          type: string
          readOnly: true
        registerTime:
          description: The time at which the integration runtime node was registered in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        lastConnectTime:
          description: The most recent time at which the integration runtime was connected in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        expiryTime:
          description: The time at which the integration runtime will expire in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        lastStartTime:
          description: The time the node last started up.
          type: string
          format: date-time
          readOnly: true
        lastStopTime:
          description: The integration runtime node last stop time.
          type: string
          format: date-time
          readOnly: true
        lastUpdateResult:
          description: The result of the last integration runtime node update.
          type: string
          enum:
            - None
            - Succeed
            - Fail
          x-ms-enum:
            name: IntegrationRuntimeUpdateResult
            modelAsString: true
          readOnly: true
        lastStartUpdateTime:
          description: The last time for the integration runtime node update start.
          type: string
          format: date-time
          readOnly: true
        lastEndUpdateTime:
          description: The last time for the integration runtime node update end.
          type: string
          format: date-time
          readOnly: true
        isActiveDispatcher:
          description: Indicates whether this node is the active dispatcher for integration runtime requests.
          type: boolean
          readOnly: true
        concurrentJobsLimit:
          description: Maximum concurrent jobs on the integration runtime node.
          type: integer
          readOnly: true
        maxConcurrentJobs:
          description: The maximum concurrent jobs in this integration runtime.
          type: integer
          readOnly: true
      additionalProperties:
        type: object
    IntegrationRuntimeConnectionInfo:
      description: Connection information for encrypting the on-premises data source credentials.
      type: object
      properties:
        serviceToken:
          description: The token generated in service. Callers use this token to authenticate to integration runtime.
          type: string
          readOnly: true
        identityCertThumbprint:
          description: The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.
          type: string
          readOnly: true
        hostServiceUri:
          description: The on-premises integration runtime host URL.
          type: string
          readOnly: true
        version:
          description: The integration runtime version.
          type: string
          readOnly: true
        publicKey:
          description: The public key for encrypting a credential when transferring the credential to the integration runtime.
          type: string
          readOnly: true
        isIdentityCertExprired:
          description: Whether the identity certificate is expired.
          type: boolean
          readOnly: true
      additionalProperties:
        type: object
    IntegrationRuntimeRegenerateKeyParameters:
      description: Parameters to regenerate the authentication key.
      type: object
      properties:
        keyName:
          description: The name of the authentication key to regenerate.
          type: string
          enum:
            - authKey1
            - authKey2
          x-ms-enum:
            name: IntegrationRuntimeAuthKeyName
            modelAsString: true
    IntegrationRuntimeAuthKeys:
      description: The integration runtime authentication keys.
      type: object
      properties:
        authKey1:
          type: string
          description: The primary integration runtime authentication key.
        authKey2:
          type: string
          description: The secondary integration runtime authentication key.
    IntegrationRuntimeMonitoringData:
      description: Get monitoring data response.
      type: object
      properties:
        name:
          type: string
          description: Integration runtime name.
        nodes:
          type: array
          description: Integration runtime node monitoring data.
          items:
            $ref: '#/components/schemas/IntegrationRuntimeNodeMonitoringData'
          x-ms-identifiers:
            - nodeName
    IntegrationRuntimeNodeMonitoringData:
      description: Monitoring data for integration runtime node.
      type: object
      properties:
        nodeName:
          description: Name of the integration runtime node.
          type: string
          readOnly: true
        availableMemoryInMB:
          description: Available memory (MB) on the integration runtime node.
          type: integer
          readOnly: true
        cpuUtilization:
          description: CPU percentage on the integration runtime node.
          type: integer
          readOnly: true
        concurrentJobsLimit:
          description: Maximum concurrent jobs on the integration runtime node.
          type: integer
          readOnly: true
        concurrentJobsRunning:
          description: The number of jobs currently running on the integration runtime node.
          type: integer
          readOnly: true
        maxConcurrentJobs:
          description: The maximum concurrent jobs in this integration runtime.
          type: integer
          readOnly: true
        sentBytes:
          description: Sent bytes on the integration runtime node.
          type: number
          readOnly: true
        receivedBytes:
          description: Received bytes on the integration runtime node.
          type: number
          readOnly: true
      additionalProperties:
        type: object
    IntegrationRuntimeNodeIpAddress:
      type: object
      description: The IP address of self-hosted integration runtime node.
      properties:
        ipAddress:
          description: The IP address of self-hosted integration runtime node.
          type: string
          readOnly: true
    SsisObjectMetadataListResponse:
      type: object
      description: A list of SSIS object metadata.
      properties:
        value:
          type: array
          description: List of SSIS object metadata.
          items:
            $ref: '#/components/schemas/SsisObjectMetadata'
        nextLink:
          type: string
          description: The link to the next page of results, if any remaining results exist.
    SsisObjectMetadata:
      type: object
      description: SSIS object metadata.
      discriminator:
        propertyName: type
      properties:
        type:
          description: Type of metadata.
          $ref: '#/components/schemas/SsisObjectMetadataType'
        id:
          type: integer
          format: int64
          description: Metadata id.
        name:
          type: string
          description: Metadata name.
        description:
          type: string
          description: Metadata description.
      required:
        - type
    SsisObjectMetadataType:
      description: The type of SSIS object metadata.
      type: string
      enum:
        - Folder
        - Project
        - Package
        - Environment
      x-ms-enum:
        name: SsisObjectMetadataType
        modelAsString: true
    SsisFolder:
      x-ms-discriminator-value: Folder
      type: object
      description: Ssis folder.
      allOf:
        - $ref: '#/components/schemas/SsisObjectMetadata'
    SsisProject:
      x-ms-discriminator-value: Project
      type: object
      description: Ssis project.
      allOf:
        - $ref: '#/components/schemas/SsisObjectMetadata'
      properties:
        folderId:
          type: integer
          format: int64
          description: Folder id which contains project.
        version:
          type: integer
          format: int64
          description: Project version.
        environmentRefs:
          type: array
          description: Environment reference in project
          items:
            $ref: '#/components/schemas/SsisEnvironmentReference'
        parameters:
          type: array
          description: Parameters in project
          items:
            $ref: '#/components/schemas/SsisParameter'
    SsisPackage:
      x-ms-discriminator-value: Package
      type: object
      description: Ssis Package.
      allOf:
        - $ref: '#/components/schemas/SsisObjectMetadata'
      properties:
        folderId:
          type: integer
          format: int64
          description: Folder id which contains package.
        projectVersion:
          type: integer
          format: int64
          description: Project version which contains package.
        projectId:
          type: integer
          format: int64
          description: Project id which contains package.
        parameters:
          type: array
          description: Parameters in package
          items:
            $ref: '#/components/schemas/SsisParameter'
    SsisEnvironment:
      x-ms-discriminator-value: Environment
      type: object
      description: Ssis environment.
      allOf:
        - $ref: '#/components/schemas/SsisObjectMetadata'
      properties:
        folderId:
          type: integer
          format: int64
          description: Folder id which contains environment.
        variables:
          type: array
          description: Variable in environment
          items:
            $ref: '#/components/schemas/SsisVariable'
    SsisParameter:
      type: object
      description: Ssis parameter.
      properties:
        id:
          type: integer
          format: int64
          description: Parameter id.
        name:
          type: string
          description: Parameter name.
        description:
          type: string
          description: Parameter description.
        dataType:
          type: string
          description: Parameter type.
        required:
          type: boolean
          description: Whether parameter is required.
        sensitive:
          type: boolean
          description: Whether parameter is sensitive.
        designDefaultValue:
          type: string
          description: Design default value of parameter.
        defaultValue:
          type: string
          description: Default value of parameter.
        sensitiveDefaultValue:
          type: string
          description: Default sensitive value of parameter.
        valueType:
          type: string
          description: Parameter value type.
        valueSet:
          type: boolean
          description: Parameter value set.
        variable:
          type: string
          description: Parameter reference variable.
    SsisVariable:
      type: object
      description: Ssis variable.
      properties:
        id:
          type: integer
          format: int64
          description: Variable id.
        name:
          type: string
          description: Variable name.
        description:
          type: string
          description: Variable description.
        dataType:
          type: string
          description: Variable type.
        sensitive:
          type: boolean
          description: Whether variable is sensitive.
        value:
          type: string
          description: Variable value.
        sensitiveValue:
          type: string
          description: Variable sensitive value.
    SsisEnvironmentReference:
      type: object
      description: Ssis environment reference.
      properties:
        id:
          type: integer
          format: int64
          description: Environment reference id.
        environmentFolderName:
          type: string
          description: Environment folder name.
        environmentName:
          type: string
          description: Environment name.
        referenceType:
          type: string
          description: Reference type
    ManagedPrivateEndpoint:
      description: Properties of a managed private endpoint
      type: object
      properties:
        connectionState:
          description: The managed private endpoint connection state
          $ref: '#/components/schemas/ConnectionStateProperties'
        fqdns:
          description: Fully qualified domain names
          type: array
          items:
            type: string
        groupId:
          description: The groupId to which the managed private endpoint is created
          type: string
        isReserved:
          description: Denotes whether the managed private endpoint is reserved
          type: boolean
          readOnly: true
        privateLinkResourceId:
          description: The ARM resource ID of the resource to which the managed private endpoint is created
          type: string
        provisioningState:
          description: The managed private endpoint provisioning state
          type: string
          readOnly: true
      additionalProperties:
        type: object
    ConnectionStateProperties:
      description: The connection state of a managed private endpoint
      type: object
      properties:
        actionsRequired:
          description: The actions required on the managed private endpoint
          type: string
          readOnly: true
        description:
          description: The managed private endpoint description
          type: string
          readOnly: true
        status:
          description: The approval status
          type: string
          readOnly: true
    GlobalParameter:
      description: Global parameters associated with the Azure Data Factory
      type: object
      properties: {}
      additionalProperties:
        $ref: '#/components/schemas/GlobalParameterSpecification'
    DataFlow:
      description: Azure Data Factory nested object which contains a flow with data movements and transformations.
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          description: Type of data flow.
        description:
          description: The description of the data flow.
          type: string
        annotations:
          description: List of tags that can be used for describing the data flow.
          type: array
          items:
            type: object
          x-ms-identifiers: []
        folder:
          description: The folder that this data flow is in. If not specified, Data flow will appear at the root level.
          type: object
          properties:
            name:
              description: The name of the folder that this data flow is in.
              type: string
    MappingDataFlow:
      x-ms-discriminator-value: MappingDataFlow
      description: Mapping data flow.
      type: object
      allOf:
        - $ref: '#/components/schemas/DataFlow'
      properties:
        typeProperties:
          description: Mapping data flow type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MappingDataFlowTypeProperties'
    Flowlet:
      x-ms-discriminator-value: Flowlet
      description: Data flow flowlet
      type: object
      allOf:
        - $ref: '#/components/schemas/DataFlow'
      properties:
        typeProperties:
          description: Flowlet type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FlowletTypeProperties'
    MappingDataFlowTypeProperties:
      description: Mapping data flow type properties.
      properties:
        sources:
          type: array
          description: List of sources in data flow.
          items:
            $ref: '#/components/schemas/DataFlowSource'
          x-ms-identifiers:
            - name
        sinks:
          type: array
          description: List of sinks in data flow.
          items:
            $ref: '#/components/schemas/DataFlowSink'
          x-ms-identifiers:
            - name
        transformations:
          type: array
          description: List of transformations in data flow.
          items:
            $ref: '#/components/schemas/Transformation'
          x-ms-identifiers:
            - name
        script:
          type: string
          description: DataFlow script.
        scriptLines:
          type: array
          description: Data flow script lines.
          items:
            type: string
    WranglingDataFlow:
      x-ms-discriminator-value: WranglingDataFlow
      description: Power Query data flow.
      type: object
      allOf:
        - $ref: '#/components/schemas/DataFlow'
      properties:
        typeProperties:
          description: PowerQuery data flow type properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PowerQueryTypeProperties'
    PowerQueryTypeProperties:
      description: Power Query data flow type properties.
      type: object
      properties:
        sources:
          type: array
          description: List of sources in Power Query.
          items:
            $ref: '#/components/schemas/PowerQuerySource'
          x-ms-identifiers:
            - name
        script:
          type: string
          description: Power query mashup script.
        documentLocale:
          type: string
          description: Locale of the Power query mashup document.
    FlowletTypeProperties:
      description: Flowlet type properties.
      type: object
      properties:
        sources:
          type: array
          description: List of sources in Flowlet.
          items:
            $ref: '#/components/schemas/DataFlowSource'
          x-ms-identifiers:
            - name
        sinks:
          type: array
          description: List of sinks in Flowlet.
          items:
            $ref: '#/components/schemas/DataFlowSink'
          x-ms-identifiers:
            - name
        transformations:
          type: array
          description: List of transformations in Flowlet.
          items:
            $ref: '#/components/schemas/Transformation'
          x-ms-identifiers:
            - name
        script:
          type: string
          description: Flowlet script.
        scriptLines:
          type: array
          description: Flowlet script lines.
          items:
            type: string
    Transformation:
      description: A data flow transformation.
      type: object
      properties:
        name:
          description: Transformation name.
          type: string
        description:
          description: Transformation description.
          type: string
        dataset:
          description: Dataset reference.
          $ref: '#/components/schemas/DatasetReference'
        linkedService:
          description: Linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        flowlet:
          description: Flowlet Reference
          $ref: '#/components/schemas/DataFlowReference'
      required:
        - name
    DataFlowSource:
      description: Transformation for data flow source.
      allOf:
        - $ref: '#/components/schemas/Transformation'
      properties:
        dataset:
          description: Dataset reference.
          $ref: '#/components/schemas/DatasetReference'
        linkedService:
          description: Linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        schemaLinkedService:
          description: Schema linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        flowlet:
          description: Flowlet Reference
          $ref: '#/components/schemas/DataFlowReference'
    DataFlowSink:
      description: Transformation for data flow sink.
      allOf:
        - $ref: '#/components/schemas/Transformation'
      properties:
        dataset:
          description: Dataset reference.
          $ref: '#/components/schemas/DatasetReference'
        linkedService:
          description: Linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        schemaLinkedService:
          description: Schema linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        rejectedDataLinkedService:
          description: Rejected data linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        flowlet:
          description: Flowlet Reference
          $ref: '#/components/schemas/DataFlowReference'
    PowerQuerySource:
      description: Power query source.
      type: object
      allOf:
        - $ref: '#/components/schemas/DataFlowSource'
      properties:
        script:
          description: source script.
          type: string
    PowerQuerySink:
      description: Power query sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/DataFlowSink'
      properties:
        script:
          description: sink script.
          type: string
    LinkedService:
      description: The nested object which contains the information and credential which can be used to connect with related store or compute resource.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Type of linked service.
        connectVia:
          description: The integration runtime reference.
          $ref: '#/components/schemas/IntegrationRuntimeReference'
        description:
          description: Linked service description.
          type: string
        parameters:
          $ref: '#/components/schemas/ParameterDefinitionSpecification'
          description: Parameters for linked service.
        annotations:
          description: List of tags that can be used for describing the linked service.
          type: array
          items:
            type: object
          x-ms-identifiers: []
      additionalProperties:
        type: object
      required:
        - type
    AzureStorageLinkedService:
      x-ms-discriminator-value: AzureStorage
      description: The storage account linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Storage linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureStorageLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureBlobStorageLinkedService:
      x-ms-discriminator-value: AzureBlobStorage
      description: The azure blob storage linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Blob Storage linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureBlobStorageLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureTableStorageLinkedService:
      x-ms-discriminator-value: AzureTableStorage
      description: The azure table storage linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Table Storage linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureStorageLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureStorageLinkedServiceTypeProperties:
      description: Azure Storage linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        accountKey:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of accountKey in connection string.
        sasUri:
          description: 'SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        sasToken:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of sasToken in sas uri.
        encryptedCredential:
          type: string
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    AzureBlobStorageLinkedServiceTypeProperties:
      description: Azure Blob Storage linked service properties.
      type: object
      properties:
        connectionString:
          type: object
          description: 'The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.'
        accountKey:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of accountKey in connection string.
        sasUri:
          description: 'SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        sasToken:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of sasToken in sas uri.
        serviceEndpoint:
          type: string
          description: Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property.
        servicePrincipalId:
          type: object
          description: 'The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against Azure SQL Data Warehouse.
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        accountKind:
          type: string
          description: 'Specify the kind of your storage account. Allowed values are: Storage (general purpose v1), StorageV2 (general purpose v2), BlobStorage, or BlockBlobStorage. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: string
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
    AzureSqlDWLinkedService:
      x-ms-discriminator-value: AzureSqlDW
      description: Azure SQL Data Warehouse linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure SQL Data Warehouse linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSqlDWLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureSqlDWLinkedServiceTypeProperties:
      description: Azure SQL Data Warehouse linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        servicePrincipalId:
          type: object
          description: 'The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against Azure SQL Data Warehouse.
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - connectionString
    SqlServerLinkedService:
      x-ms-discriminator-value: SqlServer
      description: SQL Server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: SQL Server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SqlServerLinkedServiceTypeProperties'
      required:
        - typeProperties
    SqlServerLinkedServiceTypeProperties:
      description: SQL Server linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        userName:
          type: object
          description: 'The on-premises Windows authentication user name. Type: string (or Expression with resultType string).'
        password:
          description: The on-premises Windows authentication password.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        alwaysEncryptedSettings:
          $ref: '#/components/schemas/SqlAlwaysEncryptedProperties'
          description: Sql always encrypted properties.
      required:
        - connectionString
    AmazonRdsForSqlServerLinkedService:
      x-ms-discriminator-value: AmazonRdsForSqlServer
      description: Amazon RDS for SQL Server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Amazon RDS for SQL Server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonRdsForSqlServerLinkedServiceTypeProperties'
      required:
        - typeProperties
    AmazonRdsForSqlServerLinkedServiceTypeProperties:
      description: Amazon Rds for SQL Server linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        userName:
          type: object
          description: 'The on-premises Windows authentication user name. Type: string (or Expression with resultType string).'
        password:
          description: The on-premises Windows authentication password.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        alwaysEncryptedSettings:
          $ref: '#/components/schemas/SqlAlwaysEncryptedProperties'
          description: Sql always encrypted properties.
      required:
        - connectionString
    AzureSqlDatabaseLinkedService:
      x-ms-discriminator-value: AzureSqlDatabase
      description: Microsoft Azure SQL Database linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure SQL Database linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSqlDatabaseLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureSqlDatabaseLinkedServiceTypeProperties:
      description: Azure SQL Database linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        servicePrincipalId:
          type: object
          description: 'The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against Azure SQL Database.
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        alwaysEncryptedSettings:
          $ref: '#/components/schemas/SqlAlwaysEncryptedProperties'
          description: Sql always encrypted properties.
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - connectionString
    AzureSqlMILinkedService:
      x-ms-discriminator-value: AzureSqlMI
      description: Azure SQL Managed Instance linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure SQL Managed Instance linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSqlMILinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureSqlMILinkedServiceTypeProperties:
      description: Azure SQL Managed Instance linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        servicePrincipalId:
          type: object
          description: 'The ID of the service principal used to authenticate against Azure SQL Managed Instance. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against Azure SQL Managed Instance.
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        alwaysEncryptedSettings:
          $ref: '#/components/schemas/SqlAlwaysEncryptedProperties'
          description: Sql always encrypted properties.
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - connectionString
    SqlAlwaysEncryptedProperties:
      description: Sql always encrypted properties.
      type: object
      properties:
        alwaysEncryptedAkvAuthType:
          x-ms-enum:
            name: SqlAlwaysEncryptedAkvAuthType
            modelAsString: true
          enum:
            - ServicePrincipal
            - ManagedIdentity
            - UserAssignedManagedIdentity
          type: string
          description: 'Sql always encrypted AKV authentication type. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The client ID of the application in Azure Active Directory used for Azure Key Vault authentication. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against Azure Key Vault.
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - alwaysEncryptedAkvAuthType
    AzureBatchLinkedService:
      x-ms-discriminator-value: AzureBatch
      description: Azure Batch linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Batch linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureBatchLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureBatchLinkedServiceTypeProperties:
      description: Azure Batch linked service properties.
      type: object
      properties:
        accountName:
          type: object
          description: 'The Azure Batch account name. Type: string (or Expression with resultType string).'
        accessKey:
          description: The Azure Batch account access key.
          $ref: '#/components/schemas/SecretBase'
        batchUri:
          type: object
          description: 'The Azure Batch URI. Type: string (or Expression with resultType string).'
        poolName:
          type: object
          description: 'The Azure Batch pool name. Type: string (or Expression with resultType string).'
        linkedServiceName:
          description: The Azure Storage linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - accountName
        - batchUri
        - poolName
        - linkedServiceName
    AzureKeyVaultLinkedService:
      x-ms-discriminator-value: AzureKeyVault
      description: Azure Key Vault linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Key Vault linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureKeyVaultLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureKeyVaultLinkedServiceTypeProperties:
      description: Azure Key Vault linked service properties.
      type: object
      properties:
        baseUrl:
          type: object
          description: 'The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - baseUrl
    CosmosDbLinkedService:
      x-ms-discriminator-value: CosmosDb
      description: Microsoft Azure Cosmos Database (CosmosDB) linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: CosmosDB linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CosmosDbLinkedServiceTypeProperties'
      required:
        - typeProperties
    CosmosDbLinkedServiceTypeProperties:
      description: CosmosDB linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        accountEndpoint:
          description: 'The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)'
          type: object
        database:
          description: 'The name of the database. Type: string (or Expression with resultType string)'
          type: object
        accountKey:
          $ref: '#/components/schemas/SecretBase'
          description: 'The account key of the Azure CosmosDB account. Type: SecureString or AzureKeyVaultSecretReference.'
        servicePrincipalId:
          type: object
          description: 'The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).'
        servicePrincipalCredentialType:
          x-ms-enum:
            name: CosmosDbServicePrincipalCredentialType
            modelAsString: true
          enum:
            - ServicePrincipalKey
            - ServicePrincipalCert
          type: string
          description: 'The service principal credential type to use in Server-To-Server authentication. ''ServicePrincipalKey'' for key/secret, ''ServicePrincipalCert'' for certificate. Type: string (or Expression with resultType string).'
        servicePrincipalCredential:
          $ref: '#/components/schemas/SecretBase'
          description: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference.
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        connectionMode:
          description: 'The connection mode used to access CosmosDB account. Type: string (or Expression with resultType string).'
          type: string
          enum:
            - Gateway
            - Direct
          x-ms-enum:
            name: CosmosDbConnectionMode
            modelAsString: true
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
    DynamicsLinkedService:
      x-ms-discriminator-value: Dynamics
      description: Dynamics linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Dynamics linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DynamicsLinkedServiceTypeProperties'
      required:
        - typeProperties
    DynamicsLinkedServiceTypeProperties:
      description: Dynamics linked service properties.
      type: object
      properties:
        deploymentType:
          type: object
          description: 'The deployment type of the Dynamics instance. ''Online'' for Dynamics Online and ''OnPremisesWithIfd'' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).'
        hostName:
          type: object
          description: 'The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.'
        serviceUri:
          type: object
          description: 'The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).'
        organizationName:
          type: object
          description: 'The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).'
        authenticationType:
          type: object
          description: 'The authentication type to connect to Dynamics server. ''Office365'' for online scenario, ''Ifd'' for on-premises with Ifd scenario, ''AADServicePrincipal'' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'User name to access the Dynamics instance. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the Dynamics instance.
          $ref: '#/components/schemas/SecretBase'
        servicePrincipalId:
          type: object
          description: 'The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).'
        servicePrincipalCredentialType:
          type: object
          description: 'The service principal credential type to use in Server-To-Server authentication. ''ServicePrincipalKey'' for key/secret, ''ServicePrincipalCert'' for certificate. Type: string (or Expression with resultType string).'
        servicePrincipalCredential:
          $ref: '#/components/schemas/SecretBase'
          description: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - deploymentType
        - authenticationType
    DynamicsDeploymentType:
      description: All available dynamicsDeploymentType values.
      type: string
      enum:
        - Online
        - OnPremisesWithIfd
      x-ms-enum:
        name: DynamicsDeploymentType
        modelAsString: true
    DynamicsAuthenticationType:
      description: All available dynamicsAuthenticationType values.
      type: string
      enum:
        - Office365
        - Ifd
        - AADServicePrincipal
      x-ms-enum:
        name: DynamicsAuthenticationType
        modelAsString: true
    DynamicsCrmLinkedService:
      x-ms-discriminator-value: DynamicsCrm
      description: Dynamics CRM linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Dynamics CRM linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DynamicsCrmLinkedServiceTypeProperties'
      required:
        - typeProperties
    DynamicsCrmLinkedServiceTypeProperties:
      description: Dynamics CRM linked service properties.
      type: object
      properties:
        deploymentType:
          type: object
          description: 'The deployment type of the Dynamics CRM instance. ''Online'' for Dynamics CRM Online and ''OnPremisesWithIfd'' for Dynamics CRM on-premises with Ifd. Type: string (or Expression with resultType string).'
        hostName:
          type: object
          description: 'The host name of the on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The port of on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.'
        serviceUri:
          type: object
          description: 'The URL to the Microsoft Dynamics CRM server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).'
        organizationName:
          type: object
          description: 'The organization name of the Dynamics CRM instance. The property is required for on-prem and required for online when there are more than one Dynamics CRM instances associated with the user. Type: string (or Expression with resultType string).'
        authenticationType:
          type: object
          description: 'The authentication type to connect to Dynamics CRM server. ''Office365'' for online scenario, ''Ifd'' for on-premises with Ifd scenario, ''AADServicePrincipal'' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'User name to access the Dynamics CRM instance. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the Dynamics CRM instance.
          $ref: '#/components/schemas/SecretBase'
        servicePrincipalId:
          type: object
          description: 'The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).'
        servicePrincipalCredentialType:
          type: object
          description: 'The service principal credential type to use in Server-To-Server authentication. ''ServicePrincipalKey'' for key/secret, ''ServicePrincipalCert'' for certificate. Type: string (or Expression with resultType string).'
        servicePrincipalCredential:
          $ref: '#/components/schemas/SecretBase'
          description: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - deploymentType
        - authenticationType
    ServicePrincipalCredentialType:
      description: All available servicePrincipalCredentialType values.
      type: string
      enum:
        - ServicePrincipalKey
        - ServicePrincipalCert
      x-ms-enum:
        name: ServicePrincipalCredentialType
        modelAsString: true
    CommonDataServiceForAppsLinkedService:
      x-ms-discriminator-value: CommonDataServiceForApps
      description: Common Data Service for Apps linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Common Data Service for Apps linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommonDataServiceForAppsLinkedServiceTypeProperties'
      required:
        - typeProperties
    CommonDataServiceForAppsLinkedServiceTypeProperties:
      description: Common Data Service for Apps linked service properties.
      type: object
      properties:
        deploymentType:
          type: object
          description: 'The deployment type of the Common Data Service for Apps instance. ''Online'' for Common Data Service for Apps Online and ''OnPremisesWithIfd'' for Common Data Service for Apps on-premises with Ifd. Type: string (or Expression with resultType string).'
        hostName:
          type: object
          description: 'The host name of the on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The port of on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.'
        serviceUri:
          type: object
          description: 'The URL to the Microsoft Common Data Service for Apps server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).'
        organizationName:
          type: object
          description: 'The organization name of the Common Data Service for Apps instance. The property is required for on-prem and required for online when there are more than one Common Data Service for Apps instances associated with the user. Type: string (or Expression with resultType string).'
        authenticationType:
          type: object
          description: 'The authentication type to connect to Common Data Service for Apps server. ''Office365'' for online scenario, ''Ifd'' for on-premises with Ifd scenario. ''AADServicePrincipal'' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'User name to access the Common Data Service for Apps instance. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the Common Data Service for Apps instance.
          $ref: '#/components/schemas/SecretBase'
        servicePrincipalId:
          type: object
          description: 'The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).'
        servicePrincipalCredentialType:
          type: object
          description: 'The service principal credential type to use in Server-To-Server authentication. ''ServicePrincipalKey'' for key/secret, ''ServicePrincipalCert'' for certificate. Type: string (or Expression with resultType string).'
        servicePrincipalCredential:
          $ref: '#/components/schemas/SecretBase'
          description: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - deploymentType
        - authenticationType
    HDInsightLinkedService:
      x-ms-discriminator-value: HDInsight
      description: HDInsight linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: HDInsight linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HDInsightLinkedServiceTypeProperties'
      required:
        - typeProperties
    HDInsightLinkedServiceTypeProperties:
      description: HDInsight linked service properties.
      type: object
      properties:
        clusterUri:
          type: object
          description: 'HDInsight cluster URI. Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'HDInsight cluster user name. Type: string (or Expression with resultType string).'
        password:
          description: HDInsight cluster password.
          $ref: '#/components/schemas/SecretBase'
        linkedServiceName:
          description: The Azure Storage linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        hcatalogLinkedServiceName:
          description: A reference to the Azure SQL linked service that points to the HCatalog database.
          $ref: '#/components/schemas/LinkedServiceReference'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        isEspEnabled:
          type: object
          description: 'Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.'
        fileSystem:
          type: object
          description: 'Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).'
      required:
        - clusterUri
    FileServerLinkedService:
      x-ms-discriminator-value: FileServer
      description: File system linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: File system linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FileServerLinkedServiceTypeProperties'
      required:
        - typeProperties
    FileServerLinkedServiceTypeProperties:
      description: File system linked service properties.
      type: object
      properties:
        host:
          type: object
          description: 'Host name of the server. Type: string (or Expression with resultType string).'
        userId:
          type: object
          description: 'User ID to logon the server. Type: string (or Expression with resultType string).'
        password:
          description: Password to logon the server.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - host
    AzureFileStorageLinkedService:
      x-ms-discriminator-value: AzureFileStorage
      description: Azure File Storage linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure File Storage linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureFileStorageLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureFileStorageLinkedServiceTypeProperties:
      description: Azure File Storage linked service properties.
      type: object
      properties:
        host:
          type: object
          description: 'Host name of the server. Type: string (or Expression with resultType string).'
        userId:
          type: object
          description: 'User ID to logon the server. Type: string (or Expression with resultType string).'
        password:
          description: Password to logon the server.
          $ref: '#/components/schemas/SecretBase'
        connectionString:
          type: object
          description: 'The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.'
        accountKey:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of accountKey in connection string.
        sasUri:
          description: 'SAS URI of the Azure File resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        sasToken:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of sasToken in sas uri.
        fileShare:
          description: 'The azure file share name. It is required when auth with accountKey/sasToken. Type: string (or Expression with resultType string).'
          type: object
        snapshot:
          description: 'The azure file share snapshot version. Type: string (or Expression with resultType string).'
          type: object
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    AmazonS3CompatibleLinkedService:
      x-ms-discriminator-value: AmazonS3Compatible
      description: Linked service for Amazon S3 Compatible.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Amazon S3 Compatible linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonS3CompatibleLinkedServiceTypeProperties'
      required:
        - typeProperties
    AmazonS3CompatibleLinkedServiceTypeProperties:
      description: Amazon S3 Compatible linked service properties.
      type: object
      properties:
        accessKeyId:
          type: object
          description: 'The access key identifier of the Amazon S3 Compatible Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).'
        secretAccessKey:
          description: The secret access key of the Amazon S3 Compatible Identity and Access Management (IAM) user.
          $ref: '#/components/schemas/SecretBase'
        serviceUrl:
          type: object
          description: 'This value specifies the endpoint to access with the Amazon S3 Compatible Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).'
        forcePathStyle:
          type: object
          description: 'If true, use S3 path-style access instead of virtual hosted-style access. Default value is false. Type: boolean (or Expression with resultType boolean).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    OracleCloudStorageLinkedService:
      x-ms-discriminator-value: OracleCloudStorage
      description: Linked service for Oracle Cloud Storage.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Oracle Cloud Storage linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OracleCloudStorageLinkedServiceTypeProperties'
      required:
        - typeProperties
    OracleCloudStorageLinkedServiceTypeProperties:
      description: Oracle Cloud Storage linked service properties.
      type: object
      properties:
        accessKeyId:
          type: object
          description: 'The access key identifier of the Oracle Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).'
        secretAccessKey:
          description: The secret access key of the Oracle Cloud Storage Identity and Access Management (IAM) user.
          $ref: '#/components/schemas/SecretBase'
        serviceUrl:
          type: object
          description: 'This value specifies the endpoint to access with the Oracle Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    GoogleCloudStorageLinkedService:
      x-ms-discriminator-value: GoogleCloudStorage
      description: Linked service for Google Cloud Storage.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Google Cloud Storage linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GoogleCloudStorageLinkedServiceTypeProperties'
      required:
        - typeProperties
    GoogleCloudStorageLinkedServiceTypeProperties:
      description: Google Cloud Storage linked service properties.
      type: object
      properties:
        accessKeyId:
          type: object
          description: 'The access key identifier of the Google Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).'
        secretAccessKey:
          description: The secret access key of the Google Cloud Storage Identity and Access Management (IAM) user.
          $ref: '#/components/schemas/SecretBase'
        serviceUrl:
          type: object
          description: 'This value specifies the endpoint to access with the Google Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    OracleLinkedService:
      x-ms-discriminator-value: Oracle
      description: Oracle database.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Oracle database linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OracleLinkedServiceTypeProperties'
      required:
        - typeProperties
    OracleLinkedServiceTypeProperties:
      description: Oracle database linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    AmazonRdsForOracleLinkedService:
      x-ms-discriminator-value: AmazonRdsForOracle
      description: AmazonRdsForOracle database.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: AmazonRdsForOracle database linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonRdsForLinkedServiceTypeProperties'
      required:
        - typeProperties
    AmazonRdsForLinkedServiceTypeProperties:
      description: AmazonRdsForOracle database linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        password:
          $ref: '#/components/schemas/SecretBase'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    AzureMySqlLinkedService:
      x-ms-discriminator-value: AzureMySql
      description: Azure MySQL database linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure MySQL database linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureMySqlLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureMySqlLinkedServiceTypeProperties:
      description: Azure MySQL database linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    MySqlLinkedService:
      x-ms-discriminator-value: MySql
      description: Linked service for MySQL data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: MySQL linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MySqlLinkedServiceTypeProperties'
      required:
        - typeProperties
    MySqlLinkedServiceTypeProperties:
      description: MySQL linked service properties.
      type: object
      properties:
        connectionString:
          description: The connection string.
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    PostgreSqlLinkedService:
      x-ms-discriminator-value: PostgreSql
      description: Linked service for PostgreSQL data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: PostgreSQL linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PostgreSqlLinkedServiceTypeProperties'
      required:
        - typeProperties
    PostgreSqlLinkedServiceTypeProperties:
      description: PostgreSQL linked service properties.
      type: object
      properties:
        connectionString:
          description: The connection string.
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    SybaseLinkedService:
      x-ms-discriminator-value: Sybase
      description: Linked service for Sybase data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Sybase linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SybaseLinkedServiceTypeProperties'
      required:
        - typeProperties
    SybaseLinkedServiceTypeProperties:
      description: Sybase linked service properties.
      type: object
      properties:
        server:
          type: object
          description: 'Server name for connection. Type: string (or Expression with resultType string).'
        database:
          type: object
          description: 'Database name for connection. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'Schema name for connection. Type: string (or Expression with resultType string).'
        authenticationType:
          description: AuthenticationType to be used for connection.
          type: string
          enum:
            - Basic
            - Windows
          x-ms-enum:
            name: SybaseAuthenticationType
            modelAsString: true
        username:
          type: object
          description: 'Username for authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - server
        - database
    Db2LinkedService:
      x-ms-discriminator-value: Db2
      description: Linked service for DB2 data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: DB2 linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Db2LinkedServiceTypeProperties'
      required:
        - typeProperties
    Db2LinkedServiceTypeProperties:
      description: DB2 linked service properties.
      type: object
      properties:
        connectionString:
          type: object
          description: 'The connection string. It is mutually exclusive with server, database, authenticationType, userName, packageCollection and certificateCommonName property. Type: string, SecureString or AzureKeyVaultSecretReference.'
        server:
          type: object
          description: 'Server name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).'
        database:
          type: object
          description: 'Database name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).'
        authenticationType:
          description: AuthenticationType to be used for connection. It is mutually exclusive with connectionString property.
          type: string
          enum:
            - Basic
          x-ms-enum:
            name: Db2AuthenticationType
            modelAsString: true
        username:
          type: object
          description: 'Username for authentication. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).'
        password:
          description: Password for authentication.
          $ref: '#/components/schemas/SecretBase'
        packageCollection:
          type: object
          description: 'Under where packages are created when querying database. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).'
        certificateCommonName:
          type: object
          description: 'Certificate Common Name when TLS is enabled. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).'
    TeradataLinkedService:
      x-ms-discriminator-value: Teradata
      description: Linked service for Teradata data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Teradata linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TeradataLinkedServiceTypeProperties'
      required:
        - typeProperties
    TeradataLinkedServiceTypeProperties:
      description: Teradata linked service properties.
      type: object
      properties:
        connectionString:
          description: 'Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        server:
          type: object
          description: 'Server name for connection. Type: string (or Expression with resultType string).'
        authenticationType:
          description: AuthenticationType to be used for connection.
          type: string
          enum:
            - Basic
            - Windows
          x-ms-enum:
            name: TeradataAuthenticationType
            modelAsString: true
        username:
          type: object
          description: 'Username for authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    AzureMLLinkedService:
      x-ms-discriminator-value: AzureML
      description: Azure ML Studio Web Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure ML Studio Web Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureMLLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureMLLinkedServiceTypeProperties:
      description: Azure ML Studio Web Service linked service properties.
      type: object
      properties:
        mlEndpoint:
          type: object
          description: 'The Batch Execution REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).'
        apiKey:
          description: The API key for accessing the Azure ML model endpoint.
          $ref: '#/components/schemas/SecretBase'
        updateResourceEndpoint:
          type: object
          description: 'The Update Resource REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML Studio web service. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML Studio web service.
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        authentication:
          type: object
          description: 'Type of authentication (Required to specify MSI) used to connect to AzureML. Type: string (or Expression with resultType string).'
      required:
        - mlEndpoint
        - apiKey
    AzureMLServiceLinkedService:
      x-ms-discriminator-value: AzureMLService
      description: Azure ML Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure ML Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureMLServiceLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureMLServiceLinkedServiceTypeProperties:
      description: Azure ML Service linked service properties.
      type: object
      properties:
        subscriptionId:
          type: object
          description: 'Azure ML Service workspace subscription ID. Type: string (or Expression with resultType string).'
        resourceGroupName:
          type: object
          description: 'Azure ML Service workspace resource group name. Type: string (or Expression with resultType string).'
        mlWorkspaceName:
          type: object
          description: 'Azure ML Service workspace name. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The ID of the service principal used to authenticate against the endpoint of a published Azure ML Service pipeline. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against the endpoint of a published Azure ML Service pipeline.
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - subscriptionId
        - resourceGroupName
        - mlWorkspaceName
    OdbcLinkedService:
      x-ms-discriminator-value: Odbc
      description: Open Database Connectivity (ODBC) linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: ODBC linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OdbcLinkedServiceTypeProperties'
      required:
        - typeProperties
    OdbcLinkedServiceTypeProperties:
      description: ODBC linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        authenticationType:
          type: object
          description: 'Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).'
        credential:
          description: The access credential portion of the connection string specified in driver-specific property-value format.
          $ref: '#/components/schemas/SecretBase'
        userName:
          type: object
          description: 'User name for Basic authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for Basic authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    InformixLinkedService:
      x-ms-discriminator-value: Informix
      description: Informix linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Informix linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/InformixLinkedServiceTypeProperties'
      required:
        - typeProperties
    InformixLinkedServiceTypeProperties:
      description: Informix linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        authenticationType:
          type: object
          description: 'Type of authentication used to connect to the Informix as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).'
        credential:
          description: The access credential portion of the connection string specified in driver-specific property-value format.
          $ref: '#/components/schemas/SecretBase'
        userName:
          type: object
          description: 'User name for Basic authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for Basic authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    MicrosoftAccessLinkedService:
      x-ms-discriminator-value: MicrosoftAccess
      description: Microsoft Access linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Microsoft Access linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MicrosoftAccessLinkedServiceTypeProperties'
      required:
        - typeProperties
    MicrosoftAccessLinkedServiceTypeProperties:
      description: Microsoft Access linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        authenticationType:
          type: object
          description: 'Type of authentication used to connect to the Microsoft Access as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).'
        credential:
          description: The access credential portion of the connection string specified in driver-specific property-value format.
          $ref: '#/components/schemas/SecretBase'
        userName:
          type: object
          description: 'User name for Basic authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for Basic authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    HdfsLinkedService:
      x-ms-discriminator-value: Hdfs
      description: Hadoop Distributed File System (HDFS) linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: HDFS linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HdfsLinkedServiceTypeProperties'
      required:
        - typeProperties
    HdfsLinkedServiceTypeProperties:
      description: HDFS linked service properties.
      type: object
      properties:
        url:
          type: object
          description: 'The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).'
        authenticationType:
          type: object
          description: 'Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'User name for Windows authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for Windows authentication.
          $ref: '#/components/schemas/SecretBase'
      required:
        - url
    ODataLinkedService:
      x-ms-discriminator-value: OData
      description: Open Data Protocol (OData) linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: OData linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ODataLinkedServiceTypeProperties'
      required:
        - typeProperties
    ODataLinkedServiceTypeProperties:
      description: OData linked service properties.
      type: object
      properties:
        url:
          type: object
          description: 'The URL of the OData service endpoint. Type: string (or Expression with resultType string).'
        authenticationType:
          description: Type of authentication used to connect to the OData service.
          type: string
          enum:
            - Basic
            - Anonymous
            - Windows
            - AadServicePrincipal
            - ManagedServiceIdentity
          x-ms-enum:
            name: ODataAuthenticationType
            modelAsString: true
        userName:
          type: object
          description: 'User name of the OData service. Type: string (or Expression with resultType string).'
        password:
          description: Password of the OData service.
          $ref: '#/components/schemas/SecretBase'
        authHeaders:
          type: object
          description: 'The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).'
        tenant:
          type: object
          description: 'Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        aadResourceId:
          type: object
          description: 'Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).'
        aadServicePrincipalCredentialType:
          description: Specify the credential type (key or cert) is used for service principal.
          type: string
          enum:
            - ServicePrincipalKey
            - ServicePrincipalCert
          x-ms-enum:
            name: ODataAadServicePrincipalCredentialType
            modelAsString: true
        servicePrincipalKey:
          description: 'Specify the secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        servicePrincipalEmbeddedCert:
          description: 'Specify the base64 encoded certificate of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        servicePrincipalEmbeddedCertPassword:
          description: 'Specify the password of your certificate if your certificate has a password and you are using AadServicePrincipal authentication. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - url
    WebLinkedService:
      x-ms-discriminator-value: Web
      description: Web linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Web linked service properties.
          $ref: '#/components/schemas/WebLinkedServiceTypeProperties'
      required:
        - typeProperties
    WebLinkedServiceTypeProperties:
      description: Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.
      discriminator:
        propertyName: authenticationType
      type: object
      properties:
        url:
          type: object
          description: 'The URL of the web service endpoint, e.g. https://www.microsoft.com . Type: string (or Expression with resultType string).'
        authenticationType:
          description: Type of authentication used to connect to the web table source.
          type: string
          enum:
            - Basic
            - Anonymous
            - ClientCertificate
          x-ms-enum:
            name: WebAuthenticationType
            modelAsString: true
      required:
        - authenticationType
        - url
    WebAnonymousAuthentication:
      description: A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
      type: object
      x-ms-discriminator-value: Anonymous
      allOf:
        - $ref: '#/components/schemas/WebLinkedServiceTypeProperties'
    WebBasicAuthentication:
      description: A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
      type: object
      x-ms-discriminator-value: Basic
      allOf:
        - $ref: '#/components/schemas/WebLinkedServiceTypeProperties'
      properties:
        username:
          type: object
          description: 'User name for Basic authentication. Type: string (or Expression with resultType string).'
        password:
          description: The password for Basic authentication.
          $ref: '#/components/schemas/SecretBase'
      required:
        - username
        - password
    WebClientCertificateAuthentication:
      description: A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
      type: object
      x-ms-discriminator-value: ClientCertificate
      allOf:
        - $ref: '#/components/schemas/WebLinkedServiceTypeProperties'
      properties:
        pfx:
          description: Base64-encoded contents of a PFX file.
          $ref: '#/components/schemas/SecretBase'
        password:
          description: Password for the PFX file.
          $ref: '#/components/schemas/SecretBase'
      required:
        - pfx
        - password
    CassandraLinkedService:
      x-ms-discriminator-value: Cassandra
      description: Linked service for Cassandra data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Cassandra linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CassandraLinkedServiceTypeProperties'
      required:
        - typeProperties
    CassandraLinkedServiceTypeProperties:
      description: Cassandra linked service properties.
      type: object
      properties:
        host:
          type: object
          description: 'Host name for connection. Type: string (or Expression with resultType string).'
        authenticationType:
          type: object
          description: 'AuthenticationType to be used for connection. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The port for the connection. Type: integer (or Expression with resultType integer).'
        username:
          type: object
          description: 'Username for authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - host
    MongoDbLinkedService:
      x-ms-discriminator-value: MongoDb
      description: Linked service for MongoDb data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: MongoDB linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoDbLinkedServiceTypeProperties'
      required:
        - typeProperties
    MongoDbLinkedServiceTypeProperties:
      description: MongoDB linked service properties.
      type: object
      properties:
        server:
          type: object
          description: 'The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).'
        authenticationType:
          description: The authentication type to be used to connect to the MongoDB database.
          type: string
          enum:
            - Basic
            - Anonymous
          x-ms-enum:
            name: MongoDbAuthenticationType
            modelAsString: true
        databaseName:
          type: object
          description: 'The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'Username for authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for authentication.
          $ref: '#/components/schemas/SecretBase'
        authSource:
          type: object
          description: 'Database to verify the username and password. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.'
        enableSsl:
          type: object
          description: 'Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).'
        allowSelfSignedServerCert:
          type: object
          description: 'Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - server
        - databaseName
    MongoDbAtlasLinkedService:
      x-ms-discriminator-value: MongoDbAtlas
      description: Linked service for MongoDB Atlas data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: MongoDB Atlas linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoDbAtlasLinkedServiceTypeProperties'
      required:
        - typeProperties
    MongoDbAtlasLinkedServiceTypeProperties:
      description: MongoDB Atlas linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The MongoDB Atlas connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        database:
          type: object
          description: 'The name of the MongoDB Atlas database that you want to access. Type: string (or Expression with resultType string).'
      required:
        - connectionString
        - database
    MongoDbV2LinkedService:
      x-ms-discriminator-value: MongoDbV2
      description: Linked service for MongoDB data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: MongoDB linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoDbV2LinkedServiceTypeProperties'
      required:
        - typeProperties
    MongoDbV2LinkedServiceTypeProperties:
      description: MongoDB linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The MongoDB connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        database:
          type: object
          description: 'The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).'
      required:
        - connectionString
        - database
    CosmosDbMongoDbApiLinkedService:
      x-ms-discriminator-value: CosmosDbMongoDbApi
      description: Linked service for CosmosDB (MongoDB API) data source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: CosmosDB (MongoDB API) linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CosmosDbMongoDbApiLinkedServiceTypeProperties'
      required:
        - typeProperties
    CosmosDbMongoDbApiLinkedServiceTypeProperties:
      description: CosmosDB (MongoDB API) linked service properties.
      type: object
      properties:
        isServerVersionAbove32:
          type: object
          description: 'Whether the CosmosDB (MongoDB API) server version is higher than 3.2. The default value is false. Type: boolean (or Expression with resultType boolean).'
        connectionString:
          description: 'The CosmosDB (MongoDB API) connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        database:
          type: object
          description: 'The name of the CosmosDB (MongoDB API) database that you want to access. Type: string (or Expression with resultType string).'
      required:
        - connectionString
        - database
    AzureDataLakeStoreLinkedService:
      x-ms-discriminator-value: AzureDataLakeStore
      description: Azure Data Lake Store linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Data Lake Store linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDataLakeStoreLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureDataLakeStoreLinkedServiceTypeProperties:
      description: Azure Data Lake Store linked service properties.
      type: object
      properties:
        dataLakeStoreUri:
          type: object
          description: 'Data Lake Store service URI. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          description: The Key of the application used to authenticate against the Azure Data Lake Store account.
          $ref: '#/components/schemas/SecretBase'
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        accountName:
          type: object
          description: 'Data Lake Store account name. Type: string (or Expression with resultType string).'
        subscriptionId:
          type: object
          description: 'Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).'
        resourceGroupName:
          type: object
          description: 'Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - dataLakeStoreUri
    AzureBlobFSLinkedService:
      x-ms-discriminator-value: AzureBlobFS
      description: Azure Data Lake Storage Gen2 linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Data Lake Storage Gen2 linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureBlobFSLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureBlobFSLinkedServiceTypeProperties:
      description: Azure Data Lake Storage Gen2 linked service properties.
      type: object
      properties:
        url:
          type: object
          description: 'Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).'
        accountKey:
          type: object
          description: 'Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          description: The Key of the application used to authenticate against the Azure Data Lake Storage Gen2 account.
          $ref: '#/components/schemas/SecretBase'
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
        servicePrincipalCredentialType:
          type: object
          description: 'The service principal credential type to use in Server-To-Server authentication. ''ServicePrincipalKey'' for key/secret, ''ServicePrincipalCert'' for certificate. Type: string (or Expression with resultType string).'
        servicePrincipalCredential:
          description: The credential of the service principal object in Azure Active Directory. If servicePrincipalCredentialType is 'ServicePrincipalKey', servicePrincipalCredential can be SecureString or AzureKeyVaultSecretReference. If servicePrincipalCredentialType is 'ServicePrincipalCert', servicePrincipalCredential can only be AzureKeyVaultSecretReference.
          $ref: '#/components/schemas/SecretBase'
      required:
        - url
    Office365LinkedService:
      x-ms-discriminator-value: Office365
      description: Office365 linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Office365 linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Office365LinkedServiceTypeProperties'
      required:
        - typeProperties
    Office365LinkedServiceTypeProperties:
      description: Office365 linked service properties.
      type: object
      properties:
        office365TenantId:
          type: object
          description: 'Azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string).'
        servicePrincipalTenantId:
          type: object
          description: 'Specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'Specify the application''s client ID. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          description: Specify the application's key.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - office365TenantId
        - servicePrincipalTenantId
        - servicePrincipalId
        - servicePrincipalKey
    SalesforceLinkedService:
      x-ms-discriminator-value: Salesforce
      description: Linked service for Salesforce.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Salesforce linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SalesforceLinkedServiceTypeProperties'
      required:
        - typeProperties
    SalesforceLinkedServiceTypeProperties:
      description: Salesforce linked service properties.
      type: object
      properties:
        environmentUrl:
          type: object
          description: 'The URL of Salesforce instance. Default is ''https://login.salesforce.com''. To copy data from sandbox, specify ''https://test.salesforce.com''. To copy data from custom domain, specify, for example, ''https://[domain].my.salesforce.com''. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).'
        password:
          description: The password for Basic authentication of the Salesforce instance.
          $ref: '#/components/schemas/SecretBase'
        securityToken:
          description: The security token is optional to remotely access Salesforce instance.
          $ref: '#/components/schemas/SecretBase'
        apiVersion:
          type: object
          description: 'The Salesforce API version used in ADF. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    SalesforceServiceCloudLinkedService:
      x-ms-discriminator-value: SalesforceServiceCloud
      description: Linked service for Salesforce Service Cloud.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Salesforce Service Cloud linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SalesforceServiceCloudLinkedServiceTypeProperties'
      required:
        - typeProperties
    SalesforceServiceCloudLinkedServiceTypeProperties:
      description: Salesforce Service Cloud linked service properties.
      type: object
      properties:
        environmentUrl:
          type: object
          description: 'The URL of Salesforce Service Cloud instance. Default is ''https://login.salesforce.com''. To copy data from sandbox, specify ''https://test.salesforce.com''. To copy data from custom domain, specify, for example, ''https://[domain].my.salesforce.com''. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).'
        password:
          description: The password for Basic authentication of the Salesforce instance.
          $ref: '#/components/schemas/SecretBase'
        securityToken:
          description: The security token is optional to remotely access Salesforce instance.
          $ref: '#/components/schemas/SecretBase'
        apiVersion:
          type: object
          description: 'The Salesforce API version used in ADF. Type: string (or Expression with resultType string).'
        extendedProperties:
          type: object
          description: 'Extended properties appended to the connection string. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    SapCloudForCustomerLinkedService:
      x-ms-discriminator-value: SapCloudForCustomer
      description: Linked service for SAP Cloud for Customer.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: SAP Cloud for Customer linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapCloudForCustomerLinkedServiceTypeProperties'
      required:
        - typeProperties
    SapCloudForCustomerLinkedServiceTypeProperties:
      description: SAP Cloud for Customer linked service properties.
      type: object
      properties:
        url:
          type: object
          description: 'The URL of SAP Cloud for Customer OData API. For example, ''[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]''. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'The username for Basic authentication. Type: string (or Expression with resultType string).'
        password:
          description: The password for Basic authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).'
      required:
        - url
    SapEccLinkedService:
      x-ms-discriminator-value: SapEcc
      description: Linked service for SAP ERP Central Component(SAP ECC).
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: SAP ECC linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapEccLinkedServiceTypeProperties'
      required:
        - typeProperties
    SapEccLinkedServiceTypeProperties:
      description: SAP ECC linked service properties.
      type: object
      properties:
        url:
          type: string
          description: 'The URL of SAP ECC OData API. For example, ''[https://hostname:port/sap/opu/odata/sap/servicename/]''. Type: string (or Expression with resultType string).'
        username:
          type: string
          description: 'The username for Basic authentication. Type: string (or Expression with resultType string).'
        password:
          description: The password for Basic authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: string
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).'
      required:
        - url
    SapOpenHubLinkedService:
      x-ms-discriminator-value: SapOpenHub
      description: SAP Business Warehouse Open Hub Destination Linked Service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to SAP Business Warehouse Open Hub Destination linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapOpenHubLinkedServiceTypeProperties'
      required:
        - typeProperties
    SapOpenHubLinkedServiceTypeProperties:
      description: Properties specific to SAP Business Warehouse Open Hub Destination linked service type.
      type: object
      properties:
        server:
          type: object
          description: 'Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).'
        systemNumber:
          type: object
          description: 'System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).'
        clientId:
          type: object
          description: 'Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).'
        language:
          type: object
          description: 'Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).'
        systemId:
          type: object
          description: 'SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the SAP BW server where the open hub destination is located.
          $ref: '#/components/schemas/SecretBase'
        messageServer:
          type: object
          description: 'The hostname of the SAP Message Server. Type: string (or Expression with resultType string).'
        messageServerService:
          type: object
          description: 'The service name or port number of the Message Server. Type: string (or Expression with resultType string).'
        logonGroup:
          type: object
          description: 'The Logon Group for the SAP System. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    SapOdpLinkedService:
      x-ms-discriminator-value: SapOdp
      description: SAP ODP Linked Service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to SAP ODP linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapOdpLinkedServiceTypeProperties'
      required:
        - typeProperties
    SapOdpLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      type: object
      properties:
        server:
          type: object
          description: 'Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).'
        systemNumber:
          type: object
          description: 'System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).'
        clientId:
          type: object
          description: 'Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).'
        language:
          type: object
          description: 'Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).'
        systemId:
          type: object
          description: 'SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the SAP server where the table is located.
          $ref: '#/components/schemas/SecretBase'
        messageServer:
          type: object
          description: 'The hostname of the SAP Message Server. Type: string (or Expression with resultType string).'
        messageServerService:
          type: object
          description: 'The service name or port number of the Message Server. Type: string (or Expression with resultType string).'
        sncMode:
          type: object
          description: 'SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).'
        sncMyName:
          type: object
          description: 'Initiator''s SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        sncPartnerName:
          type: object
          description: 'Communication partner''s SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        sncLibraryPath:
          type: object
          description: 'External security product''s library to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        sncQop:
          type: object
          description: 'SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).'
        x509CertificatePath:
          type: object
          description: 'SNC X509 certificate file path. Type: string (or Expression with resultType string).'
        logonGroup:
          type: object
          description: 'The Logon Group for the SAP System. Type: string (or Expression with resultType string).'
        subscriberName:
          type: object
          description: 'The subscriber name. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    RestServiceLinkedService:
      x-ms-discriminator-value: RestService
      description: Rest Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Rest Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RestServiceLinkedServiceTypeProperties'
      required:
        - typeProperties
    RestServiceLinkedServiceTypeProperties:
      description: Rest Service linked service properties.
      type: object
      properties:
        url:
          description: The base URL of the REST service.
          type: object
        enableServerCertificateValidation:
          type: object
          description: 'Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean).'
        authenticationType:
          description: Type of authentication used to connect to the REST service.
          type: string
          enum:
            - Anonymous
            - Basic
            - AadServicePrincipal
            - ManagedServiceIdentity
            - OAuth2ClientCredential
          x-ms-enum:
            name: RestServiceAuthenticationType
            modelAsString: true
        userName:
          description: The user name used in Basic authentication type.
          type: object
        password:
          description: The password used in Basic authentication type.
          $ref: '#/components/schemas/SecretBase'
        authHeaders:
          type: object
          description: 'The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).'
        servicePrincipalId:
          description: The application's client ID used in AadServicePrincipal authentication type.
          type: object
        servicePrincipalKey:
          description: The application's key used in AadServicePrincipal authentication type.
          $ref: '#/components/schemas/SecretBase'
        tenant:
          description: The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides.
          type: object
        azureCloudType:
          type: object
          description: 'Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).'
        aadResourceId:
          description: The resource you are requesting authorization to use.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
        clientId:
          type: object
          description: 'The client ID associated with your application. Type: string (or Expression with resultType string).'
        clientSecret:
          description: The client secret associated with your application.
          $ref: '#/components/schemas/SecretBase'
        tokenEndpoint:
          type: object
          description: 'The token endpoint of the authorization server to acquire access token. Type: string (or Expression with resultType string).'
        resource:
          type: object
          description: 'The target service or resource to which the access will be requested. Type: string (or Expression with resultType string).'
        scope:
          type: object
          description: 'The scope of the access required. It describes what kind of access will be requested. Type: string (or Expression with resultType string).'
      required:
        - url
        - authenticationType
    TeamDeskLinkedService:
      x-ms-discriminator-value: TeamDesk
      description: Linked service for TeamDesk.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: TeamDesk linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TeamDeskLinkedServiceTypeProperties'
      required:
        - typeProperties
    TeamDeskLinkedServiceTypeProperties:
      description: TeamDesk linked service type properties.
      type: object
      properties:
        authenticationType:
          description: The authentication type to use.
          type: string
          enum:
            - Basic
            - Token
          x-ms-enum:
            name: TeamDeskAuthenticationType
            modelAsString: true
        url:
          type: object
          description: 'The url to connect TeamDesk source. Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'The username of the TeamDesk source. Type: string (or Expression with resultType string).'
        password:
          description: The password of the TeamDesk source.
          $ref: '#/components/schemas/SecretBase'
        apiToken:
          $ref: '#/components/schemas/SecretBase'
          description: The api token for the TeamDesk source.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - authenticationType
        - url
    QuickbaseLinkedService:
      x-ms-discriminator-value: Quickbase
      description: Linked service for Quickbase.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Quickbase linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuickbaseLinkedServiceTypeProperties'
      required:
        - typeProperties
    QuickbaseLinkedServiceTypeProperties:
      description: Quickbase linked service type properties.
      type: object
      properties:
        url:
          type: object
          description: 'The url to connect Quickbase source. Type: string (or Expression with resultType string).'
        userToken:
          $ref: '#/components/schemas/SecretBase'
          description: The user token for the Quickbase source.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - url
        - userToken
    SmartsheetLinkedService:
      x-ms-discriminator-value: Smartsheet
      description: Linked service for Smartsheet.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Smartsheet linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SmartsheetLinkedServiceTypeProperties'
      required:
        - typeProperties
    SmartsheetLinkedServiceTypeProperties:
      description: Smartsheet linked service type properties.
      type: object
      properties:
        apiToken:
          $ref: '#/components/schemas/SecretBase'
          description: The api token for the Smartsheet source.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - apiToken
    ZendeskLinkedService:
      x-ms-discriminator-value: Zendesk
      description: Linked service for Zendesk.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Zendesk linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ZendeskLinkedServiceTypeProperties'
      required:
        - typeProperties
    ZendeskLinkedServiceTypeProperties:
      description: Zendesk linked service type properties.
      type: object
      properties:
        authenticationType:
          description: The authentication type to use.
          type: string
          enum:
            - Basic
            - Token
          x-ms-enum:
            name: ZendeskAuthenticationType
            modelAsString: true
        url:
          type: object
          description: 'The url to connect Zendesk source. Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'The username of the Zendesk source. Type: string (or Expression with resultType string).'
        password:
          description: The password of the Zendesk source.
          $ref: '#/components/schemas/SecretBase'
        apiToken:
          $ref: '#/components/schemas/SecretBase'
          description: The api token for the Zendesk source.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - authenticationType
        - url
    DataworldLinkedService:
      x-ms-discriminator-value: Dataworld
      description: Linked service for Dataworld.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Dataworld linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataworldLinkedServiceTypeProperties'
      required:
        - typeProperties
    DataworldLinkedServiceTypeProperties:
      description: Dataworld linked service type properties.
      type: object
      properties:
        apiToken:
          $ref: '#/components/schemas/SecretBase'
          description: The api token for the Dataworld source.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - apiToken
    AppFiguresLinkedService:
      x-ms-discriminator-value: AppFigures
      description: Linked service for AppFigures.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: AppFigures linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AppFiguresLinkedServiceTypeProperties'
      required:
        - typeProperties
    AppFiguresLinkedServiceTypeProperties:
      description: AppFigures linked service type properties.
      type: object
      properties:
        userName:
          type: object
          description: The username of the Appfigures source.
        password:
          description: The password of the AppFigures source.
          $ref: '#/components/schemas/SecretBase'
        clientKey:
          $ref: '#/components/schemas/SecretBase'
          description: The client key for the AppFigures source.
      required:
        - userName
        - password
        - clientKey
    AsanaLinkedService:
      x-ms-discriminator-value: Asana
      description: Linked service for Asana.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Asana linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AsanaLinkedServiceTypeProperties'
      required:
        - typeProperties
    AsanaLinkedServiceTypeProperties:
      description: Asana linked service type properties.
      type: object
      properties:
        apiToken:
          $ref: '#/components/schemas/SecretBase'
          description: The api token for the Asana source.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - apiToken
    TwilioLinkedService:
      x-ms-discriminator-value: Twilio
      description: Linked service for Twilio.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Twilio linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TwilioLinkedServiceTypeProperties'
      required:
        - typeProperties
    TwilioLinkedServiceTypeProperties:
      description: Twilio linked service type properties.
      type: object
      properties:
        userName:
          type: object
          description: The Account SID of Twilio service.
        password:
          description: The auth token of Twilio service.
          $ref: '#/components/schemas/SecretBase'
      required:
        - userName
        - password
    AmazonS3LinkedService:
      x-ms-discriminator-value: AmazonS3
      description: Linked service for Amazon S3.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Amazon S3 linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonS3LinkedServiceTypeProperties'
      required:
        - typeProperties
    AmazonS3LinkedServiceTypeProperties:
      description: Amazon S3 linked service properties.
      type: object
      properties:
        authenticationType:
          type: object
          description: 'The authentication type of S3. Allowed value: AccessKey (default) or TemporarySecurityCredentials. Type: string (or Expression with resultType string).'
        accessKeyId:
          type: object
          description: 'The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).'
        secretAccessKey:
          description: The secret access key of the Amazon S3 Identity and Access Management (IAM) user.
          $ref: '#/components/schemas/SecretBase'
        serviceUrl:
          type: object
          description: 'This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).'
        sessionToken:
          $ref: '#/components/schemas/SecretBase'
          description: The session token for the S3 temporary security credential.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    AmazonRedshiftLinkedService:
      x-ms-discriminator-value: AmazonRedshift
      description: Linked service for Amazon Redshift.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Amazon Redshift linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonRedshiftLinkedServiceTypeProperties'
      required:
        - typeProperties
    AmazonRedshiftLinkedServiceTypeProperties:
      description: Amazon Redshift linked service properties.
      type: object
      properties:
        server:
          type: object
          description: 'The name of the Amazon Redshift server. Type: string (or Expression with resultType string).'
        username:
          type: object
          description: 'The username of the Amazon Redshift source. Type: string (or Expression with resultType string).'
        password:
          description: The password of the Amazon Redshift source.
          $ref: '#/components/schemas/SecretBase'
        database:
          type: object
          description: 'The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - server
        - database
    CustomDataSourceLinkedService:
      x-ms-discriminator-value: CustomDataSource
      description: Custom linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Custom linked service properties.
          x-ms-client-flatten: true
          type: object
      required:
        - typeProperties
    AzureSearchLinkedService:
      x-ms-discriminator-value: AzureSearch
      description: Linked service for Windows Azure Search Service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Windows Azure Search Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSearchLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureSearchLinkedServiceTypeProperties:
      description: Windows Azure Search Service linked service properties.
      type: object
      properties:
        url:
          type: object
          description: 'URL for Azure Search service. Type: string (or Expression with resultType string).'
        key:
          description: Admin Key for Azure Search service
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - url
    HttpLinkedService:
      x-ms-discriminator-value: HttpServer
      description: Linked service for an HTTP source.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to this linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HttpLinkedServiceTypeProperties'
      required:
        - typeProperties
    HttpLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      type: object
      properties:
        url:
          type: object
          description: 'The base URL of the HTTP endpoint, e.g. https://www.microsoft.com. Type: string (or Expression with resultType string).'
        authenticationType:
          description: The authentication type to be used to connect to the HTTP server.
          type: string
          enum:
            - Basic
            - Anonymous
            - Digest
            - Windows
            - ClientCertificate
          x-ms-enum:
            name: HttpAuthenticationType
            modelAsString: true
        userName:
          type: object
          description: 'User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).'
        password:
          description: Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.
          $ref: '#/components/schemas/SecretBase'
        authHeaders:
          type: object
          description: 'The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).'
        embeddedCertData:
          type: object
          description: 'Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).'
        certThumbprint:
          type: object
          description: 'Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        enableServerCertificateValidation:
          type: object
          description: 'If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).'
      required:
        - url
    FtpServerLinkedService:
      x-ms-discriminator-value: FtpServer
      description: A FTP server Linked Service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to this linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FtpServerLinkedServiceTypeProperties'
      required:
        - typeProperties
    FtpServerLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      type: object
      properties:
        host:
          type: object
          description: 'Host name of the FTP server. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.'
        authenticationType:
          description: The authentication type to be used to connect to the FTP server.
          type: string
          enum:
            - Basic
            - Anonymous
          x-ms-enum:
            name: FtpAuthenticationType
            modelAsString: true
        userName:
          type: object
          description: 'Username to logon the FTP server. Type: string (or Expression with resultType string).'
        password:
          description: Password to logon the FTP server.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        enableSsl:
          type: object
          description: 'If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).'
        enableServerCertificateValidation:
          type: object
          description: 'If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).'
      required:
        - host
    SftpServerLinkedService:
      x-ms-discriminator-value: Sftp
      description: 'A linked service for an SSH File Transfer Protocol (SFTP) server. '
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to this linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SftpServerLinkedServiceTypeProperties'
      required:
        - typeProperties
    SftpServerLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      type: object
      properties:
        host:
          type: object
          description: 'The SFTP server host name. Type: string (or Expression with resultType string).'
        port:
          type: object
          description: 'The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.'
        authenticationType:
          description: The authentication type to be used to connect to the FTP server.
          type: string
          enum:
            - Basic
            - SshPublicKey
            - MultiFactor
          x-ms-enum:
            name: SftpAuthenticationType
            modelAsString: true
        userName:
          type: object
          description: 'The username used to log on to the SFTP server. Type: string (or Expression with resultType string).'
        password:
          description: Password to logon the SFTP server for Basic authentication.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        privateKeyPath:
          type: object
          description: 'The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).'
        privateKeyContent:
          description: Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.
          $ref: '#/components/schemas/SecretBase'
        passPhrase:
          description: The password to decrypt the SSH private key if the SSH private key is encrypted.
          $ref: '#/components/schemas/SecretBase'
        skipHostKeyValidation:
          type: object
          description: 'If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).'
        hostKeyFingerprint:
          type: object
          description: 'The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).'
      required:
        - host
    SapBWLinkedService:
      x-ms-discriminator-value: SapBW
      description: SAP Business Warehouse Linked Service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to this linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapBWLinkedServiceTypeProperties'
      required:
        - typeProperties
    SapBWLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      type: object
      properties:
        server:
          type: object
          description: 'Host name of the SAP BW instance. Type: string (or Expression with resultType string).'
        systemNumber:
          type: object
          description: 'System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).'
        clientId:
          type: object
          description: 'Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'Username to access the SAP BW server. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the SAP BW server.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - server
        - systemNumber
        - clientId
    SapHanaLinkedService:
      x-ms-discriminator-value: SapHana
      description: SAP HANA Linked Service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to this linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapHanaLinkedServiceProperties'
      required:
        - typeProperties
    SapHanaLinkedServiceProperties:
      description: Properties specific to this linked service type.
      type: object
      properties:
        connectionString:
          type: object
          description: 'SAP HANA ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
        server:
          type: object
          description: 'Host name of the SAP HANA server. Type: string (or Expression with resultType string).'
        authenticationType:
          description: The authentication type to be used to connect to the SAP HANA server.
          type: string
          enum:
            - Basic
            - Windows
          x-ms-enum:
            name: SapHanaAuthenticationType
            modelAsString: true
        userName:
          type: object
          description: 'Username to access the SAP HANA server. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the SAP HANA server.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    AmazonMWSLinkedService:
      x-ms-discriminator-value: AmazonMWS
      description: Amazon Marketplace Web Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Amazon Marketplace Web Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonMWSLinkedServiceTypeProperties'
      required:
        - typeProperties
    AmazonMWSLinkedServiceTypeProperties:
      description: Amazon Marketplace Web Service linked service properties.
      type: object
      properties:
        endpoint:
          description: The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
          type: object
        marketplaceID:
          description: The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
          type: object
        sellerID:
          description: The Amazon seller ID.
          type: object
        mwsAuthToken:
          description: The Amazon MWS authentication token.
          $ref: '#/components/schemas/SecretBase'
        accessKeyId:
          description: The access key id used to access data.
          type: object
        secretKey:
          description: The secret key used to access data.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - endpoint
        - marketplaceID
        - sellerID
        - accessKeyId
    AzurePostgreSqlLinkedService:
      x-ms-discriminator-value: AzurePostgreSql
      description: Azure PostgreSQL linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure PostgreSQL linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzurePostgreSqlLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzurePostgreSqlLinkedServiceTypeProperties:
      description: Azure PostgreSQL linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    ConcurLinkedService:
      x-ms-discriminator-value: Concur
      description: Concur Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Concur Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ConcurLinkedServiceTypeProperties'
      required:
        - typeProperties
    ConcurLinkedServiceTypeProperties:
      description: Concur Service linked service properties.
      type: object
      properties:
        connectionProperties:
          description: 'Properties used to connect to Concur. It is mutually exclusive with any other properties in the linked service. Type: object.'
          type: object
        clientId:
          description: Application client_id supplied by Concur App Management.
          type: object
        username:
          description: The user name that you use to access Concur Service.
          type: object
        password:
          description: The password corresponding to the user name that you provided in the username field.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - clientId
        - username
    CouchbaseLinkedService:
      x-ms-discriminator-value: Couchbase
      description: Couchbase server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Couchbase server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CouchbaseLinkedServiceTypeProperties'
      required:
        - typeProperties
    CouchbaseLinkedServiceTypeProperties:
      description: Couchbase server linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        credString:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of credString in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    DrillLinkedService:
      x-ms-discriminator-value: Drill
      description: Drill server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Drill server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DrillLinkedServiceTypeProperties'
      required:
        - typeProperties
    DrillLinkedServiceTypeProperties:
      description: Drill server linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        pwd:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    EloquaLinkedService:
      x-ms-discriminator-value: Eloqua
      description: Eloqua server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Eloqua server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EloquaLinkedServiceTypeProperties'
      required:
        - typeProperties
    EloquaLinkedServiceTypeProperties:
      description: Eloqua server linked service properties.
      type: object
      properties:
        endpoint:
          description: The endpoint of the Eloqua server. (i.e. eloqua.example.com)
          type: object
        username:
          description: 'The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)'
          type: object
        password:
          description: The password corresponding to the user name.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - endpoint
        - username
    GoogleBigQueryLinkedService:
      x-ms-discriminator-value: GoogleBigQuery
      description: Google BigQuery service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Google BigQuery service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GoogleBigQueryLinkedServiceTypeProperties'
      required:
        - typeProperties
    GoogleBigQueryLinkedServiceTypeProperties:
      description: Google BigQuery service linked service properties.
      type: object
      properties:
        project:
          description: The default BigQuery project to query against.
          type: object
        additionalProjects:
          description: A comma-separated list of public BigQuery projects to access.
          type: object
        requestGoogleDriveScope:
          description: Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
          type: object
        authenticationType:
          description: The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
          type: string
          enum:
            - ServiceAuthentication
            - UserAuthentication
          x-ms-enum:
            name: GoogleBigQueryAuthenticationType
            modelAsString: true
        refreshToken:
          description: The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.
          $ref: '#/components/schemas/SecretBase'
        clientId:
          description: 'The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).'
          type: object
        clientSecret:
          description: The client secret of the google application used to acquire the refresh token.
          $ref: '#/components/schemas/SecretBase'
        email:
          description: The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
          type: object
        keyFilePath:
          description: The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - project
        - authenticationType
    GreenplumLinkedService:
      x-ms-discriminator-value: Greenplum
      description: Greenplum Database linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Greenplum Database linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GreenplumLinkedServiceTypeProperties'
      required:
        - typeProperties
    GreenplumLinkedServiceTypeProperties:
      description: Greenplum Database linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        pwd:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    HBaseLinkedService:
      x-ms-discriminator-value: HBase
      description: HBase server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: HBase server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HBaseLinkedServiceTypeProperties'
      required:
        - typeProperties
    HBaseLinkedServiceTypeProperties:
      description: HBase server linked service properties.
      type: object
      properties:
        host:
          description: The IP address or host name of the HBase server. (i.e. 192.168.222.160)
          type: object
        port:
          description: The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
          type: object
        httpPath:
          description: The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
          type: object
        authenticationType:
          description: The authentication mechanism to use to connect to the HBase server.
          type: string
          enum:
            - Anonymous
            - Basic
          x-ms-enum:
            name: HBaseAuthenticationType
            modelAsString: true
        username:
          description: The user name used to connect to the HBase instance.
          type: object
        password:
          description: The password corresponding to the user name.
          $ref: '#/components/schemas/SecretBase'
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using SSL. The default value is false.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server. The default value is false.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - authenticationType
    HiveLinkedService:
      x-ms-discriminator-value: Hive
      description: Hive Server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Hive Server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HiveLinkedServiceTypeProperties'
      required:
        - typeProperties
    HiveLinkedServiceTypeProperties:
      description: Hive Server linked service properties.
      type: object
      properties:
        host:
          description: IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
          type: object
        port:
          description: The TCP port that the Hive server uses to listen for client connections.
          type: object
        serverType:
          description: The type of Hive server.
          type: string
          enum:
            - HiveServer1
            - HiveServer2
            - HiveThriftServer
          x-ms-enum:
            name: HiveServerType
            modelAsString: true
        thriftTransportProtocol:
          description: The transport protocol to use in the Thrift layer.
          type: string
          enum:
            - Binary
            - SASL
            - 'HTTP '
          x-ms-enum:
            name: HiveThriftTransportProtocol
            modelAsString: true
        authenticationType:
          description: The authentication method used to access the Hive server.
          type: string
          enum:
            - Anonymous
            - Username
            - UsernameAndPassword
            - WindowsAzureHDInsightService
          x-ms-enum:
            name: HiveAuthenticationType
            modelAsString: true
        serviceDiscoveryMode:
          description: true to indicate using the ZooKeeper service, false not.
          type: object
        zooKeeperNameSpace:
          description: The namespace on ZooKeeper under which Hive Server 2 nodes are added.
          type: object
        useNativeQuery:
          description: Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
          type: object
        username:
          description: The user name that you use to access Hive Server.
          type: object
        password:
          description: The password corresponding to the user name that you provided in the Username field
          $ref: '#/components/schemas/SecretBase'
        httpPath:
          description: The partial URL corresponding to the Hive server.
          type: object
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using SSL. The default value is false.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
          type: object
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server. The default value is false.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - authenticationType
    HubspotLinkedService:
      x-ms-discriminator-value: Hubspot
      description: Hubspot Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Hubspot Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HubspotLinkedServiceTypeProperties'
      required:
        - typeProperties
    HubspotLinkedServiceTypeProperties:
      description: Hubspot Service linked service properties.
      type: object
      properties:
        clientId:
          description: The client ID associated with your Hubspot application.
          type: object
        clientSecret:
          description: The client secret associated with your Hubspot application.
          $ref: '#/components/schemas/SecretBase'
        accessToken:
          description: "The access token obtained when initially\_authenticating\_your\_OAuth integration."
          $ref: '#/components/schemas/SecretBase'
        refreshToken:
          description: "The refresh token obtained when initially\_authenticating\_your\_OAuth integration."
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - clientId
    ImpalaLinkedService:
      x-ms-discriminator-value: Impala
      description: Impala server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Impala server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ImpalaLinkedServiceTypeProperties'
      required:
        - typeProperties
    ImpalaLinkedServiceTypeProperties:
      description: Impala server linked service properties.
      type: object
      properties:
        host:
          description: The IP address or host name of the Impala server. (i.e. 192.168.222.160)
          type: object
        port:
          description: The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
          type: object
        authenticationType:
          description: The authentication type to use.
          type: string
          enum:
            - Anonymous
            - SASLUsername
            - UsernameAndPassword
          x-ms-enum:
            name: ImpalaAuthenticationType
            modelAsString: true
        username:
          description: The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
          type: object
        password:
          description: The password corresponding to the user name when using UsernameAndPassword.
          $ref: '#/components/schemas/SecretBase'
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using SSL. The default value is false.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
          type: object
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server. The default value is false.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - authenticationType
    JiraLinkedService:
      x-ms-discriminator-value: Jira
      description: Jira Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Jira Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JiraLinkedServiceTypeProperties'
      required:
        - typeProperties
    JiraLinkedServiceTypeProperties:
      description: Jira Service linked service properties.
      type: object
      properties:
        host:
          description: The IP address or host name of the Jira service. (e.g. jira.example.com)
          type: object
        port:
          description: The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
          type: object
        username:
          description: The user name that you use to access Jira Service.
          type: object
        password:
          description: The password corresponding to the user name that you provided in the username field.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - username
    MagentoLinkedService:
      x-ms-discriminator-value: Magento
      description: Magento server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Magento server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MagentoLinkedServiceTypeProperties'
      required:
        - typeProperties
    MagentoLinkedServiceTypeProperties:
      description: Magento server linked service properties.
      type: object
      properties:
        host:
          description: The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
          type: object
        accessToken:
          description: The access token from Magento.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
    MariaDBLinkedService:
      x-ms-discriminator-value: MariaDB
      description: MariaDB server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: MariaDB server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MariaDBLinkedServiceTypeProperties'
      required:
        - typeProperties
    MariaDBLinkedServiceTypeProperties:
      description: MariaDB server linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        pwd:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    AzureMariaDBLinkedService:
      x-ms-discriminator-value: AzureMariaDB
      description: Azure Database for MariaDB linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Database for MariaDB linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureMariaDBLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureMariaDBLinkedServiceTypeProperties:
      description: Azure Database for MariaDB linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        pwd:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    MarketoLinkedService:
      x-ms-discriminator-value: Marketo
      description: Marketo server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Marketo server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MarketoLinkedServiceTypeProperties'
      required:
        - typeProperties
    MarketoLinkedServiceTypeProperties:
      description: Marketo server linked service properties.
      type: object
      properties:
        endpoint:
          description: The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
          type: object
        clientId:
          description: The client Id of your Marketo service.
          type: object
        clientSecret:
          description: The client secret of your Marketo service.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - endpoint
        - clientId
    PaypalLinkedService:
      x-ms-discriminator-value: Paypal
      description: Paypal Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Paypal Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PaypalLinkedServiceTypeProperties'
      required:
        - typeProperties
    PaypalLinkedServiceTypeProperties:
      description: Paypal Service linked service properties.
      type: object
      properties:
        host:
          description: "The URL\_of the PayPal instance. (i.e. api.sandbox.paypal.com)"
          type: object
        clientId:
          description: The client ID associated with your PayPal application.
          type: object
        clientSecret:
          description: The client secret associated with your PayPal application.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - clientId
    PhoenixLinkedService:
      x-ms-discriminator-value: Phoenix
      description: Phoenix server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Phoenix server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PhoenixLinkedServiceTypeProperties'
      required:
        - typeProperties
    PhoenixLinkedServiceTypeProperties:
      description: Phoenix server linked service properties.
      type: object
      properties:
        host:
          description: The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
          type: object
        port:
          description: The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
          type: object
        httpPath:
          description: The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
          type: object
        authenticationType:
          description: The authentication mechanism used to connect to the Phoenix server.
          type: string
          enum:
            - Anonymous
            - UsernameAndPassword
            - WindowsAzureHDInsightService
          x-ms-enum:
            name: PhoenixAuthenticationType
            modelAsString: true
        username:
          description: The user name used to connect to the Phoenix server.
          type: object
        password:
          description: The password corresponding to the user name.
          $ref: '#/components/schemas/SecretBase'
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using SSL. The default value is false.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
          type: object
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server. The default value is false.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - authenticationType
    PrestoLinkedService:
      x-ms-discriminator-value: Presto
      description: Presto server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Presto server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PrestoLinkedServiceTypeProperties'
      required:
        - typeProperties
    PrestoLinkedServiceTypeProperties:
      description: Presto server linked service properties.
      type: object
      properties:
        host:
          description: The IP address or host name of the Presto server. (i.e. 192.168.222.160)
          type: object
        serverVersion:
          description: The version of the Presto server. (i.e. 0.148-t)
          type: object
        catalog:
          description: The catalog context for all request against the server.
          type: object
        port:
          description: The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
          type: object
        authenticationType:
          description: The authentication mechanism used to connect to the Presto server.
          type: string
          enum:
            - Anonymous
            - LDAP
          x-ms-enum:
            name: PrestoAuthenticationType
            modelAsString: true
        username:
          description: The user name used to connect to the Presto server.
          type: object
        password:
          description: The password corresponding to the user name.
          $ref: '#/components/schemas/SecretBase'
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using SSL. The default value is false.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
          type: object
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server. The default value is false.
          type: object
        timeZoneID:
          description: The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - serverVersion
        - catalog
        - authenticationType
    QuickBooksLinkedService:
      x-ms-discriminator-value: QuickBooks
      description: QuickBooks server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: QuickBooks server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuickBooksLinkedServiceTypeProperties'
      required:
        - typeProperties
    QuickBooksLinkedServiceTypeProperties:
      description: QuickBooks server linked service properties.
      type: object
      properties:
        connectionProperties:
          description: 'Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object.'
          type: object
        endpoint:
          description: The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
          type: object
        companyId:
          description: The company ID of the QuickBooks company to authorize.
          type: object
        consumerKey:
          description: The consumer key for OAuth 1.0 authentication.
          type: object
        consumerSecret:
          description: The consumer secret for OAuth 1.0 authentication.
          $ref: '#/components/schemas/SecretBase'
        accessToken:
          description: The access token for OAuth 1.0 authentication.
          $ref: '#/components/schemas/SecretBase'
        accessTokenSecret:
          description: The access token secret for OAuth 1.0 authentication.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    ServiceNowLinkedService:
      x-ms-discriminator-value: ServiceNow
      description: ServiceNow server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: ServiceNow server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ServiceNowLinkedServiceTypeProperties'
      required:
        - typeProperties
    ServiceNowLinkedServiceTypeProperties:
      description: ServiceNow server linked service properties.
      type: object
      properties:
        endpoint:
          description: The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
          type: object
        authenticationType:
          description: The authentication type to use.
          type: string
          enum:
            - Basic
            - OAuth2
          x-ms-enum:
            name: ServiceNowAuthenticationType
            modelAsString: true
        username:
          description: The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
          type: object
        password:
          description: The password corresponding to the user name for Basic and OAuth2 authentication.
          $ref: '#/components/schemas/SecretBase'
        clientId:
          description: The client id for OAuth2 authentication.
          type: object
        clientSecret:
          description: The client secret for OAuth2 authentication.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - endpoint
        - authenticationType
    ShopifyLinkedService:
      x-ms-discriminator-value: Shopify
      description: Shopify Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Shopify Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ShopifyLinkedServiceTypeProperties'
      required:
        - typeProperties
    ShopifyLinkedServiceTypeProperties:
      description: Shopify Service linked service properties.
      type: object
      properties:
        host:
          description: The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
          type: object
        accessToken:
          description: The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
    SparkLinkedService:
      x-ms-discriminator-value: Spark
      description: Spark Server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Spark Server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SparkLinkedServiceTypeProperties'
      required:
        - typeProperties
    SparkLinkedServiceTypeProperties:
      description: Spark Server linked service properties.
      type: object
      properties:
        host:
          description: IP address or host name of the Spark server
          type: object
        port:
          description: The TCP port that the Spark server uses to listen for client connections.
          type: object
        serverType:
          description: The type of Spark server.
          type: string
          enum:
            - SharkServer
            - SharkServer2
            - SparkThriftServer
          x-ms-enum:
            name: SparkServerType
            modelAsString: true
        thriftTransportProtocol:
          description: The transport protocol to use in the Thrift layer.
          type: string
          enum:
            - Binary
            - SASL
            - 'HTTP '
          x-ms-enum:
            name: SparkThriftTransportProtocol
            modelAsString: true
        authenticationType:
          description: The authentication method used to access the Spark server.
          type: string
          enum:
            - Anonymous
            - Username
            - UsernameAndPassword
            - WindowsAzureHDInsightService
          x-ms-enum:
            name: SparkAuthenticationType
            modelAsString: true
        username:
          description: The user name that you use to access Spark Server.
          type: object
        password:
          description: The password corresponding to the user name that you provided in the Username field
          $ref: '#/components/schemas/SecretBase'
        httpPath:
          description: The partial URL corresponding to the Spark server.
          type: object
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using SSL. The default value is false.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
          type: object
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server. The default value is false.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - port
        - authenticationType
    SquareLinkedService:
      x-ms-discriminator-value: Square
      description: Square Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Square Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SquareLinkedServiceTypeProperties'
      required:
        - typeProperties
    SquareLinkedServiceTypeProperties:
      description: Square Service linked service properties.
      type: object
      properties:
        connectionProperties:
          description: 'Properties used to connect to Square. It is mutually exclusive with any other properties in the linked service. Type: object.'
          type: object
        host:
          description: "The URL\_of the Square instance. (i.e. mystore.mysquare.com)"
          type: object
        clientId:
          description: The client ID associated with your Square application.
          type: object
        clientSecret:
          description: The client secret associated with your Square application.
          $ref: '#/components/schemas/SecretBase'
        redirectUri:
          description: The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    XeroLinkedService:
      x-ms-discriminator-value: Xero
      description: Xero Service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Xero Service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/XeroLinkedServiceTypeProperties'
      required:
        - typeProperties
    XeroLinkedServiceTypeProperties:
      description: Xero Service linked service properties.
      type: object
      properties:
        connectionProperties:
          description: 'Properties used to connect to Xero. It is mutually exclusive with any other properties in the linked service. Type: object.'
          type: object
        host:
          description: The endpoint of the Xero server. (i.e. api.xero.com)
          type: object
        consumerKey:
          description: The consumer key associated with the Xero application.
          $ref: '#/components/schemas/SecretBase'
        privateKey:
          description: |-
            The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(
            ).
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    ZohoLinkedService:
      x-ms-discriminator-value: Zoho
      description: Zoho server linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Zoho server linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ZohoLinkedServiceTypeProperties'
      required:
        - typeProperties
    ZohoLinkedServiceTypeProperties:
      description: Zoho server linked service properties.
      type: object
      properties:
        connectionProperties:
          description: 'Properties used to connect to Zoho. It is mutually exclusive with any other properties in the linked service. Type: object.'
          type: object
        endpoint:
          description: The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
          type: object
        accessToken:
          description: The access token for Zoho authentication.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    VerticaLinkedService:
      x-ms-discriminator-value: Vertica
      description: Vertica linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Vertica linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VerticaLinkedServiceTypeProperties'
      required:
        - typeProperties
    VerticaLinkedServiceTypeProperties:
      description: Vertica linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        pwd:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    NetezzaLinkedService:
      x-ms-discriminator-value: Netezza
      description: Netezza linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Netezza linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetezzaLinkedServiceTypeProperties'
      required:
        - typeProperties
    NetezzaLinkedServiceTypeProperties:
      description: Netezza linked service properties.
      type: object
      properties:
        connectionString:
          description: 'An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.'
          type: object
        pwd:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    SalesforceMarketingCloudLinkedService:
      x-ms-discriminator-value: SalesforceMarketingCloud
      description: Salesforce Marketing Cloud linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Salesforce Marketing Cloud linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SalesforceMarketingCloudLinkedServiceTypeProperties'
      required:
        - typeProperties
    SalesforceMarketingCloudLinkedServiceTypeProperties:
      description: Salesforce Marketing Cloud linked service properties.
      type: object
      properties:
        connectionProperties:
          description: 'Properties used to connect to Salesforce Marketing Cloud. It is mutually exclusive with any other properties in the linked service. Type: object.'
          type: object
        clientId:
          description: 'The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).'
          type: object
        clientSecret:
          description: 'The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: 'Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        useHostVerification:
          description: 'Specifies whether to require the host name in the server''s certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        usePeerVerification:
          description: 'Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    HDInsightOnDemandLinkedService:
      x-ms-discriminator-value: HDInsightOnDemand
      description: HDInsight ondemand linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: HDInsight ondemand linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HDInsightOnDemandLinkedServiceTypeProperties'
      required:
        - typeProperties
    HDInsightOnDemandLinkedServiceTypeProperties:
      description: HDInsight ondemand linked service properties.
      type: object
      properties:
        clusterSize:
          type: object
          description: 'Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).'
        timeToLive:
          type: object
          description: 'The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).'
        version:
          type: object
          description: "Version of the HDInsight cluster.\_ Type: string (or Expression with resultType string)."
        linkedServiceName:
          description: Azure Storage linked service to be used by the on-demand cluster for storing and processing data.
          $ref: '#/components/schemas/LinkedServiceReference'
        hostSubscriptionId:
          type: object
          description: 'The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          description: The key for the service principal id.
          $ref: '#/components/schemas/SecretBase'
        tenant:
          type: object
          description: 'The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).'
        clusterResourceGroup:
          type: object
          description: 'The resource group where the cluster belongs. Type: string (or Expression with resultType string).'
        clusterNamePrefix:
          type: object
          description: 'The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).'
        clusterUserName:
          type: object
          description: 'The username to access the cluster. Type: string (or Expression with resultType string).'
        clusterPassword:
          description: The password to access the cluster.
          $ref: '#/components/schemas/SecretBase'
        clusterSshUserName:
          type: object
          description: 'The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).'
        clusterSshPassword:
          description: The password to SSH remotely connect cluster’s node (for Linux).
          $ref: '#/components/schemas/SecretBase'
        additionalLinkedServiceNames:
          description: Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
          type: array
          items:
            $ref: '#/components/schemas/LinkedServiceReference'
          x-ms-identifiers:
            - referenceName
        hcatalogLinkedServiceName:
          description: The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.
          $ref: '#/components/schemas/LinkedServiceReference'
        clusterType:
          type: object
          description: 'The cluster type. Type: string (or Expression with resultType string).'
        sparkVersion:
          type: object
          description: 'The version of spark if the cluster type is ''spark''. Type: string (or Expression with resultType string).'
        coreConfiguration:
          description: Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
          type: object
        hBaseConfiguration:
          description: Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
          type: object
        hdfsConfiguration:
          description: Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
          type: object
        hiveConfiguration:
          description: Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
          type: object
        mapReduceConfiguration:
          description: Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
          type: object
        oozieConfiguration:
          description: Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
          type: object
        stormConfiguration:
          description: Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
          type: object
        yarnConfiguration:
          description: Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
          type: object
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        headNodeSize:
          type: object
          description: Specifies the size of the head node for the HDInsight cluster.
        dataNodeSize:
          type: object
          description: Specifies the size of the data node for the HDInsight cluster.
        zookeeperNodeSize:
          type: object
          description: Specifies the size of the Zoo Keeper node for the HDInsight cluster.
        scriptActions:
          description: Custom script actions to run on HDI ondemand cluster once it's up. Please refer to https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.
          type: array
          items:
            $ref: '#/components/schemas/ScriptAction'
          x-ms-identifiers:
            - name
        virtualNetworkId:
          type: object
          description: 'The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string).'
        subnetName:
          type: object
          description: 'The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - clusterSize
        - timeToLive
        - version
        - linkedServiceName
        - hostSubscriptionId
        - tenant
        - clusterResourceGroup
    ScriptAction:
      description: Custom script action to run on HDI ondemand cluster once it's up.
      type: object
      properties:
        name:
          type: string
          description: The user provided name of the script action.
        uri:
          type: string
          description: The URI for the script action.
        roles:
          type: object
          description: The node types on which the script action should be executed.
        parameters:
          type: string
          description: The parameters for the script action.
      required:
        - name
        - uri
        - roles
    HdiNodeTypes:
      description: All available HdiNodeTypes values.
      type: string
      enum:
        - Headnode
        - Workernode
        - Zookeeper
      x-ms-enum:
        name: HdiNodeTypes
        modelAsString: true
    AzureDataLakeAnalyticsLinkedService:
      x-ms-discriminator-value: AzureDataLakeAnalytics
      description: Azure Data Lake Analytics linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Data Lake Analytics linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDataLakeAnalyticsLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureDataLakeAnalyticsLinkedServiceTypeProperties:
      description: Azure Data Lake Analytics linked service properties.
      type: object
      properties:
        accountName:
          type: object
          description: 'The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          description: The Key of the application used to authenticate against the Azure Data Lake Analytics account.
          $ref: '#/components/schemas/SecretBase'
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        subscriptionId:
          type: object
          description: 'Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).'
        resourceGroupName:
          type: object
          description: 'Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).'
        dataLakeAnalyticsUri:
          type: object
          description: 'Azure Data Lake Analytics URI Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - accountName
        - tenant
    AzureDatabricksLinkedService:
      x-ms-discriminator-value: AzureDatabricks
      description: Azure Databricks linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Databricks linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDatabricksLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureDatabricksLinkedServiceTypeProperties:
      description: Azure Databricks linked service properties.
      type: object
      properties:
        domain:
          type: object
          description: '<REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).'
        accessToken:
          description: 'Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        authentication:
          type: object
          description: 'Required to specify MSI, if using Workspace resource id for databricks REST API. Type: string (or Expression with resultType string).'
        workspaceResourceId:
          type: object
          description: 'Workspace resource id for databricks REST API. Type: string (or Expression with resultType string).'
        existingClusterId:
          type: object
          description: 'The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string).'
        instancePoolId:
          type: object
          description: 'The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string).'
        newClusterVersion:
          type: object
          description: 'If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string).'
        newClusterNumOfWorker:
          type: object
          description: 'If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like ''1'' means numOfWorker is 1 or ''1:10'' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as ''2''. Required if newClusterVersion is specified. Type: string (or Expression with resultType string).'
        newClusterNodeType:
          type: object
          description: 'The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string).'
        newClusterSparkConf:
          description: A set of optional, user-specified Spark configuration key-value pairs.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        newClusterSparkEnvVars:
          description: A set of optional, user-specified Spark environment variables key-value pairs.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        newClusterCustomTags:
          description: Additional tags for cluster resources. This property is ignored in instance pool configurations.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        newClusterLogDestination:
          type: object
          description: 'Specify a location to deliver Spark driver, worker, and event logs. Type: string (or Expression with resultType string).'
        newClusterDriverNodeType:
          type: object
          description: 'The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string).'
        newClusterInitScripts:
          type: object
          description: 'User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings).'
        newClusterEnableElasticDisk:
          type: object
          description: 'Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        policyId:
          type: object
          description: 'The policy id for limiting the ability to configure clusters based on a user defined set of rules. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - domain
    AzureDatabricksDeltaLakeLinkedService:
      x-ms-discriminator-value: AzureDatabricksDeltaLake
      description: Azure Databricks Delta Lake linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Databricks Delta Lake linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDatabricksDetltaLakeLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureDatabricksDetltaLakeLinkedServiceTypeProperties:
      description: Azure Databricks Delta Lake linked service properties.
      type: object
      properties:
        domain:
          type: object
          description: '<REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).'
        accessToken:
          description: 'Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string, SecureString or AzureKeyVaultSecretReference.'
          $ref: '#/components/schemas/SecretBase'
        clusterId:
          type: object
          description: 'The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
        workspaceResourceId:
          type: object
          description: 'Workspace resource id for databricks REST API. Type: string (or Expression with resultType string).'
      required:
        - domain
    ResponsysLinkedService:
      x-ms-discriminator-value: Responsys
      description: Responsys linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Responsys linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ResponsysLinkedServiceTypeProperties'
      required:
        - typeProperties
    ResponsysLinkedServiceTypeProperties:
      description: Responsys linked service properties.
      type: object
      properties:
        endpoint:
          description: The endpoint of the Responsys server.
          type: object
        clientId:
          description: 'The client ID associated with the Responsys application. Type: string (or Expression with resultType string).'
          type: object
        clientSecret:
          description: 'The client secret associated with the Responsys application. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: 'Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        useHostVerification:
          description: 'Specifies whether to require the host name in the server''s certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        usePeerVerification:
          description: 'Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - endpoint
        - clientId
    DynamicsAXLinkedService:
      x-ms-discriminator-value: DynamicsAX
      description: Dynamics AX linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Dynamics AX linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DynamicsAXLinkedServiceTypeProperties'
      required:
        - typeProperties
    DynamicsAXLinkedServiceTypeProperties:
      description: Dynamics AX linked service properties.
      type: object
      properties:
        url:
          description: The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint.
          type: object
        servicePrincipalId:
          description: 'Specify the application''s client ID. Type: string (or Expression with resultType string).'
          type: object
        servicePrincipalKey:
          description: 'Specify the application''s key. Mark this field as a SecureString to store it securely in Data Factory, or reference a secret stored in Azure Key Vault. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        tenant:
          description: 'Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string).'
          type: object
        aadResourceId:
          description: 'Specify the resource you are requesting authorization. Type: string (or Expression with resultType string).'
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - url
        - servicePrincipalId
        - servicePrincipalKey
        - tenant
        - aadResourceId
    OracleServiceCloudLinkedService:
      x-ms-discriminator-value: OracleServiceCloud
      description: Oracle Service Cloud linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Oracle Service Cloud linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OracleServiceCloudLinkedServiceTypeProperties'
      required:
        - typeProperties
    OracleServiceCloudLinkedServiceTypeProperties:
      description: Oracle Service Cloud linked service properties.
      type: object
      properties:
        host:
          description: The URL of the Oracle Service Cloud instance.
          type: object
        username:
          description: The user name that you use to access Oracle Service Cloud server.
          type: object
        password:
          description: The password corresponding to the user name that you provided in the username key.
          $ref: '#/components/schemas/SecretBase'
        useEncryptedEndpoints:
          description: 'Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        useHostVerification:
          description: 'Specifies whether to require the host name in the server''s certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        usePeerVerification:
          description: 'Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).'
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
      required:
        - host
        - username
        - password
    GoogleAdWordsLinkedService:
      x-ms-discriminator-value: GoogleAdWords
      description: Google AdWords service linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Google AdWords service linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GoogleAdWordsLinkedServiceTypeProperties'
      required:
        - typeProperties
    GoogleAdWordsLinkedServiceTypeProperties:
      description: Google AdWords service linked service properties.
      type: object
      properties:
        connectionProperties:
          description: 'Properties used to connect to GoogleAds. It is mutually exclusive with any other properties in the linked service. Type: object.'
          type: object
        clientCustomerID:
          description: The Client customer ID of the AdWords account that you want to fetch report data for.
          type: object
        developerToken:
          description: The developer token associated with the manager account that you use to grant access to the AdWords API.
          $ref: '#/components/schemas/SecretBase'
        authenticationType:
          description: The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
          type: string
          enum:
            - ServiceAuthentication
            - UserAuthentication
          x-ms-enum:
            name: GoogleAdWordsAuthenticationType
            modelAsString: true
        refreshToken:
          description: The refresh token obtained from Google for authorizing access to AdWords for UserAuthentication.
          $ref: '#/components/schemas/SecretBase'
        clientId:
          description: 'The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).'
          type: object
        clientSecret:
          description: The client secret of the google application used to acquire the refresh token.
          $ref: '#/components/schemas/SecretBase'
        email:
          description: The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
          type: object
        keyFilePath:
          description: The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
          type: object
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
    SapTableLinkedService:
      x-ms-discriminator-value: SapTable
      description: SAP Table Linked Service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Properties specific to this linked service type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapTableLinkedServiceTypeProperties'
      required:
        - typeProperties
    SapTableLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      type: object
      properties:
        server:
          type: object
          description: 'Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).'
        systemNumber:
          type: object
          description: 'System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).'
        clientId:
          type: object
          description: 'Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).'
        language:
          type: object
          description: 'Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).'
        systemId:
          type: object
          description: 'SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).'
        userName:
          type: object
          description: 'Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        password:
          description: Password to access the SAP server where the table is located.
          $ref: '#/components/schemas/SecretBase'
        messageServer:
          type: object
          description: 'The hostname of the SAP Message Server. Type: string (or Expression with resultType string).'
        messageServerService:
          type: object
          description: 'The service name or port number of the Message Server. Type: string (or Expression with resultType string).'
        sncMode:
          type: object
          description: 'SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).'
        sncMyName:
          type: object
          description: 'Initiator''s SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        sncPartnerName:
          type: object
          description: 'Communication partner''s SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        sncLibraryPath:
          type: object
          description: 'External security product''s library to access the SAP server where the table is located. Type: string (or Expression with resultType string).'
        sncQop:
          type: object
          description: 'SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).'
        logonGroup:
          type: object
          description: 'The Logon Group for the SAP System. Type: string (or Expression with resultType string).'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
    AzureDataExplorerLinkedService:
      x-ms-discriminator-value: AzureDataExplorer
      description: Azure Data Explorer (Kusto) linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Data Explorer (Kusto) linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDataExplorerLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureDataExplorerLinkedServiceTypeProperties:
      description: Azure Data Explorer (Kusto) linked service properties.
      type: object
      properties:
        endpoint:
          description: 'The endpoint of Azure Data Explorer (the engine''s endpoint). URL will be in the format https://<clusterName>.<regionName>.kusto.windows.net. Type: string (or Expression with resultType string)'
          type: object
        servicePrincipalId:
          type: object
          description: 'The ID of the service principal used to authenticate against Azure Data Explorer. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          $ref: '#/components/schemas/SecretBase'
          description: The key of the service principal used to authenticate against Kusto.
        database:
          type: object
          description: 'Database name for connection. Type: string (or Expression with resultType string).'
        tenant:
          type: object
          description: 'The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).'
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
      required:
        - endpoint
        - database
    AzureFunctionLinkedService:
      x-ms-discriminator-value: AzureFunction
      description: Azure Function linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Function linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureFunctionLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureFunctionLinkedServiceTypeProperties:
      description: Azure Function linked service properties.
      type: object
      properties:
        functionAppUrl:
          description: The endpoint of the Azure Function App. URL will be in the format https://<accountName>.azurewebsites.net.
          type: object
        functionKey:
          description: Function or Host key for Azure Function App.
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
          type: object
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
        resourceId:
          description: Allowed token audiences for azure function.
          type: object
        authentication:
          type: object
          description: 'Type of authentication (Required to specify MSI) used to connect to AzureFunction. Type: string (or Expression with resultType string).'
      required:
        - functionAppUrl
    SnowflakeLinkedService:
      x-ms-discriminator-value: Snowflake
      description: Snowflake linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Snowflake linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SnowflakeLinkedServiceTypeProperties'
      required:
        - typeProperties
    SnowflakeLinkedServiceTypeProperties:
      description: Snowflake linked service properties.
      type: object
      properties:
        connectionString:
          description: 'The connection string of snowflake. Type: string, SecureString.'
          type: object
        password:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The Azure key vault secret reference of password in connection string.
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - connectionString
    SharePointOnlineListLinkedService:
      x-ms-discriminator-value: SharePointOnlineList
      description: SharePoint Online List linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: SharePoint Online List linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharePointOnlineListLinkedServiceTypeProperties'
      required:
        - typeProperties
    SharePointOnlineListLinkedServiceTypeProperties:
      description: SharePoint Online List linked service properties.
      type: object
      properties:
        siteUrl:
          type: object
          description: 'The URL of the SharePoint Online site. For example, https://contoso.sharepoint.com/sites/siteName. Type: string (or Expression with resultType string).'
        tenantId:
          type: object
          description: 'The tenant ID under which your application resides. You can find it from Azure portal Active Directory overview page. Type: string (or Expression with resultType string).'
        servicePrincipalId:
          type: object
          description: 'The application (client) ID of your application registered in Azure Active Directory. Make sure to grant SharePoint site permission to this application. Type: string (or Expression with resultType string).'
        servicePrincipalKey:
          description: 'The client secret of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).'
          $ref: '#/components/schemas/SecretBase'
        encryptedCredential:
          type: object
          description: 'The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).'
      required:
        - siteUrl
        - tenantId
        - servicePrincipalId
        - servicePrincipalKey
    AzureSynapseArtifactsLinkedService:
      x-ms-discriminator-value: AzureSynapseArtifacts
      description: Azure Synapse Analytics (Artifacts) linked service.
      type: object
      allOf:
        - $ref: '#/components/schemas/LinkedService'
      properties:
        typeProperties:
          description: Azure Synapse Analytics (Artifacts) linked service properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSynapseArtifactsLinkedServiceTypeProperties'
      required:
        - typeProperties
    AzureSynapseArtifactsLinkedServiceTypeProperties:
      description: Azure Synapse Analytics (Artifacts) linked service properties.
      type: object
      properties:
        endpoint:
          type: object
          description: 'https://<workspacename>.dev.azuresynapse.net, Azure Synapse Analytics workspace URL. Type: string (or Expression with resultType string).'
        authentication:
          type: object
          description: 'Required to specify MSI, if using system assigned managed identity as authentication method. Type: string (or Expression with resultType string).'
      required:
        - endpoint
    Pipeline:
      description: A data factory pipeline.
      type: object
      properties:
        description:
          description: The description of the pipeline.
          type: string
        activities:
          type: array
          description: List of activities in pipeline.
          items:
            $ref: '#/components/schemas/Activity'
          x-ms-identifiers:
            - name
        parameters:
          $ref: '#/components/schemas/ParameterDefinitionSpecification'
          description: List of parameters for pipeline.
        variables:
          $ref: '#/components/schemas/VariableDefinitionSpecification'
          description: List of variables for pipeline.
        concurrency:
          type: integer
          minimum: 1
          description: The max number of concurrent runs for the pipeline.
        annotations:
          description: List of tags that can be used for describing the Pipeline.
          type: array
          items:
            type: object
          x-ms-identifiers: []
        runDimensions:
          description: Dimensions emitted by Pipeline.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        folder:
          description: The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
          type: object
          properties:
            name:
              description: The name of the folder that this Pipeline is in.
              type: string
        policy:
          $ref: '#/components/schemas/PipelinePolicy'
    PipelinePolicy:
      description: Pipeline Policy.
      type: object
      properties:
        elapsedTimeMetric:
          $ref: '#/components/schemas/PipelineElapsedTimeMetricPolicy'
    PipelineElapsedTimeMetricPolicy:
      description: Pipeline ElapsedTime Metric Policy.
      type: object
      properties:
        duration:
          description: TimeSpan value, after which an Azure Monitoring Metric is fired.
          type: object
    Activity:
      discriminator:
        propertyName: type
      description: A pipeline activity.
      type: object
      properties:
        name:
          description: Activity name.
          type: string
        type:
          type: string
          description: Type of activity.
        description:
          description: Activity description.
          type: string
        dependsOn:
          type: array
          description: Activity depends on condition.
          items:
            $ref: '#/components/schemas/ActivityDependency'
          x-ms-identifiers: []
        userProperties:
          type: array
          description: Activity user properties.
          items:
            $ref: '#/components/schemas/UserProperty'
          x-ms-identifiers:
            - name
      additionalProperties:
        type: object
      required:
        - name
        - type
    UserProperty:
      description: User property.
      type: object
      properties:
        name:
          description: User property name.
          type: string
        value:
          description: 'User property value. Type: string (or Expression with resultType string).'
          type: object
      required:
        - name
        - value
    ActivityDependency:
      description: Activity dependency information.
      type: object
      properties:
        activity:
          description: Activity name.
          type: string
        dependencyConditions:
          type: array
          description: Match-Condition for the dependency.
          items:
            type: string
            enum:
              - Succeeded
              - Failed
              - Skipped
              - Completed
            x-ms-enum:
              name: DependencyCondition
              modelAsString: true
      additionalProperties:
        type: object
      required:
        - activity
        - dependencyConditions
    ControlActivity:
      x-ms-discriminator-value: Container
      description: Base class for all control activities like IfCondition, ForEach , Until.
      allOf:
        - $ref: '#/components/schemas/Activity'
      properties: {}
    ExecutionActivity:
      x-ms-discriminator-value: Execution
      description: Base class for all execution activities.
      allOf:
        - $ref: '#/components/schemas/Activity'
      properties:
        linkedServiceName:
          description: Linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        policy:
          $ref: '#/components/schemas/ActivityPolicy'
          description: Activity policy.
    ActivityPolicy:
      description: Execution policy for an activity.
      type: object
      properties:
        timeout:
          type: object
          description: 'Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        retry:
          type: object
          description: 'Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.'
        retryIntervalInSeconds:
          type: integer
          description: Interval between each retry attempt (in seconds). The default is 30 sec.
          minimum: 30
          maximum: 86400
        secureInput:
          type: boolean
          description: When set to true, Input from activity is considered as secure and will not be logged to monitoring.
        secureOutput:
          type: boolean
          description: When set to true, Output from activity is considered as secure and will not be logged to monitoring.
      additionalProperties:
        type: object
    StoreReadSettings:
      description: Connector read setting.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: The read setting type.
        maxConcurrentConnections:
          type: object
          description: 'The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).'
        disableMetricsCollection:
          type: object
          description: 'If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).'
      additionalProperties:
        type: object
      required:
        - type
    AzureBlobStorageReadSettings:
      description: Azure blob read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Azure blob wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Azure blob wildcardFileName. Type: string (or Expression with resultType string).'
        prefix:
          type: object
          description: 'The prefix filter for the Azure Blob name. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    AzureBlobFSReadSettings:
      description: Azure blobFS read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Azure blobFS wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Azure blobFS wildcardFileName. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    AzureDataLakeStoreReadSettings:
      description: Azure data lake store read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'ADLS wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'ADLS wildcardFileName. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        listAfter:
          type: object
          description: 'Lists files after the value (exclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).'
        listBefore:
          type: object
          description: 'Lists files before the value (inclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    AmazonS3ReadSettings:
      description: Amazon S3 read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'AmazonS3 wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'AmazonS3 wildcardFileName. Type: string (or Expression with resultType string).'
        prefix:
          type: object
          description: 'The prefix filter for the S3 object name. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    FileServerReadSettings:
      description: File server read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'FileServer wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'FileServer wildcardFileName. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
        fileFilter:
          type: object
          description: 'Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).'
    AzureFileStorageReadSettings:
      description: Azure File Storage read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Azure File Storage wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Azure File Storage wildcardFileName. Type: string (or Expression with resultType string).'
        prefix:
          type: object
          description: 'The prefix filter for the Azure File name starting from root path. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    SftpWriteSettings:
      description: Sftp write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreWriteSettings'
      properties:
        operationTimeout:
          description: 'Specifies the timeout for writing each chunk to SFTP server. Default value: 01:00:00 (one hour). Type: string (or Expression with resultType string).'
          type: object
        useTempFileRename:
          description: 'Upload to temporary file(s) and rename. Disable this option if your SFTP server doesn''t support rename operation. Type: boolean (or Expression with resultType boolean).'
          type: object
    AmazonS3CompatibleReadSettings:
      description: Amazon S3 Compatible read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Amazon S3 Compatible wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Amazon S3 Compatible wildcardFileName. Type: string (or Expression with resultType string).'
        prefix:
          type: object
          description: 'The prefix filter for the S3 Compatible object name. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    OracleCloudStorageReadSettings:
      description: Oracle Cloud Storage read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Oracle Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Oracle Cloud Storage wildcardFileName. Type: string (or Expression with resultType string).'
        prefix:
          type: object
          description: 'The prefix filter for the Oracle Cloud Storage object name. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    GoogleCloudStorageReadSettings:
      description: Google Cloud Storage read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Google Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Google Cloud Storage wildcardFileName. Type: string (or Expression with resultType string).'
        prefix:
          type: object
          description: 'The prefix filter for the Google Cloud Storage object name. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
    FtpReadSettings:
      description: Ftp read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Ftp wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Ftp wildcardFileName. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        useBinaryTransfer:
          type: boolean
          description: Specify whether to use binary transfer mode for FTP stores.
        disableChunking:
          type: object
          description: 'If true, disable parallel reading within each file. Default is false. Type: boolean (or Expression with resultType boolean).'
    SftpReadSettings:
      description: Sftp read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'Sftp wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'Sftp wildcardFileName. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
        disableChunking:
          type: object
          description: 'If true, disable parallel reading within each file. Default is false. Type: boolean (or Expression with resultType boolean).'
    HttpReadSettings:
      description: Sftp read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        requestMethod:
          type: object
          description: 'The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).'
        requestBody:
          type: object
          description: 'The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).'
        additionalHeaders:
          type: object
          description: 'The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).'
        requestTimeout:
          type: object
          description: Specifies the timeout for a HTTP client to get HTTP response from HTTP server.
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
    HdfsReadSettings:
      description: HDFS read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreReadSettings'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        wildcardFolderPath:
          type: object
          description: 'HDFS wildcardFolderPath. Type: string (or Expression with resultType string).'
        wildcardFileName:
          type: object
          description: 'HDFS wildcardFileName. Type: string (or Expression with resultType string).'
        fileListPath:
          type: object
          description: 'Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).'
        enablePartitionDiscovery:
          type: boolean
          description: Indicates whether to enable partition discovery.
        partitionRootPath:
          type: object
          description: 'Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
        distcpSettings:
          description: Specifies Distcp-related settings.
          $ref: '#/components/schemas/DistcpSettings'
        deleteFilesAfterCompletion:
          type: object
          description: 'Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).'
    StoreWriteSettings:
      description: Connector write settings.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: The write setting type.
        maxConcurrentConnections:
          type: object
          description: 'The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).'
        disableMetricsCollection:
          type: object
          description: 'If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).'
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
      additionalProperties:
        type: object
      required:
        - type
    AzureBlobStorageWriteSettings:
      description: Azure blob write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreWriteSettings'
      properties:
        blockSizeInMB:
          description: 'Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).'
          type: object
    AzureBlobFSWriteSettings:
      description: Azure blobFS write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreWriteSettings'
      properties:
        blockSizeInMB:
          description: 'Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).'
          type: object
    AzureDataLakeStoreWriteSettings:
      description: Azure data lake store write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreWriteSettings'
      properties:
        expiryDateTime:
          description: 'Specifies the expiry time of the written files. The time is applied to the UTC time zone in the format of "2018-12-01T05:00:00Z". Default value is NULL. Type: integer (or Expression with resultType integer).'
          type: object
    FileServerWriteSettings:
      description: File server write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreWriteSettings'
    AzureFileStorageWriteSettings:
      description: Azure File Storage write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/StoreWriteSettings'
    FormatReadSettings:
      description: Format read settings.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: The read setting type.
      additionalProperties:
        type: object
      required:
        - type
    CompressionReadSettings:
      description: Compression read settings.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: The Compression setting type.
      additionalProperties:
        type: object
      required:
        - type
    ZipDeflateReadSettings:
      description: The ZipDeflate compression read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/CompressionReadSettings'
      properties:
        preserveZipFileNameAsFolder:
          description: 'Preserve the zip file name as folder path. Type: boolean (or Expression with resultType boolean).'
          type: object
    TarReadSettings:
      description: The Tar compression read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/CompressionReadSettings'
      properties:
        preserveCompressionFileNameAsFolder:
          description: 'Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).'
          type: object
    TarGZipReadSettings:
      description: The TarGZip compression read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/CompressionReadSettings'
      properties:
        preserveCompressionFileNameAsFolder:
          description: 'Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).'
          type: object
    DelimitedTextReadSettings:
      description: Delimited text read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatReadSettings'
      properties:
        skipLineCount:
          type: object
          description: 'Indicates the number of non-empty rows to skip when reading data from input files. Type: integer (or Expression with resultType integer).'
        compressionProperties:
          $ref: '#/components/schemas/CompressionReadSettings'
          description: Compression settings.
    JsonReadSettings:
      description: Json read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatReadSettings'
      properties:
        compressionProperties:
          $ref: '#/components/schemas/CompressionReadSettings'
          description: Compression settings.
    XmlReadSettings:
      description: Xml read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatReadSettings'
      properties:
        compressionProperties:
          $ref: '#/components/schemas/CompressionReadSettings'
          description: Compression settings.
        validationMode:
          type: object
          description: 'Indicates what validation method is used when reading the xml files. Allowed values: ''none'', ''xsd'', or ''dtd''. Type: string (or Expression with resultType string).'
        detectDataType:
          type: object
          description: 'Indicates whether type detection is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).'
        namespaces:
          type: object
          description: 'Indicates whether namespace is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).'
        namespacePrefixes:
          type: object
          description: 'Namespace uri to prefix mappings to override the prefixes in column names when namespace is enabled, if no prefix is defined for a namespace uri, the prefix of xml element/attribute name in the xml data file will be used. Example: "{"http://www.example.com/xml":"prefix"}" Type: object (or Expression with resultType object).'
    BinaryReadSettings:
      description: Binary read settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatReadSettings'
      properties:
        compressionProperties:
          $ref: '#/components/schemas/CompressionReadSettings'
          description: Compression settings.
    FormatWriteSettings:
      description: Format write settings.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: The write setting type.
      additionalProperties:
        type: object
      required:
        - type
    AvroWriteSettings:
      description: Avro write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatWriteSettings'
      properties:
        recordName:
          type: string
          description: Top level record name in write result, which is required in AVRO spec.
        recordNamespace:
          type: string
          description: Record namespace in the write result.
        maxRowsPerFile:
          type: object
          description: 'Limit the written file''s row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).'
        fileNamePrefix:
          type: object
          description: 'Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).'
    OrcWriteSettings:
      description: Orc write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatWriteSettings'
      properties:
        maxRowsPerFile:
          type: object
          description: 'Limit the written file''s row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).'
        fileNamePrefix:
          type: object
          description: 'Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).'
    ParquetWriteSettings:
      description: Parquet write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatWriteSettings'
      properties:
        maxRowsPerFile:
          type: object
          description: 'Limit the written file''s row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).'
        fileNamePrefix:
          type: object
          description: 'Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).'
    DelimitedTextWriteSettings:
      description: Delimited text write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatWriteSettings'
      properties:
        quoteAllText:
          type: object
          description: 'Indicates whether string values should always be enclosed with quotes. Type: boolean (or Expression with resultType boolean).'
        fileExtension:
          type: object
          description: 'The file extension used to create the files. Type: string (or Expression with resultType string).'
        maxRowsPerFile:
          type: object
          description: 'Limit the written file''s row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).'
        fileNamePrefix:
          type: object
          description: 'Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).'
      required:
        - fileExtension
    JsonWriteSettings:
      description: Json write settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/FormatWriteSettings'
      properties:
        filePattern:
          type: object
          description: File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is 'setOfObjects'. It is case-sensitive.
    JsonWriteFilePattern:
      description: All available filePatterns.
      type: string
      enum:
        - setOfObjects
        - arrayOfObjects
      x-ms-enum:
        name: JsonWriteFilePattern
        modelAsString: true
    AvroSource:
      description: A copy activity Avro source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: Avro store settings.
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    ExcelSource:
      description: A copy activity excel source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: Excel store settings.
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    ParquetSource:
      description: A copy activity Parquet source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: Parquet store settings.
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    DelimitedTextSource:
      description: A copy activity DelimitedText source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: DelimitedText store settings.
        formatSettings:
          $ref: '#/components/schemas/DelimitedTextReadSettings'
          description: DelimitedText format settings.
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    JsonSource:
      description: A copy activity Json source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: Json store settings.
        formatSettings:
          $ref: '#/components/schemas/JsonReadSettings'
          description: Json format settings.
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    XmlSource:
      description: A copy activity Xml source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: Xml store settings.
        formatSettings:
          $ref: '#/components/schemas/XmlReadSettings'
          description: Xml format settings.
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    OrcSource:
      description: A copy activity ORC source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: ORC store settings.
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    DelimitedTextSink:
      description: A copy activity DelimitedText sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreWriteSettings'
          description: DelimitedText store settings.
        formatSettings:
          $ref: '#/components/schemas/DelimitedTextWriteSettings'
          description: DelimitedText format settings.
    JsonSink:
      description: A copy activity Json sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreWriteSettings'
          description: Json store settings.
        formatSettings:
          $ref: '#/components/schemas/JsonWriteSettings'
          description: Json format settings.
    OrcSink:
      description: A copy activity ORC sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreWriteSettings'
          description: ORC store settings.
        formatSettings:
          $ref: '#/components/schemas/OrcWriteSettings'
          description: ORC format settings.
    CopyActivity:
      x-ms-discriminator-value: Copy
      description: Copy activity.
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          description: Copy activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CopyActivityTypeProperties'
        inputs:
          type: array
          description: List of inputs for the activity.
          items:
            $ref: '#/components/schemas/DatasetReference'
          x-ms-identifiers:
            - referenceName
        outputs:
          type: array
          description: List of outputs for the activity.
          items:
            $ref: '#/components/schemas/DatasetReference'
          x-ms-identifiers:
            - referenceName
      required:
        - typeProperties
    CopyActivityTypeProperties:
      description: Copy activity properties.
      properties:
        source:
          description: Copy activity source.
          $ref: '#/components/schemas/CopySource'
        sink:
          description: Copy activity sink.
          $ref: '#/components/schemas/CopySink'
        translator:
          description: Copy activity translator. If not specified, tabular translator is used.
          type: object
        enableStaging:
          type: object
          description: 'Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).'
        stagingSettings:
          description: Specifies interim staging settings when EnableStaging is true.
          $ref: '#/components/schemas/StagingSettings'
        parallelCopies:
          type: object
          description: 'Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.'
        dataIntegrationUnits:
          type: object
          description: 'Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.'
        enableSkipIncompatibleRow:
          type: object
          description: 'Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).'
        redirectIncompatibleRowSettings:
          description: Redirect incompatible row settings when EnableSkipIncompatibleRow is true.
          $ref: '#/components/schemas/RedirectIncompatibleRowSettings'
        logStorageSettings:
          description: (Deprecated. Please use LogSettings) Log storage settings customer need to provide when enabling session log.
          $ref: '#/components/schemas/LogStorageSettings'
        logSettings:
          description: Log settings customer needs provide when enabling log.
          $ref: '#/components/schemas/LogSettings'
        preserveRules:
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          description: Preserve Rules.
          x-ms-identifiers: []
        preserve:
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          description: Preserve rules.
          x-ms-identifiers: []
        validateDataConsistency:
          type: object
          description: 'Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean).'
        skipErrorFile:
          description: Specify the fault tolerance for data consistency.
          $ref: '#/components/schemas/SkipErrorFile'
      required:
        - source
        - sink
    CopySource:
      discriminator:
        propertyName: type
      description: A copy activity source.
      type: object
      properties:
        type:
          type: string
          description: Copy source type.
        sourceRetryCount:
          type: object
          description: 'Source retry count. Type: integer (or Expression with resultType integer).'
        sourceRetryWait:
          type: object
          description: 'Source retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        maxConcurrentConnections:
          type: object
          description: 'The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer).'
        disableMetricsCollection:
          type: object
          description: 'If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).'
      additionalProperties:
        type: object
      required:
        - type
    BinarySource:
      description: A copy activity Binary source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: Binary store settings.
        formatSettings:
          $ref: '#/components/schemas/BinaryReadSettings'
          description: Binary format settings.
    TabularSource:
      description: Copy activity sources of tabular type.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    AzureTableSource:
      description: A copy activity Azure Table source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        azureTableSourceQuery:
          type: object
          description: 'Azure Table source query. Type: string (or Expression with resultType string).'
        azureTableSourceIgnoreTableNotFound:
          type: object
          description: 'Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).'
    BlobSource:
      description: A copy activity Azure Blob source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        treatEmptyAsNull:
          type: object
          description: 'Treat empty as null. Type: boolean (or Expression with resultType boolean).'
        skipHeaderLineCount:
          type: object
          description: 'Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).'
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
    DocumentDbCollectionSource:
      description: A copy activity Document Database Collection source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Documents query. Type: string (or Expression with resultType string).'
        nestingSeparator:
          type: object
          description: 'Nested properties separator. Type: string (or Expression with resultType string).'
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    CosmosDbSqlApiSource:
      description: A copy activity Azure CosmosDB (SQL API) Collection source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'SQL API query. Type: string (or Expression with resultType string).'
        pageSize:
          type: object
          description: 'Page size of the result. Type: integer (or Expression with resultType integer).'
        preferredRegions:
          type: object
          description: 'Preferred regions. Type: array of strings (or Expression with resultType array of strings).'
        detectDatetime:
          type: object
          description: 'Whether detect primitive values as datetime values. Type: boolean (or Expression with resultType boolean).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    DynamicsSource:
      description: A copy activity Dynamics source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    DynamicsCrmSource:
      description: A copy activity Dynamics CRM source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'FetchXML is a proprietary query language that is used in Microsoft Dynamics CRM (online & on-premises). Type: string (or Expression with resultType string).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    CommonDataServiceForAppsSource:
      description: A copy activity Common Data Service for Apps source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'FetchXML is a proprietary query language that is used in Microsoft Common Data Service for Apps (online & on-premises). Type: string (or Expression with resultType string).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    RelationalSource:
      description: A copy activity source for various relational databases.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    InformixSource:
      description: A copy activity source for Informix.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
    MicrosoftAccessSource:
      description: A copy activity source for Microsoft Access.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    Db2Source:
      description: A copy activity source for Db2 databases.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
    OdbcSource:
      description: A copy activity source for ODBC databases.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
    MySqlSource:
      description: A copy activity source for MySQL databases.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
    PostgreSqlSource:
      description: A copy activity source for PostgreSQL databases.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
    SybaseSource:
      description: A copy activity source for Sybase databases.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
    SapBwSource:
      description: A copy activity source for SapBW server via MDX.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'MDX query. Type: string (or Expression with resultType string).'
    ODataSource:
      description: A copy activity source for OData source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'OData query. For example, "$top=1". Type: string (or Expression with resultType string).'
        httpRequestTimeout:
          type: object
          description: 'The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    SalesforceSource:
      description: A copy activity Salesforce source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
        readBehavior:
          description: The read behavior for the operation. Default is Query.
          type: string
          enum:
            - Query
            - QueryAll
          x-ms-enum:
            name: SalesforceSourceReadBehavior
            modelAsString: true
    SalesforceServiceCloudSource:
      description: A copy activity Salesforce Service Cloud source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
        readBehavior:
          description: The read behavior for the operation. Default is Query.
          type: string
          enum:
            - Query
            - QueryAll
          x-ms-enum:
            name: SalesforceSourceReadBehavior
            modelAsString: true
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    SapCloudForCustomerSource:
      description: A copy activity source for SAP Cloud for Customer source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).'
        httpRequestTimeout:
          type: object
          description: 'The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
    SapEccSource:
      description: A copy activity source for SAP ECC source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).'
        httpRequestTimeout:
          type: object
          description: 'The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
    SapHanaSource:
      description: A copy activity source for SAP HANA source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'SAP HANA Sql query. Type: string (or Expression with resultType string).'
        packetSize:
          type: object
          description: 'The packet size of data read from SAP HANA. Type: integer(or Expression with resultType integer).'
        partitionOption:
          description: 'The partition mechanism that will be used for SAP HANA read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "SapHanaDynamicRange". '
          type: object
        partitionSettings:
          description: The settings that will be leveraged for SAP HANA source partitioning.
          $ref: '#/components/schemas/SapHanaPartitionSettings'
    SapHanaPartitionSettings:
      description: The settings that will be leveraged for SAP HANA source partitioning.
      type: object
      properties:
        partitionColumnName:
          type: object
          description: 'The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
    SapOpenHubSource:
      description: A copy activity source for SAP Business Warehouse Open Hub Destination source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        excludeLastRequest:
          type: object
          description: 'Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).'
        baseRequestId:
          type: object
          description: 'The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).'
        customRfcReadTableFunctionModule:
          type: object
          description: 'Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).'
        sapDataColumnDelimiter:
          type: object
          description: 'The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).'
    SapOdpSource:
      description: A copy activity source for SAP ODP source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        extractionMode:
          type: object
          description: 'The extraction mode. Allowed value include: Full, Delta and Recovery. The default value is Full. Type: string (or Expression with resultType string).'
        subscriberProcess:
          type: object
          description: 'The subscriber process to manage the delta process. Type: string (or Expression with resultType string).'
        selection:
          type: object
          description: 'Specifies the selection conditions from source data. Type: array of objects(selection) (or Expression with resultType array of objects).'
        projection:
          type: object
          description: 'Specifies the columns to be selected from source data. Type: array of objects(projection) (or Expression with resultType array of objects).'
    SapTableSource:
      description: A copy activity source for SAP Table source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        rowCount:
          type: object
          description: 'The number of rows to be retrieved. Type: integer(or Expression with resultType integer).'
        rowSkips:
          type: object
          description: 'The number of rows that will be skipped. Type: integer (or Expression with resultType integer).'
        rfcTableFields:
          type: object
          description: 'The fields of the SAP table that will be retrieved. For example, column0, column1. Type: string (or Expression with resultType string).'
        rfcTableOptions:
          type: object
          description: 'The options for the filtering of the SAP Table. For example, COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType string).'
        batchSize:
          type: object
          description: 'Specifies the maximum number of rows that will be retrieved at a time when retrieving data from SAP Table. Type: integer (or Expression with resultType integer).'
        customRfcReadTableFunctionModule:
          type: object
          description: 'Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).'
        sapDataColumnDelimiter:
          type: object
          description: 'The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).'
        partitionOption:
          description: 'The partition mechanism that will be used for SAP table read in parallel. Possible values include: "None", "PartitionOnInt", "PartitionOnCalendarYear", "PartitionOnCalendarMonth", "PartitionOnCalendarDate", "PartitionOnTime".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for SAP table source partitioning.
          $ref: '#/components/schemas/SapTablePartitionSettings'
    SapTablePartitionSettings:
      description: The settings that will be leveraged for SAP table source partitioning.
      type: object
      properties:
        partitionColumnName:
          type: object
          description: 'The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionUpperBound:
          type: object
          description: 'The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionLowerBound:
          type: object
          description: 'The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        maxPartitionsNumber:
          type: object
          description: 'The maximum value of partitions the table will be split into. Type: integer (or Expression with resultType string).'
    RestSink:
      description: A copy activity Rest service Sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        requestMethod:
          type: object
          description: 'The HTTP method used to call the RESTful API. The default is POST. Type: string (or Expression with resultType string).'
        additionalHeaders:
          type: object
          description: 'The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).'
        httpRequestTimeout:
          type: object
          description: 'The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        requestInterval:
          type: object
          description: 'The time to await before sending next request, in milliseconds '
        httpCompressionType:
          type: object
          description: 'Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None. And The Only Supported option is Gzip. '
    RestSource:
      description: A copy activity Rest service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        requestMethod:
          type: object
          description: 'The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).'
        requestBody:
          type: object
          description: 'The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).'
        additionalHeaders:
          type: object
          description: 'The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).'
        paginationRules:
          type: object
          description: 'The pagination rules to compose next page requests. Type: string (or Expression with resultType string).'
        httpRequestTimeout:
          type: object
          description: 'The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        requestInterval:
          type: object
          description: 'The time to await before sending next page request. '
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    SqlSource:
      description: A copy activity SQL source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        sqlReaderQuery:
          type: object
          description: 'SQL reader query. Type: string (or Expression with resultType string).'
        sqlReaderStoredProcedureName:
          type: object
          description: 'Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: 'Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        isolationLevel:
          description: 'Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).'
          type: object
        partitionOption:
          description: 'The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Sql source partitioning.
          $ref: '#/components/schemas/SqlPartitionSettings'
    SqlServerSource:
      description: A copy activity SQL server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        sqlReaderQuery:
          type: object
          description: 'SQL reader query. Type: string (or Expression with resultType string).'
        sqlReaderStoredProcedureName:
          type: object
          description: 'Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: 'Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        produceAdditionalTypes:
          description: Which additional types to produce.
          type: object
        partitionOption:
          description: 'The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Sql source partitioning.
          $ref: '#/components/schemas/SqlPartitionSettings'
    AmazonRdsForSqlServerSource:
      description: A copy activity Amazon RDS for SQL Server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        sqlReaderQuery:
          type: object
          description: 'SQL reader query. Type: string (or Expression with resultType string).'
        sqlReaderStoredProcedureName:
          type: object
          description: 'Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: 'Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        produceAdditionalTypes:
          description: Which additional types to produce.
          type: object
        partitionOption:
          description: 'The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Sql source partitioning.
          $ref: '#/components/schemas/SqlPartitionSettings'
    AzureSqlSource:
      description: A copy activity Azure SQL source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        sqlReaderQuery:
          type: object
          description: 'SQL reader query. Type: string (or Expression with resultType string).'
        sqlReaderStoredProcedureName:
          type: object
          description: 'Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: 'Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        produceAdditionalTypes:
          description: Which additional types to produce.
          type: object
        partitionOption:
          description: 'The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Sql source partitioning.
          $ref: '#/components/schemas/SqlPartitionSettings'
    SqlMISource:
      description: A copy activity Azure SQL Managed Instance source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        sqlReaderQuery:
          type: object
          description: 'SQL reader query. Type: string (or Expression with resultType string).'
        sqlReaderStoredProcedureName:
          type: object
          description: 'Name of the stored procedure for a Azure SQL Managed Instance source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: 'Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        produceAdditionalTypes:
          description: Which additional types to produce.
          type: object
        partitionOption:
          description: 'The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Sql source partitioning.
          $ref: '#/components/schemas/SqlPartitionSettings'
    SqlDWSource:
      description: A copy activity SQL Data Warehouse source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        sqlReaderQuery:
          type: object
          description: 'SQL Data Warehouse reader query. Type: string (or Expression with resultType string).'
        sqlReaderStoredProcedureName:
          type: object
          description: 'Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          type: object
          description: 'Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.'
        partitionOption:
          description: 'The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Sql source partitioning.
          $ref: '#/components/schemas/SqlPartitionSettings'
    SqlPartitionSettings:
      description: The settings that will be leveraged for Sql source partitioning.
      type: object
      properties:
        partitionColumnName:
          type: object
          description: 'The name of the column in integer or datetime type that will be used for proceeding partitioning. If not specified, the primary key of the table is auto-detected and used as the partition column. Type: string (or Expression with resultType string).'
        partitionUpperBound:
          type: object
          description: 'The maximum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string).'
        partitionLowerBound:
          type: object
          description: 'The minimum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string).'
    FileSystemSource:
      description: A copy activity file system source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    HdfsSource:
      description: A copy activity HDFS source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
        distcpSettings:
          description: Specifies Distcp-related settings.
          $ref: '#/components/schemas/DistcpSettings'
    DistcpSettings:
      description: Distcp settings.
      type: object
      properties:
        resourceManagerEndpoint:
          type: object
          description: 'Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).'
        tempScriptPath:
          type: object
          description: 'Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).'
        distcpOptions:
          type: object
          description: 'Specifies the Distcp options. Type: string (or Expression with resultType string).'
      required:
        - resourceManagerEndpoint
        - tempScriptPath
    AzureMySqlSource:
      description: A copy activity Azure MySQL source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
    AzureDataExplorerSource:
      description: A copy activity Azure Data Explorer (Kusto) source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Database query. Should be a Kusto Query Language (KQL) query. Type: string (or Expression with resultType string).'
        noTruncation:
          type: object
          description: The name of the Boolean option that controls whether truncation is applied to result-sets that go beyond a certain row-count limit.
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
      required:
        - query
    OracleSource:
      description: A copy activity Oracle source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        oracleReaderQuery:
          type: object
          description: 'Oracle reader query. Type: string (or Expression with resultType string).'
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        partitionOption:
          description: 'The partition mechanism that will be used for Oracle read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Oracle source partitioning.
          $ref: '#/components/schemas/OraclePartitionSettings'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    OraclePartitionSettings:
      description: The settings that will be leveraged for Oracle source partitioning.
      type: object
      properties:
        partitionNames:
          type: object
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          description: 'Names of the physical partitions of Oracle table. '
        partitionColumnName:
          type: object
          description: 'The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionUpperBound:
          type: object
          description: 'The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionLowerBound:
          type: object
          description: 'The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
    AmazonRdsForOracleSource:
      description: A copy activity AmazonRdsForOracle source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        oracleReaderQuery:
          type: object
          description: 'AmazonRdsForOracle reader query. Type: string (or Expression with resultType string).'
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        partitionOption:
          type: object
          description: 'The partition mechanism that will be used for AmazonRdsForOracle read in parallel. Type: string (or Expression with resultType string).'
        partitionSettings:
          description: The settings that will be leveraged for AmazonRdsForOracle source partitioning.
          $ref: '#/components/schemas/AmazonRdsForOraclePartitionSettings'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    AmazonRdsForOraclePartitionOption:
      type: string
      enum:
        - None
        - PhysicalPartitionsOfTable
        - DynamicRange
      x-ms-enum:
        name: AmazonRdsForOraclePartitionOption
        modelAsString: true
    AmazonRdsForOraclePartitionSettings:
      description: The settings that will be leveraged for AmazonRdsForOracle source partitioning.
      type: object
      properties:
        partitionNames:
          type: object
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          description: 'Names of the physical partitions of AmazonRdsForOracle table. '
        partitionColumnName:
          type: object
          description: 'The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionUpperBound:
          type: object
          description: 'The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionLowerBound:
          type: object
          description: 'The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
    TeradataSource:
      description: A copy activity Teradata source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Teradata query. Type: string (or Expression with resultType string).'
        partitionOption:
          description: 'The partition mechanism that will be used for teradata read in parallel. Possible values include: "None", "Hash", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for teradata source partitioning.
          $ref: '#/components/schemas/TeradataPartitionSettings'
    TeradataPartitionSettings:
      description: The settings that will be leveraged for teradata source partitioning.
      type: object
      properties:
        partitionColumnName:
          type: object
          description: 'The name of the column that will be used for proceeding range or hash partitioning. Type: string (or Expression with resultType string).'
        partitionUpperBound:
          type: object
          description: 'The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionLowerBound:
          type: object
          description: 'The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
    WebSource:
      description: A copy activity source for web page table.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    CassandraSource:
      description: A copy activity source for a Cassandra database.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).'
        consistencyLevel:
          description: The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
          type: string
          enum:
            - ALL
            - EACH_QUORUM
            - QUORUM
            - LOCAL_QUORUM
            - ONE
            - TWO
            - THREE
            - LOCAL_ONE
            - SERIAL
            - LOCAL_SERIAL
          x-ms-enum:
            name: CassandraSourceReadConsistencyLevels
            modelAsString: true
    MongoDbSource:
      description: A copy activity source for a MongoDB database.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    MongoDbAtlasSource:
      description: A copy activity source for a MongoDB Atlas database.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        filter:
          type: object
          description: 'Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).'
        cursorMethods:
          description: Cursor methods for Mongodb query
          $ref: '#/components/schemas/MongoDbCursorMethodsProperties'
        batchSize:
          type: object
          description: 'Specifies the number of documents to return in each batch of the response from MongoDB Atlas instance. In most cases, modifying the batch size will not affect the user or the application. This property''s main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).'
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    MongoDbV2Source:
      description: A copy activity source for a MongoDB database.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        filter:
          type: object
          description: 'Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).'
        cursorMethods:
          description: Cursor methods for Mongodb query
          $ref: '#/components/schemas/MongoDbCursorMethodsProperties'
        batchSize:
          type: object
          description: 'Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property''s main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).'
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    CosmosDbMongoDbApiSource:
      description: A copy activity source for a CosmosDB (MongoDB API) database.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        filter:
          type: object
          description: 'Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).'
        cursorMethods:
          description: Cursor methods for Mongodb query.
          $ref: '#/components/schemas/MongoDbCursorMethodsProperties'
        batchSize:
          type: object
          description: 'Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property''s main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).'
        queryTimeout:
          type: object
          description: 'Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        additionalColumns:
          type: object
          description: 'Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects).'
    MongoDbCursorMethodsProperties:
      description: Cursor methods for Mongodb query
      type: object
      properties:
        project:
          type: object
          description: 'Specifies the fields to return in the documents that match the query filter. To return all fields in the matching documents, omit this parameter. Type: string (or Expression with resultType string).'
        sort:
          type: object
          description: 'Specifies the order in which the query returns matching documents. Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).'
        skip:
          type: object
          description: 'Specifies the how many documents skipped and where MongoDB begins returning results. This approach may be useful in implementing paginated results. Type: integer (or Expression with resultType integer).'
        limit:
          type: object
          description: 'Specifies the maximum number of documents the server returns. limit() is analogous to the LIMIT statement in a SQL database. Type: integer (or Expression with resultType integer).'
      additionalProperties:
        type: object
    Office365Source:
      description: A copy activity source for an Office 365 service.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        allowedGroups:
          type: object
          description: 'The groups containing all the users. Type: array of strings (or Expression with resultType array of strings).'
        userScopeFilterUri:
          type: object
          description: 'The user scope uri. Type: string (or Expression with resultType string).'
        dateFilterColumn:
          type: object
          description: 'The Column to apply the <paramref name="StartTime"/> and <paramref name="EndTime"/>. Type: string (or Expression with resultType string).'
        startTime:
          type: object
          description: 'Start time of the requested range for this dataset. Type: string (or Expression with resultType string).'
        endTime:
          type: object
          description: 'End time of the requested range for this dataset. Type: string (or Expression with resultType string).'
        outputColumns:
          type: object
          description: 'The columns to be read out from the Office 365 table. Type: array of objects (or Expression with resultType array of objects). Example: [ { "name": "Id" }, { "name": "CreatedDateTime" } ]'
    AzureDataLakeStoreSource:
      description: A copy activity Azure Data Lake source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
    AzureBlobFSSource:
      description: A copy activity Azure BlobFS source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        treatEmptyAsNull:
          type: object
          description: 'Treat empty as null. Type: boolean (or Expression with resultType boolean).'
        skipHeaderLineCount:
          type: object
          description: 'Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).'
        recursive:
          type: object
          description: 'If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).'
    HttpSource:
      description: A copy activity source for an HTTP file.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        httpRequestTimeout:
          type: object
          description: 'Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
    AmazonMWSSource:
      description: A copy activity Amazon Marketplace Web Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    AzurePostgreSqlSource:
      description: A copy activity Azure PostgreSQL source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    AzurePostgreSqlSink:
      description: A copy activity Azure PostgreSQL sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'A query to execute before starting the copy. Type: string (or Expression with resultType string).'
    AzureMySqlSink:
      description: A copy activity Azure MySql sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'A query to execute before starting the copy. Type: string (or Expression with resultType string).'
    ConcurSource:
      description: A copy activity Concur Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    CouchbaseSource:
      description: A copy activity Couchbase server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    DrillSource:
      description: A copy activity Drill server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    EloquaSource:
      description: A copy activity Eloqua server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    GoogleBigQuerySource:
      description: A copy activity Google BigQuery service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    GreenplumSource:
      description: A copy activity Greenplum Database source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    HBaseSource:
      description: A copy activity HBase server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    HiveSource:
      description: A copy activity Hive Server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    HubspotSource:
      description: A copy activity Hubspot Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    ImpalaSource:
      description: A copy activity Impala server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    JiraSource:
      description: A copy activity Jira Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    MagentoSource:
      description: A copy activity Magento server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    MariaDBSource:
      description: A copy activity MariaDB server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    AzureMariaDBSource:
      description: A copy activity Azure MariaDB source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    MarketoSource:
      description: A copy activity Marketo server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    PaypalSource:
      description: A copy activity Paypal Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    PhoenixSource:
      description: A copy activity Phoenix server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    PrestoSource:
      description: A copy activity Presto server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    QuickBooksSource:
      description: A copy activity QuickBooks server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    ServiceNowSource:
      description: A copy activity ServiceNow server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    ShopifySource:
      description: A copy activity Shopify Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    SparkSource:
      description: A copy activity Spark Server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    SquareSource:
      description: A copy activity Square Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    XeroSource:
      description: A copy activity Xero Service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    ZohoSource:
      description: A copy activity Zoho server source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    NetezzaSource:
      description: A copy activity Netezza source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
        partitionOption:
          description: 'The partition mechanism that will be used for Netezza read in parallel. Possible values include: "None", "DataSlice", "DynamicRange".'
          type: object
        partitionSettings:
          description: The settings that will be leveraged for Netezza source partitioning.
          $ref: '#/components/schemas/NetezzaPartitionSettings'
    NetezzaPartitionSettings:
      description: The settings that will be leveraged for Netezza source partitioning.
      type: object
      properties:
        partitionColumnName:
          type: object
          description: 'The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionUpperBound:
          type: object
          description: 'The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
        partitionLowerBound:
          type: object
          description: 'The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).'
    VerticaSource:
      description: A copy activity Vertica source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    SalesforceMarketingCloudSource:
      description: A copy activity Salesforce Marketing Cloud source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    ResponsysSource:
      description: A copy activity Responsys source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    DynamicsAXSource:
      description: A copy activity Dynamics AX source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
        httpRequestTimeout:
          type: object
          description: 'The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
    OracleServiceCloudSource:
      description: A copy activity Oracle Service Cloud source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    GoogleAdWordsSource:
      description: A copy activity Google AdWords service source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'A query to retrieve data from source. Type: string (or Expression with resultType string).'
    AmazonRedshiftSource:
      description: A copy activity source for Amazon Redshift Source.
      type: object
      allOf:
        - $ref: '#/components/schemas/TabularSource'
      properties:
        query:
          type: object
          description: 'Database query. Type: string (or Expression with resultType string).'
        redshiftUnloadSettings:
          description: The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
          $ref: '#/components/schemas/RedshiftUnloadSettings'
    RedshiftUnloadSettings:
      description: The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
      type: object
      properties:
        s3LinkedServiceName:
          description: The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.
          $ref: '#/components/schemas/LinkedServiceReference'
        bucketName:
          type: object
          description: 'The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).'
      required:
        - s3LinkedServiceName
        - bucketName
    SnowflakeSource:
      description: A copy activity snowflake source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Snowflake Sql query. Type: string (or Expression with resultType string).'
        exportSettings:
          $ref: '#/components/schemas/SnowflakeExportCopyCommand'
          description: Snowflake export settings.
    ExportSettings:
      description: Export command settings.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: The export setting type.
      additionalProperties:
        type: object
      required:
        - type
    SnowflakeExportCopyCommand:
      description: Snowflake export command settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/ExportSettings'
      properties:
        additionalCopyOptions:
          type: object
          description: 'Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalCopyOptions": { "DATE_FORMAT": "MM/DD/YYYY", "TIME_FORMAT": "''HH24:MI:SS.FF''" }'
          additionalProperties:
            type: object
        additionalFormatOptions:
          type: object
          description: 'Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalFormatOptions": { "OVERWRITE": "TRUE", "MAX_FILE_SIZE": "''FALSE''" }'
          additionalProperties:
            type: object
    AzureDatabricksDeltaLakeSource:
      description: A copy activity Azure Databricks Delta Lake source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'Azure Databricks Delta Lake Sql query. Type: string (or Expression with resultType string).'
        exportSettings:
          $ref: '#/components/schemas/AzureDatabricksDeltaLakeExportCommand'
          description: Azure Databricks Delta Lake export settings.
    AzureDatabricksDeltaLakeExportCommand:
      description: Azure Databricks Delta Lake export command settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/ExportSettings'
      properties:
        dateFormat:
          type: object
          description: 'Specify the date format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).'
        timestampFormat:
          type: object
          description: 'Specify the timestamp format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).'
    AzureDatabricksDeltaLakeSink:
      description: A copy activity Azure Databricks Delta Lake sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
        importSettings:
          $ref: '#/components/schemas/AzureDatabricksDeltaLakeImportCommand'
          description: Azure Databricks Delta Lake import settings.
    AzureDatabricksDeltaLakeImportCommand:
      description: Azure Databricks Delta Lake import command settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/ImportSettings'
      properties:
        dateFormat:
          type: object
          description: 'Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).'
        timestampFormat:
          type: object
          description: 'Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).'
    StoredProcedureParameter:
      description: SQL stored procedure parameter.
      type: object
      properties:
        value:
          type: object
          description: 'Stored procedure parameter value. Type: string (or Expression with resultType string).'
        type:
          description: Stored procedure parameter type.
          $ref: '#/components/schemas/StoredProcedureParameterType'
    StoredProcedureParameterType:
      description: Stored procedure parameter type.
      type: string
      enum:
        - String
        - Int
        - Int64
        - Decimal
        - Guid
        - Boolean
        - Date
      x-ms-enum:
        name: StoredProcedureParameterType
        modelAsString: true
    CopySink:
      discriminator:
        propertyName: type
      description: A copy activity sink.
      type: object
      properties:
        type:
          type: string
          description: Copy sink type.
        writeBatchSize:
          type: object
          description: 'Write batch size. Type: integer (or Expression with resultType integer), minimum: 0.'
        writeBatchTimeout:
          type: object
          description: 'Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        sinkRetryCount:
          type: object
          description: 'Sink retry count. Type: integer (or Expression with resultType integer).'
        sinkRetryWait:
          type: object
          description: 'Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        maxConcurrentConnections:
          type: object
          description: 'The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer).'
        disableMetricsCollection:
          type: object
          description: 'If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean).'
      additionalProperties:
        type: object
      required:
        - type
    SapCloudForCustomerSink:
      description: A copy activity SAP Cloud for Customer sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          description: The write behavior for the operation. Default is 'Insert'.
          type: string
          enum:
            - Insert
            - Update
          x-ms-enum:
            name: SapCloudForCustomerSinkWriteBehavior
            modelAsString: true
        httpRequestTimeout:
          type: object
          description: 'The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
    AzureQueueSink:
      description: A copy activity Azure Queue sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties: {}
    CopyBehaviorType:
      description: All available types of copy behavior.
      type: string
      enum:
        - PreserveHierarchy
        - FlattenHierarchy
        - MergeFiles
      x-ms-enum:
        name: CopyBehaviorType
        modelAsString: true
    AzureTableSink:
      description: A copy activity Azure Table sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        azureTableDefaultPartitionKeyValue:
          type: object
          description: 'Azure Table default partition key value. Type: string (or Expression with resultType string).'
        azureTablePartitionKeyName:
          type: object
          description: 'Azure Table partition key name. Type: string (or Expression with resultType string).'
        azureTableRowKeyName:
          type: object
          description: 'Azure Table row key name. Type: string (or Expression with resultType string).'
        azureTableInsertType:
          type: object
          description: 'Azure Table insert type. Type: string (or Expression with resultType string).'
    AvroSink:
      description: A copy activity Avro sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreWriteSettings'
          description: Avro store settings.
        formatSettings:
          $ref: '#/components/schemas/AvroWriteSettings'
          description: Avro format settings.
    ParquetSink:
      description: A copy activity Parquet sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreWriteSettings'
          description: Parquet store settings.
        formatSettings:
          $ref: '#/components/schemas/ParquetWriteSettings'
          description: Parquet format settings.
    BinarySink:
      description: A copy activity Binary sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        storeSettings:
          $ref: '#/components/schemas/StoreWriteSettings'
          description: Binary store settings.
    BlobSink:
      description: A copy activity Azure Blob sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        blobWriterOverwriteFiles:
          type: object
          description: 'Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).'
        blobWriterDateTimeFormat:
          type: object
          description: 'Blob writer date time format. Type: string (or Expression with resultType string).'
        blobWriterAddHeader:
          type: object
          description: 'Blob writer add header. Type: boolean (or Expression with resultType boolean).'
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
        metadata:
          type: array
          description: 'Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects).'
          items:
            $ref: '#/components/schemas/MetadataItem'
          x-ms-identifiers:
            - name
    FileSystemSink:
      description: A copy activity file system sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
    DocumentDbCollectionSink:
      description: A copy activity Document Database Collection sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        nestingSeparator:
          type: object
          description: 'Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).'
        writeBehavior:
          type: object
          description: 'Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert.'
    CosmosDbSqlApiSink:
      description: A copy activity Azure CosmosDB (SQL API) Collection sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          type: object
          description: 'Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert.'
    SqlSink:
      description: A copy activity SQL sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        sqlWriterStoredProcedureName:
          type: object
          description: 'SQL writer stored procedure name. Type: string (or Expression with resultType string).'
        sqlWriterTableType:
          type: object
          description: 'SQL writer table type. Type: string (or Expression with resultType string).'
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: SQL stored procedure parameters.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        storedProcedureTableTypeParameterName:
          type: object
          description: 'The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).'
        tableOption:
          type: object
          description: 'The option to handle sink table, such as autoCreate. For now only ''autoCreate'' value is supported. Type: string (or Expression with resultType string).'
        sqlWriterUseTableLock:
          type: object
          description: 'Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean).'
        writeBehavior:
          type: object
          description: 'Write behavior when copying data into sql. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)'
        upsertSettings:
          description: SQL upsert settings.
          type: object
          $ref: '#/components/schemas/SqlUpsertSettings'
    SqlServerSink:
      description: A copy activity SQL server sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        sqlWriterStoredProcedureName:
          type: object
          description: 'SQL writer stored procedure name. Type: string (or Expression with resultType string).'
        sqlWriterTableType:
          type: object
          description: 'SQL writer table type. Type: string (or Expression with resultType string).'
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: SQL stored procedure parameters.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        storedProcedureTableTypeParameterName:
          type: object
          description: 'The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).'
        tableOption:
          type: object
          description: 'The option to handle sink table, such as autoCreate. For now only ''autoCreate'' value is supported. Type: string (or Expression with resultType string).'
        sqlWriterUseTableLock:
          type: object
          description: 'Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean).'
        writeBehavior:
          type: object
          description: 'Write behavior when copying data into sql server. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)'
        upsertSettings:
          description: SQL upsert settings.
          type: object
          $ref: '#/components/schemas/SqlUpsertSettings'
    AzureSqlSink:
      description: A copy activity Azure SQL sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        sqlWriterStoredProcedureName:
          type: object
          description: 'SQL writer stored procedure name. Type: string (or Expression with resultType string).'
        sqlWriterTableType:
          type: object
          description: 'SQL writer table type. Type: string (or Expression with resultType string).'
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: SQL stored procedure parameters.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        storedProcedureTableTypeParameterName:
          type: object
          description: 'The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).'
        tableOption:
          type: object
          description: 'The option to handle sink table, such as autoCreate. For now only ''autoCreate'' value is supported. Type: string (or Expression with resultType string).'
        sqlWriterUseTableLock:
          type: object
          description: 'Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean).'
        writeBehavior:
          type: object
          description: 'Write behavior when copying data into Azure SQL. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)'
        upsertSettings:
          description: SQL upsert settings.
          type: object
          $ref: '#/components/schemas/SqlUpsertSettings'
    SqlMISink:
      description: A copy activity Azure SQL Managed Instance sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        sqlWriterStoredProcedureName:
          type: object
          description: 'SQL writer stored procedure name. Type: string (or Expression with resultType string).'
        sqlWriterTableType:
          type: object
          description: 'SQL writer table type. Type: string (or Expression with resultType string).'
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: SQL stored procedure parameters.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StoredProcedureParameter'
        storedProcedureTableTypeParameterName:
          type: object
          description: 'The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).'
        tableOption:
          type: object
          description: 'The option to handle sink table, such as autoCreate. For now only ''autoCreate'' value is supported. Type: string (or Expression with resultType string).'
        sqlWriterUseTableLock:
          type: object
          description: 'Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean).'
        writeBehavior:
          type: object
          description: 'White behavior when copying data into azure SQL MI. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)'
        upsertSettings:
          description: SQL upsert settings.
          type: object
          $ref: '#/components/schemas/SqlUpsertSettings'
    SqlDWSink:
      description: A copy activity SQL Data Warehouse sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
        allowPolyBase:
          type: object
          description: 'Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).'
        polyBaseSettings:
          description: Specifies PolyBase-related settings when allowPolyBase is true.
          $ref: '#/components/schemas/PolybaseSettings'
        allowCopyCommand:
          type: object
          description: 'Indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean).'
        copyCommandSettings:
          description: Specifies Copy Command related settings when allowCopyCommand is true.
          $ref: '#/components/schemas/DWCopyCommandSettings'
        tableOption:
          type: object
          description: 'The option to handle sink table, such as autoCreate. For now only ''autoCreate'' value is supported. Type: string (or Expression with resultType string).'
        sqlWriterUseTableLock:
          type: object
          description: 'Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean).'
        writeBehavior:
          type: object
          description: 'Write behavior when copying data into azure SQL DW. Type: SqlDWWriteBehaviorEnum (or Expression with resultType SqlDWWriteBehaviorEnum)'
        upsertSettings:
          description: SQL DW upsert settings.
          type: object
          $ref: '#/components/schemas/SqlDWUpsertSettings'
    PolybaseSettings:
      description: PolyBase settings.
      type: object
      properties:
        rejectType:
          $ref: '#/components/schemas/PolybaseSettingsRejectType'
          description: Reject type.
        rejectValue:
          type: object
          description: 'Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.'
        rejectSampleValue:
          type: object
          description: 'Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.'
        useTypeDefault:
          type: object
          description: 'Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).'
      additionalProperties:
        type: object
    PolybaseSettingsRejectType:
      description: Indicates whether the RejectValue property is specified as a literal value or a percentage.
      type: string
      enum:
        - value
        - percentage
      x-ms-enum:
        name: PolybaseSettingsRejectType
        modelAsString: true
    DWCopyCommandSettings:
      description: DW Copy Command settings.
      type: object
      properties:
        defaultValues:
          type: array
          description: 'Specifies the default values for each target column in SQL DW. The default values in the property overwrite the DEFAULT constraint set in the DB, and identity column cannot have a default value. Type: array of objects (or Expression with resultType array of objects).'
          items:
            $ref: '#/components/schemas/DWCopyCommandDefaultValue'
          x-ms-identifiers:
            - columnName
        additionalOptions:
          type: object
          description: 'Additional options directly passed to SQL DW in Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalOptions": { "MAXERRORS": "1000", "DATEFORMAT": "''ymd''" }'
          additionalProperties:
            type: string
    DWCopyCommandDefaultValue:
      description: Default value.
      type: object
      properties:
        columnName:
          type: object
          description: 'Column name. Type: object (or Expression with resultType string).'
        defaultValue:
          type: object
          description: 'The default value of the column. Type: object (or Expression with resultType string).'
    SqlUpsertSettings:
      description: Sql upsert option settings
      type: object
      properties:
        useTempDB:
          type: object
          description: 'Specifies whether to use temp db for upsert interim table. Type: boolean (or Expression with resultType boolean).'
        interimSchemaName:
          type: object
          description: 'Schema name for interim table. Type: string (or Expression with resultType string).'
        keys:
          type: object
          description: 'Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings).'
    SqlDWUpsertSettings:
      description: Sql DW upsert option settings
      type: object
      properties:
        interimSchemaName:
          type: object
          description: 'Schema name for interim table. Type: string (or Expression with resultType string).'
        keys:
          type: object
          description: 'Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings).'
    SqlWriteBehaviorEnum:
      description: Specify the write behavior when copying data into sql.
      type: string
      enum:
        - Insert
        - Upsert
        - StoredProcedure
      x-ms-enum:
        name: SqlWriteBehaviorEnum
        modelAsString: true
    SqlDWWriteBehaviorEnum:
      description: Specify the write behavior when copying data into sql dw.
      type: string
      enum:
        - Insert
        - Upsert
      x-ms-enum:
        name: SqlDWWriteBehaviorEnum
        modelAsString: true
    SnowflakeSink:
      description: A copy activity snowflake sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
        importSettings:
          $ref: '#/components/schemas/SnowflakeImportCopyCommand'
          description: Snowflake import settings.
    ImportSettings:
      description: Import command settings.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: The import setting type.
      additionalProperties:
        type: object
      required:
        - type
    SnowflakeImportCopyCommand:
      description: Snowflake import command settings.
      type: object
      allOf:
        - $ref: '#/components/schemas/ImportSettings'
      properties:
        additionalCopyOptions:
          type: object
          description: 'Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalCopyOptions": { "DATE_FORMAT": "MM/DD/YYYY", "TIME_FORMAT": "''HH24:MI:SS.FF''" }'
          additionalProperties:
            type: object
        additionalFormatOptions:
          type: object
          description: 'Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalFormatOptions": { "FORCE": "TRUE", "LOAD_UNCERTAIN_FILES": "''FALSE''" }'
          additionalProperties:
            type: object
    LogStorageSettings:
      description: (Deprecated. Please use LogSettings) Log storage settings.
      type: object
      properties:
        linkedServiceName:
          description: Log storage linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        path:
          type: object
          description: 'The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).'
        logLevel:
          type: object
          description: 'Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).'
        enableReliableLogging:
          type: object
          description: 'Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).'
      additionalProperties:
        type: object
      required:
        - linkedServiceName
    LogSettings:
      description: Log settings.
      type: object
      properties:
        enableCopyActivityLog:
          type: object
          description: 'Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean).'
        copyActivityLogSettings:
          description: Specifies settings for copy activity log.
          $ref: '#/components/schemas/CopyActivityLogSettings'
        logLocationSettings:
          description: Log location settings customer needs to provide when enabling log.
          $ref: '#/components/schemas/LogLocationSettings'
      required:
        - logLocationSettings
    LogLocationSettings:
      description: Log location settings.
      type: object
      properties:
        linkedServiceName:
          description: Log storage linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        path:
          type: object
          description: 'The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).'
      required:
        - linkedServiceName
    CopyActivityLogSettings:
      description: Settings for copy activity log.
      type: object
      properties:
        logLevel:
          type: object
          description: 'Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).'
        enableReliableLogging:
          type: object
          description: 'Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).'
    StagingSettings:
      description: Staging settings.
      type: object
      properties:
        linkedServiceName:
          description: Staging linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        path:
          type: object
          description: 'The path to storage for storing the interim data. Type: string (or Expression with resultType string).'
        enableCompression:
          type: object
          description: 'Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).'
      additionalProperties:
        type: object
      required:
        - linkedServiceName
    RedirectIncompatibleRowSettings:
      description: Redirect incompatible row settings
      type: object
      properties:
        linkedServiceName:
          type: object
          description: 'Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).'
        path:
          type: object
          description: 'The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).'
      additionalProperties:
        type: object
      required:
        - linkedServiceName
    SkipErrorFile:
      description: Skip error file.
      type: object
      properties:
        fileMissing:
          type: object
          description: 'Skip if file is deleted by other client during copy. Default is true. Type: boolean (or Expression with resultType boolean).'
        dataInconsistency:
          type: object
          description: 'Skip if source/sink file changed by other concurrent write. Default is false. Type: boolean (or Expression with resultType boolean).'
    AdditionalColumns:
      description: Specify the column name and value of additional columns.
      type: object
      properties:
        name:
          type: object
          description: 'Additional column name. Type: string (or Expression with resultType string).'
        value:
          type: object
          description: 'Additional column value. Type: string (or Expression with resultType string).'
    OracleSink:
      description: A copy activity Oracle sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'SQL pre-copy script. Type: string (or Expression with resultType string).'
    AzureDataLakeStoreSink:
      description: A copy activity Azure Data Lake Store sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
        enableAdlsSingleFileParallel:
          description: Single File Parallel.
          type: object
    AzureBlobFSSink:
      description: A copy activity Azure Data Lake Storage Gen2 sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
        metadata:
          type: array
          description: 'Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects).'
          items:
            $ref: '#/components/schemas/MetadataItem'
          x-ms-identifiers:
            - name
    AzureSearchIndexSink:
      description: A copy activity Azure Search Index sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          description: Specify the write behavior when upserting documents into Azure Search Index.
          type: string
          enum:
            - Merge
            - Upload
          x-ms-enum:
            name: AzureSearchIndexWriteBehaviorType
            modelAsString: true
    OdbcSink:
      description: A copy activity ODBC sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'A query to execute before starting the copy. Type: string (or Expression with resultType string).'
    InformixSink:
      description: A copy activity Informix sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'A query to execute before starting the copy. Type: string (or Expression with resultType string).'
    MicrosoftAccessSink:
      description: A copy activity Microsoft Access sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        preCopyScript:
          type: object
          description: 'A query to execute before starting the copy. Type: string (or Expression with resultType string).'
    DynamicsSinkWriteBehavior:
      description: Defines values for DynamicsSinkWriteBehavior.
      type: string
      enum:
        - Upsert
      x-ms-enum:
        name: DynamicsSinkWriteBehavior
        modelAsString: true
    DynamicsSink:
      description: A copy activity Dynamics sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          description: The write behavior for the operation.
          $ref: '#/components/schemas/DynamicsSinkWriteBehavior'
        ignoreNullValues:
          type: object
          description: 'The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).'
        alternateKeyName:
          type: object
          description: 'The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).'
      required:
        - writeBehavior
    DynamicsCrmSink:
      description: A copy activity Dynamics CRM sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          description: The write behavior for the operation.
          $ref: '#/components/schemas/DynamicsSinkWriteBehavior'
        ignoreNullValues:
          type: object
          description: 'The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).'
        alternateKeyName:
          type: object
          description: 'The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).'
      required:
        - writeBehavior
    CommonDataServiceForAppsSink:
      description: A copy activity Common Data Service for Apps sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          description: The write behavior for the operation.
          $ref: '#/components/schemas/DynamicsSinkWriteBehavior'
        ignoreNullValues:
          type: object
          description: 'The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).'
        alternateKeyName:
          type: object
          description: 'The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).'
      required:
        - writeBehavior
    AzureDataExplorerSink:
      description: A copy activity Azure Data Explorer sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        ingestionMappingName:
          type: object
          description: 'A name of a pre-created csv mapping that was defined on the target Kusto table. Type: string.'
        ingestionMappingAsJson:
          type: object
          description: 'An explicit column mapping description provided in a json format. Type: string.'
        flushImmediately:
          type: object
          description: 'If set to true, any aggregation will be skipped. Default is false. Type: boolean.'
    SalesforceSink:
      description: A copy activity Salesforce sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          description: The write behavior for the operation. Default is Insert.
          type: string
          enum:
            - Insert
            - Upsert
          x-ms-enum:
            name: SalesforceSinkWriteBehavior
            modelAsString: true
        externalIdFieldName:
          type: object
          description: 'The name of the external ID field for upsert operation. Default value is ''Id'' column. Type: string (or Expression with resultType string).'
        ignoreNullValues:
          type: object
          description: 'The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).'
    SalesforceServiceCloudSink:
      description: A copy activity Salesforce Service Cloud sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          description: The write behavior for the operation. Default is Insert.
          type: string
          enum:
            - Insert
            - Upsert
          x-ms-enum:
            name: SalesforceSinkWriteBehavior
            modelAsString: true
        externalIdFieldName:
          type: object
          description: 'The name of the external ID field for upsert operation. Default value is ''Id'' column. Type: string (or Expression with resultType string).'
        ignoreNullValues:
          type: object
          description: 'The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).'
    MongoDbAtlasSink:
      description: A copy activity MongoDB Atlas sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          type: object
          description: 'Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).'
    MongoDbV2Sink:
      description: A copy activity MongoDB sink.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          type: object
          description: 'Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).'
    CosmosDbMongoDbApiSink:
      description: A copy activity sink for a CosmosDB (MongoDB API) database.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySink'
      properties:
        writeBehavior:
          type: object
          description: 'Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).'
    CopyTranslator:
      discriminator:
        propertyName: type
      description: A copy activity translator.
      type: object
      properties:
        type:
          type: string
          description: Copy translator type.
      additionalProperties:
        type: object
      required:
        - type
    TabularTranslator:
      description: A copy activity tabular translator.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopyTranslator'
      properties:
        columnMappings:
          type: object
          description: 'Column mappings. Example: "UserId: MyUserId, Group: MyGroup, Name: MyName" Type: string (or Expression with resultType string). This property will be retired. Please use mappings property.'
        schemaMapping:
          type: object
          description: 'The schema mapping to map between tabular data and hierarchical data. Example: {"Column1": "$.Column1", "Column2": "$.Column2.Property1", "Column3": "$.Column2.Property2"}. Type: object (or Expression with resultType object). This property will be retired. Please use mappings property.'
        collectionReference:
          type: object
          description: 'The JSON Path of the Nested Array that is going to do cross-apply. Type: object (or Expression with resultType object).'
        mapComplexValuesToString:
          type: object
          description: 'Whether to map complex (array and object) values to simple strings in json format. Type: boolean (or Expression with resultType boolean).'
        mappings:
          type: object
          description: 'Column mappings with logical types. Tabular->tabular example: [{"source":{"name":"CustomerName","type":"String"},"sink":{"name":"ClientName","type":"String"}},{"source":{"name":"CustomerAddress","type":"String"},"sink":{"name":"ClientAddress","type":"String"}}].  Hierarchical->tabular example: [{"source":{"path":"$.CustomerName","type":"String"},"sink":{"name":"ClientName","type":"String"}},{"source":{"path":"$.CustomerAddress","type":"String"},"sink":{"name":"ClientAddress","type":"String"}}]. Type: object (or Expression with resultType object).'
        typeConversion:
          type: object
          description: 'Whether to enable the advanced type conversion feature in the Copy activity. Type: boolean (or Expression with resultType boolean).'
        typeConversionSettings:
          description: Type conversion settings
          $ref: '#/components/schemas/TypeConversionSettings'
    TypeConversionSettings:
      description: Type conversion settings
      type: object
      properties:
        allowDataTruncation:
          type: object
          description: 'Whether to allow data truncation when converting the data. Type: boolean (or Expression with resultType boolean).'
        treatBooleanAsNumber:
          type: object
          description: 'Whether to treat boolean values as numbers. Type: boolean (or Expression with resultType boolean).'
        dateTimeFormat:
          type: object
          description: 'The format for DateTime values. Type: string (or Expression with resultType string).'
        dateTimeOffsetFormat:
          type: object
          description: 'The format for DateTimeOffset values. Type: string (or Expression with resultType string).'
        timeSpanFormat:
          type: object
          description: 'The format for TimeSpan values. Type: string (or Expression with resultType string).'
        culture:
          type: object
          description: 'The culture used to convert data from/to string. Type: string (or Expression with resultType string).'
    HDInsightHiveActivity:
      description: HDInsight Hive activity type.
      x-ms-discriminator-value: HDInsightHive
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: HDInsight Hive activity properties.
          $ref: '#/components/schemas/HDInsightHiveActivityTypeProperties'
      required:
        - typeProperties
    HDInsightHiveActivityTypeProperties:
      description: HDInsight Hive activity properties.
      properties:
        storageLinkedServices:
          description: Storage linked service references.
          type: array
          items:
            $ref: '#/components/schemas/LinkedServiceReference'
          x-ms-identifiers:
            - referenceName
        arguments:
          description: User specified arguments to HDInsightActivity.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        getDebugInfo:
          $ref: '#/components/schemas/HDInsightActivityDebugInfoOption'
          description: Debug info option.
        scriptPath:
          type: object
          description: 'Script path. Type: string (or Expression with resultType string).'
        scriptLinkedService:
          description: Script linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        defines:
          description: Allows user to specify defines for Hive job request.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        variables:
          description: User specified arguments under hivevar namespace.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        queryTimeout:
          type: integer
          description: Query timeout value (in minutes).  Effective when the HDInsight cluster is with ESP (Enterprise Security Package)
    HDInsightActivityDebugInfoOption:
      description: The HDInsightActivityDebugInfoOption settings to use.
      type: string
      enum:
        - None
        - Always
        - Failure
      x-ms-enum:
        name: HDInsightActivityDebugInfoOption
        modelAsString: true
    HDInsightPigActivity:
      description: HDInsight Pig activity type.
      x-ms-discriminator-value: HDInsightPig
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: HDInsight Pig activity properties.
          $ref: '#/components/schemas/HDInsightPigActivityTypeProperties'
      required:
        - typeProperties
    HDInsightPigActivityTypeProperties:
      description: HDInsight Pig activity properties.
      properties:
        storageLinkedServices:
          description: Storage linked service references.
          type: array
          items:
            $ref: '#/components/schemas/LinkedServiceReference'
          x-ms-identifiers:
            - referenceName
        arguments:
          type: object
          description: 'User specified arguments to HDInsightActivity. Type: array (or Expression with resultType array).'
        getDebugInfo:
          $ref: '#/components/schemas/HDInsightActivityDebugInfoOption'
          description: Debug info option.
        scriptPath:
          type: object
          description: 'Script path. Type: string (or Expression with resultType string).'
        scriptLinkedService:
          description: Script linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        defines:
          description: Allows user to specify defines for Pig job request.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
    HDInsightMapReduceActivity:
      description: HDInsight MapReduce activity type.
      x-ms-discriminator-value: HDInsightMapReduce
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: HDInsight MapReduce activity properties.
          $ref: '#/components/schemas/HDInsightMapReduceActivityTypeProperties'
      required:
        - typeProperties
    HDInsightMapReduceActivityTypeProperties:
      description: HDInsight MapReduce activity properties.
      properties:
        storageLinkedServices:
          description: Storage linked service references.
          type: array
          items:
            $ref: '#/components/schemas/LinkedServiceReference'
          x-ms-identifiers:
            - referenceName
        arguments:
          description: User specified arguments to HDInsightActivity.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        getDebugInfo:
          $ref: '#/components/schemas/HDInsightActivityDebugInfoOption'
          description: Debug info option.
        className:
          type: object
          description: 'Class name. Type: string (or Expression with resultType string).'
        jarFilePath:
          type: object
          description: 'Jar path. Type: string (or Expression with resultType string).'
        jarLinkedService:
          description: Jar linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        jarLibs:
          description: Jar libs.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        defines:
          description: Allows user to specify defines for the MapReduce job request.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
      required:
        - className
        - jarFilePath
    HDInsightStreamingActivity:
      description: HDInsight streaming activity type.
      x-ms-discriminator-value: HDInsightStreaming
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: HDInsight streaming activity properties.
          $ref: '#/components/schemas/HDInsightStreamingActivityTypeProperties'
      required:
        - typeProperties
    HDInsightStreamingActivityTypeProperties:
      description: HDInsight streaming activity properties.
      properties:
        storageLinkedServices:
          description: Storage linked service references.
          type: array
          items:
            $ref: '#/components/schemas/LinkedServiceReference'
          x-ms-identifiers:
            - referenceName
        arguments:
          description: User specified arguments to HDInsightActivity.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        getDebugInfo:
          $ref: '#/components/schemas/HDInsightActivityDebugInfoOption'
          description: Debug info option.
        mapper:
          type: object
          description: 'Mapper executable name. Type: string (or Expression with resultType string).'
        reducer:
          type: object
          description: 'Reducer executable name. Type: string (or Expression with resultType string).'
        input:
          type: object
          description: 'Input blob path. Type: string (or Expression with resultType string).'
        output:
          type: object
          description: 'Output blob path. Type: string (or Expression with resultType string).'
        filePaths:
          description: Paths to streaming job files. Can be directories.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        fileLinkedService:
          description: Linked service reference where the files are located.
          $ref: '#/components/schemas/LinkedServiceReference'
        combiner:
          type: object
          description: 'Combiner executable name. Type: string (or Expression with resultType string).'
        commandEnvironment:
          description: Command line environment values.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        defines:
          description: Allows user to specify defines for streaming job request.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
      required:
        - mapper
        - reducer
        - input
        - output
        - filePaths
    HDInsightSparkActivity:
      description: HDInsight Spark activity.
      x-ms-discriminator-value: HDInsightSpark
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: HDInsight spark activity properties.
          $ref: '#/components/schemas/HDInsightSparkActivityTypeProperties'
      required:
        - typeProperties
    HDInsightSparkActivityTypeProperties:
      description: HDInsight spark activity properties.
      properties:
        rootPath:
          type: object
          description: 'The root path in ''sparkJobLinkedService'' for all the job’s files. Type: string (or Expression with resultType string).'
        entryFilePath:
          type: object
          description: 'The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).'
        arguments:
          description: The user-specified arguments to HDInsightSparkActivity.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        getDebugInfo:
          $ref: '#/components/schemas/HDInsightActivityDebugInfoOption'
          description: Debug info option.
        sparkJobLinkedService:
          description: The storage linked service for uploading the entry file and dependencies, and for receiving logs.
          $ref: '#/components/schemas/LinkedServiceReference'
        className:
          description: The application's Java/Spark main class.
          type: string
        proxyUser:
          type: object
          description: 'The user to impersonate that will execute the job. Type: string (or Expression with resultType string).'
        sparkConfig:
          description: Spark configuration property.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
      required:
        - rootPath
        - entryFilePath
    ExecuteSSISPackageActivity:
      description: Execute SSIS package activity.
      x-ms-discriminator-value: ExecuteSSISPackage
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Execute SSIS package activity properties.
          $ref: '#/components/schemas/ExecuteSSISPackageActivityTypeProperties'
      required:
        - typeProperties
    ExecuteSSISPackageActivityTypeProperties:
      description: Execute SSIS package activity properties.
      properties:
        packageLocation:
          description: SSIS package location.
          $ref: '#/components/schemas/SSISPackageLocation'
        runtime:
          description: 'Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).'
          type: object
        loggingLevel:
          description: 'The logging level of SSIS package execution. Type: string (or Expression with resultType string).'
          type: object
        environmentPath:
          description: 'The environment path to execute the SSIS package. Type: string (or Expression with resultType string).'
          type: object
        executionCredential:
          description: The package execution credential.
          $ref: '#/components/schemas/SSISExecutionCredential'
        connectVia:
          description: The integration runtime reference.
          $ref: '#/components/schemas/IntegrationRuntimeReference'
        projectParameters:
          description: The project level parameters to execute the SSIS package.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SSISExecutionParameter'
        packageParameters:
          description: The package level parameters to execute the SSIS package.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SSISExecutionParameter'
        projectConnectionManagers:
          description: The project level connection managers to execute the SSIS package.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SSISConnectionManager'
        packageConnectionManagers:
          description: The package level connection managers to execute the SSIS package.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SSISConnectionManager'
        propertyOverrides:
          description: The property overrides to execute the SSIS package.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SSISPropertyOverride'
        logLocation:
          description: SSIS package execution log location.
          $ref: '#/components/schemas/SSISLogLocation'
      required:
        - packageLocation
        - connectVia
    SSISPackageLocation:
      description: SSIS package location.
      type: object
      properties:
        packagePath:
          description: 'The SSIS package path. Type: string (or Expression with resultType string).'
          type: object
        type:
          description: The type of SSIS package location.
          type: string
          enum:
            - SSISDB
            - File
            - InlinePackage
            - PackageStore
          x-ms-enum:
            name: SsisPackageLocationType
            modelAsString: true
        typeProperties:
          x-ms-client-flatten: true
          description: SSIS package location properties.
          $ref: '#/components/schemas/SSISPackageLocationTypeProperties'
    SSISPackageLocationTypeProperties:
      description: SSIS package location properties.
      type: object
      properties:
        packagePassword:
          $ref: '#/components/schemas/SecretBase'
          description: Password of the package.
        accessCredential:
          description: The package access credential.
          $ref: '#/components/schemas/SSISAccessCredential'
        configurationPath:
          description: 'The configuration file of the package execution. Type: string (or Expression with resultType string).'
          type: object
        configurationAccessCredential:
          description: The configuration file access credential.
          $ref: '#/components/schemas/SSISAccessCredential'
        packageName:
          description: The package name.
          type: string
        packageContent:
          description: 'The embedded package content. Type: string (or Expression with resultType string).'
          type: object
        packageLastModifiedDate:
          description: The embedded package last modified date.
          type: string
        childPackages:
          description: The embedded child package list.
          type: array
          items:
            $ref: '#/components/schemas/SSISChildPackage'
          x-ms-identifiers:
            - packagePath
            - packageName
    SSISConnectionManager:
      description: SSIS Connection Manager.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SSISExecutionParameter'
    SSISExecutionParameter:
      description: SSIS execution parameter.
      type: object
      properties:
        value:
          type: object
          description: 'SSIS package execution parameter value. Type: string (or Expression with resultType string).'
      required:
        - value
    SSISPropertyOverride:
      description: SSIS property override.
      type: object
      properties:
        value:
          type: object
          description: 'SSIS package property override value. Type: string (or Expression with resultType string).'
        isSensitive:
          type: boolean
          description: Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true
      required:
        - value
    SSISExecutionCredential:
      description: SSIS package execution credential.
      type: object
      properties:
        domain:
          type: object
          description: Domain for windows authentication.
        userName:
          type: object
          description: UseName for windows authentication.
        password:
          $ref: '#/components/schemas/SecureString'
          description: Password for windows authentication.
      required:
        - domain
        - userName
        - password
    SSISAccessCredential:
      description: SSIS access credential.
      type: object
      properties:
        domain:
          type: object
          description: Domain for windows authentication.
        userName:
          type: object
          description: UseName for windows authentication.
        password:
          $ref: '#/components/schemas/SecretBase'
          description: Password for windows authentication.
      required:
        - domain
        - userName
        - password
    SSISChildPackage:
      description: SSIS embedded child package.
      type: object
      properties:
        packagePath:
          type: object
          description: 'Path for embedded child package. Type: string (or Expression with resultType string).'
        packageName:
          type: string
          description: Name for embedded child package.
        packageContent:
          type: object
          description: 'Content for embedded child package. Type: string (or Expression with resultType string).'
        packageLastModifiedDate:
          type: string
          description: Last modified date for embedded child package.
      required:
        - packagePath
        - packageContent
    SSISLogLocation:
      description: SSIS package execution log location
      type: object
      properties:
        logPath:
          description: 'The SSIS package execution log path. Type: string (or Expression with resultType string).'
          type: object
        type:
          description: The type of SSIS log location.
          type: string
          enum:
            - File
          x-ms-enum:
            name: SsisLogLocationType
            modelAsString: true
        typeProperties:
          x-ms-client-flatten: true
          description: SSIS package execution log location properties.
          $ref: '#/components/schemas/SSISLogLocationTypeProperties'
      required:
        - logPath
        - type
        - typeProperties
    SSISLogLocationTypeProperties:
      description: SSIS package execution log location properties.
      type: object
      properties:
        accessCredential:
          description: The package execution log access credential.
          $ref: '#/components/schemas/SSISAccessCredential'
        logRefreshInterval:
          type: object
          description: 'Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
    CustomActivity:
      description: Custom activity type.
      x-ms-discriminator-value: Custom
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Custom activity properties.
          $ref: '#/components/schemas/CustomActivityTypeProperties'
      required:
        - typeProperties
    CustomActivityTypeProperties:
      description: Custom activity properties.
      properties:
        command:
          type: object
          description: 'Command for custom activity Type: string (or Expression with resultType string).'
        resourceLinkedService:
          description: Resource linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        folderPath:
          type: object
          description: 'Folder path for resource files Type: string (or Expression with resultType string).'
        referenceObjects:
          description: Reference objects
          $ref: '#/components/schemas/CustomActivityReferenceObject'
        extendedProperties:
          description: User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        retentionTimeInDays:
          type: object
          description: 'The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double).'
        autoUserSpecification:
          type: object
          description: 'Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double).'
      required:
        - command
    CustomActivityReferenceObject:
      description: Reference objects for custom activity
      properties:
        linkedServices:
          description: Linked service references.
          type: array
          items:
            $ref: '#/components/schemas/LinkedServiceReference'
          x-ms-identifiers:
            - referenceName
        datasets:
          description: Dataset references.
          type: array
          items:
            $ref: '#/components/schemas/DatasetReference'
          x-ms-identifiers:
            - referenceName
    SqlServerStoredProcedureActivity:
      description: SQL stored procedure activity type.
      x-ms-discriminator-value: SqlServerStoredProcedure
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: SQL stored procedure activity properties.
          $ref: '#/components/schemas/SqlServerStoredProcedureActivityTypeProperties'
      required:
        - typeProperties
        - linkedServiceName
    SqlServerStoredProcedureActivityTypeProperties:
      description: SQL stored procedure activity properties.
      properties:
        storedProcedureName:
          type: object
          description: 'Stored procedure name. Type: string (or Expression with resultType string).'
        storedProcedureParameters:
          description: 'Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".'
          type: object
      required:
        - storedProcedureName
    ExecutePipelineActivity:
      x-ms-discriminator-value: ExecutePipeline
      description: Execute pipeline activity.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        policy:
          description: Execute pipeline activity policy.
          $ref: '#/components/schemas/ExecutePipelineActivityPolicy'
        typeProperties:
          description: Execute pipeline activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ExecutePipelineActivityTypeProperties'
      required:
        - typeProperties
    ExecutePipelineActivityPolicy:
      description: Execution policy for an execute pipeline activity.
      type: object
      properties:
        secureInput:
          type: boolean
          description: When set to true, Input from activity is considered as secure and will not be logged to monitoring.
      additionalProperties:
        type: object
    ExecutePipelineActivityTypeProperties:
      description: Execute pipeline activity properties.
      properties:
        pipeline:
          description: Pipeline reference.
          $ref: '#/components/schemas/PipelineReference'
        parameters:
          description: Pipeline parameters.
          $ref: '#/components/schemas/ParameterValueSpecification'
        waitOnCompletion:
          description: Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
          type: boolean
      required:
        - pipeline
    DeleteActivity:
      x-ms-discriminator-value: Delete
      description: Delete activity.
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          description: Delete activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DeleteActivityTypeProperties'
      required:
        - typeProperties
    DeleteActivityTypeProperties:
      description: Delete activity properties.
      properties:
        recursive:
          type: object
          description: 'If true, files or sub-folders under current folder path will be deleted recursively. Default is false. Type: boolean (or Expression with resultType boolean).'
        maxConcurrentConnections:
          type: integer
          minimum: 1
          description: The max concurrent connections to connect data source at the same time.
        enableLogging:
          type: object
          description: 'Whether to record detailed logs of delete-activity execution. Default value is false. Type: boolean (or Expression with resultType boolean).'
        logStorageSettings:
          description: Log storage settings customer need to provide when enableLogging is true.
          $ref: '#/components/schemas/LogStorageSettings'
        dataset:
          description: Delete activity dataset reference.
          $ref: '#/components/schemas/DatasetReference'
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: Delete activity store settings.
      required:
        - dataset
    AzureDataExplorerCommandActivity:
      x-ms-discriminator-value: AzureDataExplorerCommand
      description: Azure Data Explorer command activity.
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          description: Azure Data Explorer command activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDataExplorerCommandActivityTypeProperties'
      required:
        - typeProperties
    AzureDataExplorerCommandActivityTypeProperties:
      description: Azure Data Explorer command activity properties.
      properties:
        command:
          type: object
          description: 'A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string).'
        commandTimeout:
          type: object
          description: 'Control command timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)'
      required:
        - command
    LookupActivity:
      x-ms-discriminator-value: Lookup
      description: Lookup activity.
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          description: Lookup activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LookupActivityTypeProperties'
      required:
        - typeProperties
    LookupActivityTypeProperties:
      description: Lookup activity properties.
      properties:
        source:
          description: Dataset-specific source properties, same as copy activity source.
          $ref: '#/components/schemas/CopySource'
        dataset:
          description: Lookup activity dataset reference.
          $ref: '#/components/schemas/DatasetReference'
        firstRowOnly:
          type: object
          description: 'Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).'
      required:
        - source
        - dataset
    WebActivityMethod:
      description: The list of HTTP methods supported by a WebActivity.
      type: string
      enum:
        - GET
        - POST
        - PUT
        - DELETE
      x-ms-enum:
        name: WebActivityMethod
        modelAsString: true
    WebActivity:
      x-ms-discriminator-value: WebActivity
      description: Web activity.
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          description: Web activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WebActivityTypeProperties'
      required:
        - typeProperties
    WebActivityAuthentication:
      description: Web activity authentication properties.
      properties:
        type:
          description: Web activity authentication (Basic/ClientCertificate/MSI/ServicePrincipal)
          type: string
        pfx:
          description: Base64-encoded contents of a PFX file or Certificate when used for ServicePrincipal
          $ref: '#/components/schemas/SecretBase'
        username:
          description: 'Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string).'
          type: object
        password:
          description: Password for the PFX file or basic authentication / Secret when used for ServicePrincipal
          $ref: '#/components/schemas/SecretBase'
        resource:
          description: 'Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string).'
          type: object
        userTenant:
          description: 'TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string).'
          type: object
        credential:
          $ref: '#/components/schemas/CredentialReference'
          description: The credential reference containing authentication information.
    WebActivityTypeProperties:
      description: Web activity type properties.
      properties:
        method:
          description: Rest API method for target endpoint.
          $ref: '#/components/schemas/WebActivityMethod'
        url:
          type: object
          description: 'Web activity target endpoint and path. Type: string (or Expression with resultType string).'
        headers:
          type: object
          description: 'Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).'
        body:
          type: object
          description: 'Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).'
        authentication:
          description: Authentication method used for calling the endpoint.
          $ref: '#/components/schemas/WebActivityAuthentication'
        disableCertValidation:
          type: boolean
          description: When set to true, Certificate validation will be disabled.
        datasets:
          type: array
          description: List of datasets passed to web endpoint.
          items:
            $ref: '#/components/schemas/DatasetReference'
          x-ms-identifiers:
            - referenceName
        linkedServices:
          type: array
          description: List of linked services passed to web endpoint.
          items:
            $ref: '#/components/schemas/LinkedServiceReference'
          x-ms-identifiers:
            - referenceName
        connectVia:
          description: The integration runtime reference.
          $ref: '#/components/schemas/IntegrationRuntimeReference'
      required:
        - method
        - url
    GetMetadataActivity:
      x-ms-discriminator-value: GetMetadata
      description: Activity to get metadata of dataset
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          description: GetMetadata activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GetMetadataActivityTypeProperties'
      required:
        - typeProperties
    GetMetadataActivityTypeProperties:
      description: GetMetadata activity properties.
      properties:
        dataset:
          description: GetMetadata activity dataset reference.
          $ref: '#/components/schemas/DatasetReference'
        fieldList:
          description: Fields of metadata to get from dataset.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        storeSettings:
          $ref: '#/components/schemas/StoreReadSettings'
          description: GetMetadata activity store settings.
        formatSettings:
          $ref: '#/components/schemas/FormatReadSettings'
          description: GetMetadata activity format settings.
      required:
        - dataset
    IfConditionActivity:
      x-ms-discriminator-value: IfCondition
      description: This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: IfCondition activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IfConditionActivityTypeProperties'
      required:
        - typeProperties
    IfConditionActivityTypeProperties:
      description: IfCondition activity properties.
      properties:
        expression:
          description: An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.
          $ref: '#/components/schemas/Expression'
        ifTrueActivities:
          type: array
          description: List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
          items:
            $ref: '#/components/schemas/Activity'
          x-ms-identifiers:
            - name
        ifFalseActivities:
          type: array
          description: List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
          items:
            $ref: '#/components/schemas/Activity'
          x-ms-identifiers:
            - name
      required:
        - expression
    SwitchActivity:
      x-ms-discriminator-value: Switch
      description: This activity evaluates an expression and executes activities under the cases property that correspond to the expression evaluation expected in the equals property.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Switch activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SwitchActivityTypeProperties'
      required:
        - typeProperties
    SwitchActivityTypeProperties:
      description: Switch activity properties.
      properties:
        'on':
          description: An expression that would evaluate to a string or integer. This is used to determine the block of activities in cases that will be executed.
          $ref: '#/components/schemas/Expression'
        cases:
          type: array
          description: List of cases that correspond to expected values of the 'on' property. This is an optional property and if not provided, the activity will execute activities provided in defaultActivities.
          items:
            x-ms-client-flatten: true
            $ref: '#/components/schemas/SwitchCase'
          x-ms-identifiers:
            - value
        defaultActivities:
          type: array
          description: List of activities to execute if no case condition is satisfied. This is an optional property and if not provided, the activity will exit without any action.
          items:
            $ref: '#/components/schemas/Activity'
          x-ms-identifiers:
            - name
      required:
        - 'on'
    SwitchCase:
      description: Switch cases with have a value and corresponding activities.
      properties:
        value:
          description: Expected value that satisfies the expression result of the 'on' property.
          type: string
        activities:
          type: array
          description: List of activities to execute for satisfied case condition.
          items:
            $ref: '#/components/schemas/Activity'
          x-ms-identifiers:
            - name
    ForEachActivity:
      x-ms-discriminator-value: ForEach
      description: This activity is used for iterating over a collection and execute given activities.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: ForEach activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ForEachActivityTypeProperties'
      required:
        - typeProperties
    ForEachActivityTypeProperties:
      description: ForEach activity properties.
      properties:
        isSequential:
          description: Should the loop be executed in sequence or in parallel (max 50)
          type: boolean
        batchCount:
          description: Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
          type: integer
          maximum: 50
        items:
          description: Collection to iterate.
          $ref: '#/components/schemas/Expression'
        activities:
          type: array
          description: List of activities to execute .
          items:
            $ref: '#/components/schemas/Activity'
          x-ms-identifiers:
            - name
      required:
        - items
        - activities
    AzureMLBatchExecutionActivity:
      description: Azure ML Batch Execution activity.
      x-ms-discriminator-value: AzureMLBatchExecution
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Azure ML Batch Execution activity properties.
          $ref: '#/components/schemas/AzureMLBatchExecutionActivityTypeProperties'
      required:
        - typeProperties
    AzureMLBatchExecutionActivityTypeProperties:
      description: Azure ML Batch Execution activity properties.
      properties:
        globalParameters:
          description: Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        webServiceOutputs:
          description: Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AzureMLWebServiceFile'
        webServiceInputs:
          description: Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AzureMLWebServiceFile'
    AzureMLWebServiceFile:
      description: Azure ML WebService Input/Output file
      type: object
      properties:
        filePath:
          type: object
          description: 'The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string).'
        linkedServiceName:
          description: Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.
          $ref: '#/components/schemas/LinkedServiceReference'
      required:
        - linkedServiceName
        - filePath
    AzureMLUpdateResourceActivity:
      description: Azure ML Update Resource management activity.
      x-ms-discriminator-value: AzureMLUpdateResource
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Azure ML Update Resource management activity properties.
          $ref: '#/components/schemas/AzureMLUpdateResourceActivityTypeProperties'
      required:
        - typeProperties
    AzureMLUpdateResourceActivityTypeProperties:
      description: Azure ML Update Resource activity properties.
      properties:
        trainedModelName:
          type: object
          description: 'Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).'
        trainedModelLinkedServiceName:
          description: Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.
          $ref: '#/components/schemas/LinkedServiceReference'
        trainedModelFilePath:
          type: object
          description: 'The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).'
      required:
        - trainedModelName
        - trainedModelLinkedServiceName
        - trainedModelFilePath
    AzureMLExecutePipelineActivity:
      description: Azure ML Execute Pipeline activity.
      x-ms-discriminator-value: AzureMLExecutePipeline
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Azure ML Execute Pipeline activity properties.
          $ref: '#/components/schemas/AzureMLExecutePipelineActivityTypeProperties'
      required:
        - typeProperties
    AzureMLExecutePipelineActivityTypeProperties:
      description: Azure ML Execute Pipeline activity properties.
      properties:
        mlPipelineId:
          description: 'ID of the published Azure ML pipeline. Type: string (or Expression with resultType string).'
          type: object
        mlPipelineEndpointId:
          description: 'ID of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).'
          type: object
        version:
          description: 'Version of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).'
          type: object
        experimentName:
          description: 'Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with resultType string).'
          type: object
        mlPipelineParameters:
          description: 'Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).'
          type: object
        dataPathAssignments:
          description: 'Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).'
          type: object
        mlParentRunId:
          description: 'The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType string).'
          type: object
        continueOnStepFailure:
          description: 'Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression with resultType boolean).'
          type: object
    AzureMLPipelineParameters:
      description: Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request.
      type: object
      additionalProperties:
        type: object
        description: 'Type: string (or Expression with resultType string).'
    AzureDataPathAssignments:
      description: Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request.
      type: object
      additionalProperties:
        type: object
        description: 'Type: string (or Expression with resultType string).'
    DataLakeAnalyticsUSQLActivity:
      description: Data Lake Analytics U-SQL activity.
      x-ms-discriminator-value: DataLakeAnalyticsU-SQL
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Data Lake Analytics U-SQL activity properties.
          $ref: '#/components/schemas/DataLakeAnalyticsUSQLActivityTypeProperties'
      required:
        - typeProperties
    DataLakeAnalyticsUSQLActivityTypeProperties:
      description: DataLakeAnalyticsU-SQL activity properties.
      properties:
        scriptPath:
          type: object
          description: 'Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).'
        scriptLinkedService:
          description: Script linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        degreeOfParallelism:
          type: object
          description: 'The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.'
        priority:
          type: object
          description: 'Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.'
        parameters:
          description: Parameters for U-SQL job request.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        runtimeVersion:
          type: object
          description: 'Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).'
        compilationMode:
          type: object
          description: 'Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).'
      required:
        - scriptPath
        - scriptLinkedService
    WaitActivity:
      x-ms-discriminator-value: Wait
      description: This activity suspends pipeline execution for the specified interval.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Wait activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WaitActivityTypeProperties'
      required:
        - typeProperties
    WaitActivityTypeProperties:
      description: Wait activity properties.
      properties:
        waitTimeInSeconds:
          description: Duration in seconds.
          type: object
      required:
        - waitTimeInSeconds
    FailActivity:
      x-ms-discriminator-value: Fail
      type: object
      description: This activity will fail within its own scope and output a custom error message and error code. The error message and code can provided either as a string literal or as an expression that can be evaluated to a string at runtime. The activity scope can be the whole pipeline or a control activity (e.g. foreach, switch, until), if the fail activity is contained in it.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Fail activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FailActivityTypeProperties'
      required:
        - typeProperties
    FailActivityTypeProperties:
      description: Fail activity properties.
      type: object
      properties:
        message:
          description: 'The error message that surfaced in the Fail activity. It can be dynamic content that''s evaluated to a non empty/blank string at runtime. Type: string (or Expression with resultType string).'
          type: object
        errorCode:
          description: 'The error code that categorizes the error type of the Fail activity. It can be dynamic content that''s evaluated to a non empty/blank string at runtime. Type: string (or Expression with resultType string).'
          type: object
      required:
        - message
        - errorCode
    UntilActivity:
      x-ms-discriminator-value: Until
      description: This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Until activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UntilActivityTypeProperties'
      required:
        - typeProperties
    UntilActivityTypeProperties:
      description: Until activity properties.
      properties:
        expression:
          description: An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true
          $ref: '#/components/schemas/Expression'
        timeout:
          type: object
          description: 'Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        activities:
          type: array
          description: List of activities to execute.
          items:
            $ref: '#/components/schemas/Activity'
          x-ms-identifiers:
            - name
      required:
        - expression
        - activities
    ValidationActivity:
      x-ms-discriminator-value: Validation
      description: This activity verifies that an external resource exists.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Validation activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ValidationActivityTypeProperties'
      required:
        - typeProperties
    ValidationActivityTypeProperties:
      description: Validation activity properties.
      properties:
        timeout:
          type: object
          description: 'Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        sleep:
          type: object
          description: 'A delay in seconds between validation attempts. If no value is specified, 10 seconds will be used as the default. Type: integer (or Expression with resultType integer).'
        minimumSize:
          type: object
          description: 'Can be used if dataset points to a file. The file must be greater than or equal in size to the value specified. Type: integer (or Expression with resultType integer).'
        childItems:
          type: object
          description: 'Can be used if dataset points to a folder. If set to true, the folder must have at least one file. If set to false, the folder must be empty. Type: boolean (or Expression with resultType boolean).'
        dataset:
          description: Validation activity dataset reference.
          $ref: '#/components/schemas/DatasetReference'
      required:
        - dataset
    FilterActivity:
      x-ms-discriminator-value: Filter
      description: Filter and return results from input array based on the conditions.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Filter activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FilterActivityTypeProperties'
      required:
        - typeProperties
    FilterActivityTypeProperties:
      description: Filter activity properties.
      properties:
        items:
          description: Input array on which filter should be applied.
          $ref: '#/components/schemas/Expression'
        condition:
          description: Condition to be used for filtering the input.
          $ref: '#/components/schemas/Expression'
      required:
        - condition
        - items
    DatabricksNotebookActivity:
      description: DatabricksNotebook activity.
      x-ms-discriminator-value: DatabricksNotebook
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Databricks Notebook activity properties.
          $ref: '#/components/schemas/DatabricksNotebookActivityTypeProperties'
      required:
        - typeProperties
    DatabricksNotebookActivityTypeProperties:
      description: Databricks Notebook activity properties.
      properties:
        notebookPath:
          type: object
          description: 'The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).'
        baseParameters:
          description: Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
          type: object
          additionalProperties:
            type: object
            description: 'Type: string (or Expression with resultType string).'
        libraries:
          description: A list of libraries to be installed on the cluster that will execute the job.
          type: array
          items:
            type: object
            description: Databricks library definition.
            additionalProperties:
              type: object
          x-ms-identifiers: []
      required:
        - notebookPath
    DatabricksSparkJarActivity:
      description: DatabricksSparkJar activity.
      x-ms-discriminator-value: DatabricksSparkJar
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Databricks SparkJar activity properties.
          $ref: '#/components/schemas/DatabricksSparkJarActivityTypeProperties'
      required:
        - typeProperties
    DatabricksSparkJarActivityTypeProperties:
      description: Databricks SparkJar activity properties.
      properties:
        mainClassName:
          type: object
          description: 'The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string).'
        parameters:
          description: Parameters that will be passed to the main method.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        libraries:
          description: A list of libraries to be installed on the cluster that will execute the job.
          type: array
          items:
            type: object
            description: Databricks library definition.
            additionalProperties:
              type: object
          x-ms-identifiers: []
      required:
        - mainClassName
    DatabricksSparkPythonActivity:
      description: DatabricksSparkPython activity.
      x-ms-discriminator-value: DatabricksSparkPython
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Databricks SparkPython activity properties.
          $ref: '#/components/schemas/DatabricksSparkPythonActivityTypeProperties'
      required:
        - typeProperties
    DatabricksSparkPythonActivityTypeProperties:
      description: Databricks SparkPython activity properties.
      properties:
        pythonFile:
          type: object
          description: 'The URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string).'
        parameters:
          description: Command line parameters that will be passed to the Python file.
          type: array
          items:
            type: object
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        libraries:
          description: A list of libraries to be installed on the cluster that will execute the job.
          type: array
          items:
            type: object
            description: Databricks library definition.
            additionalProperties:
              type: object
          x-ms-identifiers: []
      required:
        - pythonFile
    SetVariableActivity:
      x-ms-discriminator-value: SetVariable
      description: Set value for a Variable.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Set Variable activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SetVariableActivityTypeProperties'
      required:
        - typeProperties
    SetVariableActivityTypeProperties:
      description: SetVariable activity properties.
      properties:
        variableName:
          description: Name of the variable whose value needs to be set.
          type: string
        value:
          description: Value to be set. Could be a static value or Expression
          type: object
    AppendVariableActivity:
      x-ms-discriminator-value: AppendVariable
      description: Append value for a Variable of type Array.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: Append Variable activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AppendVariableActivityTypeProperties'
      required:
        - typeProperties
    AppendVariableActivityTypeProperties:
      description: AppendVariable activity properties.
      properties:
        variableName:
          description: Name of the variable whose value needs to be appended to.
          type: string
        value:
          description: Value to be appended. Could be a static value or Expression
          type: object
    AzureFunctionActivityMethod:
      description: The list of HTTP methods supported by a AzureFunctionActivity.
      type: string
      enum:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - HEAD
        - TRACE
      x-ms-enum:
        name: AzureFunctionActivityMethod
        modelAsString: true
    AzureFunctionActivity:
      x-ms-discriminator-value: AzureFunctionActivity
      description: Azure Function activity.
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          description: Azure Function activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureFunctionActivityTypeProperties'
      required:
        - typeProperties
    AzureFunctionActivityTypeProperties:
      description: Azure Function activity type properties.
      properties:
        method:
          description: Rest API method for target endpoint.
          $ref: '#/components/schemas/AzureFunctionActivityMethod'
        functionName:
          type: object
          description: 'Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)'
        headers:
          type: object
          description: 'Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).'
        body:
          type: object
          description: 'Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).'
      required:
        - method
        - functionName
    WebHookActivity:
      x-ms-discriminator-value: WebHook
      description: WebHook activity.
      allOf:
        - $ref: '#/components/schemas/ControlActivity'
      properties:
        typeProperties:
          description: WebHook activity properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WebHookActivityTypeProperties'
      required:
        - typeProperties
    WebHookActivityMethod:
      description: The list of HTTP methods supported by a WebHook activity.
      type: string
      enum:
        - POST
      x-ms-enum:
        name: WebHookActivityMethod
        modelAsString: true
    WebHookActivityTypeProperties:
      description: WebHook activity type properties.
      properties:
        method:
          description: Rest API method for target endpoint.
          $ref: '#/components/schemas/WebHookActivityMethod'
        url:
          type: object
          description: 'WebHook activity target endpoint and path. Type: string (or Expression with resultType string).'
        timeout:
          type: string
          description: 'The timeout within which the webhook should be called back. If there is no value specified, it defaults to 10 minutes. Type: string. Pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
        headers:
          type: object
          description: 'Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).'
        body:
          type: object
          description: 'Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).'
        authentication:
          description: Authentication method used for calling the endpoint.
          $ref: '#/components/schemas/WebActivityAuthentication'
        reportStatusOnCallBack:
          type: object
          description: 'When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode >= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean).'
      required:
        - method
        - url
    ExecuteDataFlowActivity:
      description: Execute data flow activity.
      x-ms-discriminator-value: ExecuteDataFlow
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Execute data flow activity properties.
          $ref: '#/components/schemas/ExecuteDataFlowActivityTypeProperties'
      required:
        - typeProperties
    ExecuteWranglingDataflowActivity:
      description: Execute power query activity.
      type: object
      x-ms-discriminator-value: ExecuteWranglingDataflow
      allOf:
        - $ref: '#/components/schemas/Activity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Execute power query activity properties.
          $ref: '#/components/schemas/ExecutePowerQueryActivityTypeProperties'
        policy:
          $ref: '#/components/schemas/ActivityPolicy'
          description: Activity policy.
      required:
        - typeProperties
    ExecuteDataFlowActivityTypeProperties:
      description: Execute data flow activity properties.
      properties:
        dataFlow:
          description: Data flow reference.
          $ref: '#/components/schemas/DataFlowReference'
        staging:
          description: Staging info for execute data flow activity.
          $ref: '#/components/schemas/DataFlowStagingInfo'
        integrationRuntime:
          description: The integration runtime reference.
          $ref: '#/components/schemas/IntegrationRuntimeReference'
        compute:
          description: Compute properties for data flow activity.
          type: object
          properties:
            computeType:
              description: 'Compute type of the cluster which will execute data flow job. Possible values include: ''General'', ''MemoryOptimized'', ''ComputeOptimized''. Type: string (or Expression with resultType string)'
              type: object
            coreCount:
              description: 'Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272. Type: integer (or Expression with resultType integer)'
              type: object
        traceLevel:
          description: 'Trace level setting used for data flow monitoring output. Supported values are: ''coarse'', ''fine'', and ''none''. Type: string (or Expression with resultType string)'
          type: object
        continueOnError:
          description: 'Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)'
          type: object
        runConcurrently:
          description: 'Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)'
          type: object
        sourceStagingConcurrency:
          description: 'Specify number of parallel staging for sources applicable to the sink. Type: integer (or Expression with resultType integer)'
          type: object
      required:
        - dataFlow
    ExecutePowerQueryActivityTypeProperties:
      description: Execute power query data flow activity properties.
      type: object
      allOf:
        - $ref: '#/components/schemas/ExecuteDataFlowActivityTypeProperties'
      properties:
        sinks:
          type: object
          description: (Deprecated. Please use Queries). List of Power Query activity sinks mapped to a queryName.
          additionalProperties:
            $ref: '#/components/schemas/PowerQuerySink'
        queries:
          type: array
          description: List of mapping for Power Query mashup query to sink dataset(s).
          items:
            $ref: '#/components/schemas/PowerQuerySinkMapping'
          x-ms-identifiers:
            - queryName
    PowerQuerySinkMapping:
      description: Map Power Query mashup query to sink dataset(s).
      type: object
      properties:
        queryName:
          description: Name of the query in Power Query mashup document.
          type: string
        dataflowSinks:
          type: array
          description: List of sinks mapped to Power Query mashup query.
          items:
            $ref: '#/components/schemas/PowerQuerySink'
          x-ms-identifiers:
            - name
    ScriptActivity:
      description: Script activity type.
      x-ms-discriminator-value: Script
      type: object
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Script activity properties.
          $ref: '#/components/schemas/ScriptActivityTypeProperties'
      required:
        - typeProperties
        - linkedServiceName
    ScriptActivityTypeProperties:
      description: Script activity properties.
      type: object
      properties:
        scripts:
          type: array
          description: 'Array of script blocks. Type: array.'
          items:
            $ref: '#/components/schemas/ScriptActivityScriptBlock'
          x-ms-identifiers: []
        logSettings:
          description: Log settings of script activity.
          type: object
          properties:
            logDestination:
              x-ms-enum:
                name: ScriptActivityLogDestination
                modelAsString: true
              enum:
                - ActivityOutput
                - ExternalStore
              type: string
              description: 'The destination of logs. Type: string.'
            logLocationSettings:
              description: Log location settings customer needs to provide when enabling log.
              $ref: '#/components/schemas/LogLocationSettings'
          required:
            - logDestination
    ScriptActivityScriptBlock:
      description: Script block of scripts.
      type: object
      properties:
        text:
          type: object
          description: 'The query text. Type: string (or Expression with resultType string).'
        type:
          x-ms-enum:
            name: ScriptType
            modelAsString: true
          enum:
            - Query
            - NonQuery
          type: string
          description: 'The type of the query. Type: string.'
        parameters:
          type: array
          description: 'Array of script parameters. Type: array.'
          items:
            $ref: '#/components/schemas/ScriptActivityParameter'
          x-ms-identifiers:
            - name
      required:
        - text
        - type
    ScriptActivityParameter:
      description: Parameters of a script block.
      type: object
      properties:
        name:
          type: object
          description: 'The name of the parameter. Type: string (or Expression with resultType string).'
        type:
          description: The type of the parameter.
          type: string
          enum:
            - Boolean
            - DateTime
            - DateTimeOffset
            - Decimal
            - Double
            - Guid
            - Int16
            - Int32
            - Int64
            - Single
            - String
            - Timespan
          x-ms-enum:
            name: ScriptActivityParameterType
            modelAsString: true
        value:
          description: The value of the parameter.
          type: object
        direction:
          description: The direction of the parameter.
          type: string
          enum:
            - Input
            - Output
            - InputOutput
          x-ms-enum:
            name: ScriptActivityParameterDirection
            modelAsString: true
        size:
          description: The size of the output direction parameter.
          type: integer
          format: int32
    SharePointOnlineListSource:
      description: A copy activity source for sharePoint online list source.
      type: object
      allOf:
        - $ref: '#/components/schemas/CopySource'
      properties:
        query:
          type: object
          description: 'The OData query to filter the data in SharePoint Online list. For example, "$top=1". Type: string (or Expression with resultType string).'
        httpRequestTimeout:
          type: object
          description: 'The wait time to get a response from SharePoint Online. Default value is 5 minutes (00:05:00). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
    SqlPartitionOption:
      description: The partition mechanism that will be used for Sql read in parallel.
      type: string
      enum:
        - None
        - PhysicalPartitionsOfTable
        - DynamicRange
      x-ms-enum:
        name: SqlPartitionOption
        modelAsString: true
    SapHanaPartitionOption:
      description: The partition mechanism that will be used for SAP HANA read in parallel.
      type: string
      enum:
        - None
        - PhysicalPartitionsOfTable
        - SapHanaDynamicRange
      x-ms-enum:
        name: SapHanaPartitionOption
        modelAsString: true
    SapTablePartitionOption:
      description: The partition mechanism that will be used for SAP table read in parallel.
      type: string
      enum:
        - None
        - PartitionOnInt
        - PartitionOnCalendarYear
        - PartitionOnCalendarMonth
        - PartitionOnCalendarDate
        - PartitionOnTime
      x-ms-enum:
        name: SapTablePartitionOption
        modelAsString: true
    OraclePartitionOption:
      description: The partition mechanism that will be used for Oracle read in parallel.
      type: string
      enum:
        - None
        - PhysicalPartitionsOfTable
        - DynamicRange
      x-ms-enum:
        name: OraclePartitionOption
        modelAsString: true
    TeradataPartitionOption:
      description: The partition mechanism that will be used for teradata read in parallel.
      type: string
      enum:
        - None
        - Hash
        - DynamicRange
      x-ms-enum:
        name: TeradataPartitionOption
        modelAsString: true
    NetezzaPartitionOption:
      description: The partition mechanism that will be used for Netezza read in parallel.
      type: string
      enum:
        - None
        - DataSlice
        - DynamicRange
      x-ms-enum:
        name: NetezzaPartitionOption
        modelAsString: true
    MetadataItem:
      description: Specify the name and value of custom metadata item.
      type: object
      properties:
        name:
          type: object
          description: 'Metadata item key name. Type: string (or Expression with resultType string).'
        value:
          type: object
          description: 'Metadata item value. Type: string (or Expression with resultType string).'
    SynapseNotebookActivity:
      description: Execute Synapse notebook activity.
      type: object
      x-ms-discriminator-value: SynapseNotebook
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Execute Synapse notebook activity properties.
          $ref: '#/components/schemas/SynapseNotebookActivityTypeProperties'
      required:
        - typeProperties
    SynapseNotebookActivityTypeProperties:
      description: Execute Synapse notebook activity properties.
      type: object
      properties:
        notebook:
          description: Synapse notebook reference.
          $ref: '#/components/schemas/SynapseNotebookReference'
        sparkPool:
          description: The name of the big data pool which will be used to execute the notebook.
          $ref: '#/components/schemas/BigDataPoolParametrizationReference'
        parameters:
          description: Notebook parameters.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/NotebookParameter'
        executorSize:
          type: object
          description: 'Number of core and memory to be used for executors allocated in the specified Spark pool for the session, which will be used for overriding ''executorCores'' and ''executorMemory'' of the notebook you provide. Type: string (or Expression with resultType string).'
        conf:
          type: object
          description: Spark configuration properties, which will override the 'conf' of the notebook you provide.
        driverSize:
          type: object
          description: 'Number of core and memory to be used for driver allocated in the specified Spark pool for the session, which will be used for overriding ''driverCores'' and ''driverMemory'' of the notebook you provide. Type: string (or Expression with resultType string).'
        numExecutors:
          description: Number of executors to launch for this session, which will override the 'numExecutors' of the notebook you provide.
          type: integer
          format: int32
      required:
        - notebook
    SynapseNotebookReference:
      description: Synapse notebook reference type.
      type: object
      properties:
        type:
          type: string
          description: Synapse notebook reference type.
          enum:
            - NotebookReference
          x-ms-enum:
            name: NotebookReferenceType
            modelAsString: true
        referenceName:
          type: object
          description: 'Reference notebook name. Type: string (or Expression with resultType string).'
      required:
        - type
        - referenceName
    BigDataPoolParametrizationReference:
      description: Big data pool reference type.
      type: object
      properties:
        type:
          type: string
          description: Big data pool reference type.
          enum:
            - BigDataPoolReference
          x-ms-enum:
            name: BigDataPoolReferenceType
            modelAsString: true
        referenceName:
          type: object
          description: 'Reference big data pool name. Type: string (or Expression with resultType string).'
      required:
        - type
        - referenceName
    NotebookParameter:
      description: Notebook parameter.
      type: object
      properties:
        value:
          type: object
          description: 'Notebook parameter value. Type: string (or Expression with resultType string).'
          nullable: true
        type:
          description: Notebook parameter type.
          $ref: '#/components/schemas/NotebookParameterType'
    NotebookParameterType:
      description: Notebook parameter type.
      type: string
      enum:
        - string
        - int
        - float
        - bool
      x-ms-enum:
        name: NotebookParameterType
        modelAsString: true
    SynapseSparkJobDefinitionActivity:
      description: Execute spark job activity.
      type: object
      x-ms-discriminator-value: SparkJob
      allOf:
        - $ref: '#/components/schemas/ExecutionActivity'
      properties:
        typeProperties:
          x-ms-client-flatten: true
          description: Execute spark job activity properties.
          $ref: '#/components/schemas/SynapseSparkJobActivityTypeProperties'
      required:
        - typeProperties
    SynapseSparkJobActivityTypeProperties:
      description: Execute spark job activity properties.
      type: object
      properties:
        sparkJob:
          description: Synapse spark job reference.
          $ref: '#/components/schemas/SynapseSparkJobReference'
        args:
          x-ms-client-name: arguments
          description: User specified arguments to SynapseSparkJobDefinitionActivity.
          type: array
          items:
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        file:
          type: object
          description: 'The main file used for the job, which will override the ''file'' of the spark job definition you provide. Type: string (or Expression with resultType string).'
        className:
          type: object
          description: 'The fully-qualified identifier or the main class that is in the main definition file, which will override the ''className'' of the spark job definition you provide. Type: string (or Expression with resultType string).'
        files:
          description: Additional files used for reference in the main definition file, which will override the 'files' of the spark job definition you provide.
          type: array
          items:
            description: 'Type: string (or Expression with resultType string).'
          x-ms-identifiers: []
        targetBigDataPool:
          $ref: '#/components/schemas/BigDataPoolParametrizationReference'
          description: The name of the big data pool which will be used to execute the spark batch job, which will override the 'targetBigDataPool' of the spark job definition you provide.
        executorSize:
          type: object
          description: 'Number of core and memory to be used for executors allocated in the specified Spark pool for the job, which will be used for overriding ''executorCores'' and ''executorMemory'' of the spark job definition you provide. Type: string (or Expression with resultType string).'
        conf:
          type: object
          description: Spark configuration properties, which will override the 'conf' of the spark job definition you provide.
        driverSize:
          type: object
          description: 'Number of core and memory to be used for driver allocated in the specified Spark pool for the job, which will be used for overriding ''driverCores'' and ''driverMemory'' of the spark job definition you provide. Type: string (or Expression with resultType string).'
        numExecutors:
          description: Number of executors to launch for this job, which will override the 'numExecutors' of the spark job definition you provide.
          type: integer
          format: int32
      required:
        - sparkJob
    SynapseSparkJobReference:
      description: Synapse spark job reference type.
      type: object
      properties:
        type:
          type: string
          description: Synapse spark job reference type.
          enum:
            - SparkJobDefinitionReference
          x-ms-enum:
            name: SparkJobReferenceType
            modelAsString: true
        referenceName:
          type: string
          description: Reference spark job name.
      required:
        - type
        - referenceName
    ManagedVirtualNetwork:
      description: A managed Virtual Network associated with the Azure Data Factory
      type: object
      properties:
        vNetId:
          description: Managed Virtual Network ID.
          type: string
          readOnly: true
        alias:
          description: Managed Virtual Network alias.
          type: string
          readOnly: true
      additionalProperties:
        type: object
    Resource:
      x-ms-azure-resource: true
      description: Azure Data Factory top-level resource.
      properties:
        id:
          type: string
          description: The resource identifier.
          readOnly: true
        name:
          type: string
          description: The resource name.
          readOnly: true
        type:
          type: string
          description: The resource type.
          readOnly: true
        location:
          type: string
          description: The resource location.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        eTag:
          type: string
          description: Etag identifies change in the resource.
          readOnly: true
    SubResource:
      description: Azure Data Factory nested resource, which belongs to a factory.
      properties:
        id:
          type: string
          description: The resource identifier.
          readOnly: true
        name:
          type: string
          description: The resource name.
          readOnly: true
        type:
          type: string
          description: The resource type.
          readOnly: true
        etag:
          type: string
          description: Etag identifies change in the resource.
          readOnly: true
      x-ms-azure-resource: true
    SubResourceDebugResource:
      description: Azure Data Factory nested debug resource.
      properties:
        name:
          type: string
          description: The resource name.
    Expression:
      description: Azure Data Factory expression definition.
      type: object
      properties:
        type:
          type: string
          description: Expression type.
          enum:
            - Expression
        value:
          type: string
          description: Expression value.
      required:
        - type
        - value
    SecureString:
      x-ms-discriminator-value: SecureString
      description: Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
      type: object
      allOf:
        - $ref: '#/components/schemas/SecretBase'
      properties:
        value:
          type: string
          description: Value of secure string.
      required:
        - value
    AzureKeyVaultSecretReference:
      x-ms-discriminator-value: AzureKeyVaultSecret
      description: Azure Key Vault secret reference.
      type: object
      allOf:
        - $ref: '#/components/schemas/SecretBase'
      properties:
        store:
          description: The Azure Key Vault linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        secretName:
          type: object
          description: 'The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).'
        secretVersion:
          type: object
          description: 'The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).'
      required:
        - store
        - secretName
    SecretBase:
      description: The base definition of a secret type.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: Type of the secret.
      required:
        - type
    FactoryListResponse:
      description: A list of factory resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of factories.
          items:
            $ref: '#/components/schemas/Factory'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    IntegrationRuntimeListResponse:
      description: A list of integration runtime resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of integration runtimes.
          items:
            $ref: '#/components/schemas/IntegrationRuntimeResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    IntegrationRuntimeReference:
      description: Integration runtime reference type.
      properties:
        type:
          type: string
          description: Type of integration runtime.
          enum:
            - IntegrationRuntimeReference
        referenceName:
          type: string
          description: Reference integration runtime name.
        parameters:
          $ref: '#/components/schemas/ParameterValueSpecification'
          description: Arguments for integration runtime.
      required:
        - type
        - referenceName
    IntegrationRuntimeResource:
      description: Integration runtime resource type.
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/IntegrationRuntime'
          description: Integration runtime properties.
      required:
        - properties
    IntegrationRuntimeDebugResource:
      description: Integration runtime debug resource.
      allOf:
        - $ref: '#/components/schemas/SubResourceDebugResource'
      properties:
        properties:
          $ref: '#/components/schemas/IntegrationRuntime'
          description: Integration runtime properties.
      required:
        - properties
    IntegrationRuntimeStatusResponse:
      description: Integration runtime status response.
      properties:
        name:
          type: string
          description: The integration runtime name.
          readOnly: true
        properties:
          $ref: '#/components/schemas/IntegrationRuntimeStatus'
          description: Integration runtime properties.
      required:
        - properties
    IntegrationRuntimeStatusListResponse:
      description: A list of integration runtime status.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of integration runtime status.
          items:
            $ref: '#/components/schemas/IntegrationRuntimeStatusResponse'
          x-ms-identifiers:
            - name
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    UpdateIntegrationRuntimeRequest:
      description: Update integration runtime request.
      type: object
      properties:
        autoUpdate:
          description: Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189.
          $ref: '#/components/schemas/IntegrationRuntimeAutoUpdate'
        updateDelayOffset:
          description: The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.
          type: string
    UpdateIntegrationRuntimeNodeRequest:
      description: Update integration runtime node request.
      type: object
      properties:
        concurrentJobsLimit:
          description: The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.
          type: integer
          minimum: 1
    LinkedIntegrationRuntimeRequest:
      description: Data factory name for linked integration runtime request.
      type: object
      properties:
        factoryName:
          description: The data factory name for linked integration runtime.
          type: string
          x-ms-client-name: linkedFactoryName
      required:
        - factoryName
    CreateLinkedIntegrationRuntimeRequest:
      description: The linked integration runtime information.
      type: object
      properties:
        name:
          description: The name of the linked integration runtime.
          type: string
        subscriptionId:
          description: The ID of the subscription that the linked integration runtime belongs to.
          type: string
        dataFactoryName:
          description: The name of the data factory that the linked integration runtime belongs to.
          type: string
        dataFactoryLocation:
          description: The location of the data factory that the linked integration runtime belongs to.
          type: string
    LinkedServiceListResponse:
      description: A list of linked service resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of linked services.
          items:
            $ref: '#/components/schemas/LinkedServiceResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    DatasetListResponse:
      description: A list of dataset resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of datasets.
          items:
            $ref: '#/components/schemas/DatasetResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    PipelineListResponse:
      description: A list of pipeline resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of pipelines.
          items:
            $ref: '#/components/schemas/PipelineResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    TriggerQueryResponse:
      description: A query of triggers.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of triggers.
          items:
            $ref: '#/components/schemas/TriggerResource'
        continuationToken:
          description: The continuation token for getting the next page of results, if any remaining results exist, null otherwise.
          type: string
    TriggerListResponse:
      description: A list of trigger resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of triggers.
          items:
            $ref: '#/components/schemas/TriggerResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    CreateRunResponse:
      description: Response body with a run identifier.
      type: object
      properties:
        runId:
          description: Identifier of a run.
          type: string
      required:
        - runId
    GlobalParameterListResponse:
      description: A list of Global parameters.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of global parameters.
          items:
            $ref: '#/components/schemas/GlobalParameterResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    CloudError:
      x-ms-external: true
      description: The object that defines the structure of an Azure Data Factory error response.
      type: object
      properties:
        error:
          x-ms-client-flatten: true
          description: Error data
          $ref: '#/components/schemas/CloudErrorBody'
      required:
        - error
    CloudErrorBody:
      x-ms-external: true
      description: The object that defines the structure of an Azure Data Factory error.
      type: object
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message.
          type: string
        target:
          description: Property name/path in request associated with error.
          type: string
        details:
          description: Array with additional error details.
          type: array
          items:
            $ref: '#/components/schemas/CloudError'
          x-ms-identifiers: []
      required:
        - code
        - message
    TriggerSubscriptionOperationStatus:
      description: Defines the response of a trigger subscription operation.
      type: object
      properties:
        triggerName:
          description: Trigger name.
          type: string
          readOnly: true
        status:
          type: string
          enum:
            - Enabled
            - Provisioning
            - Deprovisioning
            - Disabled
            - Unknown
          x-ms-enum:
            name: EventSubscriptionStatus
            modelAsString: true
          description: Event Subscription Status.
          readOnly: true
    VariableDefinitionSpecification:
      description: Definition of variable for a Pipeline.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/VariableSpecification'
    VariableSpecification:
      description: Definition of a single variable for a Pipeline.
      type: object
      properties:
        type:
          type: string
          description: Variable type.
          enum:
            - String
            - Bool
            - Array
          x-ms-enum:
            name: VariableType
            modelAsString: true
        defaultValue:
          type: object
          description: Default value of variable.
      required:
        - type
    ParameterDefinitionSpecification:
      description: Definition of all parameters for an entity.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterSpecification'
    ParameterSpecification:
      description: Definition of a single parameter for an entity.
      type: object
      properties:
        type:
          type: string
          description: Parameter type.
          enum:
            - Object
            - String
            - Int
            - Float
            - Bool
            - Array
            - SecureString
          x-ms-enum:
            name: ParameterType
            modelAsString: true
        defaultValue:
          type: object
          description: Default value of parameter.
      required:
        - type
    ParameterValueSpecification:
      description: An object mapping parameter names to argument values.
      type: object
      additionalProperties:
        type: object
    PurviewConfiguration:
      description: Purview configuration.
      type: object
      properties:
        purviewResourceId:
          description: Purview resource id.
          type: string
    FactoryRepoConfiguration:
      description: Factory's git repo information.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Type of repo configuration.
        accountName:
          description: Account name.
          type: string
        repositoryName:
          description: Repository name.
          type: string
        collaborationBranch:
          description: Collaboration branch.
          type: string
        rootFolder:
          description: Root folder.
          type: string
        lastCommitId:
          description: Last commit id.
          type: string
      required:
        - type
        - accountName
        - repositoryName
        - collaborationBranch
        - rootFolder
    FactoryVSTSConfiguration:
      x-ms-discriminator-value: FactoryVSTSConfiguration
      description: Factory's VSTS repo information.
      type: object
      allOf:
        - $ref: '#/components/schemas/FactoryRepoConfiguration'
      properties:
        projectName:
          description: VSTS project name.
          type: string
        tenantId:
          description: VSTS tenant id.
          type: string
      required:
        - projectName
    FactoryGitHubConfiguration:
      x-ms-discriminator-value: FactoryGitHubConfiguration
      description: Factory's GitHub repo information.
      type: object
      allOf:
        - $ref: '#/components/schemas/FactoryRepoConfiguration'
      properties:
        hostName:
          description: 'GitHub Enterprise host name. For example: `https://github.mydomain.com`'
          type: string
        clientId:
          description: GitHub bring your own app client id.
          type: string
        clientSecret:
          $ref: '#/components/schemas/GitHubClientSecret'
          description: GitHub bring your own app client secret information.
    GitHubClientSecret:
      description: Client secret information for factory's bring your own app repository configuration.
      type: object
      properties:
        byoaSecretAkvUrl:
          description: Bring your own app client secret AKV URL.
          type: string
        byoaSecretName:
          description: Bring your own app client secret name in AKV.
          type: string
    FactoryRepoUpdate:
      description: Factory's git repo information.
      properties:
        factoryResourceId:
          description: The factory resource id.
          type: string
        repoConfiguration:
          $ref: '#/components/schemas/FactoryRepoConfiguration'
          description: Git repo information of the factory.
    GitHubAccessTokenRequest:
      description: Get GitHub access token request definition.
      properties:
        gitHubAccessCode:
          description: GitHub access code.
          type: string
        gitHubClientId:
          description: GitHub application client ID.
          type: string
        gitHubClientSecret:
          $ref: '#/components/schemas/GitHubClientSecret'
          description: GitHub bring your own app client secret information.
        gitHubAccessTokenBaseUrl:
          description: GitHub access token base URL.
          type: string
      required:
        - gitHubAccessCode
        - gitHubAccessTokenBaseUrl
    GitHubAccessTokenResponse:
      description: Get GitHub access token response definition.
      properties:
        gitHubAccessToken:
          description: GitHub access token.
          type: string
    UserAccessPolicy:
      description: Get Data Plane read only token request definition.
      properties:
        permissions:
          description: The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.
          type: string
        accessResourcePath:
          description: The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.
          type: string
        profileName:
          description: The name of the profile. Currently only the default is supported. The default value is DefaultProfile.
          type: string
        startTime:
          description: Start time for the token. If not specified the current time will be used.
          type: string
        expireTime:
          description: Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.
          type: string
    AccessPolicyResponse:
      description: Get Data Plane read only token response definition.
      properties:
        policy:
          description: The user access policy.
          $ref: '#/components/schemas/UserAccessPolicy'
        accessToken:
          description: Data Plane read only access token.
          type: string
        dataPlaneUrl:
          description: Data Plane service base URL.
          type: string
    FactoryProperties:
      description: Factory resource properties.
      properties:
        provisioningState:
          description: Factory provisioning state, example Succeeded.
          type: string
          readOnly: true
        createTime:
          description: Time the factory was created in ISO8601 format.
          type: string
          readOnly: true
          format: date-time
        version:
          description: Version of the factory.
          type: string
          readOnly: true
        purviewConfiguration:
          $ref: '#/components/schemas/PurviewConfiguration'
          description: Purview information of the factory.
        repoConfiguration:
          $ref: '#/components/schemas/FactoryRepoConfiguration'
          description: Git repo information of the factory.
        globalParameters:
          $ref: '#/components/schemas/GlobalParameterDefinitionSpecification'
          description: List of parameters for factory.
        encryption:
          $ref: '#/components/schemas/EncryptionConfiguration'
          description: Properties to enable Customer Managed Key for the factory.
        publicNetworkAccess:
          description: Whether or not public network access is allowed for the data factory.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
    FactoryUpdateProperties:
      description: Factory update resource properties.
      type: object
      properties:
        publicNetworkAccess:
          description: Whether or not public network access is allowed for the data factory.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
    EncryptionConfiguration:
      description: Definition of CMK for the factory.
      properties:
        keyName:
          type: string
          description: The name of the key in Azure Key Vault to use as Customer Managed Key.
        vaultBaseUrl:
          type: string
          description: The url of the Azure Key Vault used for CMK.
        keyVersion:
          type: string
          description: The version of the key used for CMK. If not provided, latest version will be used.
        identity:
          $ref: '#/components/schemas/CMKIdentityDefinition'
          description: User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used.
      required:
        - keyName
        - vaultBaseUrl
    CMKIdentityDefinition:
      description: Managed Identity used for CMK.
      properties:
        userAssignedIdentity:
          type: string
          description: The resource id of the user assigned identity to authenticate to customer's key vault.
    GlobalParameterDefinitionSpecification:
      description: Definition of all parameters for an entity.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/GlobalParameterSpecification'
    GlobalParameterSpecification:
      description: Definition of a single parameter for an entity.
      type: object
      properties:
        type:
          type: string
          description: Global Parameter type.
          enum:
            - Object
            - String
            - Int
            - Float
            - Bool
            - Array
          x-ms-enum:
            name: GlobalParameterType
            modelAsString: true
        value:
          type: object
          description: Value of parameter.
      required:
        - type
        - value
    PipelineResource:
      description: Pipeline resource type.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Pipeline'
          description: Properties of the pipeline.
      additionalProperties:
        type: object
      required:
        - properties
    PipelineReference:
      description: Pipeline reference type.
      properties:
        type:
          type: string
          description: Pipeline reference type.
          enum:
            - PipelineReference
        referenceName:
          type: string
          description: Reference pipeline name.
        name:
          type: string
          description: Reference name.
      required:
        - type
        - referenceName
    TriggerPipelineReference:
      description: Pipeline that needs to be triggered with the given parameters.
      properties:
        pipelineReference:
          description: Pipeline reference.
          $ref: '#/components/schemas/PipelineReference'
        parameters:
          description: Pipeline parameters.
          $ref: '#/components/schemas/ParameterValueSpecification'
    TriggerResource:
      description: Trigger resource type.
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/Trigger'
          description: Properties of the trigger.
      required:
        - properties
    GlobalParameterResource:
      description: Global parameters resource type.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/GlobalParameter'
          description: Properties of the global parameter.
      required:
        - properties
    Factory:
      description: Factory resource type.
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
      properties:
        identity:
          $ref: '#/components/schemas/FactoryIdentity'
          description: Managed service identity of the factory.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FactoryProperties'
          description: Properties of the factory.
      additionalProperties:
        type: object
    FactoryUpdateParameters:
      description: Parameters for updating a factory resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        identity:
          $ref: '#/components/schemas/FactoryIdentity'
          description: Managed service identity of the factory.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FactoryUpdateProperties'
          description: Properties of update the factory.
    FactoryIdentity:
      description: Identity properties of the factory resource.
      properties:
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned,UserAssigned
          x-ms-enum:
            name: FactoryIdentityType
            modelAsString: true
        principalId:
          type: string
          format: uuid
          readOnly: true
          description: The principal id of the identity.
        tenantId:
          type: string
          format: uuid
          readOnly: true
          description: The client tenant id of the identity.
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentitiesDefinitionSpecification'
          description: List of user assigned identities for the factory.
      required:
        - type
    UserAssignedIdentitiesDefinitionSpecification:
      description: Definition of all user assigned identities for a factory.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentitySpecification'
    UserAssignedIdentitySpecification:
      description: Definition of a single user assigned identity for a factory.
      type: object
      properties: {}
    DatasetReference:
      description: Dataset reference type.
      properties:
        type:
          type: string
          description: Dataset reference type.
          enum:
            - DatasetReference
        referenceName:
          type: string
          description: Reference dataset name.
        parameters:
          $ref: '#/components/schemas/ParameterValueSpecification'
          description: Arguments for dataset.
      required:
        - type
        - referenceName
    DatasetResource:
      description: Dataset resource type.
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/Dataset'
          description: Dataset properties.
      required:
        - properties
    DatasetDebugResource:
      description: Dataset debug resource.
      allOf:
        - $ref: '#/components/schemas/SubResourceDebugResource'
      properties:
        properties:
          $ref: '#/components/schemas/Dataset'
          description: Dataset properties.
      required:
        - properties
    LinkedServiceReference:
      description: Linked service reference type.
      type: object
      properties:
        type:
          type: string
          description: Linked service reference type.
          enum:
            - LinkedServiceReference
          x-ms-enum:
            name: Type
            modelAsString: true
        referenceName:
          type: string
          description: Reference LinkedService name.
        parameters:
          $ref: '#/components/schemas/ParameterValueSpecification'
          description: Arguments for LinkedService.
      required:
        - type
        - referenceName
    LinkedServiceResource:
      description: Linked service resource type.
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/LinkedService'
          description: Properties of linked service.
      required:
        - properties
    LinkedServiceDebugResource:
      description: Linked service debug resource.
      allOf:
        - $ref: '#/components/schemas/SubResourceDebugResource'
      properties:
        properties:
          $ref: '#/components/schemas/LinkedService'
          description: Properties of linked service.
      required:
        - properties
    TriggerFilterParameters:
      description: Query parameters for triggers.
      type: object
      properties:
        continuationToken:
          description: The continuation token for getting the next page of results. Null for first page.
          type: string
        parentTriggerName:
          description: The name of the parent TumblingWindowTrigger to get the child rerun triggers
          type: string
    RunFilterParameters:
      description: Query parameters for listing runs.
      type: object
      properties:
        continuationToken:
          description: The continuation token for getting the next page of results. Null for first page.
          type: string
        lastUpdatedAfter:
          description: The time at or after which the run event was updated in 'ISO 8601' format.
          type: string
          format: date-time
        lastUpdatedBefore:
          description: The time at or before which the run event was updated in 'ISO 8601' format.
          type: string
          format: date-time
        filters:
          type: array
          description: List of filters.
          items:
            $ref: '#/components/schemas/RunQueryFilter'
          x-ms-identifiers: []
        orderBy:
          type: array
          description: List of OrderBy option.
          items:
            $ref: '#/components/schemas/RunQueryOrderBy'
          x-ms-identifiers: []
      required:
        - lastUpdatedAfter
        - lastUpdatedBefore
    RunQueryFilter:
      description: Query filter option for listing runs.
      type: object
      properties:
        operand:
          description: Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.
          type: string
          enum:
            - PipelineName
            - Status
            - RunStart
            - RunEnd
            - ActivityName
            - ActivityRunStart
            - ActivityRunEnd
            - ActivityType
            - TriggerName
            - TriggerRunTimestamp
            - RunGroupId
            - LatestOnly
          x-ms-enum:
            name: RunQueryFilterOperand
            modelAsString: true
        operator:
          description: Operator to be used for filter.
          type: string
          enum:
            - Equals
            - NotEquals
            - In
            - NotIn
          x-ms-enum:
            name: RunQueryFilterOperator
            modelAsString: true
        values:
          type: array
          description: List of filter values.
          items:
            type: string
      required:
        - operand
        - operator
        - values
    RunQueryOrderBy:
      description: An object to provide order by options for listing runs.
      type: object
      properties:
        orderBy:
          description: Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.
          type: string
          enum:
            - RunStart
            - RunEnd
            - PipelineName
            - Status
            - ActivityName
            - ActivityRunStart
            - ActivityRunEnd
            - TriggerName
            - TriggerRunTimestamp
          x-ms-enum:
            name: RunQueryOrderByField
            modelAsString: true
        order:
          description: Sorting order of the parameter.
          type: string
          enum:
            - ASC
            - DESC
          x-ms-enum:
            name: RunQueryOrder
            modelAsString: true
      required:
        - orderBy
        - order
    PipelineRunsQueryResponse:
      description: A list pipeline runs.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of pipeline runs.
          items:
            $ref: '#/components/schemas/PipelineRun'
          x-ms-identifiers:
            - runId
        continuationToken:
          description: The continuation token for getting the next page of results, if any remaining results exist, null otherwise.
          type: string
    PipelineRun:
      description: Information about a pipeline run.
      type: object
      properties:
        runId:
          description: Identifier of a run.
          type: string
          readOnly: true
        runGroupId:
          description: Identifier that correlates all the recovery runs of a pipeline run.
          type: string
          readOnly: true
        isLatest:
          description: Indicates if the recovered pipeline run is the latest in its group.
          type: boolean
          readOnly: true
        pipelineName:
          description: The pipeline name.
          type: string
          readOnly: true
        parameters:
          description: The full or partial list of parameter name, value pair used in the pipeline run.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        runDimensions:
          description: Run dimensions emitted by Pipeline run.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        invokedBy:
          description: Entity that started the pipeline run.
          $ref: '#/components/schemas/PipelineRunInvokedBy'
          readOnly: true
        lastUpdated:
          description: The last updated timestamp for the pipeline run event in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        runStart:
          description: The start time of a pipeline run in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        runEnd:
          description: The end time of a pipeline run in ISO8601 format.
          type: string
          format: date-time
          readOnly: true
        durationInMs:
          description: The duration of a pipeline run.
          type: integer
          readOnly: true
        status:
          description: 'The status of a pipeline run. Possible values: Queued, InProgress, Succeeded, Failed, Canceling, Cancelled'
          type: string
          readOnly: true
        message:
          description: The message from a pipeline run.
          type: string
          readOnly: true
      additionalProperties:
        type: object
    PipelineRunInvokedBy:
      description: Provides entity name and id that started the pipeline run.
      type: object
      properties:
        name:
          description: Name of the entity that started the pipeline run.
          type: string
          readOnly: true
        id:
          description: The ID of the entity that started the run.
          type: string
          readOnly: true
        invokedByType:
          description: The type of the entity that started the run.
          type: string
          readOnly: true
        pipelineName:
          description: The name of the pipeline that triggered the run, if any.
          type: string
          readOnly: true
        pipelineRunId:
          description: The run id of the pipeline that triggered the run, if any.
          type: string
          readOnly: true
    ActivityRunsQueryResponse:
      description: A list activity runs.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of activity runs.
          items:
            $ref: '#/components/schemas/ActivityRun'
          x-ms-identifiers:
            - pipelineRunId
        continuationToken:
          description: The continuation token for getting the next page of results, if any remaining results exist, null otherwise.
          type: string
    ActivityRun:
      description: Information about an activity run in a pipeline.
      type: object
      properties:
        pipelineName:
          description: The name of the pipeline.
          type: string
          readOnly: true
        pipelineRunId:
          description: The id of the pipeline run.
          type: string
          readOnly: true
        activityName:
          description: The name of the activity.
          type: string
          readOnly: true
        activityType:
          description: The type of the activity.
          type: string
          readOnly: true
        activityRunId:
          description: The id of the activity run.
          type: string
          readOnly: true
        linkedServiceName:
          description: The name of the compute linked service.
          type: string
          readOnly: true
        status:
          description: The status of the activity run.
          type: string
          readOnly: true
        activityRunStart:
          description: The start time of the activity run in 'ISO 8601' format.
          type: string
          format: date-time
          readOnly: true
        activityRunEnd:
          description: The end time of the activity run in 'ISO 8601' format.
          type: string
          format: date-time
          readOnly: true
        durationInMs:
          description: The duration of the activity run.
          type: integer
          readOnly: true
        input:
          description: The input for the activity.
          type: object
          readOnly: true
        output:
          description: The output for the activity.
          type: object
          readOnly: true
        error:
          description: The error if any from the activity run.
          type: object
          readOnly: true
      additionalProperties:
        type: object
    TriggerRunsQueryResponse:
      description: A list of trigger runs.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of trigger runs.
          items:
            $ref: '#/components/schemas/TriggerRun'
          x-ms-identifiers:
            - triggerRunId
        continuationToken:
          description: The continuation token for getting the next page of results, if any remaining results exist, null otherwise.
          type: string
    TriggerRun:
      description: Trigger runs.
      type: object
      properties:
        triggerRunId:
          type: string
          description: Trigger run id.
          readOnly: true
        triggerName:
          type: string
          description: Trigger name.
          readOnly: true
        triggerType:
          type: string
          description: Trigger type.
          readOnly: true
        triggerRunTimestamp:
          type: string
          format: date-time
          description: Trigger run start time.
          readOnly: true
        status:
          type: string
          enum:
            - Succeeded
            - Failed
            - Inprogress
          x-ms-enum:
            name: TriggerRunStatus
            modelAsString: true
          description: Trigger run status.
          readOnly: true
        message:
          type: string
          description: Trigger error message.
          readOnly: true
        properties:
          description: List of property name and value related to trigger run. Name, value pair depends on type of trigger.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        triggeredPipelines:
          description: List of pipeline name and run Id triggered by the trigger run.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        runDimension:
          description: Run dimension for which trigger was fired.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        dependencyStatus:
          description: Status of the upstream pipelines.
          type: object
          additionalProperties:
            type: object
          readOnly: true
      additionalProperties:
        type: object
    OperationListResponse:
      description: A list of operations that can be performed by the Data Factory service.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: List of Data Factory operations supported by the Data Factory resource provider.
          x-ms-identifiers:
            - name
        nextLink:
          type: string
          description: The link to the next page of results, if any remaining results exist.
    Operation:
      description: Azure Data Factory API operation definition.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        origin:
          description: The intended executor of the operation.
          type: string
        display:
          description: Metadata associated with the operation.
          properties:
            description:
              description: The description of the operation.
              type: string
            provider:
              description: The name of the provider.
              type: string
            resource:
              description: The name of the resource type on which the operation is performed.
              type: string
            operation:
              description: 'The type of operation: get, read, delete, etc.'
              type: string
        properties:
          description: Additional details about the operation.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OperationProperties'
    OperationProperties:
      description: Additional details about an operation.
      type: object
      x-ms-client-flatten: true
      properties:
        serviceSpecification:
          description: Details about a service operation.
          $ref: '#/components/schemas/OperationServiceSpecification'
    OperationServiceSpecification:
      description: Details about a service operation.
      type: object
      properties:
        logSpecifications:
          description: Details about operations related to logs.
          type: array
          items:
            $ref: '#/components/schemas/OperationLogSpecification'
          x-ms-identifiers:
            - name
        metricSpecifications:
          description: Details about operations related to metrics.
          type: array
          items:
            $ref: '#/components/schemas/OperationMetricSpecification'
          x-ms-identifiers:
            - name
    OperationLogSpecification:
      description: Details about an operation related to logs.
      type: object
      properties:
        name:
          description: The name of the log category.
          type: string
        displayName:
          description: Localized display name.
          type: string
        blobDuration:
          description: Blobs created in the customer storage account, per hour.
          type: string
    OperationMetricSpecification:
      description: Details about an operation related to metrics.
      type: object
      properties:
        name:
          description: The name of the metric.
          type: string
        displayName:
          description: Localized display name of the metric.
          type: string
        displayDescription:
          description: The description of the metric.
          type: string
        unit:
          description: The unit that the metric is measured in.
          type: string
        aggregationType:
          description: The type of metric aggregation.
          type: string
        enableRegionalMdmAccount:
          description: Whether or not the service is using regional MDM accounts.
          type: string
        sourceMdmAccount:
          description: The name of the MDM account.
          type: string
        sourceMdmNamespace:
          description: The name of the MDM namespace.
          type: string
        availabilities:
          description: Defines how often data for metrics becomes available.
          type: array
          items:
            $ref: '#/components/schemas/OperationMetricAvailability'
          x-ms-identifiers: []
        dimensions:
          description: Defines the metric dimension.
          type: array
          items:
            $ref: '#/components/schemas/OperationMetricDimension'
          x-ms-identifiers:
            - name
    OperationMetricAvailability:
      description: Defines how often data for a metric becomes available.
      type: object
      properties:
        timeGrain:
          description: The granularity for the metric.
          type: string
        blobDuration:
          description: Blob created in the customer storage account, per hour.
          type: string
    OperationMetricDimension:
      description: Defines the metric dimension.
      type: object
      properties:
        name:
          description: The name of the dimension for the metric.
          type: string
        displayName:
          description: The display name of the metric dimension.
          type: string
        toBeExportedForShoebox:
          description: Whether the dimension should be exported to Azure Monitor.
          type: boolean
    GetSsisObjectMetadataRequest:
      type: object
      description: The request payload of get SSIS object metadata.
      properties:
        metadataPath:
          type: string
          description: Metadata path.
    SsisObjectMetadataStatusResponse:
      type: object
      description: The status of the operation.
      properties:
        status:
          type: string
          description: The status of the operation.
        name:
          type: string
          description: The operation name.
        properties:
          type: string
          description: The operation properties.
        error:
          type: string
          description: The operation error message.
    ExposureControlBatchRequest:
      description: A list of exposure control features.
      type: object
      required:
        - exposureControlRequests
      properties:
        exposureControlRequests:
          type: array
          description: List of exposure control features.
          items:
            $ref: '#/components/schemas/ExposureControlRequest'
          x-ms-identifiers:
            - featureName
    ExposureControlRequest:
      type: object
      description: The exposure control request.
      properties:
        featureName:
          type: string
          description: The feature name.
        featureType:
          type: string
          description: The feature type.
    ExposureControlBatchResponse:
      description: A list of exposure control feature values.
      type: object
      required:
        - exposureControlResponses
      properties:
        exposureControlResponses:
          type: array
          description: List of exposure control feature values.
          items:
            $ref: '#/components/schemas/ExposureControlResponse'
          x-ms-identifiers:
            - featureName
    ExposureControlResponse:
      type: object
      description: The exposure control response.
      properties:
        featureName:
          type: string
          description: The feature name.
          readOnly: true
        value:
          type: string
          description: The feature value.
          readOnly: true
    DataFlowListResponse:
      description: A list of data flow resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of data flows.
          items:
            $ref: '#/components/schemas/DataFlowResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    CreateDataFlowDebugSessionRequest:
      description: Request body structure for creating data flow debug session.
      type: object
      properties:
        computeType:
          description: Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.
          type: string
        coreCount:
          description: Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.
          type: integer
        timeToLive:
          description: Time to live setting of the cluster in minutes.
          type: integer
        integrationRuntime:
          description: Set to use integration runtime setting for data flow debug session.
          $ref: '#/components/schemas/IntegrationRuntimeDebugResource'
    CreateDataFlowDebugSessionResponse:
      description: Response body structure for creating data flow debug session.
      type: object
      properties:
        status:
          description: The state of the debug session.
          type: string
        sessionId:
          description: The ID of data flow debug session.
          type: string
    DataFlowSourceSetting:
      description: Definition of data flow source setting for debug.
      type: object
      properties:
        sourceName:
          description: The data flow source name.
          type: string
        rowLimit:
          description: Defines the row limit of data flow source in debug.
          type: integer
      additionalProperties:
        type: object
    DataFlowStagingInfo:
      description: Staging info for execute data flow activity.
      properties:
        linkedService:
          description: Staging linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        folderPath:
          description: 'Folder path for staging blob. Type: string (or Expression with resultType string)'
          type: object
    DataFlowDebugPackage:
      description: Request body structure for starting data flow debug session.
      type: object
      properties:
        sessionId:
          description: The ID of data flow debug session.
          type: string
        dataFlow:
          description: Data flow instance.
          $ref: '#/components/schemas/DataFlowDebugResource'
        dataFlows:
          description: List of Data flows
          type: array
          items:
            $ref: '#/components/schemas/DataFlowDebugResource'
          x-ms-identifiers:
            - name
        datasets:
          type: array
          description: List of datasets.
          items:
            $ref: '#/components/schemas/DatasetDebugResource'
          x-ms-identifiers:
            - name
        linkedServices:
          type: array
          description: List of linked services.
          items:
            $ref: '#/components/schemas/LinkedServiceDebugResource'
          x-ms-identifiers:
            - name
        staging:
          description: Staging info for debug session.
          $ref: '#/components/schemas/DataFlowStagingInfo'
        debugSettings:
          description: Data flow debug settings.
          type: object
          properties:
            sourceSettings:
              type: array
              description: Source setting for data flow debug.
              items:
                $ref: '#/components/schemas/DataFlowSourceSetting'
              x-ms-identifiers:
                - sourceName
            parameters:
              description: Data flow parameters.
              $ref: '#/components/schemas/ParameterValueSpecification'
            datasetParameters:
              description: Parameters for dataset.
              type: object
      additionalProperties:
        type: object
    AddDataFlowToDebugSessionResponse:
      description: Response body structure for starting data flow debug session.
      type: object
      properties:
        jobVersion:
          description: The ID of data flow debug job version.
          type: string
    DeleteDataFlowDebugSessionRequest:
      description: Request body structure for deleting data flow debug session.
      type: object
      properties:
        sessionId:
          description: The ID of data flow debug session.
          type: string
    DataFlowDebugCommandPayload:
      description: Structure of command payload.
      type: object
      properties:
        streamName:
          description: The stream name which is used for preview.
          type: string
        rowLimits:
          description: Row limits for preview response.
          type: integer
        columns:
          description: Array of column names.
          type: array
          items:
            type: string
        expression:
          description: The expression which is used for preview.
          type: string
      required:
        - streamName
    DataFlowDebugCommandRequest:
      description: Request body structure for data flow debug command.
      type: object
      properties:
        sessionId:
          description: The ID of data flow debug session.
          type: string
        command:
          description: The command type.
          type: string
          enum:
            - executePreviewQuery
            - executeStatisticsQuery
            - executeExpressionQuery
          x-ms-enum:
            name: DataFlowDebugCommandType
            modelAsString: true
        commandPayload:
          description: The command payload object.
          $ref: '#/components/schemas/DataFlowDebugCommandPayload'
    DataFlowDebugCommandResponse:
      description: Response body structure of data flow result for data preview, statistics or expression preview.
      type: object
      properties:
        status:
          description: The run status of data preview, statistics or expression preview.
          type: string
        data:
          description: The result data of data preview, statistics or expression preview.
          type: string
    QueryDataFlowDebugSessionsResponse:
      description: A list of active debug sessions.
      type: object
      properties:
        value:
          description: Array with all active debug sessions.
          type: array
          items:
            $ref: '#/components/schemas/DataFlowDebugSessionInfo'
          x-ms-identifiers:
            - dataFlowName
            - sessionId
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    DataFlowDebugSessionInfo:
      description: Data flow debug session info.
      type: object
      properties:
        dataFlowName:
          description: The name of the data flow.
          type: string
        computeType:
          description: Compute type of the cluster.
          type: string
        coreCount:
          description: Core count of the cluster.
          type: integer
        nodeCount:
          description: Node count of the cluster. (deprecated property)
          type: integer
        integrationRuntimeName:
          description: Attached integration runtime name of data flow debug session.
          type: string
        sessionId:
          description: The ID of data flow debug session.
          type: string
        startTime:
          description: Start time of data flow debug session.
          type: string
        timeToLiveInMinutes:
          description: Compute type of the cluster.
          type: integer
        lastActivityTime:
          description: Last activity time of data flow debug session.
          type: string
      additionalProperties:
        type: object
    GetDataFactoryOperationStatusResponse:
      description: Response body structure for get data factory operation status.
      type: object
      properties:
        status:
          description: Status of the operation.
          type: string
      additionalProperties:
        type: object
    DataFlowResource:
      description: Data flow resource type.
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/DataFlow'
          description: Data flow properties.
      required:
        - properties
    DataFlowDebugResource:
      description: Data flow debug resource.
      allOf:
        - $ref: '#/components/schemas/SubResourceDebugResource'
      properties:
        properties:
          $ref: '#/components/schemas/DataFlow'
          description: Data flow properties.
      required:
        - properties
    DataFlowReference:
      description: Data flow reference type.
      properties:
        type:
          type: string
          description: Data flow reference type.
          enum:
            - DataFlowReference
          x-ms-enum:
            name: DataFlowReferenceType
            modelAsString: true
        referenceName:
          type: string
          description: Reference data flow name.
        datasetParameters:
          type: object
          description: Reference data flow parameters from dataset.
        parameters:
          $ref: '#/components/schemas/ParameterValueSpecification'
          description: Data flow parameters
      additionalProperties:
        type: object
      required:
        - type
        - referenceName
    managedPrivateEndpointListResponse:
      description: A list of managed private endpoint resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of managed private endpoints.
          items:
            $ref: '#/components/schemas/ManagedPrivateEndpointResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    ManagedPrivateEndpointResource:
      description: Managed private endpoint resource type.
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/ManagedPrivateEndpoint'
          description: Managed private endpoint properties.
      required:
        - properties
    ManagedVirtualNetworkListResponse:
      description: A list of managed Virtual Network resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of managed Virtual Networks.
          items:
            $ref: '#/components/schemas/ManagedVirtualNetworkResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    ManagedVirtualNetworkReference:
      description: Managed Virtual Network reference type.
      properties:
        type:
          type: string
          description: Managed Virtual Network reference type.
          enum:
            - ManagedVirtualNetworkReference
          x-ms-enum:
            name: ManagedVirtualNetworkReferenceType
            modelAsString: true
        referenceName:
          type: string
          description: Reference ManagedVirtualNetwork name.
      required:
        - type
        - referenceName
    ManagedVirtualNetworkResource:
      description: Managed Virtual Network resource type.
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/ManagedVirtualNetwork'
          description: Managed Virtual Network properties.
      required:
        - properties
    PrivateEndpointConnectionListResponse:
      description: A list of linked service resources.
      type: object
      required:
        - value
      properties:
        value:
          type: array
          description: List of Private Endpoint Connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        nextLink:
          description: The link to the next page of results, if any remaining results exist.
          type: string
    PrivateEndpointConnectionResource:
      description: Private Endpoint Connection ARM resource.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/RemotePrivateEndpointConnection'
          description: Core resource properties
    RemotePrivateEndpointConnection:
      description: A remote private endpoint connection
      type: object
      properties:
        provisioningState:
          type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/ArmIdWrapper'
          description: PrivateEndpoint of a remote private endpoint connection
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkConnectionState'
    ArmIdWrapper:
      description: A wrapper for an ARM resource id
      type: object
      properties:
        id:
          type: string
          readOnly: true
    PrivateLinkConnectionState:
      description: The state of a private link connection
      type: object
      properties:
        status:
          description: Status of a private link connection
          type: string
        description:
          description: Description of a private link connection
          type: string
        actionsRequired:
          description: ActionsRequired for a private link connection
          type: string
    PrivateLinkConnectionApprovalRequestResource:
      description: Private Endpoint Connection Approval ARM resource.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkConnectionApprovalRequest'
          description: Core resource properties
    PrivateLinkConnectionApprovalRequest:
      description: A request to approve or reject a private endpoint connection
      type: object
      properties:
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkConnectionState'
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private endpoint.
    PrivateEndpoint:
      description: Private endpoint which a connection belongs to.
      type: object
      properties:
        id:
          description: The resource Id for private endpoint
          type: string
    PrivateLinkResourcesWrapper:
      description: Wrapper for a collection of private link resources
      required:
        - value
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
    PrivateLinkResource:
      description: A private link resource
      type: object
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Core resource properties
    PrivateLinkResourceProperties:
      description: Properties of a private link resource
      type: object
      properties:
        groupId:
          description: GroupId of a private link resource
          type: string
          readOnly: true
        requiredMembers:
          description: RequiredMembers of a private link resource
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          description: RequiredZoneNames of a private link resource
          type: array
          items:
            type: string
          readOnly: true
    CredentialReference:
      description: Credential reference type.
      type: object
      properties:
        type:
          type: string
          description: Credential reference type.
          enum:
            - CredentialReference
          x-ms-enum:
            name: CredentialReferenceType
            modelAsString: true
        referenceName:
          type: string
          description: Reference credential name.
      additionalProperties:
        type: object
      required:
        - type
        - referenceName
    CredentialResource:
      description: Credential resource type.
      type: object
      allOf:
        - $ref: '#/components/schemas/SubResource'
      properties:
        properties:
          $ref: '#/components/schemas/Credential'
          description: Properties of credentials.
      required:
        - properties
    Dataset:
      description: The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Type of dataset.
        description:
          description: Dataset description.
          type: string
        structure:
          type: object
          description: 'Columns that define the structure of the dataset. Type: array (or Expression with resultType array), itemType: DatasetDataElement.'
        schema:
          type: object
          description: 'Columns that define the physical type schema of the dataset. Type: array (or Expression with resultType array), itemType: DatasetSchemaDataElement.'
        linkedServiceName:
          description: Linked service reference.
          $ref: '#/components/schemas/LinkedServiceReference'
        parameters:
          $ref: '#/components/schemas/ParameterDefinitionSpecification'
          description: Parameters for dataset.
        annotations:
          description: List of tags that can be used for describing the Dataset.
          type: array
          items:
            type: object
          x-ms-identifiers: []
        folder:
          description: The folder that this Dataset is in. If not specified, Dataset will appear at the root level.
          type: object
          properties:
            name:
              description: The name of the folder that this Dataset is in.
              type: string
      additionalProperties:
        type: object
      required:
        - type
        - linkedServiceName
    DatasetLocation:
      description: Dataset location.
      discriminator:
        propertyName: type
      type: object
      properties:
        type:
          type: string
          description: Type of dataset storage location.
        folderPath:
          type: object
          description: 'Specify the folder path of dataset. Type: string (or Expression with resultType string)'
        fileName:
          type: object
          description: 'Specify the file name of dataset. Type: string (or Expression with resultType string).'
      additionalProperties:
        type: object
      required:
        - type
    AzureBlobStorageLocation:
      description: The location of azure blob dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
      properties:
        container:
          type: object
          description: 'Specify the container of azure blob. Type: string (or Expression with resultType string).'
    AzureBlobFSLocation:
      description: The location of azure blobFS dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
      properties:
        fileSystem:
          type: object
          description: 'Specify the fileSystem of azure blobFS. Type: string (or Expression with resultType string).'
    AzureDataLakeStoreLocation:
      description: The location of azure data lake store dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
    AmazonS3Location:
      description: The location of amazon S3 dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
      properties:
        bucketName:
          type: object
          description: 'Specify the bucketName of amazon S3. Type: string (or Expression with resultType string)'
        version:
          type: object
          description: 'Specify the version of amazon S3. Type: string (or Expression with resultType string).'
    FileServerLocation:
      description: The location of file server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
    AzureFileStorageLocation:
      description: The location of file server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
    AmazonS3CompatibleLocation:
      description: The location of Amazon S3 Compatible dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
      properties:
        bucketName:
          type: object
          description: 'Specify the bucketName of Amazon S3 Compatible. Type: string (or Expression with resultType string)'
        version:
          type: object
          description: 'Specify the version of Amazon S3 Compatible. Type: string (or Expression with resultType string).'
    OracleCloudStorageLocation:
      description: The location of Oracle Cloud Storage dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
      properties:
        bucketName:
          type: object
          description: 'Specify the bucketName of Oracle Cloud Storage. Type: string (or Expression with resultType string)'
        version:
          type: object
          description: 'Specify the version of Oracle Cloud Storage. Type: string (or Expression with resultType string).'
    GoogleCloudStorageLocation:
      description: The location of Google Cloud Storage dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
      properties:
        bucketName:
          type: object
          description: 'Specify the bucketName of Google Cloud Storage. Type: string (or Expression with resultType string)'
        version:
          type: object
          description: 'Specify the version of Google Cloud Storage. Type: string (or Expression with resultType string).'
    FtpServerLocation:
      description: The location of ftp server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
    SftpLocation:
      description: The location of SFTP dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
    HttpServerLocation:
      description: The location of http server.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
      properties:
        relativeUrl:
          type: object
          description: 'Specify the relativeUrl of http server. Type: string (or Expression with resultType string)'
    HdfsLocation:
      description: The location of HDFS.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetLocation'
    DatasetDataElement:
      description: Columns that define the structure of the dataset.
      type: object
      properties:
        name:
          type: object
          description: 'Name of the column. Type: string (or Expression with resultType string).'
        type:
          type: object
          description: 'Type of the column. Type: string (or Expression with resultType string).'
    DatasetSchemaDataElement:
      description: Columns that define the physical type schema of the dataset.
      type: object
      properties:
        name:
          type: object
          description: 'Name of the schema column. Type: string (or Expression with resultType string).'
        type:
          type: object
          description: 'Type of the schema column. Type: string (or Expression with resultType string).'
      additionalProperties:
        type: object
    DatasetStorageFormat:
      discriminator:
        propertyName: type
      description: The format definition of a storage.
      type: object
      properties:
        type:
          type: string
          description: Type of dataset storage format.
        serializer:
          type: object
          description: 'Serializer. Type: string (or Expression with resultType string).'
        deserializer:
          type: object
          description: 'Deserializer. Type: string (or Expression with resultType string).'
      additionalProperties:
        type: object
      required:
        - type
    TextFormat:
      description: The data stored in text format.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetStorageFormat'
      properties:
        columnDelimiter:
          type: object
          description: 'The column delimiter. Type: string (or Expression with resultType string).'
        rowDelimiter:
          type: object
          description: 'The row delimiter. Type: string (or Expression with resultType string).'
        escapeChar:
          type: object
          description: 'The escape character. Type: string (or Expression with resultType string).'
        quoteChar:
          type: object
          description: 'The quote character. Type: string (or Expression with resultType string).'
        nullValue:
          type: object
          description: 'The null value string. Type: string (or Expression with resultType string).'
        encodingName:
          type: object
          description: 'The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).'
        treatEmptyAsNull:
          type: object
          description: 'Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).'
        skipLineCount:
          type: object
          description: 'The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).'
        firstRowAsHeader:
          type: object
          description: 'When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).'
    JsonFormat:
      description: The data stored in JSON format.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetStorageFormat'
      properties:
        filePattern:
          type: object
          description: File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
        nestingSeparator:
          type: object
          description: 'The character used to separate nesting levels. Default value is ''.'' (dot). Type: string (or Expression with resultType string).'
        encodingName:
          type: object
          description: 'The code page name of the preferred encoding. If not provided, the default value is ''utf-8'', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the ''Name'' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).'
        jsonNodeReference:
          type: object
          description: 'The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).'
        jsonPathDefinition:
          type: object
          description: 'The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).'
    JsonFormatFilePattern:
      description: JSON format file pattern. A property of JsonFormat.
      type: string
      enum:
        - setOfObjects
        - arrayOfObjects
      x-ms-enum:
        name: JsonFormatFilePattern
        modelAsString: true
    AvroFormat:
      description: The data stored in Avro format.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetStorageFormat'
    OrcFormat:
      description: The data stored in Optimized Row Columnar (ORC) format.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetStorageFormat'
    ParquetFormat:
      description: The data stored in Parquet format.
      type: object
      allOf:
        - $ref: '#/components/schemas/DatasetStorageFormat'
    DatasetCompression:
      description: The compression method used on a dataset.
      type: object
      properties:
        type:
          type: object
          description: 'Type of dataset compression. Type: string (or Expression with resultType string).'
        level:
          type: object
          description: 'The dataset compression level. Type: string (or Expression with resultType string).'
      additionalProperties:
        type: object
      required:
        - type
    CompressionLevel:
      title: Microsoft.Azure.Management.DataFactories.Models.CompressionLevel
      description: All available compression levels.
      type: string
      enum:
        - Optimal
        - Fastest
      x-ms-enum:
        name: DatasetCompressionLevel
        modelAsString: true
    AmazonS3Dataset:
      x-ms-discriminator-value: AmazonS3Object
      description: A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Amazon S3 dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonS3DatasetTypeProperties'
      required:
        - typeProperties
    AmazonS3DatasetTypeProperties:
      description: Amazon S3 dataset properties.
      properties:
        bucketName:
          type: object
          description: 'The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).'
        key:
          type: object
          description: 'The key of the Amazon S3 object. Type: string (or Expression with resultType string).'
        prefix:
          type: object
          description: 'The prefix filter for the S3 object name. Type: string (or Expression with resultType string).'
        version:
          type: object
          description: 'The version for the S3 object. Type: string (or Expression with resultType string).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of S3 object''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of S3 object''s modified datetime. Type: string (or Expression with resultType string).'
        format:
          description: The format of files.
          $ref: '#/components/schemas/DatasetStorageFormat'
        compression:
          description: The data compression method used for the Amazon S3 object.
          $ref: '#/components/schemas/DatasetCompression'
      required:
        - bucketName
    AvroDataset:
      x-ms-discriminator-value: Avro
      description: Avro dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Avro dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AvroDatasetTypeProperties'
    AvroDatasetTypeProperties:
      description: Avro dataset properties.
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the avro storage.
        avroCompressionCodec:
          type: object
          description: 'The data avroCompressionCodec. Type: string (or Expression with resultType string).'
        avroCompressionLevel:
          type: integer
          minimum: 1
          maximum: 9
      required:
        - location
    AvroCompressionCodec:
      type: string
      enum:
        - none
        - deflate
        - snappy
        - xz
        - bzip2
      x-ms-enum:
        name: avroCompressionCodec
        modelAsString: true
    ExcelDataset:
      x-ms-discriminator-value: Excel
      description: Excel dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Excel dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ExcelDatasetTypeProperties'
    ExcelDatasetTypeProperties:
      description: Excel dataset properties.
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the excel storage.
        sheetName:
          type: object
          description: 'The sheet name of excel file. Type: string (or Expression with resultType string).'
        sheetIndex:
          type: object
          description: 'The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)'
        range:
          type: object
          description: 'The partial data of one sheet. Type: string (or Expression with resultType string).'
        firstRowAsHeader:
          type: object
          description: 'When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).'
        compression:
          description: The data compression method used for the json dataset.
          $ref: '#/components/schemas/DatasetCompression'
        nullValue:
          type: object
          description: 'The null value string. Type: string (or Expression with resultType string).'
      required:
        - location
    ParquetDataset:
      x-ms-discriminator-value: Parquet
      description: Parquet dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Parquet dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ParquetDatasetTypeProperties'
    ParquetDatasetTypeProperties:
      description: Parquet dataset properties.
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the parquet storage.
        compressionCodec:
          type: object
          description: 'The data compressionCodec. Type: string (or Expression with resultType string).'
      required:
        - location
    DelimitedTextDataset:
      x-ms-discriminator-value: DelimitedText
      description: Delimited text dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Delimited text dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DelimitedTextDatasetTypeProperties'
    DelimitedTextDatasetTypeProperties:
      description: DelimitedText dataset properties.
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the delimited text storage.
        columnDelimiter:
          type: object
          description: 'The column delimiter. Type: string (or Expression with resultType string).'
        rowDelimiter:
          type: object
          description: 'The row delimiter. Type: string (or Expression with resultType string).'
        encodingName:
          type: object
          description: 'The code page name of the preferred encoding. If miss, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).'
        compressionCodec:
          type: object
          description: 'The data compressionCodec. Type: string (or Expression with resultType string).'
        compressionLevel:
          type: object
          description: The data compression method used for DelimitedText.
        quoteChar:
          type: object
          description: 'The quote character. Type: string (or Expression with resultType string).'
        escapeChar:
          type: object
          description: 'The escape character. Type: string (or Expression with resultType string).'
        firstRowAsHeader:
          type: object
          description: 'When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).'
        nullValue:
          type: object
          description: 'The null value string. Type: string (or Expression with resultType string).'
      required:
        - location
    CompressionCodec:
      description: All available compressionCodec values.
      type: string
      enum:
        - none
        - lzo
        - bzip2
        - gzip
        - deflate
        - zipDeflate
        - snappy
        - lz4
        - tar
        - tarGZip
      x-ms-enum:
        name: CompressionCodec
        modelAsString: true
    JsonDataset:
      x-ms-discriminator-value: Json
      description: Json dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Json dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JsonDatasetTypeProperties'
    JsonDatasetTypeProperties:
      description: Json dataset properties.
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the json data storage.
        encodingName:
          type: object
          description: 'The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).'
        compression:
          description: The data compression method used for the json dataset.
          $ref: '#/components/schemas/DatasetCompression'
      required:
        - location
    XmlDataset:
      x-ms-discriminator-value: Xml
      description: Xml dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Xml dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/XmlDatasetTypeProperties'
    XmlDatasetTypeProperties:
      description: Xml dataset properties.
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the json data storage.
        encodingName:
          type: object
          description: 'The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).'
        nullValue:
          type: object
          description: 'The null value string. Type: string (or Expression with resultType string).'
        compression:
          description: The data compression method used for the json dataset.
          $ref: '#/components/schemas/DatasetCompression'
      required:
        - location
    OrcDataset:
      x-ms-discriminator-value: Orc
      description: ORC dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: ORC dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OrcDatasetTypeProperties'
    OrcDatasetTypeProperties:
      description: ORC dataset properties.
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the ORC data storage.
        orcCompressionCodec:
          type: object
          description: 'The data orcCompressionCodec. Type: string (or Expression with resultType string).'
      required:
        - location
    OrcCompressionCodec:
      type: string
      enum:
        - none
        - zlib
        - snappy
        - lzo
      x-ms-enum:
        name: orcCompressionCodec
        modelAsString: true
    BinaryDataset:
      x-ms-discriminator-value: Binary
      description: Binary dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Binary dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BinaryDatasetTypeProperties'
    BinaryDatasetTypeProperties:
      description: Binary dataset properties.
      type: object
      properties:
        location:
          $ref: '#/components/schemas/DatasetLocation'
          description: The location of the Binary storage.
        compression:
          description: The data compression method used for the binary dataset.
          $ref: '#/components/schemas/DatasetCompression'
      required:
        - location
    AzureBlobDataset:
      x-ms-discriminator-value: AzureBlob
      description: The Azure Blob storage.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure Blob dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureBlobDatasetTypeProperties'
    AzureBlobDatasetTypeProperties:
      description: Azure Blob dataset properties.
      properties:
        folderPath:
          type: object
          description: 'The path of the Azure Blob storage. Type: string (or Expression with resultType string).'
        tableRootLocation:
          type: object
          description: 'The root of blob path. Type: string (or Expression with resultType string).'
        fileName:
          type: object
          description: 'The name of the Azure Blob. Type: string (or Expression with resultType string).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of Azure Blob''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of Azure Blob''s modified datetime. Type: string (or Expression with resultType string).'
        format:
          description: The format of the Azure Blob storage.
          $ref: '#/components/schemas/DatasetStorageFormat'
        compression:
          description: The data compression method used for the blob storage.
          $ref: '#/components/schemas/DatasetCompression'
    AzureTableDataset:
      x-ms-discriminator-value: AzureTable
      description: The Azure Table storage dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure Table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureTableDatasetTypeProperties'
      required:
        - typeProperties
    AzureTableDatasetTypeProperties:
      description: Azure Table dataset properties.
      properties:
        tableName:
          type: object
          description: 'The table name of the Azure Table storage. Type: string (or Expression with resultType string).'
      required:
        - tableName
    AzureSqlTableDataset:
      x-ms-discriminator-value: AzureSqlTable
      description: The Azure SQL Server database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure SQL dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSqlTableDatasetTypeProperties'
    AzureSqlTableDatasetTypeProperties:
      description: Azure SQL dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        schema:
          type: object
          description: 'The schema name of the Azure SQL database. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the Azure SQL database. Type: string (or Expression with resultType string).'
    AzureSqlMITableDataset:
      x-ms-discriminator-value: AzureSqlMITable
      description: The Azure SQL Managed Instance dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure SQL Managed Instance dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSqlMITableDatasetTypeProperties'
    AzureSqlMITableDatasetTypeProperties:
      description: Azure SQL Managed Instance dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        schema:
          type: object
          description: 'The schema name of the Azure SQL Managed Instance. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the Azure SQL Managed Instance dataset. Type: string (or Expression with resultType string).'
    AzureSqlDWTableDataset:
      x-ms-discriminator-value: AzureSqlDWTable
      description: The Azure SQL Data Warehouse dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure SQL Data Warehouse dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSqlDWTableDatasetTypeProperties'
    AzureSqlDWTableDatasetTypeProperties:
      description: Azure SQL Data Warehouse dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        schema:
          type: object
          description: 'The schema name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).'
    CassandraTableDataset:
      x-ms-discriminator-value: CassandraTable
      description: The Cassandra database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Cassandra dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CassandraTableDatasetTypeProperties'
    CassandraTableDatasetTypeProperties:
      description: Cassandra dataset properties.
      properties:
        tableName:
          type: object
          description: 'The table name of the Cassandra database. Type: string (or Expression with resultType string).'
        keyspace:
          type: object
          description: 'The keyspace of the Cassandra database. Type: string (or Expression with resultType string).'
    CustomDataset:
      description: The custom dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Custom dataset properties.
          x-ms-client-flatten: true
          type: object
    CosmosDbSqlApiCollectionDataset:
      x-ms-discriminator-value: CosmosDbSqlApiCollection
      description: Microsoft Azure CosmosDB (SQL API) Collection dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: CosmosDB (SQL API) Collection dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CosmosDbSqlApiCollectionDatasetTypeProperties'
      required:
        - typeProperties
    CosmosDbSqlApiCollectionDatasetTypeProperties:
      description: CosmosDB (SQL API) Collection dataset properties.
      properties:
        collectionName:
          type: object
          description: 'CosmosDB (SQL API) collection name. Type: string (or Expression with resultType string).'
      required:
        - collectionName
    DocumentDbCollectionDataset:
      x-ms-discriminator-value: DocumentDbCollection
      description: Microsoft Azure Document Database Collection dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: DocumentDB Collection dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DocumentDbCollectionDatasetTypeProperties'
      required:
        - typeProperties
    DocumentDbCollectionDatasetTypeProperties:
      description: DocumentDB Collection dataset properties.
      properties:
        collectionName:
          type: object
          description: 'Document Database collection name. Type: string (or Expression with resultType string).'
      required:
        - collectionName
    DynamicsEntityDataset:
      x-ms-discriminator-value: DynamicsEntity
      description: The Dynamics entity dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Dynamics entity dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DynamicsEntityDatasetTypeProperties'
    DynamicsEntityDatasetTypeProperties:
      description: Dynamics entity dataset properties.
      properties:
        entityName:
          type: object
          description: 'The logical name of the entity. Type: string (or Expression with resultType string).'
    DynamicsCrmEntityDataset:
      x-ms-discriminator-value: DynamicsCrmEntity
      description: The Dynamics CRM entity dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Dynamics CRM entity dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DynamicsCrmEntityDatasetTypeProperties'
    DynamicsCrmEntityDatasetTypeProperties:
      description: Dynamics CRM entity dataset properties.
      properties:
        entityName:
          type: object
          description: 'The logical name of the entity. Type: string (or Expression with resultType string).'
    CommonDataServiceForAppsEntityDataset:
      x-ms-discriminator-value: CommonDataServiceForAppsEntity
      description: The Common Data Service for Apps entity dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Common Data Service for Apps entity dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommonDataServiceForAppsEntityDatasetTypeProperties'
    CommonDataServiceForAppsEntityDatasetTypeProperties:
      description: Common Data Service for Apps entity dataset properties.
      properties:
        entityName:
          type: object
          description: 'The logical name of the entity. Type: string (or Expression with resultType string).'
    AzureDataLakeStoreDataset:
      x-ms-discriminator-value: AzureDataLakeStoreFile
      description: Azure Data Lake Store dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure Data Lake Store dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDataLakeStoreDatasetTypeProperties'
    AzureDataLakeStoreDatasetTypeProperties:
      description: Azure Data Lake Store dataset properties.
      properties:
        folderPath:
          type: object
          description: 'Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).'
        fileName:
          type: object
          description: 'The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).'
        format:
          description: The format of the Data Lake Store.
          $ref: '#/components/schemas/DatasetStorageFormat'
        compression:
          description: The data compression method used for the item(s) in the Azure Data Lake Store.
          $ref: '#/components/schemas/DatasetCompression'
    AzureBlobFSDataset:
      x-ms-discriminator-value: AzureBlobFSFile
      description: The Azure Data Lake Storage Gen2 storage.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure Data Lake Storage Gen2 dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureBlobFSDatasetTypeProperties'
    AzureBlobFSDatasetTypeProperties:
      description: Azure Data Lake Storage Gen2 dataset properties.
      properties:
        folderPath:
          type: object
          description: 'The path of the Azure Data Lake Storage Gen2 storage. Type: string (or Expression with resultType string).'
        fileName:
          type: object
          description: 'The name of the Azure Data Lake Storage Gen2. Type: string (or Expression with resultType string).'
        format:
          description: The format of the Azure Data Lake Storage Gen2 storage.
          $ref: '#/components/schemas/DatasetStorageFormat'
        compression:
          description: The data compression method used for the blob storage.
          $ref: '#/components/schemas/DatasetCompression'
    Office365Dataset:
      x-ms-discriminator-value: Office365Table
      description: The Office365 account.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Office365 dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Office365DatasetTypeProperties'
      required:
        - typeProperties
    Office365DatasetTypeProperties:
      description: Office365 dataset properties.
      properties:
        tableName:
          type: object
          description: 'Name of the dataset to extract from Office 365. Type: string (or Expression with resultType string).'
        predicate:
          type: object
          description: 'A predicate expression that can be used to filter the specific rows to extract from Office 365. Type: string (or Expression with resultType string).'
      required:
        - tableName
    FileShareDataset:
      x-ms-discriminator-value: FileShare
      description: An on-premises file system dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: On-premises file system dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FileShareDatasetTypeProperties'
    FileShareDatasetTypeProperties:
      description: On-premises file system dataset properties.
      properties:
        folderPath:
          type: object
          description: 'The path of the on-premises file system. Type: string (or Expression with resultType string).'
        fileName:
          type: object
          description: 'The name of the on-premises file system. Type: string (or Expression with resultType string).'
        modifiedDatetimeStart:
          type: object
          description: 'The start of file''s modified datetime. Type: string (or Expression with resultType string).'
        modifiedDatetimeEnd:
          type: object
          description: 'The end of file''s modified datetime. Type: string (or Expression with resultType string).'
        format:
          description: The format of the files.
          $ref: '#/components/schemas/DatasetStorageFormat'
        fileFilter:
          type: object
          description: 'Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).'
        compression:
          description: The data compression method used for the file system.
          $ref: '#/components/schemas/DatasetCompression'
    MongoDbCollectionDataset:
      x-ms-discriminator-value: MongoDbCollection
      description: The MongoDB database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: MongoDB database dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoDbCollectionDatasetTypeProperties'
      required:
        - typeProperties
    MongoDbCollectionDatasetTypeProperties:
      description: MongoDB database dataset properties.
      properties:
        collectionName:
          type: object
          description: 'The table name of the MongoDB database. Type: string (or Expression with resultType string).'
      required:
        - collectionName
    MongoDbAtlasCollectionDataset:
      x-ms-discriminator-value: MongoDbAtlasCollection
      description: The MongoDB Atlas database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: MongoDB Atlas database dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoDbAtlasCollectionDatasetTypeProperties'
      required:
        - typeProperties
    MongoDbAtlasCollectionDatasetTypeProperties:
      description: MongoDB Atlas database dataset properties.
      properties:
        collection:
          type: object
          description: 'The collection name of the MongoDB Atlas database. Type: string (or Expression with resultType string).'
      required:
        - collection
    MongoDbV2CollectionDataset:
      x-ms-discriminator-value: MongoDbV2Collection
      description: The MongoDB database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: MongoDB database dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoDbV2CollectionDatasetTypeProperties'
      required:
        - typeProperties
    MongoDbV2CollectionDatasetTypeProperties:
      description: MongoDB database dataset properties.
      properties:
        collection:
          type: object
          description: 'The collection name of the MongoDB database. Type: string (or Expression with resultType string).'
      required:
        - collection
    CosmosDbMongoDbApiCollectionDataset:
      x-ms-discriminator-value: CosmosDbMongoDbApiCollection
      description: The CosmosDB (MongoDB API) database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: CosmosDB (MongoDB API) database dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CosmosDbMongoDbApiCollectionDatasetTypeProperties'
      required:
        - typeProperties
    CosmosDbMongoDbApiCollectionDatasetTypeProperties:
      description: CosmosDB (MongoDB API) database dataset properties.
      properties:
        collection:
          type: object
          description: 'The collection name of the CosmosDB (MongoDB API) database. Type: string (or Expression with resultType string).'
      required:
        - collection
    ODataResourceDataset:
      x-ms-discriminator-value: ODataResource
      description: The Open Data Protocol (OData) resource dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: OData dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ODataResourceDatasetTypeProperties'
    ODataResourceDatasetTypeProperties:
      description: OData dataset properties.
      properties:
        path:
          type: object
          description: 'The OData resource path. Type: string (or Expression with resultType string).'
    OracleTableDataset:
      x-ms-discriminator-value: OracleTable
      description: The on-premises Oracle database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: On-premises Oracle dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OracleTableDatasetTypeProperties'
    OracleTableDatasetTypeProperties:
      description: On-premises Oracle dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        schema:
          type: object
          description: 'The schema name of the on-premises Oracle database. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).'
    AmazonRdsForOracleTableDataset:
      x-ms-discriminator-value: AmazonRdsForOracleTable
      description: The AmazonRdsForOracle database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: AmazonRdsForOracle dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonRdsForOracleTableDatasetTypeProperties'
    AmazonRdsForOracleTableDatasetTypeProperties:
      description: AmazonRdsForOracle dataset properties.
      type: object
      properties:
        schema:
          type: object
          description: 'The schema name of the AmazonRdsForOracle database. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the AmazonRdsForOracle database. Type: string (or Expression with resultType string).'
    TeradataTableDataset:
      x-ms-discriminator-value: TeradataTable
      description: The Teradata database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Teradata dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/TeradataTableDatasetTypeProperties'
    TeradataTableDatasetTypeProperties:
      description: Teradata dataset properties.
      properties:
        database:
          type: object
          description: 'The database name of Teradata. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of Teradata. Type: string (or Expression with resultType string).'
    AzureMySqlTableDataset:
      x-ms-discriminator-value: AzureMySqlTable
      description: The Azure MySQL database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure MySQL database dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureMySqlTableDatasetTypeProperties'
      required:
        - typeProperties
    AzureMySqlTableDatasetTypeProperties:
      description: Azure MySQL database dataset properties.
      properties:
        tableName:
          type: object
          description: 'The Azure MySQL database table name. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The name of Azure MySQL database table. Type: string (or Expression with resultType string).'
    AmazonRedshiftTableDataset:
      x-ms-discriminator-value: AmazonRedshiftTable
      description: The Amazon Redshift table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Amazon Redshift table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonRedshiftTableDatasetTypeProperties'
    AmazonRedshiftTableDatasetTypeProperties:
      description: Amazon Redshift table dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The Amazon Redshift table name. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The Amazon Redshift schema name. Type: string (or Expression with resultType string).'
    Db2TableDataset:
      x-ms-discriminator-value: Db2Table
      description: The Db2 table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Db2 table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Db2TableDatasetTypeProperties'
    Db2TableDatasetTypeProperties:
      description: Db2 table dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        schema:
          type: object
          description: 'The Db2 schema name. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The Db2 table name. Type: string (or Expression with resultType string).'
    RelationalTableDataset:
      x-ms-discriminator-value: RelationalTable
      description: The relational table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Relational table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RelationalTableDatasetTypeProperties'
    RelationalTableDatasetTypeProperties:
      description: Relational table dataset properties.
      properties:
        tableName:
          type: object
          description: 'The relational table name. Type: string (or Expression with resultType string).'
    InformixTableDataset:
      x-ms-discriminator-value: InformixTable
      description: The Informix table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Informix table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/InformixTableDatasetTypeProperties'
    InformixTableDatasetTypeProperties:
      description: Informix table dataset properties.
      properties:
        tableName:
          type: object
          description: 'The Informix table name. Type: string (or Expression with resultType string).'
    OdbcTableDataset:
      x-ms-discriminator-value: OdbcTable
      description: The ODBC table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: ODBC table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/OdbcTableDatasetTypeProperties'
    OdbcTableDatasetTypeProperties:
      description: ODBC table dataset properties.
      properties:
        tableName:
          type: object
          description: 'The ODBC table name. Type: string (or Expression with resultType string).'
    MySqlTableDataset:
      x-ms-discriminator-value: MySqlTable
      description: The MySQL table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: MySQL table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MySqlTableDatasetTypeProperties'
    MySqlTableDatasetTypeProperties:
      description: MySql table dataset properties.
      properties:
        tableName:
          type: object
          description: 'The MySQL table name. Type: string (or Expression with resultType string).'
    PostgreSqlTableDataset:
      x-ms-discriminator-value: PostgreSqlTable
      description: The PostgreSQL table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: PostgreSQL table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PostgreSqlTableDatasetTypeProperties'
    PostgreSqlTableDatasetTypeProperties:
      description: PostgreSQL table dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The PostgreSQL table name. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The PostgreSQL schema name. Type: string (or Expression with resultType string).'
    MicrosoftAccessTableDataset:
      x-ms-discriminator-value: MicrosoftAccessTable
      description: The Microsoft Access table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Microsoft Access table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MicrosoftAccessTableDatasetTypeProperties'
    MicrosoftAccessTableDatasetTypeProperties:
      description: Microsoft Access table dataset properties.
      properties:
        tableName:
          type: object
          description: 'The Microsoft Access table name. Type: string (or Expression with resultType string).'
    SalesforceObjectDataset:
      x-ms-discriminator-value: SalesforceObject
      description: The Salesforce object dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Salesforce object dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SalesforceObjectDatasetTypeProperties'
    SalesforceObjectDatasetTypeProperties:
      description: Salesforce object dataset properties.
      properties:
        objectApiName:
          type: object
          description: 'The Salesforce object API name. Type: string (or Expression with resultType string).'
    SalesforceServiceCloudObjectDataset:
      x-ms-discriminator-value: SalesforceServiceCloudObject
      description: The Salesforce Service Cloud object dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Salesforce Service Cloud object dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SalesforceServiceCloudObjectDatasetTypeProperties'
    SalesforceServiceCloudObjectDatasetTypeProperties:
      description: Salesforce Service Cloud object dataset properties.
      properties:
        objectApiName:
          type: object
          description: 'The Salesforce Service Cloud object API name. Type: string (or Expression with resultType string).'
    SybaseTableDataset:
      x-ms-discriminator-value: SybaseTable
      description: The Sybase table dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Sybase table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SybaseTableDatasetTypeProperties'
    SybaseTableDatasetTypeProperties:
      description: Sybase table dataset properties.
      properties:
        tableName:
          type: object
          description: 'The Sybase table name. Type: string (or Expression with resultType string).'
    SapBwCubeDataset:
      x-ms-discriminator-value: SapBwCube
      description: The SAP BW cube dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties: {}
    SapCloudForCustomerResourceDataset:
      x-ms-discriminator-value: SapCloudForCustomerResource
      description: The path of the SAP Cloud for Customer OData entity.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: SAP Cloud For Customer OData resource dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapCloudForCustomerResourceDatasetTypeProperties'
      required:
        - typeProperties
    SapCloudForCustomerResourceDatasetTypeProperties:
      description: Sap Cloud For Customer OData resource dataset properties.
      properties:
        path:
          type: object
          description: 'The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).'
      required:
        - path
    SapEccResourceDataset:
      x-ms-discriminator-value: SapEccResource
      description: The path of the SAP ECC OData entity.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: SAP ECC OData resource dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapEccResourceDatasetTypeProperties'
      required:
        - typeProperties
    SapEccResourceDatasetTypeProperties:
      description: Sap ECC OData resource dataset properties.
      properties:
        path:
          type: object
          description: 'The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).'
      required:
        - path
    SapHanaTableDataset:
      x-ms-discriminator-value: SapHanaTable
      description: SAP HANA Table properties.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: SAP HANA Table properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapHanaTableDatasetTypeProperties'
    SapHanaTableDatasetTypeProperties:
      description: SAP HANA Table properties.
      properties:
        schema:
          type: object
          description: 'The schema name of SAP HANA. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of SAP HANA. Type: string (or Expression with resultType string).'
    SapOpenHubTableDataset:
      x-ms-discriminator-value: SapOpenHubTable
      description: Sap Business Warehouse Open Hub Destination Table properties.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Sap Business Warehouse Open Hub Destination Table properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapOpenHubTableDatasetTypeProperties'
      required:
        - typeProperties
    SapOpenHubTableDatasetTypeProperties:
      description: Sap Business Warehouse Open Hub Destination Table properties.
      properties:
        openHubDestinationName:
          type: object
          description: 'The name of the Open Hub Destination with destination type as Database Table. Type: string (or Expression with resultType string).'
        excludeLastRequest:
          type: object
          description: 'Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).'
        baseRequestId:
          type: object
          description: 'The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).'
      required:
        - openHubDestinationName
    SqlServerTableDataset:
      x-ms-discriminator-value: SqlServerTable
      description: The on-premises SQL Server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: On-premises SQL Server dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SqlServerTableDatasetTypeProperties'
    SqlServerTableDatasetTypeProperties:
      description: On-premises SQL Server dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        schema:
          type: object
          description: 'The schema name of the SQL Server dataset. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the SQL Server dataset. Type: string (or Expression with resultType string).'
    AmazonRdsForSqlServerTableDataset:
      x-ms-discriminator-value: AmazonRdsForSqlServerTable
      description: The Amazon RDS for SQL Server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: The Amazon RDS for SQL Server dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AmazonRdsForSqlServerTableDatasetTypeProperties'
    AmazonRdsForSqlServerTableDatasetTypeProperties:
      description: The Amazon RDS for SQL Server dataset properties.
      type: object
      properties:
        schema:
          type: object
          description: 'The schema name of the SQL Server dataset. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the SQL Server dataset. Type: string (or Expression with resultType string).'
    RestResourceDataset:
      x-ms-discriminator-value: RestResource
      description: A Rest service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RestResourceDatasetTypeProperties'
    RestResourceDatasetTypeProperties:
      description: Properties specific to this dataset type.
      properties:
        relativeUrl:
          type: object
          description: 'The relative URL to the resource that the RESTful API provides. Type: string (or Expression with resultType string).'
        requestMethod:
          type: object
          description: 'The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).'
        requestBody:
          type: object
          description: 'The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).'
        additionalHeaders:
          type: object
          description: 'The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).'
        paginationRules:
          type: object
          description: 'The pagination rules to compose next page requests. Type: string (or Expression with resultType string).'
    SapTableResourceDataset:
      x-ms-discriminator-value: SapTableResource
      description: SAP Table Resource properties.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: SAP Table Resource properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapTableResourceDatasetTypeProperties'
      required:
        - typeProperties
    SapTableResourceDatasetTypeProperties:
      description: SAP Table Resource properties.
      properties:
        tableName:
          type: object
          description: 'The name of the SAP Table. Type: string (or Expression with resultType string).'
      required:
        - tableName
    SapOdpResourceDataset:
      x-ms-discriminator-value: SapOdpResource
      description: SAP ODP Resource properties.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: SAP ODP Resource properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SapOdpResourceDatasetTypeProperties'
      required:
        - typeProperties
    SapOdpResourceDatasetTypeProperties:
      description: SAP ODP Resource properties.
      type: object
      properties:
        context:
          type: object
          description: 'The context of the SAP ODP Object. Type: string (or Expression with resultType string).'
        objectName:
          type: object
          description: 'The name of the SAP ODP Object. Type: string (or Expression with resultType string).'
      required:
        - context
        - objectName
    WebTableDataset:
      x-ms-discriminator-value: WebTable
      description: The dataset points to a HTML table in the web page.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Web table dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WebTableDatasetTypeProperties'
      required:
        - typeProperties
    WebTableDatasetTypeProperties:
      description: Web table dataset properties.
      properties:
        index:
          type: object
          description: 'The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.'
        path:
          type: object
          description: 'The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).'
      required:
        - index
    AzureSearchIndexDataset:
      x-ms-discriminator-value: AzureSearchIndex
      description: The Azure Search Index.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureSearchIndexDatasetTypeProperties'
      required:
        - typeProperties
    AzureSearchIndexDatasetTypeProperties:
      description: Properties specific to this dataset type.
      properties:
        indexName:
          type: object
          description: 'The name of the Azure Search Index. Type: string (or Expression with resultType string).'
      required:
        - indexName
    HttpDataset:
      x-ms-discriminator-value: HttpFile
      description: A file in an HTTP web server.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HttpDatasetTypeProperties'
    HttpDatasetTypeProperties:
      description: Properties specific to this dataset type.
      properties:
        relativeUrl:
          type: object
          description: 'The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).'
        requestMethod:
          type: object
          description: 'The HTTP method for the HTTP request. Type: string (or Expression with resultType string).'
        requestBody:
          type: object
          description: 'The body for the HTTP request. Type: string (or Expression with resultType string).'
        additionalHeaders:
          type: object
          description: "The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1\r\n...\r\nrequest-header-name-n:request-header-value-n Type: string (or Expression with resultType string)."
        format:
          description: The format of files.
          $ref: '#/components/schemas/DatasetStorageFormat'
        compression:
          description: The data compression method used on files.
          $ref: '#/components/schemas/DatasetCompression'
    GenericDatasetTypeProperties:
      description: Properties specific to this dataset type.
      properties:
        tableName:
          type: object
          description: 'The table name. Type: string (or Expression with resultType string).'
    AmazonMWSObjectDataset:
      x-ms-discriminator-value: AmazonMWSObject
      description: Amazon Marketplace Web Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    AzurePostgreSqlTableDataset:
      x-ms-discriminator-value: AzurePostgreSqlTable
      description: Azure PostgreSQL dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzurePostgreSqlTableDatasetTypeProperties'
    AzurePostgreSqlTableDatasetTypeProperties:
      description: Azure PostgreSQL dataset properties.
      properties:
        tableName:
          type: object
          description: 'The table name of the Azure PostgreSQL database which includes both schema and table. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the Azure PostgreSQL database. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Azure PostgreSQL database. Type: string (or Expression with resultType string).'
    ConcurObjectDataset:
      x-ms-discriminator-value: ConcurObject
      description: Concur Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    CouchbaseTableDataset:
      x-ms-discriminator-value: CouchbaseTable
      description: Couchbase server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    DrillTableDataset:
      x-ms-discriminator-value: DrillTable
      description: Drill server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DrillDatasetTypeProperties'
    DrillDatasetTypeProperties:
      description: Drill Dataset Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Drill. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Drill. Type: string (or Expression with resultType string).'
    EloquaObjectDataset:
      x-ms-discriminator-value: EloquaObject
      description: Eloqua server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    GoogleBigQueryObjectDataset:
      x-ms-discriminator-value: GoogleBigQueryObject
      description: Google BigQuery service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GoogleBigQueryDatasetTypeProperties'
    GoogleBigQueryDatasetTypeProperties:
      description: Google BigQuery Dataset Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using database + table properties instead.
        table:
          type: object
          description: 'The table name of the Google BigQuery. Type: string (or Expression with resultType string).'
        dataset:
          type: object
          description: 'The database name of the Google BigQuery. Type: string (or Expression with resultType string).'
    GreenplumTableDataset:
      x-ms-discriminator-value: GreenplumTable
      description: Greenplum Database dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GreenplumDatasetTypeProperties'
    GreenplumDatasetTypeProperties:
      description: Greenplum Dataset Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of Greenplum. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of Greenplum. Type: string (or Expression with resultType string).'
    HBaseObjectDataset:
      x-ms-discriminator-value: HBaseObject
      description: HBase server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    HiveObjectDataset:
      x-ms-discriminator-value: HiveObject
      description: Hive Server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HiveDatasetTypeProperties'
    HiveDatasetTypeProperties:
      description: Hive Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Hive. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Hive. Type: string (or Expression with resultType string).'
    HubspotObjectDataset:
      x-ms-discriminator-value: HubspotObject
      description: Hubspot Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    ImpalaObjectDataset:
      x-ms-discriminator-value: ImpalaObject
      description: Impala server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ImpalaDatasetTypeProperties'
    ImpalaDatasetTypeProperties:
      description: Impala Dataset Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Impala. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Impala. Type: string (or Expression with resultType string).'
    JiraObjectDataset:
      x-ms-discriminator-value: JiraObject
      description: Jira Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    MagentoObjectDataset:
      x-ms-discriminator-value: MagentoObject
      description: Magento server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    MariaDBTableDataset:
      x-ms-discriminator-value: MariaDBTable
      description: MariaDB server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    AzureMariaDBTableDataset:
      x-ms-discriminator-value: AzureMariaDBTable
      description: Azure Database for MariaDB dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    MarketoObjectDataset:
      x-ms-discriminator-value: MarketoObject
      description: Marketo server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    PaypalObjectDataset:
      x-ms-discriminator-value: PaypalObject
      description: Paypal Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    PhoenixObjectDataset:
      x-ms-discriminator-value: PhoenixObject
      description: Phoenix server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PhoenixDatasetTypeProperties'
    PhoenixDatasetTypeProperties:
      description: Phoenix Dataset Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Phoenix. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Phoenix. Type: string (or Expression with resultType string).'
    PrestoObjectDataset:
      x-ms-discriminator-value: PrestoObject
      description: Presto server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PrestoDatasetTypeProperties'
    PrestoDatasetTypeProperties:
      description: Presto Dataset Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Presto. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Presto. Type: string (or Expression with resultType string).'
    QuickBooksObjectDataset:
      x-ms-discriminator-value: QuickBooksObject
      description: QuickBooks server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    ServiceNowObjectDataset:
      x-ms-discriminator-value: ServiceNowObject
      description: ServiceNow server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    ShopifyObjectDataset:
      x-ms-discriminator-value: ShopifyObject
      description: Shopify Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    SparkObjectDataset:
      x-ms-discriminator-value: SparkObject
      description: Spark Server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SparkDatasetTypeProperties'
    SparkDatasetTypeProperties:
      description: Spark Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Spark. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Spark. Type: string (or Expression with resultType string).'
    SquareObjectDataset:
      x-ms-discriminator-value: SquareObject
      description: Square Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    XeroObjectDataset:
      x-ms-discriminator-value: XeroObject
      description: Xero Service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    ZohoObjectDataset:
      x-ms-discriminator-value: ZohoObject
      description: Zoho server dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    NetezzaTableDataset:
      x-ms-discriminator-value: NetezzaTable
      description: Netezza dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetezzaTableDatasetTypeProperties'
    NetezzaTableDatasetTypeProperties:
      description: Netezza dataset properties.
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Netezza. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Netezza. Type: string (or Expression with resultType string).'
    VerticaTableDataset:
      x-ms-discriminator-value: VerticaTable
      description: Vertica dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VerticaDatasetTypeProperties'
    VerticaDatasetTypeProperties:
      description: Vertica Properties
      properties:
        tableName:
          type: object
          description: This property will be retired. Please consider using schema + table properties instead.
        table:
          type: object
          description: 'The table name of the Vertica. Type: string (or Expression with resultType string).'
        schema:
          type: object
          description: 'The schema name of the Vertica. Type: string (or Expression with resultType string).'
    SalesforceMarketingCloudObjectDataset:
      x-ms-discriminator-value: SalesforceMarketingCloudObject
      description: Salesforce Marketing Cloud dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    ResponsysObjectDataset:
      x-ms-discriminator-value: ResponsysObject
      description: Responsys dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    DynamicsAXResourceDataset:
      x-ms-discriminator-value: DynamicsAXResource
      description: The path of the Dynamics AX OData entity.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Dynamics AX OData resource dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DynamicsAXResourceDatasetTypeProperties'
      required:
        - typeProperties
    DynamicsAXResourceDatasetTypeProperties:
      description: Dynamics AX OData resource dataset properties.
      properties:
        path:
          type: object
          description: 'The path of the Dynamics AX OData entity. Type: string (or Expression with resultType string).'
      required:
        - path
    OracleServiceCloudObjectDataset:
      x-ms-discriminator-value: OracleServiceCloudObject
      description: Oracle Service Cloud dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    AzureDataExplorerTableDataset:
      x-ms-discriminator-value: AzureDataExplorerTable
      description: The Azure Data Explorer (Kusto) dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Azure Data Explorer (Kusto) dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDataExplorerDatasetTypeProperties'
      required:
        - typeProperties
    AzureDataExplorerDatasetTypeProperties:
      description: Azure Data Explorer (Kusto) dataset properties.
      properties:
        table:
          type: object
          description: 'The table name of the Azure Data Explorer database. Type: string (or Expression with resultType string).'
    GoogleAdWordsObjectDataset:
      x-ms-discriminator-value: GoogleAdWordsObject
      description: Google AdWords service dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GenericDatasetTypeProperties'
    SnowflakeDataset:
      x-ms-discriminator-value: SnowflakeTable
      description: The snowflake dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Snowflake dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SnowflakeDatasetTypeProperties'
      required:
        - typeProperties
    SnowflakeDatasetTypeProperties:
      description: Snowflake dataset properties.
      properties:
        schema:
          type: object
          description: 'The schema name of the Snowflake database. Type: string (or Expression with resultType string).'
        table:
          type: object
          description: 'The table name of the Snowflake database. Type: string (or Expression with resultType string).'
    SharePointOnlineListResourceDataset:
      x-ms-discriminator-value: SharePointOnlineListResource
      description: The sharepoint online list resource dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Sharepoint online list dataset properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharePointOnlineListDatasetTypeProperties'
    SharePointOnlineListDatasetTypeProperties:
      description: Sharepoint online list dataset properties.
      properties:
        listName:
          type: object
          description: 'The name of the SharePoint Online list. Type: string (or Expression with resultType string).'
    AzureDatabricksDeltaLakeDataset:
      x-ms-discriminator-value: AzureDatabricksDeltaLakeDataset
      description: Azure Databricks Delta Lake dataset.
      type: object
      allOf:
        - $ref: '#/components/schemas/Dataset'
      properties:
        typeProperties:
          description: Properties specific to this dataset type.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AzureDatabricksDeltaLakeDatasetTypeProperties'
    AzureDatabricksDeltaLakeDatasetTypeProperties:
      description: Azure Databricks Delta Lake Dataset Properties
      properties:
        table:
          type: object
          description: 'The name of delta table. Type: string (or Expression with resultType string).'
        database:
          type: object
          description: 'The database name of delta table. Type: string (or Expression with resultType string).'
    Trigger:
      description: Azure data factory nested object which contains information about creating pipeline run
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Trigger type.
        description:
          description: Trigger description.
          type: string
        runtimeState:
          $ref: '#/components/schemas/TriggerRuntimeState'
          description: Indicates if trigger is running or not. Updated when Start/Stop APIs are called on the Trigger.
          readOnly: true
        annotations:
          description: List of tags that can be used for describing the trigger.
          type: array
          items:
            type: object
          x-ms-identifiers: []
      additionalProperties:
        type: object
      required:
        - type
    TriggerRuntimeState:
      type: string
      description: Enumerates possible state of Triggers.
      enum:
        - Started
        - Stopped
        - Disabled
      x-ms-enum:
        name: TriggerRuntimeState
        modelAsString: true
    MultiplePipelineTrigger:
      x-ms-discriminator-value: MultiplePipelineTrigger
      description: Base class for all triggers that support one to many model for trigger to pipeline.
      allOf:
        - $ref: '#/components/schemas/Trigger'
      properties:
        pipelines:
          type: array
          items:
            $ref: '#/components/schemas/TriggerPipelineReference'
          description: Pipelines that need to be started.
          x-ms-identifiers:
            - /pipelineReference/referenceName
    ScheduleTrigger:
      description: Trigger that creates pipeline runs periodically, on schedule.
      type: object
      allOf:
        - $ref: '#/components/schemas/MultiplePipelineTrigger'
      properties:
        typeProperties:
          description: Schedule Trigger properties.
          x-ms-client-flatten: true
          properties:
            recurrence:
              $ref: '#/components/schemas/ScheduleTriggerRecurrence'
              description: Recurrence schedule configuration.
          required:
            - recurrence
      required:
        - typeProperties
    ScheduleTriggerRecurrence:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/RecurrenceFrequency'
          description: The frequency.
        interval:
          type: integer
          format: int32
          description: The interval.
        startTime:
          type: string
          format: date-time
          description: The start time.
        endTime:
          type: string
          format: date-time
          description: The end time.
        timeZone:
          type: string
          description: The time zone.
        schedule:
          $ref: '#/components/schemas/RecurrenceSchedule'
          description: The recurrence schedule.
      additionalProperties:
        type: object
      description: The workflow trigger recurrence.
    RecurrenceFrequency:
      description: Enumerates possible frequency option for the schedule trigger.
      type: string
      enum:
        - NotSpecified
        - Minute
        - Hour
        - Day
        - Week
        - Month
        - Year
      x-ms-enum:
        name: RecurrenceFrequency
        modelAsString: true
    RecurrenceSchedule:
      type: object
      properties:
        minutes:
          type: array
          items:
            type: integer
            format: int32
          description: The minutes.
        hours:
          type: array
          items:
            type: integer
            format: int32
          description: The hours.
        weekDays:
          type: array
          items:
            type: string
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            x-ms-enum:
              name: DaysOfWeek
              modelAsString: false
          description: The days of the week.
        monthDays:
          type: array
          items:
            type: integer
            format: int32
          description: The month days.
        monthlyOccurrences:
          type: array
          items:
            $ref: '#/components/schemas/RecurrenceScheduleOccurrence'
          description: The monthly occurrences.
          x-ms-identifiers: []
      additionalProperties:
        type: object
      description: The recurrence schedule.
    RecurrenceScheduleOccurrence:
      type: object
      properties:
        day:
          $ref: '#/components/schemas/DayOfWeek'
          description: The day of the week.
        occurrence:
          type: integer
          format: int32
          description: The occurrence.
      additionalProperties:
        type: object
      description: The recurrence schedule occurrence.
    DayOfWeek:
      type: string
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      x-ms-enum:
        name: DayOfWeek
        modelAsString: false
      description: The days of the week.
    BlobTrigger:
      description: Trigger that runs every time the selected Blob container changes.
      type: object
      allOf:
        - $ref: '#/components/schemas/MultiplePipelineTrigger'
      properties:
        typeProperties:
          description: Blob Trigger properties.
          x-ms-client-flatten: true
          properties:
            folderPath:
              description: The path of the container/folder that will trigger the pipeline.
              type: string
            maxConcurrency:
              description: The max number of parallel files to handle when it is triggered.
              type: integer
            linkedService:
              description: The Azure Storage linked service reference.
              $ref: '#/components/schemas/LinkedServiceReference'
          required:
            - folderPath
            - maxConcurrency
            - linkedService
      required:
        - typeProperties
    BlobEventsTrigger:
      description: Trigger that runs every time a Blob event occurs.
      type: object
      allOf:
        - $ref: '#/components/schemas/MultiplePipelineTrigger'
      properties:
        typeProperties:
          description: Blob Events Trigger properties.
          x-ms-client-flatten: true
          properties:
            blobPathBeginsWith:
              description: 'The blob path must begin with the pattern provided for trigger to fire. For example, ''/records/blobs/december/'' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.'
              type: string
            blobPathEndsWith:
              description: 'The blob path must end with the pattern provided for trigger to fire. For example, ''december/boxes.csv'' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.'
              type: string
            ignoreEmptyBlobs:
              description: If set to true, blobs with zero bytes will be ignored.
              type: boolean
            events:
              description: The type of events that cause this trigger to fire.
              $ref: '#/components/schemas/BlobEventTypeArray'
            scope:
              description: The ARM resource ID of the Storage Account.
              type: string
          required:
            - events
            - scope
      required:
        - typeProperties
    BlobEventTypeArray:
      type: array
      items:
        type: string
        enum:
          - Microsoft.Storage.BlobCreated
          - Microsoft.Storage.BlobDeleted
        x-ms-enum:
          name: BlobEventTypes
          modelAsString: true
      description: Blob event types.
    CustomEventsTrigger:
      description: Trigger that runs every time a custom event is received.
      type: object
      allOf:
        - $ref: '#/components/schemas/MultiplePipelineTrigger'
      properties:
        typeProperties:
          description: Custom Events Trigger properties.
          x-ms-client-flatten: true
          properties:
            subjectBeginsWith:
              description: 'The event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.'
              type: string
            subjectEndsWith:
              description: 'The event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.'
              type: string
            events:
              description: The list of event types that cause this trigger to fire.
              type: array
              items:
                type: object
              x-ms-identifiers: []
            scope:
              description: The ARM resource ID of the Azure Event Grid Topic.
              type: string
          required:
            - events
            - scope
      required:
        - typeProperties
    TumblingWindowTrigger:
      description: Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
      type: object
      allOf:
        - $ref: '#/components/schemas/Trigger'
      properties:
        pipeline:
          $ref: '#/components/schemas/TriggerPipelineReference'
          description: Pipeline for which runs are created when an event is fired for trigger window that is ready.
        typeProperties:
          description: Tumbling Window Trigger properties.
          x-ms-client-flatten: true
          properties:
            frequency:
              $ref: '#/components/schemas/TumblingWindowFrequency'
              description: The frequency of the time windows.
            interval:
              type: integer
              format: int32
              description: The interval of the time windows. The minimum interval allowed is 15 Minutes.
            startTime:
              type: string
              format: date-time
              description: The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
            endTime:
              type: string
              format: date-time
              description: The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
            delay:
              type: object
              description: 'Specifies how long the trigger waits past due time before triggering new run. It doesn''t alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).'
            maxConcurrency:
              description: The max number of parallel time windows (ready for execution) for which a new run is triggered.
              type: integer
              minimum: 1
              maximum: 50
            retryPolicy:
              $ref: '#/components/schemas/RetryPolicy'
              description: Retry policy that will be applied for failed pipeline runs.
            dependsOn:
              type: array
              description: Triggers that this trigger depends on. Only tumbling window triggers are supported.
              items:
                $ref: '#/components/schemas/DependencyReference'
              x-ms-identifiers: []
          required:
            - frequency
            - interval
            - startTime
            - maxConcurrency
      required:
        - pipeline
        - typeProperties
    TumblingWindowFrequency:
      description: Enumerates possible frequency option for the tumbling window trigger.
      type: string
      enum:
        - Minute
        - Hour
        - Month
      x-ms-enum:
        name: TumblingWindowFrequency
        modelAsString: true
    RetryPolicy:
      description: Execution policy for an activity.
      properties:
        count:
          type: object
          description: 'Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.'
        intervalInSeconds:
          description: Interval between retries in seconds. Default is 30.
          type: integer
          minimum: 30
          maximum: 86400
    TriggerReference:
      description: Trigger reference type.
      type: object
      properties:
        type:
          description: Trigger reference type.
          type: string
          enum:
            - TriggerReference
          x-ms-enum:
            name: TriggerReferenceType
            modelAsString: true
        referenceName:
          description: Reference trigger name.
          type: string
      required:
        - type
        - referenceName
    DependencyReference:
      description: Referenced dependency.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          description: The type of dependency reference.
          type: string
      required:
        - type
    TriggerDependencyReference:
      description: Trigger referenced dependency.
      type: object
      allOf:
        - $ref: '#/components/schemas/DependencyReference'
      properties:
        referenceTrigger:
          description: Referenced trigger.
          $ref: '#/components/schemas/TriggerReference'
      required:
        - referenceTrigger
    TumblingWindowTriggerDependencyReference:
      description: Referenced tumbling window trigger dependency.
      type: object
      allOf:
        - $ref: '#/components/schemas/TriggerDependencyReference'
      properties:
        offset:
          description: Timespan applied to the start time of a tumbling window when evaluating dependency.
          type: string
          pattern: '-?((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))'
          minLength: 8
          maxLength: 15
        size:
          description: The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
          type: string
          pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))
          minLength: 8
          maxLength: 15
    SelfDependencyTumblingWindowTriggerReference:
      description: Self referenced tumbling window trigger dependency.
      type: object
      allOf:
        - $ref: '#/components/schemas/DependencyReference'
      properties:
        offset:
          description: Timespan applied to the start time of a tumbling window when evaluating dependency.
          type: string
          pattern: '-((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))'
          minLength: 8
          maxLength: 15
        size:
          description: The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
          type: string
          pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))
          minLength: 8
          maxLength: 15
      required:
        - offset
    RerunTumblingWindowTrigger:
      description: Trigger that schedules pipeline reruns for all fixed time interval windows from a requested start time to requested end time.
      type: object
      allOf:
        - $ref: '#/components/schemas/Trigger'
      properties:
        typeProperties:
          description: Rerun Trigger properties.
          x-ms-client-flatten: true
          properties:
            parentTrigger:
              type: object
              description: The parent trigger reference.
            requestedStartTime:
              type: string
              format: date-time
              description: The start time for the time period for which restatement is initiated. Only UTC time is currently supported.
            requestedEndTime:
              type: string
              format: date-time
              description: The end time for the time period for which restatement is initiated. Only UTC time is currently supported.
            rerunConcurrency:
              description: The max number of parallel time windows (ready for execution) for which a rerun is triggered.
              type: integer
              minimum: 1
              maximum: 50
          required:
            - parentTrigger
            - requestedStartTime
            - requestedEndTime
            - rerunConcurrency
      required:
        - typeProperties
    ChainingTrigger:
      description: Trigger that allows the referenced pipeline to depend on other pipeline runs based on runDimension Name/Value pairs. Upstream pipelines should declare the same runDimension Name and their runs should have the values for those runDimensions. The referenced pipeline run would be triggered if the values for the runDimension match for all upstream pipeline runs.
      type: object
      allOf:
        - $ref: '#/components/schemas/Trigger'
      properties:
        pipeline:
          $ref: '#/components/schemas/TriggerPipelineReference'
          description: Pipeline for which runs are created when all upstream pipelines complete successfully.
        typeProperties:
          description: Chaining Trigger properties.
          x-ms-client-flatten: true
          properties:
            dependsOn:
              type: array
              items:
                $ref: '#/components/schemas/PipelineReference'
              description: Upstream Pipelines.
              x-ms-identifiers:
                - referenceName
            runDimension:
              description: Run Dimension property that needs to be emitted by upstream pipelines.
              type: string
          required:
            - runDimension
            - dependsOn
      required:
        - pipeline
        - typeProperties
    Credential:
      description: The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Type of credential.
        description:
          description: Credential description.
          type: string
        annotations:
          description: List of tags that can be used for describing the Credential.
          type: array
          items:
            type: object
          x-ms-identifiers: []
      additionalProperties:
        type: object
      required:
        - type
    ServicePrincipalCredential:
      x-ms-discriminator-value: ServicePrincipal
      description: Service principal credential.
      type: object
      allOf:
        - $ref: '#/components/schemas/Credential'
      properties:
        typeProperties:
          description: Service Principal credential properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ServicePrincipalCredentialTypeProperties'
      required:
        - typeProperties
    ServicePrincipalCredentialTypeProperties:
      description: Service Principal credential type properties.
      type: object
      properties:
        servicePrincipalId:
          type: object
          description: The app ID of the service principal used to authenticate
        servicePrincipalKey:
          $ref: '#/components/schemas/AzureKeyVaultSecretReference'
          description: The key of the service principal used to authenticate.
        tenant:
          type: object
          description: The ID of the tenant to which the service principal belongs
    ManagedIdentityCredential:
      x-ms-discriminator-value: ManagedIdentity
      description: Managed identity credential.
      type: object
      allOf:
        - $ref: '#/components/schemas/Credential'
      properties:
        typeProperties:
          description: Managed identity credential properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedIdentityTypeProperties'
    ManagedIdentityTypeProperties:
      description: Managed identity type properties.
      type: object
      properties:
        resourceId:
          type: string
          description: The resource id of user assigned managed identity
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription identifier.
      required: true
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The resource group name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    factoryName:
      name: factoryName
      in: path
      description: The factory name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
        minLength: 3
        maxLength: 63
        type: string
    locationId:
      name: locationId
      in: path
      description: The location identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    linkedServiceName:
      name: linkedServiceName
      in: path
      description: The linked service name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9_][^<>*#.%&:\\+?/]*$
        minLength: 1
        maxLength: 260
        type: string
    datasetName:
      name: datasetName
      in: path
      description: The dataset name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9_][^<>*#.%&:\\+?/]*$
        minLength: 1
        maxLength: 260
        type: string
    pipelineName:
      name: pipelineName
      in: path
      description: The pipeline name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9_][^<>*#.%&:\\+?/]*$
        minLength: 1
        maxLength: 260
        type: string
    triggerName:
      name: triggerName
      in: path
      description: The trigger name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9_][^<>*#.%&:\\+?/]*$
        minLength: 1
        maxLength: 260
        type: string
    runId:
      name: runId
      in: path
      description: The pipeline run identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    integrationRuntimeName:
      name: integrationRuntimeName
      in: path
      description: The integration runtime name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$
        minLength: 3
        maxLength: 63
        type: string
    nodeName:
      name: nodeName
      in: path
      description: The integration runtime node name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$
        minLength: 1
        maxLength: 150
        type: string
    dataFlowName:
      name: dataFlowName
      in: path
      description: The data flow name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9_][^<>*#.%&:\\+?/]*$
        minLength: 1
        maxLength: 260
        type: string
    managedVirtualNetworkName:
      name: managedVirtualNetworkName
      in: path
      description: Managed virtual network name
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$
        minLength: 1
        maxLength: 127
        type: string
    managedPrivateEndpointName:
      name: managedPrivateEndpointName
      in: path
      description: Managed private endpoint name
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$
        minLength: 1
        maxLength: 127
        type: string
    api-version:
      name: api-version
      in: query
      description: The API version.
      required: true
      schema:
        type: string
    privateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The private endpoint connection name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    globalParameterName:
      name: globalParameterName
      in: path
      description: The global parameter name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9_][^<>*#.%&:\\+?/]*$
        minLength: 1
        maxLength: 260
        type: string
  x-stackQL-resources:
    operations:
      id: azure.data_factory.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataFactory~1operations?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    factories:
      id: azure.data_factory.factories
      name: factories
      title: Factories
      methods:
        Factories_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataFactory~1factories?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Factories_ConfigureFactoryRepo:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataFactory~1locations~1{locationId}~1configureFactoryRepo?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Factories_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Factories_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Factories_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}?api-version=2018-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Factories_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Factories_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Factories_GetGitHubAccessToken:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1getGitHubAccessToken?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Factories_GetDataPlaneAccess:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1getDataPlaneAccess?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/factories/methods/Factories_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/factories/methods/Factories_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/factories/methods/Factories_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/factories/methods/Factories_Delete'
    exposure_control:
      id: azure.data_factory.exposure_control
      name: exposure_control
      title: Exposure_control
      methods:
        ExposureControl_GetFeatureValue:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataFactory~1locations~1{locationId}~1getFeatureValue?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ExposureControl_GetFeatureValueByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1getFeatureValue?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ExposureControl_QueryFeatureValuesByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1queryFeaturesValue?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    integration_runtimes:
      id: azure.data_factory.integration_runtimes
      name: integration_runtimes
      title: Integration_runtimes
      methods:
        IntegrationRuntimes_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}?api-version=2018-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        IntegrationRuntimes_GetStatus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1getStatus?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1outboundNetworkDependenciesEndpoints?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_GetConnectionInfo:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1getConnectionInfo?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_RegenerateAuthKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1regenerateAuthKey?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_ListAuthKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1listAuthKeys?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1start?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        IntegrationRuntimes_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1stop?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        IntegrationRuntimes_SyncCredentials:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1syncCredentials?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_GetMonitoringData:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1monitoringData?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_Upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1upgrade?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_RemoveLinks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1removeLinks?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimes_CreateLinkedIntegrationRuntime:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1linkedIntegrationRuntime?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/integration_runtimes/methods/IntegrationRuntimes_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_runtimes/methods/IntegrationRuntimes_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_runtimes/methods/IntegrationRuntimes_Delete'
    integration_runtime_object_metadata:
      id: azure.data_factory.integration_runtime_object_metadata
      name: integration_runtime_object_metadata
      title: Integration_runtime_object_metadata
      methods:
        IntegrationRuntimeObjectMetadata_Refresh:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1refreshObjectMetadata?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        IntegrationRuntimeObjectMetadata_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1getObjectMetadata?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    integration_runtime_nodes:
      id: azure.data_factory.integration_runtime_nodes
      name: integration_runtime_nodes
      title: Integration_runtime_nodes
      methods:
        IntegrationRuntimeNodes_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1nodes~1{nodeName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimeNodes_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1nodes~1{nodeName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        IntegrationRuntimeNodes_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1nodes~1{nodeName}?api-version=2018-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        IntegrationRuntimeNodes_GetIpAddress:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1integrationRuntimes~1{integrationRuntimeName}~1nodes~1{nodeName}~1ipAddress?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_runtime_nodes/methods/IntegrationRuntimeNodes_Delete'
    linked_services:
      id: azure.data_factory.linked_services
      name: linked_services
      title: Linked_services
      methods:
        LinkedServices_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1linkedservices?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LinkedServices_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1linkedservices~1{linkedServiceName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LinkedServices_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1linkedservices~1{linkedServiceName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        LinkedServices_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1linkedservices~1{linkedServiceName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linked_services/methods/LinkedServices_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/linked_services/methods/LinkedServices_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linked_services/methods/LinkedServices_Delete'
    datasets:
      id: azure.data_factory.datasets
      name: datasets
      title: Datasets
      methods:
        Datasets_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1datasets?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Datasets_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1datasets~1{datasetName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Datasets_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1datasets~1{datasetName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Datasets_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1datasets~1{datasetName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/Datasets_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/Datasets_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/datasets/methods/Datasets_Delete'
    pipelines:
      id: azure.data_factory.pipelines
      name: pipelines
      title: Pipelines
      methods:
        Pipelines_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelines?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Pipelines_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelines~1{pipelineName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Pipelines_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelines~1{pipelineName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Pipelines_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelines~1{pipelineName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Pipelines_CreateRun:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelines~1{pipelineName}~1createRun?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/Pipelines_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/Pipelines_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pipelines/methods/Pipelines_Delete'
    pipeline_runs:
      id: azure.data_factory.pipeline_runs
      name: pipeline_runs
      title: Pipeline_runs
      methods:
        PipelineRuns_QueryByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1queryPipelineRuns?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PipelineRuns_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelineruns~1{runId}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PipelineRuns_Cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelineruns~1{runId}~1cancel?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    activity_runs:
      id: azure.data_factory.activity_runs
      name: activity_runs
      title: Activity_runs
      methods:
        ActivityRuns_QueryByPipelineRun:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1pipelineruns~1{runId}~1queryActivityruns?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    triggers:
      id: azure.data_factory.triggers
      name: triggers
      title: Triggers
      methods:
        Triggers_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Triggers_QueryByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1querytriggers?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Triggers_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Triggers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Triggers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        Triggers_SubscribeToEvents:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}~1subscribeToEvents?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Triggers_GetEventSubscriptionStatus:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}~1getEventSubscriptionStatus?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Triggers_UnsubscribeFromEvents:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}~1unsubscribeFromEvents?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        Triggers_Start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}~1start?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Triggers_Stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}~1stop?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/Triggers_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/Triggers_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/triggers/methods/Triggers_Delete'
    trigger_runs:
      id: azure.data_factory.trigger_runs
      name: trigger_runs
      title: Trigger_runs
      methods:
        TriggerRuns_Rerun:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}~1triggerRuns~1{runId}~1rerun?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        TriggerRuns_Cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1triggers~1{triggerName}~1triggerRuns~1{runId}~1cancel?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        TriggerRuns_QueryByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1queryTriggerRuns?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    data_flows:
      id: azure.data_factory.data_flows
      name: data_flows
      title: Data_flows
      methods:
        DataFlows_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1dataflows~1{dataFlowName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataFlows_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1dataflows~1{dataFlowName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataFlows_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1dataflows~1{dataFlowName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        DataFlows_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1dataflows?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_flows/methods/DataFlows_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_flows/methods/DataFlows_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_flows/methods/DataFlows_Delete'
    data_flow_debug_session:
      id: azure.data_factory.data_flow_debug_session
      name: data_flow_debug_session
      title: Data_flow_debug_session
      methods:
        DataFlowDebugSession_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1createDataFlowDebugSession?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        DataFlowDebugSession_QueryByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1queryDataFlowDebugSessions?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataFlowDebugSession_AddDataFlow:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1addDataFlowToDebugSession?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataFlowDebugSession_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1deleteDataFlowDebugSession?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        DataFlowDebugSession_ExecuteCommand:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1executeDataFlowDebugCommand?api-version=2018-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/data_flow_debug_session/methods/DataFlowDebugSession_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_flow_debug_session/methods/DataFlowDebugSession_Delete'
    managed_virtual_networks:
      id: azure.data_factory.managed_virtual_networks
      name: managed_virtual_networks
      title: Managed_virtual_networks
      methods:
        ManagedVirtualNetworks_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1managedVirtualNetworks?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ManagedVirtualNetworks_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1managedVirtualNetworks~1{managedVirtualNetworkName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ManagedVirtualNetworks_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1managedVirtualNetworks~1{managedVirtualNetworkName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_virtual_networks/methods/ManagedVirtualNetworks_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_virtual_networks/methods/ManagedVirtualNetworks_CreateOrUpdate'
        update: []
        delete: []
    managed_private_endpoints:
      id: azure.data_factory.managed_private_endpoints
      name: managed_private_endpoints
      title: Managed_private_endpoints
      methods:
        ManagedPrivateEndpoints_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1managedVirtualNetworks~1{managedVirtualNetworkName}~1managedPrivateEndpoints?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ManagedPrivateEndpoints_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1managedVirtualNetworks~1{managedVirtualNetworkName}~1managedPrivateEndpoints~1{managedPrivateEndpointName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ManagedPrivateEndpoints_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1managedVirtualNetworks~1{managedVirtualNetworkName}~1managedPrivateEndpoints~1{managedPrivateEndpointName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ManagedPrivateEndpoints_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1managedVirtualNetworks~1{managedVirtualNetworkName}~1managedPrivateEndpoints~1{managedPrivateEndpointName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_private_endpoints/methods/ManagedPrivateEndpoints_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_private_endpoints/methods/ManagedPrivateEndpoints_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_private_endpoints/methods/ManagedPrivateEndpoints_Delete'
    private_end_point_connections:
      id: azure.data_factory.private_end_point_connections
      name: private_end_point_connections
      title: Private_end_point_connections
      methods:
        privateEndPointConnections_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1privateEndPointConnections?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_end_point_connections/methods/privateEndPointConnections_ListByFactory'
        insert: []
        update: []
        delete: []
    private_endpoint_connection:
      id: azure.data_factory.private_endpoint_connection
      name: private_endpoint_connection
      title: Private_endpoint_connection
      methods:
        PrivateEndpointConnection_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateEndpointConnection_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateEndpointConnection_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection/methods/PrivateEndpointConnection_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection/methods/PrivateEndpointConnection_Delete'
    private_link_resources:
      id: azure.data_factory.private_link_resources
      name: private_link_resources
      title: Private_link_resources
      methods:
        privateLinkResources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1privateLinkResources?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    global_parameters:
      id: azure.data_factory.global_parameters
      name: global_parameters
      title: Global_parameters
      methods:
        GlobalParameters_ListByFactory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1globalParameters?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GlobalParameters_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1globalParameters~1{globalParameterName}?api-version=2018-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GlobalParameters_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1globalParameters~1{globalParameterName}?api-version=2018-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        GlobalParameters_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataFactory~1factories~1{factoryName}~1globalParameters~1{globalParameterName}?api-version=2018-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/global_parameters/methods/GlobalParameters_ListByFactory'
        insert:
          - $ref: '#/components/x-stackQL-resources/global_parameters/methods/GlobalParameters_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/global_parameters/methods/GlobalParameters_Delete'
paths:
  /providers/Microsoft.DataFactory/operations?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - operations
      operationId: Operations_List
      description: Lists the available Azure Data Factory API operations.
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - factories
      operationId: Factories_List
      description: Lists factories under the specified subscription.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactoryListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: factories
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - factories
      operationId: Factories_ConfigureFactoryRepo
      description: Updates a factory's repo information.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationId'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Update factory repo request definition.
        required: true
        x-ms-requestBody-name: factoryRepoUpdate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactoryRepoUpdate'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factory'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: factories
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - exposureControl
      operationId: ExposureControl_GetFeatureValue
      description: Get exposure control feature for specific location.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationId'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The exposure control request.
        required: true
        x-ms-requestBody-name: exposureControlRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureControlRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureControlResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: exposure_control
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - exposureControl
      operationId: ExposureControl_GetFeatureValueByFactory
      description: Get exposure control feature for specific factory.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The exposure control request.
        required: true
        x-ms-requestBody-name: exposureControlRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureControlRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureControlResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: exposure_control
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryFeaturesValue?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - exposureControl
      operationId: ExposureControl_QueryFeatureValuesByFactory
      description: Get list of exposure control features for specific factory.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The exposure control request for list of features.
        required: true
        x-ms-requestBody-name: exposureControlBatchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureControlBatchRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureControlBatchResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: exposure_control
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - factories
      operationId: Factories_ListByResourceGroup
      description: Lists factories.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactoryListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: factories
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - factories
      operationId: Factories_CreateOrUpdate
      description: Creates or updates a factory.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the factory entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Factory resource definition.
        required: true
        x-ms-requestBody-name: factory
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Factory'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factory'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: factories
      x-stackQL-verb: insert
    patch:
      tags:
        - factories
      operationId: Factories_Update
      description: Updates a factory.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters for updating a factory.
        required: true
        x-ms-requestBody-name: factoryUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactoryUpdateParameters'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factory'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: factories
      x-stackQL-verb: exec
    get:
      tags:
        - factories
      operationId: Factories_Get
      description: Gets a factory.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the factory entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factory'
        '304':
          description: Not modified.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: factories
      x-stackQL-verb: exec
    delete:
      tags:
        - factories
      operationId: Factories_Delete
      description: Deletes a factory.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: factories
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getGitHubAccessToken?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - factories
      operationId: Factories_GetGitHubAccessToken
      description: Get GitHub Access Token.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Get GitHub access token request definition.
        required: true
        x-ms-requestBody-name: gitHubAccessTokenRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitHubAccessTokenRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitHubAccessTokenResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: factories
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getDataPlaneAccess?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - factories
      operationId: Factories_GetDataPlaneAccess
      description: Get Data Plane access.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Data Plane user access policy definition.
        required: true
        x-ms-requestBody-name: policy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccessPolicy'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: factories
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_ListByFactory
      description: Lists integration runtimes.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_CreateOrUpdate
      description: Creates or updates an integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Integration runtime resource definition.
        required: true
        x-ms-requestBody-name: integrationRuntime
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRuntimeResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeResource'
        default:
          description: An error response received from PUT integration runtime operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: insert
    get:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_Get
      description: Gets an integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeResource'
        '304':
          description: Not modified.
        default:
          description: An error response received from GET integration runtime operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
    patch:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_Update
      description: Updates an integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters for updating an integration runtime.
        required: true
        x-ms-requestBody-name: updateIntegrationRuntimeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationRuntimeRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
    delete:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_Delete
      description: Deletes an integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from DELETE integration runtime operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_GetStatus
      description: Gets detailed status information for an integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeStatusResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/outboundNetworkDependenciesEndpoints?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints
      description: Gets the list of outbound network dependencies for a given Azure-SSIS integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_GetConnectionInfo
      description: Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeConnectionInfo'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_RegenerateAuthKey
      description: Regenerates the authentication key for an integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters for regenerating integration runtime authentication key.
        required: true
        x-ms-requestBody-name: regenerateKeyParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationRuntimeRegenerateKeyParameters'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeAuthKeys'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_ListAuthKeys
      description: Retrieves the authentication keys for an integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeAuthKeys'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_Start
      description: Starts a ManagedReserved type integration runtime.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeStatusResponse'
        '202':
          description: Accepted.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_Stop
      description: Stops a ManagedReserved type integration runtime.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '202':
          description: Accepted.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_SyncCredentials
      description: Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_GetMonitoringData
      description: Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeMonitoringData'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_Upgrade
      description: Upgrade self-hosted integration runtime to latest version if availability.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeLinks?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_RemoveLinks
      description: Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The data factory name for the linked integration runtime.
        required: true
        x-ms-requestBody-name: linkedIntegrationRuntimeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedIntegrationRuntimeRequest'
      responses:
        '200':
          description: OK.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/linkedIntegrationRuntime?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimes
      operationId: IntegrationRuntimes_CreateLinkedIntegrationRuntime
      description: Create a linked integration runtime entry in a shared integration runtime.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The linked integration runtime properties.
        required: true
        x-ms-requestBody-name: createLinkedIntegrationRuntimeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLinkedIntegrationRuntimeRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeStatusResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtimes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimeObjectMetadata
      operationId: IntegrationRuntimeObjectMetadata_Refresh
      description: Refresh a SSIS integration runtime object metadata.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsisObjectMetadataStatusResponse'
        '202':
          description: Accepted.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtime_object_metadata
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimeObjectMetadata
      operationId: IntegrationRuntimeObjectMetadata_Get
      description: Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters for getting a SSIS object metadata.
        required: false
        x-ms-requestBody-name: getMetadataRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSsisObjectMetadataRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsisObjectMetadataListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtime_object_metadata
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - integrationRuntimeNodes
      operationId: IntegrationRuntimeNodes_Get
      description: Gets a self-hosted integration runtime node.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/nodeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfHostedIntegrationRuntimeNode'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtime_nodes
      x-stackQL-verb: exec
    delete:
      tags:
        - integrationRuntimeNodes
      operationId: IntegrationRuntimeNodes_Delete
      description: Deletes a self-hosted integration runtime node.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/nodeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtime_nodes
      x-stackQL-verb: delete
    patch:
      tags:
        - integrationRuntimeNodes
      operationId: IntegrationRuntimeNodes_Update
      description: Updates a self-hosted integration runtime node.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/nodeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters for updating an integration runtime node.
        required: true
        x-ms-requestBody-name: updateIntegrationRuntimeNodeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationRuntimeNodeRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfHostedIntegrationRuntimeNode'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtime_nodes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - integrationRuntimeNodes
      operationId: IntegrationRuntimeNodes_GetIpAddress
      description: Get the IP address of self-hosted integration runtime node.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/integrationRuntimeName'
        - $ref: '#/components/parameters/nodeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationRuntimeNodeIpAddress'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: integration_runtime_nodes
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - linkedServices
      operationId: LinkedServices_ListByFactory
      description: Lists linked services.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: linked_services
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - linkedServices
      operationId: LinkedServices_CreateOrUpdate
      description: Creates or updates a linked service.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/linkedServiceName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the linkedService entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Linked service resource definition.
        required: true
        x-ms-requestBody-name: linkedService
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedServiceResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: linked_services
      x-stackQL-verb: insert
    get:
      tags:
        - linkedServices
      operationId: LinkedServices_Get
      description: Gets a linked service.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/linkedServiceName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the linked service entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceResource'
        '304':
          description: Not modified.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: linked_services
      x-stackQL-verb: exec
    delete:
      tags:
        - linkedServices
      operationId: LinkedServices_Delete
      description: Deletes a linked service.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/linkedServiceName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: linked_services
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - datasets
      operationId: Datasets_ListByFactory
      description: Lists datasets.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: datasets
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - datasets
      operationId: Datasets_CreateOrUpdate
      description: Creates or updates a dataset.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/datasetName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the dataset entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Dataset resource definition.
        required: true
        x-ms-requestBody-name: dataset
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: datasets
      x-stackQL-verb: insert
    get:
      tags:
        - datasets
      operationId: Datasets_Get
      description: Gets a dataset.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/datasetName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the dataset entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetResource'
        '304':
          description: Not modified.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: datasets
      x-stackQL-verb: exec
    delete:
      tags:
        - datasets
      operationId: Datasets_Delete
      description: Deletes a dataset.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/datasetName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: datasets
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - pipelines
      operationId: Pipelines_ListByFactory
      description: Lists pipelines.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: pipelines
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - pipelines
      operationId: Pipelines_CreateOrUpdate
      description: Creates or updates a pipeline.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Pipeline resource definition.
        required: true
        x-ms-requestBody-name: pipeline
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pipelines
      x-stackQL-verb: insert
    get:
      tags:
        - pipelines
      operationId: Pipelines_Get
      description: Gets a pipeline.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineResource'
        '304':
          description: Not modified.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pipelines
      x-stackQL-verb: exec
    delete:
      tags:
        - pipelines
      operationId: Pipelines_Delete
      description: Deletes a pipeline.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pipelines
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}/createRun?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - pipelines
      operationId: Pipelines_CreateRun
      description: Creates a run of a pipeline.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/pipelineName'
        - $ref: '#/components/parameters/api-version'
        - name: referencePipelineRunId
          in: query
          description: The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run.
          required: false
          x-ms-parameter-location: method
          schema:
            type: string
        - name: isRecovery
          in: query
          description: Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId.
          required: false
          x-ms-parameter-location: method
          schema:
            type: boolean
        - name: startActivityName
          in: query
          description: In recovery mode, the rerun will start from this activity. If not specified, all activities will run.
          required: false
          x-ms-parameter-location: method
          schema:
            type: string
        - name: startFromFailure
          in: query
          description: In recovery mode, if set to true, the rerun will start from failed activities. The property will be used only if startActivityName is not specified.
          required: false
          x-ms-parameter-location: method
          schema:
            type: boolean
      requestBody:
        description: Parameters of the pipeline run. These parameters will be used only if the runId is not specified.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterValueSpecification'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRunResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pipelines
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryPipelineRuns?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      operationId: PipelineRuns_QueryByFactory
      description: Query pipeline runs in the factory based on input filter conditions.
      tags:
        - pipelineruns
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Parameters to filter the pipeline run.
        required: true
        x-ms-requestBody-name: filterParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunFilterParameters'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRunsQueryResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pipeline_runs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      operationId: PipelineRuns_Get
      description: Get a pipeline run by its run ID.
      tags:
        - pipelineruns
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/runId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineRun'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pipeline_runs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/queryActivityruns?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      operationId: ActivityRuns_QueryByPipelineRun
      description: Query activity runs based on input filter conditions.
      tags:
        - activityruns
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/runId'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Parameters to filter the activity runs.
        required: true
        x-ms-requestBody-name: filterParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunFilterParameters'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityRunsQueryResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: activity_runs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/cancel?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      operationId: PipelineRuns_Cancel
      description: Cancel a pipeline run by its run ID.
      tags:
        - pipelineruns
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/runId'
        - name: isRecursive
          in: query
          description: If true, cancel all the Child pipelines that are triggered by the current pipeline.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: 'Pipeline run has been canceled successfully. '
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: pipeline_runs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - triggers
      operationId: Triggers_ListByFactory
      description: Lists triggers.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: triggers
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/querytriggers?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggers
      operationId: Triggers_QueryByFactory
      description: Query triggers.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Parameters to filter the triggers.
        required: true
        x-ms-requestBody-name: filterParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerFilterParameters'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerQueryResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - triggers
      operationId: Triggers_CreateOrUpdate
      description: Creates or updates a trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the trigger entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Trigger resource definition.
        required: true
        x-ms-requestBody-name: trigger
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: insert
    get:
      tags:
        - trigger
      operationId: Triggers_Get
      description: Gets a trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the trigger entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerResource'
        '304':
          description: Not modified.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
    delete:
      tags:
        - triggers
      operationId: Triggers_Delete
      description: Deletes a trigger.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/subscribeToEvents?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggers
      operationId: Triggers_SubscribeToEvents
      description: Subscribe event trigger to events.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Trigger is subscribed to events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerSubscriptionOperationStatus'
        '202':
          description: Accepted.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/getEventSubscriptionStatus?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggers
      operationId: Triggers_GetEventSubscriptionStatus
      description: Get a trigger's event subscription status.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Trigger event subscription state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerSubscriptionOperationStatus'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/unsubscribeFromEvents?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggers
      operationId: Triggers_UnsubscribeFromEvents
      description: Unsubscribe event trigger from events.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Trigger is unsubscribed from events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerSubscriptionOperationStatus'
        '202':
          description: Accepted.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/start?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggers
      operationId: Triggers_Start
      description: Starts a trigger.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Trigger has been started successfully.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/stop?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggers
      operationId: Triggers_Stop
      description: Stops a trigger.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Trigger has been stopped successfully.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: triggers
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/rerun?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggerruns
      operationId: TriggerRuns_Rerun
      description: Rerun single trigger instance by runId.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/runId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: TriggerRun has been restarted.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: trigger_runs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/cancel?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggerruns
      operationId: TriggerRuns_Cancel
      description: Cancel a single trigger instance by runId.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/triggerName'
        - $ref: '#/components/parameters/runId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: TriggerRun has been cancelled.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: trigger_runs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryTriggerRuns?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - triggerruns
      operationId: TriggerRuns_QueryByFactory
      description: Query trigger runs.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Parameters to filter the pipeline run.
        required: true
        x-ms-requestBody-name: filterParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunFilterParameters'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerRunsQueryResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: trigger_runs
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - dataFlows
      operationId: DataFlows_CreateOrUpdate
      description: Creates or updates a data flow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/dataFlowName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the data flow entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Data flow resource definition.
        required: true
        x-ms-requestBody-name: dataFlow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFlowResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFlowResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: data_flows
      x-stackQL-verb: insert
    get:
      tags:
        - dataFlows
      operationId: DataFlows_Get
      description: Gets a data flow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/dataFlowName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the data flow entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFlowResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: data_flows
      x-stackQL-verb: exec
    delete:
      tags:
        - dataFlows
      operationId: DataFlows_Delete
      description: Deletes a data flow.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/dataFlowName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: data_flows
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - dataFlows
      operationId: DataFlows_ListByFactory
      description: Lists data flows.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFlowListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_flows
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/createDataFlowDebugSession?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - dataFlowDebugSession
      operationId: DataFlowDebugSession_Create
      description: Creates a data flow debug session.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Data flow debug session definition
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataFlowDebugSessionRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataFlowDebugSessionResponse'
        '202':
          description: Accepted.
          headers:
            location:
              schema:
                type: string
              description: URI to poll for asynchronous operation status.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: data_flow_debug_session
      x-stackQL-verb: insert
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryDataFlowDebugSessions?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - dataFlowDebugSession
      operationId: DataFlowDebugSession_QueryByFactory
      description: Query all active data flow debug sessions.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDataFlowDebugSessionsResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: data_flow_debug_session
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/addDataFlowToDebugSession?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - dataFlowDebugSession
      operationId: DataFlowDebugSession_AddDataFlow
      description: Add a data flow into debug session.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Data flow debug session definition with debug content.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFlowDebugPackage'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddDataFlowToDebugSessionResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: data_flow_debug_session
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/deleteDataFlowDebugSession?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - dataFlowDebugSession
      operationId: DataFlowDebugSession_Delete
      description: Deletes a data flow debug session.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Data flow debug session definition for deletion
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDataFlowDebugSessionRequest'
      responses:
        '200':
          description: OK.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: data_flow_debug_session
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/executeDataFlowDebugCommand?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    post:
      tags:
        - dataFlowDebugSession
      operationId: DataFlowDebugSession_ExecuteCommand
      description: Execute a data flow debug command.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Data flow debug command definition.
        required: true
        x-ms-requestBody-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataFlowDebugCommandRequest'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataFlowDebugCommandResponse'
        '202':
          description: Accepted.
          headers:
            location:
              schema:
                type: string
              description: URI to poll for asynchronous operation status.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: data_flow_debug_session
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - managedVirtualNetworks
      operationId: ManagedVirtualNetworks_ListByFactory
      description: Lists managed Virtual Networks.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedVirtualNetworkListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: managed_virtual_networks
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - managedVirtualNetworks
      operationId: ManagedVirtualNetworks_CreateOrUpdate
      description: Creates or updates a managed Virtual Network.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/managedVirtualNetworkName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the managed Virtual Network entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Managed Virtual Network resource definition.
        required: true
        x-ms-requestBody-name: managedVirtualNetwork
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedVirtualNetworkResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedVirtualNetworkResource'
        default:
          description: An error response received from PUT managed Virtual Network operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managed_virtual_networks
      x-stackQL-verb: insert
    get:
      tags:
        - managedVirtualNetworks
      operationId: ManagedVirtualNetworks_Get
      description: Gets a managed Virtual Network.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/managedVirtualNetworkName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the managed Virtual Network entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedVirtualNetworkResource'
        default:
          description: An error response received from GET managed Virtual Network operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managed_virtual_networks
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - managedPrivateEndpoints
      operationId: ManagedPrivateEndpoints_ListByFactory
      description: Lists managed private endpoints.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/managedVirtualNetworkName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managedPrivateEndpointListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: managed_private_endpoints
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints/{managedPrivateEndpointName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - managedPrivateEndpoints
      operationId: ManagedPrivateEndpoints_CreateOrUpdate
      description: Creates or updates a managed private endpoint.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/managedVirtualNetworkName'
        - $ref: '#/components/parameters/managedPrivateEndpointName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the managed private endpoint entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        description: Managed private endpoint resource definition.
        required: true
        x-ms-requestBody-name: managedPrivateEndpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedPrivateEndpointResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedPrivateEndpointResource'
        default:
          description: An error response received from PUT managed private endpoint operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managed_private_endpoints
      x-stackQL-verb: insert
    get:
      tags:
        - managedPrivateEndpoints
      operationId: ManagedPrivateEndpoints_Get
      description: Gets a managed private endpoint.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/managedVirtualNetworkName'
        - $ref: '#/components/parameters/managedPrivateEndpointName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the managed private endpoint entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedPrivateEndpointResource'
        default:
          description: An error response received from GET managed private endpoint operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managed_private_endpoints
      x-stackQL-verb: exec
    delete:
      tags:
        - managedPrivateEndpoints
      operationId: ManagedPrivateEndpoints_Delete
      description: Deletes a managed private endpoint.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/managedVirtualNetworkName'
        - $ref: '#/components/parameters/managedPrivateEndpointName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from DELETE managed private endpoint operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: managed_private_endpoints
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndPointConnections?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - privateEndPointConnections
      operationId: privateEndPointConnections_ListByFactory
      description: Lists Private endpoint connections
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_end_point_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    put:
      tags:
        - privateEndpointConnections
      description: Approves or rejects a private endpoint connection
      operationId: PrivateEndpointConnection_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
        - $ref: '#/components/parameters/api-version'
        - name: If-Match
          in: header
          description: ETag of the private endpoint connection entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.
          required: false
          schema:
            type: string
      requestBody:
        required: true
        x-ms-requestBody-name: privateEndpointWrapper
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateLinkConnectionApprovalRequestResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        default:
          description: An error response received from PUT privateEndpointConnections operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: private_endpoint_connection
      x-stackQL-verb: insert
    get:
      tags:
        - privateEndpointConnections
      description: Gets a private endpoint connection
      operationId: PrivateEndpointConnection_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
        - $ref: '#/components/parameters/api-version'
        - name: If-None-Match
          in: header
          description: ETag of the private endpoint connection entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        default:
          description: An error response received from GET privateEndpointConnections operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: private_endpoint_connection
      x-stackQL-verb: exec
    delete:
      tags:
        - privateEndpointConnections
      description: Deletes a private endpoint connection
      operationId: PrivateEndpointConnection_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/privateEndpointConnectionName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No content.
        default:
          description: An error response received from DELETE privateEndpointConnections operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: private_endpoint_connection
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateLinkResources?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - privateLinkResources
      description: Gets the private link resources
      operationId: privateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourcesWrapper'
        default:
          description: App Service error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - globalParameters
      operationId: GlobalParameters_ListByFactory
      description: Lists Global parameters
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalParameterListResponse'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: global_parameters
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters/{globalParameterName}?api-version=2018-06-01:
    x-api-version: '2018-06-01'
    get:
      tags:
        - globalParameters
      operationId: GlobalParameters_Get
      description: Gets a Global parameter
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/globalParameterName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalParameterResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: global_parameters
      x-stackQL-verb: exec
    put:
      tags:
        - globalParameters
      operationId: GlobalParameters_CreateOrUpdate
      description: Creates or updates a Global parameter
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/globalParameterName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Global parameter resource definition.
        required: true
        x-ms-requestBody-name: default
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalParameterResource'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalParameterResource'
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: global_parameters
      x-stackQL-verb: insert
    delete:
      tags:
        - globalParameters
      operationId: GlobalParameters_Delete
      description: Deletes a Global parameter
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/factoryName'
        - $ref: '#/components/parameters/globalParameterName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK.
        '204':
          description: No Content.
        default:
          description: An error response received from the Azure Data Factory service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-stackQL-resource: global_parameters
      x-stackQL-verb: delete
