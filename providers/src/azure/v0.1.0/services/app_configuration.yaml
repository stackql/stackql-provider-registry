openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: AppConfigurationManagementClient (Microsoft.AppConfiguration)
  description: AppConfigurationManagementClient
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-08-20-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      type: object
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
      allOf:
        - $ref: '#/components/schemas/Resource'
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      required:
        - location
      allOf:
        - $ref: '#/components/schemas/Resource'
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      type: object
      allOf:
        - $ref: '#/components/schemas/Resource'
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      type: object
      required:
        - name
      properties:
        name:
          description: The SKU name of the configuration store.
          type: string
      description: Describes a configuration store SKU.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      description: Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        error:
          description: The details of the error.
          $ref: '#/components/schemas/ErrorDetails'
    ErrorAdditionalInfo:
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      description: Settings concerning key vault encryption for a configuration store.
      properties:
        keyIdentifier:
          description: The URI of the key vault key used to encrypt data.
          type: string
        identityClientId:
          description: The client id of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    ConfigurationStoreListResult:
      description: The result of a request to list configuration stores.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationStore'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    ConfigurationStore:
      description: The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.
      required:
        - location
        - sku
      type: object
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      properties:
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: The managed identity information, if configured.
        properties:
          $ref: '#/components/schemas/ConfigurationStoreProperties'
          description: The properties of a configuration store.
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku of the configuration store.
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
    ConfigurationStoreProperties:
      description: The properties of a configuration store.
      type: object
      properties:
        provisioningState:
          description: The provisioning state of the configuration store.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        creationDate:
          format: date-time
          description: The creation date of configuration store.
          type: string
          readOnly: true
        endpoint:
          description: The DNS endpoint where the configuration store API will be available.
          type: string
          readOnly: true
        encryption:
          $ref: '#/components/schemas/EncryptionProperties'
          description: The encryption settings of the configuration store.
        privateEndpointConnections:
          description: The list of private endpoint connections that are set up for this resource.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/PrivateEndpointConnectionReference'
        publicNetworkAccess:
          description: Control permission for data plane traffic coming from public networks while private endpoint is enabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        disableLocalAuth:
          type: boolean
          default: false
          description: Disables all authentication methods other than AAD authentication.
        softDeleteRetentionInDays:
          type: integer
          format: int32
          default: 7
          description: The amount of time in days that the configuration store will be retained when it is soft deleted.
        enablePurgeProtection:
          type: boolean
          default: false
          description: Property specifying whether protection against purge is enabled for this configuration store.
        createMode:
          type: string
          description: Indicates whether the configuration store need to be recovered.
          enum:
            - Recover
            - Default
          x-ms-enum:
            name: CreateMode
            modelAsString: false
          x-ms-mutability:
            - create
    EncryptionProperties:
      type: object
      description: The encryption settings for a configuration store.
      properties:
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    PrivateEndpointConnectionReference:
      type: object
      description: A reference to a related private endpoint connection.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: The properties of a private endpoint connection.
          x-ms-client-flatten: true
    ConfigurationStoreUpdateParameters:
      description: The parameters for updating a configuration store.
      type: object
      properties:
        properties:
          $ref: '#/components/schemas/ConfigurationStorePropertiesUpdateParameters'
          description: The properties for updating a configuration store.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/ResourceIdentity'
          description: The managed identity information for the configuration store.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the configuration store.
        tags:
          description: The ARM resource tags.
          type: object
          additionalProperties:
            type: string
    ConfigurationStorePropertiesUpdateParameters:
      description: The properties for updating a configuration store.
      type: object
      properties:
        encryption:
          $ref: '#/components/schemas/EncryptionProperties'
          description: The encryption settings of the configuration store.
        disableLocalAuth:
          type: boolean
          description: Disables all authentication methods other than AAD authentication.
        publicNetworkAccess:
          description: Control permission for data plane traffic coming from public networks while private endpoint is enabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        enablePurgeProtection:
          type: boolean
          description: Property specifying whether protection against purge is enabled for this configuration store.
    CheckNameAvailabilityParameters:
      description: Parameters used for checking whether a resource name is available.
      required:
        - name
        - type
      type: object
      properties:
        name:
          description: The name to check for availability.
          type: string
        type:
          description: The resource type to check for name availability.
          enum:
            - Microsoft.AppConfiguration/configurationStores
          type: string
          x-ms-enum:
            name: ConfigurationResourceType
            modelAsString: true
    NameAvailabilityStatus:
      description: The result of a request to check the availability of a resource name.
      type: object
      properties:
        nameAvailable:
          description: The value indicating whether the resource name is available.
          type: boolean
          readOnly: true
        message:
          description: If any, the error message that provides more detail for the reason that the name is not available.
          type: string
          readOnly: true
        reason:
          description: If any, the reason that the name is not available.
          type: string
          readOnly: true
    ApiKeyListResult:
      description: The result of a request to list API keys.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/ApiKey'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    ApiKey:
      description: An API key used for authenticating with a configuration store endpoint.
      type: object
      properties:
        id:
          description: The key ID.
          type: string
          readOnly: true
        name:
          description: A name for the key describing its usage.
          type: string
          readOnly: true
        value:
          description: The value of the key that is used for authentication purposes.
          type: string
          readOnly: true
        connectionString:
          description: A connection string that can be used by supporting clients for authentication.
          type: string
          readOnly: true
        lastModified:
          format: date-time
          description: The last time any of the key's properties were modified.
          type: string
          readOnly: true
        readOnly:
          description: Whether this key can only be used for read operations.
          type: boolean
          readOnly: true
    RegenerateKeyParameters:
      description: The parameters used to regenerate an API key.
      type: object
      properties:
        id:
          description: The id of the key to regenerate.
          type: string
    KeyValueListResult:
      description: The result of a request to list key-values.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/KeyValue'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    KeyValue:
      description: The key-value resource along with all resource properties.
      type: object
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/KeyValueProperties'
          description: All key-value properties.
          x-ms-client-flatten: true
      x-ms-azure-resource: true
    KeyValueProperties:
      description: All key-value properties.
      type: object
      properties:
        key:
          description: "The primary identifier of a key-value.\r\nThe key is used in unison with the label to uniquely identify a key-value."
          type: string
          readOnly: true
        label:
          description: "A value used to group key-values.\r\nThe label is used in unison with the key to uniquely identify a key-value."
          type: string
          readOnly: true
        value:
          description: The value of the key-value.
          type: string
        contentType:
          description: "The content type of the key-value's value.\r\nProviding a proper content-type can enable transformations of values when they are retrieved by applications."
          type: string
        eTag:
          description: An ETag indicating the state of a key-value within a configuration store.
          type: string
          readOnly: true
        lastModified:
          format: date-time
          description: The last time a modifying operation was performed on the given key-value.
          type: string
          readOnly: true
        locked:
          description: "A value indicating whether the key-value is locked.\r\nA locked key-value may not be modified until it is unlocked."
          type: boolean
          readOnly: true
        tags:
          description: A dictionary of tags that can help identify what a key-value may be applicable for.
          type: object
          additionalProperties:
            type: string
    OperationDefinitionListResult:
      description: The result of a request to list configuration store operations.
      type: object
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/OperationDefinition'
          x-ms-identifiers:
            - name
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    OperationDefinition:
      description: The definition of a configuration store operation.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationDefinitionDisplay'
          description: The display information for the configuration store operation.
        origin:
          description: Origin of the operation
          type: string
        properties:
          $ref: '#/components/schemas/OperationProperties'
          description: Properties of the operation
    OperationDefinitionDisplay:
      description: The display information for a configuration store operation.
      type: object
      properties:
        provider:
          description: 'The resource provider name: Microsoft App Configuration."'
          type: string
          readOnly: true
        resource:
          description: The resource on which the operation is performed.
          type: string
        operation:
          description: The operation that users can perform.
          type: string
        description:
          description: The description for the operation.
          type: string
    OperationProperties:
      description: Extra Operation properties
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: Service specifications of the operation
    ServiceSpecification:
      description: Service specification payload
      type: object
      properties:
        logSpecifications:
          description: Specifications of the Log for Azure Monitoring
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - name
        metricSpecifications:
          description: Specifications of the Metrics for Azure Monitoring
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          x-ms-identifiers:
            - name
    LogSpecification:
      description: Specifications of the Log for Azure Monitoring
      type: object
      properties:
        name:
          description: Name of the log
          type: string
        displayName:
          description: Localized friendly display name of the log
          type: string
        blobDuration:
          description: Blob duration of the log
          type: string
    MetricSpecification:
      description: Specifications of the Metrics for Azure Monitoring
      type: object
      properties:
        name:
          description: Name of the metric
          type: string
        displayName:
          description: Localized friendly display name of the metric
          type: string
        displayDescription:
          description: Localized friendly description of the metric
          type: string
        unit:
          description: Unit that makes sense for the metric
          type: string
        aggregationType:
          description: 'Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.'
          type: string
        internalMetricName:
          description: Internal metric name.
          type: string
        dimensions:
          description: Dimensions of the metric
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
        fillGapWithZero:
          description: Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.
          type: boolean
    MetricDimension:
      description: Specifications of the Dimension of metrics
      type: object
      properties:
        name:
          description: Name of the dimension
          type: string
        displayName:
          description: Localized friendly display name of the dimension
          type: string
        internalName:
          description: Internal name of the dimension.
          type: string
    ResourceIdentity:
      type: object
      description: An identity that can be associated with a resource.
      properties:
        type:
          description: The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
          type: string
          x-ms-enum:
            name: IdentityType
            modelAsString: true
        userAssignedIdentities:
          description: 'The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserIdentity'
        principalId:
          description: The principal id of the identity. This property will only be provided for a system-assigned identity.
          type: string
          readOnly: true
        tenantId:
          description: The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.
          type: string
          readOnly: true
    UserIdentity:
      type: object
      description: A resource identity that is managed by the user of the service.
      properties:
        principalId:
          description: The principal ID of the user-assigned identity.
          type: string
          readOnly: true
        clientId:
          description: The client ID of the user-assigned identity.
          type: string
          readOnly: true
    ErrorDetails:
      description: The details of the error.
      properties:
        code:
          description: Error code.
          type: string
          readOnly: true
        message:
          description: Error message indicating why the operation failed.
          type: string
          readOnly: true
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    PrivateEndpointConnectionListResult:
      type: object
      description: A list of private endpoint connections
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    PrivateEndpointConnection:
      description: A private endpoint connection
      type: object
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: The properties of a private endpoint.
          x-ms-client-flatten: true
      x-ms-azure-resource: true
    PrivateEndpointConnectionProperties:
      type: object
      description: Properties of a private endpoint connection.
      properties:
        provisioningState:
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          readOnly: true
          description: The provisioning status of the private endpoint connection.
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private endpoint.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
      required:
        - privateLinkServiceConnectionState
    PrivateEndpoint:
      type: object
      description: Private endpoint which a connection belongs to.
      properties:
        id:
          description: The resource Id for private endpoint
          type: string
    PrivateLinkServiceConnectionState:
      description: The state of a private link service connection.
      type: object
      properties:
        status:
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          description: The private link service connection status.
          x-ms-enum:
            name: ConnectionStatus
            modelAsString: true
        description:
          type: string
          description: The private link service connection description.
        actionsRequired:
          enum:
            - None
            - Recreate
          type: string
          readOnly: true
          description: Any action that is required beyond basic workflow (approve/ reject/ disconnect)
          x-ms-enum:
            name: ActionsRequired
            modelAsString: true
    PrivateLinkResourceListResult:
      type: object
      description: A list of private link resources.
      properties:
        value:
          description: The collection value.
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
    PrivateLinkResource:
      type: object
      description: A resource that supports private link capabilities.
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Private link resource properties.
          x-ms-client-flatten: true
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          readOnly: true
          description: The list of required DNS zone names of the private link resource.
      description: Properties of a private link resource.
    DeletedConfigurationStore:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The resource ID for the deleted configuration store.
        name:
          readOnly: true
          type: string
          description: The name of the configuration store.
        type:
          readOnly: true
          type: string
          description: The resource type of the configuration store.
        properties:
          $ref: '#/components/schemas/DeletedConfigurationStoreProperties'
          description: Properties of the deleted configuration store
          x-ms-client-flatten: true
      description: Deleted configuration store information with extended details.
    DeletedConfigurationStoreProperties:
      type: object
      properties:
        configurationStoreId:
          readOnly: true
          type: string
          description: The resource id of the original configuration store.
        location:
          readOnly: true
          type: string
          description: The location of the original configuration store.
        deletionDate:
          readOnly: true
          type: string
          format: date-time
          description: The deleted date.
        scheduledPurgeDate:
          readOnly: true
          type: string
          format: date-time
          description: The scheduled purged date.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: Tags of the original configuration store.
        purgeProtectionEnabled:
          readOnly: true
          type: boolean
          description: Purge protection status of the original configuration store.
      description: Properties of the deleted configuration store.
    DeletedConfigurationStoreListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DeletedConfigurationStore'
          description: The list of deleted configuration store.
        nextLink:
          type: string
          description: The URL to get the next set of deleted configuration stores.
      description: List of deleted configuration stores
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Microsoft Azure subscription ID.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The client API version.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group to which the container registry belongs.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The location in which uniqueness will be verified.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigStoreNameParameter:
      name: configStoreName
      in: path
      description: The name of the configuration store.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 50
        minLength: 5
        pattern: ^[a-zA-Z0-9_-]*$
        type: string
  x-stackQL-resources:
    configuration_stores:
      id: azure.app_configuration.configuration_stores
      name: configuration_stores
      title: Configuration_stores
      methods:
        ConfigurationStores_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AppConfiguration~1configurationStores?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConfigurationStores_ListByResourceGroup:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConfigurationStores_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConfigurationStores_Create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}?api-version=2022-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ConfigurationStores_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}?api-version=2022-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        ConfigurationStores_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}?api-version=2022-05-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        ConfigurationStores_ListKeys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1listKeys?api-version=2022-05-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConfigurationStores_RegenerateKey:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1regenerateKey?api-version=2022-05-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConfigurationStores_ListDeleted:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AppConfiguration~1deletedConfigurationStores?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConfigurationStores_GetDeleted:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AppConfiguration~1locations~1{location}~1deletedConfigurationStores~1{configStoreName}?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        ConfigurationStores_PurgeDeleted:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AppConfiguration~1locations~1{location}~1deletedConfigurationStores~1{configStoreName}~1purge?api-version=2022-05-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configuration_stores/methods/ConfigurationStores_ListByResourceGroup'
          - $ref: '#/components/x-stackQL-resources/configuration_stores/methods/ConfigurationStores_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/configuration_stores/methods/ConfigurationStores_Create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/configuration_stores/methods/ConfigurationStores_Delete'
    operations:
      id: azure.app_configuration.operations
      name: operations
      title: Operations
      methods:
        Operations_CheckNameAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AppConfiguration~1checkNameAvailability?api-version=2022-05-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AppConfiguration~1operations?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Operations_RegionalCheckNameAvailability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AppConfiguration~1locations~1{location}~1checkNameAvailability?api-version=2022-05-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    private_endpoint_connections:
      id: azure.app_configuration.private_endpoint_connections
      name: private_endpoint_connections
      title: Private_endpoint_connections
      methods:
        PrivateEndpointConnections_ListByConfigurationStore:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1privateEndpointConnections?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateEndpointConnections_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateEndpointConnections_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2022-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        PrivateEndpointConnections_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2022-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_ListByConfigurationStore'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_Delete'
    private_link_resources:
      id: azure.app_configuration.private_link_resources
      name: private_link_resources
      title: Private_link_resources
      methods:
        PrivateLinkResources_ListByConfigurationStore:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1privateLinkResources?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        PrivateLinkResources_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1privateLinkResources~1{groupName}?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_ListByConfigurationStore'
        insert: []
        update: []
        delete: []
    key_values:
      id: azure.app_configuration.key_values
      name: key_values
      title: Key_values
      methods:
        KeyValues_ListByConfigurationStore:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1keyValues?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        KeyValues_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1keyValues~1{keyValueName}?api-version=2022-05-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        KeyValues_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1keyValues~1{keyValueName}?api-version=2022-05-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        KeyValues_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AppConfiguration~1configurationStores~1{configStoreName}~1keyValues~1{keyValueName}?api-version=2022-05-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/key_values/methods/KeyValues_ListByConfigurationStore'
        insert:
          - $ref: '#/components/x-stackQL-resources/key_values/methods/KeyValues_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/key_values/methods/KeyValues_Delete'
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/configurationStores?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - ConfigurationStores
      description: Lists the configuration stores for a given subscription.
      operationId: ConfigurationStores_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $skipToken
          in: query
          description: A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationStoreListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - ConfigurationStores
      description: Lists the configuration stores for a given resource group.
      operationId: ConfigurationStores_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $skipToken
          in: query
          description: A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationStoreListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - ConfigurationStores
      description: Gets the properties of the specified configuration store.
      operationId: ConfigurationStores_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationStore'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: exec
    put:
      tags:
        - ConfigurationStores
      description: Creates a configuration store with the specified parameters.
      operationId: ConfigurationStores_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      requestBody:
        description: The parameters for creating a configuration store.
        required: true
        x-ms-requestBody-name: configStoreCreationParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationStore'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationStore'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationStore'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: insert
    delete:
      tags:
        - ConfigurationStores
      description: Deletes a configuration store.
      operationId: ConfigurationStores_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: delete
    patch:
      tags:
        - ConfigurationStores
      description: Updates a configuration store with the specified parameters.
      operationId: ConfigurationStores_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      requestBody:
        description: The parameters for updating a configuration store.
        required: true
        x-ms-requestBody-name: configStoreUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationStoreUpdateParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationStore'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationStore'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/checkNameAvailability?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    post:
      tags:
        - Operations
      description: Checks whether the configuration store name is available for use.
      operationId: Operations_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The object containing information for the availability request.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityStatus'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/listKeys?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    post:
      tags:
        - ConfigurationStores
      description: Lists the access key for the specified configuration store.
      operationId: ConfigurationStores_ListKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: $skipToken
          in: query
          description: A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/regenerateKey?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    post:
      tags:
        - ConfigurationStores
      description: Regenerates an access key for the specified configuration store.
      operationId: ConfigurationStores_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      requestBody:
        description: The parameters for regenerating an access key.
        required: true
        x-ms-requestBody-name: regenerateKeyParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeyParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: exec
  /providers/Microsoft.AppConfiguration/operations?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - Operations
      description: Lists the operations available from this provider.
      operationId: Operations_List
      parameters:
        - name: $skipToken
          in: query
          description: A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDefinitionListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_ListByConfigurationStore
      description: Lists all private endpoint connections for a configuration store.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection associated with the configuration store.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Private endpoint connection name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: exec
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_CreateOrUpdate
      description: Update the state of the specified private endpoint connection associated with the configuration store.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Private endpoint connection name
          required: true
          schema:
            type: string
      requestBody:
        description: The private endpoint connection properties.
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: insert
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes a private endpoint connection.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: privateEndpointConnectionName
          in: path
          description: Private endpoint connection name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: private_endpoint_connections
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByConfigurationStore
      description: Gets the private link resources that need to be created for a configuration store.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources/{groupName}?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_Get
      description: Gets a private link resource that need to be created for a configuration store.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: groupName
          in: path
          description: The name of the private link resource group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: private_link_resources
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/keyValues?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - KeyValues
      description: Lists the key-values for a given configuration store.
      operationId: KeyValues_ListByConfigurationStore
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: $skipToken
          in: query
          description: A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValueListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: key_values
      x-stackQL-verb: select
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/keyValues/{keyValueName}?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - KeyValues
      description: Gets the properties of the specified key-value.
      operationId: KeyValues_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: keyValueName
          in: path
          description: Identifier of key and label combination. Key and label are joined by $ character. Label is optional.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValue'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: key_values
      x-stackQL-verb: exec
    put:
      tags:
        - KeyValues
      description: Creates a key-value.
      operationId: KeyValues_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: keyValueName
          in: path
          description: Identifier of key and label combination. Key and label are joined by $ character. Label is optional.
          required: true
          schema:
            type: string
      requestBody:
        description: The parameters for creating a key-value.
        required: false
        x-ms-requestBody-name: keyValueParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyValue'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyValue'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: key_values
      x-stackQL-verb: insert
    delete:
      tags:
        - KeyValues
      description: Deletes a key-value.
      operationId: KeyValues_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
        - name: keyValueName
          in: path
          description: Identifier of key and label combination. Key and label are joined by $ character. Label is optional.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-stackQL-resource: key_values
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/deletedConfigurationStores?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - DeletedConfigurationStores
      operationId: ConfigurationStores_ListDeleted
      description: Gets information about the deleted configuration stores in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Retrieved information about all deleted configuration stores in a subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedConfigurationStoreListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/locations/{location}/deletedConfigurationStores/{configStoreName}?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    get:
      tags:
        - DeletedConfigurationStores
      operationId: ConfigurationStores_GetDeleted
      description: Gets a deleted Azure app configuration store.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      responses:
        '200':
          description: Retrieved information about the deleted configuration store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedConfigurationStore'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/locations/{location}/deletedConfigurationStores/{configStoreName}/purge?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    post:
      tags:
        - DeletedConfigurationStores
      operationId: ConfigurationStores_PurgeDeleted
      x-ms-long-running-operation: true
      description: Permanently deletes the specified configuration store.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/ConfigStoreNameParameter'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
        '202':
          description: The request was successful; the operation will complete asynchronously.
        '204':
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: configuration_stores
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/locations/{location}/checkNameAvailability?api-version=2022-05-01:
    x-api-version: '2022-05-01'
    post:
      tags:
        - Operations
      description: Checks whether the configuration store name is available for use.
      operationId: Operations_RegionalCheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The object containing information for the availability request.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: The request was successful; the request was well-formed and received properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityStatus'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: operations
      x-stackQL-verb: exec
