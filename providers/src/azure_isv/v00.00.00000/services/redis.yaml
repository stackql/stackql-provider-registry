openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Cache for Redis
  description: Azure Cache for Redis is based on the popular open-source Redis cache. It gives you access to a secure, dedicated Redis server, managed by Microsoft and accessible from any application within Azure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    CacheNameParameter:
      name: cacheName
      in: path
      description: The name of the Redis cache.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$
        type: string
    AccessPolicyNameParameter:
      name: accessPolicyName
      in: path
      description: The name of the access policy that is being added to the Redis cache.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9- ]*[a-zA-Z0-9]|[a-zA-Z0-9])$
        minLength: 3
        maxLength: 63
        type: string
    AccessPolicyAssignmentNameParameter:
      name: accessPolicyAssignmentName
      in: path
      description: The name of the access policy assignment.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$
        minLength: 3
        maxLength: 63
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      properties:
        name:
          type: string
          description: 'The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)'
          enum:
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuName
            modelAsString: true
        family:
          type: string
          description: 'The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).'
          enum:
            - C
            - P
          x-ms-enum:
            name: SkuFamily
            modelAsString: true
        capacity:
          type: integer
          format: int32
          description: 'The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).'
      required:
        - name
        - family
        - capacity
      description: SKU parameters supplied to the create Redis operation.
      type: object
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: REST API operation
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that describes the operation.
          properties:
            provider:
              description: Friendly name of the resource provider
              type: string
            operation:
              description: 'Operation type: read, write, delete, listKeys/action, etc.'
              type: string
            resource:
              description: Resource type on which the operation is performed.
              type: string
            description:
              description: Friendly name of the operation
              type: string
    OperationListResult:
      description: Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider.
        nextLink:
          type: string
          readOnly: true
          description: URL to get the next set of operation list results if there are any.
      type: object
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    RedisCommonProperties:
      properties:
        redisConfiguration:
          type: object
          properties:
            rdb-backup-enabled:
              type: string
              description: Specifies whether the rdb backup is enabled
            rdb-backup-frequency:
              type: string
              description: 'Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440)'
            rdb-backup-max-snapshot-count:
              type: string
              description: Specifies the maximum number of snapshots for rdb backup
            rdb-storage-connection-string:
              type: string
              description: The storage account connection string for storing rdb file
            aof-backup-enabled:
              type: string
              description: Specifies whether the aof backup is enabled
            aof-storage-connection-string-0:
              type: string
              description: First storage account connection string
            aof-storage-connection-string-1:
              type: string
              description: Second storage account connection string
            maxfragmentationmemory-reserved:
              type: string
              description: Value in megabytes reserved for fragmentation per shard
            maxmemory-policy:
              type: string
              description: The eviction strategy used when your data won't fit within its memory limit.
            maxmemory-reserved:
              type: string
              description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
            maxmemory-delta:
              type: string
              description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
            maxclients:
              type: string
              description: The max clients config
              readOnly: true
            notify-keyspace-events:
              type: string
              description: The keyspace events which should be monitored.
            preferred-data-archive-auth-method:
              type: string
              description: Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS
              readOnly: true
            preferred-data-persistence-auth-method:
              type: string
              description: Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS
            zonal-configuration:
              type: string
              description: Zonal Configuration
              readOnly: true
            authnotrequired:
              type: string
              description: Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view.
            storage-subscription-id:
              type: string
              description: SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity.
            aad-enabled:
              type: string
              description: Specifies whether AAD based authentication has been enabled or disabled for the cache
          additionalProperties: {}
          description: 'All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta, maxmemory-policy,notify-keyspace-events, aof-backup-enabled, aof-storage-connection-string-0, aof-storage-connection-string-1 etc.'
        redisVersion:
          type: string
          description: 'Redis version. This should be in the form ''major[.minor]'' (only ''major'' is required) or the value ''latest'' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is ''latest''.'
        enableNonSslPort:
          type: boolean
          default: false
          description: Specifies whether the non-ssl Redis server port (6379) is enabled.
        replicasPerMaster:
          type: integer
          format: int32
          description: The number of replicas to be created per primary.
        replicasPerPrimary:
          type: integer
          format: int32
          description: The number of replicas to be created per primary.
        tenantSettings:
          type: object
          additionalProperties:
            type: string
          description: A dictionary of tenant settings
        shardCount:
          type: integer
          format: int32
          description: The number of shards to be created on a Premium Cluster Cache.
        minimumTlsVersion:
          type: string
          description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        publicNetworkAccess:
          description: Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
          enum:
            - Enabled
            - Disabled
          default: Enabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        updateChannel:
          type: string
          description: 'Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using ''Preview'' update channel get latest Redis updates at least 4 weeks ahead of ''Stable'' channel caches. Default value is ''Stable''.'
          enum:
            - Stable
            - Preview
          x-ms-enum:
            name: UpdateChannel
            modelAsString: true
        disableAccessKeyAuthentication:
          type: boolean
          description: Authentication to Redis through access keys is disabled when set as true. Default value is false.
          default: false
        zonalAllocationPolicy:
          type: string
          description: 'Optional: Specifies how availability zones are allocated to the Redis cache. ''Automatic'' enables zone redundancy and Azure will select zones based on regional availability and capacity. ''UserDefined'' will select availability zones passed in by you using the ''zones'' parameter. ''NoZones'' will produce a non-zonal cache. If ''zonalAllocation'' is not passed, it will be set to ''UserDefined'' when zones are passed in, otherwise, will be set to ''NoZones'''
          enum:
            - Automatic
            - UserDefined
            - NoZones
          x-ms-enum:
            name: ZonalAllocationPolicy
            modelAsString: true
      description: Create/Update/Get common properties of the redis cache.
      x-ms-external: true
      type: object
    RedisCreateProperties:
      required:
        - sku
      description: Properties supplied to Create Redis operation.
      x-ms-external: true
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the Redis cache to deploy.
        subnetId:
          type: string
          pattern: ^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$
          description: 'The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1'
        staticIP:
          type: string
          pattern: ^\d+\.\d+\.\d+\.\d+$
          description: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
          x-ms-mutability:
            - read
            - create
        redisConfiguration:
          type: object
          properties:
            rdb-backup-enabled:
              type: string
              description: Specifies whether the rdb backup is enabled
            rdb-backup-frequency:
              type: string
              description: 'Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440)'
            rdb-backup-max-snapshot-count:
              type: string
              description: Specifies the maximum number of snapshots for rdb backup
            rdb-storage-connection-string:
              type: string
              description: The storage account connection string for storing rdb file
            aof-backup-enabled:
              type: string
              description: Specifies whether the aof backup is enabled
            aof-storage-connection-string-0:
              type: string
              description: First storage account connection string
            aof-storage-connection-string-1:
              type: string
              description: Second storage account connection string
            maxfragmentationmemory-reserved:
              type: string
              description: Value in megabytes reserved for fragmentation per shard
            maxmemory-policy:
              type: string
              description: The eviction strategy used when your data won't fit within its memory limit.
            maxmemory-reserved:
              type: string
              description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
            maxmemory-delta:
              type: string
              description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
            maxclients:
              type: string
              description: The max clients config
              readOnly: true
            notify-keyspace-events:
              type: string
              description: The keyspace events which should be monitored.
            preferred-data-archive-auth-method:
              type: string
              description: Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS
              readOnly: true
            preferred-data-persistence-auth-method:
              type: string
              description: Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS
            zonal-configuration:
              type: string
              description: Zonal Configuration
              readOnly: true
            authnotrequired:
              type: string
              description: Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view.
            storage-subscription-id:
              type: string
              description: SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity.
            aad-enabled:
              type: string
              description: Specifies whether AAD based authentication has been enabled or disabled for the cache
          additionalProperties: {}
          description: 'All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta, maxmemory-policy,notify-keyspace-events, aof-backup-enabled, aof-storage-connection-string-0, aof-storage-connection-string-1 etc.'
        redisVersion:
          type: string
          description: 'Redis version. This should be in the form ''major[.minor]'' (only ''major'' is required) or the value ''latest'' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is ''latest''.'
        enableNonSslPort:
          type: boolean
          default: false
          description: Specifies whether the non-ssl Redis server port (6379) is enabled.
        replicasPerMaster:
          type: integer
          format: int32
          description: The number of replicas to be created per primary.
        replicasPerPrimary:
          type: integer
          format: int32
          description: The number of replicas to be created per primary.
        tenantSettings:
          type: object
          additionalProperties:
            type: string
          description: A dictionary of tenant settings
        shardCount:
          type: integer
          format: int32
          description: The number of shards to be created on a Premium Cluster Cache.
        minimumTlsVersion:
          type: string
          description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        publicNetworkAccess:
          description: Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
          enum:
            - Enabled
            - Disabled
          default: Enabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        updateChannel:
          type: string
          description: 'Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using ''Preview'' update channel get latest Redis updates at least 4 weeks ahead of ''Stable'' channel caches. Default value is ''Stable''.'
          enum:
            - Stable
            - Preview
          x-ms-enum:
            name: UpdateChannel
            modelAsString: true
        disableAccessKeyAuthentication:
          type: boolean
          description: Authentication to Redis through access keys is disabled when set as true. Default value is false.
          default: false
        zonalAllocationPolicy:
          type: string
          description: 'Optional: Specifies how availability zones are allocated to the Redis cache. ''Automatic'' enables zone redundancy and Azure will select zones based on regional availability and capacity. ''UserDefined'' will select availability zones passed in by you using the ''zones'' parameter. ''NoZones'' will produce a non-zonal cache. If ''zonalAllocation'' is not passed, it will be set to ''UserDefined'' when zones are passed in, otherwise, will be set to ''NoZones'''
          enum:
            - Automatic
            - UserDefined
            - NoZones
          x-ms-enum:
            name: ZonalAllocationPolicy
            modelAsString: true
      type: object
    RedisUpdateProperties:
      description: Patchable properties of the redis cache.
      x-ms-external: true
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the Redis cache to deploy.
        redisConfiguration:
          type: object
          properties:
            rdb-backup-enabled:
              type: string
              description: Specifies whether the rdb backup is enabled
            rdb-backup-frequency:
              type: string
              description: 'Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440)'
            rdb-backup-max-snapshot-count:
              type: string
              description: Specifies the maximum number of snapshots for rdb backup
            rdb-storage-connection-string:
              type: string
              description: The storage account connection string for storing rdb file
            aof-backup-enabled:
              type: string
              description: Specifies whether the aof backup is enabled
            aof-storage-connection-string-0:
              type: string
              description: First storage account connection string
            aof-storage-connection-string-1:
              type: string
              description: Second storage account connection string
            maxfragmentationmemory-reserved:
              type: string
              description: Value in megabytes reserved for fragmentation per shard
            maxmemory-policy:
              type: string
              description: The eviction strategy used when your data won't fit within its memory limit.
            maxmemory-reserved:
              type: string
              description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
            maxmemory-delta:
              type: string
              description: Value in megabytes reserved for non-cache usage per shard e.g. failover.
            maxclients:
              type: string
              description: The max clients config
              readOnly: true
            notify-keyspace-events:
              type: string
              description: The keyspace events which should be monitored.
            preferred-data-archive-auth-method:
              type: string
              description: Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS
              readOnly: true
            preferred-data-persistence-auth-method:
              type: string
              description: Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS
            zonal-configuration:
              type: string
              description: Zonal Configuration
              readOnly: true
            authnotrequired:
              type: string
              description: Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view.
            storage-subscription-id:
              type: string
              description: SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity.
            aad-enabled:
              type: string
              description: Specifies whether AAD based authentication has been enabled or disabled for the cache
          additionalProperties: {}
          description: 'All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta, maxmemory-policy,notify-keyspace-events, aof-backup-enabled, aof-storage-connection-string-0, aof-storage-connection-string-1 etc.'
        redisVersion:
          type: string
          description: 'Redis version. This should be in the form ''major[.minor]'' (only ''major'' is required) or the value ''latest'' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is ''latest''.'
        enableNonSslPort:
          type: boolean
          default: false
          description: Specifies whether the non-ssl Redis server port (6379) is enabled.
        replicasPerMaster:
          type: integer
          format: int32
          description: The number of replicas to be created per primary.
        replicasPerPrimary:
          type: integer
          format: int32
          description: The number of replicas to be created per primary.
        tenantSettings:
          type: object
          additionalProperties:
            type: string
          description: A dictionary of tenant settings
        shardCount:
          type: integer
          format: int32
          description: The number of shards to be created on a Premium Cluster Cache.
        minimumTlsVersion:
          type: string
          description: 'Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, ''1.0'', ''1.1'', ''1.2'')'
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        publicNetworkAccess:
          description: Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'
          enum:
            - Enabled
            - Disabled
          default: Enabled
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        updateChannel:
          type: string
          description: 'Optional: Specifies the update channel for the monthly Redis updates your Redis Cache will receive. Caches using ''Preview'' update channel get latest Redis updates at least 4 weeks ahead of ''Stable'' channel caches. Default value is ''Stable''.'
          enum:
            - Stable
            - Preview
          x-ms-enum:
            name: UpdateChannel
            modelAsString: true
        disableAccessKeyAuthentication:
          type: boolean
          description: Authentication to Redis through access keys is disabled when set as true. Default value is false.
          default: false
        zonalAllocationPolicy:
          type: string
          description: 'Optional: Specifies how availability zones are allocated to the Redis cache. ''Automatic'' enables zone redundancy and Azure will select zones based on regional availability and capacity. ''UserDefined'' will select availability zones passed in by you using the ''zones'' parameter. ''NoZones'' will produce a non-zonal cache. If ''zonalAllocation'' is not passed, it will be set to ''UserDefined'' when zones are passed in, otherwise, will be set to ''NoZones'''
          enum:
            - Automatic
            - UserDefined
            - NoZones
          x-ms-enum:
            name: ZonalAllocationPolicy
            modelAsString: true
      type: object
    RedisProperties:
      description: Properties of the redis cache.
      x-ms-external: true
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: Redis instance provisioning status.
          enum:
            - Creating
            - Deleting
            - Disabled
            - Failed
            - Linking
            - Provisioning
            - RecoveringScaleFailure
            - Scaling
            - Succeeded
            - Unlinking
            - Unprovisioning
            - Updating
            - ConfiguringAAD
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        hostName:
          readOnly: true
          type: string
          description: Redis host name.
        port:
          readOnly: true
          type: integer
          format: int32
          description: Redis non-SSL port.
        sslPort:
          readOnly: true
          type: integer
          format: int32
          description: Redis SSL port.
        accessKeys:
          readOnly: true
          $ref: '#/components/schemas/RedisAccessKeys'
          description: The keys of the Redis cache - not set if this object is not the response to Create or Update redis cache
        linkedServers:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RedisLinkedServer'
          description: List of the linked servers associated with the cache
        instances:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RedisInstanceDetails'
          x-ms-identifiers:
            - shardId
          description: List of the Redis instances associated with the cache
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: List of private endpoint connection associated with the specified redis cache
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of the Redis cache to deploy.
        subnetId:
          type: string
          pattern: ^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$
          description: 'The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1'
        staticIP:
          type: string
          pattern: ^\d+\.\d+\.\d+\.\d+$
          description: Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default.
          x-ms-mutability:
            - read
            - create
      type: object
    RedisCreateParameters:
      required:
        - properties
        - location
      description: Parameters supplied to the Create Redis operation.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisCreateProperties'
          description: Redis cache properties.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting where the resource needs to come from.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the resource.
      type: object
    RedisUpdateParameters:
      description: Parameters supplied to the Update Redis operation.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisUpdateProperties'
          description: Redis cache properties.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the resource.
      type: object
    RedisAccessKeys:
      properties:
        primaryKey:
          readOnly: true
          type: string
          description: The current primary key that clients can use to authenticate with Redis cache.
        secondaryKey:
          readOnly: true
          type: string
          description: The current secondary key that clients can use to authenticate with Redis cache.
      description: Redis cache access keys.
      type: object
    RedisFirewallRule:
      description: A firewall rule on a redis cache has a name, and describes a contiguous range of IP addresses permitted to connect
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisFirewallRuleProperties'
          description: redis cache firewall rule properties
      type: object
    RedisFirewallRuleCreateParameters:
      description: Parameters required for creating a firewall rule on redis cache. (Note, you can just use the FirewallRule type instead now.)
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisFirewallRuleProperties'
          description: redis cache firewall rule properties
      type: object
    RedisFirewallRuleProperties:
      description: Specifies a range of IP addresses permitted to connect to the cache
      properties:
        startIP:
          type: string
          description: lowest IP address included in the range
        endIP:
          type: string
          description: highest IP address included in the range
      required:
        - startIP
        - endIP
      type: object
    RedisFirewallRuleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RedisFirewallRule'
          description: Results of the list firewall rules operation.
        nextLink:
          type: string
          readOnly: true
          description: Link for next page of results.
      description: The response of list firewall rules Redis operation.
      type: object
    RedisResource:
      required:
        - properties
      description: A single Redis item in List or Get Operation.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisProperties'
          description: Redis cache properties.
        zones:
          type: array
          items:
            type: string
          description: A list of availability zones denoting where the resource needs to come from.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    RedisInstanceDetails:
      properties:
        sslPort:
          readOnly: true
          type: integer
          format: int32
          description: Redis instance SSL port.
        nonSslPort:
          readOnly: true
          type: integer
          format: int32
          description: If enableNonSslPort is true, provides Redis instance Non-SSL port.
        zone:
          readOnly: true
          type: string
          description: If the Cache uses availability zones, specifies availability zone where this instance is located.
        shardId:
          readOnly: true
          type: integer
          format: int32
          description: If clustering is enabled, the Shard ID of Redis Instance
        isMaster:
          readOnly: true
          type: boolean
          description: Specifies whether the instance is a primary node.
        isPrimary:
          readOnly: true
          type: boolean
          description: Specifies whether the instance is a primary node.
      description: Details of single instance of redis.
      type: object
    RedisListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RedisResource'
          description: List of Redis cache instances.
        nextLink:
          type: string
          readOnly: true
          description: Link for next page of results.
      description: The response of list Redis operation.
      type: object
    RedisRegenerateKeyParameters:
      properties:
        keyType:
          type: string
          description: The Redis access key to regenerate.
          enum:
            - Primary
            - Secondary
          x-ms-enum:
            name: RedisKeyType
            modelAsString: false
      required:
        - keyType
      description: Specifies which Redis access keys to reset.
      type: object
    RedisRebootParameters:
      properties:
        rebootType:
          type: string
          description: Which Redis node(s) to reboot. Depending on this value data loss is possible.
          enum:
            - PrimaryNode
            - SecondaryNode
            - AllNodes
          x-ms-enum:
            name: RebootType
            modelAsString: true
        shardId:
          type: integer
          format: int32
          description: If clustering is enabled, the ID of the shard to be rebooted.
        ports:
          type: array
          items:
            type: integer
          description: A list of redis instances to reboot, specified by per-instance SSL ports or non-SSL ports.
      description: Specifies which Redis node(s) to reboot.
      type: object
    ExportRDBParameters:
      properties:
        format:
          type: string
          description: File format.
        prefix:
          type: string
          description: Prefix to use for exported files.
        container:
          type: string
          description: Container name to export to.
        preferred-data-archive-auth-method:
          type: string
          description: Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS
        storage-subscription-id:
          type: string
          description: Subscription id of the storage container for data to be exported using ManagedIdentity.
      required:
        - container
        - prefix
      description: Parameters for Redis export operation.
      type: object
    ImportRDBParameters:
      properties:
        format:
          type: string
          description: File format.
        files:
          type: array
          description: files to import.
          items:
            type: string
        preferred-data-archive-auth-method:
          type: string
          description: Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS
        storage-subscription-id:
          type: string
          description: Subscription id of the storage container containing files to import using Managed Identity.
      required:
        - files
      description: Parameters for Redis import operation.
      type: object
    ScheduleEntry:
      properties:
        dayOfWeek:
          type: string
          description: Day of the week when a cache can be patched.
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
            - Everyday
            - Weekend
          x-ms-enum:
            name: DayOfWeek
            modelAsString: false
        startHourUtc:
          type: integer
          format: int32
          description: Start hour after which cache patching can start.
        maintenanceWindow:
          type: string
          format: duration
          description: 'ISO8601 timespan specifying how much time cache patching can take. '
      required:
        - dayOfWeek
        - startHourUtc
      description: Patch schedule entry for a Premium Redis Cache.
      type: object
    ScheduleEntries:
      properties:
        scheduleEntries:
          x-ms-client-name: ScheduleEntries
          type: array
          items:
            $ref: '#/components/schemas/ScheduleEntry'
          x-ms-identifiers: []
          description: List of patch schedules for a Redis cache.
      required:
        - scheduleEntries
      description: List of patch schedules for a Redis cache.
      type: object
    RedisPatchSchedule:
      required:
        - properties
      description: Response to put/get patch schedules for Redis cache.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ScheduleEntries'
          description: List of patch schedules for a Redis cache.
        location:
          type: string
          description: The geo-location where the resource lives
          readOnly: true
      type: object
    RedisPatchScheduleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RedisPatchSchedule'
          description: Results of the list patch schedules operation.
        nextLink:
          type: string
          readOnly: true
          description: Link for next page of results.
      description: The response of list patch schedules Redis operation.
      type: object
    RedisForceRebootResponse:
      properties:
        message:
          readOnly: true
          type: string
          description: Status message
      description: Response to force reboot for Redis cache.
      type: object
    RedisLinkedServer:
      description: Linked server Id
      properties:
        id:
          readOnly: true
          type: string
          description: Linked server Id.
      type: object
    RedisLinkedServerWithProperties:
      description: Response to put/get linked server (with properties) for Redis cache.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisLinkedServerProperties'
          description: Properties of the linked server.
      type: object
    RedisLinkedServerProperties:
      description: Properties of a linked server to be returned in get/put response
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: Terminal state of the link between primary and secondary redis cache.
        linkedRedisCacheId:
          type: string
          description: Fully qualified resourceId of the linked redis cache.
        linkedRedisCacheLocation:
          type: string
          description: Location of the linked redis cache.
          x-ms-mutability:
            - create
            - read
        serverRole:
          type: string
          description: Role of the linked server.
          enum:
            - Primary
            - Secondary
          x-ms-enum:
            name: ReplicationRole
            modelAsString: false
        geoReplicatedPrimaryHostName:
          type: string
          readOnly: true
          description: The unchanging DNS name which will always point to current geo-primary cache among the linked redis caches for seamless Geo Failover experience.
        primaryHostName:
          type: string
          readOnly: true
          description: The changing DNS name that resolves to the current geo-primary cache among the linked redis caches before or after the Geo Failover.
      type: object
    RedisLinkedServerWithPropertiesList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RedisLinkedServerWithProperties'
          description: List of linked servers (with properties) of a Redis cache.
        nextLink:
          type: string
          readOnly: true
          description: Link for next set.
      description: List of linked servers (with properties) of a Redis cache.
      type: object
    RedisLinkedServerCreateProperties:
      description: Create properties for a linked server
      properties:
        linkedRedisCacheId:
          type: string
          description: Fully qualified resourceId of the linked redis cache.
        linkedRedisCacheLocation:
          type: string
          description: Location of the linked redis cache.
          x-ms-mutability:
            - create
            - read
        serverRole:
          type: string
          description: Role of the linked server.
          enum:
            - Primary
            - Secondary
          x-ms-enum:
            name: ReplicationRole
            modelAsString: false
        geoReplicatedPrimaryHostName:
          type: string
          readOnly: true
          description: The unchanging DNS name which will always point to current geo-primary cache among the linked redis caches for seamless Geo Failover experience.
        primaryHostName:
          type: string
          readOnly: true
          description: The changing DNS name that resolves to the current geo-primary cache among the linked redis caches before or after the Geo Failover.
      required:
        - linkedRedisCacheId
        - linkedRedisCacheLocation
        - serverRole
      type: object
    RedisLinkedServerCreateParameters:
      required:
        - properties
      description: Parameter required for creating a linked server to redis cache.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisLinkedServerCreateProperties'
          description: Properties required to create a linked server.
      type: object
    RedisCacheAccessPolicyProperties:
      properties:
        provisioningState:
          type: string
          description: Provisioning state of access policy
          readOnly: true
          enum:
            - Updating
            - Succeeded
            - Deleting
            - Deleted
            - Canceled
            - Failed
          x-ms-enum:
            name: AccessPolicyProvisioningState
            modelAsString: true
        type:
          type: string
          description: Built-In or Custom access policy
          readOnly: true
          enum:
            - Custom
            - BuiltIn
          x-ms-enum:
            name: AccessPolicyType
            modelAsString: true
        permissions:
          type: string
          description: Permissions for the access policy. Learn how to configure permissions at https://aka.ms/redis/AADPreRequisites
      required:
        - permissions
      description: All properties of an access policy.
      type: object
    RedisCacheAccessPolicy:
      description: Response to get/put access policy.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisCacheAccessPolicyProperties'
          description: Properties of an access policy.
      type: object
    RedisCacheAccessPolicyList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RedisCacheAccessPolicy'
          description: List of access policies (with properties) of a Redis cache.
        nextLink:
          type: string
          readOnly: true
          description: Link for next set.
      description: List of access policies (with properties) of a Redis cache.
      type: object
    RedisCacheAccessPolicyAssignmentProperties:
      description: Properties for an access policy assignment
      properties:
        provisioningState:
          type: string
          description: Provisioning state of an access policy assignment set
          readOnly: true
          enum:
            - Updating
            - Succeeded
            - Deleting
            - Deleted
            - Canceled
            - Failed
          x-ms-enum:
            name: AccessPolicyAssignmentProvisioningState
            modelAsString: true
        objectId:
          type: string
          description: Object Id to assign access policy to
        objectIdAlias:
          type: string
          description: User friendly name for object id. Also represents username for token based authentication
        accessPolicyName:
          type: string
          description: The name of the access policy that is being assigned
          pattern: ^([a-zA-Z0-9][a-zA-Z0-9- ]*[a-zA-Z0-9]|[a-zA-Z0-9])$
      required:
        - objectId
        - objectIdAlias
        - accessPolicyName
      type: object
    RedisCacheAccessPolicyAssignment:
      description: Response to an operation on access policy assignment
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RedisCacheAccessPolicyAssignmentProperties'
          description: Properties of an access policy assignment
      type: object
    RedisCacheAccessPolicyAssignmentList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RedisCacheAccessPolicyAssignment'
          description: List of access policies assignments (with properties) of a Redis cache.
        nextLink:
          type: string
          readOnly: true
          description: Link for next set.
      description: List of access policies assignments (with properties) of a Redis cache.
      type: object
    CheckNameAvailabilityParameters:
      description: Parameters body to pass for resource name availability check.
      properties:
        name:
          type: string
          description: Resource name.
        type:
          type: string
          description: Resource type. The only legal value of this property for checking redis cache name availability is 'Microsoft.Cache/redis'.
      required:
        - name
        - type
      type: object
    UpgradeNotification:
      properties:
        name:
          readOnly: true
          type: string
          description: Name of upgrade notification.
        timestamp:
          readOnly: true
          type: string
          format: date-time
          description: Timestamp when upgrade notification occurred.
        upsellNotification:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: Details about this upgrade notification
      description: Properties of upgrade notification.
      type: object
    NotificationListResponse:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/UpgradeNotification'
          x-ms-identifiers:
            - name
            - timestamp
          description: List of all notifications.
        nextLink:
          type: string
          readOnly: true
          description: Link for next set of notifications.
      description: The response of listUpgradeNotifications.
      type: object
    OperationStatus:
      description: Asynchronous operation status
      properties:
        properties:
          description: Additional properties from RP, only when operation is successful
          type: object
          additionalProperties: {}
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
      type: object
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
  x-stackQL-resources:
    operations:
      id: azure_isv.redis.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Cache~1operations?api-version=2024-04-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    redis:
      id: azure_isv.redis.redis
      name: redis
      title: redis
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cache~1CheckNameAvailability?api-version=2024-04-01-preview/post'
            operationId: Redis_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}?api-version=2024-04-01-preview/put'
            operationId: Redis_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}?api-version=2024-04-01-preview/patch'
            operationId: Redis_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}?api-version=2024-04-01-preview/delete'
            operationId: Redis_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}?api-version=2024-04-01-preview/get'
            operationId: Redis_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisResource
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis?api-version=2024-04-01-preview/get'
            operationId: Redis_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cache~1redis?api-version=2024-04-01-preview/get'
            operationId: Redis_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisListResult
            objectKey: $.value
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1regenerateKey?api-version=2024-04-01-preview/post'
            operationId: Redis_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisAccessKeys
        force_reboot:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1forceReboot?api-version=2024-04-01-preview/post'
            operationId: Redis_ForceReboot
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisForceRebootResponse
        import_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1import?api-version=2024-04-01-preview/post'
            operationId: Redis_ImportData
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1export?api-version=2024-04-01-preview/post'
            operationId: Redis_ExportData
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        flush_cache:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1flush?api-version=2024-04-01-preview/post'
            operationId: Redis_FlushCache
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatusResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/redis/methods/get'
          - $ref: '#/components/x-stackQL-resources/redis/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/redis/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/redis/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/redis/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/redis/methods/delete'
    upgrade_notifications:
      id: azure_isv.redis.upgrade_notifications
      name: upgrade_notifications
      title: upgrade_notifications
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1listUpgradeNotifications?api-version=2024-04-01-preview/get'
            operationId: RedisUpgradeNotifications_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotificationListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/upgrade_notifications/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    keys:
      id: azure_isv.redis.keys
      name: keys
      title: keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1listKeys?api-version=2024-04-01-preview/post'
            operationId: RedisKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisAccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    firewall_rules:
      id: azure_isv.redis.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1firewallRules?api-version=2024-04-01-preview/get'
            operationId: FirewallRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisFirewallRuleListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1firewallRules~1{ruleName}?api-version=2024-04-01-preview/put'
            operationId: FirewallRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisFirewallRule
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1firewallRules~1{ruleName}?api-version=2024-04-01-preview/get'
            operationId: FirewallRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisFirewallRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1firewallRules~1{ruleName}?api-version=2024-04-01-preview/delete'
            operationId: FirewallRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    patch_schedules:
      id: azure_isv.redis.patch_schedules
      name: patch_schedules
      title: patch_schedules
      methods:
        list_by_redis_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1patchSchedules?api-version=2024-04-01-preview/get'
            operationId: PatchSchedules_ListByRedisResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisPatchScheduleListResult
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1patchSchedules~1{default}?api-version=2024-04-01-preview/put'
            operationId: PatchSchedules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisPatchSchedule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1patchSchedules~1{default}?api-version=2024-04-01-preview/delete'
            operationId: PatchSchedules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1patchSchedules~1{default}?api-version=2024-04-01-preview/get'
            operationId: PatchSchedules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisPatchSchedule
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/patch_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/patch_schedules/methods/list_by_redis_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/patch_schedules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/patch_schedules/methods/delete'
    linked_servers:
      id: azure_isv.redis.linked_servers
      name: linked_servers
      title: linked_servers
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1linkedServers~1{linkedServerName}?api-version=2024-04-01-preview/put'
            operationId: LinkedServer_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisLinkedServerWithProperties
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1linkedServers~1{linkedServerName}?api-version=2024-04-01-preview/delete'
            operationId: LinkedServer_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1linkedServers~1{linkedServerName}?api-version=2024-04-01-preview/get'
            operationId: LinkedServer_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisLinkedServerWithProperties
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{name}~1linkedServers?api-version=2024-04-01-preview/get'
            operationId: LinkedServer_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisLinkedServerWithPropertiesList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/linked_servers/methods/get'
          - $ref: '#/components/x-stackQL-resources/linked_servers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/linked_servers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/linked_servers/methods/delete'
    private_endpoint_connections:
      id: azure_isv.redis.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1privateEndpointConnections?api-version=2024-04-01-preview/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-01-preview/put'
            operationId: PrivateEndpointConnections_Put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-04-01-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure_isv.redis.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_redis_cache:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1privateLinkResources?api-version=2024-04-01-preview/get'
            operationId: PrivateLinkResources_ListByRedisCache
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_redis_cache'
        insert: []
        update: []
        replace: []
        delete: []
    async_operation_status:
      id: azure_isv.redis.async_operation_status
      name: async_operation_status
      title: async_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cache~1locations~1{location}~1asyncOperations~1{operationId}?api-version=2024-04-01-preview/get'
            operationId: AsyncOperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/async_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    access_policies:
      id: azure_isv.redis.access_policies
      name: access_policies
      title: access_policies
      methods:
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicies~1{accessPolicyName}?api-version=2024-04-01-preview/put'
            operationId: AccessPolicy_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisCacheAccessPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicies~1{accessPolicyName}?api-version=2024-04-01-preview/delete'
            operationId: AccessPolicy_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicies~1{accessPolicyName}?api-version=2024-04-01-preview/get'
            operationId: AccessPolicy_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisCacheAccessPolicy
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicies?api-version=2024-04-01-preview/get'
            operationId: AccessPolicy_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisCacheAccessPolicyList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/delete'
    access_policy_assignments:
      id: azure_isv.redis.access_policy_assignments
      name: access_policy_assignments
      title: access_policy_assignments
      methods:
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicyAssignments~1{accessPolicyAssignmentName}?api-version=2024-04-01-preview/put'
            operationId: AccessPolicyAssignment_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisCacheAccessPolicyAssignment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicyAssignments~1{accessPolicyAssignmentName}?api-version=2024-04-01-preview/delete'
            operationId: AccessPolicyAssignment_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicyAssignments~1{accessPolicyAssignmentName}?api-version=2024-04-01-preview/get'
            operationId: AccessPolicyAssignment_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisCacheAccessPolicyAssignment
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redis~1{cacheName}~1accessPolicyAssignments?api-version=2024-04-01-preview/get'
            operationId: AccessPolicyAssignment_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RedisCacheAccessPolicyAssignmentList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/delete'
    vw_redis:
      id: azure_isv.redis.vw_redis
      name: vw_redis
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              zones as zones,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.port') as "port",
              JSON_EXTRACT(properties, '$.sslPort') as "ssl_port",
              JSON_EXTRACT(properties, '$.accessKeys') as "access_keys",
              JSON_EXTRACT(properties, '$.linkedServers') as "linked_servers",
              JSON_EXTRACT(properties, '$.instances') as "instances",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.subnetId') as "subnet_id",
              JSON_EXTRACT(properties, '$.staticIP') as "static_ip",
              subscriptionId,
              resourceGroupName,
              name
              FROM azure_isv.redis.redis
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                zones as zones,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.port') as "port",
                json_extract_path_text(properties, '$.sslPort') as "ssl_port",
                json_extract_path_text(properties, '$.accessKeys') as "access_keys",
                json_extract_path_text(properties, '$.linkedServers') as "linked_servers",
                json_extract_path_text(properties, '$.instances') as "instances",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.subnetId') as "subnet_id",
                json_extract_path_text(properties, '$.staticIP') as "static_ip",
                subscriptionId,
                resourceGroupName,
                name
                FROM azure_isv.redis.redis
                WHERE subscriptionId = 'replace-me';
    vw_firewall_rules:
      id: azure_isv.redis.vw_firewall_rules
      name: vw_firewall_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startIP') as "start_ip",
              JSON_EXTRACT(properties, '$.endIP') as "end_ip",
              subscriptionId,
              resourceGroupName,
              cacheName,
              ruleName
              FROM azure_isv.redis.firewall_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startIP') as "start_ip",
                json_extract_path_text(properties, '$.endIP') as "end_ip",
                subscriptionId,
                resourceGroupName,
                cacheName,
                ruleName
                FROM azure_isv.redis.firewall_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
    vw_patch_schedules:
      id: azure_isv.redis.vw_patch_schedules
      name: vw_patch_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              JSON_EXTRACT(properties, '$.scheduleEntries') as "schedule_entries",
              subscriptionId,
              resourceGroupName,
              name,
              default,
              cacheName
              FROM azure_isv.redis.patch_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                json_extract_path_text(properties, '$.scheduleEntries') as "schedule_entries",
                subscriptionId,
                resourceGroupName,
                name,
                default,
                cacheName
                FROM azure_isv.redis.patch_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
    vw_linked_servers:
      id: azure_isv.redis.vw_linked_servers
      name: vw_linked_servers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.linkedRedisCacheId') as "linked_redis_cache_id",
              JSON_EXTRACT(properties, '$.linkedRedisCacheLocation') as "linked_redis_cache_location",
              JSON_EXTRACT(properties, '$.serverRole') as "server_role",
              JSON_EXTRACT(properties, '$.geoReplicatedPrimaryHostName') as "geo_replicated_primary_host_name",
              JSON_EXTRACT(properties, '$.primaryHostName') as "primary_host_name",
              subscriptionId,
              resourceGroupName,
              name,
              linkedServerName
              FROM azure_isv.redis.linked_servers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND name = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.linkedRedisCacheId') as "linked_redis_cache_id",
                json_extract_path_text(properties, '$.linkedRedisCacheLocation') as "linked_redis_cache_location",
                json_extract_path_text(properties, '$.serverRole') as "server_role",
                json_extract_path_text(properties, '$.geoReplicatedPrimaryHostName') as "geo_replicated_primary_host_name",
                json_extract_path_text(properties, '$.primaryHostName') as "primary_host_name",
                subscriptionId,
                resourceGroupName,
                name,
                linkedServerName
                FROM azure_isv.redis.linked_servers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND name = 'replace-me';
    vw_private_endpoint_connections:
      id: azure_isv.redis.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              cacheName,
              privateEndpointConnectionName
              FROM azure_isv.redis.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                cacheName,
                privateEndpointConnectionName
                FROM azure_isv.redis.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
    vw_access_policies:
      id: azure_isv.redis.vw_access_policies
      name: vw_access_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.permissions') as "permissions",
              subscriptionId,
              resourceGroupName,
              cacheName,
              accessPolicyName
              FROM azure_isv.redis.access_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.permissions') as "permissions",
                subscriptionId,
                resourceGroupName,
                cacheName,
                accessPolicyName
                FROM azure_isv.redis.access_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
    vw_access_policy_assignments:
      id: azure_isv.redis.vw_access_policy_assignments
      name: vw_access_policy_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.objectId') as "object_id",
              JSON_EXTRACT(properties, '$.objectIdAlias') as "object_id_alias",
              JSON_EXTRACT(properties, '$.accessPolicyName') as "access_policy_name",
              subscriptionId,
              resourceGroupName,
              cacheName,
              accessPolicyAssignmentName
              FROM azure_isv.redis.access_policy_assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.objectId') as "object_id",
                json_extract_path_text(properties, '$.objectIdAlias') as "object_id_alias",
                json_extract_path_text(properties, '$.accessPolicyName') as "access_policy_name",
                subscriptionId,
                resourceGroupName,
                cacheName,
                accessPolicyAssignmentName
                FROM azure_isv.redis.access_policy_assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND cacheName = 'replace-me';
paths:
  /providers/Microsoft.Cache/operations?api-version=2024-04-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available REST API operations of the Microsoft.Cache provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Success. The response describes the list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability?api-version=2024-04-01-preview:
    post:
      tags:
        - Redis
      operationId: Redis_CheckNameAvailability
      description: Checks that the redis cache name is valid and is not already in use.
      requestBody:
        description: Parameters supplied to the CheckNameAvailability Redis operation. The only supported resource type is 'Microsoft.Cache/redis'
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Name is available
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/listUpgradeNotifications?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
      operationId: RedisUpgradeNotifications_List
      description: Gets any upgrade notifications for a Redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: history
          in: query
          description: how many minutes in past to look for upgrade notifications
          required: true
          schema:
            format: double
            type: number
      responses:
        '200':
          description: All upgrade notifications in given time range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Redis_ListUpgradeNotifications
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}?api-version=2024-04-01-preview:
    put:
      tags:
        - Redis
      operationId: Redis_Create
      description: Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Redis operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisCreateParameters'
      responses:
        '200':
          description: The existing redis cache was successfully updated. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
        '201':
          description: The new redis cache was successfully created. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Redis
      operationId: Redis_Update
      description: Update an existing Redis cache.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Redis operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisUpdateParameters'
      responses:
        '200':
          description: The existing redis cache was successfully updated. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
        '202':
          description: The existing redis cache was successfully updated. Check Azure-AsyncOperation headers to poll detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Redis
      operationId: Redis_Delete
      description: Deletes a Redis cache.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The redis cache was successfully deleted.
        '202':
          description: The redis cache 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.
        '204':
          description: The redis cache was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Redis
      operationId: Redis_Get
      description: Gets a Redis cache (resource description).
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The redis cache was successfully found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
      operationId: Redis_ListByResourceGroup
      description: Lists all Redis caches in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Cache/redis?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
      operationId: Redis_ListBySubscription
      description: Gets all Redis caches in the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/listKeys?api-version=2024-04-01-preview:
    post:
      tags:
        - Redis
      operationId: RedisKeys_List
      description: Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Lists the keys for the specified Redis cache.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisAccessKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Redis_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/regenerateKey?api-version=2024-04-01-preview:
    post:
      tags:
        - Redis
      operationId: Redis_RegenerateKey
      description: Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Specifies which key to regenerate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisRegenerateKeyParameters'
      responses:
        '200':
          description: Lists the regenerated keys for Redis Cache
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisAccessKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/forceReboot?api-version=2024-04-01-preview:
    post:
      tags:
        - Redis
      operationId: Redis_ForceReboot
      description: Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Specifies which Redis node(s) to reboot.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisRebootParameters'
      responses:
        '200':
          description: Reboot operation successfully enqueued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisForceRebootResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/import?api-version=2024-04-01-preview:
    post:
      tags:
        - Redis
      operationId: Redis_ImportData
      x-ms-long-running-operation: true
      description: Import data into Redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for Redis import operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRDBParameters'
      responses:
        '200':
          description: Import operation succeeded.
        '202':
          description: Import operation successfully enqueued; follow the Location header to poll for final outcome.
        '204':
          description: Import operation succeeded.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/export?api-version=2024-04-01-preview:
    post:
      tags:
        - Redis
      operationId: Redis_ExportData
      x-ms-long-running-operation: true
      description: Export data from the redis cache to blobs in a container.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for Redis export operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRDBParameters'
      responses:
        '200':
          description: Export operation succeeded.
        '202':
          description: Export operation successfully enqueued; follow the Location header to poll for final outcome.
        '204':
          description: Export operation succeeded.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/flush?api-version=2024-04-01-preview:
    post:
      tags:
        - Redis
      operationId: Redis_FlushCache
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/common-types/resource-management/v3/types.json#/components/schemas/OperationStatusResult
      description: Deletes all of the keys in a cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Flush operation succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResult'
          headers:
            Location:
              schema:
                type: string
              description: URL to query for the status of the operation.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for the status of the operation.
        '202':
          description: Flush operation successfully enqueued; follow the Location header to poll for final outcome.
          headers:
            Location:
              schema:
                type: string
              description: URL to query for the status of the operation.
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL to query for the status of the operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
        - FirewallRules
      operationId: FirewallRules_List
      description: Gets all firewall rules in the specified redis cache.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '200':
          description: Successfully got the current rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRuleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/firewallRules/{ruleName}?api-version=2024-04-01-preview:
    put:
      tags:
        - Redis
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Create or update a redis cache firewall rule
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - name: ruleName
          in: path
          description: The name of the firewall rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update redis firewall rule operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisFirewallRule'
      responses:
        '200':
          description: Resource was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRule'
        '201':
          description: Resource was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Redis
        - FirewallRules
      operationId: FirewallRules_Get
      description: Gets a single firewall rule in a specified redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - name: ruleName
          in: path
          description: The name of the firewall rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully found the rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisFirewallRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Redis
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes a single firewall rule in a specified redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - name: ruleName
          in: path
          description: The name of the firewall rule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the rule
        '204':
          description: Successfully deleted the rule
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/patchSchedules?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
        - PatchSchedules
      operationId: PatchSchedules_ListByRedisResource
      description: Gets all patch schedules in the specified redis cache (there is only one).
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
      responses:
        '200':
          description: Successfully got the current patch schedules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchScheduleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/patchSchedules/{default}?api-version=2024-04-01-preview:
    put:
      tags:
        - Redis
        - PatchSchedules
      operationId: PatchSchedules_CreateOrUpdate
      description: Create or replace the patching schedule for Redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - name: default
          in: path
          description: Default string modeled as parameter for auto generation to work correctly.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: defaultName
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to set the patching schedule for Redis cache.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisPatchSchedule'
      responses:
        '200':
          description: The patch schedule was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchSchedule'
        '201':
          description: The patch schedule was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchSchedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Redis
        - PatchSchedules
      operationId: PatchSchedules_Delete
      description: Deletes the patching schedule of a redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the redis cache.
          required: true
          schema:
            type: string
        - name: default
          in: path
          description: Default string modeled as parameter for auto generation to work correctly.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: defaultName
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success.
        '204':
          description: Success.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Redis
        - PatchSchedules
      operationId: PatchSchedules_Get
      description: Gets the patching schedule of a redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the redis cache.
          required: true
          schema:
            type: string
        - name: default
          in: path
          description: Default string modeled as parameter for auto generation to work correctly.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: defaultName
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Response of get patch schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisPatchSchedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers/{linkedServerName}?api-version=2024-04-01-preview:
    put:
      tags:
        - Redis
      operationId: LinkedServer_Create
      x-ms-long-running-operation: true
      description: Adds a linked server to the Redis cache (requires Premium SKU).
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the Redis cache.
          required: true
          schema:
            type: string
        - name: linkedServerName
          in: path
          description: The name of the linked server that is being added to the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Linked server operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisLinkedServerCreateParameters'
      responses:
        '200':
          description: The linked server was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithProperties'
        '201':
          description: The linked server was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Redis
      operationId: LinkedServer_Delete
      description: Deletes the linked server from a redis cache (requires Premium SKU).
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the redis cache.
          required: true
          schema:
            type: string
        - name: linkedServerName
          in: path
          description: The name of the linked server that is being added to the Redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Linked server was successfully deleted.
        '202':
          description: The linked server 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Redis
      operationId: LinkedServer_Get
      description: Gets the detailed information about a linked server of a redis cache (requires Premium SKU).
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the redis cache.
          required: true
          schema:
            type: string
        - name: linkedServerName
          in: path
          description: The name of the linked server.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Response of get linked server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithProperties'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}/linkedServers?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
      operationId: LinkedServer_List
      description: Gets the list of linked servers associated with this redis cache (requires Premium SKU).
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: name
          in: path
          description: The name of the redis cache.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Response of get linked servers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisLinkedServerWithPropertiesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections?api-version=2024-04-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: List all the private endpoint connections associated with the redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-04-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection associated with the redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Put
      description: Update the state of specified private endpoint connection associated with the redis cache.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK -- Update the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: OK -- Update the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes the specified private endpoint connection associated with the redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Delete the private endpoint connection successfully.
        '204':
          description: No Content -- The private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/privateLinkResources?api-version=2024-04-01-preview:
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByRedisCache
      description: Gets the private link resources that need to be created for a redis cache.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Cache/locations/{location}/asyncOperations/{operationId}?api-version=2024-04-01-preview:
    get:
      tags:
        - AsyncOperationStatus
      operationId: AsyncOperationStatus_Get
      description: For checking the ongoing status of an operation
      parameters:
        - name: location
          in: path
          description: The location at which operation was triggered
          required: true
          schema:
            type: string
        - name: operationId
          in: path
          description: The ID of asynchronous operation
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Asynchronous operation status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicies/{accessPolicyName}?api-version=2024-04-01-preview:
    put:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicy_CreateUpdate
      x-ms-long-running-operation: true
      description: Adds an access policy to the redis cache
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/AccessPolicyNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Update Access Policy operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisCacheAccessPolicy'
      responses:
        '200':
          description: The existing access policy was successfully updated. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicy'
        '201':
          description: The new access policy was successfully created. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicy_Delete
      description: Deletes the access policy from a redis cache
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/AccessPolicyNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the access policy
        '202':
          description: The access policy 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Successfully deleted the access policy
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicy_Get
      description: Gets the detailed information about an access policy of a redis cache
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/AccessPolicyNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Response of get access policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicies?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicy_List
      description: Gets the list of access policies associated with this redis cache
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Response of list access policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicyList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicyAssignments/{accessPolicyAssignmentName}?api-version=2024-04-01-preview:
    put:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicyAssignment_CreateUpdate
      x-ms-long-running-operation: true
      description: Adds the access policy assignment to the specified users
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/AccessPolicyAssignmentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Update Access Policy Assignment operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisCacheAccessPolicyAssignment'
      responses:
        '200':
          description: The existing access policy assignment was successfully updated. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicyAssignment'
        '201':
          description: The new access policy assignment was successfully created. Check provisioningState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicyAssignment_Delete
      description: Deletes the access policy assignment from a redis cache
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/AccessPolicyAssignmentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the access policy assignment
        '202':
          description: The access policy assignment 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Successfully deleted the access policy assignment
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicyAssignment_Get
      description: Gets the list of assignments for an access policy of a redis cache
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/AccessPolicyAssignmentNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Response of get access policy assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{cacheName}/accessPolicyAssignments?api-version=2024-04-01-preview:
    get:
      tags:
        - Redis
        - AAD
      operationId: AccessPolicyAssignment_List
      description: Gets the list of access policy assignments associated with this redis cache
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/CacheNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Response of list access policy assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisCacheAccessPolicyAssignmentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
