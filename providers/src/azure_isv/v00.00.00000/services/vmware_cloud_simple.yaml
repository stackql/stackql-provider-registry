openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure VMware Solution by CloudSimple
  description: Azure VMware Solution by CloudSimple transforms and extends VMware workloads to private, dedicated clouds on Azure in minutes. CloudSimple takes care of provisioning, managing the infrastructure, and orchestrating workloads between on-premises and Azure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription ID.
      required: true
      schema:
        type: string
    api-version:
      name: api-version
      in: query
      description: Client API version.
      required: false
      schema:
        type: string
    pcName:
      name: pcName
      in: path
      description: The private cloud name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    referer:
      name: Referer
      in: header
      description: referer url
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    regionId:
      name: regionId
      in: path
      description: The region Id (westus, eastus)
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    AvailableOperation:
      description: Resource provider available operation model
      properties:
        display:
          description: The list of operations
          $ref: '#/components/schemas/AvailableOperationDisplay'
        isDataAction:
          description: Indicating whether the operation is a data action or not
          type: boolean
          default: false
        name:
          description: '{resourceProviderNamespace}/{resourceType}/{read|write|delete|action}'
          type: string
        origin:
          description: The origin of operation
          type: string
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            modelAsString: false
            name: OperationOrigin
        properties:
          description: The list of operation properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AvailableOperationDisplayPropertyServiceSpecification'
      type: object
    AvailableOperationDisplay:
      description: Resource provider available operation display model
      type: object
      properties:
        description:
          description: Description of the operation for display purposes
          type: string
        operation:
          description: Name of the operation for display purposes
          type: string
        provider:
          description: Name of the provider for display purposes
          type: string
        resource:
          description: Name of the resource type for display purposes
          type: string
    AvailableOperationDisplayPropertyServiceSpecification:
      description: Available operation display property service specification model
      properties:
        serviceSpecification:
          description: The list of specification's service metrics
          $ref: '#/components/schemas/AvailableOperationDisplayPropertyServiceSpecificationMetricsList'
      type: object
    AvailableOperationDisplayPropertyServiceSpecificationMetricsItem:
      description: Available operation display property service specification metrics item
      required:
        - name
        - displayName
        - displayDescription
        - unit
        - aggregationType
      properties:
        aggregationType:
          description: Metric's aggregation type for e.g. (Average, Total)
          type: string
          enum:
            - Average
            - Total
          x-ms-enum:
            modelAsString: false
            name: AggregationType
        displayDescription:
          description: Metric's description
          type: string
          example: Average disk throughput due to read operations over the sample period.
        displayName:
          description: Human readable metric's name
          type: string
          example: Disk Read Bytes/Sec
        name:
          description: Metric's name/id
          type: string
          example: DiskReadBytesPerSecond
        unit:
          description: Metric's unit
          type: string
          example: BytePerSecond
      type: object
    AvailableOperationDisplayPropertyServiceSpecificationMetricsList:
      description: List of available operation display property service specification metrics
      properties:
        metricSpecifications:
          description: Metric specifications of operation
          type: array
          items:
            description: The list of specification's metrics
            $ref: '#/components/schemas/AvailableOperationDisplayPropertyServiceSpecificationMetricsItem'
          x-ms-identifiers:
            - name
            - unit
      type: object
    AvailableOperationsListResponse:
      description: List of available operations
      properties:
        nextLink:
          description: Link for next list of available operations
          type: string
        value:
          description: Returns a list of available operations
          type: array
          items:
            $ref: '#/components/schemas/AvailableOperation'
          x-ms-identifiers:
            - name
      type: object
    CSRPError:
      description: General error model
      properties:
        error:
          description: Error's body
          $ref: '#/components/schemas/CSRPErrorBody'
      type: object
    CSRPErrorBody:
      description: Error properties
      properties:
        code:
          description: Error's code
          type: string
          readOnly: true
        details:
          description: Error's details
          type: array
          items:
            $ref: '#/components/schemas/CSRPErrorBody'
          x-ms-identifiers: []
          readOnly: true
        message:
          description: Error's message
          type: string
          readOnly: true
        target:
          description: Error's target
          type: string
      type: object
    CustomizationHostName:
      description: Host name model
      type: object
      properties:
        name:
          description: Hostname
          type: string
        type:
          description: Type of host name
          type: string
          enum:
            - USER_DEFINED
            - PREFIX_BASED
            - FIXED
            - VIRTUAL_MACHINE_NAME
            - CUSTOM_NAME
    CustomizationIPAddress:
      type: object
      properties:
        argument:
          description: Argument when Custom ip type is selected
          type: string
        ipAddress:
          description: Defined Ip Address when Fixed ip type is selected
          type: string
        type:
          description: Customization Specification ip type
          type: string
          enum:
            - CUSTOM
            - DHCP_IP
            - FIXED_IP
            - USER_DEFINED
    CustomizationIPSettings:
      type: object
      properties:
        gateway:
          description: The list of gateways
          type: array
          items:
            type: string
        ip:
          description: Ip address customization settings
          $ref: '#/components/schemas/CustomizationIPAddress'
        subnetMask:
          description: Adapter subnet mask
          type: string
    CustomizationIdentity:
      type: object
      properties:
        data:
          description: Windows Text Identity. Prepared data
          type: string
        hostName:
          description: Virtual machine host name settings
          $ref: '#/components/schemas/CustomizationHostName'
        type:
          description: Identity type
          type: string
          enum:
            - WINDOWS_TEXT
            - WINDOWS
            - LINUX
        userData:
          description: Windows Identity. User data customization
          type: object
          properties:
            isPasswordPredefined:
              description: Is password predefined in customization policy
              type: boolean
              default: false
    CustomizationNicSetting:
      type: object
      properties:
        adapter:
          description: The list of adapters' settings
          $ref: '#/components/schemas/CustomizationIPSettings'
        macAddress:
          description: NIC mac address
          type: string
    CustomizationPoliciesListResponse:
      description: List of customization polices response model
      properties:
        nextLink:
          description: Link for next list of the Customization policy
          type: string
        value:
          description: List of the customization policies
          type: array
          items:
            $ref: '#/components/schemas/CustomizationPolicy'
      type: object
    CustomizationPolicy:
      description: The virtual machine customization policy
      properties:
        id:
          description: Customization policy azure id
          type: string
        location:
          description: Azure region
          type: string
        name:
          description: Customization policy name
          type: string
          readOnly: true
        properties:
          description: Customization Policy properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CustomizationPolicyProperties'
        type:
          type: string
          readOnly: true
      type: object
    CustomizationPolicyProperties:
      description: The properties of Customization policy
      type: object
      properties:
        description:
          description: Policy description
          type: string
        privateCloudId:
          description: The Private cloud id
          type: string
        specification:
          description: Detailed customization policy specification
          $ref: '#/components/schemas/CustomizationSpecification'
        type:
          description: The type of customization (Linux or Windows)
          type: string
          enum:
            - LINUX
            - WINDOWS
        version:
          description: Policy version
          type: string
    CustomizationSpecification:
      description: The specification for Customization Policy
      type: object
      properties:
        identity:
          description: Customization Identity. It contains data about user and hostname
          $ref: '#/components/schemas/CustomizationIdentity'
        nicSettings:
          description: Network interface settings
          type: array
          items:
            $ref: '#/components/schemas/CustomizationNicSetting'
          x-ms-identifiers:
            - macAddress
    DedicatedCloudNode:
      description: Dedicated cloud node model
      required:
        - location
      x-ms-azure-resource: true
      properties:
        id:
          description: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudNodes/{dedicatedCloudNodeName}
          type: string
          readOnly: true
        location:
          description: Azure region
          type: string
          x-ms-mutability:
            - read
            - create
        name:
          description: '{dedicatedCloudNodeName}'
          type: string
          pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
          readOnly: true
        properties:
          description: Dedicated Cloud Nodes properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DedicatedCloudNodeProperties'
        sku:
          description: Dedicated Cloud Nodes SKU
          $ref: '#/components/schemas/Sku'
        tags:
          description: Dedicated Cloud Nodes tags
          $ref: '#/components/schemas/Tags'
        type:
          description: '{resourceProviderNamespace}/{resourceType}'
          type: string
          readOnly: true
      type: object
    DedicatedCloudNodeListResponse:
      description: List of dedicated nodes response model
      properties:
        nextLink:
          description: Link for next list of DedicatedCloudNode
          type: string
        value:
          description: Results of the DedicatedCloudNode list
          type: array
          items:
            $ref: '#/components/schemas/DedicatedCloudNode'
      type: object
    DedicatedCloudNodeProperties:
      description: Properties of dedicated cloud node
      required:
        - placementGroupId
        - availabilityZoneId
        - purchaseId
        - nodesCount
      properties:
        availabilityZoneId:
          description: Availability Zone id, e.g. "az1"
          type: string
        availabilityZoneName:
          description: Availability Zone name, e.g. "Availability Zone 1"
          type: string
          readOnly: true
        cloudRackName:
          description: VMWare Cloud Rack Name
          type: string
          readOnly: true
        created:
          description: date time the resource was created
          format: date-time
          readOnly: true
          type: string
        nodesCount:
          description: count of nodes to create
          type: integer
        placementGroupId:
          description: Placement Group id, e.g. "n1"
          type: string
        placementGroupName:
          description: Placement Name, e.g. "Placement Group 1"
          type: string
          readOnly: true
        privateCloudId:
          description: Private Cloud Id
          type: string
          readOnly: true
        privateCloudName:
          description: Resource Pool Name
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource
          type: string
          readOnly: true
        purchaseId:
          description: purchase id
          type: string
          format: uuid
        skuDescription:
          description: Dedicated Cloud Nodes SKU's description
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SkuDescription'
        status:
          description: Node status, indicates is private cloud set up on this node or not
          type: string
          enum:
            - unused
            - used
          x-ms-enum:
            modelAsString: false
            name: NodeStatus
          readOnly: true
        vmwareClusterName:
          description: VMWare Cluster Name
          type: string
          readOnly: true
      type: object
    DedicatedCloudService:
      description: Dedicated cloud service model
      required:
        - location
      x-ms-azure-resource: true
      properties:
        id:
          description: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/dedicatedCloudServices/{dedicatedCloudServiceName}
          type: string
          readOnly: true
        location:
          description: Azure region
          type: string
          x-ms-mutability:
            - read
            - create
        name:
          description: '{dedicatedCloudServiceName}'
          type: string
          pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
          readOnly: true
        properties:
          description: The properties of Dedicated Node Service
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DedicatedCloudServiceProperties'
        tags:
          description: The list of tags
          $ref: '#/components/schemas/Tags'
        type:
          description: '{resourceProviderNamespace}/{resourceType}'
          type: string
          readOnly: true
      type: object
    DedicatedCloudServiceListResponse:
      description: List of dedicated cloud services
      properties:
        nextLink:
          description: Link for next list of DedicatedCloudNode
          type: string
        value:
          description: Results of the DedicatedCloudService list
          type: array
          items:
            $ref: '#/components/schemas/DedicatedCloudService'
      type: object
    DedicatedCloudServiceProperties:
      description: Properties of dedicated cloud service
      required:
        - gatewaySubnet
      properties:
        gatewaySubnet:
          description: gateway Subnet for the account. It will collect the subnet address and always treat it as /28
          type: string
        isAccountOnboarded:
          description: indicates whether account onboarded or not in a given region
          type: string
          enum:
            - notOnBoarded
            - onBoarded
            - onBoardingFailed
            - onBoarding
          x-ms-enum:
            modelAsString: false
            name: OnboardingStatus
          readOnly: true
        nodes:
          description: total nodes purchased
          type: integer
          readOnly: true
        serviceURL:
          description: link to a service management web portal
          type: string
          readOnly: true
      type: object
    GuestOSCustomization:
      description: Guest OS Customization properties
      properties:
        dnsServers:
          description: List of dns servers to use
          type: array
          items:
            $ref: '#/components/schemas/IPV4Address'
        hostName:
          description: Virtual Machine hostname
          type: string
        password:
          description: Password for login
          type: string
        policyId:
          description: id of customization policy
          type: string
        username:
          description: Username for login
          type: string
      type: object
    GuestOSNICCustomization:
      description: Guest OS nic customization
      properties:
        allocation:
          description: IP address allocation method
          type: string
          enum:
            - static
            - dynamic
        dnsServers:
          description: List of dns servers to use
          type: array
          items:
            $ref: '#/components/schemas/IPV4Address'
        gateway:
          description: Gateway addresses assigned to nic
          type: array
          items:
            $ref: '#/components/schemas/IPV4Address'
        ipAddress:
          description: Static ip address for nic
          $ref: '#/components/schemas/IPV4Address'
        mask:
          description: Network mask for nic
          $ref: '#/components/schemas/IPV4Address'
        primaryWinsServer:
          description: primary WINS server for Windows
          $ref: '#/components/schemas/IPV4Address'
        secondaryWinsServer:
          description: secondary WINS server for Windows
          $ref: '#/components/schemas/IPV4Address'
      type: object
    IPV4Address:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])[.]){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    OperationError:
      description: Operation error model
      properties:
        code:
          description: Error's code
          type: string
        message:
          description: Error's message
          type: string
      type: object
    OperationResource:
      description: Operation status response
      properties:
        endTime:
          description: End time of the operation
          type: string
          format: date-time
          readOnly: true
        error:
          description: Error Message if operation failed
          $ref: '#/components/schemas/OperationError'
        id:
          description: Operation Id
          type: string
          readOnly: true
        name:
          description: Operation ID
          type: string
          readOnly: true
        startTime:
          description: Start time of the operation
          type: string
          format: date-time
          readOnly: true
        status:
          description: Operation status
          type: string
          readOnly: true
      type: object
    PatchPayload:
      description: General patch payload modal
      properties:
        tags:
          description: The tags key:value pairs
          $ref: '#/components/schemas/Tags'
      type: object
    PrivateCloud:
      description: Private cloud model
      properties:
        id:
          description: Azure Id, e.g. "/subscriptions/4da99247-a172-4ed6-8ae9-ebed2d12f839/providers/Microsoft.VMwareCloudSimple/privateClouds/cloud123"
          type: string
        location:
          description: Location where private cloud created, e.g "westus"
          type: string
        name:
          description: Private cloud name
          type: string
        properties:
          description: Private cloud properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PrivateCloudProperties'
        type:
          description: Azure Resource type
          type: string
          enum:
            - Microsoft.VMwareCloudSimple/privateClouds
          x-ms-enum:
            modelAsString: false
            name: PrivateCloudResourceType
      type: object
    PrivateCloudList:
      description: List of private clouds
      properties:
        nextLink:
          description: Link for next list of Private Clouds
          type: string
        value:
          description: the list of private clouds
          type: array
          items:
            $ref: '#/components/schemas/PrivateCloud'
      type: object
    PrivateCloudProperties:
      description: Properties of private
      properties:
        availabilityZoneId:
          description: Availability Zone id, e.g. "az1"
          type: string
        availabilityZoneName:
          description: Availability Zone name, e.g. "Availability Zone 1"
          type: string
        clustersNumber:
          description: Number of clusters
          type: integer
        createdBy:
          description: User's emails who created cloud
          type: string
        createdOn:
          description: When private cloud was created
          type: string
          format: date-time
        dnsServers:
          description: Array of DNS servers
          type: array
          items:
            type: string
        expires:
          description: Expiration date of PC
          type: string
        nsxType:
          description: Nsx Type, e.g. "Advanced"
          type: string
        placementGroupId:
          description: Placement Group id, e.g. "n1"
          type: string
        placementGroupName:
          description: Placement Group name
          type: string
        privateCloudId:
          description: Id of a private cloud
          type: string
          format: uuid
        resourcePools:
          description: The list of Resource Pools
          type: array
          items:
            $ref: '#/components/schemas/ResourcePool'
        state:
          description: Private Cloud state, e.g. "operational"
          type: string
        totalCpuCores:
          description: Number of cores
          type: integer
        totalNodes:
          description: Number of nodes
          type: integer
        totalRam:
          description: Memory size
          type: integer
        totalStorage:
          description: Disk space in TB
          type: number
        type:
          description: Virtualization type e.g. "vSphere"
          type: string
        vSphereVersion:
          description: e.g. "6.5u2"
          type: string
        vcenterFqdn:
          description: FQDN for vcenter access
          type: string
        vcenterRefid:
          description: Vcenter ip address
          type: string
        virtualMachineTemplates:
          description: The list of Virtual Machine Templates
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineTemplate'
        virtualNetworks:
          description: The list of Virtual Networks
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetwork'
        vrOpsEnabled:
          description: Is vRealize Operations Manager enabled/disabled
          type: boolean
      type: object
    ResourcePool:
      description: Resource pool model
      required:
        - id
      properties:
        id:
          description: resource pool id (privateCloudId:vsphereId)
          type: string
        location:
          description: Azure region
          type: string
          readOnly: true
        name:
          description: '{ResourcePoolName}'
          type: string
          readOnly: true
        privateCloudId:
          description: The Private Cloud Id
          type: string
          readOnly: true
        properties:
          description: Resource pool properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ResourcePoolProperties'
        type:
          description: '{resourceProviderNamespace}/{resourceType}'
          type: string
          readOnly: true
      type: object
    ResourcePoolProperties:
      description: Properties of resource pool
      properties:
        fullName:
          description: Hierarchical resource pool name
          type: string
          readOnly: true
      type: object
    ResourcePoolsListResponse:
      description: List of resource pools response model
      properties:
        nextLink:
          description: Link for next list of ResourcePoolsList
          type: string
        value:
          description: Results of the Resource pools list
          type: array
          items:
            $ref: '#/components/schemas/ResourcePool'
      type: object
    Sku:
      description: The purchase SKU for CloudSimple paid resources
      required:
        - name
      properties:
        capacity:
          description: The capacity of the SKU
          type: string
        description:
          description: 'dedicatedCloudNode example: 8 x Ten-Core Intel® Xeon® Processor E5-2640 v4 2.40GHz 25MB Cache (90W); 12 x 64GB PC4-19200 2400MHz DDR4 ECC Registered DIMM, ...'
          type: string
        family:
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here
          type: string
        name:
          description: The name of the SKU for VMWare CloudSimple Node
          type: string
        tier:
          description: The tier of the SKU
          type: string
      type: object
    SkuAvailability:
      description: SKU availability model
      required:
        - limit
      properties:
        dedicatedAvailabilityZoneId:
          description: CloudSimple Availability Zone id
          type: string
        dedicatedAvailabilityZoneName:
          description: CloudSimple Availability Zone Name
          type: string
        dedicatedPlacementGroupId:
          description: CloudSimple Placement Group Id
          type: string
        dedicatedPlacementGroupName:
          description: CloudSimple Placement Group name
          type: string
        limit:
          description: indicates how many resources of a given SKU is available in a AZ->PG
          type: integer
        resourceType:
          description: resource type e.g. DedicatedCloudNodes
          type: string
        skuId:
          description: sku id
          type: string
        skuName:
          description: sku name
          type: string
      type: object
    SkuAvailabilityListResponse:
      description: List of SKU availabilities
      properties:
        nextLink:
          description: Link for next list of DedicatedCloudNode
          type: string
        value:
          description: Results of the DedicatedPlacementGroupSkuAvailability list
          type: array
          items:
            $ref: '#/components/schemas/SkuAvailability'
          x-ms-identifiers:
            - dedicatedAvailabilityZoneId
            - dedicatedPlacementGroupId
            - skuId
      type: object
    SkuDescription:
      description: The purchase SKU for CloudSimple paid resources
      required:
        - name
        - id
      properties:
        id:
          description: SKU's id
          type: string
        name:
          description: SKU's name
          type: string
      type: object
    Tags:
      description: Tags model
      additionalProperties:
        type: string
      properties: {}
      type: object
    Usage:
      description: Usage model
      required:
        - currentValue
        - limit
      properties:
        currentValue:
          description: The current usage value
          type: integer
          default: 0
        limit:
          description: limit of a given sku in a region for a subscription. The maximum permitted value for the usage quota. If there is no limit, this value will be -1
          type: integer
          default: 0
        name:
          description: Usage name value and localized name
          $ref: '#/components/schemas/UsageName'
        unit:
          description: The usages' unit
          type: string
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountPerSecond
            - BytesPerSecond
          x-ms-enum:
            modelAsString: false
            name: UsageCount
      type: object
    UsageListResponse:
      description: List of usages
      properties:
        nextLink:
          description: Link for next list of DedicatedCloudNode
          type: string
        value:
          description: The list of usages
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers:
            - /name/value
          readOnly: true
      type: object
    UsageName:
      description: User name model
      properties:
        localizedValue:
          description: e.g. "Virtual Machines"
          type: string
        value:
          description: resource type or resource type sku name, e.g. virtualMachines
          type: string
      type: object
    VirtualDisk:
      description: Virtual disk model
      required:
        - totalSize
        - independenceMode
        - controllerId
      properties:
        controllerId:
          description: Disk's Controller id
          type: string
        independenceMode:
          description: Disk's independence mode type
          type: string
          enum:
            - persistent
            - independent_persistent
            - independent_nonpersistent
          x-ms-enum:
            modelAsString: false
            name: DiskIndependenceMode
        totalSize:
          description: Disk's total size
          type: integer
        virtualDiskId:
          description: Disk's id
          type: string
        virtualDiskName:
          description: Disk's display name
          type: string
          readOnly: true
      type: object
    VirtualDiskController:
      description: Virtual disk controller model
      properties:
        id:
          description: Controller's id
          type: string
          readOnly: true
        name:
          description: The display name of Controller
          type: string
          readOnly: true
        subType:
          description: dik controller subtype (VMWARE_PARAVIRTUAL, BUS_PARALLEL, LSI_PARALLEL, LSI_SAS)
          type: string
          readOnly: true
        type:
          description: disk controller type (SCSI)
          type: string
          readOnly: true
      type: object
    VirtualMachine:
      description: Virtual machine model
      required:
        - location
      x-ms-azure-resource: true
      properties:
        id:
          description: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/virtualMachines/{virtualMachineName}
          type: string
          readOnly: true
        location:
          description: Azure region
          type: string
          x-ms-mutability:
            - read
            - create
        name:
          description: '{virtualMachineName}'
          type: string
          pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
          readOnly: true
        properties:
          description: Virtual machine properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineProperties'
        tags:
          description: The list of tags
          $ref: '#/components/schemas/Tags'
        type:
          description: '{resourceProviderNamespace}/{resourceType}'
          type: string
          readOnly: true
      type: object
    VirtualMachineListResponse:
      description: List of virtual machines
      properties:
        nextLink:
          description: Link for next list of VirtualMachines
          type: string
        value:
          description: Results of the VirtualMachine list
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachine'
      type: object
    VirtualMachineProperties:
      description: Properties of virtual machine
      required:
        - numberOfCores
        - amountOfRam
        - privateCloudId
      properties:
        amountOfRam:
          description: The amount of memory
          type: integer
        controllers:
          description: The list of Virtual Disks' Controllers
          type: array
          items:
            $ref: '#/components/schemas/VirtualDiskController'
          readOnly: true
        customization:
          description: Virtual machine properties
          $ref: '#/components/schemas/GuestOSCustomization'
        disks:
          description: The list of Virtual Disks
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - virtualDiskId
        dnsname:
          description: The DNS name of Virtual Machine in VCenter
          type: string
          readOnly: true
        exposeToGuestVM:
          description: Expose Guest OS or not
          type: boolean
        folder:
          description: The path to virtual machine folder in VCenter
          type: string
          readOnly: true
        guestOS:
          description: The name of Guest OS
          type: string
          readOnly: true
        guestOSType:
          description: The Guest OS type
          type: string
          enum:
            - linux
            - windows
            - other
          x-ms-enum:
            modelAsString: false
            name: GuestOSType
          readOnly: true
        nics:
          description: The list of Virtual NICs
          type: array
          items:
            $ref: '#/components/schemas/VirtualNic'
          x-ms-identifiers:
            - virtualNicId
        numberOfCores:
          description: The number of CPU cores
          type: integer
        password:
          description: Password for login. Deprecated - use customization property
          type: string
        privateCloudId:
          description: Private Cloud Id
          type: string
        provisioningState:
          description: The provisioning status of the resource
          type: string
          readOnly: true
        publicIP:
          description: The public ip of Virtual Machine
          type: string
          readOnly: true
        resourcePool:
          description: Virtual Machines Resource Pool
          $ref: '#/components/schemas/ResourcePool'
        status:
          description: The status of Virtual machine
          type: string
          enum:
            - running
            - suspended
            - poweredoff
            - updating
            - deallocating
            - deleting
          x-ms-enum:
            modelAsString: false
            name: VirtualMachineStatus
          readOnly: true
        templateId:
          description: Virtual Machine Template Id
          type: string
        username:
          description: Username for login. Deprecated - use customization property
          type: string
        vSphereNetworks:
          description: The list of Virtual VSphere Networks
          type: array
          items:
            type: string
        vmId:
          description: The internal id of Virtual Machine in VCenter
          type: string
          readOnly: true
        vmwaretools:
          description: VMware tools version
          type: string
          readOnly: true
      type: object
    VirtualMachineStopMode:
      description: List of virtual machine stop modes
      properties:
        mode:
          description: mode indicates a type of stop operation - reboot, suspend, shutdown or power-off
          type: string
          enum:
            - reboot
            - suspend
            - shutdown
            - poweroff
          x-ms-enum:
            modelAsString: false
            name: StopMode
      type: object
    VirtualMachineTemplate:
      description: Virtual machine template model
      properties:
        id:
          description: virtual machine template id (privateCloudId:vsphereId)
          type: string
          readOnly: true
        location:
          description: Azure region
          type: string
        name:
          description: '{virtualMachineTemplateName}'
          type: string
          readOnly: true
        properties:
          description: The Virtual Machine Template properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineTemplateProperties'
        type:
          description: '{resourceProviderNamespace}/{resourceType}'
          type: string
          readOnly: true
      type: object
    VirtualMachineTemplateListResponse:
      description: List of virtual machine templates
      properties:
        nextLink:
          description: Link for next list of VirtualMachineTemplate
          type: string
        value:
          description: Results of the VM template list
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineTemplate'
      type: object
    VirtualMachineTemplateProperties:
      description: Properties of virtual machine template
      required:
        - privateCloudId
      properties:
        amountOfRam:
          description: The amount of memory
          type: integer
        controllers:
          description: The list of Virtual Disk Controllers
          type: array
          items:
            $ref: '#/components/schemas/VirtualDiskController'
        description:
          description: The description of Virtual Machine Template
          type: string
        disks:
          description: The list of Virtual Disks
          type: array
          items:
            $ref: '#/components/schemas/VirtualDisk'
          x-ms-identifiers:
            - virtualDiskId
        exposeToGuestVM:
          description: Expose Guest OS or not
          type: boolean
        guestOS:
          description: The Guest OS
          type: string
          readOnly: true
        guestOSType:
          description: The Guest OS types
          type: string
          readOnly: true
        nics:
          description: The list of Virtual NICs
          type: array
          items:
            $ref: '#/components/schemas/VirtualNic'
          x-ms-identifiers:
            - virtualNicId
        numberOfCores:
          description: The number of CPU cores
          type: integer
        path:
          description: path to folder
          type: string
          example: Datacenter/Workload VMs
        privateCloudId:
          description: The Private Cloud Id
          type: string
        vSphereNetworks:
          description: The list of VSphere networks
          type: array
          items:
            type: string
        vSphereTags:
          description: The tags from VSphere
          type: array
          items:
            type: string
        vmwaretools:
          description: The VMware tools version
          type: string
          readOnly: true
      type: object
    VirtualNetwork:
      description: Virtual network model
      required:
        - id
      properties:
        assignable:
          description: can be used in vm creation/deletion
          type: boolean
          readOnly: true
        id:
          description: virtual network id (privateCloudId:vsphereId)
          type: string
        location:
          description: Azure region
          type: string
          readOnly: true
        name:
          description: '{VirtualNetworkName}'
          type: string
          readOnly: true
        properties:
          description: Virtual Network properties
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualNetworkProperties'
        type:
          description: '{resourceProviderNamespace}/{resourceType}'
          type: string
          readOnly: true
      type: object
    VirtualNetworkListResponse:
      description: List of virtual networks
      properties:
        nextLink:
          description: Link for next list of VirtualNetwork
          type: string
        value:
          description: Results of the VirtualNetwork list
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetwork'
      type: object
    VirtualNetworkProperties:
      description: Properties of virtual network
      properties:
        privateCloudId:
          description: The Private Cloud id
          type: string
          readOnly: true
      type: object
    VirtualNic:
      description: Virtual NIC model
      required:
        - nicType
        - network
      properties:
        customization:
          description: guest OS customization for nic
          $ref: '#/components/schemas/GuestOSNICCustomization'
        ipAddresses:
          description: NIC ip address
          type: array
          items:
            type: string
        macAddress:
          description: NIC MAC address
          type: string
        network:
          description: Virtual Network
          $ref: '#/components/schemas/VirtualNetwork'
        nicType:
          description: NIC type
          type: string
          enum:
            - E1000
            - E1000E
            - PCNET32
            - VMXNET
            - VMXNET2
            - VMXNET3
          x-ms-enum:
            modelAsString: false
            name: NICType
        powerOnBoot:
          description: Is NIC powered on/off on boot
          type: boolean
        virtualNicId:
          description: NIC id
          type: string
        virtualNicName:
          description: NIC name
          type: string
          readOnly: true
      type: object
  x-stackQL-resources:
    operations:
      id: azure_isv.vmware_cloud_simple.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.VMwareCloudSimple~1operations?api-version=2019-04-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableOperationsListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1operationResults~1{operationId}?api-version=2019-04-01/get'
            operationId: Operations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    dedicated_cloud_nodes:
      id: azure_isv.vmware_cloud_simple.dedicated_cloud_nodes
      name: dedicated_cloud_nodes
      title: dedicated_cloud_nodes
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudNodes?api-version=2019-04-01/get'
            operationId: DedicatedCloudNodes_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudNodeListResponse
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudNodes?api-version=2019-04-01/get'
            operationId: DedicatedCloudNodes_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudNodeListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudNodes~1{dedicatedCloudNodeName}?api-version=2019-04-01/get'
            operationId: DedicatedCloudNodes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudNode
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudNodes~1{dedicatedCloudNodeName}?api-version=2019-04-01/put'
            operationId: DedicatedCloudNodes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudNode
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudNodes~1{dedicatedCloudNodeName}?api-version=2019-04-01/delete'
            operationId: DedicatedCloudNodes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudNodes~1{dedicatedCloudNodeName}?api-version=2019-04-01/patch'
            operationId: DedicatedCloudNodes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudNode
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_nodes/methods/get'
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_nodes/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_nodes/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_nodes/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_nodes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_nodes/methods/delete'
    dedicated_cloud_services:
      id: azure_isv.vmware_cloud_simple.dedicated_cloud_services
      name: dedicated_cloud_services
      title: dedicated_cloud_services
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudServices?api-version=2019-04-01/get'
            operationId: DedicatedCloudServices_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudServiceListResponse
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudServices?api-version=2019-04-01/get'
            operationId: DedicatedCloudServices_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudServiceListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudServices~1{dedicatedCloudServiceName}?api-version=2019-04-01/get'
            operationId: DedicatedCloudServices_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudService
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudServices~1{dedicatedCloudServiceName}?api-version=2019-04-01/put'
            operationId: DedicatedCloudServices_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudService
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudServices~1{dedicatedCloudServiceName}?api-version=2019-04-01/delete'
            operationId: DedicatedCloudServices_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1dedicatedCloudServices~1{dedicatedCloudServiceName}?api-version=2019-04-01/patch'
            operationId: DedicatedCloudServices_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DedicatedCloudService
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_services/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_services/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_services/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_services/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dedicated_cloud_services/methods/delete'
    skus_availabilities:
      id: azure_isv.vmware_cloud_simple.skus_availabilities
      name: skus_availabilities
      title: skus_availabilities
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1availabilities?api-version=2019-04-01/get'
            operationId: SkusAvailability_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SkuAvailabilityListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/skus_availabilities/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_clouds:
      id: azure_isv.vmware_cloud_simple.private_clouds
      name: private_clouds
      title: private_clouds
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds?api-version=2019-04-01/get'
            operationId: PrivateClouds_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateCloudList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}?api-version=2019-04-01/get'
            operationId: PrivateClouds_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateCloud
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_clouds/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_clouds/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    customization_policies:
      id: azure_isv.vmware_cloud_simple.customization_policies
      name: customization_policies
      title: customization_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1customizationPolicies?api-version=2019-04-01/get'
            operationId: customizationPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomizationPoliciesListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1customizationPolicies~1{customizationPolicyName}?api-version=2019-04-01/get'
            operationId: customizationPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomizationPolicy
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customization_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/customization_policies/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    resource_pools:
      id: azure_isv.vmware_cloud_simple.resource_pools
      name: resource_pools
      title: resource_pools
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1resourcePools?api-version=2019-04-01/get'
            operationId: ResourcePools_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourcePoolsListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1resourcePools~1{resourcePoolName}?api-version=2019-04-01/get'
            operationId: ResourcePools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourcePool
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/resource_pools/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    virtual_machine_templates:
      id: azure_isv.vmware_cloud_simple.virtual_machine_templates
      name: virtual_machine_templates
      title: virtual_machine_templates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1virtualMachineTemplates?api-version=2019-04-01/get'
            operationId: VirtualMachineTemplates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachineTemplateListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1virtualMachineTemplates~1{virtualMachineTemplateName}?api-version=2019-04-01/get'
            operationId: VirtualMachineTemplates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachineTemplate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_templates/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    virtual_networks:
      id: azure_isv.vmware_cloud_simple.virtual_networks
      name: virtual_networks
      title: virtual_networks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1virtualNetworks?api-version=2019-04-01/get'
            operationId: VirtualNetworks_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1privateClouds~1{pcName}~1virtualNetworks~1{virtualNetworkName}?api-version=2019-04-01/get'
            operationId: VirtualNetworks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetwork
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    usages:
      id: azure_isv.vmware_cloud_simple.usages
      name: usages
      title: usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1locations~1{regionId}~1usages?api-version=2019-04-01/get'
            operationId: Usages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsageListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    virtual_machines:
      id: azure_isv.vmware_cloud_simple.virtual_machines
      name: virtual_machines
      title: virtual_machines
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines?api-version=2019-04-01/get'
            operationId: VirtualMachines_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachineListResponse
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines?api-version=2019-04-01/get'
            operationId: VirtualMachines_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachineListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines~1{virtualMachineName}?api-version=2019-04-01/get'
            operationId: VirtualMachines_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachine
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines~1{virtualMachineName}?api-version=2019-04-01/put'
            operationId: VirtualMachines_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachine
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines~1{virtualMachineName}?api-version=2019-04-01/delete'
            operationId: VirtualMachines_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines~1{virtualMachineName}?api-version=2019-04-01/patch'
            operationId: VirtualMachines_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualMachine
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines~1{virtualMachineName}~1start?api-version=2019-04-01/post'
            operationId: VirtualMachines_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.VMwareCloudSimple~1virtualMachines~1{virtualMachineName}~1stop?api-version=2019-04-01/post'
            operationId: VirtualMachines_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/delete'
    vw_dedicated_cloud_nodes:
      id: azure_isv.vmware_cloud_simple.vw_dedicated_cloud_nodes
      name: vw_dedicated_cloud_nodes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              sku as sku,
              tags as tags,
              type as type,
              JSON_EXTRACT(properties, '$.availabilityZoneId') as "availability_zone_id",
              JSON_EXTRACT(properties, '$.availabilityZoneName') as "availability_zone_name",
              JSON_EXTRACT(properties, '$.cloudRackName') as "cloud_rack_name",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.nodesCount') as "nodes_count",
              JSON_EXTRACT(properties, '$.placementGroupId') as "placement_group_id",
              JSON_EXTRACT(properties, '$.placementGroupName') as "placement_group_name",
              JSON_EXTRACT(properties, '$.privateCloudId') as "private_cloud_id",
              JSON_EXTRACT(properties, '$.privateCloudName') as "private_cloud_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.purchaseId') as "purchase_id",
              JSON_EXTRACT(properties, '$.skuDescription') as "sku_description",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.vmwareClusterName') as "vmware_cluster_name",
              subscriptionId,
              resourceGroupName,
              dedicatedCloudNodeName
              FROM azure_isv.vmware_cloud_simple.dedicated_cloud_nodes
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                sku as sku,
                tags as tags,
                type as type,
                json_extract_path_text(properties, '$.availabilityZoneId') as "availability_zone_id",
                json_extract_path_text(properties, '$.availabilityZoneName') as "availability_zone_name",
                json_extract_path_text(properties, '$.cloudRackName') as "cloud_rack_name",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.nodesCount') as "nodes_count",
                json_extract_path_text(properties, '$.placementGroupId') as "placement_group_id",
                json_extract_path_text(properties, '$.placementGroupName') as "placement_group_name",
                json_extract_path_text(properties, '$.privateCloudId') as "private_cloud_id",
                json_extract_path_text(properties, '$.privateCloudName') as "private_cloud_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.purchaseId') as "purchase_id",
                json_extract_path_text(properties, '$.skuDescription') as "sku_description",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.vmwareClusterName') as "vmware_cluster_name",
                subscriptionId,
                resourceGroupName,
                dedicatedCloudNodeName
                FROM azure_isv.vmware_cloud_simple.dedicated_cloud_nodes
                WHERE subscriptionId = 'replace-me';
    vw_dedicated_cloud_services:
      id: azure_isv.vmware_cloud_simple.vw_dedicated_cloud_services
      name: vw_dedicated_cloud_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              tags as tags,
              type as type,
              JSON_EXTRACT(properties, '$.gatewaySubnet') as "gateway_subnet",
              JSON_EXTRACT(properties, '$.isAccountOnboarded') as "is_account_onboarded",
              JSON_EXTRACT(properties, '$.nodes') as "nodes",
              JSON_EXTRACT(properties, '$.serviceURL') as "service_url",
              subscriptionId,
              resourceGroupName,
              dedicatedCloudServiceName
              FROM azure_isv.vmware_cloud_simple.dedicated_cloud_services
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                tags as tags,
                type as type,
                json_extract_path_text(properties, '$.gatewaySubnet') as "gateway_subnet",
                json_extract_path_text(properties, '$.isAccountOnboarded') as "is_account_onboarded",
                json_extract_path_text(properties, '$.nodes') as "nodes",
                json_extract_path_text(properties, '$.serviceURL') as "service_url",
                subscriptionId,
                resourceGroupName,
                dedicatedCloudServiceName
                FROM azure_isv.vmware_cloud_simple.dedicated_cloud_services
                WHERE subscriptionId = 'replace-me';
    vw_private_clouds:
      id: azure_isv.vmware_cloud_simple.vw_private_clouds
      name: vw_private_clouds
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.availabilityZoneId') as "availability_zone_id",
              JSON_EXTRACT(properties, '$.availabilityZoneName') as "availability_zone_name",
              JSON_EXTRACT(properties, '$.clustersNumber') as "clusters_number",
              JSON_EXTRACT(properties, '$.createdBy') as "created_by",
              JSON_EXTRACT(properties, '$.createdOn') as "created_on",
              JSON_EXTRACT(properties, '$.dnsServers') as "dns_servers",
              JSON_EXTRACT(properties, '$.expires') as "expires",
              JSON_EXTRACT(properties, '$.nsxType') as "nsx_type",
              JSON_EXTRACT(properties, '$.placementGroupId') as "placement_group_id",
              JSON_EXTRACT(properties, '$.placementGroupName') as "placement_group_name",
              JSON_EXTRACT(properties, '$.privateCloudId') as "private_cloud_id",
              JSON_EXTRACT(properties, '$.resourcePools') as "resource_pools",
              JSON_EXTRACT(properties, '$.state') as "state",
              JSON_EXTRACT(properties, '$.totalCpuCores') as "total_cpu_cores",
              JSON_EXTRACT(properties, '$.totalNodes') as "total_nodes",
              JSON_EXTRACT(properties, '$.totalRam') as "total_ram",
              JSON_EXTRACT(properties, '$.totalStorage') as "total_storage",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.vSphereVersion') as "v_sphere_version",
              JSON_EXTRACT(properties, '$.vcenterFqdn') as "vcenter_fqdn",
              JSON_EXTRACT(properties, '$.vcenterRefid') as "vcenter_refid",
              JSON_EXTRACT(properties, '$.virtualMachineTemplates') as "virtual_machine_templates",
              JSON_EXTRACT(properties, '$.virtualNetworks') as "virtual_networks",
              JSON_EXTRACT(properties, '$.vrOpsEnabled') as "vr_ops_enabled",
              subscriptionId,
              regionId,
              pcName
              FROM azure_isv.vmware_cloud_simple.private_clouds
              WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.availabilityZoneId') as "availability_zone_id",
                json_extract_path_text(properties, '$.availabilityZoneName') as "availability_zone_name",
                json_extract_path_text(properties, '$.clustersNumber') as "clusters_number",
                json_extract_path_text(properties, '$.createdBy') as "created_by",
                json_extract_path_text(properties, '$.createdOn') as "created_on",
                json_extract_path_text(properties, '$.dnsServers') as "dns_servers",
                json_extract_path_text(properties, '$.expires') as "expires",
                json_extract_path_text(properties, '$.nsxType') as "nsx_type",
                json_extract_path_text(properties, '$.placementGroupId') as "placement_group_id",
                json_extract_path_text(properties, '$.placementGroupName') as "placement_group_name",
                json_extract_path_text(properties, '$.privateCloudId') as "private_cloud_id",
                json_extract_path_text(properties, '$.resourcePools') as "resource_pools",
                json_extract_path_text(properties, '$.state') as "state",
                json_extract_path_text(properties, '$.totalCpuCores') as "total_cpu_cores",
                json_extract_path_text(properties, '$.totalNodes') as "total_nodes",
                json_extract_path_text(properties, '$.totalRam') as "total_ram",
                json_extract_path_text(properties, '$.totalStorage') as "total_storage",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.vSphereVersion') as "v_sphere_version",
                json_extract_path_text(properties, '$.vcenterFqdn') as "vcenter_fqdn",
                json_extract_path_text(properties, '$.vcenterRefid') as "vcenter_refid",
                json_extract_path_text(properties, '$.virtualMachineTemplates') as "virtual_machine_templates",
                json_extract_path_text(properties, '$.virtualNetworks') as "virtual_networks",
                json_extract_path_text(properties, '$.vrOpsEnabled') as "vr_ops_enabled",
                subscriptionId,
                regionId,
                pcName
                FROM azure_isv.vmware_cloud_simple.private_clouds
                WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me';
    vw_customization_policies:
      id: azure_isv.vmware_cloud_simple.vw_customization_policies
      name: vw_customization_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.privateCloudId') as "private_cloud_id",
              JSON_EXTRACT(properties, '$.specification') as "specification",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.version') as "version",
              subscriptionId,
              regionId,
              pcName,
              customizationPolicyName
              FROM azure_isv.vmware_cloud_simple.customization_policies
              WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.privateCloudId') as "private_cloud_id",
                json_extract_path_text(properties, '$.specification') as "specification",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.version') as "version",
                subscriptionId,
                regionId,
                pcName,
                customizationPolicyName
                FROM azure_isv.vmware_cloud_simple.customization_policies
                WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me';
    vw_resource_pools:
      id: azure_isv.vmware_cloud_simple.vw_resource_pools
      name: vw_resource_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              privateCloudId as private_cloud_id,
              type as type,
              JSON_EXTRACT(properties, '$.fullName') as "full_name",
              subscriptionId,
              regionId,
              pcName,
              resourcePoolName
              FROM azure_isv.vmware_cloud_simple.resource_pools
              WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                privateCloudId as private_cloud_id,
                type as type,
                json_extract_path_text(properties, '$.fullName') as "full_name",
                subscriptionId,
                regionId,
                pcName,
                resourcePoolName
                FROM azure_isv.vmware_cloud_simple.resource_pools
                WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me';
    vw_virtual_machine_templates:
      id: azure_isv.vmware_cloud_simple.vw_virtual_machine_templates
      name: vw_virtual_machine_templates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.amountOfRam') as "amount_of_ram",
              JSON_EXTRACT(properties, '$.controllers') as "controllers",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.disks') as "disks",
              JSON_EXTRACT(properties, '$.exposeToGuestVM') as "expose_to_guest_vm",
              JSON_EXTRACT(properties, '$.guestOS') as "guest_os",
              JSON_EXTRACT(properties, '$.guestOSType') as "guest_os_type",
              JSON_EXTRACT(properties, '$.nics') as "nics",
              JSON_EXTRACT(properties, '$.numberOfCores') as "number_of_cores",
              JSON_EXTRACT(properties, '$.path') as "path",
              JSON_EXTRACT(properties, '$.privateCloudId') as "private_cloud_id",
              JSON_EXTRACT(properties, '$.vSphereNetworks') as "v_sphere_networks",
              JSON_EXTRACT(properties, '$.vSphereTags') as "v_sphere_tags",
              JSON_EXTRACT(properties, '$.vmwaretools') as "vmwaretools",
              subscriptionId,
              regionId,
              pcName,
              virtualMachineTemplateName,
              resourcePoolName
              FROM azure_isv.vmware_cloud_simple.virtual_machine_templates
              WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me' AND resourcePoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.amountOfRam') as "amount_of_ram",
                json_extract_path_text(properties, '$.controllers') as "controllers",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.disks') as "disks",
                json_extract_path_text(properties, '$.exposeToGuestVM') as "expose_to_guest_vm",
                json_extract_path_text(properties, '$.guestOS') as "guest_os",
                json_extract_path_text(properties, '$.guestOSType') as "guest_os_type",
                json_extract_path_text(properties, '$.nics') as "nics",
                json_extract_path_text(properties, '$.numberOfCores') as "number_of_cores",
                json_extract_path_text(properties, '$.path') as "path",
                json_extract_path_text(properties, '$.privateCloudId') as "private_cloud_id",
                json_extract_path_text(properties, '$.vSphereNetworks') as "v_sphere_networks",
                json_extract_path_text(properties, '$.vSphereTags') as "v_sphere_tags",
                json_extract_path_text(properties, '$.vmwaretools') as "vmwaretools",
                subscriptionId,
                regionId,
                pcName,
                virtualMachineTemplateName,
                resourcePoolName
                FROM azure_isv.vmware_cloud_simple.virtual_machine_templates
                WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me' AND resourcePoolName = 'replace-me';
    vw_virtual_networks:
      id: azure_isv.vmware_cloud_simple.vw_virtual_networks
      name: vw_virtual_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              assignable as assignable,
              type as type,
              JSON_EXTRACT(properties, '$.privateCloudId') as "private_cloud_id",
              subscriptionId,
              regionId,
              pcName,
              virtualNetworkName,
              resourcePoolName
              FROM azure_isv.vmware_cloud_simple.virtual_networks
              WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me' AND resourcePoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                assignable as assignable,
                type as type,
                json_extract_path_text(properties, '$.privateCloudId') as "private_cloud_id",
                subscriptionId,
                regionId,
                pcName,
                virtualNetworkName,
                resourcePoolName
                FROM azure_isv.vmware_cloud_simple.virtual_networks
                WHERE subscriptionId = 'replace-me' AND regionId = 'replace-me' AND pcName = 'replace-me' AND resourcePoolName = 'replace-me';
    vw_virtual_machines:
      id: azure_isv.vmware_cloud_simple.vw_virtual_machines
      name: vw_virtual_machines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              tags as tags,
              type as type,
              JSON_EXTRACT(properties, '$.amountOfRam') as "amount_of_ram",
              JSON_EXTRACT(properties, '$.controllers') as "controllers",
              JSON_EXTRACT(properties, '$.customization') as "customization",
              JSON_EXTRACT(properties, '$.disks') as "disks",
              JSON_EXTRACT(properties, '$.dnsname') as "dnsname",
              JSON_EXTRACT(properties, '$.exposeToGuestVM') as "expose_to_guest_vm",
              JSON_EXTRACT(properties, '$.folder') as "folder",
              JSON_EXTRACT(properties, '$.guestOS') as "guest_os",
              JSON_EXTRACT(properties, '$.guestOSType') as "guest_os_type",
              JSON_EXTRACT(properties, '$.nics') as "nics",
              JSON_EXTRACT(properties, '$.numberOfCores') as "number_of_cores",
              JSON_EXTRACT(properties, '$.password') as "password",
              JSON_EXTRACT(properties, '$.privateCloudId') as "private_cloud_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.publicIP') as "public_ip",
              JSON_EXTRACT(properties, '$.resourcePool') as "resource_pool",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.templateId') as "template_id",
              JSON_EXTRACT(properties, '$.username') as "username",
              JSON_EXTRACT(properties, '$.vSphereNetworks') as "v_sphere_networks",
              JSON_EXTRACT(properties, '$.vmId') as "vm_id",
              JSON_EXTRACT(properties, '$.vmwaretools') as "vmwaretools",
              subscriptionId,
              resourceGroupName,
              virtualMachineName
              FROM azure_isv.vmware_cloud_simple.virtual_machines
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                tags as tags,
                type as type,
                json_extract_path_text(properties, '$.amountOfRam') as "amount_of_ram",
                json_extract_path_text(properties, '$.controllers') as "controllers",
                json_extract_path_text(properties, '$.customization') as "customization",
                json_extract_path_text(properties, '$.disks') as "disks",
                json_extract_path_text(properties, '$.dnsname') as "dnsname",
                json_extract_path_text(properties, '$.exposeToGuestVM') as "expose_to_guest_vm",
                json_extract_path_text(properties, '$.folder') as "folder",
                json_extract_path_text(properties, '$.guestOS') as "guest_os",
                json_extract_path_text(properties, '$.guestOSType') as "guest_os_type",
                json_extract_path_text(properties, '$.nics') as "nics",
                json_extract_path_text(properties, '$.numberOfCores') as "number_of_cores",
                json_extract_path_text(properties, '$.password') as "password",
                json_extract_path_text(properties, '$.privateCloudId') as "private_cloud_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.publicIP') as "public_ip",
                json_extract_path_text(properties, '$.resourcePool') as "resource_pool",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.templateId') as "template_id",
                json_extract_path_text(properties, '$.username') as "username",
                json_extract_path_text(properties, '$.vSphereNetworks') as "v_sphere_networks",
                json_extract_path_text(properties, '$.vmId') as "vm_id",
                json_extract_path_text(properties, '$.vmwaretools') as "vmwaretools",
                subscriptionId,
                resourceGroupName,
                virtualMachineName
                FROM azure_isv.vmware_cloud_simple.virtual_machines
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.VMwareCloudSimple/operations?api-version=2019-04-01:
    get:
      description: Return list of operations
      tags:
        - Operations
      summary: Implements list of available operations
      operationId: Operations_List
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableOperationsListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudNodes?api-version=2019-04-01:
    get:
      description: Returns list of dedicate cloud nodes within subscription
      tags:
        - DedicatedCloudNodes
      summary: Implements list of dedicated cloud nodes within subscription method
      operationId: DedicatedCloudNodes_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the list operation
          schema:
            type: string
        - name: $top
          in: query
          description: The maximum number of record sets to return
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: to be used by nextLink implementation
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudNodeListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices?api-version=2019-04-01:
    get:
      description: Returns list of dedicated cloud services within a subscription
      tags:
        - DedicatedCloudServices
      summary: Implements list of dedicatedCloudService objects within subscription method
      operationId: DedicatedCloudServices_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the list operation
          schema:
            type: string
        - name: $top
          in: query
          description: The maximum number of record sets to return
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: to be used by nextLink implementation
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudServiceListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/availabilities?api-version=2019-04-01:
    get:
      description: Returns list of available resources in region
      tags:
        - AvailabilityUsages
      summary: Implements SkuAvailability List method
      operationId: SkusAvailability_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - name: skuId
          in: query
          description: sku id, if no sku is passed availability for all skus will be returned
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkuAvailabilityListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/operationResults/{operationId}?api-version=2019-04-01:
    get:
      description: Return an async operation
      tags:
        - Operations
      summary: Implements get of async operation
      operationId: Operations_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/referer'
        - name: operationId
          in: path
          description: operation id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResource'
        '202':
          description: Operation is still running
          headers:
            Location:
              schema:
                type: string
            Retry-After:
              schema:
                type: integer
        '204':
          description: No Content
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
          headers:
            Content-Type:
              schema:
                default: application/json
                type: string
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds?api-version=2019-04-01:
    get:
      description: Returns list of private clouds in particular region
      tags:
        - PrivateClouds
      summary: Implements private cloud list GET method
      operationId: PrivateClouds_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCloudList'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}?api-version=2019-04-01:
    get:
      description: Returns private cloud by its name
      tags:
        - PrivateClouds
      summary: Implements private cloud GET method
      operationId: PrivateClouds_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/pcName'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCloud'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/customizationPolicies?api-version=2019-04-01:
    get:
      description: Returns list of customization policies in region for private cloud
      tags:
        - customizationPolicies
      summary: Implements get of customization policies list
      operationId: customizationPolicies_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/pcName'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the list operation. only type is allowed here as a filter e.g. $filter=type eq 'xxxx'
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationPoliciesListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/customizationPolicies/{customizationPolicyName}?api-version=2019-04-01:
    get:
      description: Returns customization policy by its name
      tags:
        - customizationPolicies
      summary: Implements get of customization policy
      operationId: customizationPolicies_Get
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/pcName'
        - name: customizationPolicyName
          in: path
          description: customization policy name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomizationPolicy'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/resourcePools?api-version=2019-04-01:
    get:
      description: Returns list of resource pools in region for private cloud
      tags:
        - ResourcePools
      summary: Implements get of resource pools list
      operationId: ResourcePools_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/pcName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePoolsListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/resourcePools/{resourcePoolName}?api-version=2019-04-01:
    get:
      description: Returns resource pool templates by its name
      tags:
        - ResourcePools
      summary: Implements get of resource pool
      operationId: ResourcePools_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/pcName'
        - name: resourcePoolName
          in: path
          description: resource pool id (vsphereId)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualMachineTemplates?api-version=2019-04-01:
    get:
      description: Returns list of virtual machine templates in region for private cloud
      tags:
        - VirtualMachineTemplates
      summary: Implements list of available VM templates
      operationId: VirtualMachineTemplates_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/pcName'
        - $ref: '#/components/parameters/regionId'
        - name: resourcePoolName
          in: query
          description: Resource pool used to derive vSphere cluster which contains VM templates
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplateListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualMachineTemplates/{virtualMachineTemplateName}?api-version=2019-04-01:
    get:
      description: Returns virtual machine templates by its name
      tags:
        - VirtualMachineTemplates
      summary: Implements virtual machine template GET method
      operationId: VirtualMachineTemplates_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/pcName'
        - name: virtualMachineTemplateName
          in: path
          description: virtual machine template id (vsphereId)
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualNetworks?api-version=2019-04-01:
    get:
      description: Return list of virtual networks in location for private cloud
      tags:
        - VirtualNetworks
      summary: Implements list available virtual networks within a subscription method
      operationId: VirtualNetworks_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/pcName'
        - $ref: '#/components/parameters/api-version'
        - name: resourcePoolName
          in: query
          description: Resource pool used to derive vSphere cluster which contains virtual networks
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/privateClouds/{pcName}/virtualNetworks/{virtualNetworkName}?api-version=2019-04-01:
    get:
      description: Return virtual network by its name
      tags:
        - VirtualNetworks
      summary: Implements virtual network GET method
      operationId: VirtualNetworks_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - $ref: '#/components/parameters/pcName'
        - name: virtualNetworkName
          in: path
          description: virtual network id (vsphereId)
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/locations/{regionId}/usages?api-version=2019-04-01:
    get:
      description: Returns list of usage in region
      tags:
        - AvailabilityUsages
      summary: Implements Usages List method
      operationId: Usages_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/regionId'
        - name: $filter
          in: query
          description: The filter to apply on the list operation. only name.value is allowed here as a filter e.g. $filter=name.value eq 'xxxx'
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.VMwareCloudSimple/virtualMachines?api-version=2019-04-01:
    get:
      description: Returns list virtual machine within subscription
      tags:
        - VirtualMachines
      summary: Implements list virtual machine within subscription method
      operationId: VirtualMachines_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the list operation
          schema:
            type: string
        - name: $top
          in: query
          description: The maximum number of record sets to return
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: to be used by nextLink implementation
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudNodes?api-version=2019-04-01:
    get:
      description: Returns list of dedicate cloud nodes within resource group
      tags:
        - DedicatedCloudNodes
      summary: Implements list of dedicated cloud nodes within RG method
      operationId: DedicatedCloudNodes_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the list operation
          schema:
            type: string
        - name: $top
          in: query
          description: The maximum number of record sets to return
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: to be used by nextLink implementation
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudNodeListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudNodes/{dedicatedCloudNodeName}?api-version=2019-04-01:
    get:
      description: Returns dedicated cloud node
      tags:
        - DedicatedCloudNodes
      summary: Implements dedicated cloud node GET method
      operationId: DedicatedCloudNodes_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: dedicatedCloudNodeName
          in: path
          description: dedicated cloud node name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudNode'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
    put:
      description: Returns dedicated cloud node by its name
      tags:
        - DedicatedCloudNodes
      summary: Implements dedicated cloud node PUT method
      operationId: DedicatedCloudNodes_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/referer'
        - name: dedicatedCloudNodeName
          in: path
          description: dedicated cloud node name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Create Dedicated Cloud Node request
        required: true
        x-ms-requestBody-name: dedicatedCloudNodeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DedicatedCloudNode'
      responses:
        '200':
          description: If resource is created or updated successfully, 200 should be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudNode'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
            Location:
              schema:
                type: string
            Retry-After:
              schema:
                type: integer
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-long-running-operation: true
    delete:
      description: Delete dedicated cloud node
      tags:
        - DedicatedCloudNodes
      summary: Implements dedicated cloud node DELETE method
      operationId: DedicatedCloudNodes_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: dedicatedCloudNodeName
          in: path
          description: dedicated cloud node name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '204':
          description: no content. resource does not exist and the request is well formed
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
          headers:
            Content-Type:
              schema:
                default: application/json
                type: string
    patch:
      description: Patches dedicated node properties
      tags:
        - DedicatedCloudNodes
      summary: Implements dedicated cloud node PATCH method
      operationId: DedicatedCloudNodes_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: dedicatedCloudNodeName
          in: path
          description: dedicated cloud node name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Patch Dedicated Cloud Node request
        required: true
        x-ms-requestBody-name: dedicatedCloudNodeRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPayload'
      responses:
        '200':
          description: If resource is created or updated successfully, 200 should be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudNode'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices?api-version=2019-04-01:
    get:
      description: Returns list of dedicated cloud services within a resource group
      tags:
        - DedicatedCloudServices
      summary: Implements list of dedicatedCloudService objects within RG method
      operationId: DedicatedCloudServices_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the list operation
          schema:
            type: string
        - name: $top
          in: query
          description: The maximum number of record sets to return
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: to be used by nextLink implementation
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudServiceListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/dedicatedCloudServices/{dedicatedCloudServiceName}?api-version=2019-04-01:
    get:
      description: Returns Dedicate Cloud Service
      tags:
        - DedicatedCloudServices
      summary: Implements dedicatedCloudService GET method
      operationId: DedicatedCloudServices_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: dedicatedCloudServiceName
          in: path
          description: dedicated cloud Service name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudService'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
    put:
      description: Create dedicate cloud service
      tags:
        - DedicatedCloudServices
      summary: Implements dedicated cloud service PUT method
      operationId: DedicatedCloudServices_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: dedicatedCloudServiceName
          in: path
          description: dedicated cloud Service name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Create Dedicated Cloud Service request
        required: true
        x-ms-requestBody-name: dedicatedCloudServiceRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DedicatedCloudService'
      responses:
        '200':
          description: If resource is created or updated successfully, 200 should be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudService'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
    delete:
      description: Delete dedicate cloud service
      tags:
        - DedicatedCloudServices
      summary: Implements dedicatedCloudService DELETE method
      operationId: DedicatedCloudServices_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: dedicatedCloudServiceName
          in: path
          description: dedicated cloud service name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '204':
          description: no content. resource does not exist and the request is well formed
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
          headers:
            Content-Type:
              schema:
                default: application/json
                type: string
      x-ms-long-running-operation: true
    patch:
      description: Patch dedicated cloud service's properties
      tags:
        - DedicatedCloudServices
      summary: Implements dedicatedCloudService PATCH method
      operationId: DedicatedCloudServices_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: dedicatedCloudServiceName
          in: path
          description: dedicated cloud service name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Patch Dedicated Cloud Service request
        required: true
        x-ms-requestBody-name: dedicatedCloudServiceRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPayload'
      responses:
        '200':
          description: If resource is created or updated successfully, 200 should be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedCloudService'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines?api-version=2019-04-01:
    get:
      description: Returns list of virtual machine within resource group
      tags:
        - VirtualMachines
      summary: Implements list virtual machine within RG method
      operationId: VirtualMachines_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/api-version'
        - name: $filter
          in: query
          description: The filter to apply on the list operation
          schema:
            type: string
        - name: $top
          in: query
          description: The maximum number of record sets to return
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: to be used by nextLink implementation
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResponse'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines/{virtualMachineName}?api-version=2019-04-01:
    get:
      description: Get virtual machine
      tags:
        - VirtualMachines
      summary: Implements virtual machine GET method
      operationId: VirtualMachines_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: virtual machine name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
    put:
      description: Create Or Update Virtual Machine
      tags:
        - VirtualMachines
      summary: Implements virtual machine PUT method
      operationId: VirtualMachines_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/referer'
        - name: virtualMachineName
          in: path
          description: virtual machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]([-_.a-zA-Z0-9]*[a-zA-Z0-9])?$
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Create or Update Virtual Machine request
        required: true
        x-ms-requestBody-name: virtualMachineRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachine'
      responses:
        '200':
          description: If resource is created or updated successfully, 200 should be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        '201':
          description: If resource is created or updated successfully, 201 should be returned. provisionedState would of VirtualMachineProperties object would reflect the state of the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-long-running-operation: true
    delete:
      description: Delete virtual machine
      tags:
        - VirtualMachines
      summary: Implements virtual machine DELETE method
      operationId: VirtualMachines_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/referer'
        - name: virtualMachineName
          in: path
          description: virtual machine name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: accepted. the operation will complete asynchronously
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
            Location:
              schema:
                type: string
            Retry-After:
              schema:
                type: integer
        '204':
          description: no content. resource does not exist and the request is well formed
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
          headers:
            Content-Type:
              schema:
                default: application/json
                type: string
      x-ms-long-running-operation: true
    patch:
      description: Patch virtual machine properties
      tags:
        - VirtualMachines
      summary: Implements virtual machine PATCH method
      operationId: VirtualMachines_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: virtualMachineName
          in: path
          description: virtual machine name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Patch virtual machine request
        required: true
        x-ms-requestBody-name: virtualMachineRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPayload'
      responses:
        '200':
          description: If resource is created or updated successfully, 200 should be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines/{virtualMachineName}/start?api-version=2019-04-01:
    post:
      description: Power on virtual machine
      tags:
        - VirtualMachines
      summary: Implements a start method for a virtual machine
      operationId: VirtualMachines_Start
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/referer'
        - name: virtualMachineName
          in: path
          description: virtual machine name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted. the operation will complete asynchronously
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
            Location:
              schema:
                type: string
            Retry-After:
              schema:
                type: integer
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
          headers:
            Content-Type:
              schema:
                default: application/json
                type: string
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareCloudSimple/virtualMachines/{virtualMachineName}/stop?api-version=2019-04-01:
    post:
      description: 'Power off virtual machine, options: shutdown, poweroff, and suspend'
      tags:
        - VirtualMachines
      summary: Implements shutdown, poweroff, and suspend method for a virtual machine
      operationId: VirtualMachines_Stop
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - $ref: '#/components/parameters/referer'
        - name: virtualMachineName
          in: path
          description: virtual machine name
          required: true
          schema:
            type: string
        - name: mode
          in: query
          description: query stop mode parameter (reboot, shutdown, etc...)
          schema:
            enum:
              - reboot
              - suspend
              - shutdown
              - poweroff
            x-ms-enum:
              modelAsString: false
              name: StopMode
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: body stop mode parameter (reboot, shutdown, etc...)
        x-ms-requestBody-name: m
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineStopMode'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted. the operation will complete asynchronously
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
            Location:
              schema:
                type: string
            Retry-After:
              schema:
                type: integer
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRPError'
          headers:
            Content-Type:
              schema:
                default: application/json
                type: string
      x-ms-long-running-operation: true
