openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Logz.io (Azure Native ISV Service)
  description: Centralize log, metric, and tracing analytics in one observability platform.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    MonitorNameParameter:
      name: monitorName
      in: path
      description: Monitor resource name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubAccountNameParameter:
      name: subAccountName
      in: path
      description: Sub Account resource name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: Result of GET request to list the Microsoft.Logz operations.
      type: object
      properties:
        value:
          description: List of operations supported by the Microsoft.Logz provider.
          type: array
          items:
            $ref: '#/components/schemas/OperationResult'
          x-ms-identifiers:
            - name
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          type: string
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    MonitoredResource:
      description: The properties of a resource currently being monitored by the Logz monitor resource.
      type: object
      properties:
        id:
          description: The ARM id of the resource.
          type: string
        sendingMetrics:
          description: Flag indicating if resource is sending metrics to Logz.
          type: boolean
        reasonForMetricsStatus:
          description: Reason for why the resource is sending metrics (or why it is not sending).
          type: string
        sendingLogs:
          description: Flag indicating if resource is sending logs to Logz.
          type: boolean
        systemData:
          $ref: '#/components/schemas/systemData'
        reasonForLogsStatus:
          description: Reason for why the resource is sending logs (or why it is not sending).
          type: string
    MonitoredResourceListResponse:
      description: Response of a list operation.
      type: object
      properties:
        value:
          description: Results of a list operation.
          type: array
          items:
            $ref: '#/components/schemas/MonitoredResource'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    OperationDisplay:
      description: The object that represents the operation.
      type: object
      properties:
        provider:
          description: Service provider, i.e., Microsoft.Logz.
          type: string
        resource:
          description: Type on which the operation is performed, e.g., 'monitors'.
          type: string
        operation:
          description: Operation type, e.g., read, write, delete, etc.
          type: string
        description:
          description: Description of the operation, e.g., 'Write monitors'.
          type: string
    OperationResult:
      description: A Microsoft.Logz REST API operation.
      type: object
      properties:
        name:
          description: Operation name, i.e., {provider}/{resource}/{operation}.
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationDisplay'
        origin:
          description: Origin of the operation
          type: string
    ProvisioningState:
      enum:
        - Accepted
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Canceled
        - Deleted
        - NotSpecified
      description: Flag specifying if the resource provisioning state as tracked by ARM.
      type: string
      x-ms-enum:
        modelAsString: true
        name: ProvisioningState
      readOnly: true
    MonitoringStatus:
      description: Flag specifying if the resource monitoring is enabled or disabled.
      enum:
        - Enabled
        - Disabled
      type: string
      default: Enabled
      x-ms-enum:
        modelAsString: true
        name: MonitoringStatus
    MarketplaceSubscriptionStatus:
      description: Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.
      enum:
        - Active
        - Suspended
      type: string
      default: Active
      x-ms-enum:
        modelAsString: true
        name: MarketplaceSubscriptionStatus
    LogzOrganizationProperties:
      type: object
      properties:
        companyName:
          description: Name of the Logz organization.
          type: string
        id:
          description: Id of the Logz organization.
          type: string
          readOnly: true
        enterpriseAppId:
          description: The Id of the Enterprise App used for Single sign on.
          type: string
        singleSignOnUrl:
          description: The login URL specific to this Logz Organization.
          type: string
    UserInfo:
      type: object
      properties:
        firstName:
          description: First Name of the user
          maxLength: 50
          type: string
        lastName:
          description: Last Name of the user
          maxLength: 50
          type: string
        emailAddress:
          description: Email of the user used by Logz for contacting them if needed
          pattern: ^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$
          type: string
        phoneNumber:
          description: Phone number of the user used by Logz for contacting them if needed
          maxLength: 40
          type: string
    PlanData:
      type: object
      properties:
        usageType:
          description: different usage type like PAYG/COMMITTED. this could be enum
          maxLength: 50
          type: string
        billingCycle:
          description: different billing cycles like MONTHLY/WEEKLY. this could be enum
          maxLength: 50
          type: string
        planDetails:
          description: plan id as published by Logz
          maxLength: 50
          type: string
        effectiveDate:
          format: date-time
          description: date when plan was applied
          type: string
          x-ms-mutability:
            - create
            - read
    LiftrResourceCategories:
      enum:
        - Unknown
        - MonitorLogs
      type: string
      x-ms-enum:
        modelAsString: true
        name: LiftrResourceCategories
      readOnly: true
    MonitorProperties:
      description: Properties specific to the monitor resource.
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
        monitoringStatus:
          $ref: '#/components/schemas/MonitoringStatus'
        marketplaceSubscriptionStatus:
          $ref: '#/components/schemas/MarketplaceSubscriptionStatus'
        logzOrganizationProperties:
          $ref: '#/components/schemas/LogzOrganizationProperties'
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        planData:
          $ref: '#/components/schemas/PlanData'
        liftrResourceCategory:
          $ref: '#/components/schemas/LiftrResourceCategories'
        liftrResourcePreference:
          description: The priority of the resource.
          format: int32
          type: integer
          readOnly: true
    ManagedIdentityTypes:
      enum:
        - SystemAssigned
        - UserAssigned
      type: string
      x-ms-enum:
        modelAsString: true
        name: ManagedIdentityTypes
    IdentityProperties:
      type: object
      properties:
        principalId:
          description: The identity ID.
          type: string
          readOnly: true
        tenantId:
          description: The tenant ID of resource.
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/ManagedIdentityTypes'
    LogzMonitorResource:
      required:
        - location
      x-ms-azure-resource: true
      properties:
        id:
          description: ARM id of the monitor resource.
          type: string
          readOnly: true
        systemData:
          readOnly: true
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        name:
          description: Name of the monitor resource.
          type: string
          readOnly: true
        type:
          description: The type of the monitor resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/MonitorProperties'
        identity:
          $ref: '#/components/schemas/IdentityProperties'
        tags:
          type: object
          additionalProperties:
            type: string
        location:
          type: string
      type: object
    LogzMonitorResourceListResponse:
      description: Response of a list operation.
      type: object
      properties:
        value:
          description: Results of a list operation.
          type: array
          items:
            $ref: '#/components/schemas/LogzMonitorResource'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    MonitorUpdateProperties:
      description: The set of properties that can be update in a PATCH request to a monitor resource.
      type: object
      properties:
        monitoringStatus:
          $ref: '#/components/schemas/MonitoringStatus'
    LogzMonitorResourceUpdateParameters:
      description: The parameters for a PATCH request to a monitor resource.
      properties:
        properties:
          $ref: '#/components/schemas/MonitorUpdateProperties'
        tags:
          description: The new tags of the monitor resource.
          type: object
          additionalProperties:
            type: string
      type: object
    TagAction:
      description: Valid actions for a filtering tag. Exclusion takes priority over inclusion.
      enum:
        - Include
        - Exclude
      type: string
      x-ms-enum:
        modelAsString: true
        name: TagAction
    FilteringTag:
      description: The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
      type: object
      properties:
        name:
          description: The name (also known as the key) of the tag.
          type: string
        value:
          description: The value of the tag.
          type: string
        action:
          $ref: '#/components/schemas/TagAction'
    LogRules:
      description: Set of rules for sending logs for the Monitor resource.
      type: object
      properties:
        sendAadLogs:
          description: Flag specifying if AAD logs should be sent for the Monitor resource.
          type: boolean
        sendSubscriptionLogs:
          description: Flag specifying if subscription logs should be sent for the Monitor resource.
          type: boolean
        sendActivityLogs:
          description: Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
          type: boolean
        filteringTags:
          description: List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
          type: array
          items:
            $ref: '#/components/schemas/FilteringTag'
          x-ms-identifiers:
            - name
    MonitoringTagRulesProperties:
      description: Definition of the properties for a TagRules resource.
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
        logRules:
          $ref: '#/components/schemas/LogRules'
        systemData:
          $ref: '#/components/schemas/systemData'
    MonitoringTagRules:
      description: Capture logs and metrics of Azure resources based on ARM tags.
      x-ms-azure-resource: true
      properties:
        name:
          description: Name of the rule set.
          type: string
          readOnly: true
        id:
          description: The id of the rule set.
          type: string
          readOnly: true
        type:
          description: The type of the rule set.
          type: string
          readOnly: true
        systemData:
          readOnly: true
          description: The system metadata relating to this resource
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/MonitoringTagRulesProperties'
      type: object
    MonitoringTagRulesListResponse:
      description: Response of a list operation.
      type: object
      properties:
        value:
          description: Results of a list operation.
          type: array
          items:
            $ref: '#/components/schemas/MonitoringTagRules'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    SingleSignOnStates:
      description: Various states of the SSO resource
      enum:
        - Initial
        - Enable
        - Disable
        - Existing
      type: string
      x-ms-enum:
        modelAsString: true
        name: SingleSignOnStates
    LogzSingleSignOnProperties:
      type: object
      properties:
        singleSignOnState:
          $ref: '#/components/schemas/SingleSignOnStates'
        enterpriseAppId:
          description: The Id of the Enterprise App used for Single sign-on.
          type: string
        singleSignOnUrl:
          description: The login URL specific to this Logz Organization.
          type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
    LogzSingleSignOnResource:
      x-ms-azure-resource: true
      properties:
        id:
          description: ARM id of the resource.
          type: string
          readOnly: true
        name:
          description: Name of the configuration.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        systemData:
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/LogzSingleSignOnProperties'
      type: object
    LogzSingleSignOnResourceListResponse:
      description: Response of a list operation.
      type: object
      properties:
        value:
          description: Results of a list operation.
          type: array
          items:
            $ref: '#/components/schemas/LogzSingleSignOnResource'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    VMExtensionPayload:
      description: Response of payload to be passed while installing VM agent.
      type: object
      properties:
        apiKey:
          description: API Key corresponding to the resource.
          type: string
          x-ms-secret: true
        region:
          description: Logz.io region where the resource has been created.
          type: string
    VMHostUpdateState:
      description: Various states of the updating vm extension on resource
      enum:
        - Install
        - Delete
      type: string
      x-ms-enum:
        modelAsString: true
        name: VMHostUpdateStates
    VMResources:
      description: VM Resource Ids
      type: object
      properties:
        id:
          description: Request of a list vm host update operation.
          type: string
        agentVersion:
          description: Version of the Logz agent installed on the VM.
          type: string
    VMHostUpdateRequest:
      description: Request of a list VM Host Update Operation.
      type: object
      properties:
        vmResourceIds:
          description: Request of a list vm host update operation.
          type: array
          items:
            $ref: '#/components/schemas/VMResources'
        state:
          description: Specifies the state of the operation - install/ delete.
          $ref: '#/components/schemas/VMHostUpdateState'
    VMResourcesListResponse:
      description: Response of a list VM Host Update Operation.
      type: object
      properties:
        value:
          description: Response of a list vm host update operation.
          type: array
          items:
            $ref: '#/components/schemas/VMResources'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    UserRoleRequest:
      description: Request for checking user's role for Logz.io account.
      type: object
      properties:
        emailAddress:
          description: Email of the user used by Logz for contacting them if needed
          pattern: ^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$
          type: string
    UserRole:
      description: User roles on configured in Logz.io account.
      enum:
        - None
        - User
        - Admin
      type: string
      x-ms-enum:
        modelAsString: true
        name: UserRole
    UserRoleResponse:
      description: Response for checking user's role for Logz.io account.
      type: object
      properties:
        role:
          $ref: '#/components/schemas/UserRole'
    UserRoleListResponse:
      description: Response for list of user's role for Logz.io account.
      type: object
      properties:
        value:
          description: List of user roles for Logz.io account.
          type: array
          items:
            $ref: '#/components/schemas/UserRoleResponse'
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results, if any.
          type: string
  x-stackQL-resources:
    monitors_monitored_resources:
      id: azure_isv.logz.monitors_monitored_resources
      name: monitors_monitored_resources
      title: monitors_monitored_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1listMonitoredResources?api-version=2020-10-01/post'
            operationId: MonitorsMonitoredResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoredResourceListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_monitored_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure_isv.logz.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Logz~1operations?api-version=2020-10-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors:
      id: azure_isv.logz.monitors
      name: monitors
      title: monitors
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Logz~1monitors?api-version=2020-10-01/get'
            operationId: Monitors_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResourceListResponse
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors?api-version=2020-10-01/get'
            operationId: Monitors_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResourceListResponse
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}?api-version=2020-10-01/get'
            operationId: Monitors_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResource
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}?api-version=2020-10-01/put'
            operationId: Monitors_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}?api-version=2020-10-01/patch'
            operationId: Monitors_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}?api-version=2020-10-01/delete'
            operationId: Monitors_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        vm_host_payload:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1vmHostPayload?api-version=2020-10-01/post'
            operationId: Monitor_VMHostPayload
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMExtensionPayload
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/get'
          - $ref: '#/components/x-stackQL-resources/monitors/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/monitors/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/delete'
    tag_rules:
      id: azure_isv.logz.tag_rules
      name: tag_rules
      title: tag_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1tagRules?api-version=2020-10-01/get'
            operationId: TagRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringTagRulesListResponse
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1tagRules~1{ruleSetName}?api-version=2020-10-01/put'
            operationId: TagRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringTagRules
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1tagRules~1{ruleSetName}?api-version=2020-10-01/get'
            operationId: TagRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringTagRules
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1tagRules~1{ruleSetName}?api-version=2020-10-01/delete'
            operationId: TagRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/delete'
    single_sign_ons:
      id: azure_isv.logz.single_sign_ons
      name: single_sign_ons
      title: single_sign_ons
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1singleSignOnConfigurations?api-version=2020-10-01/get'
            operationId: SingleSignOn_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzSingleSignOnResourceListResponse
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1singleSignOnConfigurations~1{configurationName}?api-version=2020-10-01/put'
            operationId: SingleSignOn_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzSingleSignOnResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1singleSignOnConfigurations~1{configurationName}?api-version=2020-10-01/get'
            operationId: SingleSignOn_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzSingleSignOnResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/single_sign_ons/methods/get'
          - $ref: '#/components/x-stackQL-resources/single_sign_ons/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/single_sign_ons/methods/create_or_update'
        update: []
        replace: []
        delete: []
    sub_accounts:
      id: azure_isv.logz.sub_accounts
      name: sub_accounts
      title: sub_accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts?api-version=2020-10-01/get'
            operationId: SubAccount_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResourceListResponse
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}?api-version=2020-10-01/put'
            operationId: SubAccount_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}?api-version=2020-10-01/get'
            operationId: SubAccount_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}?api-version=2020-10-01/delete'
            operationId: SubAccount_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}?api-version=2020-10-01/patch'
            operationId: SubAccount_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogzMonitorResource
        vm_host_payload:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1vmHostPayload?api-version=2020-10-01/post'
            operationId: SubAccount_VMHostPayload
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMExtensionPayload
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sub_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/sub_accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sub_accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/sub_accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sub_accounts/methods/delete'
    sub_account_tag_rules:
      id: azure_isv.logz.sub_account_tag_rules
      name: sub_account_tag_rules
      title: sub_account_tag_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1tagRules?api-version=2020-10-01/get'
            operationId: SubAccountTagRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringTagRulesListResponse
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1tagRules~1{ruleSetName}?api-version=2020-10-01/put'
            operationId: SubAccountTagRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringTagRules
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1tagRules~1{ruleSetName}?api-version=2020-10-01/get'
            operationId: SubAccountTagRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoringTagRules
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1tagRules~1{ruleSetName}?api-version=2020-10-01/delete'
            operationId: SubAccountTagRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sub_account_tag_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/sub_account_tag_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sub_account_tag_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sub_account_tag_rules/methods/delete'
    sub_account_monitored_resources:
      id: azure_isv.logz.sub_account_monitored_resources
      name: sub_account_monitored_resources
      title: sub_account_monitored_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1listMonitoredResources?api-version=2020-10-01/post'
            operationId: SubAccountMonitoredResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoredResourceListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sub_account_monitored_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sub_account_vm_host_updates:
      id: azure_isv.logz.sub_account_vm_host_updates
      name: sub_account_vm_host_updates
      title: sub_account_vm_host_updates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1vmHostUpdate?api-version=2020-10-01/post'
            operationId: SubAccountVmHostUpdate_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMResourcesListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sub_account_vm_host_updates/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sub_account_vm_hosts:
      id: azure_isv.logz.sub_account_vm_hosts
      name: sub_account_vm_hosts
      title: sub_account_vm_hosts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1accounts~1{subAccountName}~1listVMHosts?api-version=2020-10-01/post'
            operationId: SubAccountVMHosts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMResourcesListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sub_account_vm_hosts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitor_vm_host_updates:
      id: azure_isv.logz.monitor_vm_host_updates
      name: monitor_vm_host_updates
      title: monitor_vm_host_updates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1vmHostUpdate?api-version=2020-10-01/post'
            operationId: MonitorVmHostUpdate_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMResourcesListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitor_vm_host_updates/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitor_vm_hosts:
      id: azure_isv.logz.monitor_vm_hosts
      name: monitor_vm_hosts
      title: monitor_vm_hosts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1listVMHosts?api-version=2020-10-01/post'
            operationId: MonitorVMHosts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMResourcesListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitor_vm_hosts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_user_roles:
      id: azure_isv.logz.monitors_user_roles
      name: monitors_user_roles
      title: monitors_user_roles
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Logz~1monitors~1{monitorName}~1listUserRoles?api-version=2020-10-01/post'
            operationId: MonitorsUserRoles_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserRoleListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_user_roles/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_monitors:
      id: azure_isv.logz.vw_monitors
      name: vw_monitors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              systemData as system_data,
              type as type,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.monitoringStatus') as "monitoring_status",
              JSON_EXTRACT(properties, '$.marketplaceSubscriptionStatus') as "marketplace_subscription_status",
              JSON_EXTRACT(properties, '$.logzOrganizationProperties') as "logz_organization_properties",
              JSON_EXTRACT(properties, '$.userInfo') as "user_info",
              JSON_EXTRACT(properties, '$.planData') as "plan_data",
              JSON_EXTRACT(properties, '$.liftrResourceCategory') as "liftr_resource_category",
              JSON_EXTRACT(properties, '$.liftrResourcePreference') as "liftr_resource_preference",
              subscriptionId,
              resourceGroupName,
              monitorName
              FROM azure_isv.logz.monitors
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                systemData as system_data,
                type as type,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.monitoringStatus') as "monitoring_status",
                json_extract_path_text(properties, '$.marketplaceSubscriptionStatus') as "marketplace_subscription_status",
                json_extract_path_text(properties, '$.logzOrganizationProperties') as "logz_organization_properties",
                json_extract_path_text(properties, '$.userInfo') as "user_info",
                json_extract_path_text(properties, '$.planData') as "plan_data",
                json_extract_path_text(properties, '$.liftrResourceCategory') as "liftr_resource_category",
                json_extract_path_text(properties, '$.liftrResourcePreference') as "liftr_resource_preference",
                subscriptionId,
                resourceGroupName,
                monitorName
                FROM azure_isv.logz.monitors
                WHERE subscriptionId = 'replace-me';
    vw_tag_rules:
      id: azure_isv.logz.vw_tag_rules
      name: vw_tag_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.logRules') as "log_rules",
              JSON_EXTRACT(properties, '$.systemData') as "system_data",
              subscriptionId,
              resourceGroupName,
              monitorName,
              ruleSetName
              FROM azure_isv.logz.tag_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.logRules') as "log_rules",
                json_extract_path_text(properties, '$.systemData') as "system_data",
                subscriptionId,
                resourceGroupName,
                monitorName,
                ruleSetName
                FROM azure_isv.logz.tag_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
    vw_single_sign_ons:
      id: azure_isv.logz.vw_single_sign_ons
      name: vw_single_sign_ons
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.singleSignOnState') as "single_sign_on_state",
              JSON_EXTRACT(properties, '$.enterpriseAppId') as "enterprise_app_id",
              JSON_EXTRACT(properties, '$.singleSignOnUrl') as "single_sign_on_url",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              monitorName,
              configurationName
              FROM azure_isv.logz.single_sign_ons
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.singleSignOnState') as "single_sign_on_state",
                json_extract_path_text(properties, '$.enterpriseAppId') as "enterprise_app_id",
                json_extract_path_text(properties, '$.singleSignOnUrl') as "single_sign_on_url",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                monitorName,
                configurationName
                FROM azure_isv.logz.single_sign_ons
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
    vw_sub_accounts:
      id: azure_isv.logz.vw_sub_accounts
      name: vw_sub_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              systemData as system_data,
              type as type,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.monitoringStatus') as "monitoring_status",
              JSON_EXTRACT(properties, '$.marketplaceSubscriptionStatus') as "marketplace_subscription_status",
              JSON_EXTRACT(properties, '$.logzOrganizationProperties') as "logz_organization_properties",
              JSON_EXTRACT(properties, '$.userInfo') as "user_info",
              JSON_EXTRACT(properties, '$.planData') as "plan_data",
              JSON_EXTRACT(properties, '$.liftrResourceCategory') as "liftr_resource_category",
              JSON_EXTRACT(properties, '$.liftrResourcePreference') as "liftr_resource_preference",
              subscriptionId,
              resourceGroupName,
              monitorName,
              subAccountName
              FROM azure_isv.logz.sub_accounts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                systemData as system_data,
                type as type,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.monitoringStatus') as "monitoring_status",
                json_extract_path_text(properties, '$.marketplaceSubscriptionStatus') as "marketplace_subscription_status",
                json_extract_path_text(properties, '$.logzOrganizationProperties') as "logz_organization_properties",
                json_extract_path_text(properties, '$.userInfo') as "user_info",
                json_extract_path_text(properties, '$.planData') as "plan_data",
                json_extract_path_text(properties, '$.liftrResourceCategory') as "liftr_resource_category",
                json_extract_path_text(properties, '$.liftrResourcePreference') as "liftr_resource_preference",
                subscriptionId,
                resourceGroupName,
                monitorName,
                subAccountName
                FROM azure_isv.logz.sub_accounts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
    vw_sub_account_tag_rules:
      id: azure_isv.logz.vw_sub_account_tag_rules
      name: vw_sub_account_tag_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.logRules') as "log_rules",
              JSON_EXTRACT(properties, '$.systemData') as "system_data",
              subscriptionId,
              resourceGroupName,
              monitorName,
              subAccountName,
              ruleSetName
              FROM azure_isv.logz.sub_account_tag_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me' AND subAccountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.logRules') as "log_rules",
                json_extract_path_text(properties, '$.systemData') as "system_data",
                subscriptionId,
                resourceGroupName,
                monitorName,
                subAccountName,
                ruleSetName
                FROM azure_isv.logz.sub_account_tag_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me' AND subAccountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/listMonitoredResources?api-version=2020-10-01:
    post:
      tags:
        - Monitors
      summary: List the resources currently being monitored by the Logz monitor resource.
      operationId: MonitorsMonitoredResources_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitors_ListMonitoredResources
  /providers/Microsoft.Logz/operations?api-version=2020-10-01:
    get:
      tags:
        - Operations
      summary: List all operations provided by Microsoft.Logz.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Logz/monitors?api-version=2020-10-01:
    get:
      tags:
        - Monitors
      summary: List all monitors under the specified subscription.
      operationId: Monitors_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors?api-version=2020-10-01:
    get:
      tags:
        - Monitors
      summary: List all monitors under the specified resource group.
      operationId: Monitors_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}?api-version=2020-10-01:
    get:
      tags:
        - Monitors
      summary: Get the properties of a specific monitor resource.
      operationId: Monitors_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Monitors
      summary: Create a monitor resource. This create operation can take upto 10 minutes to complete.
      operationId: Monitors_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogzMonitorResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Monitors
      summary: Update a monitor resource.
      operationId: Monitors_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogzMonitorResourceUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Monitors
      summary: Delete a monitor resource. This delete operation can take upto 10 minutes to complete.
      operationId: Monitors_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
        '202':
          description: Success
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: Success
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/tagRules?api-version=2020-10-01:
    get:
      tags:
        - TagRules
      summary: List the tag rules for a given monitor resource.
      operationId: TagRules_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringTagRulesListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/tagRules/{ruleSetName}?api-version=2020-10-01:
    put:
      tags:
        - TagRules
      summary: Create or update a tag rule set for a given monitor resource.
      operationId: TagRules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - name: ruleSetName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringTagRules'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringTagRules'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - TagRules
      summary: Get a tag rule set for a given monitor resource.
      operationId: TagRules_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - name: ruleSetName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringTagRules'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - TagRules
      summary: Delete a tag rule set for a given monitor resource.
      operationId: TagRules_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - name: ruleSetName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '202':
          description: Success
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: Success
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/singleSignOnConfigurations?api-version=2020-10-01:
    get:
      tags:
        - SingleSignOn
      summary: List the single sign-on configurations for a given monitor resource.
      operationId: SingleSignOn_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzSingleSignOnResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/singleSignOnConfigurations/{configurationName}?api-version=2020-10-01:
    put:
      tags:
        - SingleSignOn
      summary: Configures single-sign-on for this resource. This operation can take upto 10 minutes to complete.
      operationId: SingleSignOn_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - name: configurationName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogzSingleSignOnResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzSingleSignOnResource'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzSingleSignOnResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - SingleSignOn
      summary: Gets the Logz single sign-on resource for the given Monitor.
      operationId: SingleSignOn_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - name: configurationName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzSingleSignOnResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts?api-version=2020-10-01:
    get:
      tags:
        - SubAccount
      summary: List the sub account under a given monitor resource.
      operationId: SubAccount_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}?api-version=2020-10-01:
    put:
      tags:
        - SubAccount
      summary: Create sub account under a given monitor resource. This create operation can take upto 10 minutes to complete.
      operationId: SubAccount_Create
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogzMonitorResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - SubAccount
      summary: Get a sub account under a given monitor resource.
      operationId: SubAccount_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SubAccount
      summary: Delete a sub account resource. This delete operation can take upto 10 minutes to complete.
      operationId: SubAccount_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      responses:
        '200':
          description: Success
        '202':
          description: Success
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: Success
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SubAccount
      summary: Update a monitor resource.
      operationId: SubAccount_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogzMonitorResourceUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogzMonitorResource'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/tagRules?api-version=2020-10-01:
    get:
      tags:
        - TagRules
      summary: List the tag rules for a given sub account resource.
      operationId: SubAccountTagRules_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringTagRulesListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/tagRules/{ruleSetName}?api-version=2020-10-01:
    put:
      tags:
        - TagRules
      summary: Create or update a tag rule set for a given sub account resource.
      operationId: SubAccountTagRules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
        - name: ruleSetName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringTagRules'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringTagRules'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - TagRules
      summary: Get a tag rule set for a given monitor resource.
      operationId: SubAccountTagRules_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
        - name: ruleSetName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringTagRules'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - TagRules
      summary: Delete a tag rule set for a given monitor resource.
      operationId: SubAccountTagRules_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
        - name: ruleSetName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '202':
          description: Success
          headers:
            location:
              schema:
                type: string
              description: URL to query for status of the operation.
        '204':
          description: Success
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/listMonitoredResources?api-version=2020-10-01:
    post:
      tags:
        - SubAccount
      summary: List the resources currently being monitored by the Logz sub account resource.
      operationId: SubAccountMonitoredResources_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: SubAccount_ListMonitoredResources
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/vmHostPayload?api-version=2020-10-01:
    post:
      tags:
        - VM_Host
      summary: Returns the payload that needs to be passed as a request for installing Logz.io agent on a VM.
      operationId: SubAccount_VMHostPayload
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtensionPayload'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/vmHostUpdate?api-version=2020-10-01:
    post:
      tags:
        - VM_Host
      summary: Sending request to update the collection when Logz.io agent has been installed on a VM for a given monitor.
      operationId: SubAccountVmHostUpdate_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      requestBody:
        description: Request body to update the collection for agent installed in the given monitor.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMHostUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMResourcesListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: SubAccount_ListVmHostUpdate
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/listVMHosts?api-version=2020-10-01:
    post:
      tags:
        - VM_Host
      summary: List the compute resources currently being monitored by the Logz sub account resource.
      operationId: SubAccountVMHosts_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/SubAccountNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMResourcesListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: SubAccount_ListVMHosts
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/vmHostPayload?api-version=2020-10-01:
    post:
      tags:
        - VM_Host
      summary: Returns the payload that needs to be passed in the request body for installing Logz.io agent on a VM.
      operationId: Monitor_VMHostPayload
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtensionPayload'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/vmHostUpdate?api-version=2020-10-01:
    post:
      tags:
        - VM_Host
      summary: Sending request to update the collection when Logz.io agent has been installed on a VM for a given monitor.
      operationId: MonitorVmHostUpdate_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        description: Request body to update the collection for agent installed in the given monitor.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMHostUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMResourcesListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitor_ListVmHostUpdate
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/listVMHosts?api-version=2020-10-01:
    post:
      tags:
        - VM_Host
      summary: List the compute resources currently being monitored by the Logz main account resource.
      operationId: MonitorVMHosts_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMResourcesListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitor_ListVMHosts
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/listUserRoles?api-version=2020-10-01:
    post:
      tags:
        - Monitors
      summary: List the user's roles configured on Logz.io side for the account corresponding to the monitor resource.
      operationId: MonitorsUserRoles_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitors_ListUserRoles
