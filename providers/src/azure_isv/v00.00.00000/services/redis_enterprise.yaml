openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Cache for Redis Enterprise
  description: Azure Cache for Redis is based on the popular open-source Redis cache. It gives you access to a secure, dedicated Redis server, managed by Microsoft and accessible from any application within Azure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    ClusterNameParameter:
      name: clusterName
      in: path
      description: The name of the Redis Enterprise cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]{1,60}$
        type: string
    DatabaseNameParameter:
      name: databaseName
      in: path
      description: The name of the Redis Enterprise database.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]{1,60}$
        type: string
    AccessPolicyAssignmentNameParameter:
      name: accessPolicyAssignmentName
      in: path
      description: The name of the Redis Enterprise database access policy assignment.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[A-Za-z0-9]{1,60}$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    ProvisioningState:
      type: string
      readOnly: true
      description: Current provisioning status
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    ResourceState:
      type: string
      readOnly: true
      description: Current resource status
      enum:
        - Running
        - Creating
        - CreateFailed
        - Updating
        - UpdateFailed
        - Deleting
        - DeleteFailed
        - Enabling
        - EnableFailed
        - Disabling
        - DisableFailed
        - Disabled
        - Scaling
        - ScalingFailed
      x-ms-enum:
        name: ResourceState
        modelAsString: true
    Cluster:
      description: Describes the Redis Enterprise cluster
      required:
        - sku
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU to create, which affects price, performance, and features.
        zones:
          type: array
          items:
            type: string
          description: The Availability Zones where this cluster will be deployed.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the resource.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClusterProperties'
          description: Other properties of the cluster.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ClusterUpdate:
      description: A partial update to the Redis Enterprise cluster
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU to create, which affects price, performance, and features.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClusterProperties'
          description: Other properties of the cluster.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The identity of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
      type: object
    ClusterProperties:
      title: Redis Enterprise cluster properties
      description: Properties of Redis Enterprise clusters, as opposed to general resource properties like location, tags
      type: object
      properties:
        highAvailability:
          type: string
          description: Enabled by default. If highAvailability is disabled, the data set is not replicated. This affects the availability SLA, and increases the risk of data loss.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: HighAvailability
            modelAsString: true
        minimumTlsVersion:
          type: string
          description: The minimum TLS version for the cluster to support, e.g. '1.2'. Newer versions can be added in the future. Note that TLS 1.0 and TLS 1.1 are now completely obsolete -- you cannot use them. They are mentioned only for the sake of consistency with old API versions.
          enum:
            - '1.0'
            - '1.1'
            - '1.2'
          x-ms-enum:
            name: TlsVersion
            modelAsString: true
        encryption:
          type: object
          description: Encryption-at-rest configuration for the cluster.
          properties:
            customerManagedKeyEncryption:
              type: object
              description: All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.
              properties:
                keyEncryptionKeyIdentity:
                  type: object
                  description: All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
                  properties:
                    userAssignedIdentityResourceId:
                      type: string
                      description: 'User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.'
                    identityType:
                      type: string
                      enum:
                        - systemAssignedIdentity
                        - userAssignedIdentity
                      description: Only userAssignedIdentity is supported in this API version; other types may be supported in the future
                      x-ms-enum:
                        name: CmkIdentityType
                        modelAsString: true
                keyEncryptionKeyUrl:
                  type: string
                  description: 'Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78'
        hostName:
          type: string
          readOnly: true
          description: DNS name of the cluster endpoint
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Current provisioning status of the cluster
        redundancyMode:
          type: string
          readOnly: true
          description: Explains the current redundancy strategy of the cluster, which affects the expected SLA.
          enum:
            - None
            - LR
            - ZR
          x-ms-enum:
            name: RedundancyMode
            modelAsString: true
            values:
              - name: None
                value: None
                description: No redundancy. Availability loss will occur.
              - name: LR
                value: LR
                description: Local redundancy with high availability.
              - name: ZR
                value: ZR
                description: Zone redundant. Higher availability.
        resourceState:
          $ref: '#/components/schemas/ResourceState'
          readOnly: true
          description: Current resource status of the cluster
        redisVersion:
          type: string
          readOnly: true
          description: Version of redis the cluster supports, e.g. '6'
        privateEndpointConnections:
          type: array
          readOnly: true
          description: List of private endpoint connections associated with the specified Redis Enterprise cluster
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
    ClusterList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          description: List of clusters.
        nextLink:
          type: string
          readOnly: true
          description: The URI to fetch the next page of results.
      description: The response of a list-all operation.
    Database:
      description: Describes a database on the Redis Enterprise cluster
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DatabaseProperties'
          description: Other properties of the database.
      type: object
    DatabaseUpdate:
      description: A partial update to the Redis Enterprise database
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DatabaseProperties'
          description: Properties of the database.
      type: object
    DatabaseProperties:
      title: Redis Enterprise database properties
      description: Properties of Redis Enterprise databases, as opposed to general resource properties like location, tags
      type: object
      properties:
        clientProtocol:
          type: string
          description: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.
          enum:
            - Encrypted
            - Plaintext
          x-ms-enum:
            name: Protocol
            modelAsString: true
        port:
          type: integer
          format: int32
          x-ms-mutability:
            - read
            - create
          description: TCP port of the database endpoint. Specified at create time. Defaults to an available port.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Current provisioning status of the database
        resourceState:
          $ref: '#/components/schemas/ResourceState'
          readOnly: true
          description: Current resource status of the database
        clusteringPolicy:
          type: string
          description: Clustering policy - default is OSSCluster. This property must be chosen at create time, and cannot be changed without deleting the database.
          enum:
            - EnterpriseCluster
            - OSSCluster
          x-ms-mutability:
            - read
            - create
          x-ms-enum:
            name: ClusteringPolicy
            modelAsString: true
            values:
              - value: EnterpriseCluster
                name: EnterpriseCluster
                description: Enterprise clustering policy uses only the classic redis protocol, which does not support redis cluster commands.
              - value: OSSCluster
                name: OSSCluster
                description: OSS clustering policy follows the redis cluster specification, and requires all clients to support redis clustering.
        evictionPolicy:
          type: string
          description: Redis eviction policy - default is VolatileLRU
          enum:
            - AllKeysLFU
            - AllKeysLRU
            - AllKeysRandom
            - VolatileLRU
            - VolatileLFU
            - VolatileTTL
            - VolatileRandom
            - NoEviction
          x-ms-enum:
            name: EvictionPolicy
            modelAsString: true
        persistence:
          $ref: '#/components/schemas/Persistence'
          description: Persistence settings
          x-ms-identifiers: []
        modules:
          type: array
          description: Optional set of redis modules to enable in this database - modules can only be added at creation time.
          items:
            $ref: '#/components/schemas/Module'
          x-ms-mutability:
            - read
            - create
          x-ms-identifiers:
            - name
        geoReplication:
          type: object
          description: Optional set of properties to configure geo replication for this database.
          x-ms-mutability:
            - read
            - create
          properties:
            groupNickname:
              type: string
              description: Name for the group of linked database resources
              x-ms-mutability:
                - read
                - create
            linkedDatabases:
              type: array
              description: List of database resources to link with this database
              items:
                $ref: '#/components/schemas/LinkedDatabase'
        redisVersion:
          type: string
          readOnly: true
          description: Version of Redis the database is running on, e.g. '6.0'
        deferUpgrade:
          type: string
          description: 'Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade'
          enum:
            - Deferred
            - NotDeferred
          x-ms-enum:
            name: DeferUpgradeSetting
            modelAsString: true
        accessKeysAuthentication:
          type: string
          description: This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created.
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: accessKeysAuthentication
            modelAsString: true
    DatabaseList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Database'
          description: List of databases
        nextLink:
          type: string
          readOnly: true
          description: The URI to fetch the next page of results.
      description: The response of a list-all operation.
    AccessPolicyAssignmentProperties:
      title: Redis Enterprise database access policy assignment properties
      description: Properties of Redis Enterprise database access policy assignment.
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
          description: Current provisioning status of the access policy assignment.
        accessPolicyName:
          type: string
          description: Name of access policy under specific access policy assignment. Only "default" policy is supported for now.
          pattern: ^([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]|[a-zA-Z0-9])$
        user:
          type: object
          properties:
            objectId:
              type: string
              description: The object ID of the user.
              example: 6497c918-11ad-41e7-1b0f-7c518a87d0b0
          description: The user associated with the access policy.
      required:
        - user
        - accessPolicyName
    AccessPolicyAssignment:
      description: Describes the access policy assignment of Redis Enterprise database
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessPolicyAssignmentProperties'
          description: Properties of the access policy assignment.
      type: object
    AccessPolicyAssignmentList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessPolicyAssignment'
          description: List of access policy assignments.
        nextLink:
          type: string
          readOnly: true
          description: The URI to fetch the next page of results.
      description: The response of a list-all operation.
    Persistence:
      title: Persistence settings
      description: Persistence-related configuration for the Redis Enterprise database
      type: object
      properties:
        aofEnabled:
          type: boolean
          description: Sets whether AOF is enabled. Note that at most one of AOF or RDB persistence may be enabled.
        rdbEnabled:
          type: boolean
          description: Sets whether RDB is enabled. Note that at most one of AOF or RDB persistence may be enabled.
        aofFrequency:
          type: string
          description: Sets the frequency at which data is written to disk. Defaults to '1s', meaning 'every second'. Note that the 'always' setting is deprecated, because of its performance impact.
          enum:
            - 1s
            - always
          x-ms-enum:
            name: AofFrequency
            modelAsString: true
        rdbFrequency:
          type: string
          description: Sets the frequency at which a snapshot of the database is created.
          enum:
            - 1h
            - 6h
            - 12h
          x-ms-enum:
            name: RdbFrequency
            modelAsString: true
    Module:
      title: Module settings
      description: Specifies configuration of a redis module
      type: object
      properties:
        name:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'
        args:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.
        version:
          type: string
          readOnly: true
          description: The version of the module, e.g. '1.0'.
      required:
        - name
    LinkedDatabase:
      title: Linked Database
      description: Specifies details of a linked database resource.
      type: object
      properties:
        id:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Cache/redisEnterprise/databases
          x-ms-mutability:
            - read
            - create
          description: Resource ID of a database resource to link with this database.
        state:
          type: string
          description: State of the link between the database resources.
          enum:
            - Linked
            - Linking
            - Unlinking
            - LinkFailed
            - UnlinkFailed
          x-ms-enum:
            name: LinkState
            modelAsString: true
          readOnly: true
    AccessKeys:
      title: Access keys
      description: The secret access keys used for authenticating connections to redis
      type: object
      properties:
        primaryKey:
          readOnly: true
          type: string
          description: The current primary key that clients can use to authenticate
        secondaryKey:
          readOnly: true
          type: string
          description: The current secondary key that clients can use to authenticate
    RegenerateKeyParameters:
      title: Regenerate access keys request
      type: object
      properties:
        keyType:
          type: string
          description: Which access key to regenerate.
          enum:
            - Primary
            - Secondary
          x-ms-enum:
            name: AccessKeyType
            modelAsString: false
      required:
        - keyType
      description: Specifies which access keys to reset to a new random value.
    ImportClusterParameters:
      title: Import RDB files into a target database
      type: object
      properties:
        sasUris:
          type: array
          items:
            type: string
          description: SAS URIs for the target blobs to import from
          x-ms-secret: true
      required:
        - sasUris
      description: Parameters for a Redis Enterprise import operation.
    ExportClusterParameters:
      title: Export an RDB file into a target database
      type: object
      properties:
        sasUri:
          type: string
          description: SAS URI for the target directory to export to
          x-ms-secret: true
      required:
        - sasUri
      description: Parameters for a Redis Enterprise export operation.
    OperationStatus:
      description: The status of a long-running operation.
      type: object
      properties:
        id:
          type: string
          description: The operation's unique id.
        name:
          type: string
          description: The operation's name.
        startTime:
          type: string
          description: The start time of the operation.
        endTime:
          type: string
          description: The end time of the operation.
        status:
          type: string
          description: The current status of the operation.
        error:
          $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
    ForceLinkParameters:
      type: object
      description: Parameters for reconfiguring active geo-replication, of an existing database that was previously unlinked from a replication group.
      required:
        - groupNickname
        - linkedDatabases
      properties:
        groupNickname:
          type: string
          description: The name of the group of linked database resources. This should match the existing replication group name.
        linkedDatabases:
          type: array
          description: The resource IDs of the databases that are expected to be linked and included in the replication group. This parameter is used to validate that the linking is to the expected (unlinked) part of the replication group, if it is splintered.
          items:
            $ref: '#/components/schemas/LinkedDatabase'
    ForceUnlinkParameters:
      title: Forcibly unlink another database from this database.
      description: Parameters for a redis enterprise active geo-replication force unlink operation.
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: arm-id
            x-ms-arm-id-details:
              allowedResources:
                - type: Microsoft.Cache/redisEnterprise/databases
          description: The resource IDs of the database resources to be unlinked.
      required:
        - ids
    FlushParameters:
      title: Flush all the keys from the current and all its linked databases.
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: arm-id
            x-ms-arm-id-details:
              allowedResources:
                - type: Microsoft.Cache/redisEnterprise/databases
          description: The identifiers of all the other database resources in the georeplication group to be flushed.
      description: Parameters for a Redis Enterprise active geo-replication flush operation
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure_isv.redis_enterprise.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Cache~1operations?api-version=2024-09-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations_status:
      id: azure_isv.redis_enterprise.operations_status
      name: operations_status
      title: operations_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cache~1locations~1{location}~1operationsStatus~1{operationId}?api-version=2024-09-01-preview/get'
            operationId: OperationsStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    redis_enterprises:
      id: azure_isv.redis_enterprise.redis_enterprises
      name: redis_enterprises
      title: redis_enterprises
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}?api-version=2024-09-01-preview/put'
            operationId: RedisEnterprise_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}?api-version=2024-09-01-preview/patch'
            operationId: RedisEnterprise_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}?api-version=2024-09-01-preview/delete'
            operationId: RedisEnterprise_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}?api-version=2024-09-01-preview/get'
            operationId: RedisEnterprise_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise?api-version=2024-09-01-preview/get'
            operationId: RedisEnterprise_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Cache~1redisEnterprise?api-version=2024-09-01-preview/get'
            operationId: RedisEnterprise_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/redis_enterprises/methods/get'
          - $ref: '#/components/x-stackQL-resources/redis_enterprises/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/redis_enterprises/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/redis_enterprises/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/redis_enterprises/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/redis_enterprises/methods/delete'
    databases:
      id: azure_isv.redis_enterprise.databases
      name: databases
      title: databases
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases?api-version=2024-09-01-preview/get'
            operationId: Databases_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseList
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}?api-version=2024-09-01-preview/put'
            operationId: Databases_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}?api-version=2024-09-01-preview/patch'
            operationId: Databases_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}?api-version=2024-09-01-preview/get'
            operationId: Databases_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Database
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}?api-version=2024-09-01-preview/delete'
            operationId: Databases_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1regenerateKey?api-version=2024-09-01-preview/post'
            operationId: Databases_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessKeys
        import:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1import?api-version=2024-09-01-preview/post'
            operationId: Databases_Import
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1export?api-version=2024-09-01-preview/post'
            operationId: Databases_Export
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        force_unlink:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1forceUnlink?api-version=2024-09-01-preview/post'
            operationId: Databases_ForceUnlink
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        force_link_to_replication_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1forceLinkToReplicationGroup?api-version=2024-09-01-preview/post'
            operationId: Databases_ForceLinkToReplicationGroup
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        flush:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1flush?api-version=2024-09-01-preview/post'
            operationId: Databases_Flush
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upgrade_db_redis_version:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1upgradeDBRedisVersion?api-version=2024-09-01-preview/post'
            operationId: Databases_UpgradeDBRedisVersion
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/databases/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/databases/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/databases/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/databases/methods/delete'
    databases_keys:
      id: azure_isv.redis_enterprise.databases_keys
      name: databases_keys
      title: databases_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1listKeys?api-version=2024-09-01-preview/post'
            operationId: DatabasesKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/databases_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    access_policy_assignments:
      id: azure_isv.redis_enterprise.access_policy_assignments
      name: access_policy_assignments
      title: access_policy_assignments
      methods:
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1accessPolicyAssignments~1{accessPolicyAssignmentName}?api-version=2024-09-01-preview/put'
            operationId: AccessPolicyAssignment_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyAssignment
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1accessPolicyAssignments~1{accessPolicyAssignmentName}?api-version=2024-09-01-preview/get'
            operationId: AccessPolicyAssignment_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyAssignment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1accessPolicyAssignments~1{accessPolicyAssignmentName}?api-version=2024-09-01-preview/delete'
            operationId: AccessPolicyAssignment_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1databases~1{databaseName}~1accessPolicyAssignments?api-version=2024-09-01-preview/get'
            operationId: AccessPolicyAssignment_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyAssignmentList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_policy_assignments/methods/delete'
    private_endpoint_connections:
      id: azure_isv.redis_enterprise.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1privateEndpointConnections?api-version=2024-09-01-preview/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-09-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-09-01-preview/put'
            operationId: PrivateEndpointConnections_Put
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-09-01-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/put'
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure_isv.redis_enterprise.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Cache~1redisEnterprise~1{clusterName}~1privateLinkResources?api-version=2024-09-01-preview/get'
            operationId: PrivateLinkResources_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_cluster'
        insert: []
        update: []
        replace: []
        delete: []
    vw_redis_enterprises:
      id: azure_isv.redis_enterprise.vw_redis_enterprises
      name: vw_redis_enterprises
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              sku as sku,
              zones as zones,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.highAvailability') as "high_availability",
              JSON_EXTRACT(properties, '$.minimumTlsVersion') as "minimum_tls_version",
              JSON_EXTRACT(properties, '$.encryption') as "encryption",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.redundancyMode') as "redundancy_mode",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.redisVersion') as "redis_version",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure_isv.redis_enterprise.redis_enterprises
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                sku as sku,
                zones as zones,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.highAvailability') as "high_availability",
                json_extract_path_text(properties, '$.minimumTlsVersion') as "minimum_tls_version",
                json_extract_path_text(properties, '$.encryption') as "encryption",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.redundancyMode') as "redundancy_mode",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.redisVersion') as "redis_version",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure_isv.redis_enterprise.redis_enterprises
                WHERE subscriptionId = 'replace-me';
    vw_databases:
      id: azure_isv.redis_enterprise.vw_databases
      name: vw_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.clientProtocol') as "client_protocol",
              JSON_EXTRACT(properties, '$.port') as "port",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.clusteringPolicy') as "clustering_policy",
              JSON_EXTRACT(properties, '$.evictionPolicy') as "eviction_policy",
              JSON_EXTRACT(properties, '$.persistence') as "persistence",
              JSON_EXTRACT(properties, '$.modules') as "modules",
              JSON_EXTRACT(properties, '$.geoReplication') as "geo_replication",
              JSON_EXTRACT(properties, '$.redisVersion') as "redis_version",
              JSON_EXTRACT(properties, '$.deferUpgrade') as "defer_upgrade",
              JSON_EXTRACT(properties, '$.accessKeysAuthentication') as "access_keys_authentication",
              subscriptionId,
              resourceGroupName,
              clusterName,
              databaseName
              FROM azure_isv.redis_enterprise.databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.clientProtocol') as "client_protocol",
                json_extract_path_text(properties, '$.port') as "port",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.clusteringPolicy') as "clustering_policy",
                json_extract_path_text(properties, '$.evictionPolicy') as "eviction_policy",
                json_extract_path_text(properties, '$.persistence') as "persistence",
                json_extract_path_text(properties, '$.modules') as "modules",
                json_extract_path_text(properties, '$.geoReplication') as "geo_replication",
                json_extract_path_text(properties, '$.redisVersion') as "redis_version",
                json_extract_path_text(properties, '$.deferUpgrade') as "defer_upgrade",
                json_extract_path_text(properties, '$.accessKeysAuthentication') as "access_keys_authentication",
                subscriptionId,
                resourceGroupName,
                clusterName,
                databaseName
                FROM azure_isv.redis_enterprise.databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_access_policy_assignments:
      id: azure_isv.redis_enterprise.vw_access_policy_assignments
      name: vw_access_policy_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.accessPolicyName') as "access_policy_name",
              JSON_EXTRACT(properties, '$.user') as "user",
              subscriptionId,
              resourceGroupName,
              clusterName,
              databaseName,
              accessPolicyAssignmentName
              FROM azure_isv.redis_enterprise.access_policy_assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.accessPolicyName') as "access_policy_name",
                json_extract_path_text(properties, '$.user') as "user",
                subscriptionId,
                resourceGroupName,
                clusterName,
                databaseName,
                accessPolicyAssignmentName
                FROM azure_isv.redis_enterprise.access_policy_assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND databaseName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure_isv.redis_enterprise.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              privateEndpointConnectionName
              FROM azure_isv.redis_enterprise.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                privateEndpointConnectionName
                FROM azure_isv.redis_enterprise.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
paths:
  /providers/Microsoft.Cache/operations?api-version=2024-09-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available REST API operations of the Microsoft.Cache provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Success. The response describes the list of operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Cache/locations/{location}/operationsStatus/{operationId}?api-version=2024-09-01-preview:
    get:
      tags:
        - OperationsStatus
      operationId: OperationsStatus_Get
      description: Gets the status of operation.
      parameters:
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The detailed status of the operation is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}?api-version=2024-09-01-preview:
    put:
      tags:
        - RedisEnterprise
      operationId: RedisEnterprise_Create
      description: Creates or updates an existing (overwrite/recreate, with potential downtime) cache cluster
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Redis Enterprise operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      responses:
        '200':
          description: The cluster was/is being updated. Check provisioningState and resourceState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: The cluster was/is being created. Check provisioningState and resourceState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - RedisEnterprise
      operationId: RedisEnterprise_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Updates an existing Redis Enterprise cluster
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Redis Enterprise operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdate'
      responses:
        '200':
          description: The cluster was/is being updated. Check provisioningState and resourceState to see detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: The cluster update operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - RedisEnterprise
      operationId: RedisEnterprise_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Deletes a Redis Enterprise cache cluster.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The cluster was successfully deleted.
        '202':
          description: The cluster delete operation was successfully started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        '204':
          description: The cluster was successfully deleted.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - RedisEnterprise
      operationId: RedisEnterprise_Get
      description: Gets information about a Redis Enterprise cluster
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request succeeded, response body contains the requested details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise?api-version=2024-09-01-preview:
    get:
      tags:
        - RedisEnterprise
      operationId: RedisEnterprise_ListByResourceGroup
      description: Lists all Redis Enterprise clusters in a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Redis Enterprise clusters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Cache/redisEnterprise?api-version=2024-09-01-preview:
    get:
      tags:
        - RedisEnterprise
      operationId: RedisEnterprise_List
      description: Lists all Redis Enterprise clusters in the specified subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Redis Enterprise clusters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases?api-version=2024-09-01-preview:
    get:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_ListByCluster
      description: Gets all databases in the specified Redis Enterprise cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: The list of databases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}?api-version=2024-09-01-preview:
    put:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_Create
      description: Creates a database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update database operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Database'
      responses:
        '200':
          description: The database was/is being updated. Check provisioningState and resourceState for detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '201':
          description: The database was/is being created. Check provisioningState and resourceState for detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_Update
      description: Updates a database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the create or update database operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseUpdate'
      responses:
        '200':
          description: The database was/is being updated. Check provisioningState and resourceState for detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        '202':
          description: The database update operation was successfully started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_Get
      description: Gets information about a database in a Redis Enterprise cluster.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully found the database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_Delete
      description: Deletes a single database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully deleted the database.
        '202':
          description: The database delete operation started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        '204':
          description: Successfully deleted the database.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/listKeys?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: DatabasesKeys_List
      description: Retrieves the access keys for the Redis Enterprise database.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The access keys for the specified database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Databases_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/regenerateKey?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_RegenerateKey
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Regenerates the Redis Enterprise database's access keys.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Specifies which key to regenerate.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeyParameters'
      responses:
        '200':
          description: Returns the new access keys for the database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        '202':
          description: The cluster update operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/import?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_Import
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Imports database files to target database.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Storage information for importing into the cluster
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportClusterParameters'
      responses:
        '200':
          description: Import operation succeeded.
        '202':
          description: The import operation was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/export?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_Export
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Exports a database file from target database.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Storage information for exporting into the cluster
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportClusterParameters'
      responses:
        '200':
          description: Export operation succeeded.
        '202':
          description: Export operation successfully enqueued; follow the Location header to poll for final outcome.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/accessPolicyAssignments/{accessPolicyAssignmentName}?api-version=2024-09-01-preview:
    put:
      tags:
        - RedisEnterprise
        - Databases
        - AccessPolicyAssignments
      operationId: AccessPolicyAssignment_CreateUpdate
      description: Creates/Updates a particular access policy assignment for a database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/AccessPolicyAssignmentNameParameter'
      requestBody:
        description: Parameters supplied to the create access policy assignment for database.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicyAssignment'
      responses:
        '200':
          description: The database access policy assignment is being created. Check provisioningState and resourceState for detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyAssignment'
        '201':
          description: The database access policy assignment is being created. Check provisioningState and resourceState for detailed status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - RedisEnterprise
        - Databases
        - AccessPolicyAssignments
      operationId: AccessPolicyAssignment_Get
      description: Gets information about access policy assignment for database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/AccessPolicyAssignmentNameParameter'
      responses:
        '200':
          description: Successfully found the access policy assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - RedisEnterprise
        - Databases
        - AccessPolicyAssignments
      operationId: AccessPolicyAssignment_Delete
      description: Deletes a single access policy assignment.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/AccessPolicyAssignmentNameParameter'
      responses:
        '202':
          description: The access policy assignment delete operation started for database. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        '204':
          description: Successfully deleted the access policy assignment.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/accessPolicyAssignments?api-version=2024-09-01-preview:
    get:
      tags:
        - RedisEnterprise
        - Databases
        - AccessPolicyAssignments
      operationId: AccessPolicyAssignment_List
      description: Gets all access policy assignments..
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
      responses:
        '200':
          description: The list of access policy assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyAssignmentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections?api-version=2024-09-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: Lists all the private endpoint connections associated with the Redis Enterprise cluster.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-09-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection associated with the Redis Enterprise cluster.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Put
      description: Updates the state of the specified private endpoint connection associated with the Redis Enterprise cluster.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '201':
          description: OK -- Update the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes the specified private endpoint connection associated with the Redis Enterprise cluster.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Delete the private endpoint connection successfully.
        '202':
          description: Deletion of specified private endpoint connection was started. GET the URL in the Azure-AsyncOperation or Location headers to retrieve updated status.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        '204':
          description: No Content -- The private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/privateLinkResources?api-version=2024-09-01-preview:
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByCluster
      description: Gets the private link resources that need to be created for a Redis Enterprise cluster.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/forceUnlink?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_ForceUnlink
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Forcibly removes the link to the specified database resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Information identifying the database to be unlinked.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForceUnlinkParameters'
      responses:
        '200':
          description: Force unlink operation succeeded. The unlinked database must be deleted before it can be recreated and linked again.
        '202':
          description: Force unlink operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/forceLinkToReplicationGroup?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_ForceLinkToReplicationGroup
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      description: Forcibly recreates an existing database on the specified cluster, and rejoins it to an existing replication group. **IMPORTANT NOTE:** All data in this database will be discarded, and the database will temporarily be unavailable while rejoining the replication group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Information identifying the database to be unlinked.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForceLinkParameters'
      responses:
        '202':
          description: Force link operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: Azure-AsyncOperation URI to poll for result
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/flush?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_Flush
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      description: Flushes all the keys in this database and also from its linked databases.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Information identifying the databases to be flushed
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlushParameters'
      responses:
        '200':
          description: Flush operation succeeded. All the keys are cleared in this and all its linked databases.
        '202':
          description: Flush operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}/upgradeDBRedisVersion?api-version=2024-09-01-preview:
    post:
      tags:
        - RedisEnterprise
        - Databases
      operationId: Databases_UpgradeDBRedisVersion
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      description: Upgrades the database Redis version to the latest available.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Upgrade operation successfully enqueued; follow the Azure-AsyncOperation header to poll for final outcome.
          headers:
            Location:
              schema:
                type: string
              description: Location URI to poll for result
            Azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for the operation status
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
