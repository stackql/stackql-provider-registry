openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: MongoDB Atlas on Azure (Azure Native ISV Service)
  description: Run your fully managed MongoDB workloads on Azure with MongoDB Atlas, a global developer data platform with the versatility you need to build modern and scalable applications.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ConnectionString:
      type: object
      description: Connection string for the mongo cluster
      properties:
        connectionString:
          type: string
          description: Value of the connection string
          readOnly: true
        description:
          type: string
          description: Description of the connection string
          readOnly: true
    CreateMode:
      type: string
      description: The mode that the Mongo Cluster is created with.
      enum:
        - Default
        - PointInTimeRestore
      x-ms-enum:
        name: CreateMode
        modelAsString: true
        values:
          - name: Default
            value: Default
            description: Create a new mongo cluster.
          - name: PointInTimeRestore
            value: PointInTimeRestore
            description: Create a mongo cluster from a restore point-in-time.
    FirewallRule:
      description: Represents a mongo cluster firewall rule.
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    FirewallRuleListResult:
      type: object
      description: The response of a FirewallRule list operation.
      properties:
        value:
          type: array
          description: The FirewallRule items on this page
          items:
            $ref: '#/components/schemas/FirewallRule'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    FirewallRuleProperties:
      type: object
      description: The properties of a mongo cluster firewall rule.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the firewall rule.
          readOnly: true
        startIpAddress:
          type: string
          description: The start IP address of the mongo cluster firewall rule. Must be IPv4 format.
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
        endIpAddress:
          type: string
          description: The end IP address of the mongo cluster firewall rule. Must be IPv4 format.
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
      required:
        - startIpAddress
        - endIpAddress
    ListConnectionStringsResult:
      type: object
      description: The connection strings for the given mongo cluster.
      properties:
        connectionStrings:
          type: array
          description: An array that contains the connection strings for a mongo cluster.
          items:
            $ref: '#/components/schemas/ConnectionString'
          readOnly: true
          x-ms-identifiers: []
    MongoCluster:
      description: Represents a mongo cluster resource.
      properties:
        properties:
          $ref: '#/components/schemas/MongoClusterProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MongoClusterListResult:
      type: object
      description: The response of a MongoCluster list operation.
      properties:
        value:
          type: array
          description: The MongoCluster items on this page
          items:
            $ref: '#/components/schemas/MongoCluster'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    MongoClusterProperties:
      type: object
      description: The properties of a mongo cluster.
      properties:
        createMode:
          $ref: '#/components/schemas/CreateMode'
          description: The mode to create a mongo cluster.
          x-ms-mutability:
            - create
        restoreParameters:
          $ref: '#/components/schemas/MongoClusterRestoreParameters'
          description: The parameters to create a point-in-time restore mongo cluster.
          x-ms-mutability:
            - create
        administratorLogin:
          type: string
          description: The administrator's login for the mongo cluster.
          x-ms-mutability:
            - read
            - update
            - create
        administratorLoginPassword:
          type: string
          format: password
          description: The password of the administrator login.
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
        serverVersion:
          type: string
          description: The Mongo DB server version. Defaults to the latest available version if not specified.
        connectionString:
          type: string
          description: The default mongo connection string for the cluster.
          readOnly: true
        earliestRestoreTime:
          type: string
          description: Earliest restore timestamp in UTC ISO8601 format.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The provisioning state of the mongo cluster.
          readOnly: true
        clusterStatus:
          $ref: '#/components/schemas/MongoClusterStatus'
          description: The status of the mongo cluster.
          readOnly: true
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public endpoint access is allowed for this mongo cluster.
        nodeGroupSpecs:
          type: array
          description: The list of node group specs in the cluster.
          items:
            $ref: '#/components/schemas/NodeGroupSpec'
          x-ms-identifiers: []
        privateEndpointConnections:
          type: array
          description: List of private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
    MongoClusterRestoreParameters:
      type: object
      description: Parameters used for restore operations
      properties:
        pointInTimeUTC:
          type: string
          format: date-time
          description: UTC point in time to restore a mongo cluster
        sourceResourceId:
          type: string
          description: Resource ID to locate the source cluster to restore
    MongoClusterStatus:
      type: string
      description: The status of the Mongo cluster resource.
      enum:
        - Ready
        - Provisioning
        - Updating
        - Starting
        - Stopping
        - Stopped
        - Dropping
      x-ms-enum:
        name: MongoClusterStatus
        modelAsString: true
        values:
          - name: Ready
            value: Ready
            description: The mongo cluster resource is ready for use.
          - name: Provisioning
            value: Provisioning
            description: The mongo cluster resource is being provisioned.
          - name: Updating
            value: Updating
            description: The mongo cluster resource is being updated.
          - name: Starting
            value: Starting
            description: The mongo cluster resource is being started.
          - name: Stopping
            value: Stopping
            description: The mongo cluster resource is being stopped.
          - name: Stopped
            value: Stopped
            description: The mongo cluster resource is stopped.
          - name: Dropping
            value: Dropping
            description: The mongo cluster resource is being dropped.
    MongoClusterUpdate:
      description: The type used for update operations of the MongoCluster.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/MongoClusterUpdateProperties'
          x-ms-client-flatten: true
      type: object
    MongoClusterUpdateProperties:
      type: object
      description: The updatable properties of the MongoCluster.
      properties:
        administratorLogin:
          type: string
          description: The administrator's login for the mongo cluster.
          x-ms-mutability:
            - read
            - update
            - create
        administratorLoginPassword:
          type: string
          format: password
          description: The password of the administrator login.
          x-ms-mutability:
            - update
            - create
          x-ms-secret: true
        serverVersion:
          type: string
          description: The Mongo DB server version. Defaults to the latest available version if not specified.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
          description: Whether or not public endpoint access is allowed for this mongo cluster.
        nodeGroupSpecs:
          type: array
          description: The list of node group specs in the cluster.
          items:
            $ref: '#/components/schemas/NodeGroupSpec'
          x-ms-identifiers: []
    NodeGroupProperties:
      type: object
      description: The properties of the node group on a cluster.
      properties:
        sku:
          type: string
          description: 'The resource sku for the node group. This defines the size of CPU and memory that is provisioned for each node. Example values: ''M30'', ''M40''.'
        diskSizeGB:
          type: integer
          format: int64
          description: 'The disk storage size for the node group in GB. Example values: 128, 256, 512, 1024.'
        enableHa:
          type: boolean
          description: Whether high availability is enabled on the node group.
    NodeGroupSpec:
      type: object
      description: Specification for a node group.
      properties:
        sku:
          type: string
          description: 'The resource sku for the node group. This defines the size of CPU and memory that is provisioned for each node. Example values: ''M30'', ''M40''.'
        diskSizeGB:
          type: integer
          format: int64
          description: 'The disk storage size for the node group in GB. Example values: 128, 256, 512, 1024.'
        enableHa:
          type: boolean
          description: Whether high availability is enabled on the node group.
        kind:
          $ref: '#/components/schemas/NodeKind'
          description: The node type deployed in the node group.
        nodeCount:
          type: integer
          format: int32
          description: The number of nodes in the node group.
    NodeKind:
      type: string
      description: The kind of the node on the cluster.
      enum:
        - Shard
      x-ms-enum:
        name: NodeKind
        modelAsString: true
        values:
          - name: Shard
            value: Shard
            description: The node is a shard kind.
    PrivateEndpointConnectionResource:
      description: Concrete proxy resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    PrivateEndpointConnectionResourceListResult:
      type: object
      description: The response of a PrivateEndpointConnectionResource list operation.
      properties:
        value:
          type: array
          description: The PrivateEndpointConnectionResource items on this page
          items:
            $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    PrivateLinkResource:
      description: A private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources.
    ProvisioningState:
      type: string
      description: The provisioning state of the last accepted operation.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - InProgress
        - Updating
        - Dropping
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
          - name: InProgress
            value: InProgress
            description: An operation is in-progress on the resource.
          - name: Updating
            value: Updating
            description: An update operation is in-progress on the resource.
          - name: Dropping
            value: Dropping
            description: A drop operation is in-progress on the resource.
      readOnly: true
    PublicNetworkAccess:
      type: string
      description: Whether or not public endpoint access is allowed for this Mongo cluster.  Value is optional and default value is 'Enabled'
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: PublicNetworkAccess
        modelAsString: true
        values:
          - name: Enabled
            value: Enabled
            description: If set, mongo cluster can be accessed through private and public methods.
          - name: Disabled
            value: Disabled
            description: If set, the private endpoints are the exclusive access method.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for private endpoint.
      description: The private endpoint resource.
    PrivateEndpointConnection:
      description: The private endpoint connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        groupIds:
          description: The group ids for the private endpoint resource.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The private endpoint resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the private endpoint connection.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connections associated with the specified resource.
  x-stackQL-resources:
    operations:
      id: azure_isv.mongocluster.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DocumentDB~1operations~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    mongo_clusters:
      id: azure_isv.mongocluster.mongo_clusters
      name: mongo_clusters
      title: mongo_clusters
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1checkMongoClusterNameAvailability~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1mongoClusters~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1?api-version=2024-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1?api-version=2024-03-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1?api-version=2024-03-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongo_clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/mongo_clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/mongo_clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/mongo_clusters/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mongo_clusters/methods/delete'
    firewall_rules:
      id: azure_isv.mongocluster.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        list_by_mongo_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1firewallRules~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1firewallRules~1{firewallRuleName}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1firewallRules~1{firewallRuleName}~1?api-version=2024-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1firewallRules~1{firewallRuleName}~1?api-version=2024-03-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_by_mongo_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    mongo_clusters_connection_strings:
      id: azure_isv.mongocluster.mongo_clusters_connection_strings
      name: mongo_clusters_connection_strings
      title: mongo_clusters_connection_strings
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1listConnectionStrings~1?api-version=2024-03-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongo_clusters_connection_strings/methods/list'
        insert: []
        update: []
        delete: []
    private_endpoint_connections:
      id: azure_isv.mongocluster.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list_by_mongo_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1privateEndpointConnections~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-03-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-03-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_mongo_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_links:
      id: azure_isv.mongocluster.private_links
      name: private_links
      title: private_links
      methods:
        list_by_mongo_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1mongoClusters~1{mongoClusterName}~1privateLinkResources~1?api-version=2024-03-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_links/methods/list_by_mongo_cluster'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.DocumentDB/operations/?api-version=2024-03-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability/?api-version=2024-03-01-preview:
    post:
      operationId: MongoClusters_CheckNameAvailability
      tags:
        - MongoClusters
      description: Check if mongo cluster name is available for use.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The CheckAvailability request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters/?api-version=2024-03-01-preview:
    get:
      operationId: MongoClusters_List
      tags:
        - MongoClusters
      description: List all the mongo clusters in a given subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoClusterListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/?api-version=2024-03-01-preview:
    get:
      operationId: MongoClusters_ListByResourceGroup
      tags:
        - MongoClusters
      description: List all the mongo clusters in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoClusterListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/?api-version=2024-03-01-preview:
    get:
      operationId: MongoClusters_Get
      tags:
        - MongoClusters
      description: Gets information about a mongo cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoCluster'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MongoClusters_CreateOrUpdate
      tags:
        - MongoClusters
      description: Create or update a mongo cluster. Update overwrites all properties for the resource. To only modify some of the properties, use PATCH.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoCluster'
      responses:
        '200':
          description: Resource 'MongoCluster' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoCluster'
        '201':
          description: Resource 'MongoCluster' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoCluster'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: MongoClusters_Update
      tags:
        - MongoClusters
      description: Updates an existing mongo cluster. The request body can contain one to many of the properties present in the normal mongo cluster definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoClusterUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoCluster'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: MongoClusters_Delete
      tags:
        - MongoClusters
      description: Deletes a mongo cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules/?api-version=2024-03-01-preview:
    get:
      operationId: FirewallRules_ListByMongoCluster
      tags:
        - FirewallRules
      description: List all the firewall rules in a given mongo cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules/{firewallRuleName}/?api-version=2024-03-01-preview:
    get:
      operationId: FirewallRules_Get
      tags:
        - FirewallRules
      description: Gets information about a mongo cluster firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
        - name: firewallRuleName
          in: path
          description: The name of the mongo cluster firewall rule.
          required: true
          schema:
            minLength: 1
            maxLength: 80
            pattern: ^[a-zA-Z0-9][-_.a-zA-Z0-9]*
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: FirewallRules_CreateOrUpdate
      tags:
        - FirewallRules
      description: Creates a new firewall rule or updates an existing firewall rule on a mongo cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
        - name: firewallRuleName
          in: path
          description: The name of the mongo cluster firewall rule.
          required: true
          schema:
            minLength: 1
            maxLength: 80
            pattern: ^[a-zA-Z0-9][-_.a-zA-Z0-9]*
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirewallRule'
      responses:
        '200':
          description: Resource 'FirewallRule' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '201':
          description: Resource 'FirewallRule' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: FirewallRules_Delete
      tags:
        - FirewallRules
      description: Deletes a mongo cluster firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
        - name: firewallRuleName
          in: path
          description: The name of the mongo cluster firewall rule.
          required: true
          schema:
            minLength: 1
            maxLength: 80
            pattern: ^[a-zA-Z0-9][-_.a-zA-Z0-9]*
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/listConnectionStrings/?api-version=2024-03-01-preview:
    post:
      operationId: MongoClusters_ListConnectionStrings
      tags:
        - MongoClusters
      description: List mongo cluster connection strings. This includes the default connection string using SCRAM-SHA-256, as well as other connection strings supported by the cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionStringsResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateEndpointConnections/?api-version=2024-03-01-preview:
    get:
      operationId: PrivateEndpointConnections_ListByMongoCluster
      tags:
        - PrivateEndpointConnections
      description: List existing private connections
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2024-03-01-preview:
    get:
      operationId: PrivateEndpointConnections_Get
      tags:
        - PrivateEndpointConnections
      description: Get a specific private connection
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: PrivateEndpointConnections_Create
      tags:
        - PrivateEndpointConnections
      description: Create a Private endpoint connection
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnectionResource'
      responses:
        '200':
          description: Resource 'PrivateEndpointConnectionResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        '201':
          description: Resource 'PrivateEndpointConnectionResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionResource'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: PrivateEndpointConnections_Delete
      tags:
        - PrivateEndpointConnections
      description: Delete the private endpoint connection
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/privateLinkResources/?api-version=2024-03-01-preview:
    get:
      operationId: PrivateLinks_ListByMongoCluster
      tags:
        - PrivateLinks
      description: list private links on the given resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: mongoClusterName
          in: path
          description: The name of the mongo cluster.
          required: true
          schema:
            minLength: 3
            maxLength: 40
            pattern: ^[a-z0-9]+(-[a-z0-9]+)*
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
