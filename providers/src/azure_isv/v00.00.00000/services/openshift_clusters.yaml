openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Red Hat OpenShift (Azure Native ISV Service)
  description: Deploy and scale containers on managed Red Hat OpenShift.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    api-version:
      name: api-version
      in: query
      description: The version of the API the caller wants to use.
      required: true
      x-ms-parameter-location: client
      schema:
        pattern: ^\d{2}-\d{2}-\d{4}(-preview)?$
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: Operation represents an RP operation.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        display:
          $ref: '#/components/schemas/Display'
          description: The object that describes the operation.
        origin:
          description: Sources of requests to this operation.  Comma separated list with valid values user or system, e.g. "user,system".
          type: string
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    APIServerProfile:
      description: APIServerProfile represents an API server profile.
      type: object
      properties:
        visibility:
          $ref: '#/components/schemas/Visibility'
          description: API server visibility.
        url:
          description: The URL to access the cluster API server.
          type: string
          readOnly: true
        ip:
          description: The IP of the cluster API server.
          type: string
          readOnly: true
    CloudError:
      description: CloudError represents a cloud error.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: An error response from the service.
    CloudErrorBody:
      description: CloudErrorBody represents the body of a cloud error.
      type: object
      properties:
        code:
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
          type: string
        message:
          description: A message describing the error, intended to be suitable for display in a user interface.
          type: string
        target:
          description: The target of the particular error. For example, the name of the property in error.
          type: string
        details:
          description: A list of additional details about the error.
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers: []
    ClusterProfile:
      description: ClusterProfile represents a cluster profile.
      type: object
      properties:
        pullSecret:
          description: The pull secret for the cluster.
          type: string
        domain:
          description: The domain for the cluster.
          type: string
        version:
          description: The version of the cluster.
          type: string
        resourceGroupId:
          description: The ID of the cluster resource group.
          type: string
        fipsValidatedModules:
          $ref: '#/components/schemas/FipsValidatedModules'
          description: If FIPS validated crypto modules are used
    ConsoleProfile:
      description: ConsoleProfile represents a console profile.
      type: object
      properties:
        url:
          description: The URL to access the cluster console.
          type: string
          readOnly: true
    Display:
      description: Display represents the display details of an operation.
      type: object
      properties:
        provider:
          description: Friendly name of the resource provider.
          type: string
        resource:
          description: Resource type on which the operation is performed.
          type: string
        operation:
          description: 'Operation type: read, write, delete, listKeys/action, etc.'
          type: string
        description:
          description: Friendly name of the operation.
          type: string
    EffectiveOutboundIP:
      description: EffectiveOutboundIP represents an effective outbound IP resource of the cluster public load balancer.
      type: object
      properties:
        id:
          description: The fully qualified Azure resource id of an IP address resource.
          type: string
    EncryptionAtHost:
      description: EncryptionAtHost represents encryption at host state
      enum:
        - Disabled
        - Enabled
      type: string
      x-ms-enum:
        name: EncryptionAtHost
        modelAsString: true
    FipsValidatedModules:
      description: FipsValidatedModules determines if FIPS is used.
      enum:
        - Disabled
        - Enabled
      type: string
      x-ms-enum:
        name: FipsValidatedModules
        modelAsString: true
    IngressProfile:
      description: IngressProfile represents an ingress profile.
      type: object
      properties:
        name:
          description: The ingress profile name.
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
          description: Ingress visibility.
        ip:
          description: The IP of the ingress.
          type: string
          readOnly: true
    LoadBalancerProfile:
      description: LoadBalancerProfile represents the profile of the cluster public load balancer.
      type: object
      properties:
        managedOutboundIps:
          $ref: '#/components/schemas/ManagedOutboundIPs'
          description: The desired managed outbound IPs for the cluster public load balancer.
        effectiveOutboundIps:
          description: The list of effective outbound IP addresses of the public load balancer.
          type: array
          items:
            $ref: '#/components/schemas/EffectiveOutboundIP'
          readOnly: true
          x-ms-identifiers: []
    MachinePool:
      description: MachinePool represents a MachinePool
      properties:
        properties:
          $ref: '#/components/schemas/MachinePoolProperties'
          description: The MachinePool Properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    MachinePoolList:
      description: MachinePoolList represents a list of MachinePools
      type: object
      properties:
        value:
          description: The list of Machine Pools.
          type: array
          items:
            $ref: '#/components/schemas/MachinePool'
          x-ms-identifiers: []
        nextLink:
          description: The link used to get the next page of operations.
          type: string
    MachinePoolProperties:
      description: MachinePoolProperties represents the properties of a MachinePool
      type: object
      properties:
        resources:
          type: string
    MachinePoolUpdate:
      description: MachinePool represents a MachinePool
      properties:
        properties:
          $ref: '#/components/schemas/MachinePoolProperties'
          description: The MachinePool Properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    ManagedOutboundIPs:
      description: ManagedOutboundIPs represents the desired managed outbound IPs for the cluster public load balancer.
      type: object
      properties:
        count:
          format: int32
          description: Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.  Allowed values are in the range of 1 - 20.  The default value is 1.
          type: integer
    MasterProfile:
      description: MasterProfile represents a master profile.
      type: object
      properties:
        vmSize:
          $ref: '#/components/schemas/VMSize'
          description: The size of the master VMs.
        subnetId:
          description: The Azure resource ID of the master subnet.
          type: string
        encryptionAtHost:
          $ref: '#/components/schemas/EncryptionAtHost'
          description: Whether master virtual machines are encrypted at host.
        diskEncryptionSetId:
          description: The resource ID of an associated DiskEncryptionSet, if applicable.
          type: string
    NetworkProfile:
      description: NetworkProfile represents a network profile.
      type: object
      properties:
        podCidr:
          description: The CIDR used for OpenShift/Kubernetes Pods.
          type: string
        serviceCidr:
          description: The CIDR used for OpenShift/Kubernetes Services.
          type: string
        outboundType:
          $ref: '#/components/schemas/OutboundType'
          description: The OutboundType used for egress traffic.
        loadBalancerProfile:
          $ref: '#/components/schemas/LoadBalancerProfile'
          description: The cluster load balancer profile.
        preconfiguredNSG:
          $ref: '#/components/schemas/PreconfiguredNSG'
          description: Specifies whether subnets are pre-attached with an NSG
    OpenShiftCluster:
      description: OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/OpenShiftClusterProperties'
          description: The cluster properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    OpenShiftClusterAdminKubeconfig:
      description: OpenShiftClusterAdminKubeconfig represents an OpenShift cluster's admin kubeconfig.
      type: object
      properties:
        kubeconfig:
          description: The base64-encoded kubeconfig file.
          type: string
          x-ms-secret: true
    OpenShiftClusterCredentials:
      description: OpenShiftClusterCredentials represents an OpenShift cluster's credentials.
      type: object
      properties:
        kubeadminUsername:
          description: The username for the kubeadmin user.
          type: string
        kubeadminPassword:
          description: The password for the kubeadmin user.
          type: string
          x-ms-secret: true
    OpenShiftClusterList:
      description: OpenShiftClusterList represents a list of OpenShift clusters.
      type: object
      properties:
        value:
          description: The list of OpenShift clusters.
          type: array
          items:
            $ref: '#/components/schemas/OpenShiftCluster'
          x-ms-identifiers: []
        nextLink:
          description: The link used to get the next page of operations.
          type: string
    OpenShiftClusterProperties:
      description: OpenShiftClusterProperties represents an OpenShift cluster's properties.
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The cluster provisioning state.
        clusterProfile:
          $ref: '#/components/schemas/ClusterProfile'
          description: The cluster profile.
        consoleProfile:
          $ref: '#/components/schemas/ConsoleProfile'
          description: The console profile.
        servicePrincipalProfile:
          $ref: '#/components/schemas/ServicePrincipalProfile'
          description: The cluster service principal profile.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: The cluster network profile.
        masterProfile:
          $ref: '#/components/schemas/MasterProfile'
          description: The cluster master profile.
        workerProfiles:
          description: The cluster worker profiles.
          type: array
          items:
            $ref: '#/components/schemas/WorkerProfile'
          x-ms-identifiers: []
        workerProfilesStatus:
          description: The cluster worker profiles status.
          type: array
          items:
            $ref: '#/components/schemas/WorkerProfile'
          readOnly: true
          x-ms-identifiers: []
        apiserverProfile:
          $ref: '#/components/schemas/APIServerProfile'
          description: The cluster API server profile.
        ingressProfiles:
          description: The cluster ingress profiles.
          type: array
          items:
            $ref: '#/components/schemas/IngressProfile'
          x-ms-identifiers: []
    OpenShiftClusterUpdate:
      description: OpenShiftCluster represents an Azure Red Hat OpenShift cluster.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
          description: The resource tags.
        properties:
          $ref: '#/components/schemas/OpenShiftClusterProperties'
          description: The cluster properties.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    OpenShiftVersion:
      description: OpenShiftVersion represents an OpenShift version that can be installed.
      properties:
        properties:
          $ref: '#/components/schemas/OpenShiftVersionProperties'
          description: The properties for the OpenShiftVersion resource.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    OpenShiftVersionList:
      description: OpenShiftVersionList represents a List of available versions.
      type: object
      properties:
        value:
          description: The List of available versions.
          type: array
          items:
            $ref: '#/components/schemas/OpenShiftVersion'
          x-ms-identifiers: []
        nextLink:
          description: Next Link to next operation.
          type: string
    OpenShiftVersionProperties:
      description: OpenShiftVersionProperties represents the properties of an OpenShiftVersion.
      type: object
      properties:
        version:
          description: Version represents the version to create the cluster at.
          type: string
    OperationList:
      description: OperationList represents an RP operation list.
      type: object
      properties:
        value:
          description: List of operations supported by the resource provider.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers: []
        nextLink:
          description: The link used to get the next page of operations.
          type: string
    OutboundType:
      description: The outbound routing strategy used to provide your cluster egress to the internet.
      enum:
        - Loadbalancer
        - UserDefinedRouting
      type: string
      x-ms-enum:
        name: OutboundType
        modelAsString: true
    PreconfiguredNSG:
      description: PreconfiguredNSG represents whether customers want to use their own NSG attached to the subnets
      enum:
        - Disabled
        - Enabled
      type: string
      x-ms-enum:
        name: PreconfiguredNSG
        modelAsString: true
    ProvisioningState:
      description: ProvisioningState represents a provisioning state.
      enum:
        - AdminUpdating
        - Canceled
        - Creating
        - Deleting
        - Failed
        - Succeeded
        - Updating
      type: string
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    Secret:
      description: Secret represents a secret.
      properties:
        properties:
          $ref: '#/components/schemas/SecretProperties'
          description: The Secret Properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    SecretList:
      description: SecretList represents a list of Secrets
      type: object
      properties:
        value:
          description: The list of secrets.
          type: array
          items:
            $ref: '#/components/schemas/Secret'
          x-ms-identifiers: []
        nextLink:
          description: The link used to get the next page of operations.
          type: string
    SecretProperties:
      description: SecretProperties represents the properties of a Secret
      type: object
      properties:
        secretResources:
          description: The Secrets Resources.
          type: string
          x-ms-secret: true
    SecretUpdate:
      description: Secret represents a secret.
      properties:
        properties:
          $ref: '#/components/schemas/SecretProperties'
          description: The Secret Properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    ServicePrincipalProfile:
      description: ServicePrincipalProfile represents a service principal profile.
      type: object
      properties:
        clientId:
          description: The client ID used for the cluster.
          type: string
        clientSecret:
          description: The client secret used for the cluster.
          type: string
    SyncIdentityProvider:
      description: SyncIdentityProvider represents a SyncIdentityProvider
      properties:
        properties:
          $ref: '#/components/schemas/SyncIdentityProviderProperties'
          description: The SyncIdentityProvider Properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    SyncIdentityProviderList:
      description: SyncSetList represents a list of SyncSets
      type: object
      properties:
        value:
          description: The list of sync identity providers
          type: array
          items:
            $ref: '#/components/schemas/SyncIdentityProvider'
          x-ms-identifiers: []
        nextLink:
          description: The link used to get the next page of operations.
          type: string
    SyncIdentityProviderProperties:
      description: SyncSetProperties represents the properties of a SyncSet
      type: object
      properties:
        resources:
          type: string
    SyncIdentityProviderUpdate:
      description: SyncIdentityProvider represents a SyncIdentityProvider
      properties:
        properties:
          $ref: '#/components/schemas/SyncIdentityProviderProperties'
          description: The SyncIdentityProvider Properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    SyncSet:
      description: SyncSet represents a SyncSet for an Azure Red Hat OpenShift Cluster.
      properties:
        properties:
          $ref: '#/components/schemas/SyncSetProperties'
          description: The Syncsets properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    SyncSetList:
      description: SyncSetList represents a list of SyncSets
      type: object
      properties:
        value:
          description: The list of syncsets.
          type: array
          items:
            $ref: '#/components/schemas/SyncSet'
          x-ms-identifiers: []
        nextLink:
          description: The link used to get the next page of operations.
          type: string
    SyncSetProperties:
      description: SyncSetProperties represents the properties of a SyncSet
      type: object
      properties:
        resources:
          description: Resources represents the SyncSets configuration.
          type: string
    SyncSetUpdate:
      description: SyncSet represents a SyncSet for an Azure Red Hat OpenShift Cluster.
      properties:
        properties:
          $ref: '#/components/schemas/SyncSetProperties'
          description: The Syncsets properties
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system meta data relating to this resource.
          readOnly: true
      type: object
    Tags:
      description: Tags represents an OpenShift cluster's tags.
      additionalProperties:
        type: string
      properties: {}
      type: object
    VMSize:
      description: |-
        VM size availability varies by region.
        If a node contains insufficient compute resources (memory, cpu, etc.), pods might fail to run correctly.
        For more details on restricted VM sizes, see: https://docs.microsoft.com/en-us/azure/openshift/support-policies-v4#supported-virtual-machine-sizes
      type: string
    Visibility:
      description: Visibility represents visibility.
      enum:
        - Private
        - Public
      type: string
      x-ms-enum:
        name: Visibility
        modelAsString: true
    WorkerProfile:
      description: WorkerProfile represents a worker profile.
      type: object
      properties:
        name:
          description: The worker profile name.
          type: string
        vmSize:
          $ref: '#/components/schemas/VMSize'
          description: The size of the worker VMs.
        diskSizeGB:
          description: The disk size of the worker VMs.
          type: integer
          format: int32
        subnetId:
          description: The Azure resource ID of the worker subnet.
          type: string
        count:
          description: The number of worker VMs.
          type: integer
          format: int32
        encryptionAtHost:
          $ref: '#/components/schemas/EncryptionAtHost'
          description: Whether master virtual machines are encrypted at host.
        diskEncryptionSetId:
          description: The resource ID of an associated DiskEncryptionSet, if applicable.
          type: string
  x-stackQL-resources:
    operations:
      id: azure_isv.openshift_clusters.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.RedHatOpenShift~1operations~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    open_shift_versions:
      id: azure_isv.openshift_clusters.open_shift_versions
      name: open_shift_versions
      title: open_shift_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.RedHatOpenShift~1locations~1{location}~1openshiftversions~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/open_shift_versions/methods/list'
        insert: []
        update: []
        delete: []
    open_shift_clusters:
      id: azure_isv.openshift_clusters.open_shift_clusters
      name: open_shift_clusters
      title: open_shift_clusters
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1{resourceName}~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1{resourceName}~1?api-version=2023-11-22/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1{resourceName}~1?api-version=2023-11-22/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1{resourceName}~1?api-version=2023-11-22/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/open_shift_clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/open_shift_clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/open_shift_clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/open_shift_clusters/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/open_shift_clusters/methods/delete'
    machine_pools:
      id: azure_isv.openshift_clusters.machine_pools
      name: machine_pools
      title: machine_pools
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftCluster~1{resourceName}~1machinePools~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1machinePool~1{childResourceName}~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1machinePool~1{childResourceName}~1?api-version=2023-11-22/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1machinePool~1{childResourceName}~1?api-version=2023-11-22/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1machinePool~1{childResourceName}~1?api-version=2023-11-22/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/machine_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/machine_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/machine_pools/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/machine_pools/methods/delete'
    secrets:
      id: azure_isv.openshift_clusters.secrets
      name: secrets
      title: secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftCluster~1{resourceName}~1secrets~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1secret~1{childResourceName}~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1secret~1{childResourceName}~1?api-version=2023-11-22/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1secret~1{childResourceName}~1?api-version=2023-11-22/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1secret~1{childResourceName}~1?api-version=2023-11-22/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/get'
          - $ref: '#/components/x-stackQL-resources/secrets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/delete'
    sync_identity_providers:
      id: azure_isv.openshift_clusters.sync_identity_providers
      name: sync_identity_providers
      title: sync_identity_providers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftCluster~1{resourceName}~1syncIdentityProviders~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncIdentityProvider~1{childResourceName}~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncIdentityProvider~1{childResourceName}~1?api-version=2023-11-22/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncIdentityProvider~1{childResourceName}~1?api-version=2023-11-22/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncIdentityProvider~1{childResourceName}~1?api-version=2023-11-22/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sync_identity_providers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sync_identity_providers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sync_identity_providers/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sync_identity_providers/methods/delete'
    sync_sets:
      id: azure_isv.openshift_clusters.sync_sets
      name: sync_sets
      title: sync_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftCluster~1{resourceName}~1syncSets~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncSet~1{childResourceName}~1?api-version=2023-11-22/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncSet~1{childResourceName}~1?api-version=2023-11-22/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncSet~1{childResourceName}~1?api-version=2023-11-22/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openshiftclusters~1{resourceName}~1syncSet~1{childResourceName}~1?api-version=2023-11-22/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sync_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/sync_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sync_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sync_sets/methods/delete'
    open_shift_clusters_admin_credentials:
      id: azure_isv.openshift_clusters.open_shift_clusters_admin_credentials
      name: open_shift_clusters_admin_credentials
      title: open_shift_clusters_admin_credentials
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1{resourceName}~1listAdminCredentials~1?api-version=2023-11-22/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/open_shift_clusters_admin_credentials/methods/list'
        insert: []
        update: []
        delete: []
    open_shift_clusters_credentials:
      id: azure_isv.openshift_clusters.open_shift_clusters_credentials
      name: open_shift_clusters_credentials
      title: open_shift_clusters_credentials
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.RedHatOpenShift~1openShiftClusters~1{resourceName}~1listCredentials~1?api-version=2023-11-22/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/open_shift_clusters_credentials/methods/list'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.RedHatOpenShift/operations/?api-version=2023-11-22:
    get:
      tags:
        - Operations
      summary: Lists all of the available RP operations.
      description: The operation returns the RP operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/openshiftversions/?api-version=2023-11-22:
    get:
      tags:
        - OpenShiftVersions
      summary: Lists all OpenShift versions available to install in the specified location.
      description: The operation returns the installable OpenShift versions as strings.
      operationId: OpenShiftVersions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftVersionList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/openShiftClusters/?api-version=2023-11-22:
    get:
      tags:
        - OpenShiftClusters
      summary: Lists OpenShift clusters in the specified subscription.
      description: The operation returns properties of each OpenShift cluster.
      operationId: OpenShiftClusters_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftClusterList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftCluster/{resourceName}/machinePools/?api-version=2023-11-22:
    get:
      tags:
        - MachinePools
      summary: Lists MachinePools that belong to that Azure Red Hat OpenShift Cluster.
      description: The operation returns properties of each MachinePool.
      operationId: MachinePools_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachinePoolList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftCluster/{resourceName}/secrets/?api-version=2023-11-22:
    get:
      tags:
        - Secrets
      summary: Lists Secrets that belong to that Azure Red Hat OpenShift Cluster.
      description: The operation returns properties of each Secret.
      operationId: Secrets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftCluster/{resourceName}/syncIdentityProviders/?api-version=2023-11-22:
    get:
      tags:
        - SyncIdentityProviders
      summary: Lists SyncIdentityProviders that belong to that Azure Red Hat OpenShift Cluster.
      description: The operation returns properties of each SyncIdentityProvider.
      operationId: SyncIdentityProviders_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncIdentityProviderList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftCluster/{resourceName}/syncSets/?api-version=2023-11-22:
    get:
      tags:
        - SyncSets
      summary: Lists SyncSets that belong to that Azure Red Hat OpenShift Cluster.
      description: The operation returns properties of each SyncSet.
      operationId: SyncSets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncSetList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/?api-version=2023-11-22:
    get:
      tags:
        - OpenShiftClusters
      summary: Lists OpenShift clusters in the specified subscription and resource group.
      description: The operation returns properties of each OpenShift cluster.
      operationId: OpenShiftClusters_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftClusterList'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}/?api-version=2023-11-22:
    get:
      tags:
        - OpenShiftClusters
      summary: Gets a OpenShift cluster with the specified subscription, resource group and resource name.
      description: The operation returns properties of a OpenShift cluster.
      operationId: OpenShiftClusters_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftCluster'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - OpenShiftClusters
      summary: Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.
      description: The operation returns properties of a OpenShift cluster.
      operationId: OpenShiftClusters_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            type: string
      requestBody:
        description: The OpenShift cluster resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenShiftCluster'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftCluster'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftCluster'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - OpenShiftClusters
      summary: Deletes a OpenShift cluster with the specified subscription, resource group and resource name.
      description: The operation returns nothing.
      operationId: OpenShiftClusters_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - OpenShiftClusters
      summary: Updates a OpenShift cluster with the specified subscription, resource group and resource name.
      description: The operation returns properties of a OpenShift cluster.
      operationId: OpenShiftClusters_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            type: string
      requestBody:
        description: The OpenShift cluster resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenShiftClusterUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftCluster'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftCluster'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}/listAdminCredentials/?api-version=2023-11-22:
    post:
      tags:
        - OpenShiftClusters
      summary: Lists admin kubeconfig of an OpenShift cluster with the specified subscription, resource group and resource name.
      description: The operation returns the admin kubeconfig.
      operationId: OpenShiftClusters_ListAdminCredentials
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftClusterAdminKubeconfig'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}/listCredentials/?api-version=2023-11-22:
    post:
      tags:
        - OpenShiftClusters
      summary: Lists credentials of an OpenShift cluster with the specified subscription, resource group and resource name.
      description: The operation returns the credentials.
      operationId: OpenShiftClusters_ListCredentials
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenShiftClusterCredentials'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openshiftclusters/{resourceName}/machinePool/{childResourceName}/?api-version=2023-11-22:
    get:
      tags:
        - MachinePools
      summary: Gets a MachinePool with the specified subscription, resource group and resource name.
      description: The operation returns properties of a MachinePool.
      operationId: MachinePools_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the MachinePool resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachinePool'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - MachinePools
      summary: Creates or updates a MachinePool with the specified subscription, resource group and resource name.
      description: The operation returns properties of a MachinePool.
      operationId: MachinePools_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the MachinePool resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The MachinePool resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachinePool'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachinePool'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachinePool'
        default:
          description: Error response describing why the operation failed.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - MachinePools
      summary: Deletes a MachinePool with the specified subscription, resource group and resource name.
      description: The operation returns nothing.
      operationId: MachinePools_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the MachinePool resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - MachinePools
      summary: Updates a MachinePool with the specified subscription, resource group and resource name.
      description: The operation returns properties of a MachinePool.
      operationId: MachinePools_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the MachinePool resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The MachinePool resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachinePoolUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachinePool'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openshiftclusters/{resourceName}/secret/{childResourceName}/?api-version=2023-11-22:
    get:
      tags:
        - Secrets
      summary: Gets a Secret with the specified subscription, resource group and resource name.
      description: The operation returns properties of a Secret.
      operationId: Secrets_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the Secret resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Secrets
      summary: Creates or updates a Secret with the specified subscription, resource group and resource name.
      description: The operation returns properties of a Secret.
      operationId: Secrets_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the Secret resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The Secret resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        default:
          description: Error response describing why the operation failed.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Secrets
      summary: Deletes a Secret with the specified subscription, resource group and resource name.
      description: The operation returns nothing.
      operationId: Secrets_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the Secret resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Secrets
      summary: Updates a Secret with the specified subscription, resource group and resource name.
      description: The operation returns properties of a Secret.
      operationId: Secrets_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the Secret resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The Secret resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openshiftclusters/{resourceName}/syncIdentityProvider/{childResourceName}/?api-version=2023-11-22:
    get:
      tags:
        - SyncIdentityProviders
      summary: Gets a SyncIdentityProvider with the specified subscription, resource group and resource name.
      description: The operation returns properties of a SyncIdentityProvider.
      operationId: SyncIdentityProviders_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncIdentityProvider resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncIdentityProvider'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - SyncIdentityProviders
      summary: Creates or updates a SyncIdentityProvider with the specified subscription, resource group and resource name.
      description: The operation returns properties of a SyncIdentityProvider.
      operationId: SyncIdentityProviders_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncIdentityProvider resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The SyncIdentityProvider resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncIdentityProvider'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncIdentityProvider'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncIdentityProvider'
        default:
          description: Error response describing why the operation failed.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - SyncIdentityProviders
      summary: Deletes a SyncIdentityProvider with the specified subscription, resource group and resource name.
      description: The operation returns nothing.
      operationId: SyncIdentityProviders_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncIdentityProvider resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - SyncIdentityProviders
      summary: Updates a SyncIdentityProvider with the specified subscription, resource group and resource name.
      description: The operation returns properties of a SyncIdentityProvider.
      operationId: SyncIdentityProviders_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncIdentityProvider resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The SyncIdentityProvider resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncIdentityProviderUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncIdentityProvider'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openshiftclusters/{resourceName}/syncSet/{childResourceName}/?api-version=2023-11-22:
    get:
      tags:
        - SyncSets
      summary: Gets a SyncSet with the specified subscription, resource group and resource name.
      description: The operation returns properties of a SyncSet.
      operationId: SyncSets_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncSet resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncSet'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - SyncSets
      summary: Creates or updates a SyncSet with the specified subscription, resource group and resource name.
      description: The operation returns properties of a SyncSet.
      operationId: SyncSets_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncSet resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The SyncSet resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncSet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncSet'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncSet'
        default:
          description: Error response describing why the operation failed.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - SyncSets
      summary: Deletes a SyncSet with the specified subscription, resource group and resource name.
      description: The operation returns nothing.
      operationId: SyncSets_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncSet resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - SyncSets
      summary: Updates a SyncSet with the specified subscription, resource group and resource name.
      description: The operation returns properties of a SyncSet.
      operationId: SyncSets_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: resourceName
          in: path
          description: The name of the OpenShift cluster resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
        - name: childResourceName
          in: path
          description: The name of the SyncSet resource.
          required: true
          schema:
            maxLength: 63
            minLength: 1
            pattern: ^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]*[a-zA-Z0-9]$
            type: string
      requestBody:
        description: The SyncSet resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncSetUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncSet'
        default:
          description: Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
