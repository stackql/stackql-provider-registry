openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Informatica Intelligent Data Management Cloud (Azure Native ISV Service)
  description: Empowering users to deliver value from data with the Intelligent Data Management Cloud on Microsoft.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AdvancedCustomProperties:
      type: object
      description: Informatica Serverless advanced custom properties
      properties:
        key:
          type: string
          description: advanced custom properties key
        value:
          type: string
          description: advanced custom properties value
    ApplicationConfigs:
      type: object
      description: Application configs
      properties:
        type:
          type: string
          description: Type of the application config.
        name:
          type: string
          description: Name of the application config.
        value:
          type: string
          description: Value of the application config.
        platform:
          type: string
          description: Platform type of the application config.
        customized:
          type: string
          description: Customized value of the application config.
        defaultValue:
          type: string
          description: Default value of the application config.
      required:
        - type
        - name
        - value
        - platform
        - customized
        - defaultValue
    ApplicationType:
      type: string
      description: Various application types of the Serverless Runtime environments
      enum:
        - CDI
        - CDIE
      x-ms-enum:
        name: ApplicationType
        modelAsString: true
        values:
          - name: CDI
            value: CDI
            description: Data Integration
          - name: CDIE
            value: CDIE
            description: Advanced Data Integration
    ApplicationTypeMetadata:
      type: object
      description: Informatica Serverless Runtime Application type Metadata
      properties:
        name:
          type: string
          description: Application type name
        value:
          type: string
          description: Application type value
    Azure.Core.uuid:
      type: string
      format: uuid
      description: Universally Unique Identifier
    CdiConfigProps:
      type: object
      description: Informatica CDI Configuration Properties.
      properties:
        engineName:
          type: string
          description: EngineName of the application config.
        engineVersion:
          type: string
          description: EngineVersion of the application config.
        applicationConfigs:
          type: array
          description: ApplicationConfigs of the CDI or CDIE.
          items:
            $ref: '#/components/schemas/ApplicationConfigs'
          x-ms-identifiers: []
      required:
        - engineName
        - engineVersion
        - applicationConfigs
    CheckDependenciesResponse:
      type: object
      description: Model for the check dependencies API for an informatica serverless runtime resource
      properties:
        count:
          type: integer
          format: int32
          description: Count of dependencies
        id:
          type: string
          description: id of resource
        references:
          type: array
          description: List of dependencies
          items:
            $ref: '#/components/schemas/ServerlessRuntimeDependency'
      required:
        - count
        - id
        - references
    CompanyDetails:
      type: object
      description: Company Details.
      properties:
        companyName:
          type: string
          description: company Name
        officeAddress:
          type: string
          description: Office Address
        country:
          type: string
          description: Country name
        domain:
          type: string
          description: Domain name
        business:
          type: string
          description: Business phone number
        numberOfEmployees:
          type: integer
          format: int32
          description: Number Of Employees
    CompanyDetailsUpdate:
      type: object
      description: Company details of Informatica Organization resource
      properties:
        companyName:
          type: string
          description: company Name
        officeAddress:
          type: string
          description: Office Address
        country:
          type: string
          description: Country name
        domain:
          type: string
          description: Domain name
        business:
          type: string
          description: Business phone number
        numberOfEmployees:
          type: integer
          format: int32
          description: Number Of Employees
    ComputeUnitsMetadata:
      type: object
      description: Informatica Serverless Runtime Application type Metadata
      properties:
        name:
          type: string
          description: ComputeUnit name
        value:
          type: array
          description: ComputeUnit value
          items:
            type: string
    InfaRuntimeResourceFetchMetaData:
      type: object
      description: Informatica runtime resource metadata as received via the informatica fetch all runtime environments API
      properties:
        name:
          type: string
          description: Environment name
        createdTime:
          type: string
          description: Created time
        updatedTime:
          type: string
          description: Updated Time
        createdBy:
          type: string
          description: Created by
        updatedBy:
          type: string
          description: Last Updated by
        id:
          type: string
          description: Informatica serverless runtime id
        type:
          $ref: '#/components/schemas/RuntimeType'
          description: Environment Type
        status:
          type: string
          description: Status of the environment
        statusLocalized:
          type: string
          description: Display message for the given status
        statusMessage:
          type: string
          description: status message
        serverlessConfigProperties:
          $ref: '#/components/schemas/InfaServerlessFetchConfigProperties'
          description: Serverless Config Properties
        description:
          type: string
          description: Description of the runtime resource
      required:
        - name
        - createdTime
        - updatedTime
        - createdBy
        - updatedBy
        - id
        - type
        - status
        - statusLocalized
        - statusMessage
        - serverlessConfigProperties
    InfaServerlessFetchConfigProperties:
      type: object
      description: InfaServerlessFetchConfigProperties for the fetch all serverless API as received from informatica API response
      properties:
        subnet:
          type: string
          description: subnet name
        applicationType:
          type: string
          description: applicationType name
        resourceGroupName:
          type: string
          description: Resource group name
        advancedCustomProperties:
          type: string
          description: Advanced custom properties
        supplementaryFileLocation:
          type: string
          description: Supplementary File location
        platform:
          type: string
          description: Serverless Account Platform
        tags:
          type: string
          description: Tags for the resource
        vnet:
          type: string
          description: virtual network
        executionTimeout:
          type: string
          description: Execution timeout
        computeUnits:
          type: string
          description: Compute Units
        tenantId:
          $ref: '#/components/schemas/Azure.Core.uuid'
          description: Tenant ID
        subscriptionId:
          type: string
          description: subscription ID
        region:
          type: string
          description: region name for the runtime environment
        serverlessArmResourceId:
          type: string
          format: arm-id
          description: Serverless Arm Resource ID
          x-ms-arm-id-details:
            allowedResources: []
    InformaticaOrganizationResource:
      description: An Organization Resource by Informatica.
      properties:
        properties:
          $ref: '#/components/schemas/OrganizationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    InformaticaOrganizationResourceListResult:
      type: object
      description: The response of a InformaticaOrganizationResource list operation.
      properties:
        value:
          type: array
          description: The InformaticaOrganizationResource items on this page
          items:
            $ref: '#/components/schemas/InformaticaOrganizationResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    InformaticaOrganizationResourceUpdate:
      description: The template for adding optional properties.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/OrganizationPropertiesCustomUpdate'
          description: Patchable PropertieInformaticaOrganizationPropertiesUpdates of the Organization observability resource
      type: object
    InformaticaProperties:
      type: object
      description: Properties of the Informatica organization.
      properties:
        organizationId:
          type: string
          description: Organization id
        organizationName:
          type: string
          description: Organization name
        informaticaRegion:
          type: string
          description: Informatica organization region
        singleSignOnUrl:
          type: string
          format: uri
          description: Single sing on URL for informatica organization
    InformaticaServerlessRuntimeProperties:
      type: object
      description: Serverless Runtime properties.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of the resource.
          readOnly: true
        description:
          type: string
          description: description of the serverless runtime.
        platform:
          $ref: '#/components/schemas/PlatformType'
          description: Platform type of the Serverless Runtime.
        applicationType:
          $ref: '#/components/schemas/ApplicationType'
          description: Application type of the Serverless Runtime environment.
        computeUnits:
          type: string
          description: Compute units of the serverless runtime.
        executionTimeout:
          type: string
          description: Serverless Execution timeout
        serverlessAccountLocation:
          type: string
          description: Serverless account creation location
        serverlessRuntimeNetworkProfile:
          $ref: '#/components/schemas/ServerlessRuntimeNetworkProfile'
          description: Informatica Serverless Network profile properties.
        advancedCustomProperties:
          type: array
          description: String KV pairs indicating Advanced custom properties.
          items:
            $ref: '#/components/schemas/AdvancedCustomProperties'
          x-ms-identifiers: []
        supplementaryFileLocation:
          type: string
          description: Supplementary file location.
        serverlessRuntimeConfig:
          $ref: '#/components/schemas/ServerlessRuntimeConfigProperties'
          description: Serverless config properties
        serverlessRuntimeTags:
          type: array
          description: Serverless Runtime Tags
          items:
            $ref: '#/components/schemas/ServerlessRuntimeTag'
          x-ms-identifiers: []
        serverlessRuntimeUserContextProperties:
          $ref: '#/components/schemas/ServerlessRuntimeUserContextProperties'
          description: Serverless runtime user context properties
      required:
        - serverlessAccountLocation
    InformaticaServerlessRuntimeResource:
      description: A Serverless Runtime environment  resource by Informatica.
      properties:
        properties:
          $ref: '#/components/schemas/InformaticaServerlessRuntimeProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    InformaticaServerlessRuntimeResourceList:
      type: object
      description: A list of serverless runtime resources as fetched using the informatica APIs
      properties:
        informaticaRuntimeResources:
          type: array
          description: List of runtime resources for the fetch all API
          items:
            $ref: '#/components/schemas/InfaRuntimeResourceFetchMetaData'
      required:
        - informaticaRuntimeResources
    InformaticaServerlessRuntimeResourceListResult:
      type: object
      description: The response of a InformaticaServerlessRuntimeResource list operation.
      properties:
        value:
          type: array
          description: The InformaticaServerlessRuntimeResource items on this page
          items:
            $ref: '#/components/schemas/InformaticaServerlessRuntimeResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    InformaticaServerlessRuntimeResourceUpdate:
      description: The template for adding optional properties.
      properties:
        properties:
          $ref: '#/components/schemas/ServerlessRuntimePropertiesCustomUpdate'
          description: Patchable PropertieInformaticaOrganizationPropertiesUpdates of the Organization observability resource
      type: object
    LinkOrganization:
      type: object
      description: Link Organization
      properties:
        token:
          type: string
          description: Link organization token
    MarketplaceDetails:
      type: object
      description: Marketplace details.
      properties:
        marketplaceSubscriptionId:
          type: string
          description: Marketplace Subscription Id
        offerDetails:
          $ref: '#/components/schemas/OfferDetails'
          description: Marketplace offer details.
      required:
        - offerDetails
    MarketplaceDetailsUpdate:
      type: object
      description: Marketplace details
      properties:
        marketplaceSubscriptionId:
          type: string
          description: Marketplace Subscription Id
        offerDetails:
          $ref: '#/components/schemas/OfferDetailsUpdate'
          description: Marketplace offer details.
    NetworkInterfaceConfiguration:
      type: object
      description: Informatica Serverless Runtime Network Interface configurations.
      properties:
        vnetId:
          type: string
          format: arm-id
          description: Virtual network resource id
          x-ms-arm-id-details:
            allowedResources: []
        subnetId:
          type: string
          format: arm-id
          description: Virtual network subnet resource id
          x-ms-arm-id-details:
            allowedResources: []
        vnetResourceGuid:
          type: string
          description: Virtual network resource guid
      required:
        - vnetId
        - subnetId
    NetworkInterfaceConfigurationUpdate:
      type: object
      description: The template for adding optional properties.
      properties:
        vnetId:
          type: string
          format: arm-id
          description: Virtual network resource id
          x-ms-arm-id-details:
            allowedResources: []
        subnetId:
          type: string
          format: arm-id
          description: Virtual network subnet resource id
          x-ms-arm-id-details:
            allowedResources: []
        vnetResourceGuid:
          type: string
          description: Virtual network resource guid
    OfferDetails:
      type: object
      description: Details of the product offering.
      properties:
        publisherId:
          type: string
          description: Id of the product publisher.
          maxLength: 250
        offerId:
          type: string
          description: Id of the product offering.
          maxLength: 250
        planId:
          type: string
          description: Id of the product offer plan.
          maxLength: 250
        planName:
          type: string
          description: Name of the product offer plan.
          maxLength: 250
        termUnit:
          type: string
          description: Offer plan term unit.
          maxLength: 50
        termId:
          type: string
          description: Offer plan term id.
          maxLength: 250
      required:
        - publisherId
        - offerId
        - planId
        - planName
        - termId
    OfferDetailsUpdate:
      type: object
      description: Details of the product offering
      properties:
        publisherId:
          type: string
          description: Id of the product publisher.
          maxLength: 250
        offerId:
          type: string
          description: Id of the product offering.
          maxLength: 250
        planId:
          type: string
          description: Id of the product offer plan.
          maxLength: 250
        planName:
          type: string
          description: Name of the product offer plan.
          maxLength: 250
        termUnit:
          type: string
          description: Offer plan term unit.
          maxLength: 50
        termId:
          type: string
          description: Offer plan term id.
          maxLength: 250
    OrganizationProperties:
      type: object
      description: Properties specific to the Informatica DataManagement Organization resource.
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of the resource.
          readOnly: true
        informaticaProperties:
          $ref: '#/components/schemas/InformaticaProperties'
          description: Informatica Organization properties.
        marketplaceDetails:
          $ref: '#/components/schemas/MarketplaceDetails'
          description: Marketplace details.
        userDetails:
          $ref: '#/components/schemas/UserDetails'
          description: User details
        companyDetails:
          $ref: '#/components/schemas/CompanyDetails'
          description: Company details.
        linkOrganization:
          $ref: '#/components/schemas/LinkOrganization'
          description: Link Organization
    OrganizationPropertiesCustomUpdate:
      type: object
      description: Patchable Properties of the Informatica Organization resource
      properties:
        informaticaOrganizationProperties:
          $ref: '#/components/schemas/InformaticaOrganizationResourceUpdate'
          description: Informatica Organization properties
        marketplaceDetails:
          $ref: '#/components/schemas/MarketplaceDetailsUpdate'
          description: Marketplace details
        userDetails:
          $ref: '#/components/schemas/UserDetailsUpdate'
          description: User details
        companyDetails:
          $ref: '#/components/schemas/CompanyDetailsUpdate'
          description: Company Details
        existingResourceId:
          type: string
          format: arm-id
          description: Existing Resource Id
          x-ms-arm-id-details:
            allowedResources: []
    PlatformType:
      type: string
      description: Various types of the Platform types.
      enum:
        - AZURE
      x-ms-enum:
        name: PlatformType
        modelAsString: true
        values:
          - name: AZURE
            value: AZURE
            description: Azure platform type
    ProvisioningState:
      type: string
      description: Provisioning State of the Organization resource.
      enum:
        - Accepted
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Canceled
        - Deleted
        - NotSpecified
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Accepted
            value: Accepted
            description: Organization resource creation request accepted
          - name: Creating
            value: Creating
            description: Organization resource creation started
          - name: Updating
            value: Updating
            description: Organization resource is being updated
          - name: Deleting
            value: Deleting
            description: Organization resource deletion started
          - name: Succeeded
            value: Succeeded
            description: Organization resource creation successful
          - name: Failed
            value: Failed
            description: Organization resource creation failed
          - name: Canceled
            value: Canceled
            description: Organization resource creation canceled
          - name: Deleted
            value: Deleted
            description: Organization resource is deleted
          - name: NotSpecified
            value: NotSpecified
            description: Organization resource state is unknown
    RegionsMetadata:
      type: object
      description: Informatica Serverless Runtime Regions Metadata
      properties:
        id:
          type: string
          description: Region Id
        name:
          type: string
          description: Region name
    RuntimeType:
      type: string
      description: Various types of the runtime types.
      enum:
        - SERVERLESS
      x-ms-enum:
        name: RuntimeType
        modelAsString: true
        values:
          - name: SERVERLESS
            value: SERVERLESS
            description: Serverless Runtime type
    ServerlessConfigProperties:
      type: object
      description: Metadata Serverless Config Properties
      properties:
        platform:
          $ref: '#/components/schemas/PlatformType'
          description: Platform types
        applicationTypes:
          type: array
          description: List of application types supported by informatica
          items:
            $ref: '#/components/schemas/ApplicationTypeMetadata'
          x-ms-identifiers: []
        computeUnits:
          type: array
          description: The list of compute units with possible array of values
          items:
            $ref: '#/components/schemas/ComputeUnitsMetadata'
          x-ms-identifiers: []
        executionTimeout:
          type: string
          description: Serverless Runtime execution timeout
        regions:
          type: array
          description: List of supported serverless informatica regions
          items:
            $ref: '#/components/schemas/RegionsMetadata'
          x-ms-identifiers: []
    ServerlessMetadataResponse:
      type: object
      description: Serverless Runtime environment Metadata response.
      properties:
        type:
          $ref: '#/components/schemas/RuntimeType'
          description: type of the runtime environment.
        serverlessConfigProperties:
          $ref: '#/components/schemas/ServerlessConfigProperties'
          description: serverless config properties
        serverlessRuntimeConfigProperties:
          $ref: '#/components/schemas/ServerlessRuntimeConfigProperties'
          description: serverless runtime config properties
    ServerlessRuntimeConfigProperties:
      type: object
      description: Serverless Runtime config properties.
      properties:
        cdiConfigProps:
          type: array
          description: The List of Informatica Serverless Runtime CDI Config Properties.
          items:
            $ref: '#/components/schemas/CdiConfigProps'
          x-ms-identifiers: []
        cdieConfigProps:
          type: array
          description: The List of Informatica Serverless Runtime CDIE Config Properties.
          items:
            $ref: '#/components/schemas/CdiConfigProps'
          x-ms-identifiers: []
    ServerlessRuntimeConfigPropertiesUpdate:
      type: object
      description: The template for adding optional properties.
      properties:
        cdiConfigProps:
          type: array
          description: The List of Informatica Serverless Runtime CDI Config Properties.
          items:
            $ref: '#/components/schemas/CdiConfigProps'
          x-ms-identifiers: []
        cdieConfigProps:
          type: array
          description: The List of Informatica Serverless Runtime CDIE Config Properties.
          items:
            $ref: '#/components/schemas/CdiConfigProps'
          x-ms-identifiers: []
    ServerlessRuntimeDependency:
      type: object
      description: Dependency reference for a serverless runtime resource
      properties:
        id:
          type: string
          description: Dependency ID
        appContextId:
          type: string
          description: Application context ID
        path:
          type: string
          description: Dependency path
        documentType:
          type: string
          description: document type
        description:
          type: string
          description: description of Dependency
        lastUpdatedTime:
          type: string
          description: Last Update Time
      required:
        - id
        - appContextId
        - path
        - documentType
        - description
        - lastUpdatedTime
    ServerlessRuntimeNetworkProfile:
      type: object
      description: Informatica Serverless Runtime Network Profile.
      properties:
        networkInterfaceConfiguration:
          $ref: '#/components/schemas/NetworkInterfaceConfiguration'
          description: Network Interface Configuration Profile
      required:
        - networkInterfaceConfiguration
    ServerlessRuntimeNetworkProfileUpdate:
      type: object
      description: Informatica Serverless Network profile properties update.
      properties:
        networkInterfaceConfiguration:
          $ref: '#/components/schemas/NetworkInterfaceConfigurationUpdate'
          description: Network Interface Configuration Profile Update
    ServerlessRuntimePropertiesCustomUpdate:
      type: object
      description: Patchable Properties of the Informatica Serverless Runtime resource
      properties:
        description:
          type: string
          description: description of the serverless runtime.
        platform:
          $ref: '#/components/schemas/PlatformType'
          description: Platform type of the Serverless Runtime.
        applicationType:
          $ref: '#/components/schemas/ApplicationType'
          description: Application type of the Serverless Runtime environment.
        computeUnits:
          type: string
          description: Compute units of the serverless runtime.
        executionTimeout:
          type: string
          description: Serverless Execution timeout
        serverlessAccountLocation:
          type: string
          description: Serverless account creation location
        serverlessRuntimeNetworkProfile:
          $ref: '#/components/schemas/ServerlessRuntimeNetworkProfileUpdate'
          description: Informatica Serverless Network profile properties.
        advancedCustomProperties:
          type: array
          description: String KV pairs indicating Advanced custom properties.
          items:
            $ref: '#/components/schemas/AdvancedCustomProperties'
          x-ms-identifiers: []
        supplementaryFileLocation:
          type: string
          description: Supplementary file location.
        serverlessRuntimeConfig:
          $ref: '#/components/schemas/ServerlessRuntimeConfigPropertiesUpdate'
          description: Serverless config properties
        serverlessRuntimeTags:
          type: array
          description: Serverless Runtime Tags
          items:
            $ref: '#/components/schemas/ServerlessRuntimeTag'
          x-ms-identifiers: []
        serverlessRuntimeUserContextProperties:
          $ref: '#/components/schemas/ServerlessRuntimeUserContextPropertiesUpdate'
          description: Serverless runtime user context properties
    ServerlessRuntimeTag:
      type: object
      description: Serverless Runtime Tags
      properties:
        name:
          type: string
          description: The name (also known as the key) of the tag.
        value:
          type: string
          description: The value of the tag.
    ServerlessRuntimeUserContextProperties:
      type: object
      description: Informatica Serverless Runtime User context properties
      properties:
        userContextToken:
          type: string
          description: User context token for OBO flow.
      required:
        - userContextToken
    ServerlessRuntimeUserContextPropertiesUpdate:
      type: object
      description: The template for adding optional properties.
      properties:
        userContextToken:
          type: string
          description: User context token for OBO flow.
    UserDetails:
      type: object
      description: User Info of Informatica Organization resource.
      properties:
        firstName:
          type: string
          description: User first name.
          maxLength: 50
        lastName:
          type: string
          description: User last name.
          maxLength: 50
        emailAddress:
          $ref: '#/components/schemas/email'
          description: User email address.
        upn:
          type: string
          description: UPN of user
        phoneNumber:
          type: string
          description: Phone number of the user used by for contacting them if needed
          maxLength: 40
    UserDetailsUpdate:
      type: object
      description: User Info of Informatica Organization resource
      properties:
        firstName:
          type: string
          description: User first name.
          maxLength: 50
        lastName:
          type: string
          description: User last name.
          maxLength: 50
        emailAddress:
          $ref: '#/components/schemas/email'
          description: User email address.
        upn:
          type: string
          description: UPN of user
        phoneNumber:
          type: string
          description: Phone number of the user used by for contacting them if needed
          maxLength: 40
    email:
      type: string
      description: Reusable representation of an email address.
      pattern: ^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$
  x-stackQL-resources:
    operations:
      id: azure_isv.informatica.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Informatica.DataManagement~1operations?api-version=2024-05-08/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    organizations:
      id: azure_isv.informatica.organizations
      name: organizations
      title: organizations
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Informatica.DataManagement~1organizations?api-version=2024-05-08/get'
            operationId: Organizations_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaOrganizationResourceListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations?api-version=2024-05-08/get'
            operationId: Organizations_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaOrganizationResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}?api-version=2024-05-08/get'
            operationId: Organizations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaOrganizationResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}?api-version=2024-05-08/put'
            operationId: Organizations_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaOrganizationResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}?api-version=2024-05-08/patch'
            operationId: Organizations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaOrganizationResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}?api-version=2024-05-08/delete'
            operationId: Organizations_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations/methods/get'
          - $ref: '#/components/x-stackQL-resources/organizations/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/organizations/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/organizations/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/organizations/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/organizations/methods/delete'
    organizations_all_serverless_runtimes:
      id: azure_isv.informatica.organizations_all_serverless_runtimes
      name: organizations_all_serverless_runtimes
      title: organizations_all_serverless_runtimes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1getAllServerlessRuntimes?api-version=2024-05-08/post'
            operationId: OrganizationsAllServerlessRuntimes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaServerlessRuntimeResourceList
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations_all_serverless_runtimes/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    organizations_serverless_metadata:
      id: azure_isv.informatica.organizations_serverless_metadata
      name: organizations_serverless_metadata
      title: organizations_serverless_metadata
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1getServerlessMetadata?api-version=2024-05-08/post'
            operationId: OrganizationsServerlessMetadata_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerlessMetadataResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations_serverless_metadata/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    serverless_runtimes_by_informatica_organization_resources:
      id: azure_isv.informatica.serverless_runtimes_by_informatica_organization_resources
      name: serverless_runtimes_by_informatica_organization_resources
      title: serverless_runtimes_by_informatica_organization_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes?api-version=2024-05-08/get'
            operationId: ServerlessRuntimesByInformaticaOrganizationResource_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaServerlessRuntimeResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/serverless_runtimes_by_informatica_organization_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    serverless_runtimes:
      id: azure_isv.informatica.serverless_runtimes
      name: serverless_runtimes
      title: serverless_runtimes
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes~1{serverlessRuntimeName}?api-version=2024-05-08/get'
            operationId: ServerlessRuntimes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaServerlessRuntimeResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes~1{serverlessRuntimeName}?api-version=2024-05-08/put'
            operationId: ServerlessRuntimes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaServerlessRuntimeResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes~1{serverlessRuntimeName}?api-version=2024-05-08/patch'
            operationId: ServerlessRuntimes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaServerlessRuntimeResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes~1{serverlessRuntimeName}?api-version=2024-05-08/delete'
            operationId: ServerlessRuntimes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        check_dependencies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes~1{serverlessRuntimeName}~1checkDependencies?api-version=2024-05-08/post'
            operationId: ServerlessRuntimes_CheckDependencies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckDependenciesResponse
        serverless_resource_by_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes~1{serverlessRuntimeName}~1serverlessResourceById?api-version=2024-05-08/post'
            operationId: ServerlessRuntimes_ServerlessResourceById
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InformaticaServerlessRuntimeResource
        start_failed_serverless_runtime:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Informatica.DataManagement~1organizations~1{organizationName}~1serverlessRuntimes~1{serverlessRuntimeName}~1startFailedServerlessRuntime?api-version=2024-05-08/post'
            operationId: ServerlessRuntimes_StartFailedServerlessRuntime
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/serverless_runtimes/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/serverless_runtimes/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/serverless_runtimes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/serverless_runtimes/methods/delete'
    vw_organizations:
      id: azure_isv.informatica.vw_organizations
      name: vw_organizations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.informaticaProperties') as "informatica_properties",
              JSON_EXTRACT(properties, '$.marketplaceDetails') as "marketplace_details",
              JSON_EXTRACT(properties, '$.userDetails') as "user_details",
              JSON_EXTRACT(properties, '$.companyDetails') as "company_details",
              JSON_EXTRACT(properties, '$.linkOrganization') as "link_organization",
              subscriptionId,
              resourceGroupName,
              organizationName
              FROM azure_isv.informatica.organizations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.informaticaProperties') as "informatica_properties",
                json_extract_path_text(properties, '$.marketplaceDetails') as "marketplace_details",
                json_extract_path_text(properties, '$.userDetails') as "user_details",
                json_extract_path_text(properties, '$.companyDetails') as "company_details",
                json_extract_path_text(properties, '$.linkOrganization') as "link_organization",
                subscriptionId,
                resourceGroupName,
                organizationName
                FROM azure_isv.informatica.organizations
                WHERE subscriptionId = 'replace-me';
    vw_serverless_runtimes:
      id: azure_isv.informatica.vw_serverless_runtimes
      name: vw_serverless_runtimes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.platform') as "platform",
              JSON_EXTRACT(properties, '$.applicationType') as "application_type",
              JSON_EXTRACT(properties, '$.computeUnits') as "compute_units",
              JSON_EXTRACT(properties, '$.executionTimeout') as "execution_timeout",
              JSON_EXTRACT(properties, '$.serverlessAccountLocation') as "serverless_account_location",
              JSON_EXTRACT(properties, '$.serverlessRuntimeNetworkProfile') as "serverless_runtime_network_profile",
              JSON_EXTRACT(properties, '$.advancedCustomProperties') as "advanced_custom_properties",
              JSON_EXTRACT(properties, '$.supplementaryFileLocation') as "supplementary_file_location",
              JSON_EXTRACT(properties, '$.serverlessRuntimeConfig') as "serverless_runtime_config",
              JSON_EXTRACT(properties, '$.serverlessRuntimeTags') as "serverless_runtime_tags",
              JSON_EXTRACT(properties, '$.serverlessRuntimeUserContextProperties') as "serverless_runtime_user_context_properties",
              subscriptionId,
              resourceGroupName,
              organizationName,
              serverlessRuntimeName
              FROM azure_isv.informatica.serverless_runtimes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND organizationName = 'replace-me' AND serverlessRuntimeName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.platform') as "platform",
                json_extract_path_text(properties, '$.applicationType') as "application_type",
                json_extract_path_text(properties, '$.computeUnits') as "compute_units",
                json_extract_path_text(properties, '$.executionTimeout') as "execution_timeout",
                json_extract_path_text(properties, '$.serverlessAccountLocation') as "serverless_account_location",
                json_extract_path_text(properties, '$.serverlessRuntimeNetworkProfile') as "serverless_runtime_network_profile",
                json_extract_path_text(properties, '$.advancedCustomProperties') as "advanced_custom_properties",
                json_extract_path_text(properties, '$.supplementaryFileLocation') as "supplementary_file_location",
                json_extract_path_text(properties, '$.serverlessRuntimeConfig') as "serverless_runtime_config",
                json_extract_path_text(properties, '$.serverlessRuntimeTags') as "serverless_runtime_tags",
                json_extract_path_text(properties, '$.serverlessRuntimeUserContextProperties') as "serverless_runtime_user_context_properties",
                subscriptionId,
                resourceGroupName,
                organizationName,
                serverlessRuntimeName
                FROM azure_isv.informatica.serverless_runtimes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND organizationName = 'replace-me' AND serverlessRuntimeName = 'replace-me';
paths:
  /providers/Informatica.DataManagement/operations?api-version=2024-05-08:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Informatica.DataManagement/organizations?api-version=2024-05-08:
    get:
      operationId: Organizations_ListBySubscription
      tags:
        - Organizations
      description: List InformaticaOrganizationResource resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaOrganizationResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations?api-version=2024-05-08:
    get:
      operationId: Organizations_ListByResourceGroup
      tags:
        - Organizations
      description: List InformaticaOrganizationResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaOrganizationResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}?api-version=2024-05-08:
    get:
      operationId: Organizations_Get
      tags:
        - Organizations
      description: Get a InformaticaOrganizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaOrganizationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Organizations_CreateOrUpdate
      tags:
        - Organizations
      description: Create a InformaticaOrganizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformaticaOrganizationResource'
      responses:
        '200':
          description: Resource 'InformaticaOrganizationResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaOrganizationResource'
        '201':
          description: Resource 'InformaticaOrganizationResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaOrganizationResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Organizations_Update
      tags:
        - Organizations
      description: Update a InformaticaOrganizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformaticaOrganizationResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaOrganizationResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Organizations_Delete
      tags:
        - Organizations
      description: Delete a InformaticaOrganizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/getAllServerlessRuntimes?api-version=2024-05-08:
    post:
      operationId: OrganizationsAllServerlessRuntimes_Get
      tags:
        - Organizations
      description: Gets all serverless runtime resources in a given informatica organization resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaServerlessRuntimeResourceList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Organizations_GetAllServerlessRuntimes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/getServerlessMetadata?api-version=2024-05-08:
    post:
      operationId: OrganizationsServerlessMetadata_Get
      tags:
        - Organizations
      description: Gets Metadata of the serverless runtime environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessMetadataResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Organizations_GetServerlessMetadata
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/serverlessRuntimes?api-version=2024-05-08:
    get:
      operationId: ServerlessRuntimesByInformaticaOrganizationResource_List
      tags:
        - ServerlessRuntimes
      description: List InformaticaServerlessRuntimeResource resources by InformaticaOrganizationResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaServerlessRuntimeResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ServerlessRuntimes_ListByInformaticaOrganizationResource
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/serverlessRuntimes/{serverlessRuntimeName}?api-version=2024-05-08:
    get:
      operationId: ServerlessRuntimes_Get
      tags:
        - ServerlessRuntimes
      description: Get a InformaticaServerlessRuntimeResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
        - name: serverlessRuntimeName
          in: path
          description: Name of the Serverless Runtime resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaServerlessRuntimeResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ServerlessRuntimes_CreateOrUpdate
      tags:
        - ServerlessRuntimes
      description: Create a InformaticaServerlessRuntimeResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
        - name: serverlessRuntimeName
          in: path
          description: Name of the Serverless Runtime resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformaticaServerlessRuntimeResource'
      responses:
        '200':
          description: Resource 'InformaticaServerlessRuntimeResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaServerlessRuntimeResource'
        '201':
          description: Resource 'InformaticaServerlessRuntimeResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaServerlessRuntimeResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: ServerlessRuntimes_Update
      tags:
        - ServerlessRuntimes
      description: Update a InformaticaServerlessRuntimeResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
        - name: serverlessRuntimeName
          in: path
          description: Name of the Serverless Runtime resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformaticaServerlessRuntimeResourceUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaServerlessRuntimeResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ServerlessRuntimes_Delete
      tags:
        - ServerlessRuntimes
      description: Delete a InformaticaServerlessRuntimeResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
        - name: serverlessRuntimeName
          in: path
          description: Name of the Serverless Runtime resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/serverlessRuntimes/{serverlessRuntimeName}/checkDependencies?api-version=2024-05-08:
    post:
      operationId: ServerlessRuntimes_CheckDependencies
      tags:
        - ServerlessRuntimes
      description: Checks all dependencies for a serverless runtime resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
        - name: serverlessRuntimeName
          in: path
          description: Name of the Serverless Runtime resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDependenciesResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/serverlessRuntimes/{serverlessRuntimeName}/serverlessResourceById?api-version=2024-05-08:
    post:
      operationId: ServerlessRuntimes_ServerlessResourceById
      tags:
        - ServerlessRuntimes
      description: Returns a serverless runtime resource by ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
        - name: serverlessRuntimeName
          in: path
          description: Name of the Serverless Runtime resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformaticaServerlessRuntimeResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations/{organizationName}/serverlessRuntimes/{serverlessRuntimeName}/startFailedServerlessRuntime?api-version=2024-05-08:
    post:
      operationId: ServerlessRuntimes_StartFailedServerlessRuntime
      tags:
        - ServerlessRuntimes
      description: Starts a failed runtime resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: organizationName
          in: path
          description: Name of the Organizations resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
        - name: serverlessRuntimeName
          in: path
          description: Name of the Serverless Runtime resource
          required: true
          schema:
            pattern: ^[a-zA-Z0-9_-]*$
            type: string
      responses:
        '204':
          description: Operation completed successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
