openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: NewRelic Observability (Azure Native ISV Service)
  description: Get end-to-end cloud observability to analyze and troubleshoot performance of applications, infrastructure, logs, real-user monitoring and more.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: query
      description: Location for NewRelic.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    MonitorNameParameter:
      name: monitorName
      in: path
      description: Monitor resource name
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^.*$
        type: string
    AccountIdParameter:
      name: accountId
      in: query
      description: Account Id.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    OrganizationIdParameter:
      name: organizationId
      in: query
      description: Organization Id.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    UserEmailParameter:
      name: userEmail
      in: query
      description: User Email.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AccountCreationSource:
      type: string
      description: Source of Account creation
      enum:
        - LIFTR
        - NEWRELIC
      x-ms-enum:
        name: AccountCreationSource
        modelAsString: true
        values:
          - name: LIFTR
            value: LIFTR
            description: Account is created from LIFTR
          - name: NEWRELIC
            value: NEWRELIC
            description: Account is created from NEWRELIC
    AccountIdParameter:
      type: object
      properties: {}
      description: Account Id parameter
    AccountInfo:
      type: object
      properties:
        accountId:
          type: string
          description: Account id
        ingestionKey:
          $ref: '#/components/schemas/SecureString'
          description: ingestion key of account
        region:
          type: string
          description: Region where New Relic account is present
      description: Account Info of the NewRelic account
    AccountProperties:
      type: object
      properties:
        organizationId:
          type: string
          description: organization id
        accountId:
          type: string
          description: account id
        accountName:
          type: string
          description: account name
        region:
          type: string
          description: Region where New Relic account is present
      description: List of all the New relic accounts for the given user
    AccountsListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccountResource'
          x-cadl-name: AccountResource[]
          description: The AccountResource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: Response of get all accounts Operation.
      required:
        - value
    BillingInfoResponse:
      description: Marketplace Subscription and Organization details to which resource gets billed into.
      type: object
      properties:
        marketplaceSaasInfo:
          description: Marketplace Subscription details
          $ref: '#/components/schemas/MarketplaceSaaSInfo'
        partnerBillingEntity:
          description: 'Partner Billing Entity details: Organization Info'
          $ref: '#/components/schemas/PartnerBillingEntity'
    MarketplaceSaaSInfo:
      description: Marketplace SAAS Info of the resource.
      type: object
      properties:
        marketplaceSubscriptionId:
          description: Marketplace Subscription Id. This is a GUID-formatted string.
          type: string
        marketplaceSubscriptionName:
          description: 'Marketplace Subscription Details: SAAS Name'
          type: string
        marketplaceResourceId:
          description: 'Marketplace Subscription Details: Resource URI'
          type: string
        marketplaceStatus:
          description: 'Marketplace Subscription Details: SaaS Subscription Status'
          type: string
        billedAzureSubscriptionId:
          description: The Azure Subscription ID to which the Marketplace Subscription belongs and gets billed into.
          type: string
        publisherId:
          description: Publisher Id of the Marketplace offer.
          type: string
        offerId:
          description: Offer Id of the Marketplace offer,
          type: string
    PartnerBillingEntity:
      description: Partner Billing details associated with the resource.
      type: object
      properties:
        organizationId:
          description: The New Relic Organization Id.
          type: string
        organizationName:
          description: The New Relic Organization Name.
          type: string
    ConnectedPartnerResourceProperties:
      description: Connected Partner Resource Properties
      type: object
      properties:
        accountName:
          description: NewRelic account name
          type: string
        accountId:
          description: NewRelic Account Id
          type: string
        azureResourceId:
          description: The azure resource Id of the deployment.
          type: string
        location:
          description: The location of the deployment.
          type: string
    ConnectedPartnerResourcesListFormat:
      description: Connected Partner Resources List Format
      properties:
        properties:
          $ref: '#/components/schemas/ConnectedPartnerResourceProperties'
      type: object
    ConnectedPartnerResourcesListResponse:
      description: ' List of all active newrelic deployments.'
      type: object
      properties:
        value:
          description: Results of a list operation.
          type: array
          items:
            $ref: '#/components/schemas/ConnectedPartnerResourcesListFormat'
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    AccountResource:
      description: The details of a account resource.
      properties:
        properties:
          $ref: '#/components/schemas/AccountProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    AppServiceInfo:
      type: object
      properties:
        azureResourceId:
          type: string
          description: Azure App service resource ID
        agentVersion:
          type: string
          description: Version of the NewRelic agent installed on the App service.
        agentStatus:
          type: string
          description: Status of the NewRelic agent installed on the App service.
      description: Details of VM Resource having NewRelic OneAgent installed
    AppServicesGetParameter:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/AppServicesGetRequest'
          description: The details of the app services get request.
      description: App services Get Parameter specification.
      required:
        - request
    SwitchBillingParameter:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/SwitchBillingRequest'
          description: The details of the switch billing request.
      description: Switch Billing Parameter specification.
      required:
        - request
    SwitchBillingRequest:
      type: object
      properties:
        azureResourceId:
          type: string
          description: Azure resource Id
        organizationId:
          type: string
          description: Organization id
        planData:
          $ref: '#/components/schemas/PlanData'
          description: Plan details
        userEmail:
          $ref: '#/components/schemas/email'
          description: User Email
      description: Request of a switch billing Operation.
      required:
        - userEmail
    AppServicesGetRequest:
      type: object
      properties:
        azureResourceIds:
          type: array
          items:
            type: string
          x-cadl-name: string[]
          description: Azure resource IDs
        userEmail:
          $ref: '#/components/schemas/email'
          description: User Email
      description: Request of a app services get Operation.
      required:
        - userEmail
    AppServicesListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AppServiceInfo'
          x-ms-identifiers:
            - azureResourceId
          x-cadl-name: AppServiceInfo[]
          description: The AppServiceInfo items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: Response of a list app services Operation.
      required:
        - value
    BillingSource:
      type: string
      description: Billing source
      enum:
        - AZURE
        - NEWRELIC
      x-ms-enum:
        name: BillingSource
        modelAsString: true
        values:
          - name: AZURE
            value: AZURE
            description: Billing source is Azure
          - name: NEWRELIC
            value: NEWRELIC
    FilteringTag:
      type: object
      properties:
        name:
          type: string
          description: The name (also known as the key) of the tag.
        value:
          type: string
          description: The value of the tag.
        action:
          $ref: '#/components/schemas/TagAction'
          description: Valid actions for a filtering tag. Exclusion takes priority over inclusion.
      description: The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
    HostsGetParameter:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/HostsGetRequest'
          description: The details of the Hosts get request.
      description: Host Get Parameter specification.
      required:
        - request
    HostsGetRequest:
      type: object
      properties:
        vmIds:
          type: array
          items:
            type: string
          x-cadl-name: string[]
          description: VM resource IDs
        userEmail:
          $ref: '#/components/schemas/email'
          description: User Email
      description: Request of a Hosts get Operation.
      required:
        - userEmail
    LiftrResourceCategories:
      type: string
      description: Liftr Resource category.
      enum:
        - Unknown
        - MonitorLogs
      x-ms-enum:
        name: LiftrResourceCategories
        modelAsString: true
    LocationParameter:
      type: object
      properties: {}
      description: Location for NewRelic resource
    LogRules:
      type: object
      properties:
        sendAadLogs:
          $ref: '#/components/schemas/SendAadLogsStatus'
          description: Flag specifying if AAD logs should be sent for the Monitor resource.
        sendSubscriptionLogs:
          $ref: '#/components/schemas/SendSubscriptionLogsStatus'
          description: Flag specifying if subscription logs should be sent for the Monitor resource.
        sendActivityLogs:
          $ref: '#/components/schemas/SendActivityLogsStatus'
          description: Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
        filteringTags:
          type: array
          items:
            $ref: '#/components/schemas/FilteringTag'
          x-ms-identifiers: []
          x-cadl-name: FilteringTag[]
          description: |-
            List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured.
            If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
      description: Set of rules for sending logs for the Monitor resource.
    MarketplaceSubscriptionStatus:
      type: string
      description: Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.
      enum:
        - Active
        - Suspended
      x-ms-enum:
        name: MarketplaceSubscriptionStatus
        modelAsString: true
        values:
          - name: Active
            value: Active
            description: monitoring is enabled
          - name: Suspended
            value: Suspended
            description: monitoring is disabled
    MetricRules:
      type: object
      properties:
        sendMetrics:
          $ref: '#/components/schemas/SendMetricsStatus'
          description: Flag specifying if metrics should be sent for the Monitor resource.
        filteringTags:
          type: array
          items:
            $ref: '#/components/schemas/FilteringTag'
          x-ms-identifiers: []
          x-cadl-name: FilteringTag[]
          description: List of filtering tags to be used for capturing metrics.
        userEmail:
          $ref: '#/components/schemas/email'
          description: User Email
      description: Set of rules for sending metrics for the Monitor resource.
    MetricsRequest:
      type: object
      properties:
        userEmail:
          $ref: '#/components/schemas/email'
          description: User Email
      description: Request of get metrics Operation.
      required:
        - userEmail
    MetricsRequestParameter:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/MetricsRequest'
          description: The details of the get metrics status request.
      description: Get Metrics Status Parameter specification.
      required:
        - request
    MetricsStatusRequest:
      type: object
      properties:
        azureResourceIds:
          type: array
          items:
            type: string
          x-cadl-name: string[]
          description: Azure resource IDs
        userEmail:
          $ref: '#/components/schemas/email'
          description: User Email
      description: Request of get metrics status Operation.
      required:
        - userEmail
    MetricsStatusRequestParameter:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/MetricsStatusRequest'
          description: The details of the get metrics status request.
      description: Get Metrics Status Parameter specification.
      required:
        - request
    MetricsStatusResponse:
      type: object
      properties:
        azureResourceIds:
          type: array
          items:
            type: string
          x-cadl-name: string[]
          description: Azure resource IDs
      description: Response of get metrics status Operation.
    MonitorProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of the resource
          readOnly: true
        monitoringStatus:
          $ref: '#/components/schemas/MonitoringStatus'
          description: MonitoringStatus of the resource
          readOnly: true
        marketplaceSubscriptionStatus:
          $ref: '#/components/schemas/MarketplaceSubscriptionStatus'
          description: NewRelic Organization properties of the resource
          readOnly: true
        marketplaceSubscriptionId:
          type: string
          description: Marketplace Subscription Id
          readOnly: true
        newRelicAccountProperties:
          $ref: '#/components/schemas/NewRelicAccountProperties'
          description: MarketplaceSubscriptionStatus of the resource
        userInfo:
          $ref: '#/components/schemas/UserInfo'
          description: User Info
        planData:
          $ref: '#/components/schemas/PlanData'
          description: Plan details
        liftrResourceCategory:
          $ref: '#/components/schemas/LiftrResourceCategories'
          description: Liftr resource category
          readOnly: true
        liftrResourcePreference:
          type: integer
          format: int32
          description: Liftr resource preference. The priority of the resource.
          readOnly: true
        orgCreationSource:
          $ref: '#/components/schemas/OrgCreationSource'
          description: Source of org creation
        accountCreationSource:
          $ref: '#/components/schemas/AccountCreationSource'
          description: Source of account creation
        subscriptionState:
          description: State of the Azure Subscription containing the monitor resource
          type: string
        saaSAzureSubscriptionStatus:
          description: Status of Azure Subscription where Marketplace SaaS is located.
          type: string
      description: Properties specific to the NewRelic Monitor resource
    MonitoredResource:
      type: object
      properties:
        id:
          type: string
          description: The ARM id of the resource.
        sendingMetrics:
          $ref: '#/components/schemas/SendingMetricsStatus'
          description: Flag indicating if resource is sending metrics to NewRelic.
        reasonForMetricsStatus:
          type: string
          description: Reason for why the resource is sending metrics (or why it is not sending).
        sendingLogs:
          $ref: '#/components/schemas/SendingLogsStatus'
          description: Flag indicating if resource is sending logs to NewRelic.
        reasonForLogsStatus:
          type: string
          description: Reason for why the resource is sending logs (or why it is not sending).
      description: Details of resource being monitored by NewRelic monitor resource
    MonitoredResourceListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MonitoredResource'
          x-cadl-name: MonitoredResource[]
          description: The MonitoredResource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: List of all the resources being monitored by NewRelic monitor resource
      required:
        - value
    MonitoringStatus:
      type: string
      description: Flag specifying if the resource monitoring is enabled or disabled.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: MonitoringStatus
        modelAsString: true
        values:
          - name: Enabled
            value: Enabled
            description: monitoring is enabled
          - name: Disabled
            value: Disabled
            description: monitoring is disabled
    MonitoringTagRulesProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of the resource
          readOnly: true
        logRules:
          $ref: '#/components/schemas/LogRules'
          description: Set of rules for sending logs for the Monitor resource.
        metricRules:
          $ref: '#/components/schemas/MetricRules'
          description: Set of rules for sending metrics for the Monitor resource.
      description: The resource-specific properties for this resource.
    NewRelicAccountProperties:
      type: object
      properties:
        userId:
          type: string
          description: User id
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
          description: NewRelic Account Information
        organizationInfo:
          $ref: '#/components/schemas/OrganizationInfo'
          description: NewRelic Organization Information
        singleSignOnProperties:
          $ref: '#/components/schemas/NewRelicSingleSignOnProperties'
          description: date when plan was applied
      description: Properties of the NewRelic account
    NewRelicMonitorResource:
      description: A Monitor Resource by NewRelic
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/MonitorProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    NewRelicMonitorResourceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/NewRelicMonitorResource'
          x-cadl-name: NewRelicMonitorResource[]
          description: The NewRelicMonitorResource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: The response of a NewRelicMonitorResource list operation.
      required:
        - value
    NewRelicMonitorResourceUpdate:
      description: The type used for update operations of the NewRelicMonitorResource.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-cadl-name: Record<string>
          description: Resource tags.
        properties:
          $ref: '#/components/schemas/NewRelicMonitorResourceUpdateProperties'
          x-ms-client-flatten: true
      type: object
    NewRelicMonitorResourceUpdateProperties:
      type: object
      properties:
        newRelicAccountProperties:
          $ref: '#/components/schemas/NewRelicAccountProperties'
          description: MarketplaceSubscriptionStatus of the resource
        userInfo:
          $ref: '#/components/schemas/UserInfo'
          description: User Info
        planData:
          $ref: '#/components/schemas/PlanData'
          description: Plan details
        orgCreationSource:
          $ref: '#/components/schemas/OrgCreationSource'
          description: Source of org creation
        accountCreationSource:
          $ref: '#/components/schemas/AccountCreationSource'
          description: Source of account creation
      description: The updatable properties of the NewRelicMonitorResource.
    NewRelicSingleSignOnProperties:
      type: object
      properties:
        singleSignOnState:
          $ref: '#/components/schemas/SingleSignOnStates'
          description: Single sign-on state
        enterpriseAppId:
          type: string
          description: The Id of the Enterprise App used for Single sign-on.
        singleSignOnUrl:
          type: string
          description: The login URL specific to this NewRelic Organization
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state
      description: Single sign on Info of the NewRelic account
    OrgCreationSource:
      type: string
      description: Source of Org creation
      enum:
        - LIFTR
        - NEWRELIC
      x-ms-enum:
        name: OrgCreationSource
        modelAsString: true
        values:
          - name: LIFTR
            value: LIFTR
            description: Org is created from LIFTR
          - name: NEWRELIC
            value: NEWRELIC
            description: Org is created from NEWRELIC
    OrganizationIdParameter:
      type: object
      properties: {}
      description: Organization Id parameter
    OrganizationInfo:
      type: object
      properties:
        organizationId:
          type: string
          description: Organization id
      description: Organization Info of the NewRelic account
    OrganizationProperties:
      type: object
      properties:
        organizationId:
          type: string
          description: organization id
        organizationName:
          type: string
          description: organization name
        billingSource:
          $ref: '#/components/schemas/BillingSource'
          description: Billing source
      description: Details of Organizations
    OrganizationsListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationResource'
          x-cadl-name: OrganizationResource[]
          description: The OrganizationResource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: Response of get all organizations Operation.
      required:
        - value
    OrganizationResource:
      description: The details of a Organization resource.
      properties:
        properties:
          $ref: '#/components/schemas/OrganizationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    PlanData:
      type: object
      properties:
        usageType:
          $ref: '#/components/schemas/UsageType'
          description: Different usage type like PAYG/COMMITTED. this could be enum
        billingCycle:
          type: string
          description: Different billing cycles like Monthly/Weekly.
        planDetails:
          type: string
          description: plan id as published by NewRelic
        effectiveDate:
          type: string
          format: date-time
          description: date when plan was applied
      description: Plan data of NewRelic Monitor resource
    PlanDataResource:
      description: The details of a PlanData resource.
      properties:
        properties:
          $ref: '#/components/schemas/PlanDataProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    PlanDataListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/PlanDataResource'
          x-cadl-name: PlanDataResource[]
          description: The PlanDataResource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: Response of get all plan data Operation.
      required:
        - value
    PlanDataProperties:
      type: object
      properties:
        planData:
          $ref: '#/components/schemas/PlanData'
          description: Plan details
        orgCreationSource:
          $ref: '#/components/schemas/OrgCreationSource'
          description: Source of org creation
        accountCreationSource:
          $ref: '#/components/schemas/AccountCreationSource'
          description: Source of account creation
      description: Plan details
    MonitoredSubscription:
      description: The list of subscriptions and it's monitoring status by current NewRelic monitor.
      type: object
      properties:
        subscriptionId:
          description: The subscriptionId to be monitored.
          required:
            - subscriptionId
          type: string
        status:
          description: The state of monitoring.
          enum:
            - InProgress
            - Active
            - Failed
            - Deleting
          x-ms-enum:
            modelAsString: true
            name: Status
          type: string
        error:
          description: The reason of not monitoring the subscription.
          type: string
        tagRules:
          $ref: '#/components/schemas/MonitoringTagRulesProperties'
    SubscriptionList:
      description: The request to update subscriptions needed to be monitored by the NewRelic monitor resource.
      type: object
      properties:
        patchOperation:
          description: The operation for the patch on the resource.
          enum:
            - AddBegin
            - AddComplete
            - DeleteBegin
            - DeleteComplete
            - Active
          type: string
          x-ms-enum:
            modelAsString: true
            name: PatchOperation
          x-ms-mutability:
            - create
            - update
        monitoredSubscriptionList:
          description: List of subscriptions and the state of the monitoring.
          type: array
          items:
            $ref: '#/components/schemas/MonitoredSubscription'
          x-ms-identifiers: []
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of the resource
          readOnly: true
    MonitoredSubscriptionProperties:
      description: The request to update subscriptions needed to be monitored by the NewRelic monitor resource.
      x-ms-azure-resource: true
      properties:
        name:
          description: Name of the monitored subscription resource.
          type: string
          readOnly: true
        id:
          description: The id of the monitored subscription resource.
          type: string
          readOnly: true
        type:
          description: The type of the monitored subscription resource.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/SubscriptionList'
      type: object
    MonitoredSubscriptionPropertiesList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MonitoredSubscriptionProperties'
        nextLink:
          type: string
          description: The link to the next page of items
    LinkedResource:
      description: The definition of a linked resource.
      type: object
      properties:
        id:
          description: The ARM id of the linked resource.
          type: string
    LinkedResourceListResponse:
      description: Response of a list operation.
      type: object
      properties:
        value:
          description: Results of a list operation.
          type: array
          items:
            $ref: '#/components/schemas/LinkedResource'
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    ProvisioningState:
      type: string
      description: Provisioning State of the Monitor resource
      enum:
        - Accepted
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Canceled
        - Deleted
        - NotSpecified
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Accepted
            value: Accepted
            description: Monitor resource creation request accepted
          - name: Creating
            value: Creating
            description: Monitor resource creation started
          - name: Updating
            value: Updating
            description: Monitor resource is being updated
          - name: Deleting
            value: Deleting
            description: Monitor resource deletion started
          - name: Succeeded
            value: Succeeded
            description: Monitor resource creation successful
          - name: Failed
            value: Failed
            description: Monitor resource creation failed
          - name: Canceled
            value: Canceled
            description: Monitor resource creation canceled
          - name: Deleted
            value: Deleted
            description: Monitor resource is deleted
          - name: NotSpecified
            value: NotSpecified
            description: Monitor resource state is unknown
    ResubscribeProperties:
      description: Resubscribe Properties
      type: object
      properties:
        planId:
          description: Newly selected plan Id to create the new Marketplace subscription for Resubscribe
          type: string
        termId:
          description: Newly selected term Id to create the new Marketplace subscription for Resubscribe
          type: string
        subscriptionId:
          description: Newly selected Azure Subscription Id in which the new Marketplace subscription will be created for Resubscribe
          type: string
        resourceGroup:
          description: Newly selected Azure resource group in which the new Marketplace subscription will be created for Resubscribe
          type: string
        organizationId:
          description: Organization Id of the NewRelic Organization that needs to be resubscribed
          type: string
        publisherId:
          description: Publisher Id of the NewRelic offer that needs to be resubscribed
          type: string
        offerId:
          description: Offer Id of the NewRelic offer that needs to be resubscribed
          type: string
    SecureString:
      type: string
      description: Credential string.
      format: password
      x-ms-secret: true
    SendAadLogsStatus:
      type: string
      description: Indicates whether AAD logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendAadLogsStatus
        modelAsString: true
    SendActivityLogsStatus:
      type: string
      description: Indicates whether activity logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendActivityLogsStatus
        modelAsString: true
    SendMetricsStatus:
      type: string
      description: Indicates whether metrics are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendMetricsStatus
        modelAsString: true
    SendSubscriptionLogsStatus:
      type: string
      description: Indicates whether subscription logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendSubscriptionLogsStatus
        modelAsString: true
    SendingLogsStatus:
      type: string
      description: Indicates whether logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendingLogsStatus
        modelAsString: true
    SendingMetricsStatus:
      type: string
      description: Indicates whether metrics are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendingMetricsStatus
        modelAsString: true
    SingleSignOnStates:
      type: string
      description: Various states of the SSO resource
      enum:
        - Initial
        - Enable
        - Disable
        - Existing
      x-ms-enum:
        name: SingleSignOnStates
        modelAsString: true
    TagAction:
      type: string
      description: Valid actions for a filtering tag. Exclusion takes priority over inclusion.
      enum:
        - Include
        - Exclude
      x-ms-enum:
        name: TagAction
        modelAsString: true
    TagRule:
      description: A tag rule belonging to NewRelic account
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/MonitoringTagRulesProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    TagRuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TagRule'
          x-cadl-name: TagRule[]
          description: The TagRule items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: The response of a TagRule list operation.
      required:
        - value
    TagRuleUpdate:
      description: The type used for update operations of the TagRule.
      properties:
        properties:
          $ref: '#/components/schemas/TagRuleUpdateProperties'
          x-ms-client-flatten: true
      type: object
    TagRuleUpdateProperties:
      type: object
      properties:
        logRules:
          $ref: '#/components/schemas/LogRules'
          description: Set of rules for sending logs for the Monitor resource.
        metricRules:
          $ref: '#/components/schemas/MetricRules'
          description: Set of rules for sending metrics for the Monitor resource.
      description: The updatable properties of the TagRule.
    UsageType:
      type: string
      description: Different usage type like PAYG/COMMITTED
      enum:
        - PAYG
        - COMMITTED
      x-ms-enum:
        name: UsageType
        modelAsString: true
        values:
          - name: PAYG
            value: PAYG
            description: Usage type is PAYG
          - name: COMMITTED
            value: COMMITTED
            description: Usage type is COMMITTED
    UserEmailParameter:
      type: object
      properties: {}
      description: User email specification.
    UserInfo:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          maxLength: 50
        lastName:
          type: string
          description: Last name
          maxLength: 50
        emailAddress:
          $ref: '#/components/schemas/email'
          description: User Email
        phoneNumber:
          type: string
          description: Contact phone number
          maxLength: 40
        country:
          type: string
          description: country if user
      description: User Info of NewRelic Monitor resource
    VMExtensionPayload:
      type: object
      properties:
        ingestionKey:
          type: string
          description: Ingestion key of the account
      description: Response of payload to be passed while installing VM agent.
    VMHostsListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VMInfo'
          x-ms-identifiers: []
          x-cadl-name: VMInfo[]
          description: The VMInfo items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
          x-cadl-name: Rest.ResourceLocation
      description: Response of a list VM Host Operation.
      required:
        - value
    VMInfo:
      type: object
      properties:
        vmId:
          type: string
          description: Azure VM resource ID
        agentVersion:
          type: string
          description: Version of the NewRelic agent installed on the VM.
        agentStatus:
          type: string
          description: Status of the NewRelic agent installed on the VM.
      description: Details of VM Resource having NewRelic OneAgent installed
    email:
      type: string
      description: Reusable representation of an email address
      pattern: ^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$
  x-stackQL-resources:
    operations:
      id: azure_isv.newrelic.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1NewRelic.Observability~1operations~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts:
      id: azure_isv.newrelic.accounts
      name: accounts
      title: accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1NewRelic.Observability~1accounts~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors:
      id: azure_isv.newrelic.monitors
      name: monitors
      title: monitors
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1NewRelic.Observability~1monitors~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1?api-version=2024-10-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1?api-version=2024-10-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1?api-version=2024-10-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        switch_billing:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1switchBilling~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh_ingestion_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1refreshIngestionKey~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        vm_host_payload:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1vmHostPayloads~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resubscribe:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1resubscribe~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/get'
          - $ref: '#/components/x-stackQL-resources/monitors/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/monitors/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/delete'
    organizations:
      id: azure_isv.newrelic.organizations
      name: organizations
      title: organizations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1NewRelic.Observability~1organizations~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/organizations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    plans:
      id: azure_isv.newrelic.plans
      name: plans
      title: plans
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1NewRelic.Observability~1plans~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/plans/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_metric_rules:
      id: azure_isv.newrelic.monitors_metric_rules
      name: monitors_metric_rules
      title: monitors_metric_rules
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1getMetricRules~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_metric_rules/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_metric_status:
      id: azure_isv.newrelic.monitors_metric_status
      name: monitors_metric_status
      title: monitors_metric_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1getMetricStatus~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_metric_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_app_services:
      id: azure_isv.newrelic.monitors_app_services
      name: monitors_app_services
      title: monitors_app_services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1listAppServices~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_app_services/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_hosts:
      id: azure_isv.newrelic.monitors_hosts
      name: monitors_hosts
      title: monitors_hosts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1listHosts~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_hosts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_monitored_resources:
      id: azure_isv.newrelic.monitors_monitored_resources
      name: monitors_monitored_resources
      title: monitors_monitored_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1monitoredResources~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_monitored_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    billing_info:
      id: azure_isv.newrelic.billing_info
      name: billing_info
      title: billing_info
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1getBillingInfo~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_info/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    connected_partner_resources:
      id: azure_isv.newrelic.connected_partner_resources
      name: connected_partner_resources
      title: connected_partner_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1listConnectedPartnerResources~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_partner_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    tag_rules:
      id: azure_isv.newrelic.tag_rules
      name: tag_rules
      title: tag_rules
      methods:
        list_by_new_relic_monitor_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1tagRules~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1tagRules~1{ruleSetName}~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1tagRules~1{ruleSetName}~1?api-version=2024-10-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1tagRules~1{ruleSetName}~1?api-version=2024-10-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1tagRules~1{ruleSetName}~1?api-version=2024-10-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/list_by_new_relic_monitor_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/delete'
    monitored_subscriptions:
      id: azure_isv.newrelic.monitored_subscriptions
      name: monitored_subscriptions
      title: monitored_subscriptions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1monitoredSubscriptions~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1monitoredSubscriptions~1{configurationName}~1?api-version=2024-10-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1monitoredSubscriptions~1{configurationName}~1?api-version=2024-10-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1monitoredSubscriptions~1{configurationName}~1?api-version=2024-10-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1monitoredSubscriptions~1{configurationName}~1?api-version=2024-10-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitored_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/monitored_subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/monitored_subscriptions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/monitored_subscriptions/methods/delete'
    monitors_linked_resources:
      id: azure_isv.newrelic.monitors_linked_resources
      name: monitors_linked_resources
      title: monitors_linked_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1NewRelic.Observability~1monitors~1{monitorName}~1listLinkedResources~1?api-version=2024-10-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_linked_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_monitors:
      id: azure_isv.newrelic.vw_monitors
      name: vw_monitors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.monitoringStatus') as monitoring_status,
              JSON_EXTRACT(properties, '$.marketplaceSubscriptionStatus') as marketplace_subscription_status,
              JSON_EXTRACT(properties, '$.marketplaceSubscriptionId') as marketplace_subscription_id,
              JSON_EXTRACT(properties, '$.newRelicAccountProperties') as new_relic_account_properties,
              JSON_EXTRACT(properties, '$.userInfo') as user_info,
              JSON_EXTRACT(properties, '$.planData') as plan_data,
              JSON_EXTRACT(properties, '$.liftrResourceCategory') as liftr_resource_category,
              JSON_EXTRACT(properties, '$.liftrResourcePreference') as liftr_resource_preference,
              JSON_EXTRACT(properties, '$.orgCreationSource') as org_creation_source,
              JSON_EXTRACT(properties, '$.accountCreationSource') as account_creation_source,
              JSON_EXTRACT(properties, '$.subscriptionState') as subscription_state,
              JSON_EXTRACT(properties, '$.saaSAzureSubscriptionStatus') as saa_s_azure_subscription_status,
              subscriptionId,
              resourceGroupName,
              monitorName
              FROM azure_isv.newrelic.monitors
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.monitoringStatus') as monitoring_status,
                JSON_EXTRACT(properties, '$.marketplaceSubscriptionStatus') as marketplace_subscription_status,
                JSON_EXTRACT(properties, '$.marketplaceSubscriptionId') as marketplace_subscription_id,
                JSON_EXTRACT(properties, '$.newRelicAccountProperties') as new_relic_account_properties,
                JSON_EXTRACT(properties, '$.userInfo') as user_info,
                JSON_EXTRACT(properties, '$.planData') as plan_data,
                JSON_EXTRACT(properties, '$.liftrResourceCategory') as liftr_resource_category,
                JSON_EXTRACT(properties, '$.liftrResourcePreference') as liftr_resource_preference,
                JSON_EXTRACT(properties, '$.orgCreationSource') as org_creation_source,
                JSON_EXTRACT(properties, '$.accountCreationSource') as account_creation_source,
                JSON_EXTRACT(properties, '$.subscriptionState') as subscription_state,
                JSON_EXTRACT(properties, '$.saaSAzureSubscriptionStatus') as saa_s_azure_subscription_status,
                subscriptionId,
                resourceGroupName,
                monitorName
                FROM azure_isv.newrelic.monitors
                WHERE subscriptionId = 'replace-me';
    vw_tag_rules:
      id: azure_isv.newrelic.vw_tag_rules
      name: vw_tag_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.logRules') as log_rules,
              JSON_EXTRACT(properties, '$.metricRules') as metric_rules,
              subscriptionId,
              resourceGroupName,
              monitorName,
              ruleSetName
              FROM azure_isv.newrelic.tag_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.logRules') as log_rules,
                JSON_EXTRACT(properties, '$.metricRules') as metric_rules,
                subscriptionId,
                resourceGroupName,
                monitorName,
                ruleSetName
                FROM azure_isv.newrelic.tag_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
    vw_monitored_subscriptions:
      id: azure_isv.newrelic.vw_monitored_subscriptions
      name: vw_monitored_subscriptions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.patchOperation') as patch_operation,
              JSON_EXTRACT(properties, '$.monitoredSubscriptionList') as monitored_subscription_list,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              monitorName,
              configurationName
              FROM azure_isv.newrelic.monitored_subscriptions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.patchOperation') as patch_operation,
                JSON_EXTRACT(properties, '$.monitoredSubscriptionList') as monitored_subscription_list,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                monitorName,
                configurationName
                FROM azure_isv.newrelic.monitored_subscriptions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
paths:
  /providers/NewRelic.Observability/operations/?api-version=2024-10-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/NewRelic.Observability/accounts/?api-version=2024-10-01:
    get:
      tags:
        - Accounts
      operationId: Accounts_List
      description: List all the existing accounts
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/UserEmailParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/NewRelic.Observability/monitors/?api-version=2024-10-01:
    get:
      tags:
        - Monitors
      operationId: Monitors_ListBySubscription
      description: List NewRelicMonitorResource resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/NewRelic.Observability/organizations/?api-version=2024-10-01:
    get:
      tags:
        - Organizations
      operationId: Organizations_List
      description: List all the existing organizations
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/UserEmailParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/NewRelic.Observability/plans/?api-version=2024-10-01:
    get:
      tags:
        - Plan
      operationId: Plans_List
      description: List plans data
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccountIdParameter'
        - $ref: '#/components/parameters/OrganizationIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanDataListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/?api-version=2024-10-01:
    get:
      tags:
        - Monitors
      operationId: Monitors_ListByResourceGroup
      description: List NewRelicMonitorResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/?api-version=2024-10-01:
    get:
      tags:
        - Monitors
      operationId: Monitors_Get
      description: Get a NewRelicMonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Monitors
      operationId: Monitors_CreateOrUpdate
      description: Create a NewRelicMonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRelicMonitorResource'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResource'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      tags:
        - Monitors
      operationId: Monitors_Update
      description: Update a NewRelicMonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRelicMonitorResourceUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResource'
        '202':
          description: ARM operation accepted.
          headers:
            Location:
              schema:
                type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Monitors
      operationId: Monitors_Delete
      description: Delete a NewRelicMonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/UserEmailParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/getMetricRules/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_GetMetricRules
      description: Get metric rules
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the get metrics status request.
        required: true
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRules'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/getMetricStatus/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_GetMetricStatus
      description: Get metric status
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the get metrics status request.
        required: true
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsStatusRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/listAppServices/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_ListAppServices
      description: List the app service resources currently being monitored by the NewRelic resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the app services get request.
        required: true
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppServicesGetRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppServicesListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/switchBilling/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_SwitchBilling
      description: Switches the billing for NewRelic monitor resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the switch billing request.
        required: true
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchBillingRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResource'
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/listHosts/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_ListHosts
      description: List the compute vm resources currently being monitored by the NewRelic resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the Hosts get request.
        required: true
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostsGetRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMHostsListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/refreshIngestionKey/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_RefreshIngestionKey
      description: Refreshes the ingestion key for all monitors linked to the same account associated to this monitor.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully refreshed the ingestion key.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredResources/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_ListMonitoredResources
      description: List the resources currently being monitored by the NewRelic monitor resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResourceListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/getBillingInfo/?api-version=2024-10-01:
    post:
      tags:
        - ConnectedResources
      summary: Get marketplace info mapped to the given monitor.
      operationId: BillingInfo_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingInfoResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/listConnectedPartnerResources/?api-version=2024-10-01:
    post:
      tags:
        - ConnectedResources
      summary: List of all active deployments that are associated with the marketplace subscription linked to the given monitor.
      operationId: ConnectedPartnerResources_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
      requestBody:
        description: Email Id of the user
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedPartnerResourcesListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/tagRules/?api-version=2024-10-01:
    get:
      tags:
        - TagRules
      operationId: TagRules_ListByNewRelicMonitorResource
      description: List TagRule resources by NewRelicMonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRuleListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/tagRules/{ruleSetName}/?api-version=2024-10-01:
    get:
      tags:
        - TagRules
      operationId: TagRules_Get
      description: Get a TagRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the TagRule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRule'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - TagRules
      operationId: TagRules_CreateOrUpdate
      description: Create a TagRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the TagRule
          required: true
          schema:
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRule'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRule'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRule'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      tags:
        - TagRules
      operationId: TagRules_Delete
      description: Delete a TagRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the TagRule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      tags:
        - TagRules
      operationId: TagRules_Update
      description: Update a TagRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
        - name: ruleSetName
          in: path
          description: Name of the TagRule
          required: true
          schema:
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRuleUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRule'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/?api-version=2024-10-01:
    get:
      tags:
        - monitoredSubscriptions
      summary: List the subscriptions currently being monitored by the NewRelic monitor resource.
      operationId: MonitoredSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredSubscriptionPropertiesList'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/{configurationName}/?api-version=2024-10-01:
    get:
      tags:
        - monitoredSubscriptions
      summary: List the subscriptions currently being monitored by the NewRelic monitor resource.
      operationId: MonitoredSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
        - name: configurationName
          in: path
          description: The configuration name. Only 'default' value is supported.
          required: true
          schema:
            pattern: ^.*$
            enum:
              - default
            x-ms-enum:
              name: configurationName
              modelAsString: true
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredSubscriptionProperties'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - monitoredSubscriptions
      summary: Add the subscriptions that should be monitored by the NewRelic monitor resource.
      operationId: MonitoredSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
        - name: configurationName
          in: path
          description: The configuration name. Only 'default' value is supported.
          required: true
          schema:
            pattern: ^.*$
            enum:
              - default
            x-ms-enum:
              name: configurationName
              modelAsString: true
            type: string
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoredSubscriptionProperties'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredSubscriptionProperties'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredSubscriptionProperties'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - MonitoredSubscriptions
      summary: Updates the subscriptions that are being monitored by the NewRelic monitor resource
      operationId: MonitoredSubscriptions_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
        - name: configurationName
          in: path
          description: The configuration name. Only 'default' value is supported.
          required: true
          schema:
            pattern: ^.*$
            enum:
              - default
            x-ms-enum:
              name: configurationName
              modelAsString: true
            type: string
      requestBody:
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoredSubscriptionProperties'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredSubscriptionProperties'
        '202':
          description: Success
          headers:
            Location:
              schema:
                type: string
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - MonitoredSubscriptions
      summary: Updates the subscriptions that are being monitored by the NewRelic monitor resource
      operationId: MonitoredSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
        - name: configurationName
          in: path
          description: The configuration name. Only 'default' value is supported.
          required: true
          schema:
            pattern: ^.*$
            enum:
              - default
            x-ms-enum:
              name: configurationName
              modelAsString: true
            type: string
      responses:
        '202':
          description: Success
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Success
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/listLinkedResources/?api-version=2024-10-01:
    post:
      tags:
        - LinkedResources
      summary: List all Azure resources associated to the same NewRelic organization and account as the target resource.
      operationId: Monitors_ListLinkedResources
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            pattern: ^.*$
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResourceListResponse'
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/vmHostPayloads/?api-version=2024-10-01:
    post:
      tags:
        - Monitors
      operationId: Monitors_VmHostPayload
      description: Returns the payload that needs to be passed in the request body for installing NewRelic agent on a VM.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitors resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtensionPayload'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/resubscribe/?api-version=2024-10-01:
    post:
      tags:
        - Resubscribe
      summary: Resubscribe the NewRelic Organization.
      operationId: Monitors_Resubscribe
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        description: Resubscribe Properties
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResubscribeProperties'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewRelicMonitorResource'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Default error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
