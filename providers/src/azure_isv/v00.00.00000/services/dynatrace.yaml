openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Dynatrace (Azure Native ISV Service)
  description: Get deep cloud observability, advanced AIOps, and continuous runtime application security.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    MonitorNameParameter:
      name: monitorName
      in: path
      description: Monitor resource name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RuleSetNameParameter:
      name: ruleSetName
      in: path
      description: Monitor resource name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ConfigurationNameParameter:
      name: configurationName
      in: path
      description: Single Sign On Configuration Name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    MonitoredResourceListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MonitoredResource'
          x-cadl-name: MonitoredResource[]
          description: The items on this page
        nextLink:
          type: string
          description: The link to the next page of items
      description: List of all the resources being monitored by Dynatrace monitor resource
    MarketplaceSaaSResourceDetailsResponse:
      type: object
      properties:
        marketplaceSaaSResourceId:
          type: string
          description: Id of the Marketplace SaaS Resource
        planId:
          type: string
          description: Id of the plan
        marketplaceSubscriptionStatus:
          $ref: '#/components/schemas/MarketplaceSubscriptionStatus'
          description: Marketplace subscription status
      description: Marketplace SaaS resource details linked to the given tenant Id
    VMExtensionPayload:
      type: object
      properties:
        ingestionKey:
          type: string
          description: Ingestion key of the environment
        environmentId:
          type: string
          description: Id of the environment created
      description: Response of payload to be passed while installing VM agent.
    VMHostsListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VMInfo'
          description: The items on this page
          x-ms-identifiers: []
        nextLink:
          type: string
          description: The link to the next page of items
      description: Response of a list VM Host Operation.
    AppServiceInfo:
      type: object
      properties:
        resourceId:
          type: string
          description: App service resource ID
        version:
          type: string
          description: Version of the Dynatrace agent installed on the App Service.
        monitoringType:
          $ref: '#/components/schemas/MonitoringType'
          description: The monitoring mode of OneAgent
        autoUpdateSetting:
          $ref: '#/components/schemas/AutoUpdateSetting'
          description: Update settings of OneAgent.
        updateStatus:
          $ref: '#/components/schemas/UpdateStatus'
          description: The current update status of OneAgent.
        availabilityState:
          $ref: '#/components/schemas/AvailabilityState'
          description: The availability state of OneAgent.
        logModule:
          $ref: '#/components/schemas/LogModule'
          description: Tells whether log modules are enabled or not
        hostGroup:
          type: string
          description: The name of the host group
        hostName:
          type: string
          description: The name of the host
      description: Details of App Services having Dynatrace OneAgent installed
    MetricsStatusResponse:
      type: object
      properties:
        azureResourceIds:
          type: array
          items:
            type: string
          x-cadl-name: string[]
          description: Azure resource IDs
      description: Response of get metrics status operation
    AppServiceListResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AppServiceInfo'
          description: The items on this page
          x-ms-identifiers: []
        nextLink:
          type: string
          description: The link to the next page of items
      description: Response of a list App Services Operation.
    MonitorResource:
      description: Dynatrace Monitor Resource
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/MonitorProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System metadata for this resource.
          readOnly: true
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MonitorResourceUpdate:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
          x-ms-mutability:
            - read
            - update
            - create
      description: The updatable properties of the MonitorResource.
    MonitorResourceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/MonitorResource'
          x-cadl-name: Dynatrace.Observability.MonitorResource[]
          description: The items on this page
        nextLink:
          type: string
          description: The link to the next page of items
      description: The response of a MonitorResource list operation.
      required:
        - value
    TagRule:
      description: Tag rules for a monitor resource
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/MonitoringTagRulesProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System metadata for this resource.
          readOnly: true
      type: object
    TagRuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/TagRule'
          x-cadl-name: Dynatrace.Observability.TagRule[]
          description: The items on this page
        nextLink:
          type: string
          description: The link to the next page of items
      description: The response of a TagRule list operation.
      required:
        - value
    DynatraceSingleSignOnResource:
      description: Single sign-on configurations for a given monitor resource.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/DynatraceSingleSignOnProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: System metadata for this resource.
          readOnly: true
      type: object
    DynatraceSingleSignOnResourceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DynatraceSingleSignOnResource'
          x-cadl-name: Dynatrace.Observability.DynatraceSingleSignOnResource[]
          description: The items on this page
        nextLink:
          type: string
          description: The link to the next page of items
      description: The response of a DynatraceSingleSignOnResource list operation.
      required:
        - value
    MonitoredResource:
      type: object
      properties:
        id:
          type: string
          description: The ARM id of the resource.
        sendingMetrics:
          $ref: '#/components/schemas/SendingMetricsStatus'
          description: Flag indicating if resource is sending metrics to Dynatrace.
        reasonForMetricsStatus:
          type: string
          description: Reason for why the resource is sending metrics (or why it is not sending).
        sendingLogs:
          $ref: '#/components/schemas/SendingLogsStatus'
          description: Flag indicating if resource is sending logs to Dynatrace.
        reasonForLogsStatus:
          type: string
          description: Reason for why the resource is sending logs (or why it is not sending).
      description: Details of resource being monitored by Dynatrace monitor resource
    VMInfo:
      type: object
      properties:
        resourceId:
          type: string
          description: Azure VM resource ID
        version:
          type: string
          description: Version of the Dynatrace agent installed on the VM.
        monitoringType:
          $ref: '#/components/schemas/MonitoringType'
          description: The monitoring mode of OneAgent
        autoUpdateSetting:
          $ref: '#/components/schemas/AutoUpdateSetting'
          description: Update settings of OneAgent.
        updateStatus:
          $ref: '#/components/schemas/UpdateStatus'
          description: The current update status of OneAgent.
        availabilityState:
          $ref: '#/components/schemas/AvailabilityState'
          description: The availability state of OneAgent.
        logModule:
          $ref: '#/components/schemas/LogModule'
          description: Tells whether log modules are enabled or not
        hostGroup:
          type: string
          description: The name of the host group
        hostName:
          type: string
          description: The name of the host
      description: Details of VM Resource having Dynatrace OneAgent installed
    MonitoringType:
      type: string
      description: The monitoring mode of OneAgent
      enum:
        - CLOUD_INFRASTRUCTURE
        - FULL_STACK
      x-ms-enum:
        name: MonitoringType
        modelAsString: true
    AutoUpdateSetting:
      type: string
      description: Update settings of OneAgent.
      enum:
        - ENABLED
        - DISABLED
      x-ms-enum:
        name: AutoUpdateSetting
        modelAsString: true
    UpdateStatus:
      type: string
      description: The current update status of OneAgent.
      enum:
        - INCOMPATIBLE
        - OUTDATED
        - SCHEDULED
        - SUPPRESSED
        - UNKNOWN
        - UP2DATE
        - UPDATE_IN_PROGRESS
        - UPDATE_PENDING
        - UPDATE_PROBLEM
      x-ms-enum:
        name: UpdateStatus
        modelAsString: true
    AvailabilityState:
      type: string
      description: The availability state of OneAgent.
      enum:
        - CRASHED
        - LOST
        - MONITORED
        - PRE_MONITORED
        - SHUTDOWN
        - UNEXPECTED_SHUTDOWN
        - UNKNOWN
        - UNMONITORED
      x-ms-enum:
        name: AvailabilityState
        modelAsString: true
    LogModule:
      type: string
      description: Tells whether log modules are enabled or not
      enum:
        - ENABLED
        - DISABLED
      x-ms-enum:
        name: LogModule
        modelAsString: true
    MonitorProperties:
      type: object
      properties:
        monitoringStatus:
          $ref: '#/components/schemas/MonitoringStatus'
          description: Status of the monitor.
        marketplaceSubscriptionStatus:
          $ref: '#/components/schemas/MarketplaceSubscriptionStatus'
          description: Marketplace subscription status.
        dynatraceEnvironmentProperties:
          $ref: '#/components/schemas/DynatraceEnvironmentProperties'
          description: Properties of the Dynatrace environment.
        userInfo:
          $ref: '#/components/schemas/UserInfo'
          description: User info.
        planData:
          $ref: '#/components/schemas/PlanData'
          description: Billing plan information.
        liftrResourceCategory:
          $ref: '#/components/schemas/LiftrResourceCategories'
          description: Liftr Resource category.
          readOnly: true
        liftrResourcePreference:
          type: integer
          format: int32
          description: The priority of the resource.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      description: Properties specific to the monitor resource.
    IdentityProperties:
      type: object
      properties:
        tenantId:
          type: string
          description: The Active Directory tenant id of the principal.
          readOnly: true
        principalId:
          type: string
          description: The active directory identifier of this principal.
          readOnly: true
        type:
          $ref: '#/components/schemas/ManagedIdentityType'
          description: The type of managed identity assigned to this resource.
        userAssignedIdentities:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
          description: The identities assigned to this resource by the user.
      description: The properties of the managed service identities assigned to this resource.
      required:
        - type
    MonitoringStatus:
      type: string
      description: Flag specifying if the resource monitoring is enabled or disabled.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: MonitoringStatus
        modelAsString: true
    MarketplaceSubscriptionStatus:
      type: string
      description: Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.
      enum:
        - Active
        - Suspended
      x-ms-enum:
        name: MarketplaceSubscriptionStatus
        modelAsString: true
    DynatraceEnvironmentProperties:
      type: object
      properties:
        userId:
          type: string
          description: User id
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
          description: Dynatrace Account Information
        environmentInfo:
          $ref: '#/components/schemas/EnvironmentInfo'
          description: Dynatrace Environment Information
        singleSignOnProperties:
          $ref: '#/components/schemas/DynatraceSingleSignOnProperties'
          description: The details of a Dynatrace single sign-on.
      description: Properties of the Dynatrace environment.
    UserInfo:
      type: object
      properties:
        firstName:
          type: string
          description: First Name of the user
        lastName:
          type: string
          description: Last Name of the user
        emailAddress:
          $ref: '#/components/schemas/email'
          description: Email of the user used by Dynatrace for contacting them if needed
        phoneNumber:
          type: string
          maxLength: 40
          description: Phone number of the user used by Dynatrace for contacting them if needed
        country:
          type: string
          description: Country of the user
      description: User info.
    PlanData:
      type: object
      properties:
        usageType:
          type: string
          description: different usage type like PAYG/COMMITTED. this could be enum
        billingCycle:
          type: string
          description: different billing cycles like MONTHLY/WEEKLY. this could be enum
        planDetails:
          type: string
          description: plan id as published by Dynatrace
        effectiveDate:
          type: string
          format: date-time
          description: date when plan was applied
      description: Billing plan information.
    MonitoringTagRulesProperties:
      type: object
      properties:
        logRules:
          $ref: '#/components/schemas/LogRules'
          description: Set of rules for sending logs for the Monitor resource.
        metricRules:
          $ref: '#/components/schemas/MetricRules'
          description: Set of rules for sending metrics for the Monitor resource.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      description: Properties for the Tag rules resource of a Monitor account.
    LogRules:
      type: object
      properties:
        sendAadLogs:
          $ref: '#/components/schemas/SendAadLogsStatus'
          description: Flag specifying if AAD logs should be sent for the Monitor resource.
        sendSubscriptionLogs:
          $ref: '#/components/schemas/SendSubscriptionLogsStatus'
          description: Flag specifying if subscription logs should be sent for the Monitor resource.
        sendActivityLogs:
          $ref: '#/components/schemas/SendActivityLogsStatus'
          description: Flag specifying if activity logs from Azure resources should be sent for the Monitor resource.
        filteringTags:
          type: array
          items:
            $ref: '#/components/schemas/FilteringTag'
          x-cadl-name: FilteringTag[]
          x-ms-identifiers: []
          description: |-
            List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured.
            If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
      description: Set of rules for sending logs for the Monitor resource.
    MetricRules:
      description: Set of rules for sending metrics for the Monitor resource.
      type: object
      properties:
        sendingMetrics:
          $ref: '#/components/schemas/SendingMetricsStatus'
          description: Flag specifying if metrics from Azure resources should be sent for the Monitor resource.
        filteringTags:
          description: List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
          type: array
          items:
            $ref: '#/components/schemas/FilteringTag'
          x-ms-identifiers: []
    DynatraceSingleSignOnProperties:
      type: object
      properties:
        singleSignOnState:
          $ref: '#/components/schemas/SingleSignOnStates'
          description: State of Single Sign On
        enterpriseAppId:
          type: string
          description: Version of the Dynatrace agent installed on the VM.
        singleSignOnUrl:
          type: string
          description: The login URL specific to this Dynatrace Environment
        aadDomains:
          type: array
          items:
            type: string
          x-cadl-name: string[]
          description: array of Aad(azure active directory) domains
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource.
          readOnly: true
      description: The details of a Dynatrace single sign-on.
    SendingMetricsStatus:
      type: string
      description: Indicates whether metrics are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendingMetricsStatus
        modelAsString: true
    SendingLogsStatus:
      type: string
      description: Indicates whether logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendingLogsStatus
        modelAsString: true
    LiftrResourceCategories:
      type: string
      description: Liftr resource category
      enum:
        - Unknown
        - MonitorLogs
      x-ms-enum:
        name: LiftrResourceCategories
        modelAsString: true
    ProvisioningState:
      type: string
      description: Provisioning state of the monitoring resource
      enum:
        - Accepted
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Canceled
        - Deleted
        - NotSpecified
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    ManagedIdentityType:
      type: string
      description: The kind of managed identity assigned to this resource.
      enum:
        - SystemAssigned
        - UserAssigned
        - SystemAndUserAssigned
      x-ms-enum:
        name: ManagedIdentityType
        modelAsString: true
    UserAssignedIdentity:
      type: object
      properties:
        clientId:
          type: string
          description: The active directory client identifier for this principal.
        principalId:
          type: string
          description: The active directory identifier for this principal.
      description: A managed identity assigned by the user.
      required:
        - clientId
        - principalId
    AccountInfo:
      type: object
      properties:
        accountId:
          type: string
          description: Account Id of the account this environment is linked to
        regionId:
          type: string
          description: Region in which the account is created
      description: Dynatrace Account Information
    EnvironmentInfo:
      type: object
      properties:
        environmentId:
          type: string
          description: Id of the environment created
        ingestionKey:
          type: string
          description: Ingestion key of the environment
        logsIngestionEndpoint:
          type: string
          description: Ingestion endpoint used for sending logs
        landingURL:
          type: string
          description: Landing URL for Dynatrace environment
      description: Dynatrace Environment Information
    LinkableEnvironmentRequest:
      description: Request for getting all the linkable environments for a user
      type: object
      properties:
        tenantId:
          type: string
          description: Tenant Id of the user in which they want to link the environment
        userPrincipal:
          type: string
          description: user principal id of the user
        region:
          type: string
          description: Azure region in which we want to link the environment
      required:
        - tenantId
        - userPrincipal
        - region
    LinkableEnvironmentResponse:
      description: Response for getting all the linkable environments
      type: object
      properties:
        environmentId:
          type: string
          description: environment id for which user is an admin
        environmentName:
          type: string
          description: Name of the environment
        planData:
          $ref: '#/components/schemas/PlanData'
          description: Billing plan information.
    LinkableEnvironmentListResponse:
      description: Response for getting all the linkable environments
      type: object
      properties:
        value:
          description: List of environments for which user is an admin
          type: array
          items:
            $ref: '#/components/schemas/LinkableEnvironmentResponse'
          x-ms-identifiers: []
        nextLink:
          description: Link to the next set of results, if any.
          type: string
    MarketplaceSaaSResourceDetailsRequest:
      description: Request for getting Marketplace SaaS resource details for a tenant Id
      type: object
      properties:
        tenantId:
          type: string
          description: Tenant Id
      required:
        - tenantId
    SSODetailsRequest:
      description: Request for getting sso details for a user
      type: object
      properties:
        userPrincipal:
          type: string
          description: user principal id of the user
      required:
        - userPrincipal
    SSODetailsResponse:
      type: object
      properties:
        isSsoEnabled:
          $ref: '#/components/schemas/SSOStatus'
          description: Whether the SSO is enabled for this resource or not.
        metadataUrl:
          type: string
          description: URL for Azure AD metadata
        singleSignOnUrl:
          type: string
          description: The login URL specific to this Dynatrace Environment
        aadDomains:
          type: array
          items:
            type: string
          description: array of Aad(azure active directory) domains
        adminUsers:
          type: array
          items:
            type: string
          description: Array of admin user emails.
      description: SSO details from the Dynatrace partner
    SSOStatus:
      type: string
      description: Indicates whether SSO is enabled or not
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SSOStatus
        modelAsString: true
    email:
      type: string
      pattern: ^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$
      description: Reusable representation of an email address
    SendAadLogsStatus:
      type: string
      description: Indicates whether AAD logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendAadLogsStatus
        modelAsString: true
    SendSubscriptionLogsStatus:
      type: string
      description: Indicates whether subscription logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendSubscriptionLogsStatus
        modelAsString: true
    SendActivityLogsStatus:
      type: string
      description: Indicates whether activity logs are being sent.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: SendActivityLogsStatus
        modelAsString: true
    FilteringTag:
      type: object
      properties:
        name:
          type: string
          description: The name (also known as the key) of the tag.
        value:
          type: string
          description: The value of the tag.
        action:
          $ref: '#/components/schemas/TagAction'
          description: Valid actions for a filtering tag. Exclusion takes priority over inclusion.
      description: The definition of a filtering tag. Filtering tags are used for capturing resources and include/exclude them from being monitored.
    SingleSignOnStates:
      type: string
      description: Various states of the SSO resource
      enum:
        - Initial
        - Enable
        - Disable
        - Existing
      x-ms-enum:
        name: SingleSignOnStates
        modelAsString: true
    TagAction:
      type: string
      description: Valid actions for a filtering tag. Exclusion takes priority over inclusion.
      enum:
        - Include
        - Exclude
      x-ms-enum:
        name: TagAction
        modelAsString: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    monitors_monitored_resources:
      id: azure_isv.dynatrace.monitors_monitored_resources
      name: monitors_monitored_resources
      title: monitors_monitored_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1listMonitoredResources?api-version=2023-04-27/post'
            operationId: MonitorsMonitoredResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitoredResourceListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_monitored_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_vm_host_payloads:
      id: azure_isv.dynatrace.monitors_vm_host_payloads
      name: monitors_vm_host_payloads
      title: monitors_vm_host_payloads
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1getVMHostPayload?api-version=2023-04-27/post'
            operationId: MonitorsVMHostPayload_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMExtensionPayload
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_vm_host_payloads/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    monitors:
      id: azure_isv.dynatrace.monitors
      name: monitors
      title: monitors
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}?api-version=2023-04-27/get'
            operationId: Monitors_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitorResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}?api-version=2023-04-27/put'
            operationId: Monitors_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitorResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}?api-version=2023-04-27/patch'
            operationId: Monitors_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitorResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}?api-version=2023-04-27/delete'
            operationId: Monitors_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Dynatrace.Observability~1monitors?api-version=2023-04-27/get'
            operationId: Monitors_ListBySubscriptionId
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitorResourceListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors?api-version=2023-04-27/get'
            operationId: Monitors_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MonitorResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/get'
          - $ref: '#/components/x-stackQL-resources/monitors/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/monitors/methods/list_by_subscription_id'
        insert:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/delete'
    operations:
      id: azure_isv.dynatrace.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Dynatrace.Observability~1operations?api-version=2023-04-27/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    tag_rules:
      id: azure_isv.dynatrace.tag_rules
      name: tag_rules
      title: tag_rules
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1tagRules~1{ruleSetName}?api-version=2023-04-27/get'
            operationId: TagRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TagRule
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1tagRules~1{ruleSetName}?api-version=2023-04-27/put'
            operationId: TagRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TagRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1tagRules~1{ruleSetName}?api-version=2023-04-27/delete'
            operationId: TagRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1tagRules?api-version=2023-04-27/get'
            operationId: TagRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TagRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tag_rules/methods/delete'
    monitors_marketplace_saas_resource_details:
      id: azure_isv.dynatrace.monitors_marketplace_saas_resource_details
      name: monitors_marketplace_saas_resource_details
      title: monitors_marketplace_saas_resource_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Dynatrace.Observability~1getMarketplaceSaaSResourceDetails?api-version=2023-04-27/post'
            operationId: MonitorsMarketplaceSaaSResourceDetails_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MarketplaceSaaSResourceDetailsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_marketplace_saas_resource_details/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    single_sign_ons:
      id: azure_isv.dynatrace.single_sign_ons
      name: single_sign_ons
      title: single_sign_ons
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1singleSignOnConfigurations~1{configurationName}?api-version=2023-04-27/put'
            operationId: SingleSignOn_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DynatraceSingleSignOnResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1singleSignOnConfigurations~1{configurationName}?api-version=2023-04-27/get'
            operationId: SingleSignOn_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DynatraceSingleSignOnResource
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1singleSignOnConfigurations?api-version=2023-04-27/get'
            operationId: SingleSignOn_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DynatraceSingleSignOnResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/single_sign_ons/methods/get'
          - $ref: '#/components/x-stackQL-resources/single_sign_ons/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/single_sign_ons/methods/create_or_update'
        update: []
        replace: []
        delete: []
    monitors_hosts:
      id: azure_isv.dynatrace.monitors_hosts
      name: monitors_hosts
      title: monitors_hosts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1listHosts?api-version=2023-04-27/post'
            operationId: MonitorsHosts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VMHostsListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_hosts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_metric_status:
      id: azure_isv.dynatrace.monitors_metric_status
      name: monitors_metric_status
      title: monitors_metric_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1getMetricStatus?api-version=2023-04-27/post'
            operationId: MonitorsMetricStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricsStatusResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_metric_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_app_services:
      id: azure_isv.dynatrace.monitors_app_services
      name: monitors_app_services
      title: monitors_app_services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1listAppServices?api-version=2023-04-27/post'
            operationId: MonitorsAppServices_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppServiceListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_app_services/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_sso_details:
      id: azure_isv.dynatrace.monitors_sso_details
      name: monitors_sso_details
      title: monitors_sso_details
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1getSSODetails?api-version=2023-04-27/post'
            operationId: MonitorsSSODetails_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SSODetailsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_sso_details/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    monitors_linkable_environments:
      id: azure_isv.dynatrace.monitors_linkable_environments
      name: monitors_linkable_environments
      title: monitors_linkable_environments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Dynatrace.Observability~1monitors~1{monitorName}~1listLinkableEnvironments?api-version=2023-04-27/post'
            operationId: MonitorsLinkableEnvironments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LinkableEnvironmentListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monitors_linkable_environments/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_monitors:
      id: azure_isv.dynatrace.vw_monitors
      name: vw_monitors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              systemData as system_data,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.monitoringStatus') as "monitoring_status",
              JSON_EXTRACT(properties, '$.marketplaceSubscriptionStatus') as "marketplace_subscription_status",
              JSON_EXTRACT(properties, '$.dynatraceEnvironmentProperties') as "dynatrace_environment_properties",
              JSON_EXTRACT(properties, '$.userInfo') as "user_info",
              JSON_EXTRACT(properties, '$.planData') as "plan_data",
              JSON_EXTRACT(properties, '$.liftrResourceCategory') as "liftr_resource_category",
              JSON_EXTRACT(properties, '$.liftrResourcePreference') as "liftr_resource_preference",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              monitorName
              FROM azure_isv.dynatrace.monitors
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                systemData as system_data,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.monitoringStatus') as "monitoring_status",
                json_extract_path_text(properties, '$.marketplaceSubscriptionStatus') as "marketplace_subscription_status",
                json_extract_path_text(properties, '$.dynatraceEnvironmentProperties') as "dynatrace_environment_properties",
                json_extract_path_text(properties, '$.userInfo') as "user_info",
                json_extract_path_text(properties, '$.planData') as "plan_data",
                json_extract_path_text(properties, '$.liftrResourceCategory') as "liftr_resource_category",
                json_extract_path_text(properties, '$.liftrResourcePreference') as "liftr_resource_preference",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                monitorName
                FROM azure_isv.dynatrace.monitors
                WHERE subscriptionId = 'replace-me';
    vw_tag_rules:
      id: azure_isv.dynatrace.vw_tag_rules
      name: vw_tag_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.logRules') as "log_rules",
              JSON_EXTRACT(properties, '$.metricRules') as "metric_rules",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              monitorName,
              ruleSetName
              FROM azure_isv.dynatrace.tag_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.logRules') as "log_rules",
                json_extract_path_text(properties, '$.metricRules') as "metric_rules",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                monitorName,
                ruleSetName
                FROM azure_isv.dynatrace.tag_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
    vw_single_sign_ons:
      id: azure_isv.dynatrace.vw_single_sign_ons
      name: vw_single_sign_ons
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.singleSignOnState') as "single_sign_on_state",
              JSON_EXTRACT(properties, '$.enterpriseAppId') as "enterprise_app_id",
              JSON_EXTRACT(properties, '$.singleSignOnUrl') as "single_sign_on_url",
              JSON_EXTRACT(properties, '$.aadDomains') as "aad_domains",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              monitorName,
              configurationName
              FROM azure_isv.dynatrace.single_sign_ons
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.singleSignOnState') as "single_sign_on_state",
                json_extract_path_text(properties, '$.enterpriseAppId') as "enterprise_app_id",
                json_extract_path_text(properties, '$.singleSignOnUrl') as "single_sign_on_url",
                json_extract_path_text(properties, '$.aadDomains') as "aad_domains",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                monitorName,
                configurationName
                FROM azure_isv.dynatrace.single_sign_ons
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND monitorName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listMonitoredResources?api-version=2023-04-27:
    post:
      operationId: MonitorsMonitoredResources_List
      summary: List the resources currently being monitored by the Dynatrace monitor resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredResourceListResponse'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitors_ListMonitoredResources
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/getVMHostPayload?api-version=2023-04-27:
    post:
      operationId: MonitorsVMHostPayload_Get
      summary: Returns the payload that needs to be passed in the request body for installing Dynatrace agent on a VM.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMExtensionPayload'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-original-operationId: Monitors_GetVMHostPayload
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}?api-version=2023-04-27:
    get:
      operationId: Monitors_Get
      summary: Get a MonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResource'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
    put:
      operationId: Monitors_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Create a MonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorResource'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResource'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResource'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
    patch:
      operationId: Monitors_Update
      summary: Update a MonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorResourceUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResource'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
    delete:
      operationId: Monitors_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Delete a MonitorResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
        '204':
          description: Resource deleted successfully.
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
  /providers/Dynatrace.Observability/operations?api-version=2023-04-27:
    get:
      operationId: Operations_List
      summary: List the operations for Dynatrace.Observability
      parameters: []
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Dynatrace.Observability/monitors?api-version=2023-04-27:
    get:
      operationId: Monitors_ListBySubscriptionId
      summary: List all MonitorResource by subscriptionId
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResourceListResult'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors?api-version=2023-04-27:
    get:
      operationId: Monitors_ListByResourceGroup
      summary: List MonitorResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorResourceListResult'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/tagRules/{ruleSetName}?api-version=2023-04-27:
    get:
      operationId: TagRules_Get
      summary: Get a TagRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/RuleSetNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRule'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - TagRules
    put:
      operationId: TagRules_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Create a TagRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/RuleSetNameParameter'
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRule'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRule'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRule'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - TagRules
    delete:
      operationId: TagRules_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Delete a TagRule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/RuleSetNameParameter'
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
        '204':
          description: Resource deleted successfully.
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - TagRules
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/tagRules?api-version=2023-04-27:
    get:
      operationId: TagRules_List
      summary: List all TagRule by monitorName
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRuleListResult'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - TagRules
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Dynatrace.Observability/getMarketplaceSaaSResourceDetails?api-version=2023-04-27:
    post:
      tags:
        - Monitors
      operationId: MonitorsMarketplaceSaaSResourceDetails_Get
      description: Get Marketplace SaaS resource details of a tenant under a specific subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Tenant Id
        required: true
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceSaaSResourceDetailsRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceSaaSResourceDetailsResponse'
        '404':
          description: No Marketplace SaaS resource found for the given tenant Id
          x-ms-error-response: true
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Monitors_GetMarketplaceSaaSResourceDetails
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/singleSignOnConfigurations/{configurationName}?api-version=2023-04-27:
    put:
      operationId: SingleSignOn_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      summary: Create a DynatraceSingleSignOnResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynatraceSingleSignOnResource'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynatraceSingleSignOnResource'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynatraceSingleSignOnResource'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - SingleSignOn
    get:
      operationId: SingleSignOn_Get
      summary: Get a DynatraceSingleSignOnResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
        - $ref: '#/components/parameters/ConfigurationNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynatraceSingleSignOnResource'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - SingleSignOn
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/singleSignOnConfigurations?api-version=2023-04-27:
    get:
      operationId: SingleSignOn_List
      summary: List all DynatraceSingleSignOnResource by monitorName
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynatraceSingleSignOnResourceListResult'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - SingleSignOn
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listHosts?api-version=2023-04-27:
    post:
      operationId: MonitorsHosts_List
      summary: List the VM/VMSS resources currently being monitored by the Dynatrace resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMHostsListResponse'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitors_ListHosts
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/getMetricStatus?api-version=2023-04-27:
    post:
      tags:
        - Monitors
      operationId: MonitorsMetricStatus_Get
      description: Get metric status
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: monitorName
          in: path
          description: Name of the Monitor resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsStatusResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Monitors_GetMetricStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listAppServices?api-version=2023-04-27:
    post:
      operationId: MonitorsAppServices_List
      summary: Gets list of App Services with Dynatrace PaaS OneAgent enabled
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppServiceListResponse'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitors_ListAppServices
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/getSSODetails?api-version=2023-04-27:
    post:
      operationId: MonitorsSSODetails_Get
      summary: Gets the SSO configuration details from the partner.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        description: The details of the get sso details request.
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSODetailsRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSODetailsResponse'
        '401':
          description: User has insufficient permissions to update SSO configuration
          x-ms-error-response: true
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-original-operationId: Monitors_GetSSODetails
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Dynatrace.Observability/monitors/{monitorName}/listLinkableEnvironments?api-version=2023-04-27:
    post:
      operationId: MonitorsLinkableEnvironments_List
      summary: Gets all the Dynatrace environments that a user can link a azure resource to
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MonitorNameParameter'
      requestBody:
        description: The details of the linkable environment request.
        required: true
        x-ms-requestBody-name: request
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkableEnvironmentRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkableEnvironmentListResponse'
        default:
          description: Common error response for all Azure Resource Manager APIs to return error details for failed operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Monitors
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Monitors_ListLinkableEnvironments
