openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure NetApp Files
  description: The Azure NetApp Files service is an enterprise-class, high-performant, metered file storage service. Besides using the Azure portal, you can also manage resources by using REST API. The REST API for the Azure NetApp Files service defines HTTP operations against the supported resources.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AccountName:
      name: accountName
      in: path
      description: The name of the NetApp account
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$
        type: string
    PoolName:
      name: poolName
      in: path
      description: The name of the capacity pool
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$
        minLength: 1
        maxLength: 64
        type: string
    VolumeName:
      name: volumeName
      in: path
      description: The name of the volume
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$
        minLength: 1
        maxLength: 64
        type: string
    MountTargetName:
      name: mountTargetName
      in: path
      description: The name of the mount target
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SnapshotName:
      name: snapshotName
      in: path
      description: The name of the snapshot
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SnapshotPolicyName:
      name: snapshotPolicyName
      in: path
      description: The name of the snapshot policy
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    BackupPolicyName:
      name: backupPolicyName
      in: path
      description: Backup policy Name which uniquely identify backup policy.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    QuotaLimitName:
      name: quotaLimitName
      in: path
      description: The name of the Quota Limit
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VolumeGroupName:
      name: volumeGroupName
      in: path
      description: The name of the volumeGroup
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$
        minLength: 1
        maxLength: 64
        type: string
    SubvolumeName:
      name: subvolumeName
      in: path
      description: The name of the subvolume.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$
        minLength: 1
        maxLength: 64
        type: string
    VolumeQuotaRuleName:
      name: volumeQuotaRuleName
      in: path
      description: The name of volume quota rule
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    BackupName:
      name: backupName
      in: path
      description: The name of the backup
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_.]{0,255}$
        type: string
    BackupVaultName:
      name: backupVaultName
      in: path
      description: The name of the Backup Vault
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$
        type: string
  schemas:
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: Microsoft.NetApp REST API operation definition.
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: Display metadata associated with the operation.
          properties:
            provider:
              description: 'Service provider: Microsoft NetApp.'
              type: string
            resource:
              description: Resource on which the operation is performed etc.
              type: string
            operation:
              description: 'Type of operation: get, read, delete, etc.'
              type: string
            description:
              description: Operation description.
              type: string
        origin:
          type: string
          description: The origin of operations.
        properties:
          $ref: '#/components/schemas/OperationProperties'
          description: Properties of operation, include metric specifications.
          x-ms-client-flatten: true
      type: object
    OperationListResult:
      description: Result of the request to list Cloud Volume operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of Storage operations supported by the Storage resource provider.
      type: object
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      description: Properties of key vault.
      type: object
      required:
        - keyVaultUri
        - keyName
      properties:
        keyVaultId:
          type: string
          description: UUID v4 used to identify the Azure Key Vault configuration
          readOnly: true
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca7778
        keyVaultUri:
          type: string
          description: The Uri of KeyVault.
        keyName:
          type: string
          description: The name of KeyVault key.
        keyVaultResourceId:
          type: string
          description: The resource ID of KeyVault.
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.KeyVault/vaults
        status:
          type: string
          description: Status of the KeyVault connection.
          readOnly: true
          enum:
            - Created
            - Updating
            - InUse
            - Deleted
            - Error
          x-ms-enum:
            name: KeyVaultStatus
            modelAsString: true
            values:
              - value: Created
                description: KeyVault connection created but not in use
              - value: InUse
                description: KeyVault connection in use by SMB Volume
              - value: Deleted
                description: KeyVault connection Deleted
              - value: Error
                description: Error with the KeyVault connection
              - value: Updating
                description: KeyVault connection Updating
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    OperationProperties:
      description: Properties of operation, include metric specifications.
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: One property of operation, include metric specifications.
      type: object
    ServiceSpecification:
      description: One property of operation, include metric specifications.
      properties:
        metricSpecifications:
          description: Metric specifications of operation.
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          x-ms-identifiers:
            - name
        logSpecifications:
          description: Log specification of operation.
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - name
      type: object
    MetricSpecification:
      description: Metric specification of operation.
      properties:
        name:
          type: string
          description: Name of metric specification.
        displayName:
          type: string
          description: Display name of metric specification.
        displayDescription:
          type: string
          description: Display description of metric specification.
        unit:
          type: string
          description: Unit could be Bytes or Count.
        supportedAggregationTypes:
          description: Support metric aggregation type.
          uniqueItems: false
          type: array
          items:
            enum:
              - Average
            type: string
            x-ms-enum:
              name: MetricAggregationType
              modelAsString: true
        supportedTimeGrainTypes:
          type: array
          description: The supported time grain types for the metrics.
          items:
            type: string
        internalMetricName:
          type: string
          description: The internal metric name.
        enableRegionalMdmAccount:
          description: Whether or not the service is using regional MDM accounts.
          type: boolean
        sourceMdmAccount:
          type: string
          description: The source MDM account.
        sourceMdmNamespace:
          type: string
          description: The source MDM namespace.
        dimensions:
          description: Dimensions of blobs, including blob type and access tier.
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
          x-ms-identifiers:
            - name
        aggregationType:
          type: string
          description: Aggregation type could be Average.
        fillGapWithZero:
          type: boolean
          description: The property to decide fill gap with zero or not.
        category:
          type: string
          description: The category this metric specification belong to, could be Capacity.
        resourceIdDimensionNameOverride:
          type: string
          description: Account Resource Id.
        isInternal:
          description: Whether the metric is internal.
          type: boolean
      type: object
    LogSpecification:
      description: Log Definition of a single resource metric.
      type: object
      properties:
        name:
          description: Name of log specification.
          type: string
        displayName:
          description: Display name of log specification.
          type: string
    Dimension:
      description: Dimension of blobs, possibly be blob type or access tier.
      properties:
        name:
          type: string
          description: Display name of dimension.
        displayName:
          type: string
          description: Display name of dimension.
      type: object
    CheckAvailabilityResponse:
      description: Information regarding availability of a resource.
      type: object
      properties:
        isAvailable:
          description: <code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.
          type: boolean
        reason:
          description: <code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.
          enum:
            - Invalid
            - AlreadyExists
          type: string
          x-ms-enum:
            name: InAvailabilityReasonType
            modelAsString: true
        message:
          description: If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.
          type: string
    regionInfosList:
      description: List of regionInfo resources
      type: object
      properties:
        value:
          description: A list of regionInfo resources
          type: array
          items:
            $ref: '#/components/schemas/regionInfoResource'
        nextLink:
          type: string
          description: URL to get the next set of results.
    regionInfoResource:
      description: Information regarding regionInfo Item.
      properties:
        properties:
          description: regionInfo properties
          $ref: '#/components/schemas/regionInfo'
          x-ms-client-flatten: true
      type: object
    regionInfo:
      description: Provides region specific information.
      type: object
      properties:
        storageToNetworkProximity:
          title: Storage to Network Proximity
          description: Provides storage to network proximity information in the region.
          type: string
          enum:
            - Default
            - T1
            - T2
            - AcrossT2
            - T1AndT2
            - T1AndAcrossT2
            - T2AndAcrossT2
            - T1AndT2AndAcrossT2
          x-ms-enum:
            name: RegionStorageToNetworkProximity
            modelAsString: true
            values:
              - value: Default
                description: Basic network connectivity.
              - value: T1
                description: Standard T1 network connectivity.
              - value: T2
                description: Standard T2 network connectivity.
              - value: AcrossT2
                description: Standard AcrossT2 network connectivity.
              - value: T1AndT2
                description: Standard T1 and T2 network connectivity.
              - value: T1AndAcrossT2
                description: Standard T1 and AcrossT2 network connectivity.
              - value: T2AndAcrossT2
                description: Standard T2 and AcrossT2 network connectivity.
              - value: T1AndT2AndAcrossT2
                description: Standard T1, T2 and AcrossT2 network connectivity.
          example: T2
        availabilityZoneMappings:
          title: Logical availability zone mappings.
          description: Provides logical availability zone mappings for the subscription for a region.
          type: array
          x-ms-identifiers:
            - availabilityZone
          items:
            type: object
            properties:
              availabilityZone:
                description: Logical availability zone.
                type: string
                example: '1'
              isAvailable:
                description: Available availability zone
                type: boolean
                example: true
    ResourceNameAvailabilityRequest:
      description: Resource name availability request content.
      required:
        - name
        - type
        - resourceGroup
      type: object
      properties:
        name:
          description: Resource name to verify.
          type: string
        type:
          description: Resource type used for verification.
          enum:
            - Microsoft.NetApp/netAppAccounts
            - Microsoft.NetApp/netAppAccounts/capacityPools
            - Microsoft.NetApp/netAppAccounts/capacityPools/volumes
            - Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots
          type: string
          x-ms-enum:
            name: CheckNameResourceTypes
            modelAsString: true
        resourceGroup:
          description: Resource group name.
          type: string
    FilePathAvailabilityRequest:
      description: File path availability request content - availability is based on the name and the subnetId.
      required:
        - name
        - subnetId
      type: object
      properties:
        name:
          description: File path to verify.
          type: string
        subnetId:
          type: string
          description: The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
    QuotaAvailabilityRequest:
      description: Quota availability request content.
      required:
        - name
        - type
        - resourceGroup
      type: object
      properties:
        name:
          description: Name of the resource to verify.
          type: string
        type:
          description: Resource type used for verification.
          enum:
            - Microsoft.NetApp/netAppAccounts
            - Microsoft.NetApp/netAppAccounts/capacityPools
            - Microsoft.NetApp/netAppAccounts/capacityPools/volumes
            - Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots
          type: string
          x-ms-enum:
            name: CheckQuotaNameResourceTypes
            modelAsString: true
        resourceGroup:
          description: Resource group name.
          type: string
    SubscriptionQuotaItemList:
      description: List of Subscription Quota Items
      type: object
      properties:
        value:
          description: A list of SubscriptionQuotaItems
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionQuotaItem'
    SubscriptionQuotaItem:
      description: Information regarding Subscription Quota Item.
      properties:
        properties:
          description: SubscriptionQuotaItem properties
          $ref: '#/components/schemas/SubscriptionQuotaItemProperties'
          x-ms-client-flatten: true
      type: object
    SubscriptionQuotaItemProperties:
      description: SubscriptionQuotaItem Properties
      type: object
      properties:
        current:
          description: The current quota value.
          readOnly: true
          type: integer
          format: int32
        default:
          description: The default quota value.
          readOnly: true
          type: integer
          format: int32
    netAppAccountList:
      description: List of NetApp account resources
      type: object
      properties:
        value:
          type: array
          description: Multiple NetApp accounts
          items:
            $ref: '#/components/schemas/netAppAccount'
        nextLink:
          type: string
          description: URL to get the next set of results.
    netAppAccount:
      description: NetApp account resource
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        properties:
          description: NetApp Account properties
          $ref: '#/components/schemas/accountProperties'
          x-ms-client-flatten: true
        identity:
          description: The identity used for the resource.
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    netAppAccountPatch:
      description: NetApp account patch resource
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          description: Resource location
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        properties:
          description: NetApp Account properties
          $ref: '#/components/schemas/accountProperties'
          x-ms-client-flatten: true
        identity:
          description: The identity used for the resource.
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    accountProperties:
      description: NetApp account properties
      type: object
      properties:
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
        activeDirectories:
          description: Active Directories
          type: array
          items:
            $ref: '#/components/schemas/activeDirectory'
          x-ms-identifiers:
            - activeDirectoryId
        encryption:
          description: Encryption settings
          $ref: '#/components/schemas/accountEncryption'
        disableShowmount:
          type: boolean
          readOnly: true
          nullable: true
          description: Shows the status of disableShowmount for all volumes under the subscription, null equals false
    activeDirectory:
      description: Active Directory
      type: object
      properties:
        activeDirectoryId:
          type: string
          nullable: true
          description: Id of the Active Directory
        username:
          type: string
          description: A domain user account with permission to create machine accounts
        password:
          type: string
          x-ms-secret: true
          maxLength: 64
          description: Plain text password of Active Directory domain administrator, value is masked in the response
        domain:
          type: string
          description: Name of the Active Directory domain
        dns:
          type: string
          description: Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain
          pattern: ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$
          example: 101.102.103.104,101.102.103.105
        status:
          type: string
          description: Status of the Active Directory
          readOnly: true
          enum:
            - Created
            - Updating
            - InUse
            - Deleted
            - Error
          x-ms-enum:
            name: ActiveDirectoryStatus
            modelAsString: true
            values:
              - value: Created
                description: Active Directory created but not in use
              - value: InUse
                description: Active Directory in use by SMB Volume
              - value: Deleted
                description: Active Directory Deleted
              - value: Error
                description: Error with the Active Directory
              - value: Updating
                description: Active Directory Updating
        statusDetails:
          type: string
          description: Any details in regards to the Status of the Active Directory
          readOnly: true
        smbServerName:
          type: string
          description: NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
        organizationalUnit:
          type: string
          default: CN=Computers
          description: The Organizational Unit (OU) within the Windows Active Directory
        site:
          type: string
          description: The Active Directory site the service will limit Domain Controller discovery to
        backupOperators:
          description: Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
          example:
            - user1
            - user2
        administrators:
          description: Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
          example:
            - user1
            - user2
        kdcIP:
          type: string
          pattern: ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$
          description: kdc server IP addresses for the active directory machine. This optional parameter is used only while creating kerberos volume.
          example: 101.102.103.104
        adName:
          type: string
          maxLength: 64
          minLength: 1
          description: Name of the active directory machine. This optional parameter is used only while creating kerberos volume
          example: ADServerName
        serverRootCACertificate:
          type: string
          maxLength: 10240
          minLength: 1
          description: When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.
          x-ms-secret: true
          example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        aesEncryption:
          type: boolean
          description: If enabled, AES encryption will be enabled for SMB communication.
        ldapSigning:
          type: boolean
          description: Specifies whether or not the LDAP traffic needs to be signed.
        securityOperators:
          type: array
          description: Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier
          items:
            type: string
            maxLength: 255
            minLength: 1
          example:
            - user1
            - user2
        ldapOverTLS:
          type: boolean
          description: Specifies whether or not the LDAP traffic needs to be secured via TLS.
        allowLocalNfsUsersWithLdap:
          type: boolean
          description: ' If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes.'
        encryptDCConnections:
          type: boolean
          description: If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted.
        ldapSearchScope:
          description: LDAP Search scope options
          $ref: '#/components/schemas/ldapSearchScopeOpt'
        preferredServersForLdapClient:
          type: string
          maxLength: 32
          pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$
          description: Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.
          example: 101.102.103.104, 101.102.103.105
    ldapSearchScopeOpt:
      type: object
      description: 'LDAP search scope '
      properties:
        userDN:
          type: string
          description: This specifies the user DN, which overrides the base DN for user lookups.
          maxLength: 255
          example: OU=fin,OU=hr,dc=domain,dc=com
        groupDN:
          type: string
          description: This specifies the group DN, which overrides the base DN for group lookups.
          maxLength: 255
          example: OU=fin,OU=hr,dc=domain,dc=com
        groupMembershipFilter:
          type: string
          description: This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.
          maxLength: 255
          example: cn=*99
    accountEncryption:
      type: object
      description: Encryption settings
      properties:
        keySource:
          type: string
          description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault'
          enum:
            - Microsoft.NetApp
            - Microsoft.KeyVault
          x-ms-enum:
            name: KeySource
            modelAsString: true
            values:
              - value: Microsoft.NetApp
                description: Microsoft-managed key encryption
              - value: Microsoft.KeyVault
                description: Customer-managed key encryption
          default: Microsoft.NetApp
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
          description: Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.
    EncryptionIdentity:
      description: Identity used to authenticate with key vault.
      type: object
      properties:
        principalId:
          type: string
          description: The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.
          readOnly: true
        userAssignedIdentity:
          type: string
          description: The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities.
    capacityPoolList:
      description: List of capacity pool resources
      type: object
      properties:
        value:
          description: List of Capacity pools
          type: array
          items:
            $ref: '#/components/schemas/capacityPool'
        nextLink:
          type: string
          description: URL to get the next set of results.
    capacityPool:
      description: Capacity pool resource
      required:
        - location
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        properties:
          description: Capacity pool properties
          $ref: '#/components/schemas/poolProperties'
          x-ms-client-flatten: true
      type: object
    poolProperties:
      description: Pool properties
      type: object
      required:
        - size
        - serviceLevel
      properties:
        poolId:
          title: poolId
          type: string
          readOnly: true
          description: UUID v4 used to identify the Pool
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca7778
        size:
          title: size
          type: integer
          format: int64
          description: Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).
          default: 4398046511104
        serviceLevel:
          title: serviceLevel
          $ref: '#/components/schemas/serviceLevel'
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
        totalThroughputMibps:
          type: number
          description: Total throughput of pool in MiB/s
          example: 164.221
          readOnly: true
        utilizedThroughputMibps:
          type: number
          description: Utilized throughput of pool in MiB/s
          example: 164.221
          readOnly: true
        qosType:
          title: qosType
          type: string
          description: The qos type of the pool
          enum:
            - Auto
            - Manual
          x-ms-enum:
            name: qosType
            modelAsString: true
            values:
              - value: Auto
                description: qos type Auto
              - value: Manual
                description: qos type Manual
          example: Manual
          default: Auto
        coolAccess:
          type: boolean
          default: false
          example: false
          description: If enabled (true) the pool can contain cool Access enabled volumes.
        encryptionType:
          title: encryptionType
          type: string
          nullable: true
          description: Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.
          x-ms-mutability:
            - read
            - create
          enum:
            - Single
            - Double
          x-ms-enum:
            name: encryptionType
            modelAsString: true
            values:
              - value: Single
                description: EncryptionType Single, volumes will use single encryption at rest
              - value: Double
                description: EncryptionType Double, volumes will use double encryption at rest
          example: Single
          default: Single
    capacityPoolPatch:
      description: Capacity pool patch resource
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          description: Resource location
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        properties:
          description: Capacity pool properties
          $ref: '#/components/schemas/poolPatchProperties'
          x-ms-client-flatten: true
      type: object
    poolPatchProperties:
      description: Patchable pool properties
      type: object
      properties:
        size:
          title: size
          type: integer
          format: int64
          description: Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).
          default: 4398046511104
        qosType:
          title: qosType
          type: string
          description: The qos type of the pool
          enum:
            - Auto
            - Manual
          x-ms-enum:
            name: qosType
            modelAsString: true
            values:
              - value: Auto
                description: qos type Auto
              - value: Manual
                description: qos type Manual
          example: Manual
          default: Auto
        coolAccess:
          type: boolean
          example: false
          description: If enabled (true) the pool can contain cool Access enabled volumes.
    volumeList:
      description: List of volume resources
      type: object
      properties:
        value:
          description: List of volumes
          type: array
          items:
            $ref: '#/components/schemas/volume'
        nextLink:
          type: string
          description: URL to get the next set of results.
    volume:
      description: Volume resource
      required:
        - location
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        zones:
          type: array
          description: Availability Zone
          x-ms-mutability:
            - read
            - create
          items:
            type: string
            maxLength: 255
            minLength: 1
            example: '1'
        properties:
          description: Volume properties
          $ref: '#/components/schemas/volumeProperties'
          x-ms-client-flatten: true
      type: object
    resourceIdentity:
      type: object
      description: Identity for the resource.
      properties:
        principalId:
          description: Object id of the identity resource
          type: string
          readOnly: true
        tenantId:
          description: The tenant id of the resource
          type: string
          readOnly: true
        type:
          description: 'Type of Identity. Supported values are: ''None'', ''SystemAssigned'''
          type: string
    resourceTags:
      additionalProperties:
        type: string
      description: Tags are a list of key-value pairs that describe the resource
      properties: {}
      type: object
    volumeProperties:
      description: Volume properties
      type: object
      required:
        - creationToken
        - usageThreshold
        - subnetId
      properties:
        fileSystemId:
          title: FileSystem ID
          type: string
          readOnly: true
          description: Unique FileSystem Identifier.
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca7778
        creationToken:
          title: Creation Token or File Path
          type: string
          description: A unique file path for the volume. Used when creating mount targets
          pattern: ^[a-zA-Z][a-zA-Z0-9\-]{0,79}$
          minLength: 1
          maxLength: 80
          example: some-amazing-filepath
        serviceLevel:
          title: serviceLevel
          $ref: '#/components/schemas/serviceLevel'
        usageThreshold:
          title: usageThreshold
          type: integer
          format: int64
          description: Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.
          minimum: 53687091200
          maximum: 2638827906662400
          default: 107374182400
          example: 107374182400
        exportPolicy:
          title: exportPolicy
          description: Set of export policy rules
          properties:
            rules:
              title: Export policy rule
              description: Export policy rule
              type: array
              items:
                $ref: '#/components/schemas/exportPolicyRule'
              x-ms-identifiers:
                - ruleIndex
        protocolTypes:
          title: protocolTypes
          description: Set of protocol types, default NFSv3, CIFS for SMB protocol
          type: array
          items:
            type: string
          example:
            - NFSv4.1
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
        snapshotId:
          title: Snapshot ID
          type: string
          nullable: true
          x-ms-mutability:
            - read
            - create
          description: Resource identifier used to identify the Snapshot.
          example: /subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1
        deleteBaseSnapshot:
          type: boolean
          description: If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false
        backupId:
          title: Backup ID
          type: string
          nullable: true
          x-ms-mutability:
            - read
            - create
          description: Resource identifier used to identify the Backup.
          example: /subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1
        baremetalTenantId:
          title: Baremetal Tenant ID
          type: string
          readOnly: true
          description: Unique Baremetal Tenant Identifier.
          example: 9560acf5-4e3a-12e7-9bdb-02007cca7779
        subnetId:
          type: string
          description: The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
        networkFeatures:
          $ref: '#/components/schemas/networkFeatures'
        networkSiblingSetId:
          title: Network Sibling Set ID
          description: Network Sibling Set ID for the the group of volumes sharing networking resources.
          type: string
          readOnly: true
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca3333
        storageToNetworkProximity:
          title: Storage to Network Proximity
          description: Provides storage to network proximity information for the volume.
          type: string
          enum:
            - Default
            - T1
            - T2
            - AcrossT2
          readOnly: true
          x-ms-enum:
            name: VolumeStorageToNetworkProximity
            modelAsString: true
            values:
              - value: Default
                description: Basic storage to network connectivity.
              - value: T1
                description: Standard T1 storage to network connectivity.
              - value: T2
                description: Standard T2 storage to network connectivity.
              - value: AcrossT2
                description: Standard AcrossT2 storage to network connectivity.
          example: T1
        mountTargets:
          title: mountTargets
          type: array
          readOnly: true
          description: List of mount targets
          items:
            $ref: '#/components/schemas/mountTargetProperties'
          x-ms-identifiers:
            - fileSystemId
        volumeType:
          type: string
          description: What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection
          example: DataProtection
        dataProtection:
          title: DataProtection
          description: DataProtection type volumes include an object containing details of the replication
          properties:
            backup:
              title: Backup
              description: Backup Properties
              type: object
              $ref: '#/components/schemas/volumeBackupProperties'
            replication:
              title: Replication
              description: Replication properties
              type: object
              $ref: '#/components/schemas/replicationObject'
            snapshot:
              title: Snapshot
              description: Snapshot properties.
              $ref: '#/components/schemas/volumeSnapshotProperties'
            volumeRelocation:
              title: VolumeRelocation
              description: VolumeRelocation properties
              type: object
              $ref: '#/components/schemas/volumeRelocationProperties'
        isRestoring:
          type: boolean
          description: Restoring
        snapshotDirectoryVisible:
          type: boolean
          default: true
          description: If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true).
        kerberosEnabled:
          type: boolean
          description: Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later
          x-ms-mutability:
            - read
            - create
          example: false
          default: false
        securityStyle:
          type: string
          description: The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol
          default: unix
          enum:
            - ntfs
            - unix
          x-ms-enum:
            name: SecurityStyle
            modelAsString: true
        smbEncryption:
          type: boolean
          description: Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later
          example: false
          default: false
        smbAccessBasedEnumeration:
          $ref: '#/components/schemas/smbAccessBasedEnumeration'
        smbNonBrowsable:
          $ref: '#/components/schemas/smbNonBrowsable'
        smbContinuouslyAvailable:
          type: boolean
          description: Enables continuously available share property for smb volume. Only applicable for SMB volume
          example: false
          default: false
        throughputMibps:
          title: Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume
          type: number
          nullable: true
          example: 128.223
        actualThroughputMibps:
          type: number
          description: Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel
          example: 164.221
          readOnly: true
        encryptionKeySource:
          description: 'Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = ''Microsoft.KeyVault''. Possible values (case-insensitive) are: ''Microsoft.NetApp, Microsoft.KeyVault'''
          type: string
          enum:
            - Microsoft.NetApp
            - Microsoft.KeyVault
          x-ms-enum:
            name: EncryptionKeySource
            modelAsString: true
            values:
              - value: Microsoft.NetApp
                description: Microsoft-managed key encryption
              - value: Microsoft.KeyVault
                description: Customer-managed key encryption
          default: Microsoft.NetApp
        keyVaultPrivateEndpointResourceId:
          type: string
          description: The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'.
        ldapEnabled:
          type: boolean
          description: Specifies whether LDAP is enabled or not for a given NFS volume.
          example: false
          default: false
        coolAccess:
          type: boolean
          description: Specifies whether Cool Access(tiering) is enabled for the volume.
          example: false
          default: false
        coolnessPeriod:
          type: integer
          description: Specifies the number of days after which data that is not accessed by clients will be tiered.
          example: 7
          minimum: 2
          maximum: 183
          format: int32
        coolAccessRetrievalPolicy:
          $ref: '#/components/schemas/coolAccessRetrievalPolicy'
        unixPermissions:
          type: string
          description: 'UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.'
          minLength: 4
          maxLength: 4
          nullable: true
          example: '0770'
        cloneProgress:
          description: When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.
          type: integer
          format: int32
          example: 10
          nullable: true
          readOnly: true
        fileAccessLogs:
          type: string
          description: Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.
          readOnly: true
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: fileAccessLogs
            modelAsString: true
            values:
              - value: Enabled
                description: fileAccessLogs are enabled
              - value: Disabled
                description: fileAccessLogs are not enabled
          example: Disabled
          default: Disabled
        avsDataStore:
          title: avsDataStore
          type: string
          description: Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: avsDataStore
            modelAsString: true
            values:
              - value: Enabled
                description: avsDataStore is enabled
              - value: Disabled
                description: avsDataStore is disabled
          example: Enabled
          default: Disabled
        dataStoreResourceId:
          title: dataStoreResourceId
          description: Data store resource unique identifier
          type: array
          items:
            type: string
          readOnly: true
        isDefaultQuotaEnabled:
          type: boolean
          description: Specifies if default quota is enabled for the volume.
          example: false
          default: false
        defaultUserQuotaInKiBs:
          type: integer
          format: int64
          description: Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .
          example: 4
          default: 0
        defaultGroupQuotaInKiBs:
          type: integer
          format: int64
          description: Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.
          example: 4
          default: 0
        maximumNumberOfFiles:
          type: integer
          format: int64
          readOnly: true
          description: Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.
          example: 100000000
        volumeGroupName:
          type: string
          description: Volume Group Name
          readOnly: true
        capacityPoolResourceId:
          type: string
          description: Pool Resource Id used in case of creating a volume through volume group
        proximityPlacementGroup:
          type: string
          description: Proximity placement group associated with the volume
          example: /subscriptions/aaaaaaaa-1234-1234-1224-234567891011/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg
        t2Network:
          type: string
          description: T2 network information
          example: Test-T2-Alias
          readOnly: true
        volumeSpecName:
          type: string
          description: Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log
          example: Data
        encrypted:
          type: boolean
          description: Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.
          readOnly: true
        placementRules:
          title: Volume placement rules
          description: Application specific placement rules for the particular volume
          type: array
          items:
            $ref: '#/components/schemas/placementKeyValuePairs'
          x-ms-identifiers:
            - key
        enableSubvolumes:
          type: string
          description: Flag indicating whether subvolume operations are enabled on the volume
          example: Enabled
          default: Disabled
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: enableSubvolumes
            modelAsString: true
            values:
              - value: Enabled
                description: subvolumes are enabled
              - value: Disabled
                description: subvolumes are not enabled
        provisionedAvailabilityZone:
          title: Provisioned Availability Zone
          type: string
          readOnly: true
          description: The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.
          example: '2'
          nullable: true
        isLargeVolume:
          title: Is Large Volume
          type: boolean
          description: Specifies whether volume is a Large Volume or Regular Volume.
          example: false
          default: false
        originatingResourceId:
          title: Originating Resource Id
          type: string
          description: Id of the snapshot or backup that the volume is restored from.
          example: /subscriptions/aaaaaaaa-1234-1234-1224-234567891011/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot
          readOnly: true
          nullable: true
    exportPolicyRule:
      description: Volume Export Policy Rule
      type: object
      properties:
        ruleIndex:
          type: integer
          description: Order index
          format: int32
        unixReadOnly:
          type: boolean
          description: Read only access
        unixReadWrite:
          type: boolean
          description: Read and write access
        kerberos5ReadOnly:
          type: boolean
          description: Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later
          example: false
          default: false
        kerberos5ReadWrite:
          type: boolean
          description: Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later
          example: false
          default: false
        kerberos5iReadOnly:
          type: boolean
          description: Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later
          example: false
          default: false
        kerberos5iReadWrite:
          type: boolean
          description: Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later
          example: false
          default: false
        kerberos5pReadOnly:
          type: boolean
          description: Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later
          example: false
          default: false
        kerberos5pReadWrite:
          type: boolean
          description: Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later
          example: false
          default: false
        cifs:
          type: boolean
          description: Allows CIFS protocol
        nfsv3:
          type: boolean
          description: Allows NFSv3 protocol. Enable only for NFSv3 type volumes
        nfsv41:
          type: boolean
          description: Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes
        allowedClients:
          type: string
          description: Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
        hasRootAccess:
          type: boolean
          description: Has root access to volume
          example: true
          default: true
        chownMode:
          type: string
          description: This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.
          default: Restricted
          enum:
            - Restricted
            - Unrestricted
          x-ms-enum:
            name: ChownMode
            modelAsString: true
    replicationObject:
      description: Replication properties
      type: object
      required:
        - remoteVolumeResourceId
      properties:
        replicationId:
          type: string
          description: Id
          readOnly: true
        endpointType:
          type: string
          description: Indicates whether the local volume is the source or destination for the Volume Replication
          enum:
            - src
            - dst
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        replicationSchedule:
          type: string
          description: Schedule
          enum:
            - _10minutely
            - hourly
            - daily
          x-ms-enum:
            name: ReplicationSchedule
            modelAsString: true
        remoteVolumeResourceId:
          type: string
          description: The resource ID of the remote volume.
        remoteVolumeRegion:
          type: string
          description: The remote region for the other end of the Volume Replication.
    replication:
      description: Replication properties
      type: object
      required:
        - remoteVolumeResourceId
      properties:
        replicationId:
          type: string
          readOnly: true
          description: UUID v4 used to identify the replication.
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 5ee41ce4-8f44-4ecd-ad89-8c1e573fe3b8
        endpointType:
          type: string
          description: Indicates whether the local volume is the source or destination for the Volume Replication
          enum:
            - src
            - dst
          x-ms-enum:
            name: EndpointType
            modelAsString: true
        replicationSchedule:
          type: string
          description: Schedule
          enum:
            - _10minutely
            - hourly
            - daily
          x-ms-enum:
            name: ReplicationSchedule
            modelAsString: true
        remoteVolumeResourceId:
          type: string
          description: The resource ID of the remote volume.
        remoteVolumeRegion:
          type: string
          description: The remote region for the other end of the Volume Replication.
    volumeRelocationProperties:
      description: Volume relocation properties
      type: object
      properties:
        relocationRequested:
          type: boolean
          description: Has relocation been requested for this volume
        readyToBeFinalized:
          type: boolean
          readOnly: true
          description: Has relocation finished and is ready to be cleaned up
    volumeSnapshotProperties:
      description: Volume Snapshot Properties
      type: object
      properties:
        snapshotPolicyId:
          type: string
          description: Snapshot Policy ResourceId
    replicationStatus:
      description: Replication status
      type: object
      properties:
        healthy:
          type: boolean
          description: Replication health check
        relationshipStatus:
          type: string
          description: Status of the mirror relationship
          enum:
            - Idle
            - Transferring
          x-ms-enum:
            name: RelationshipStatus
            modelAsString: true
        mirrorState:
          type: string
          description: The status of the replication
          enum:
            - Uninitialized
            - Mirrored
            - Broken
          x-ms-enum:
            name: MirrorState
            modelAsString: true
        totalProgress:
          type: string
          description: The progress of the replication
        errorMessage:
          type: string
          description: Displays error message if the replication is in an error state
    listReplications:
      description: List Replications
      type: object
      properties:
        value:
          description: A list of replications
          type: array
          items:
            $ref: '#/components/schemas/replication'
          x-ms-identifiers: []
    volumePatch:
      description: Volume patch resource
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          description: Resource location
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        properties:
          description: Patchable volume properties
          $ref: '#/components/schemas/volumePatchProperties'
          x-ms-client-flatten: true
      type: object
    volumePatchProperties:
      description: Patchable volume properties
      type: object
      properties:
        serviceLevel:
          title: serviceLevel
          $ref: '#/components/schemas/serviceLevel'
        usageThreshold:
          title: usageThreshold
          type: integer
          format: int64
          description: Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.
          minimum: 53687091200
          maximum: 2638827906662400
          default: 107374182400
          example: 107374182400
        exportPolicy:
          title: exportPolicy
          description: Set of export policy rules
          properties:
            rules:
              title: Export policy rule
              description: Export policy rule
              type: array
              items:
                $ref: '#/components/schemas/exportPolicyRule'
              x-ms-identifiers:
                - ruleIndex
        protocolTypes:
          title: protocolTypes
          description: Set of protocol types, default NFSv3, CIFS for SMB protocol
          type: array
          items:
            type: string
          example:
            - NFSv4.1
        throughputMibps:
          title: Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume
          type: number
          example: 128.22
        dataProtection:
          title: DataProtection
          description: DataProtection type volumes include an object containing details of the replication
          properties:
            backup:
              title: Backup
              description: Backup Properties
              type: object
              $ref: '#/components/schemas/volumeBackupProperties'
            snapshot:
              title: Snapshot
              description: Snapshot properties.
              $ref: '#/components/schemas/volumeSnapshotProperties'
        isDefaultQuotaEnabled:
          type: boolean
          description: Specifies if default quota is enabled for the volume.
          example: false
          default: false
        defaultUserQuotaInKiBs:
          type: integer
          format: int64
          description: Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .
          example: 4
          default: 0
        defaultGroupQuotaInKiBs:
          type: integer
          format: int64
          description: Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.
          example: 4
          default: 0
        unixPermissions:
          type: string
          description: 'UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.'
          minLength: 4
          maxLength: 4
          nullable: true
          example: '0770'
        coolAccess:
          type: boolean
          description: Specifies whether Cool Access(tiering) is enabled for the volume.
          example: false
        coolnessPeriod:
          type: integer
          description: Specifies the number of days after which data that is not accessed by clients will be tiered.
          example: 7
          minimum: 2
          maximum: 183
          format: int32
        coolAccessRetrievalPolicy:
          $ref: '#/components/schemas/coolAccessRetrievalPolicy'
        snapshotDirectoryVisible:
          type: boolean
          description: If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots.
        smbAccessBasedEnumeration:
          $ref: '#/components/schemas/smbAccessBasedEnumeration'
        smbNonBrowsable:
          $ref: '#/components/schemas/smbNonBrowsable'
    mountTarget:
      description: Mount Target
      required:
        - location
        - properties
      properties:
        location:
          type: string
          description: Resource location
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
          x-ms-client-flatten: true
        properties:
          description: Mount Target Properties
          $ref: '#/components/schemas/mountTargetProperties'
          x-ms-client-flatten: true
      type: object
    mountTargetProperties:
      description: Mount target properties
      type: object
      required:
        - fileSystemId
      properties:
        mountTargetId:
          title: mountTargetId
          type: string
          readOnly: true
          description: UUID v4 used to identify the MountTarget
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca3333
        fileSystemId:
          title: fileSystemId
          type: string
          description: UUID v4 used to identify the MountTarget
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca3333
        ipAddress:
          title: ipAddress
          description: The mount target's IPv4 address
          type: string
          readOnly: true
          example: 1.2.3.4
        smbServerFqdn:
          title: smbServerFQDN
          description: The SMB server's Fully Qualified Domain Name, FQDN
          type: string
          example: fullyqualified.domainname.com
    snapshotsList:
      description: List of Snapshots
      type: object
      properties:
        value:
          description: A list of Snapshots
          type: array
          items:
            $ref: '#/components/schemas/snapshot'
    snapshot:
      description: Snapshot of a Volume
      required:
        - location
      properties:
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - read
            - create
        properties:
          description: Snapshot Properties
          $ref: '#/components/schemas/snapshotProperties'
          x-ms-client-flatten: true
      type: object
    snapshotPatch:
      description: Snapshot patch
      type: object
      properties: {}
    snapshotProperties:
      description: Snapshot properties
      type: object
      properties:
        snapshotId:
          title: snapshotId
          type: string
          readOnly: true
          description: UUID v4 used to identify the Snapshot
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca3333
        created:
          title: name
          type: string
          format: date-time
          readOnly: true
          description: The creation date of the snapshot
          example: '2017-08-15 13:23:33'
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
    snapshotPolicyProperties:
      description: Snapshot policy properties
      type: object
      properties:
        hourlySchedule:
          title: hourlySchedule
          description: Schedule for hourly snapshots
          type: object
          $ref: '#/components/schemas/hourlySchedule'
        dailySchedule:
          title: dailySchedule
          description: Schedule for daily snapshots
          type: object
          $ref: '#/components/schemas/dailySchedule'
        weeklySchedule:
          title: weeklySchedule
          description: Schedule for weekly snapshots
          type: object
          $ref: '#/components/schemas/weeklySchedule'
        monthlySchedule:
          title: monthlySchedule
          description: Schedule for monthly snapshots
          type: object
          $ref: '#/components/schemas/monthlySchedule'
        enabled:
          type: boolean
          description: The property to decide policy is enabled or not
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
    snapshotPolicy:
      description: Snapshot policy information
      required:
        - location
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        properties:
          description: Snapshot policy Properties
          $ref: '#/components/schemas/snapshotPolicyProperties'
          x-ms-client-flatten: true
      type: object
    snapshotPoliciesList:
      description: List of Snapshot Policies
      type: object
      properties:
        value:
          description: A list of snapshot policies
          type: array
          items:
            $ref: '#/components/schemas/snapshotPolicy'
    snapshotPolicyDetails:
      description: Snapshot policy properties
      properties:
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - read
            - create
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        properties:
          description: Snapshot policy Properties
          $ref: '#/components/schemas/snapshotPolicyProperties'
          x-ms-client-flatten: true
      type: object
    snapshotPolicyPatch:
      description: Snapshot policy Details for create and update
      properties:
        location:
          type: string
          description: Resource location
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        properties:
          description: Snapshot Policy properties
          $ref: '#/components/schemas/snapshotPolicyProperties'
          x-ms-client-flatten: true
      type: object
    snapshotPolicyVolumeList:
      description: Volumes associated with snapshot policy
      type: object
      properties:
        value:
          description: List of volumes
          type: array
          items:
            $ref: '#/components/schemas/volume'
    hourlySchedule:
      description: Hourly Schedule properties
      type: object
      properties:
        snapshotsToKeep:
          type: integer
          description: Hourly snapshot count to keep
          format: int32
        minute:
          type: integer
          description: Indicates which minute snapshot should be taken
          example: 30
          format: int32
        usedBytes:
          type: integer
          description: Resource size in bytes, current storage usage for the volume in bytes
          format: int64
    dailySchedule:
      description: Daily Schedule properties
      type: object
      properties:
        snapshotsToKeep:
          type: integer
          description: Daily snapshot count to keep
          format: int32
        hour:
          type: integer
          description: Indicates which hour in UTC timezone a snapshot should be taken
          example: 11
          format: int32
        minute:
          type: integer
          description: Indicates which minute snapshot should be taken
          example: 30
          format: int32
        usedBytes:
          type: integer
          description: Resource size in bytes, current storage usage for the volume in bytes
          format: int64
    weeklySchedule:
      description: Weekly Schedule properties, make a snapshot every week at a specific day or days
      type: object
      properties:
        snapshotsToKeep:
          type: integer
          description: Weekly snapshot count to keep
          format: int32
        day:
          type: string
          description: Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
          example: Sunday,Monday
        hour:
          type: integer
          description: Indicates which hour in UTC timezone a snapshot should be taken
          example: 11
          format: int32
        minute:
          type: integer
          description: Indicates which minute snapshot should be taken
          example: 30
          format: int32
        usedBytes:
          type: integer
          description: Resource size in bytes, current storage usage for the volume in bytes
          format: int64
    monthlySchedule:
      description: Monthly Schedule properties
      type: object
      properties:
        snapshotsToKeep:
          type: integer
          description: Monthly snapshot count to keep
          format: int32
        daysOfMonth:
          type: string
          description: Indicates which days of the month snapshot should be taken. A comma delimited string.
          example: 1,11,21
        hour:
          type: integer
          description: Indicates which hour in UTC timezone a snapshot should be taken
          example: 11
          format: int32
        minute:
          type: integer
          description: Indicates which minute snapshot should be taken
          example: 30
          format: int32
        usedBytes:
          type: integer
          description: Resource size in bytes, current storage usage for the volume in bytes
          format: int64
    volumeRevert:
      description: revert a volume to the snapshot
      type: object
      properties:
        snapshotId:
          type: string
          description: Resource id of the snapshot
    authorizeRequest:
      description: Authorize request
      type: object
      properties:
        remoteVolumeResourceId:
          type: string
          description: Resource id of the remote volume
    breakReplicationRequest:
      description: Break replication request
      type: object
      properties:
        forceBreakReplication:
          type: boolean
          description: If replication is in status transferring and you want to force break the replication, set to true
    reestablishReplicationRequest:
      description: Re-establish request object supplied in the body of the operation.
      type: object
      properties:
        sourceVolumeId:
          type: string
          description: Resource id of the source volume for the replication
    relocateVolumeRequest:
      description: Relocate volume request
      type: object
      properties:
        creationToken:
          type: string
          description: New creation token for the volume that controls the mount point name
    breakFileLocksRequest:
      description: Break file locks request
      type: object
      properties:
        clientIp:
          type: string
          description: To clear file locks on a volume for a particular client
          pattern: ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
          example: 101.102.103.104
        confirmRunningDisruptiveOperation:
          type: boolean
          description: Break File locks could be a disruptive operation for application as locks on the volume will be broken, if want to process, set to true.
          default: false
    poolChangeRequest:
      description: Pool change request
      type: object
      required:
        - newPoolResourceId
      properties:
        newPoolResourceId:
          type: string
          description: Resource id of the pool to move volume to
    backupPolicyProperties:
      description: Backup policy properties
      type: object
      properties:
        backupPolicyId:
          type: string
          readOnly: true
          description: Backup Policy Resource ID
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
        dailyBackupsToKeep:
          type: integer
          description: Daily backups count to keep
          format: int32
        weeklyBackupsToKeep:
          type: integer
          description: Weekly backups count to keep
          format: int32
        monthlyBackupsToKeep:
          type: integer
          description: Monthly backups count to keep
          format: int32
        volumesAssigned:
          type: integer
          readOnly: true
          description: Volumes using current backup policy
          format: int32
        enabled:
          type: boolean
          description: The property to decide policy is enabled or not
        volumeBackups:
          description: A list of volumes assigned to this policy
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/volumeBackups'
          x-ms-identifiers:
            - volumeName
    backupPolicy:
      description: Backup policy information
      required:
        - location
        - properties
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        etag:
          readOnly: true
          type: string
          description: A unique read-only string that changes whenever the resource is updated.
        properties:
          description: Backup policy Properties
          $ref: '#/components/schemas/backupPolicyProperties'
          x-ms-client-flatten: true
      type: object
    backupPoliciesList:
      description: List of Backup Policies
      type: object
      properties:
        value:
          description: A list of backup policies
          type: array
          items:
            $ref: '#/components/schemas/backupPolicy'
    backupPolicyPatch:
      description: Backup policy Details for create and update
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - read
            - create
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        properties:
          description: Backup policy Properties
          $ref: '#/components/schemas/backupPolicyProperties'
          x-ms-client-flatten: true
      type: object
    volumeBackups:
      description: Volume details using the backup policy
      type: object
      readOnly: true
      properties:
        volumeName:
          type: string
          description: Volume name
        volumeResourceId:
          type: string
          description: ResourceId used to identify the Volume
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetApp/netAppAccounts/capacityPools/volumes
        backupsCount:
          type: integer
          description: Total count of backups for volume
          format: int32
        policyEnabled:
          type: boolean
          description: Policy enabled
    restoreStatus:
      description: Restore status
      type: object
      properties:
        healthy:
          type: boolean
          readOnly: true
          description: Restore health status
        relationshipStatus:
          type: string
          readOnly: true
          description: Status of the restore SnapMirror relationship
          enum:
            - Idle
            - Transferring
            - Failed
            - Unknown
          x-ms-enum:
            name: RelationshipStatus
            modelAsString: true
        mirrorState:
          type: string
          readOnly: true
          description: The status of the restore
          enum:
            - Uninitialized
            - Mirrored
            - Broken
          x-ms-enum:
            name: MirrorState
            modelAsString: true
        unhealthyReason:
          type: string
          readOnly: true
          description: Reason for the unhealthy restore relationship
        errorMessage:
          type: string
          readOnly: true
          description: Displays error message if the restore is in an error state
        totalTransferBytes:
          type: integer
          format: int64
          readOnly: true
          description: Displays the total bytes transferred
    getGroupIdListForLDAPUserRequest:
      description: Get group Id list for LDAP User request
      type: object
      required:
        - username
      properties:
        username:
          type: string
          description: username is required to fetch the group to which user is part of
          maxLength: 255
          minLength: 1
    getGroupIdListForLDAPUserResponse:
      description: Group Id list for Ldap user
      type: object
      properties:
        groupIdsForLdapUser:
          description: Group Id list
          type: array
          items:
            type: string
          example:
            - '123'
            - '224'
    cloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/cloudErrorBody'
          description: Cloud error body.
      description: An error response from the service.
      type: object
    cloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
      description: An error response from the service.
      type: object
    serviceLevel:
      title: serviceLevel
      type: string
      description: The service level of the file system
      enum:
        - Standard
        - Premium
        - Ultra
        - StandardZRS
      default: Premium
      x-ms-enum:
        name: ServiceLevel
        modelAsString: true
        values:
          - value: Standard
            description: Standard service level
          - value: Premium
            description: Premium service level
          - value: Ultra
            description: Ultra service level
          - value: StandardZRS
            description: Zone redundant storage service level
    volumeQuotaRulesList:
      description: List of Volume Quota Rules
      type: object
      properties:
        value:
          description: A list of Volume Quota Rules
          type: array
          items:
            $ref: '#/components/schemas/volumeQuotaRule'
    volumeQuotaRule:
      description: Quota Rule of a Volume
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Volume Quota Rule Properties
          $ref: '#/components/schemas/volumeQuotaRulesProperties'
          x-ms-client-flatten: true
      type: object
    volumeQuotaRulePatch:
      description: Patchable Quota Rule of a Volume
      properties:
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        properties:
          description: Volume Quota Rule Properties
          $ref: '#/components/schemas/volumeQuotaRulesProperties'
          x-ms-client-flatten: true
      type: object
    volumeQuotaRulesProperties:
      description: Volume Quota Rule properties
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/netappProvisioningState'
        quotaSizeInKiBs:
          type: integer
          description: Size of quota
          format: int64
          example: '100006'
        quotaType:
          title: quotaType
          type: string
          description: Type of quota
          x-ms-mutability:
            - read
            - create
          enum:
            - DefaultUserQuota
            - DefaultGroupQuota
            - IndividualUserQuota
            - IndividualGroupQuota
          x-ms-enum:
            name: type
            modelAsString: true
            values:
              - value: DefaultUserQuota
                description: Default user quota
              - value: DefaultGroupQuota
                description: Default group quota
              - value: IndividualUserQuota
                description: Individual user quota
              - value: IndividualGroupQuota
                description: Individual group quota
          example: DefaultUserQuota
        quotaTarget:
          type: string
          description: UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>
          x-ms-mutability:
            - read
            - create
    volumeGroupList:
      description: List of volume group resources
      type: object
      properties:
        value:
          description: List of volume Groups
          type: array
          items:
            $ref: '#/components/schemas/volumeGroup'
    volumeGroup:
      description: Volume group resource
      properties:
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - read
            - create
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        properties:
          description: Volume group properties
          $ref: '#/components/schemas/volumeGroupListProperties'
          x-ms-client-flatten: true
      type: object
    volumeGroupDetails:
      description: Volume group resource for create
      properties:
        location:
          type: string
          description: Resource location
          x-ms-mutability:
            - read
            - create
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        properties:
          description: Volume group properties
          $ref: '#/components/schemas/volumeGroupProperties'
          x-ms-client-flatten: true
      type: object
    volumeGroupMetaData:
      description: Volume group properties
      type: object
      properties:
        groupDescription:
          type: string
          description: Group Description
          example: group description
        applicationType:
          type: string
          description: Application Type
          enum:
            - SAP-HANA
            - ORACLE
          x-ms-enum:
            name: ApplicationType
            modelAsString: true
          example: SAP-HANA
        applicationIdentifier:
          type: string
          description: Application specific identifier
          example: SH1
        globalPlacementRules:
          title: Global volume placement rules
          description: Application specific placement rules for the volume group
          type: array
          items:
            $ref: '#/components/schemas/placementKeyValuePairs'
          x-ms-identifiers:
            - key
        volumesCount:
          type: integer
          format: int64
          description: Number of volumes in volume group
          example: 5
          readOnly: true
    volumeGroupProperties:
      description: Volume group properties
      type: object
      properties:
        provisioningState:
          type: string
          description: Azure lifecycle management
          example: Available
          readOnly: true
        groupMetaData:
          title: groupMetaData
          description: Volume group details
          type: object
          $ref: '#/components/schemas/volumeGroupMetaData'
        volumes:
          description: List of volumes from group
          type: array
          items:
            $ref: '#/components/schemas/volumeGroupVolumeProperties'
    volumeGroupListProperties:
      description: Volume group properties
      type: object
      properties:
        provisioningState:
          type: string
          description: Azure lifecycle management
          example: Available
          readOnly: true
        groupMetaData:
          title: groupMetaData
          description: Volume group details
          type: object
          $ref: '#/components/schemas/volumeGroupMetaData'
    volumeGroupVolumeProperties:
      description: Volume resource
      x-ms-azure-resource: true
      required:
        - properties
      properties:
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
        zones:
          type: array
          description: Availability Zone
          x-ms-mutability:
            - read
            - create
          items:
            type: string
            maxLength: 255
            minLength: 1
            example: '1'
        properties:
          description: Volume properties
          $ref: '#/components/schemas/volumeProperties'
          x-ms-client-flatten: true
      type: object
    placementKeyValuePairs:
      description: Application specific parameters for the placement of volumes in the volume group
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          description: Key for an application specific parameter for the placement of volumes in the volume group
          example: key1
        value:
          type: string
          description: Value for an application specific parameter for the placement of volumes in the volume group
          example: value1
    networkSiblingSet:
      title: Network sibling set
      description: Describes the contents of a network sibling set.
      type: object
      properties:
        networkSiblingSetId:
          $ref: '#/components/schemas/networkSiblingSetId'
        subnetId:
          $ref: '#/components/schemas/subnetId'
        networkSiblingSetStateId:
          $ref: '#/components/schemas/networkSiblingSetStateId'
        networkFeatures:
          $ref: '#/components/schemas/networkFeatures'
        provisioningState:
          $ref: '#/components/schemas/networkSiblingSetProvisioningState'
        nicInfoList:
          type: array
          x-ms-identifiers: []
          description: List of NIC information
          items:
            $ref: '#/components/schemas/nicInfo'
    QueryNetworkSiblingSetRequest:
      title: QueryNetworkSiblingSetRequest
      description: Network sibling set query.
      type: object
      required:
        - networkSiblingSetId
        - subnetId
      properties:
        networkSiblingSetId:
          $ref: '#/components/schemas/networkSiblingSetId'
        subnetId:
          $ref: '#/components/schemas/subnetId'
    UpdateNetworkSiblingSetRequest:
      title: UpdateNetworkSiblingSetRequest
      description: Network sibling set update.
      type: object
      required:
        - networkSiblingSetId
        - subnetId
        - networkSiblingSetStateId
        - networkFeatures
      properties:
        networkSiblingSetId:
          $ref: '#/components/schemas/networkSiblingSetId'
        subnetId:
          $ref: '#/components/schemas/subnetId'
        networkSiblingSetStateId:
          $ref: '#/components/schemas/networkSiblingSetStateId'
        networkFeatures:
          $ref: '#/components/schemas/networkFeatures'
          description: Network features available to the volume.
    networkFeatures:
      title: Network features
      description: Network features available to the volume, or current state of update.
      type: string
      enum:
        - Basic
        - Standard
        - Basic_Standard
        - Standard_Basic
      x-ms-enum:
        name: NetworkFeatures
        modelAsString: true
        values:
          - value: Basic
            description: Basic network features.
          - value: Standard
            description: Standard network features.
          - value: Basic_Standard
            description: Updating from Basic to Standard network features.
          - value: Standard_Basic
            description: Updating from Standard to Basic network features.
      example: Standard
      default: Basic
    networkSiblingSetProvisioningState:
      readOnly: true
      type: string
      description: Gets the status of the NetworkSiblingSet at the time the operation was called.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Updating
      x-ms-enum:
        name: NetworkSiblingSetProvisioningState
        modelAsString: true
    networkSiblingSetId:
      title: Network Sibling Set ID
      description: Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      maxLength: 36
      minLength: 36
      example: 9760acf5-4638-11e7-9bdb-020073ca3333
    networkSiblingSetStateId:
      title: Network sibling set state Id
      description: Network sibling set state Id identifying the current state of the sibling set.
      type: string
      example: '12345_44420.8001578125'
    nicInfo:
      title: NIC information
      description: NIC information and list of volumes for which the NIC has the primary mount ip address.
      type: object
      properties:
        ipAddress:
          $ref: '#/components/schemas/ipAddress'
        volumeResourceIds:
          $ref: '#/components/schemas/volumeResourceIds'
    ipAddress:
      title: ipAddress
      type: string
      readOnly: true
      example: 1.2.3.4
    volumeResourceIds:
      title: Volume resource Ids
      type: array
      items:
        title: Resource Id of volume
        type: string
        format: arm-id
        x-ms-arm-id-details:
          allowedResources:
            - type: Microsoft.NetApp/netAppAccounts/capacityPools/volumes
    subnetId:
      title: Subnet resource Id
      description: The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}
      type: string
      format: arm-id
      x-ms-arm-id-details:
        allowedResources:
          - type: Microsoft.Network/virtualNetworks/subnets
    snapshotRestoreFiles:
      description: Restore payload for Single File Snapshot Restore
      type: object
      x-ms-azure-resource: true
      required:
        - filePaths
      properties:
        filePaths:
          description: List of files to be restored
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
            maxLength: 1024
            minLength: 1
          example:
            - /dir1/customer1.db
            - /dir1/customer2.db
        destinationPath:
          description: Destination folder where the files will be restored
          type: string
          example: /AVSdataStore
    subvolumesList:
      description: List of Subvolumes
      type: object
      properties:
        value:
          description: A list of Subvolumes
          type: array
          items:
            $ref: '#/components/schemas/subvolumeInfo'
        nextLink:
          type: string
          description: URL to get the next set of results.
    subvolumeInfo:
      description: Subvolume Information properties
      properties:
        properties:
          description: Subvolume Properties
          $ref: '#/components/schemas/subvolumeProperties'
          x-ms-client-flatten: true
      type: object
    subvolumePatchRequest:
      description: Subvolume Patch Request properties
      x-ms-azure-resource: true
      properties:
        properties:
          description: Subvolume Properties
          $ref: '#/components/schemas/subvolumePatchParams'
          x-ms-client-flatten: true
      type: object
    subvolumePatchParams:
      description: Parameters with which a subvolume can be updated
      type: object
      properties:
        size:
          title: size
          type: integer
          nullable: true
          format: int64
          description: Truncate subvolume to the provided size in bytes
          example: 5
        path:
          title: path
          type: string
          description: path to the subvolume
          example: /pathToSubvolume
    subvolumeProperties:
      description: This represents path associated with the subvolume
      type: object
      properties:
        path:
          title: path
          type: string
          description: Path to the subvolume
          example: /subvolume1
        size:
          title: size
          type: integer
          nullable: true
          format: int64
          description: Truncate subvolume to the provided size in bytes
          example: 5
        parentPath:
          title: name
          nullable: true
          type: string
          description: parent path to the subvolume
          example: /parentPath
        provisioningState:
          type: string
          description: Azure lifecycle management
          readOnly: true
          example: Available
    subvolumeModel:
      description: Result of the post subvolume and action is to get metadata of the subvolume.
      properties:
        id:
          type: string
          readOnly: true
          description: Resource Id
        name:
          type: string
          readOnly: true
          description: Resource name
        type:
          type: string
          readOnly: true
          description: Resource type
        properties:
          description: It represents the minimal properties of the subvolume.
          $ref: '#/components/schemas/subvolumeModelProperties'
          x-ms-client-flatten: true
      type: object
    subvolumeModelProperties:
      description: Properties which represents actual subvolume model which is stored as a file in the system.
      type: object
      properties:
        path:
          title: path
          type: string
          description: Path to the subvolume
          example: /subvolume1
        parentPath:
          title: parentpath
          type: string
          description: Path to the parent subvolume
          example: /parentPath
        size:
          title: size
          type: integer
          format: int64
          description: Size of subvolume
          example: 5
        bytesUsed:
          title: bytesUsed
          type: integer
          format: int64
          description: Bytes used
          example: 5
        permissions:
          title: permissions
          type: string
          description: Permissions of the subvolume
          example: '777'
        creationTimeStamp:
          title: creationTimeStamp
          type: string
          format: date-time
          description: Creation time and date
          example: '2017-08-15T13:23:33Z'
        accessedTimeStamp:
          title: accessedTimeStamp
          type: string
          format: date-time
          description: Most recent access time and date
          example: '2017-08-15T13:23:33Z'
        modifiedTimeStamp:
          title: modifiedTimeStamp
          type: string
          format: date-time
          description: Most recent modification time and date
          example: '2017-08-15T13:23:33Z'
        changedTimeStamp:
          title: changedTimeStamp
          type: string
          format: date-time
          description: Most recent change time and date
          example: '2017-08-15T13:23:33Z'
        provisioningState:
          type: string
          description: Azure lifecycle management
          example: Available
    netappProvisioningState:
      readOnly: true
      type: string
      description: Gets the status of the VolumeQuotaRule at the time the operation was called.
      enum:
        - Accepted
        - Creating
        - Patching
        - Deleting
        - Moving
        - Failed
        - Succeeded
      x-ms-enum:
        name: ProvisioningState
        modelAsString: false
    coolAccessRetrievalPolicy:
      type: string
      description: |-
        coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: 
         Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.
         OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.
         Never - No client-driven data is pulled from cool tier to standard storage.
      enum:
        - Default
        - OnRead
        - Never
      x-ms-enum:
        name: coolAccessRetrievalPolicy
        modelAsString: true
    smbAccessBasedEnumeration:
      title: smbAccessBasedEnumeration
      type: string
      description: Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume
      enum:
        - Disabled
        - Enabled
      x-ms-enum:
        name: smbAccessBasedEnumeration
        modelAsString: true
        values:
          - value: Disabled
            description: smbAccessBasedEnumeration share setting is disabled
          - value: Enabled
            description: smbAccessBasedEnumeration share setting is enabled
      nullable: true
      example: Enabled
    smbNonBrowsable:
      title: smbNonBrowsable
      type: string
      description: Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume
      enum:
        - Disabled
        - Enabled
      x-ms-enum:
        name: smbNonBrowsable
        modelAsString: true
        values:
          - value: Disabled
            description: smbNonBrowsable share setting is disabled
          - value: Enabled
            description: smbNonBrowsable share setting is enabled
      example: Enabled
    backupRestoreFiles:
      description: Restore payload for Single File Backup Restore
      type: object
      required:
        - fileList
        - destinationVolumeId
      properties:
        fileList:
          description: List of files to be restored
          type: array
          minItems: 1
          maxItems: 8
          items:
            type: string
            maxLength: 1024
            minLength: 1
          example:
            - /dir1/customer1.db
            - /dir1/customer2.db
        restoreFilePath:
          description: Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted from request then restore is done at the root folder of the destination volume by default
          type: string
          pattern: ^\/.*$
          example: /AVSdataStore
        destinationVolumeId:
          description: Resource Id of the destination volume on which the files need to be restored
          type: string
          example: /subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1
    volumeBackupProperties:
      description: Volume Backup Properties
      type: object
      properties:
        backupPolicyId:
          type: string
          description: Backup Policy Resource ID
        policyEnforced:
          type: boolean
          description: Policy Enforced
        backupVaultId:
          type: string
          description: Backup Vault Resource ID
    backupsList:
      description: List of Backups
      type: object
      properties:
        value:
          description: A list of Backups
          type: array
          items:
            $ref: '#/components/schemas/backup'
        nextLink:
          type: string
          description: URL to get the next set of results.
    backup:
      description: Backup under a Backup Vault
      required:
        - properties
      properties:
        properties:
          description: Backup Properties
          $ref: '#/components/schemas/backupProperties'
          x-ms-client-flatten: true
      type: object
    backupPatch:
      description: Backup patch
      properties:
        properties:
          description: Backup Patch Properties
          $ref: '#/components/schemas/backupPatchProperties'
          x-ms-client-flatten: true
      type: object
    backupProperties:
      description: Backup properties
      type: object
      required:
        - volumeResourceId
      properties:
        backupId:
          title: backupId
          type: string
          readOnly: true
          description: UUID v4 used to identify the Backup
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          maxLength: 36
          minLength: 36
          example: 9760acf5-4638-11e7-9bdb-020073ca3333
        creationDate:
          title: creationDate
          type: string
          format: date-time
          readOnly: true
          description: The creation date of the backup
          example: '2017-08-15 13:23:33'
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
        size:
          type: integer
          readOnly: true
          description: Size of backup in bytes
          format: int64
        label:
          type: string
          description: Label for backup
        backupType:
          title: backupType
          type: string
          readOnly: true
          description: Type of backup Manual or Scheduled
          enum:
            - Manual
            - Scheduled
          x-ms-enum:
            name: backupType
            modelAsString: true
            values:
              - value: Manual
                description: Manual backup
              - value: Scheduled
                description: Scheduled backup
          example: Manual
        failureReason:
          type: string
          readOnly: true
          description: Failure reason
        volumeResourceId:
          type: string
          description: ResourceId used to identify the Volume
          x-ms-mutability:
            - read
            - create
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetApp/netAppAccounts/capacityPools/volumes
        useExistingSnapshot:
          type: boolean
          description: Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups
          example: true
          default: false
          x-ms-mutability:
            - read
            - create
        snapshotName:
          type: string
          description: The name of the snapshot
          x-ms-mutability:
            - read
            - create
        backupPolicyResourceId:
          type: string
          readOnly: true
          description: ResourceId used to identify the backup policy
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.NetApp/netAppAccounts/backupPolicies
    backupPatchProperties:
      description: Backup patch properties
      type: object
      properties:
        label:
          type: string
          description: Label for backup
    backupStatus:
      description: Backup status
      type: object
      properties:
        healthy:
          type: boolean
          readOnly: true
          description: Backup health status
        relationshipStatus:
          type: string
          readOnly: true
          description: Status of the backup mirror relationship
          enum:
            - Idle
            - Transferring
            - Failed
            - Unknown
          x-ms-enum:
            name: RelationshipStatus
            modelAsString: true
        mirrorState:
          type: string
          readOnly: true
          description: The status of the backup
          enum:
            - Uninitialized
            - Mirrored
            - Broken
          x-ms-enum:
            name: MirrorState
            modelAsString: true
        unhealthyReason:
          type: string
          readOnly: true
          description: Reason for the unhealthy backup relationship
        errorMessage:
          type: string
          readOnly: true
          description: Displays error message if the backup is in an error state
        lastTransferSize:
          type: integer
          format: int64
          readOnly: true
          description: Displays the last transfer size
        lastTransferType:
          type: string
          readOnly: true
          description: Displays the last transfer type
        totalTransferBytes:
          type: integer
          format: int64
          readOnly: true
          description: Displays the total bytes transferred
        transferProgressBytes:
          type: integer
          format: int64
          readOnly: true
          description: Displays the total number of bytes transferred for the ongoing operation
    backupVaultsList:
      description: List of Backup Vaults
      type: object
      properties:
        value:
          description: A list of Backup Vaults
          type: array
          items:
            $ref: '#/components/schemas/backupVault'
        nextLink:
          type: string
          description: URL to get the next set of results.
    backupVault:
      description: Backup Vault information
      x-ms-azure-resource: true
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Backup Vault Properties
          $ref: '#/components/schemas/backupVaultProperties'
          x-ms-client-flatten: true
      type: object
    backupVaultPatch:
      description: Backup Vault information
      type: object
      x-ms-azure-resource: true
      properties:
        tags:
          description: Resource tags
          $ref: '#/components/schemas/resourceTags'
    backupVaultProperties:
      description: Backup Vault properties
      type: object
      properties:
        provisioningState:
          type: string
          readOnly: true
          description: Azure lifecycle management
    backupsMigrationRequest:
      description: Migrate Backups Request
      type: object
      x-ms-azure-resource: true
      required:
        - backupVaultId
      properties:
        backupVaultId:
          type: string
          description: The ResourceId of the Backup Vault
          example: /subscriptions/D633CC2E-722B-4AE1-B636-BBD9E4C60ED9/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1
  x-stackQL-resources:
    operations:
      id: azure_isv.netapp.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.NetApp~1operations?api-version=2024-03-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    resources:
      id: azure_isv.netapp.resources
      name: resources
      title: resources
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1checkNameAvailability?api-version=2024-03-01/post'
            operationId: NetAppResource_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckAvailabilityResponse
        check_file_path_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1checkFilePathAvailability?api-version=2024-03-01/post'
            operationId: NetAppResource_CheckFilePathAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckAvailabilityResponse
        check_quota_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1checkQuotaAvailability?api-version=2024-03-01/post'
            operationId: NetAppResource_CheckQuotaAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckAvailabilityResponse
        query_region_info:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1regionInfo?api-version=2024-03-01/get'
            operationId: NetAppResource_QueryRegionInfo
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: regionInfo
        query_network_sibling_set:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1queryNetworkSiblingSet?api-version=2024-03-01/post'
            operationId: NetAppResource_QueryNetworkSiblingSet
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: networkSiblingSet
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    resource_quota_limits:
      id: azure_isv.netapp.resource_quota_limits
      name: resource_quota_limits
      title: resource_quota_limits
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1quotaLimits?api-version=2024-03-01/get'
            operationId: NetAppResourceQuotaLimits_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionQuotaItemList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1quotaLimits~1{quotaLimitName}?api-version=2024-03-01/get'
            operationId: NetAppResourceQuotaLimits_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionQuotaItem
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_quota_limits/methods/get'
          - $ref: '#/components/x-stackQL-resources/resource_quota_limits/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    resource_region_info:
      id: azure_isv.netapp.resource_region_info
      name: resource_region_info
      title: resource_region_info
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1regionInfos?api-version=2024-03-01/get'
            operationId: NetAppResourceRegionInfos_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: regionInfosList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1regionInfos~1default?api-version=2024-03-01/get'
            operationId: NetAppResourceRegionInfos_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: regionInfoResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_region_info/methods/list'
          - $ref: '#/components/x-stackQL-resources/resource_region_info/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    resource_network_sibling_sets:
      id: azure_isv.netapp.resource_network_sibling_sets
      name: resource_network_sibling_sets
      title: resource_network_sibling_sets
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1locations~1{location}~1updateNetworkSiblingSet?api-version=2024-03-01/post'
            operationId: NetAppResourceNetworkSiblingSet_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: networkSiblingSet
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    accounts:
      id: azure_isv.netapp.accounts
      name: accounts
      title: accounts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.NetApp~1netAppAccounts?api-version=2024-03-01/get'
            operationId: Accounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: netAppAccountList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts?api-version=2024-03-01/get'
            operationId: Accounts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: netAppAccountList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}?api-version=2024-03-01/get'
            operationId: Accounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: netAppAccount
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}?api-version=2024-03-01/put'
            operationId: Accounts_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: netAppAccount
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}?api-version=2024-03-01/delete'
            operationId: Accounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}?api-version=2024-03-01/patch'
            operationId: Accounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: netAppAccount
        renew_credentials:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1renewCredentials?api-version=2024-03-01/post'
            operationId: Accounts_RenewCredentials
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    pools:
      id: azure_isv.netapp.pools
      name: pools
      title: pools
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools?api-version=2024-03-01/get'
            operationId: Pools_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: capacityPoolList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}?api-version=2024-03-01/get'
            operationId: Pools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: capacityPool
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}?api-version=2024-03-01/put'
            operationId: Pools_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: capacityPool
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}?api-version=2024-03-01/patch'
            operationId: Pools_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: capacityPool
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}?api-version=2024-03-01/delete'
            operationId: Pools_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/pools/methods/delete'
    volumes:
      id: azure_isv.netapp.volumes
      name: volumes
      title: volumes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes?api-version=2024-03-01/get'
            operationId: Volumes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volumeList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}?api-version=2024-03-01/get'
            operationId: Volumes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volume
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}?api-version=2024-03-01/put'
            operationId: Volumes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volume
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}?api-version=2024-03-01/patch'
            operationId: Volumes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volume
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}?api-version=2024-03-01/delete'
            operationId: Volumes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        populate_availability_zone:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1populateAvailabilityZone?api-version=2024-03-01/post'
            operationId: Volumes_PopulateAvailabilityZone
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volume
        revert:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1revert?api-version=2024-03-01/post'
            operationId: Volumes_Revert
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_cifs_password:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1resetCifsPassword?api-version=2024-03-01/post'
            operationId: Volumes_ResetCifsPassword
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        break_file_locks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1breakFileLocks?api-version=2024-03-01/post'
            operationId: Volumes_BreakFileLocks
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        break_replication:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1breakReplication?api-version=2024-03-01/post'
            operationId: Volumes_BreakReplication
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reestablish_replication:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1reestablishReplication?api-version=2024-03-01/post'
            operationId: Volumes_ReestablishReplication
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        replication_status:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1replicationStatus?api-version=2024-03-01/get'
            operationId: Volumes_ReplicationStatus
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: replicationStatus
        resync_replication:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1resyncReplication?api-version=2024-03-01/post'
            operationId: Volumes_ResyncReplication
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        authorize_replication:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1authorizeReplication?api-version=2024-03-01/post'
            operationId: Volumes_AuthorizeReplication
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        re_initialize_replication:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1reinitializeReplication?api-version=2024-03-01/post'
            operationId: Volumes_ReInitializeReplication
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        pool_change:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1poolChange?api-version=2024-03-01/post'
            operationId: Volumes_PoolChange
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        relocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1relocate?api-version=2024-03-01/post'
            operationId: Volumes_Relocate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        finalize_relocation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1finalizeRelocation?api-version=2024-03-01/post'
            operationId: Volumes_FinalizeRelocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revert_relocation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1revertRelocation?api-version=2024-03-01/post'
            operationId: Volumes_RevertRelocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/volumes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volumes/methods/delete'
    volumes_get_group_id_list_for_ldap_users:
      id: azure_isv.netapp.volumes_get_group_id_list_for_ldap_users
      name: volumes_get_group_id_list_for_ldap_users
      title: volumes_get_group_id_list_for_ldap_users
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1getGroupIdListForLdapUser?api-version=2024-03-01/post'
            operationId: VolumesGetGroupIdListForLdapUser_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: getGroupIdListForLDAPUserResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes_get_group_id_list_for_ldap_users/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    volumes_replications:
      id: azure_isv.netapp.volumes_replications
      name: volumes_replications
      title: volumes_replications
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1listReplications?api-version=2024-03-01/post'
            operationId: VolumesReplications_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: listReplications
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1deleteReplication?api-version=2024-03-01/post'
            operationId: VolumesReplication_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volumes_replications/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    snapshots:
      id: azure_isv.netapp.snapshots
      name: snapshots
      title: snapshots
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1snapshots?api-version=2024-03-01/get'
            operationId: Snapshots_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshotsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1snapshots~1{snapshotName}?api-version=2024-03-01/get'
            operationId: Snapshots_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshot
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1snapshots~1{snapshotName}?api-version=2024-03-01/put'
            operationId: Snapshots_Create
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: snapshot
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1snapshots~1{snapshotName}?api-version=2024-03-01/patch'
            operationId: Snapshots_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshot
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1snapshots~1{snapshotName}?api-version=2024-03-01/delete'
            operationId: Snapshots_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restore_files:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1snapshots~1{snapshotName}~1restoreFiles?api-version=2024-03-01/post'
            operationId: Snapshots_RestoreFiles
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/delete'
    snapshot_policies:
      id: azure_isv.netapp.snapshot_policies
      name: snapshot_policies
      title: snapshot_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1snapshotPolicies?api-version=2024-03-01/get'
            operationId: SnapshotPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshotPoliciesList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1snapshotPolicies~1{snapshotPolicyName}?api-version=2024-03-01/get'
            operationId: SnapshotPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshotPolicy
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1snapshotPolicies~1{snapshotPolicyName}?api-version=2024-03-01/put'
            operationId: SnapshotPolicies_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshotPolicy
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1snapshotPolicies~1{snapshotPolicyName}?api-version=2024-03-01/patch'
            operationId: SnapshotPolicies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshotPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1snapshotPolicies~1{snapshotPolicyName}?api-version=2024-03-01/delete'
            operationId: SnapshotPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshot_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshot_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshot_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/snapshot_policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshot_policies/methods/delete'
    snapshot_policies_volumes:
      id: azure_isv.netapp.snapshot_policies_volumes
      name: snapshot_policies_volumes
      title: snapshot_policies_volumes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1snapshotPolicies~1{snapshotPolicyName}~1volumes?api-version=2024-03-01/get'
            operationId: SnapshotPoliciesVolumes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: snapshotPolicyVolumeList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshot_policies_volumes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    backup_policies:
      id: azure_isv.netapp.backup_policies
      name: backup_policies
      title: backup_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupPolicies?api-version=2024-03-01/get'
            operationId: BackupPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupPoliciesList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupPolicies~1{backupPolicyName}?api-version=2024-03-01/get'
            operationId: BackupPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupPolicy
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupPolicies~1{backupPolicyName}?api-version=2024-03-01/put'
            operationId: BackupPolicies_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupPolicy
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupPolicies~1{backupPolicyName}?api-version=2024-03-01/patch'
            operationId: BackupPolicies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupPolicies~1{backupPolicyName}?api-version=2024-03-01/delete'
            operationId: BackupPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_policies/methods/delete'
    volume_quota_rules:
      id: azure_isv.netapp.volume_quota_rules
      name: volume_quota_rules
      title: volume_quota_rules
      methods:
        list_by_volume:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1volumeQuotaRules?api-version=2024-03-01/get'
            operationId: VolumeQuotaRules_ListByVolume
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volumeQuotaRulesList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1volumeQuotaRules~1{volumeQuotaRuleName}?api-version=2024-03-01/get'
            operationId: VolumeQuotaRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volumeQuotaRule
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1volumeQuotaRules~1{volumeQuotaRuleName}?api-version=2024-03-01/put'
            operationId: VolumeQuotaRules_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volumeQuotaRule
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1volumeQuotaRules~1{volumeQuotaRuleName}?api-version=2024-03-01/patch'
            operationId: VolumeQuotaRules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volumeQuotaRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1volumeQuotaRules~1{volumeQuotaRuleName}?api-version=2024-03-01/delete'
            operationId: VolumeQuotaRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_quota_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_quota_rules/methods/list_by_volume'
        insert:
          - $ref: '#/components/x-stackQL-resources/volume_quota_rules/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/volume_quota_rules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volume_quota_rules/methods/delete'
    volume_groups:
      id: azure_isv.netapp.volume_groups
      name: volume_groups
      title: volume_groups
      methods:
        list_by_netapp_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1volumeGroups?api-version=2024-03-01/get'
            operationId: VolumeGroups_ListByNetAppAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volumeGroupList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1volumeGroups~1{volumeGroupName}?api-version=2024-03-01/get'
            operationId: VolumeGroups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: volumeGroupDetails
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1volumeGroups~1{volumeGroupName}?api-version=2024-03-01/put'
            operationId: VolumeGroups_Create
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: volumeGroupDetails
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1volumeGroups~1{volumeGroupName}?api-version=2024-03-01/delete'
            operationId: VolumeGroups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/list_by_netapp_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/volume_groups/methods/delete'
    subvolumes:
      id: azure_isv.netapp.subvolumes
      name: subvolumes
      title: subvolumes
      methods:
        list_by_volume:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1subvolumes?api-version=2024-03-01/get'
            operationId: Subvolumes_ListByVolume
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: subvolumesList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1subvolumes~1{subvolumeName}?api-version=2024-03-01/get'
            operationId: Subvolumes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: subvolumeInfo
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1subvolumes~1{subvolumeName}?api-version=2024-03-01/put'
            operationId: Subvolumes_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: subvolumeInfo
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1subvolumes~1{subvolumeName}?api-version=2024-03-01/patch'
            operationId: Subvolumes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: subvolumeInfo
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1subvolumes~1{subvolumeName}?api-version=2024-03-01/delete'
            operationId: Subvolumes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subvolumes/methods/get'
          - $ref: '#/components/x-stackQL-resources/subvolumes/methods/list_by_volume'
        insert:
          - $ref: '#/components/x-stackQL-resources/subvolumes/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/subvolumes/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/subvolumes/methods/delete'
    subvolumes_metadata:
      id: azure_isv.netapp.subvolumes_metadata
      name: subvolumes_metadata
      title: subvolumes_metadata
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1subvolumes~1{subvolumeName}~1getMetadata?api-version=2024-03-01/post'
            operationId: SubvolumesMetadata_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: subvolumeModel
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subvolumes_metadata/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    backups_latest_status:
      id: azure_isv.netapp.backups_latest_status
      name: backups_latest_status
      title: backups_latest_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1latestBackupStatus~1current?api-version=2024-03-01/get'
            operationId: BackupsLatestStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups_latest_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    backups_volume_latest_restore_status:
      id: azure_isv.netapp.backups_volume_latest_restore_status
      name: backups_volume_latest_restore_status
      title: backups_volume_latest_restore_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1latestRestoreStatus~1current?api-version=2024-03-01/get'
            operationId: BackupsVolumeLatestRestoreStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: restoreStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups_volume_latest_restore_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    backups:
      id: azure_isv.netapp.backups
      name: backups
      title: backups
      methods:
        list_by_vault:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}~1backups?api-version=2024-03-01/get'
            operationId: Backups_ListByVault
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}~1backups~1{backupName}?api-version=2024-03-01/get'
            operationId: Backups_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backup
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}~1backups~1{backupName}?api-version=2024-03-01/put'
            operationId: Backups_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backup
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}~1backups~1{backupName}?api-version=2024-03-01/patch'
            operationId: Backups_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backup
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}~1backups~1{backupName}?api-version=2024-03-01/delete'
            operationId: Backups_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/backups/methods/list_by_vault'
        insert:
          - $ref: '#/components/x-stackQL-resources/backups/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backups/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backups/methods/delete'
    backup_vaults:
      id: azure_isv.netapp.backup_vaults
      name: backup_vaults
      title: backup_vaults
      methods:
        list_by_netapp_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults?api-version=2024-03-01/get'
            operationId: BackupVaults_ListByNetAppAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupVaultsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}?api-version=2024-03-01/get'
            operationId: BackupVaults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupVault
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}?api-version=2024-03-01/put'
            operationId: BackupVaults_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupVault
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}?api-version=2024-03-01/patch'
            operationId: BackupVaults_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: backupVault
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}?api-version=2024-03-01/delete'
            operationId: BackupVaults_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/get'
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/list_by_netapp_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backup_vaults/methods/delete'
    backups_under_backup_vaults:
      id: azure_isv.netapp.backups_under_backup_vaults
      name: backups_under_backup_vaults
      title: backups_under_backup_vaults
      methods:
        restore_files:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1backupVaults~1{backupVaultName}~1backups~1{backupName}~1restoreFiles?api-version=2024-03-01/post'
            operationId: BackupsUnderBackupVault_RestoreFiles
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    backups_under_volumes:
      id: azure_isv.netapp.backups_under_volumes
      name: backups_under_volumes
      title: backups_under_volumes
      methods:
        migrate_backups:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1capacityPools~1{poolName}~1volumes~1{volumeName}~1migrateBackups?api-version=2024-03-01/post'
            operationId: BackupsUnderVolume_MigrateBackups
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    backups_under_accounts:
      id: azure_isv.netapp.backups_under_accounts
      name: backups_under_accounts
      title: backups_under_accounts
      methods:
        migrate_backups:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.NetApp~1netAppAccounts~1{accountName}~1migrateBackups?api-version=2024-03-01/post'
            operationId: BackupsUnderAccount_MigrateBackups
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vw_resource_quota_limits:
      id: azure_isv.netapp.vw_resource_quota_limits
      name: vw_resource_quota_limits
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.current') as "current",
              JSON_EXTRACT(properties, '$.default') as "default",
              subscriptionId,
              location,
              quotaLimitName
              FROM azure_isv.netapp.resource_quota_limits
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.current') as "current",
                json_extract_path_text(properties, '$.default') as "default",
                subscriptionId,
                location,
                quotaLimitName
                FROM azure_isv.netapp.resource_quota_limits
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_accounts:
      id: azure_isv.netapp.vw_accounts
      name: vw_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              etag as etag,
              identity as identity,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.activeDirectories') as "active_directories",
              JSON_EXTRACT(properties, '$.encryption') as "encryption",
              JSON_EXTRACT(properties, '$.disableShowmount') as "disable_showmount",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure_isv.netapp.accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                etag as etag,
                identity as identity,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.activeDirectories') as "active_directories",
                json_extract_path_text(properties, '$.encryption') as "encryption",
                json_extract_path_text(properties, '$.disableShowmount') as "disable_showmount",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure_isv.netapp.accounts
                WHERE subscriptionId = 'replace-me';
    vw_pools:
      id: azure_isv.netapp.vw_pools
      name: vw_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              etag as etag,
              JSON_EXTRACT(properties, '$.poolId') as "pool_id",
              JSON_EXTRACT(properties, '$.size') as "size",
              JSON_EXTRACT(properties, '$.serviceLevel') as "service_level",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.totalThroughputMibps') as "total_throughput_mibps",
              JSON_EXTRACT(properties, '$.utilizedThroughputMibps') as "utilized_throughput_mibps",
              JSON_EXTRACT(properties, '$.qosType') as "qos_type",
              JSON_EXTRACT(properties, '$.coolAccess') as "cool_access",
              JSON_EXTRACT(properties, '$.encryptionType') as "encryption_type",
              subscriptionId,
              resourceGroupName,
              accountName,
              poolName
              FROM azure_isv.netapp.pools
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                etag as etag,
                json_extract_path_text(properties, '$.poolId') as "pool_id",
                json_extract_path_text(properties, '$.size') as "size",
                json_extract_path_text(properties, '$.serviceLevel') as "service_level",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.totalThroughputMibps') as "total_throughput_mibps",
                json_extract_path_text(properties, '$.utilizedThroughputMibps') as "utilized_throughput_mibps",
                json_extract_path_text(properties, '$.qosType') as "qos_type",
                json_extract_path_text(properties, '$.coolAccess') as "cool_access",
                json_extract_path_text(properties, '$.encryptionType') as "encryption_type",
                subscriptionId,
                resourceGroupName,
                accountName,
                poolName
                FROM azure_isv.netapp.pools
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_volumes:
      id: azure_isv.netapp.vw_volumes
      name: vw_volumes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              etag as etag,
              zones as zones,
              JSON_EXTRACT(properties, '$.fileSystemId') as "file_system_id",
              JSON_EXTRACT(properties, '$.creationToken') as "creation_token",
              JSON_EXTRACT(properties, '$.serviceLevel') as "service_level",
              JSON_EXTRACT(properties, '$.usageThreshold') as "usage_threshold",
              JSON_EXTRACT(properties, '$.exportPolicy') as "export_policy",
              JSON_EXTRACT(properties, '$.protocolTypes') as "protocol_types",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.snapshotId') as "snapshot_id",
              JSON_EXTRACT(properties, '$.deleteBaseSnapshot') as "delete_base_snapshot",
              JSON_EXTRACT(properties, '$.backupId') as "backup_id",
              JSON_EXTRACT(properties, '$.baremetalTenantId') as "baremetal_tenant_id",
              JSON_EXTRACT(properties, '$.subnetId') as "subnet_id",
              JSON_EXTRACT(properties, '$.networkFeatures') as "network_features",
              JSON_EXTRACT(properties, '$.networkSiblingSetId') as "network_sibling_set_id",
              JSON_EXTRACT(properties, '$.storageToNetworkProximity') as "storage_to_network_proximity",
              JSON_EXTRACT(properties, '$.mountTargets') as "mount_targets",
              JSON_EXTRACT(properties, '$.volumeType') as "volume_type",
              JSON_EXTRACT(properties, '$.dataProtection') as "data_protection",
              JSON_EXTRACT(properties, '$.isRestoring') as "is_restoring",
              JSON_EXTRACT(properties, '$.snapshotDirectoryVisible') as "snapshot_directory_visible",
              JSON_EXTRACT(properties, '$.kerberosEnabled') as "kerberos_enabled",
              JSON_EXTRACT(properties, '$.securityStyle') as "security_style",
              JSON_EXTRACT(properties, '$.smbEncryption') as "smb_encryption",
              JSON_EXTRACT(properties, '$.smbAccessBasedEnumeration') as "smb_access_based_enumeration",
              JSON_EXTRACT(properties, '$.smbNonBrowsable') as "smb_non_browsable",
              JSON_EXTRACT(properties, '$.smbContinuouslyAvailable') as "smb_continuously_available",
              JSON_EXTRACT(properties, '$.throughputMibps') as "throughput_mibps",
              JSON_EXTRACT(properties, '$.actualThroughputMibps') as "actual_throughput_mibps",
              JSON_EXTRACT(properties, '$.encryptionKeySource') as "encryption_key_source",
              JSON_EXTRACT(properties, '$.keyVaultPrivateEndpointResourceId') as "key_vault_private_endpoint_resource_id",
              JSON_EXTRACT(properties, '$.ldapEnabled') as "ldap_enabled",
              JSON_EXTRACT(properties, '$.coolAccess') as "cool_access",
              JSON_EXTRACT(properties, '$.coolnessPeriod') as "coolness_period",
              JSON_EXTRACT(properties, '$.coolAccessRetrievalPolicy') as "cool_access_retrieval_policy",
              JSON_EXTRACT(properties, '$.unixPermissions') as "unix_permissions",
              JSON_EXTRACT(properties, '$.cloneProgress') as "clone_progress",
              JSON_EXTRACT(properties, '$.fileAccessLogs') as "file_access_logs",
              JSON_EXTRACT(properties, '$.avsDataStore') as "avs_data_store",
              JSON_EXTRACT(properties, '$.dataStoreResourceId') as "data_store_resource_id",
              JSON_EXTRACT(properties, '$.isDefaultQuotaEnabled') as "is_default_quota_enabled",
              JSON_EXTRACT(properties, '$.defaultUserQuotaInKiBs') as "default_user_quota_in_ki_bs",
              JSON_EXTRACT(properties, '$.defaultGroupQuotaInKiBs') as "default_group_quota_in_ki_bs",
              JSON_EXTRACT(properties, '$.maximumNumberOfFiles') as "maximum_number_of_files",
              JSON_EXTRACT(properties, '$.volumeGroupName') as "volume_group_name",
              JSON_EXTRACT(properties, '$.capacityPoolResourceId') as "capacity_pool_resource_id",
              JSON_EXTRACT(properties, '$.proximityPlacementGroup') as "proximity_placement_group",
              JSON_EXTRACT(properties, '$.t2Network') as "t2_network",
              JSON_EXTRACT(properties, '$.volumeSpecName') as "volume_spec_name",
              JSON_EXTRACT(properties, '$.encrypted') as "encrypted",
              JSON_EXTRACT(properties, '$.placementRules') as "placement_rules",
              JSON_EXTRACT(properties, '$.enableSubvolumes') as "enable_subvolumes",
              JSON_EXTRACT(properties, '$.provisionedAvailabilityZone') as "provisioned_availability_zone",
              JSON_EXTRACT(properties, '$.isLargeVolume') as "is_large_volume",
              JSON_EXTRACT(properties, '$.originatingResourceId') as "originating_resource_id",
              subscriptionId,
              resourceGroupName,
              accountName,
              poolName,
              volumeName
              FROM azure_isv.netapp.volumes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                etag as etag,
                zones as zones,
                json_extract_path_text(properties, '$.fileSystemId') as "file_system_id",
                json_extract_path_text(properties, '$.creationToken') as "creation_token",
                json_extract_path_text(properties, '$.serviceLevel') as "service_level",
                json_extract_path_text(properties, '$.usageThreshold') as "usage_threshold",
                json_extract_path_text(properties, '$.exportPolicy') as "export_policy",
                json_extract_path_text(properties, '$.protocolTypes') as "protocol_types",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.snapshotId') as "snapshot_id",
                json_extract_path_text(properties, '$.deleteBaseSnapshot') as "delete_base_snapshot",
                json_extract_path_text(properties, '$.backupId') as "backup_id",
                json_extract_path_text(properties, '$.baremetalTenantId') as "baremetal_tenant_id",
                json_extract_path_text(properties, '$.subnetId') as "subnet_id",
                json_extract_path_text(properties, '$.networkFeatures') as "network_features",
                json_extract_path_text(properties, '$.networkSiblingSetId') as "network_sibling_set_id",
                json_extract_path_text(properties, '$.storageToNetworkProximity') as "storage_to_network_proximity",
                json_extract_path_text(properties, '$.mountTargets') as "mount_targets",
                json_extract_path_text(properties, '$.volumeType') as "volume_type",
                json_extract_path_text(properties, '$.dataProtection') as "data_protection",
                json_extract_path_text(properties, '$.isRestoring') as "is_restoring",
                json_extract_path_text(properties, '$.snapshotDirectoryVisible') as "snapshot_directory_visible",
                json_extract_path_text(properties, '$.kerberosEnabled') as "kerberos_enabled",
                json_extract_path_text(properties, '$.securityStyle') as "security_style",
                json_extract_path_text(properties, '$.smbEncryption') as "smb_encryption",
                json_extract_path_text(properties, '$.smbAccessBasedEnumeration') as "smb_access_based_enumeration",
                json_extract_path_text(properties, '$.smbNonBrowsable') as "smb_non_browsable",
                json_extract_path_text(properties, '$.smbContinuouslyAvailable') as "smb_continuously_available",
                json_extract_path_text(properties, '$.throughputMibps') as "throughput_mibps",
                json_extract_path_text(properties, '$.actualThroughputMibps') as "actual_throughput_mibps",
                json_extract_path_text(properties, '$.encryptionKeySource') as "encryption_key_source",
                json_extract_path_text(properties, '$.keyVaultPrivateEndpointResourceId') as "key_vault_private_endpoint_resource_id",
                json_extract_path_text(properties, '$.ldapEnabled') as "ldap_enabled",
                json_extract_path_text(properties, '$.coolAccess') as "cool_access",
                json_extract_path_text(properties, '$.coolnessPeriod') as "coolness_period",
                json_extract_path_text(properties, '$.coolAccessRetrievalPolicy') as "cool_access_retrieval_policy",
                json_extract_path_text(properties, '$.unixPermissions') as "unix_permissions",
                json_extract_path_text(properties, '$.cloneProgress') as "clone_progress",
                json_extract_path_text(properties, '$.fileAccessLogs') as "file_access_logs",
                json_extract_path_text(properties, '$.avsDataStore') as "avs_data_store",
                json_extract_path_text(properties, '$.dataStoreResourceId') as "data_store_resource_id",
                json_extract_path_text(properties, '$.isDefaultQuotaEnabled') as "is_default_quota_enabled",
                json_extract_path_text(properties, '$.defaultUserQuotaInKiBs') as "default_user_quota_in_ki_bs",
                json_extract_path_text(properties, '$.defaultGroupQuotaInKiBs') as "default_group_quota_in_ki_bs",
                json_extract_path_text(properties, '$.maximumNumberOfFiles') as "maximum_number_of_files",
                json_extract_path_text(properties, '$.volumeGroupName') as "volume_group_name",
                json_extract_path_text(properties, '$.capacityPoolResourceId') as "capacity_pool_resource_id",
                json_extract_path_text(properties, '$.proximityPlacementGroup') as "proximity_placement_group",
                json_extract_path_text(properties, '$.t2Network') as "t2_network",
                json_extract_path_text(properties, '$.volumeSpecName') as "volume_spec_name",
                json_extract_path_text(properties, '$.encrypted') as "encrypted",
                json_extract_path_text(properties, '$.placementRules') as "placement_rules",
                json_extract_path_text(properties, '$.enableSubvolumes') as "enable_subvolumes",
                json_extract_path_text(properties, '$.provisionedAvailabilityZone') as "provisioned_availability_zone",
                json_extract_path_text(properties, '$.isLargeVolume') as "is_large_volume",
                json_extract_path_text(properties, '$.originatingResourceId') as "originating_resource_id",
                subscriptionId,
                resourceGroupName,
                accountName,
                poolName,
                volumeName
                FROM azure_isv.netapp.volumes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me';
    vw_snapshots:
      id: azure_isv.netapp.vw_snapshots
      name: vw_snapshots
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              JSON_EXTRACT(properties, '$.snapshotId') as "snapshot_id",
              JSON_EXTRACT(properties, '$.created') as "created",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              poolName,
              volumeName,
              snapshotName
              FROM azure_isv.netapp.snapshots
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me' AND volumeName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                json_extract_path_text(properties, '$.snapshotId') as "snapshot_id",
                json_extract_path_text(properties, '$.created') as "created",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                poolName,
                volumeName,
                snapshotName
                FROM azure_isv.netapp.snapshots
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me' AND volumeName = 'replace-me';
    vw_snapshot_policies:
      id: azure_isv.netapp.vw_snapshot_policies
      name: vw_snapshot_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              etag as etag,
              JSON_EXTRACT(properties, '$.hourlySchedule') as "hourly_schedule",
              JSON_EXTRACT(properties, '$.dailySchedule') as "daily_schedule",
              JSON_EXTRACT(properties, '$.weeklySchedule') as "weekly_schedule",
              JSON_EXTRACT(properties, '$.monthlySchedule') as "monthly_schedule",
              JSON_EXTRACT(properties, '$.enabled') as "enabled",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              snapshotPolicyName
              FROM azure_isv.netapp.snapshot_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                etag as etag,
                json_extract_path_text(properties, '$.hourlySchedule') as "hourly_schedule",
                json_extract_path_text(properties, '$.dailySchedule') as "daily_schedule",
                json_extract_path_text(properties, '$.weeklySchedule') as "weekly_schedule",
                json_extract_path_text(properties, '$.monthlySchedule') as "monthly_schedule",
                json_extract_path_text(properties, '$.enabled') as "enabled",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                snapshotPolicyName
                FROM azure_isv.netapp.snapshot_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_backup_policies:
      id: azure_isv.netapp.vw_backup_policies
      name: vw_backup_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              etag as etag,
              JSON_EXTRACT(properties, '$.backupPolicyId') as "backup_policy_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.dailyBackupsToKeep') as "daily_backups_to_keep",
              JSON_EXTRACT(properties, '$.weeklyBackupsToKeep') as "weekly_backups_to_keep",
              JSON_EXTRACT(properties, '$.monthlyBackupsToKeep') as "monthly_backups_to_keep",
              JSON_EXTRACT(properties, '$.volumesAssigned') as "volumes_assigned",
              JSON_EXTRACT(properties, '$.enabled') as "enabled",
              JSON_EXTRACT(properties, '$.volumeBackups') as "volume_backups",
              subscriptionId,
              resourceGroupName,
              accountName,
              backupPolicyName
              FROM azure_isv.netapp.backup_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                etag as etag,
                json_extract_path_text(properties, '$.backupPolicyId') as "backup_policy_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.dailyBackupsToKeep') as "daily_backups_to_keep",
                json_extract_path_text(properties, '$.weeklyBackupsToKeep') as "weekly_backups_to_keep",
                json_extract_path_text(properties, '$.monthlyBackupsToKeep') as "monthly_backups_to_keep",
                json_extract_path_text(properties, '$.volumesAssigned') as "volumes_assigned",
                json_extract_path_text(properties, '$.enabled') as "enabled",
                json_extract_path_text(properties, '$.volumeBackups') as "volume_backups",
                subscriptionId,
                resourceGroupName,
                accountName,
                backupPolicyName
                FROM azure_isv.netapp.backup_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_volume_quota_rules:
      id: azure_isv.netapp.vw_volume_quota_rules
      name: vw_volume_quota_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.quotaSizeInKiBs') as "quota_size_in_ki_bs",
              JSON_EXTRACT(properties, '$.quotaType') as "quota_type",
              JSON_EXTRACT(properties, '$.quotaTarget') as "quota_target",
              subscriptionId,
              resourceGroupName,
              accountName,
              poolName,
              volumeName,
              volumeQuotaRuleName
              FROM azure_isv.netapp.volume_quota_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me' AND volumeName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.quotaSizeInKiBs') as "quota_size_in_ki_bs",
                json_extract_path_text(properties, '$.quotaType') as "quota_type",
                json_extract_path_text(properties, '$.quotaTarget') as "quota_target",
                subscriptionId,
                resourceGroupName,
                accountName,
                poolName,
                volumeName,
                volumeQuotaRuleName
                FROM azure_isv.netapp.volume_quota_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me' AND volumeName = 'replace-me';
    vw_volume_groups:
      id: azure_isv.netapp.vw_volume_groups
      name: vw_volume_groups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.groupMetaData') as "group_meta_data",
              JSON_EXTRACT(properties, '$.volumes') as "volumes",
              subscriptionId,
              resourceGroupName,
              accountName,
              volumeGroupName
              FROM azure_isv.netapp.volume_groups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.groupMetaData') as "group_meta_data",
                json_extract_path_text(properties, '$.volumes') as "volumes",
                subscriptionId,
                resourceGroupName,
                accountName,
                volumeGroupName
                FROM azure_isv.netapp.volume_groups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_subvolumes:
      id: azure_isv.netapp.vw_subvolumes
      name: vw_subvolumes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.path') as "path",
              JSON_EXTRACT(properties, '$.size') as "size",
              JSON_EXTRACT(properties, '$.parentPath') as "parent_path",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              poolName,
              volumeName,
              subvolumeName
              FROM azure_isv.netapp.subvolumes
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me' AND volumeName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.path') as "path",
                json_extract_path_text(properties, '$.size') as "size",
                json_extract_path_text(properties, '$.parentPath') as "parent_path",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                poolName,
                volumeName,
                subvolumeName
                FROM azure_isv.netapp.subvolumes
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND poolName = 'replace-me' AND volumeName = 'replace-me';
    vw_backups:
      id: azure_isv.netapp.vw_backups
      name: vw_backups
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.backupId') as "backup_id",
              JSON_EXTRACT(properties, '$.creationDate') as "creation_date",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.size') as "size",
              JSON_EXTRACT(properties, '$.label') as "label",
              JSON_EXTRACT(properties, '$.backupType') as "backup_type",
              JSON_EXTRACT(properties, '$.failureReason') as "failure_reason",
              JSON_EXTRACT(properties, '$.volumeResourceId') as "volume_resource_id",
              JSON_EXTRACT(properties, '$.useExistingSnapshot') as "use_existing_snapshot",
              JSON_EXTRACT(properties, '$.snapshotName') as "snapshot_name",
              JSON_EXTRACT(properties, '$.backupPolicyResourceId') as "backup_policy_resource_id",
              subscriptionId,
              resourceGroupName,
              accountName,
              backupVaultName,
              backupName
              FROM azure_isv.netapp.backups
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND backupVaultName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.backupId') as "backup_id",
                json_extract_path_text(properties, '$.creationDate') as "creation_date",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.size') as "size",
                json_extract_path_text(properties, '$.label') as "label",
                json_extract_path_text(properties, '$.backupType') as "backup_type",
                json_extract_path_text(properties, '$.failureReason') as "failure_reason",
                json_extract_path_text(properties, '$.volumeResourceId') as "volume_resource_id",
                json_extract_path_text(properties, '$.useExistingSnapshot') as "use_existing_snapshot",
                json_extract_path_text(properties, '$.snapshotName') as "snapshot_name",
                json_extract_path_text(properties, '$.backupPolicyResourceId') as "backup_policy_resource_id",
                subscriptionId,
                resourceGroupName,
                accountName,
                backupVaultName,
                backupName
                FROM azure_isv.netapp.backups
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND backupVaultName = 'replace-me';
    vw_backup_vaults:
      id: azure_isv.netapp.vw_backup_vaults
      name: vw_backup_vaults
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              backupVaultName
              FROM azure_isv.netapp.backup_vaults
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                backupVaultName
                FROM azure_isv.netapp.backup_vaults
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /providers/Microsoft.NetApp/operations?api-version=2024-03-01:
    get:
      tags:
        - Operations
      summary: Describes the Resource Provider
      description: Lists all of the available Microsoft.NetApp Rest API operations
      operationId: Operations_List
      parameters: []
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkNameAvailability?api-version=2024-03-01:
    post:
      tags:
        - NetApp Resource
      summary: Check resource name availability
      description: Check if a resource name is available.
      operationId: NetAppResource_CheckNameAvailability
      requestBody:
        description: Name availability request.
        required: true
        x-ms-requestBody-name: body
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceNameAvailabilityRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkFilePathAvailability?api-version=2024-03-01:
    post:
      tags:
        - NetApp Resource
      summary: Check file path availability
      description: Check if a file path is available.
      operationId: NetAppResource_CheckFilePathAvailability
      requestBody:
        description: File path availability request.
        required: true
        x-ms-requestBody-name: body
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePathAvailabilityRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability?api-version=2024-03-01:
    post:
      tags:
        - NetApp Resource
      summary: Check quota availability
      description: Check if a quota is available.
      operationId: NetAppResource_CheckQuotaAvailability
      requestBody:
        description: Quota availability request.
        required: true
        x-ms-requestBody-name: body
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaAvailabilityRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits?api-version=2024-03-01:
    get:
      tags:
        - NetApp Resource
      summary: Get quota limits
      description: Get the default and current limits for quotas
      operationId: NetAppResourceQuotaLimits_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionQuotaItemList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}?api-version=2024-03-01:
    get:
      tags:
        - NetApp Resource
      summary: Get quota limits
      description: Get the default and current subscription quota limit
      operationId: NetAppResourceQuotaLimits_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
        - $ref: '#/components/parameters/QuotaLimitName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionQuotaItem'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfo?api-version=2024-03-01:
    get:
      summary: Describes region specific information.
      description: Provides storage to network proximity and logical zone mapping information.
      tags:
        - NetApp Resource
      operationId: NetAppResource_QueryRegionInfo
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/regionInfo'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos?api-version=2024-03-01:
    get:
      summary: Describes region specific information.
      description: Provides region specific information.
      tags:
        - NetApp Resource
      operationId: NetAppResourceRegionInfos_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/regionInfosList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos/default?api-version=2024-03-01:
    get:
      summary: Describes region specific information.
      description: Provides storage to network proximity and logical zone mapping information.
      tags:
        - NetApp Resource
      operationId: NetAppResourceRegionInfos_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/regionInfoResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/queryNetworkSiblingSet?api-version=2024-03-01:
    post:
      tags:
        - NetApp Resource
      summary: Describe a network sibling set
      description: Get details of the specified network sibling set.
      operationId: NetAppResource_QueryNetworkSiblingSet
      requestBody:
        description: Network sibling set to query.
        required: true
        x-ms-requestBody-name: body
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryNetworkSiblingSetRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkSiblingSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/updateNetworkSiblingSet?api-version=2024-03-01:
    post:
      tags:
        - NetApp Resource
      summary: Update the network features of a network sibling set
      description: Update the network features of the specified network sibling set.
      operationId: NetAppResourceNetworkSiblingSet_Update
      requestBody:
        description: Update for the specified network sibling set.
        required: true
        x-ms-requestBody-name: body
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkSiblingSetRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkSiblingSet'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: NetAppResource_UpdateNetworkSiblingSet
  /subscriptions/{subscriptionId}/providers/Microsoft.NetApp/netAppAccounts?api-version=2024-03-01:
    get:
      summary: Describe all NetApp Accounts in a subscription
      description: List and describe all NetApp accounts in the subscription.
      tags:
        - NetApp Accounts
      operationId: Accounts_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netAppAccountList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts?api-version=2024-03-01:
    get:
      summary: Describe all NetApp Accounts in a resource group
      description: List and describe all NetApp accounts in the resource group.
      tags:
        - NetApp Accounts
      operationId: Accounts_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netAppAccountList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}?api-version=2024-03-01:
    get:
      summary: Describe a NetApp Account
      description: Get the NetApp account
      tags:
        - NetApp Accounts
      operationId: Accounts_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netAppAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NetApp Accounts
      operationId: Accounts_CreateOrUpdate
      summary: Create or update a NetApp account
      description: Create or update the specified NetApp account within the resource group
      requestBody:
        description: NetApp Account object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netAppAccount'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      responses:
        '200':
          description: OK - account updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netAppAccount'
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netAppAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - NetApp Accounts
      operationId: Accounts_Delete
      summary: Delete a NetApp account
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      description: Delete the specified NetApp account
      responses:
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - NetApp Accounts
      operationId: Accounts_Update
      summary: Update a NetApp account
      description: Patch the specified NetApp account
      requestBody:
        description: NetApp Account object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/netAppAccountPatch'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      responses:
        '200':
          description: OK - account updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netAppAccount'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/netAppAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/renewCredentials?api-version=2024-03-01:
    post:
      tags:
        - NetApp Accounts
      operationId: Accounts_RenewCredentials
      summary: Renew identity credentials
      description: Renew identity credentials that are used to authenticate to key vault, for customer-managed key encryption. If encryption.identity.principalId does not match identity.principalId, running this operation will fix it.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools?api-version=2024-03-01:
    get:
      summary: Describe all Capacity Pools
      description: List all capacity pools in the NetApp Account
      tags:
        - Capacity Pools
      operationId: Pools_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capacityPoolList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}?api-version=2024-03-01:
    get:
      summary: Describe a Capacity Pool
      description: Get details of the specified capacity pool
      tags:
        - Capacity Pools
      operationId: Pools_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capacityPool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Capacity Pools
      operationId: Pools_CreateOrUpdate
      summary: Create or Update the specified capacity pool within the resource group
      description: Create or Update a capacity pool
      requestBody:
        description: Capacity pool object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/capacityPool'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
      responses:
        '200':
          description: OK - pool updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capacityPool'
        '201':
          description: Pool created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capacityPool'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Capacity Pools
      operationId: Pools_Update
      summary: Update a capacity pool
      description: Patch the specified capacity pool
      requestBody:
        description: Capacity pool object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/capacityPoolPatch'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capacityPool'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Capacity Pools
      operationId: Pools_Delete
      summary: Delete a capacity pool
      description: Delete the specified capacity pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
      responses:
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes?api-version=2024-03-01:
    get:
      summary: Describe all volumes
      description: List all volumes within the capacity pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
      tags:
        - Volumes
      operationId: Volumes_List
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}?api-version=2024-03-01:
    get:
      tags:
        - Volumes
      operationId: Volumes_Get
      summary: Describe a volume
      description: Get the details of the specified volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Volumes
      operationId: Volumes_CreateOrUpdate
      summary: Create or Update a volume
      description: Create or update the specified volume within the capacity pool
      requestBody:
        description: Volume object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volume'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: Ok - volume updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
        '201':
          description: Volume created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
        '202':
          description: Accepted -- Create request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Volumes
      operationId: Volumes_Update
      summary: Update a volume
      description: Patch the specified volume
      requestBody:
        description: Volume object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumePatch'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Volumes
      operationId: Volumes_Delete
      summary: Delete a volume
      description: Delete the specified volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - name: forceDelete
          in: query
          description: An option to force delete the volume. Will cleanup resources connected to the particular volume
          required: false
          schema:
            type: boolean
      responses:
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/populateAvailabilityZone?api-version=2024-03-01:
    post:
      tags:
        - Volumes
      summary: Populate Availability Zone
      description: This operation will populate availability zone information for a volume
      operationId: Volumes_PopulateAvailabilityZone
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volume'
        '202':
          description: Accepted -- populate availability zone accepted; operation will complete asynchronously
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revert?api-version=2024-03-01:
    post:
      tags:
        - Volumes Revert
      summary: Revert a volume to one of its snapshots
      description: Revert a volume to the snapshot specified in the body
      operationId: Volumes_Revert
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: Object for snapshot to revert supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumeRevert'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resetCifsPassword?api-version=2024-03-01:
    post:
      tags:
        - Reset Cifs Password
      summary: Reset cifs password
      description: Reset cifs password from volume
      operationId: Volumes_ResetCifsPassword
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakFileLocks?api-version=2024-03-01:
    post:
      tags:
        - File Locks
      summary: Break file locks
      description: Break all the file locks on a volume
      operationId: Volumes_BreakFileLocks
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: Optional body to provide the ability to clear file locks with selected options
        required: false
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/breakFileLocksRequest'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/getGroupIdListForLdapUser?api-version=2024-03-01:
    post:
      tags:
        - Group Id List for LDAP User
      summary: ' Get Group Id List for LDAP User'
      description: Returns the list of group Ids for a specific LDAP User
      operationId: VolumesGetGroupIdListForLdapUser_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: Returns group Id list for a specific LDAP user
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getGroupIdListForLDAPUserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupIdListForLDAPUserResponse'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: Volumes_ListGetGroupIdListForLdapUser
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakReplication?api-version=2024-03-01:
    post:
      tags:
        - Volumes Replication
      summary: Break volume replication
      description: Break the replication connection on the destination volume
      operationId: Volumes_BreakReplication
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: Optional body to force break the replication.
        required: false
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/breakReplicationRequest'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reestablishReplication?api-version=2024-03-01:
    post:
      tags:
        - Volumes Replication
      summary: Re-establish volume replication
      description: Re-establish a previously deleted replication between 2 volumes that have a common ad-hoc or policy-based snapshots
      operationId: Volumes_ReestablishReplication
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: body for the id of the source volume.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reestablishReplicationRequest'
      responses:
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/replicationStatus?api-version=2024-03-01:
    get:
      tags:
        - Volumes Replication
      summary: Get volume replication status
      description: Get the status of the replication
      operationId: Volumes_ReplicationStatus
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replicationStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/listReplications?api-version=2024-03-01:
    post:
      tags:
        - Volumes Replication
      summary: List replications for volume
      description: List all replications for a specified volume
      operationId: VolumesReplications_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listReplications'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Volumes_ListReplications
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resyncReplication?api-version=2024-03-01:
    post:
      tags:
        - Volumes Replication
      summary: Resync volume replication
      description: Resync the connection on the destination volume. If the operation is ran on the source volume it will reverse-resync the connection and sync from destination to source.
      operationId: Volumes_ResyncReplication
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/deleteReplication?api-version=2024-03-01:
    post:
      tags:
        - Volumes Replication
      summary: Delete volume replication
      description: Delete the replication connection on the destination volume, and send release to the source replication
      operationId: VolumesReplication_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-original-operationId: Volumes_DeleteReplication
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeReplication?api-version=2024-03-01:
    post:
      tags:
        - Volumes Replication
      summary: Authorize source volume replication
      description: Authorize the replication connection on the source volume
      operationId: Volumes_AuthorizeReplication
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: Authorize request object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorizeRequest'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reinitializeReplication?api-version=2024-03-01:
    post:
      tags:
        - Volumes Replication
      summary: ReInitialize volume replication
      description: Re-Initializes the replication connection on the destination volume
      operationId: Volumes_ReInitializeReplication
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/poolChange?api-version=2024-03-01:
    post:
      tags:
        - Pool Change
      summary: Change pool for volume
      description: Moves volume to another pool
      operationId: Volumes_PoolChange
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: Move volume to the pool supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/poolChangeRequest'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/relocate?api-version=2024-03-01:
    post:
      tags:
        - Volumes Relocation
      summary: Relocate volume
      description: Relocates volume to a new stamp
      operationId: Volumes_Relocate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      requestBody:
        description: Relocate volume request
        required: false
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/relocateVolumeRequest'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeRelocation?api-version=2024-03-01:
    post:
      tags:
        - Volumes Relocation
      summary: Finalize volume relocation
      description: Finalizes the relocation of the volume and cleans up the old volume.
      operationId: Volumes_FinalizeRelocation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revertRelocation?api-version=2024-03-01:
    post:
      tags:
        - Volumes Relocation
      summary: Revert volume relocation
      description: Reverts the volume relocation process, cleans up the new volume and starts using the former-existing volume.
      operationId: Volumes_RevertRelocation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots?api-version=2024-03-01:
    get:
      tags:
        - Snapshots
      operationId: Snapshots_List
      summary: Describe all snapshots
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      description: List all snapshots associated with the volume
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}?api-version=2024-03-01:
    get:
      tags:
        - Snapshots
      operationId: Snapshots_Get
      summary: Describe a snapshot
      description: Get details of the specified snapshot
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SnapshotName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Snapshots
      operationId: Snapshots_Create
      summary: Create a snapshot
      description: Create the specified snapshot within the given volume
      requestBody:
        description: Snapshot object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshot'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SnapshotName'
      responses:
        '201':
          description: Snapshot created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
        '202':
          description: Accepted -- Create request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Snapshots
      operationId: Snapshots_Update
      summary: Update a snapshot
      description: Patch a snapshot
      requestBody:
        description: Snapshot object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshotPatch'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SnapshotName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshot'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Snapshots
      operationId: Snapshots_Delete
      summary: Delete a snapshot
      description: Delete snapshot
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SnapshotName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}/restoreFiles?api-version=2024-03-01:
    post:
      tags:
        - Snapshots
      operationId: Snapshots_RestoreFiles
      summary: Create a new Snapshot Restore Files request
      description: Restore the specified files from the specified snapshot to the active filesystem
      requestBody:
        description: Restore payload supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshotRestoreFiles'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SnapshotName'
      responses:
        '200':
          description: OK - terminal state
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies?api-version=2024-03-01:
    get:
      operationId: SnapshotPolicies_List
      description: List snapshot policy
      tags:
        - Snapshot Policy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotPoliciesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}?api-version=2024-03-01:
    get:
      operationId: SnapshotPolicies_Get
      description: Get a snapshot Policy
      tags:
        - Snapshot Policy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/SnapshotPolicyName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: SnapshotPolicies_Create
      description: Create a snapshot policy
      tags:
        - Snapshot Policy
      requestBody:
        description: Snapshot policy object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshotPolicy'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/SnapshotPolicyName'
      responses:
        '200':
          description: OK - snapshot Policy updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotPolicy'
        '201':
          description: Snapshot Policy created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: false
    patch:
      tags:
        - Snapshot Policy
      operationId: SnapshotPolicies_Update
      description: Patch a snapshot policy
      requestBody:
        description: Snapshot policy object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/snapshotPolicyPatch'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/SnapshotPolicyName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotPolicy'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      operationId: SnapshotPolicies_Delete
      description: Delete snapshot policy
      tags:
        - Snapshot Policy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/SnapshotPolicyName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/volumes?api-version=2024-03-01:
    get:
      tags:
        - Snapshot Policy List Volumes
      summary: Get volumes for snapshot policy
      description: Get volumes associated with snapshot policy
      operationId: SnapshotPoliciesVolumes_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/SnapshotPolicyName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snapshotPolicyVolumeList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: SnapshotPolicies_ListVolumes
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies?api-version=2024-03-01:
    get:
      tags:
        - Backup Policy
      summary: List backup policies
      description: List backup policies for Netapp Account
      operationId: BackupPolicies_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupPoliciesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}?api-version=2024-03-01:
    get:
      tags:
        - Backup Policy
      summary: Get a backup Policy
      description: Get a particular backup Policy
      operationId: BackupPolicies_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupPolicyName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Backup Policy
      summary: Create a backup policy
      description: Create a backup policy for Netapp Account
      operationId: BackupPolicies_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupPolicyName'
      requestBody:
        description: Backup policy object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupPolicy'
      responses:
        '200':
          description: Backup Policy created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupPolicy'
        '201':
          description: Backup created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupPolicy'
        '202':
          description: Accepted -- Create request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Backup Policy
      summary: Patch a backup policy
      description: Patch a backup policy for Netapp Account
      operationId: BackupPolicies_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupPolicyName'
      requestBody:
        description: Backup policy object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupPolicyPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupPolicy'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Backup Policy
      summary: Delete a backup policy
      description: Delete backup policy
      operationId: BackupPolicies_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupPolicyName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules?api-version=2024-03-01:
    get:
      tags:
        - VolumeQuotaRules
      operationId: VolumeQuotaRules_ListByVolume
      summary: Get all quota rules for a volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      description: List all quota rules associated with the volume
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeQuotaRulesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules/{volumeQuotaRuleName}?api-version=2024-03-01:
    get:
      tags:
        - VolumeQuotaRules
      operationId: VolumeQuotaRules_Get
      summary: Describe a quota rule
      description: Get details of the specified quota rule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/VolumeQuotaRuleName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeQuotaRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - VolumeQuotaRules
      operationId: VolumeQuotaRules_Create
      summary: Create a quota rule
      description: Create the specified quota rule within the given volume
      requestBody:
        description: Quota rule object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumeQuotaRule'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/VolumeQuotaRuleName'
      responses:
        '200':
          description: OK - VolumeQuotaRule updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeQuotaRule'
        '201':
          description: Quota rule Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeQuotaRule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - VolumeQuotaRules
      operationId: VolumeQuotaRules_Update
      summary: Update a quota rule
      description: Patch a quota rule
      requestBody:
        description: Quota rule object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumeQuotaRulePatch'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/VolumeQuotaRuleName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeQuotaRule'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - VolumeQuotaRules
      operationId: VolumeQuotaRules_Delete
      summary: Delete a quota rule
      description: Delete quota rule
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/VolumeQuotaRuleName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups?api-version=2024-03-01:
    get:
      summary: Describe all volume groups
      description: List all volume groups for given account
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      tags:
        - Volume Groups
      operationId: VolumeGroups_ListByNetAppAccount
      x-ms-pageable:
        nextLinkName: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeGroupList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}?api-version=2024-03-01:
    get:
      summary: Describe a Volume Group
      description: Get details of the specified volume group
      tags:
        - Volume Groups
      operationId: VolumeGroups_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/VolumeGroupName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeGroupDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Volume Groups
      operationId: VolumeGroups_Create
      summary: Create the specified volume group and volumes. Creating volume group will create all the volumes specified in request body implicitly. Once volumes are created using volume group, those will be treated as regular volumes thereafter.
      description: Create a volume group along with specified volumes
      requestBody:
        description: Volume Group object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/volumeGroupDetails'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/VolumeGroupName'
      responses:
        '201':
          description: Volume group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/volumeGroupDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Volume Groups
      operationId: VolumeGroups_Delete
      summary: Delete a volume group
      description: Delete the specified volume group only if there are no volumes under volume group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/VolumeGroupName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes?api-version=2024-03-01:
    get:
      tags:
        - Subvolumes
      operationId: Subvolumes_ListByVolume
      summary: List of all the subvolumes
      description: Returns a list of the subvolumes in the volume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subvolumesList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}?api-version=2024-03-01:
    get:
      tags:
        - Subvolumes
      summary: Get the path associated with the subvolumeName
      description: Returns the path associated with the subvolumeName provided
      operationId: Subvolumes_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SubvolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subvolumeInfo'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Subvolumes
      summary: Create or clone a new subvolume
      description: Creates a subvolume in the path or clones the subvolume mentioned in the parentPath
      operationId: Subvolumes_Create
      requestBody:
        description: Subvolume object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subvolumeInfo'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SubvolumeName'
      responses:
        '200':
          description: OK - updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subvolumeInfo'
        '201':
          description: Subvolume created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subvolumeInfo'
        '202':
          description: Accepted -- Create request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Subvolumes
      operationId: Subvolumes_Update
      summary: Update a subvolume
      description: Patch a subvolume
      requestBody:
        description: Subvolume object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subvolumePatchRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SubvolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subvolumeInfo'
        '202':
          description: Accepted -- Update request accepted; operation will complete asynchronously
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Subvolumes
      operationId: Subvolumes_Delete
      summary: Delete a subvolume
      description: Delete subvolume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SubvolumeName'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}/getMetadata?api-version=2024-03-01:
    post:
      tags:
        - Subvolumes
      operationId: SubvolumesMetadata_Get
      summary: Describe a subvolume
      description: Get details of the specified subvolume
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
        - $ref: '#/components/parameters/SubvolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subvolumeModel'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-original-operationId: Subvolumes_GetMetadata
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestBackupStatus/current?api-version=2024-03-01:
    get:
      tags:
        - Backups
      summary: Get the latest backup status of a volume
      description: Get the latest status of the backup for a volume
      operationId: BackupsLatestStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Backups_GetLatestStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestRestoreStatus/current?api-version=2024-03-01:
    get:
      tags:
        - Restore
      summary: Get the latest restore status of a volume
      description: Get the latest status of the restore for a volume
      operationId: BackupsVolumeLatestRestoreStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/restoreStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Backups_GetVolumeLatestRestoreStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups?api-version=2024-03-01:
    get:
      tags:
        - Backups
      summary: List Backups
      description: List all backups Under a Backup Vault
      operationId: Backups_ListByVault
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
        - name: $filter
          in: query
          description: An option to specify the VolumeResourceId. If present, then only returns the backups under the specified volume
          required: false
          schema:
            type: string
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}?api-version=2024-03-01:
    get:
      summary: Describe the Backup under Backup Vault
      description: Get the specified Backup under Backup Vault.
      tags:
        - Backups
      operationId: Backups_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
        - $ref: '#/components/parameters/BackupName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Backups
      summary: Create a backup
      description: Create a backup under the Backup Vault
      operationId: Backups_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
        - $ref: '#/components/parameters/BackupName'
      requestBody:
        description: Backup object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backup'
      responses:
        '200':
          description: OK - backup created updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backup'
        '201':
          description: Backup created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - Backups
      summary: Patch a backup
      description: Patch a Backup under the Backup Vault
      operationId: Backups_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
        - $ref: '#/components/parameters/BackupName'
      requestBody:
        description: Backup object supplied in the body of the operation.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupPatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backup'
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backup'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Backups
      summary: Delete backup
      description: Delete a Backup under the Backup Vault
      operationId: Backups_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
        - $ref: '#/components/parameters/BackupName'
      responses:
        '202':
          description: Accepted -- Create or update request accepted; operation will complete asynchronously
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults?api-version=2024-03-01:
    get:
      summary: Describe all Backup Vaults
      description: List and describe all Backup Vaults in the NetApp account.
      tags:
        - Backup Vaults
      operationId: BackupVaults_ListByNetAppAccount
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupVaultsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}?api-version=2024-03-01:
    get:
      summary: Describe the Backup Vault
      description: Get the Backup Vault
      tags:
        - Backup Vaults
      operationId: BackupVaults_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupVault'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Backup Vaults
      summary: Create or Update a Backup Vault
      description: Create or update the specified Backup Vault in the NetApp account
      operationId: BackupVaults_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
      requestBody:
        description: BackupVault object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupVault'
      responses:
        '200':
          description: OK - backupVault updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupVault'
        '201':
          description: backupVault created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupVault'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      summary: Update NetApp Backup Vault
      description: Patch the specified NetApp Backup Vault
      tags:
        - Backup Vaults
      operationId: BackupVaults_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
      requestBody:
        description: Backup Vault object supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupVaultPatch'
      responses:
        '200':
          description: OK - Backup Vault updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupVault'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backupVault'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      summary: Delete NetApp Backup Vault
      description: Delete the specified Backup Vault
      tags:
        - Backup Vaults
      operationId: BackupVaults_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
      responses:
        '202':
          description: Accepted -- Delete request accepted; operation will complete asynchronously
          headers:
            Location:
              schema:
                type: string
        '204':
          description: NoContent -- Resource does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}/restoreFiles?api-version=2024-03-01:
    post:
      tags:
        - Backups
      operationId: BackupsUnderBackupVault_RestoreFiles
      summary: Create a new Backup Restore Files request
      description: Restore the specified files from the specified backup to the active filesystem
      requestBody:
        description: Restore payload supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupRestoreFiles'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/BackupVaultName'
        - $ref: '#/components/parameters/BackupName'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/migrateBackups?api-version=2024-03-01:
    post:
      tags:
        - Backups
      operationId: BackupsUnderVolume_MigrateBackups
      summary: Create a new migrate request for backups under volume
      description: Migrate the backups under volume to backup vault
      requestBody:
        description: Migrate backups under volume payload supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupsMigrationRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
        - $ref: '#/components/parameters/PoolName'
        - $ref: '#/components/parameters/VolumeName'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/migrateBackups?api-version=2024-03-01:
    post:
      tags:
        - Backups
      operationId: BackupsUnderAccount_MigrateBackups
      summary: Create a new migrate request for backups under account
      description: Migrate the backups under a NetApp account to backup vault
      requestBody:
        description: Migrate backups under an account payload supplied in the body of the operation.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backupsMigrationRequest'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountName'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
