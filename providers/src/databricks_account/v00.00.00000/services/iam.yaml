openapi: 3.0.0
info:
  version: 2024-12-19-stackql-generated
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  title: Databricks Iam API
  description: Identity and Access Management
servers:
- url: https://accounts.cloud.databricks.com
paths:
  /api/2.0/preview/accounts/{account_id}/access-control/assignable-roles:
    get:
      operationId: assignable-roles-getassignablerolesforresource
      externalDocs:
        url: https://docs.databricks.com/api/account/accountaccesscontrol/getassignablerolesforresource
      x-stackQL-resource: assignable_roles
      x-stackQL-method: getassignablerolesforresource
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: resource
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Assignable roles were returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.roles
      description: Gets all the roles that can be granted on an account level resource.
        A role is grantable if the rule set on the resource can contain an access
        rule of the role.
  /api/2.0/accounts/{account_id}/scim/v2/Groups:
    post:
      operationId: groups-create
      externalDocs:
        url: https://docs.databricks.com/api/account/accountgroups/create
      x-stackQL-resource: groups
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 1
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      responses:
        '201':
          description: The group creation request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  displayName:
                    type: string
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                displayName:
                  type: string
                externalId:
                  type: string
                members:
                  type: Array of object
                roles:
                  type: Array of object
              example:
                id: string
                displayName: string
                members:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
        description: Properties of the new group.
      description: Creates a group in the Databricks account with a unique name, using
        the supplied group details.
    get:
      operationId: groups-list
      externalDocs:
        url: https://docs.databricks.com/api/account/accountgroups/list
      x-stackQL-resource: groups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: List groups operation was succesful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalResults:
                    type: integer
                  startIndex:
                    type: integer
                  itemsPerPage:
                    type: integer
                  Resources:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        displayName:
                          type: string
                        members:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        externalId:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.Resources
      description: Gets all details of the groups associated with the Databricks account.
  /api/2.0/accounts/{account_id}/scim/v2/Groups/{id}:
    delete:
      operationId: groups-delete
      externalDocs:
        url: https://docs.databricks.com/api/account/accountgroups/delete
      x-stackQL-resource: groups
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '204':
          description: Group was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a group from the Databricks account.
    get:
      operationId: groups-get
      externalDocs:
        url: https://docs.databricks.com/api/account/accountgroups/get
      x-stackQL-resource: groups
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Group information was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  displayName:
                    type: string
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the information for a specific group in the Databricks account.
    patch:
      operationId: groups-patch
      externalDocs:
        url: https://docs.databricks.com/api/account/accountgroups/patch
      x-stackQL-resource: groups
      x-stackQL-method: patch
      x-stackQL-verb: update
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Group information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                Operations:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
                Operations:
                - op: add
                  path: string
                  value: null
        description: Operations to be applied on group information.
      description: Partially updates the details of a group.
    put:
      operationId: groups-update
      externalDocs:
        url: https://docs.databricks.com/api/account/accountgroups/update
      x-stackQL-resource: groups
      x-stackQL-method: update
      x-stackQL-verb: replace
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Group information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                displayName:
                  type: string
                externalId:
                  type: string
                members:
                  type: Array of object
                roles:
                  type: Array of object
              example:
                id: string
                displayName: string
                members:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
        description: Operations to be applied on group information.
      description: Updates the details of a group by replacing the entire group entity.
  /api/2.0/preview/accounts/{account_id}/access-control/rule-sets:
    get:
      operationId: rule-sets-getruleset
      externalDocs:
        url: https://docs.databricks.com/api/account/accountaccesscontrol/getruleset
      x-stackQL-resource: rule_sets
      x-stackQL-method: getruleset
      x-stackQL-verb: select
      x-numReqParams: 3
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: name
        required: true
        description: string
        in: query
      - name: etag
        required: true
        description: string
        in: query
      responses:
        '200':
          description: The rule set was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  grant_rules:
                    type: array
                    items:
                      type: object
                      properties:
                        principals:
                          type: array
                          items:
                            type: string
                        role:
                          type: string
                  etag:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      description: Get a rule set by its name. A rule set is always attached to a
        resource and contains a list of access rules on the said resource. Currently
        only a default rule set for each resource is supported.
    put:
      operationId: rule-sets-updateruleset
      externalDocs:
        url: https://docs.databricks.com/api/account/accountaccesscontrol/updateruleset
      x-stackQL-resource: rule_sets
      x-stackQL-method: updateruleset
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      responses:
        '200':
          description: Rule sets on the resource was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  grant_rules:
                    type: array
                    items:
                      type: object
                      properties:
                        role:
                          type: string
                        principals:
                          type: array
                          items:
                            type: string
                  etag:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                rule_set:
                  type: object
              example:
                name: string
                rule_set:
                  name: string
                  grant_rules:
                  - principals:
                    - string
                    role: string
                  etag: string
        description: The rule set to update to.
      description: Replace the rules of a rule set. First, use  get to read the current
        version of the rule set before modifying it. This pattern helps prevent conflicts
        between concurrent updates.
  /api/2.0/accounts/{account_id}/scim/v2/ServicePrincipals:
    post:
      operationId: service-principals-create
      externalDocs:
        url: https://docs.databricks.com/api/account/accountserviceprincipals/create
      x-stackQL-resource: service_principals
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 1
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      responses:
        '201':
          description: The user creation request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  applicationId:
                    type: string
                  displayName:
                    type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                applicationId:
                  type: uuid
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                roles:
                  type: Array of object
              example:
                id: string
                applicationId: 97ab27fa-30e2-43e3-92a3-160e80f4c0d5
                displayName: etl-service
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
        description: Properties of the new service principal.
      description: Creates a new service principal in the Databricks account.
    get:
      operationId: service-principals-list
      externalDocs:
        url: https://docs.databricks.com/api/account/accountserviceprincipals/list
      x-stackQL-resource: service_principals
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: List service principals operation was succesful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalResults:
                    type: integer
                  startIndex:
                    type: integer
                  itemsPerPage:
                    type: integer
                  Resources:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        applicationId:
                          type: string
                        displayName:
                          type: string
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        externalId:
                          type: string
                        active:
                          type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.Resources
      description: Gets the set of service principals associated with a Databricks
        account.
  /api/2.0/accounts/{account_id}/scim/v2/ServicePrincipals/{id}:
    delete:
      operationId: service-principals-delete
      externalDocs:
        url: https://docs.databricks.com/api/account/accountserviceprincipals/delete
      x-stackQL-resource: service_principals
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '204':
          description: Service principal was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Delete a single service principal in the Databricks account.
    get:
      operationId: service-principals-get
      externalDocs:
        url: https://docs.databricks.com/api/account/accountserviceprincipals/get
      x-stackQL-resource: service_principals
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Service principal information was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  applicationId:
                    type: string
                  displayName:
                    type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the details for a single service principal define in the Databricks
        account.
    patch:
      operationId: service-principals-patch
      externalDocs:
        url: https://docs.databricks.com/api/account/accountserviceprincipals/patch
      x-stackQL-resource: service_principals
      x-stackQL-method: patch
      x-stackQL-verb: update
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Service principal information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                Operations:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
                Operations:
                - op: add
                  path: string
                  value: null
        description: Operations to be applied on service principal information.
      description: Partially updates the details of a single service principal in
        the Databricks account.
    put:
      operationId: service-principals-update
      externalDocs:
        url: https://docs.databricks.com/api/account/accountserviceprincipals/update
      x-stackQL-resource: service_principals
      x-stackQL-method: update
      x-stackQL-verb: replace
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Service principal information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                applicationId:
                  type: uuid
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                roles:
                  type: Array of object
              example:
                id: string
                applicationId: 97ab27fa-30e2-43e3-92a3-160e80f4c0d5
                displayName: etl-service
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
      description: Updates the details of a single service principal.
  /api/2.0/accounts/{account_id}/scim/v2/Users:
    post:
      operationId: users-create
      externalDocs:
        url: https://docs.databricks.com/api/account/accountusers/create
      x-stackQL-resource: users
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 1
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      responses:
        '201':
          description: The user creation request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  userName:
                    type: string
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  name:
                    type: object
                    properties:
                      givenName:
                        type: string
                      familyName:
                        type: string
                  displayName:
                    type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                userName:
                  type: email
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                emails:
                  type: Array of object
                name:
                  type: object
                roles:
                  type: Array of object
              example:
                id: string
                userName: user@example.com
                emails:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                name:
                  givenName: string
                  familyName: string
                displayName: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
        description: Properties of the new user.
      description: Creates a new user in the Databricks account. This new user will
        also be added to the Databricks account.
    get:
      operationId: users-list
      externalDocs:
        url: https://docs.databricks.com/api/account/accountusers/list
      x-stackQL-resource: users
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: List users operation was succesful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalResults:
                    type: integer
                  startIndex:
                    type: integer
                  itemsPerPage:
                    type: integer
                  Resources:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        userName:
                          type: string
                        emails:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        name:
                          type: object
                          properties:
                            givenName:
                              type: string
                            familyName:
                              type: string
                        displayName:
                          type: string
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        externalId:
                          type: string
                        active:
                          type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.Resources
      description: Gets details for all the users associated with a Databricks account.
  /api/2.0/accounts/{account_id}/scim/v2/Users/{id}:
    delete:
      operationId: users-delete
      externalDocs:
        url: https://docs.databricks.com/api/account/accountusers/delete
      x-stackQL-resource: users
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '204':
          description: User was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a user. Deleting a user from a Databricks account also
        removes objects associated with the user.
    get:
      operationId: users-get
      externalDocs:
        url: https://docs.databricks.com/api/account/accountusers/get
      x-stackQL-resource: users
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: User information was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  userName:
                    type: string
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  name:
                    type: object
                    properties:
                      givenName:
                        type: string
                      familyName:
                        type: string
                  displayName:
                    type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets information for a specific user in Databricks account.
    patch:
      operationId: users-patch
      externalDocs:
        url: https://docs.databricks.com/api/account/accountusers/patch
      x-stackQL-resource: users
      x-stackQL-method: patch
      x-stackQL-verb: update
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: User information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                Operations:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
                Operations:
                - op: add
                  path: string
                  value: null
        description: Operations to be applied on user information.
      description: Partially updates a user resource by applying the supplied operations
        on specific user attributes.
    put:
      operationId: users-update
      externalDocs:
        url: https://docs.databricks.com/api/account/accountusers/update
      x-stackQL-resource: users
      x-stackQL-method: update
      x-stackQL-verb: replace
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: uuid
        in: path
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: User information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                userName:
                  type: email
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                emails:
                  type: Array of object
                name:
                  type: object
                roles:
                  type: Array of object
              example:
                id: string
                userName: user@example.com
                emails:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                name:
                  givenName: string
                  familyName: string
                displayName: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
      description: Replaces a user's information with the data supplied in request.
  /api/2.0/accounts/{account_id}/workspaces/{workspace_id}/permissionassignments/permissions:
    get:
      operationId: workspace-permissions-get
      externalDocs:
        url: https://docs.databricks.com/api/account/workspaceassignment/get
      x-stackQL-resource: workspace_permissions
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: string
        in: path
      - name: workspace_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  permissions:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permissions
      description: Get an array of workspace permissions for the specified account
        and workspace.
  /api/2.0/accounts/{account_id}/workspaces/{workspace_id}/permissionassignments/principals/{principal_id}:
    put:
      operationId: workspace-permission-assignments-createorupdate
      externalDocs:
        url: https://docs.databricks.com/api/account/workspaceassignment/update
      x-stackQL-resource: workspace_permission_assignments
      x-stackQL-method: createorupdate
      x-stackQL-verb: insert
      x-numReqParams: 3
      parameters:
      - name: account_id
        required: true
        description: string
        in: path
      - name: workspace_id
        required: true
        description: int64
        in: path
      - name: principal_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  principal:
                    type: object
                    properties:
                      user_name:
                        type: string
                      group_name:
                        type: string
                      service_principal_name:
                        type: string
                      principal_id:
                        type: integer
                      display_name:
                        type: string
                  permissions:
                    type: array
                    items:
                      type: string
                  error:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: Array of string
              example:
                permissions:
                - UNKNOWN
      description: Creates or updates the workspace permissions assignment in a given
        account and workspace for the specified principal.
    delete:
      operationId: workspace-permission-assignments-delete
      externalDocs:
        url: https://docs.databricks.com/api/account/workspaceassignment/delete
      x-stackQL-resource: workspace_permission_assignments
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 3
      parameters:
      - name: account_id
        required: true
        description: string
        in: path
      - name: workspace_id
        required: true
        description: int64
        in: path
      - name: principal_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      description: Deletes the workspace permissions assignment in a given account
        and workspace for the specified principal.
  /api/2.0/accounts/{account_id}/workspaces/{workspace_id}/permissionassignments:
    get:
      operationId: workspace-permission-assignments-list
      externalDocs:
        url: https://docs.databricks.com/api/account/workspaceassignment/list
      x-stackQL-resource: workspace_permission_assignments
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: account_id
        required: true
        description: string
        in: path
      - name: workspace_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_assignments:
                    type: array
                    items:
                      type: object
                      properties:
                        principal:
                          type: object
                          properties:
                            user_name:
                              type: string
                            group_name:
                              type: string
                            service_principal_name:
                              type: string
                            principal_id:
                              type: integer
                            display_name:
                              type: string
                        permissions:
                          type: array
                          items:
                            type: string
                        error:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_assignments
      description: Get the permission assignments for the specified Databricks account
        and Databricks workspace.
components:
  x-stackQL-resources:
    assignable_roles:
      id: databricks_account.iam.assignable_roles
      name: assignable_roles
      title: Assignable_roles
      methods:
        getassignablerolesforresource:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1accounts~1{account_id}~1access-control~1assignable-roles/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.roles
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/assignable_roles/methods/getassignablerolesforresource'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    groups:
      id: databricks_account.iam.groups
      name: groups
      title: Groups
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Groups/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Groups/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.Resources
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Groups~1{id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Groups~1{id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Groups~1{id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Groups~1{id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/groups/methods/get'
        - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/groups/methods/patch'
        replace:
        - $ref: '#/components/x-stackQL-resources/groups/methods/update'
        delete:
        - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
        exec: []
    rule_sets:
      id: databricks_account.iam.rule_sets
      name: rule_sets
      title: Rule_sets
      methods:
        getruleset:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1accounts~1{account_id}~1access-control~1rule-sets/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updateruleset:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1accounts~1{account_id}~1access-control~1rule-sets/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/rule_sets/methods/updateruleset'
        - $ref: '#/components/x-stackQL-resources/rule_sets/methods/getruleset'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    service_principals:
      id: databricks_account.iam.service_principals
      name: service_principals
      title: Service_principals
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1ServicePrincipals/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1ServicePrincipals/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.Resources
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1ServicePrincipals~1{id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1ServicePrincipals~1{id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1ServicePrincipals~1{id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1ServicePrincipals~1{id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/get'
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/patch'
        replace:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/update'
        delete:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/delete'
        exec: []
    users:
      id: databricks_account.iam.users
      name: users
      title: Users
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Users/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Users/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.Resources
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Users~1{id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Users~1{id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Users~1{id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1scim~1v2~1Users~1{id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/users/methods/get'
        - $ref: '#/components/x-stackQL-resources/users/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/users/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/users/methods/patch'
        replace:
        - $ref: '#/components/x-stackQL-resources/users/methods/update'
        delete:
        - $ref: '#/components/x-stackQL-resources/users/methods/delete'
        exec: []
    workspace_permissions:
      id: databricks_account.iam.workspace_permissions
      name: workspace_permissions
      title: Workspace_permissions
      methods:
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1workspaces~1{workspace_id}~1permissionassignments~1permissions/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permissions
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/workspace_permissions/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    workspace_permission_assignments:
      id: databricks_account.iam.workspace_permission_assignments
      name: workspace_permission_assignments
      title: Workspace_permission_assignments
      methods:
        createorupdate:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1workspaces~1{workspace_id}~1permissionassignments~1principals~1{principal_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1workspaces~1{workspace_id}~1permissionassignments~1principals~1{principal_id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1accounts~1{account_id}~1workspaces~1{workspace_id}~1permissionassignments/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_assignments
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/workspace_permission_assignments/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/workspace_permission_assignments/methods/createorupdate'
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/workspace_permission_assignments/methods/delete'
        exec: []
