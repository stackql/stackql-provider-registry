openapi: 3.0.0
info:
  version: 2024-12-19-stackql-generated
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  title: Databricks Filemanagement API
  description: Filemanagement
servers:
- url: https://{deployment_name}.cloud.databricks.com
  variables:
    deployment_name:
      description: The Databricks Workspace Deployment Name
      default: dbc-abcd0123-a1bc
paths:
  /api/2.0/dbfs/list:
    get:
      operationId: dbfs-directories-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/list
      x-stackQL-resource: dbfs_directories
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: path
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                        is_dir:
                          type: boolean
                        file_size:
                          type: integer
                        modification_time:
                          type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.files
      description: List the contents of a directory, or details of the file. If the
        file or directory does not exist, this call throws an exception with
  /api/2.0/dbfs/mkdirs:
    post:
      operationId: dbfs-directories-mkdirs
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/mkdirs
      x-stackQL-resource: dbfs_directories
      x-stackQL-method: mkdirs
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: required
              example:
                path: /mnt/foo
      description: Creates the given directory and necessary parent directories if
        they do not exist. If a file (not a directory) exists at any prefix of the
        input path, this call throws an exception with
  /api/2.0/dbfs/delete:
    post:
      operationId: dbfs-objects-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/delete
      x-stackQL-resource: dbfs_objects
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: required
                recursive:
                  type: string
              example:
                path: /mnt/foo
                recursive: false
      description: Delete the file or directory (optionally recursively delete all
        files in the directory). This call throws an exception with
  /api/2.0/dbfs/move:
    post:
      operationId: dbfs-files-move
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/move
      x-stackQL-resource: dbfs_files
      x-stackQL-method: move
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source_path:
                  type: required
                destination_path:
                  type: string
              example:
                source_path: /mnt/foo
                destination_path: /mnt/bar
      description: Moves a file from one location to another location within DBFS.
        If the source file does not exist, this call throws an exception with
  /api/2.0/dbfs/put:
    post:
      operationId: dbfs-files-put
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/put
      x-stackQL-resource: dbfs_files
      x-stackQL-method: put
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: required
                contents:
                  type: string
                overwrite:
                  type: string
              example:
                path: /mnt/foo
                contents: string
                overwrite: false
      description: Uploads a file through the use of multipart form post. It is mainly
        used for streaming uploads, but can also be used as a convenient single call
        for data upload.
  /api/2.0/dbfs/read:
    get:
      operationId: dbfs-files-read
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/read
      x-stackQL-resource: dbfs_files
      x-stackQL-method: read
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: path
        required: true
        description: string
        in: query
      - name: offset
        in: query
      - name: length
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bytes_read:
                    type: integer
                  data:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Returns the contents of a file. If the file does not exist, this
        call throws an exception with
  /api/2.0/dbfs/get-status:
    get:
      operationId: dbfs-objects-getstatus
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/getstatus
      x-stackQL-resource: dbfs_objects
      x-stackQL-method: getstatus
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: path
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  path:
                    type: string
                  is_dir:
                    type: boolean
                  file_size:
                    type: integer
                  modification_time:
                    type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the file information for a file or directory. If the file
        or directory does not exist, this call throws an exception with
  /api/2.0/dbfs/add-block:
    post:
      operationId: dbfs-streams-addblock
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/addblock
      x-stackQL-resource: dbfs_streams
      x-stackQL-method: addblock
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                handle:
                  type: required
                data:
                  type: integer
                  format: int64
              example:
                handle: 0
                data: string
      description: Appends a block of data to the stream specified by the input handle.
        If the handle does not exist, this call will throw an exception with
  /api/2.0/dbfs/close:
    post:
      operationId: dbfs-streams-close
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/close
      x-stackQL-resource: dbfs_streams
      x-stackQL-method: close
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                handle:
                  type: required
              example:
                handle: 0
      description: Closes the stream specified by the input handle. If the handle
        does not exist, this call throws an exception with
  /api/2.0/dbfs/create:
    post:
      operationId: dbfs-streams-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/dbfs/create
      x-stackQL-resource: dbfs_streams
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  handle:
                    type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: required
                overwrite:
                  type: string
              example:
                path: /mnt/foo
                overwrite: false
      description: Opens a stream to write to a file and returns a handle to this
        stream. There is a 10 minute idle timeout on this handle. If a file or directory
        already exists on the given path and
  /api/2.0/fs/directories{directory_path}:
    put:
      operationId: directories-createdirectory
      externalDocs:
        url: https://docs.databricks.com/api/workspace/files/createdirectory
      x-stackQL-resource: directories
      x-stackQL-method: createdirectory
      x-stackQL-verb: insert
      x-numReqParams: 1
      parameters:
      - name: directory_path
        required: true
        description: string
        in: path
      responses:
        '204':
          description: The directory was successfully created or already exists.
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      description: Creates an empty directory. If necessary, also creates any parent
        directories of the new, empty directory (like the shell command
    delete:
      operationId: directories-deletedirectory
      externalDocs:
        url: https://docs.databricks.com/api/workspace/files/deletedirectory
      x-stackQL-resource: directories
      x-stackQL-method: deletedirectory
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: directory_path
        required: true
        description: string
        in: path
      responses:
        '204':
          description: The directory was successfully deleted.
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      description: Deletes an empty directory.
    get:
      operationId: directory-contents-listdirectorycontents
      externalDocs:
        url: https://docs.databricks.com/api/workspace/files/listdirectorycontents
      x-stackQL-resource: directory_contents
      x-stackQL-method: listdirectorycontents
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: directory_path
        required: true
        description: string
        in: path
      - name: page_token
        in: query
      - name: page_size
        in: query
      responses:
        '200':
          description: An array of DirectoryEntry for the contents of the directory.
            If `next_page_token` is set, there may be more entries in the directory.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                        is_directory:
                          type: boolean
                        file_size:
                          type: integer
                        last_modified:
                          type: integer
                        name:
                          type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.contents
      description: Returns the contents of a directory. If there is no directory at
        the specified path, the API returns a HTTP 404 error.
  /api/2.0/fs/files{file_path}:
    delete:
      operationId: files-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/files/delete
      x-stackQL-resource: files
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: file_path
        required: true
        description: string
        in: path
      responses:
        '204':
          description: The file was successfully deleted.
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a file. If the request is successful, there is no response
        body.
    get:
      operationId: files-download
      externalDocs:
        url: https://docs.databricks.com/api/workspace/files/download
      x-stackQL-resource: files
      x-stackQL-method: download
      x-stackQL-verb: exec
      x-numReqParams: 1
      parameters:
      - name: file_path
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
      description: Downloads a file. The file contents are the response body. This
        is a standard HTTP file download, not a JSON RPC. It supports the Range and
        If-Unmodified-Since HTTP headers.
    put:
      operationId: files-upload
      externalDocs:
        url: https://docs.databricks.com/api/workspace/files/upload
      x-stackQL-resource: files
      x-stackQL-method: upload
      x-stackQL-verb: exec
      x-numReqParams: 1
      parameters:
      - name: file_path
        required: true
        description: string
        in: path
      - name: overwrite
        in: query
      responses:
        '204':
          description: The file was successfully uploaded.
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      description: Uploads a file of up to 5 GiB. The file contents should be sent
        as the request body as raw bytes (an octet stream); do not encode or otherwise
        modify the bytes before sending. The contents of the resulting file will be
        exactly the bytes sent in the request body. If the request is successful,
        there is no response body.
components:
  x-stackQL-resources:
    dbfs_directories:
      id: databricks_workspace.filemanagement.dbfs_directories
      name: dbfs_directories
      title: Dbfs_directories
      methods:
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.files
        mkdirs:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1mkdirs/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/dbfs_directories/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/dbfs_directories/methods/mkdirs'
        update: []
        replace: []
        delete: []
        exec: []
    dbfs_objects:
      id: databricks_workspace.filemanagement.dbfs_objects
      name: dbfs_objects
      title: Dbfs_objects
      methods:
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1delete/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getstatus:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1get-status/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/dbfs_objects/methods/getstatus'
        insert: []
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/dbfs_objects/methods/delete'
        exec: []
    dbfs_files:
      id: databricks_workspace.filemanagement.dbfs_files
      name: dbfs_files
      title: Dbfs_files
      methods:
        move:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1move/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        put:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1put/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        read:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1read/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/dbfs_files/methods/read'
        insert: []
        update: []
        replace: []
        delete: []
        exec:
        - $ref: '#/components/x-stackQL-resources/dbfs_files/methods/put'
        - $ref: '#/components/x-stackQL-resources/dbfs_files/methods/move'
    dbfs_streams:
      id: databricks_workspace.filemanagement.dbfs_streams
      name: dbfs_streams
      title: Dbfs_streams
      methods:
        addblock:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1add-block/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        close:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1close/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1dbfs~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
        - $ref: '#/components/x-stackQL-resources/dbfs_streams/methods/create'
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/dbfs_streams/methods/close'
        exec:
        - $ref: '#/components/x-stackQL-resources/dbfs_streams/methods/addblock'
    directories:
      id: databricks_workspace.filemanagement.directories
      name: directories
      title: Directories
      methods:
        createdirectory:
          operation:
            $ref: '#/paths/~1api~12.0~1fs~1directories{directory_path}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deletedirectory:
          operation:
            $ref: '#/paths/~1api~12.0~1fs~1directories{directory_path}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
        - $ref: '#/components/x-stackQL-resources/directories/methods/createdirectory'
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/directories/methods/deletedirectory'
        exec: []
    directory_contents:
      id: databricks_workspace.filemanagement.directory_contents
      name: directory_contents
      title: Directory_contents
      methods:
        listdirectorycontents:
          operation:
            $ref: '#/paths/~1api~12.0~1fs~1directories{directory_path}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contents
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/directory_contents/methods/listdirectorycontents'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    files:
      id: databricks_workspace.filemanagement.files
      name: files
      title: Files
      methods:
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1fs~1files{file_path}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        download:
          operation:
            $ref: '#/paths/~1api~12.0~1fs~1files{file_path}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        upload:
          operation:
            $ref: '#/paths/~1api~12.0~1fs~1files{file_path}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/files/methods/delete'
        exec:
        - $ref: '#/components/x-stackQL-resources/files/methods/upload'
        - $ref: '#/components/x-stackQL-resources/files/methods/download'
