openapi: 3.0.0
info:
  version: 2024-12-19-stackql-generated
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  title: Databricks Unitycatalog API
  description: Unitycatalog
servers:
- url: https://{deployment_name}.cloud.databricks.com
  variables:
    deployment_name:
      description: The Databricks Workspace Deployment Name
      default: dbc-abcd0123-a1bc
paths:
  /api/2.1/unity-catalog/artifact-allowlists/{artifact_type}:
    get:
      operationId: artifact-allow-lists-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/artifactallowlists/get
      x-stackQL-resource: artifact_allow_lists
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: artifact_type
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The artifact allowlist was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  artifact_matchers:
                    type: array
                    items:
                      type: object
                      properties:
                        artifact:
                          type: string
                        match_type:
                          type: string
                  metastore_id:
                    type: string
                  created_by:
                    type: string
                  created_at:
                    type: integer
      description: Get the artifact allowlist of a certain artifact type. The caller
        must be a metastore admin or have the
    put:
      operationId: artifact-allow-lists-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/artifactallowlists/update
      x-stackQL-resource: artifact_allow_lists
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: artifact_type
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The artifact allowlist of a certain artifact type was updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  artifact_matchers:
                    type: array
                    items:
                      type: object
                      properties:
                        artifact:
                          type: string
                        match_type:
                          type: string
                  metastore_id:
                    type: string
                  created_by:
                    type: string
                  created_at:
                    type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                artifact_matchers:
                  type: required
              example:
                artifact_matchers:
                - artifact: string
                  match_type: PREFIX_MATCH
      description: Set the artifact allowlist of a certain artifact type. The whole
        artifact allowlist is replaced with the new allowlist. The caller must be
        a metastore admin or have the
  /api/2.1/unity-catalog/catalogs:
    post:
      operationId: catalogs-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/catalogs/create
      x-stackQL-resource: catalogs
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The new catalog was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  storage_root:
                    type: string
                  provider_name:
                    type: string
                  share_name:
                    type: string
                  enable_predictive_optimization:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  catalog_type:
                    type: string
                  storage_location:
                    type: string
                  effective_predictive_optimization_flag:
                    type: object
                    properties:
                      value:
                        type: string
                      inherited_from_type:
                        type: string
                      inherited_from_name:
                        type: string
                  isolation_mode:
                    type: string
                  connection_name:
                    type: string
                  options:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  full_name:
                    type: string
                  securable_kind:
                    type: string
                  securable_type:
                    type: string
                  provisioning_info:
                    type: object
                    properties:
                      state:
                        type: string
                  browse_only:
                    type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                comment:
                  type: string
                storage_root:
                  type: string
                provider_name:
                  type: string
                share_name:
                  type: string
                connection_name:
                  type: string
                properties:
                  type: object
                options:
                  type: object
              example:
                name: string
                comment: string
                properties:
                  property1: string
                  property2: string
                storage_root: string
                provider_name: string
                share_name: string
                connection_name: string
                options:
                  property1: string
                  property2: string
      description: Creates a new catalog instance in the parent metastore if the caller
        is a metastore admin or has the
    get:
      operationId: catalogs-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/catalogs/list
      x-stackQL-resource: catalogs
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: include_browse
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: The catalog list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  catalogs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        owner:
                          type: string
                        comment:
                          type: string
                        properties:
                          type: object
                          properties:
                            property1:
                              type: string
                            property2:
                              type: string
                        storage_root:
                          type: string
                        provider_name:
                          type: string
                        share_name:
                          type: string
                        enable_predictive_optimization:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        catalog_type:
                          type: string
                        storage_location:
                          type: string
                        effective_predictive_optimization_flag:
                          type: object
                          properties:
                            value:
                              type: string
                            inherited_from_type:
                              type: string
                            inherited_from_name:
                              type: string
                        isolation_mode:
                          type: string
                        connection_name:
                          type: string
                        options:
                          type: object
                          properties:
                            property1:
                              type: string
                            property2:
                              type: string
                        full_name:
                          type: string
                        securable_kind:
                          type: string
                        securable_type:
                          type: string
                        provisioning_info:
                          type: object
                          properties:
                            state:
                              type: string
                        browse_only:
                          type: boolean
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.catalogs
      description: Gets an array of catalogs in the metastore. If the caller is the
        metastore admin, all catalogs will be retrieved. Otherwise, only catalogs
        owned by the caller (or for which the caller has the
  /api/2.1/unity-catalog/catalogs/{name}:
    delete:
      operationId: catalogs-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/catalogs/delete
      x-stackQL-resource: catalogs
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: force
        in: query
      responses:
        '200':
          description: The catalog was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes the catalog that matches the supplied name. The caller
        must be a metastore admin or the owner of the catalog.
    get:
      operationId: catalogs-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/catalogs/get
      x-stackQL-resource: catalogs
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: include_browse
        in: query
      responses:
        '200':
          description: The catalog was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  storage_root:
                    type: string
                  provider_name:
                    type: string
                  share_name:
                    type: string
                  enable_predictive_optimization:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  catalog_type:
                    type: string
                  storage_location:
                    type: string
                  effective_predictive_optimization_flag:
                    type: object
                    properties:
                      value:
                        type: string
                      inherited_from_type:
                        type: string
                      inherited_from_name:
                        type: string
                  isolation_mode:
                    type: string
                  connection_name:
                    type: string
                  options:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  full_name:
                    type: string
                  securable_kind:
                    type: string
                  securable_type:
                    type: string
                  provisioning_info:
                    type: object
                    properties:
                      state:
                        type: string
                  browse_only:
                    type: boolean
      description: Gets the specified catalog in a metastore. The caller must be a
        metastore admin, the owner of the catalog, or a user that has the
    patch:
      operationId: catalogs-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/catalogs/update
      x-stackQL-resource: catalogs
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The catalog was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  storage_root:
                    type: string
                  provider_name:
                    type: string
                  share_name:
                    type: string
                  enable_predictive_optimization:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  catalog_type:
                    type: string
                  storage_location:
                    type: string
                  effective_predictive_optimization_flag:
                    type: object
                    properties:
                      value:
                        type: string
                      inherited_from_type:
                        type: string
                      inherited_from_name:
                        type: string
                  isolation_mode:
                    type: string
                  connection_name:
                    type: string
                  options:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  full_name:
                    type: string
                  securable_kind:
                    type: string
                  securable_type:
                    type: string
                  provisioning_info:
                    type: object
                    properties:
                      state:
                        type: string
                  browse_only:
                    type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                comment:
                  type: string
                isolation_mode:
                  type: string
                enable_predictive_optimization:
                  type: string
                new_name:
                  type: string
                properties:
                  type: object
              example:
                owner: string
                comment: string
                properties:
                  property1: string
                  property2: string
                isolation_mode: OPEN
                enable_predictive_optimization: DISABLE
                new_name: string
      description: Updates the catalog that matches the supplied name. The caller
        must be either the owner of the catalog, or a metastore admin (when changing
        the owner field of the catalog).
  /api/2.1/unity-catalog/connections:
    post:
      operationId: connections-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/connections/create
      x-stackQL-resource: connections
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The connection was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  connection_type:
                    type: string
                  options:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  owner:
                    type: string
                  read_only:
                    type: boolean
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  full_name:
                    type: string
                  url:
                    type: string
                  credential_type:
                    type: string
                  connection_id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  securable_kind:
                    type: string
                  securable_type:
                    type: string
                  provisioning_info:
                    type: object
                    properties:
                      state:
                        type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                connection_type:
                  type: string
                read_only:
                  type: required
                comment:
                  type: string
                options:
                  type: required
                properties:
                  type: object
              example:
                name: string
                connection_type: MYSQL
                options:
                  property1: string
                  property2: string
                read_only: true
                comment: string
                properties:
                  property1: string
                  property2: string
      description: Creates a new connection
    get:
      operationId: connections-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/connections/list
      x-stackQL-resource: connections
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: The connection list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  connections:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        connection_type:
                          type: string
                        options:
                          type: object
                          properties:
                            property1:
                              type: string
                            property2:
                              type: string
                        owner:
                          type: string
                        read_only:
                          type: boolean
                        comment:
                          type: string
                        properties:
                          type: object
                          properties:
                            property1:
                              type: string
                            property2:
                              type: string
                        full_name:
                          type: string
                        url:
                          type: string
                        credential_type:
                          type: string
                        connection_id:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        securable_kind:
                          type: string
                        securable_type:
                          type: string
                        provisioning_info:
                          type: object
                          properties:
                            state:
                              type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.connections
      description: List all connections.
  /api/2.1/unity-catalog/connections/{name}:
    delete:
      operationId: connections-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/connections/delete
      x-stackQL-resource: connections
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The connection was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes the connection that matches the supplied name.
    get:
      operationId: connections-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/connections/get
      x-stackQL-resource: connections
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The connection was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  connection_type:
                    type: string
                  options:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  owner:
                    type: string
                  read_only:
                    type: boolean
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  full_name:
                    type: string
                  url:
                    type: string
                  credential_type:
                    type: string
                  connection_id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  securable_kind:
                    type: string
                  securable_type:
                    type: string
                  provisioning_info:
                    type: object
                    properties:
                      state:
                        type: string
      description: Gets a connection from it's name.
    patch:
      operationId: connections-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/connections/update
      x-stackQL-resource: connections
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The connection was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  connection_type:
                    type: string
                  options:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  owner:
                    type: string
                  read_only:
                    type: boolean
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  full_name:
                    type: string
                  url:
                    type: string
                  credential_type:
                    type: string
                  connection_id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  securable_kind:
                    type: string
                  securable_type:
                    type: string
                  provisioning_info:
                    type: object
                    properties:
                      state:
                        type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                new_name:
                  type: string
                options:
                  type: required
              example:
                options:
                  property1: string
                  property2: string
                owner: string
                new_name: string
      description: Updates the connection that matches the supplied name.
  /api/2.1/unity-catalog/credentials:
    post:
      operationId: credentials-createcredential
      externalDocs:
        url: https://docs.databricks.com/api/workspace/credentials/createcredential
      x-stackQL-resource: credentials
      x-stackQL-method: createcredential
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  aws_iam_role:
                    type: object
                    properties:
                      role_arn:
                        type: string
                      unity_catalog_iam_arn:
                        type: string
                      external_id:
                        type: string
                  comment:
                    type: string
                  read_only:
                    type: boolean
                  purpose:
                    type: string
                  owner:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  used_for_managed_storage:
                    type: boolean
                  full_name:
                    type: string
                  isolation_mode:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                comment:
                  type: string
                read_only:
                  type: string
                purpose:
                  type: boolean
                skip_validation:
                  type: string
                aws_iam_role:
                  type: object
              example:
                name: string
                aws_iam_role:
                  role_arn: string
                  unity_catalog_iam_arn: string
                  external_id: string
                comment: string
                read_only: true
                purpose: STORAGE
                skip_validation: false
      description: Creates a new credential. The type of credential to be created
        is determined by the
    get:
      operationId: credentials-listcredentials
      externalDocs:
        url: https://docs.databricks.com/api/workspace/credentials/listcredentials
      x-stackQL-resource: credentials
      x-stackQL-method: listcredentials
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: purpose
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentials:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        aws_iam_role:
                          type: object
                          properties:
                            role_arn:
                              type: string
                            unity_catalog_iam_arn:
                              type: string
                            external_id:
                              type: string
                        comment:
                          type: string
                        read_only:
                          type: boolean
                        purpose:
                          type: string
                        owner:
                          type: string
                        id:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        used_for_managed_storage:
                          type: boolean
                        full_name:
                          type: string
                        isolation_mode:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.credentials
      description: Gets an array of credentials (as
  /api/2.1/unity-catalog/credentials/{name_arg}:
    delete:
      operationId: credentials-deletecredential
      externalDocs:
        url: https://docs.databricks.com/api/workspace/credentials/deletecredential
      x-stackQL-resource: credentials
      x-stackQL-method: deletecredential
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name_arg
        required: true
        description: string
        in: path
      - name: force
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a service or storage credential from the metastore. The
        caller must be an owner of the credential.
    get:
      operationId: credentials-getcredential
      externalDocs:
        url: https://docs.databricks.com/api/workspace/credentials/getcredential
      x-stackQL-resource: credentials
      x-stackQL-method: getcredential
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name_arg
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  aws_iam_role:
                    type: object
                    properties:
                      role_arn:
                        type: string
                      unity_catalog_iam_arn:
                        type: string
                      external_id:
                        type: string
                  comment:
                    type: string
                  read_only:
                    type: boolean
                  purpose:
                    type: string
                  owner:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  used_for_managed_storage:
                    type: boolean
                  full_name:
                    type: string
                  isolation_mode:
                    type: string
      description: Gets a service or storage credential from the metastore. The caller
        must be a metastore admin, the owner of the credential, or have any permission
        on the credential.
    patch:
      operationId: credentials-updatecredential
      externalDocs:
        url: https://docs.databricks.com/api/workspace/credentials/updatecredential
      x-stackQL-resource: credentials
      x-stackQL-method: updatecredential
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name_arg
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  aws_iam_role:
                    type: object
                    properties:
                      role_arn:
                        type: string
                      unity_catalog_iam_arn:
                        type: string
                      external_id:
                        type: string
                  comment:
                    type: string
                  read_only:
                    type: boolean
                  purpose:
                    type: string
                  owner:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  used_for_managed_storage:
                    type: boolean
                  full_name:
                    type: string
                  isolation_mode:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                comment:
                  type: string
                read_only:
                  type: boolean
                owner:
                  type: string
                isolation_mode:
                  type: string
                skip_validation:
                  type: boolean
                force:
                  type: boolean
                aws_iam_role:
                  type: object
              example:
                new_name: string
                aws_iam_role:
                  role_arn: string
                  unity_catalog_iam_arn: string
                  external_id: string
                comment: string
                read_only: true
                owner: string
                isolation_mode: ISOLATION_MODE_OPEN
                skip_validation: true
                force: true
      description: Updates a service or storage credential on the metastore.
  /api/2.1/unity-catalog/temporary-service-credentials:
    post:
      operationId: credentials-generatetemporaryservicecredential
      externalDocs:
        url: https://docs.databricks.com/api/workspace/credentials/generatetemporaryservicecredential
      x-stackQL-resource: credentials
      x-stackQL-method: generatetemporaryservicecredential
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  aws_temp_credentials:
                    type: object
                    properties:
                      access_key_id:
                        type: string
                      secret_access_key:
                        type: string
                      session_token:
                        type: string
                      access_point:
                        type: string
                  expiration_time:
                    type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credential_name:
                  type: required
              example:
                credential_name: string
      description: Returns a set of temporary credentials generated using the specified
        service credential. The caller must be a metastore admin or have the metastore
        privilege
  /api/2.1/unity-catalog/validate-credentials:
    post:
      operationId: credential-validation-validatecredential
      externalDocs:
        url: https://docs.databricks.com/api/workspace/credentials/validatecredential
      x-stackQL-resource: credential_validation
      x-stackQL-method: validatecredential
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        result:
                          type: string
                        message:
                          type: string
                  isDir:
                    type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credential_name:
                  type: string
                purpose:
                  type: string
                external_location_name:
                  type: string
                url:
                  type: string
                read_only:
                  type: boolean
                aws_iam_role:
                  type: object
              example:
                credential_name: string
                aws_iam_role:
                  role_arn: string
                  unity_catalog_iam_arn: string
                  external_id: string
                purpose: STORAGE
                external_location_name: string
                url: string
                read_only: true
      description: Validates a credential.
  /api/2.1/unity-catalog/effective-permissions/{securable_type}/{full_name}:
    get:
      operationId: effective-grants-geteffective
      externalDocs:
        url: https://docs.databricks.com/api/workspace/grants/geteffective
      x-stackQL-resource: effective_grants
      x-stackQL-method: geteffective
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: securable_type
        required: true
        description: string
        in: path
      - name: full_name
        required: true
        description: string
        in: path
      - name: principal
        in: query
      responses:
        '200':
          description: The effective permissions list for securable was successfully
            retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  privilege_assignments:
                    type: array
                    items:
                      type: object
                      properties:
                        principal:
                          type: string
                        privileges:
                          type: array
                          items:
                            type: object
                            properties:
                              privilege:
                                type: string
                              inherited_from_type:
                                type: string
                              inherited_from_name:
                                type: string
      x-stackQL-objectKey: $.privilege_assignments
      description: Gets the effective permissions for a securable.
  /api/2.1/unity-catalog/external-locations:
    post:
      operationId: external-locations-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/externallocations/create
      x-stackQL-resource: external_locations
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The new external location was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  url:
                    type: string
                  credential_name:
                    type: string
                  read_only:
                    type: boolean
                  comment:
                    type: string
                  owner:
                    type: string
                  access_point:
                    type: string
                  metastore_id:
                    type: string
                  credential_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  browse_only:
                    type: boolean
                  isolation_mode:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                url:
                  type: string
                credential_name:
                  type: required
                read_only:
                  type: string
                comment:
                  type: required
                access_point:
                  type: string
                skip_validation:
                  type: boolean
              example:
                name: string
                url: string
                credential_name: string
                read_only: true
                comment: string
                access_point: string
                skip_validation: true
      description: Creates a new external location entry in the metastore. The caller
        must be a metastore admin or have the
    get:
      operationId: external-locations-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/externallocations/list
      x-stackQL-resource: external_locations
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_browse
        in: query
      responses:
        '200':
          description: The external location list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  external_locations:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                        credential_name:
                          type: string
                        read_only:
                          type: boolean
                        comment:
                          type: string
                        owner:
                          type: string
                        access_point:
                          type: string
                        metastore_id:
                          type: string
                        credential_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        browse_only:
                          type: boolean
                        isolation_mode:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.external_locations
      description: Gets an array of external locations (
  /api/2.1/unity-catalog/external-locations/{name}:
    delete:
      operationId: external-locations-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/externallocations/delete
      x-stackQL-resource: external_locations
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: force
        in: query
      responses:
        '200':
          description: The external location was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes the specified external location from the metastore. The
        caller must be the owner of the external location.
    get:
      operationId: external-locations-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/externallocations/get
      x-stackQL-resource: external_locations
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: include_browse
        in: query
      responses:
        '200':
          description: The external location was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  url:
                    type: string
                  credential_name:
                    type: string
                  read_only:
                    type: boolean
                  comment:
                    type: string
                  owner:
                    type: string
                  access_point:
                    type: string
                  metastore_id:
                    type: string
                  credential_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  browse_only:
                    type: boolean
                  isolation_mode:
                    type: string
      description: Gets an external location from the metastore. The caller must be
        either a metastore admin, the owner of the external location, or a user that
        has some privilege on the external location.
    patch:
      operationId: external-locations-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/externallocations/update
      x-stackQL-resource: external_locations
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The external location was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  url:
                    type: string
                  credential_name:
                    type: string
                  read_only:
                    type: boolean
                  comment:
                    type: string
                  owner:
                    type: string
                  access_point:
                    type: string
                  metastore_id:
                    type: string
                  credential_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  browse_only:
                    type: boolean
                  isolation_mode:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                credential_name:
                  type: string
                read_only:
                  type: boolean
                comment:
                  type: string
                owner:
                  type: string
                access_point:
                  type: string
                isolation_mode:
                  type: string
                new_name:
                  type: string
                force:
                  type: boolean
                skip_validation:
                  type: boolean
              example:
                url: string
                credential_name: string
                read_only: true
                comment: string
                owner: string
                access_point: string
                isolation_mode: ISOLATION_MODE_OPEN
                new_name: string
                force: true
                skip_validation: true
      description: Updates an external location in the metastore. The caller must
        be the owner of the external location, or be a metastore admin. In the second
        case, the admin can only update the name of the external location.
  /api/2.1/unity-catalog/functions:
    post:
      operationId: functions-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/functions/create
      x-stackQL-resource: functions
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The new function was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  input_params:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type_text:
                              type: string
                            type_json:
                              type: string
                            type_name:
                              type: string
                            type_precision:
                              type: integer
                            type_scale:
                              type: integer
                            type_interval_type:
                              type: string
                            position:
                              type: integer
                            parameter_mode:
                              type: string
                            parameter_type:
                              type: string
                            parameter_default:
                              type: string
                            comment:
                              type: string
                  data_type:
                    type: string
                  full_data_type:
                    type: string
                  return_params:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type_text:
                              type: string
                            type_json:
                              type: string
                            type_name:
                              type: string
                            type_precision:
                              type: integer
                            type_scale:
                              type: integer
                            type_interval_type:
                              type: string
                            position:
                              type: integer
                            parameter_mode:
                              type: string
                            parameter_type:
                              type: string
                            parameter_default:
                              type: string
                            comment:
                              type: string
                  routine_body:
                    type: string
                  routine_definition:
                    type: string
                  routine_dependencies:
                    type: object
                    properties:
                      dependencies:
                        type: array
                        items:
                          type: object
                          properties:
                            table:
                              type: object
                              properties:
                                table_full_name:
                                  type: string
                            function:
                              type: object
                              properties:
                                function_full_name:
                                  type: string
                  parameter_style:
                    type: string
                  is_deterministic:
                    type: boolean
                  sql_data_access:
                    type: string
                  is_null_call:
                    type: boolean
                  security_type:
                    type: string
                  specific_name:
                    type: string
                  external_name:
                    type: string
                  external_language:
                    type: string
                  sql_path:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: string
                  metastore_id:
                    type: string
                  full_name:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  function_id:
                    type: string
                  browse_only:
                    type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                function_info:
                  type: object
              example:
                function_info:
                  name: string
                  catalog_name: string
                  schema_name: string
                  input_params:
                    parameters:
                    - name: string
                      type_text: string
                      type_json: string
                      type_name: BOOLEAN
                      type_precision: 0
                      type_scale: 0
                      type_interval_type: string
                      position: 0
                      parameter_mode: IN
                      parameter_type: PARAM
                      parameter_default: string
                      comment: string
                  data_type: BOOLEAN
                  full_data_type: string
                  return_params:
                    parameters:
                    - name: string
                      type_text: string
                      type_json: string
                      type_name: BOOLEAN
                      type_precision: 0
                      type_scale: 0
                      type_interval_type: string
                      position: 0
                      parameter_mode: IN
                      parameter_type: PARAM
                      parameter_default: string
                      comment: string
                  routine_definition: string
                  routine_dependencies:
                    dependencies:
                    - table:
                        table_full_name: string
                      function:
                        function_full_name: string
                  is_deterministic: true
                  is_null_call: true
                  specific_name: string
                  external_name: string
                  external_language: string
                  sql_path: string
                  comment: string
                  properties: string
                  routine_body: SQL
                  security_type: DEFINER
                  sql_data_access: CONTAINS_SQL
                  parameter_style: S
    get:
      operationId: functions-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/functions/list
      x-stackQL-resource: functions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: catalog_name
        required: true
        description: string
        in: query
      - name: schema_name
        required: true
        description: string
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_browse
        in: query
      responses:
        '200':
          description: The function list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  functions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        catalog_name:
                          type: string
                        schema_name:
                          type: string
                        input_params:
                          type: object
                          properties:
                            parameters:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  type_text:
                                    type: string
                                  type_json:
                                    type: string
                                  type_name:
                                    type: string
                                  type_precision:
                                    type: integer
                                  type_scale:
                                    type: integer
                                  type_interval_type:
                                    type: string
                                  position:
                                    type: integer
                                  parameter_mode:
                                    type: string
                                  parameter_type:
                                    type: string
                                  parameter_default:
                                    type: string
                                  comment:
                                    type: string
                        data_type:
                          type: string
                        full_data_type:
                          type: string
                        return_params:
                          type: object
                          properties:
                            parameters:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  type_text:
                                    type: string
                                  type_json:
                                    type: string
                                  type_name:
                                    type: string
                                  type_precision:
                                    type: integer
                                  type_scale:
                                    type: integer
                                  type_interval_type:
                                    type: string
                                  position:
                                    type: integer
                                  parameter_mode:
                                    type: string
                                  parameter_type:
                                    type: string
                                  parameter_default:
                                    type: string
                                  comment:
                                    type: string
                        routine_body:
                          type: string
                        routine_definition:
                          type: string
                        routine_dependencies:
                          type: object
                          properties:
                            dependencies:
                              type: array
                              items:
                                type: object
                                properties:
                                  table:
                                    type: object
                                    properties:
                                      table_full_name:
                                        type: string
                                  function:
                                    type: object
                                    properties:
                                      function_full_name:
                                        type: string
                        parameter_style:
                          type: string
                        is_deterministic:
                          type: boolean
                        sql_data_access:
                          type: string
                        is_null_call:
                          type: boolean
                        security_type:
                          type: string
                        specific_name:
                          type: string
                        external_name:
                          type: string
                        external_language:
                          type: string
                        sql_path:
                          type: string
                        owner:
                          type: string
                        comment:
                          type: string
                        properties:
                          type: string
                        metastore_id:
                          type: string
                        full_name:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        function_id:
                          type: string
                        browse_only:
                          type: boolean
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.functions
      description: List functions within the specified parent catalog and schema.
        If the user is a metastore admin, all functions are returned in the output
        list. Otherwise, the user must have the
  /api/2.1/unity-catalog/functions/{name}:
    delete:
      operationId: functions-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/functions/delete
      x-stackQL-resource: functions
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: force
        in: query
      responses:
        '200':
          description: The function was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: 'Deletes the function that matches the supplied name. For the deletion
        to succeed, the user must satisfy one of the following conditions:'
    get:
      operationId: functions-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/functions/get
      x-stackQL-resource: functions
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: include_browse
        in: query
      responses:
        '200':
          description: The function was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  input_params:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type_text:
                              type: string
                            type_json:
                              type: string
                            type_name:
                              type: string
                            type_precision:
                              type: integer
                            type_scale:
                              type: integer
                            type_interval_type:
                              type: string
                            position:
                              type: integer
                            parameter_mode:
                              type: string
                            parameter_type:
                              type: string
                            parameter_default:
                              type: string
                            comment:
                              type: string
                  data_type:
                    type: string
                  full_data_type:
                    type: string
                  return_params:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type_text:
                              type: string
                            type_json:
                              type: string
                            type_name:
                              type: string
                            type_precision:
                              type: integer
                            type_scale:
                              type: integer
                            type_interval_type:
                              type: string
                            position:
                              type: integer
                            parameter_mode:
                              type: string
                            parameter_type:
                              type: string
                            parameter_default:
                              type: string
                            comment:
                              type: string
                  routine_body:
                    type: string
                  routine_definition:
                    type: string
                  routine_dependencies:
                    type: object
                    properties:
                      dependencies:
                        type: array
                        items:
                          type: object
                          properties:
                            table:
                              type: object
                              properties:
                                table_full_name:
                                  type: string
                            function:
                              type: object
                              properties:
                                function_full_name:
                                  type: string
                  parameter_style:
                    type: string
                  is_deterministic:
                    type: boolean
                  sql_data_access:
                    type: string
                  is_null_call:
                    type: boolean
                  security_type:
                    type: string
                  specific_name:
                    type: string
                  external_name:
                    type: string
                  external_language:
                    type: string
                  sql_path:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: string
                  metastore_id:
                    type: string
                  full_name:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  function_id:
                    type: string
                  browse_only:
                    type: boolean
      description: 'Gets a function from within a parent catalog and schema. For the
        fetch to succeed, the user must satisfy one of the following requirements:'
    patch:
      operationId: functions-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/functions/update
      x-stackQL-resource: functions
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The function was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  input_params:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type_text:
                              type: string
                            type_json:
                              type: string
                            type_name:
                              type: string
                            type_precision:
                              type: integer
                            type_scale:
                              type: integer
                            type_interval_type:
                              type: string
                            position:
                              type: integer
                            parameter_mode:
                              type: string
                            parameter_type:
                              type: string
                            parameter_default:
                              type: string
                            comment:
                              type: string
                  data_type:
                    type: string
                  full_data_type:
                    type: string
                  return_params:
                    type: object
                    properties:
                      parameters:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            type_text:
                              type: string
                            type_json:
                              type: string
                            type_name:
                              type: string
                            type_precision:
                              type: integer
                            type_scale:
                              type: integer
                            type_interval_type:
                              type: string
                            position:
                              type: integer
                            parameter_mode:
                              type: string
                            parameter_type:
                              type: string
                            parameter_default:
                              type: string
                            comment:
                              type: string
                  routine_body:
                    type: string
                  routine_definition:
                    type: string
                  routine_dependencies:
                    type: object
                    properties:
                      dependencies:
                        type: array
                        items:
                          type: object
                          properties:
                            table:
                              type: object
                              properties:
                                table_full_name:
                                  type: string
                            function:
                              type: object
                              properties:
                                function_full_name:
                                  type: string
                  parameter_style:
                    type: string
                  is_deterministic:
                    type: boolean
                  sql_data_access:
                    type: string
                  is_null_call:
                    type: boolean
                  security_type:
                    type: string
                  specific_name:
                    type: string
                  external_name:
                    type: string
                  external_language:
                    type: string
                  sql_path:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: string
                  metastore_id:
                    type: string
                  full_name:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  function_id:
                    type: string
                  browse_only:
                    type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
              example:
                owner: string
      description: Updates the function that matches the supplied name. Only the owner
        of the function can be updated. If the user is not a metastore admin, the
        user must be a member of the group that is the new function owner.
  /api/2.1/unity-catalog/permissions/{securable_type}/{full_name}:
    get:
      operationId: grants-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/grants/get
      x-stackQL-resource: grants
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: securable_type
        required: true
        description: string
        in: path
      - name: full_name
        required: true
        description: string
        in: path
      - name: principal
        in: query
      responses:
        '200':
          description: The permissions list for securable was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  privilege_assignments:
                    type: array
                    items:
                      type: object
                      properties:
                        principal:
                          type: string
                        privileges:
                          type: array
                          items:
                            type: string
      x-stackQL-objectKey: $.privilege_assignments
      description: Gets the permissions for a securable.
    patch:
      operationId: grants-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/grants/update
      x-stackQL-resource: grants
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 2
      parameters:
      - name: securable_type
        required: true
        description: string
        in: path
      - name: full_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The permissions list for securable was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  privilege_assignments:
                    type: array
                    items:
                      type: object
                      properties:
                        principal:
                          type: string
                        privileges:
                          type: array
                          items:
                            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                changes:
                  type: Array of object
              example:
                changes:
                - principal: string
                  add:
                  - SELECT
                  remove:
                  - SELECT
      description: Updates the permissions for a securable.
  /api/2.1/unity-catalog/metastores:
    post:
      operationId: metastores-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/create
      x-stackQL-resource: metastores
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The new metastore was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  storage_root:
                    type: string
                  default_data_access_config_id:
                    type: string
                  storage_root_credential_id:
                    type: string
                  delta_sharing_scope:
                    type: string
                  delta_sharing_recipient_token_lifetime_in_seconds:
                    type: integer
                  delta_sharing_organization_name:
                    type: string
                  owner:
                    type: string
                  privilege_model_version:
                    type: string
                  region:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_root_credential_name:
                    type: string
                  cloud:
                    type: string
                  global_metastore_id:
                    type: string
                  external_access_enabled:
                    type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                storage_root:
                  type: string
                region:
                  type: string
              example:
                name: string
                storage_root: string
                region: string
      description: Creates a new metastore based on a provided name and optional storage
        root path. By default (if the
    get:
      operationId: metastores-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/list
      x-stackQL-resource: metastores
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The metastore list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metastores:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        storage_root:
                          type: string
                        default_data_access_config_id:
                          type: string
                        storage_root_credential_id:
                          type: string
                        delta_sharing_scope:
                          type: string
                        delta_sharing_recipient_token_lifetime_in_seconds:
                          type: integer
                        delta_sharing_organization_name:
                          type: string
                        owner:
                          type: string
                        privilege_model_version:
                          type: string
                        region:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        storage_root_credential_name:
                          type: string
                        cloud:
                          type: string
                        global_metastore_id:
                          type: string
                        external_access_enabled:
                          type: boolean
      x-stackQL-objectKey: $.metastores
      description: Gets an array of the available metastores (as
  /api/2.1/unity-catalog/metastores/{id}:
    delete:
      operationId: metastores-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/delete
      x-stackQL-resource: metastores
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: string
        in: path
      - name: force
        in: query
      responses:
        '200':
          description: The metastore was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a metastore. The caller must be a metastore admin.
    get:
      operationId: metastores-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/get
      x-stackQL-resource: metastores
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The metastore was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  storage_root:
                    type: string
                  default_data_access_config_id:
                    type: string
                  storage_root_credential_id:
                    type: string
                  delta_sharing_scope:
                    type: string
                  delta_sharing_recipient_token_lifetime_in_seconds:
                    type: integer
                  delta_sharing_organization_name:
                    type: string
                  owner:
                    type: string
                  privilege_model_version:
                    type: string
                  region:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_root_credential_name:
                    type: string
                  cloud:
                    type: string
                  global_metastore_id:
                    type: string
                  external_access_enabled:
                    type: boolean
      description: Gets a metastore that matches the supplied ID. The caller must
        be a metastore admin to retrieve this info.
    patch:
      operationId: metastores-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/update
      x-stackQL-resource: metastores
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The metastore was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  storage_root:
                    type: string
                  default_data_access_config_id:
                    type: string
                  storage_root_credential_id:
                    type: string
                  delta_sharing_scope:
                    type: string
                  delta_sharing_recipient_token_lifetime_in_seconds:
                    type: integer
                  delta_sharing_organization_name:
                    type: string
                  owner:
                    type: string
                  privilege_model_version:
                    type: string
                  region:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_root_credential_name:
                    type: string
                  cloud:
                    type: string
                  global_metastore_id:
                    type: string
                  external_access_enabled:
                    type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_root_credential_id:
                  type: string
                delta_sharing_recipient_token_lifetime_in_seconds:
                  type: integer
                  format: int64
                delta_sharing_organization_name:
                  type: string
                owner:
                  type: string
                privilege_model_version:
                  type: string
                new_name:
                  type: string
                delta_sharing_scope:
                  type: string
              example:
                storage_root_credential_id: string
                delta_sharing_recipient_token_lifetime_in_seconds: 0
                delta_sharing_organization_name: string
                owner: string
                privilege_model_version: string
                new_name: string
                delta_sharing_scope: INTERNAL
      description: Updates information for a specific metastore. The caller must be
        a metastore admin. If the
  /api/2.1/unity-catalog/workspaces/{workspace_id}/metastore:
    put:
      operationId: metastore-assignments-assign
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/assign
      x-stackQL-resource: metastore_assignments
      x-stackQL-method: assign
      x-stackQL-verb: insert
      x-numReqParams: 1
      parameters:
      - name: workspace_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: The metastore was successfully assigned.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                metastore_id:
                  type: required
                default_catalog_name:
                  type: string
              example:
                metastore_id: string
                default_catalog_name: string
      description: Creates a new metastore assignment. If an assignment for the same
    delete:
      operationId: metastore-assignments-unassign
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/unassign
      x-stackQL-resource: metastore_assignments
      x-stackQL-method: unassign
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: workspace_id
        required: true
        description: int64
        in: path
      - name: metastore_id
        required: true
        description: string
        in: query
      responses:
        '200':
          description: The metastore assignment was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a metastore assignment. The caller must be an account administrator.
    patch:
      operationId: metastore-assignments-updateassignment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/updateassignment
      x-stackQL-resource: metastore_assignments
      x-stackQL-method: updateassignment
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: workspace_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: The metastore assignment was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                metastore_id:
                  type: string
                default_catalog_name:
                  type: string
              example:
                metastore_id: string
                default_catalog_name: string
      description: Updates a metastore assignment. This operation can be used to update
  /api/2.1/unity-catalog/current-metastore-assignment:
    get:
      operationId: metastore-assignments-current
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/current
      x-stackQL-resource: metastore_assignments
      x-stackQL-method: current
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The metastore assignment was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metastore_id:
                    type: string
                  workspace_id:
                    type: integer
                  default_catalog_name:
                    type: string
      description: Gets the metastore assignment for the workspace being accessed.
  /api/2.1/unity-catalog/metastore_summary:
    get:
      operationId: metastore-summary-summary
      externalDocs:
        url: https://docs.databricks.com/api/workspace/metastores/summary
      x-stackQL-resource: metastore_summary
      x-stackQL-method: summary
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The metastore summary was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metastore_id:
                    type: string
                  name:
                    type: string
                  default_data_access_config_id:
                    type: string
                  storage_root_credential_id:
                    type: string
                  cloud:
                    type: string
                  region:
                    type: string
                  global_metastore_id:
                    type: string
                  storage_root_credential_name:
                    type: string
                  privilege_model_version:
                    type: string
                  delta_sharing_recipient_token_lifetime_in_seconds:
                    type: integer
                  delta_sharing_organization_name:
                    type: string
                  storage_root:
                    type: string
                  owner:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  external_access_enabled:
                    type: boolean
                  delta_sharing_scope:
                    type: string
      description: Gets information about a metastore. This summary includes the storage
        credential, the cloud vendor, the cloud region, and the global metastore ID.
  /api/2.1/unity-catalog/models/{full_name}/versions/{version}:
    delete:
      operationId: model-versions-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelversions/delete
      x-stackQL-resource: model_versions
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: version
        required: true
        description: integer
        in: path
      responses:
        '200':
          description: Successfully deleted the model version
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a model version from the specified registered model. Any
        aliases assigned to the model version will also be deleted.
    get:
      operationId: model-versions-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelversions/get
      x-stackQL-resource: model_versions
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: version
        required: true
        description: integer
        in: path
      - name: include_browse
        in: query
      - name: include_aliases
        in: query
      responses:
        '200':
          description: Successfully retrieved the properties of the model version
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  comment:
                    type: string
                  source:
                    type: string
                  run_id:
                    type: string
                  run_workspace_id:
                    type: string
                  version:
                    type: integer
                  status:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Get a model version.
    patch:
      operationId: model-versions-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelversions/update
      x-stackQL-resource: model_versions
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 2
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: version
        required: true
        description: integer
        in: path
      responses:
        '200':
          description: Successfully updated the properties of the model version
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  comment:
                    type: string
                  source:
                    type: string
                  run_id:
                    type: string
                  run_workspace_id:
                    type: string
                  version:
                    type: integer
                  status:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
              example:
                comment: This is my new model version comment
      description: Updates the specified model version.
  /api/2.1/unity-catalog/models/{full_name}/aliases/{alias}:
    get:
      operationId: model-versions-getbyalias
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelversions/getbyalias
      x-stackQL-resource: model_versions
      x-stackQL-method: getbyalias
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: alias
        required: true
        description: string
        in: path
      - name: include_aliases
        in: query
      responses:
        '200':
          description: Successfully retrieved the properties of the model version
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  comment:
                    type: string
                  source:
                    type: string
                  run_id:
                    type: string
                  run_workspace_id:
                    type: string
                  version:
                    type: integer
                  status:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
                  aliases:
                    type: array
                    items:
                      type: object
                      properties:
                        alias_name:
                          type: string
                        version_num:
                          type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Get a model version by alias.
    delete:
      operationId: registered-model-aliases-deletealias
      externalDocs:
        url: https://docs.databricks.com/api/workspace/registeredmodels/deletealias
      x-stackQL-resource: registered_model_aliases
      x-stackQL-method: deletealias
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: alias
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Successfully deleted the registered model alias
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a registered model alias.
    put:
      operationId: registered-model-aliases-setalias
      externalDocs:
        url: https://docs.databricks.com/api/workspace/registeredmodels/setalias
      x-stackQL-resource: registered_model_aliases
      x-stackQL-method: setalias
      x-stackQL-verb: replace
      x-numReqParams: 2
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: alias
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Successfully set the specified alias on the registered model
          content:
            application/json:
              schema:
                type: object
                properties:
                  alias_name:
                    type: string
                  version_num:
                    type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: required
                alias:
                  type: string
                version_num:
                  type: required
              example:
                version_num: 2
      description: Set an alias on the specified registered model.
  /api/2.1/unity-catalog/models/{full_name}/versions:
    get:
      operationId: model-versions-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelversions/list
      x-stackQL-resource: model_versions
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_browse
        in: query
      responses:
        '200':
          description: The model version list was successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_versions:
                    type: array
                    items:
                      type: object
                      properties:
                        model_name:
                          type: string
                        catalog_name:
                          type: string
                        schema_name:
                          type: string
                        comment:
                          type: string
                        source:
                          type: string
                        run_id:
                          type: string
                        run_workspace_id:
                          type: string
                        version:
                          type: integer
                        status:
                          type: string
                        id:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        storage_location:
                          type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.model_versions
      description: List model versions. You can list model versions under a particular
        schema, or list all model versions in the current metastore.
  /api/2.0/online-tables:
    post:
      operationId: online-tables-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/onlinetables/create
      x-stackQL-resource: online_tables
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  spec:
                    type: object
                    properties:
                      run_continuously:
                        type: object
                        properties: {}
                      run_triggered:
                        type: object
                        properties: {}
                      source_table_full_name:
                        type: string
                      primary_key_columns:
                        type: array
                        items:
                          type: string
                      timeseries_key:
                        type: string
                      perform_full_copy:
                        type: boolean
                      pipeline_id:
                        type: string
                  status:
                    type: object
                    properties:
                      detailed_state:
                        type: string
                      message:
                        type: string
                      provisioning_status:
                        type: object
                        properties:
                          initial_pipeline_sync_progress:
                            type: object
                            properties:
                              latest_version_currently_processing:
                                type: integer
                              synced_row_count:
                                type: integer
                              total_row_count:
                                type: integer
                              sync_progress_completion:
                                type: number
                              estimated_completion_time_seconds:
                                type: number
                      continuous_update_status:
                        type: object
                        properties:
                          last_processed_commit_version:
                            type: integer
                          timestamp:
                            type: string
                          initial_pipeline_sync_progress:
                            type: object
                            properties:
                              latest_version_currently_processing:
                                type: integer
                              synced_row_count:
                                type: integer
                              total_row_count:
                                type: integer
                              sync_progress_completion:
                                type: number
                              estimated_completion_time_seconds:
                                type: number
                      triggered_update_status:
                        type: object
                        properties:
                          last_processed_commit_version:
                            type: integer
                          timestamp:
                            type: string
                          triggered_update_progress:
                            type: object
                            properties:
                              latest_version_currently_processing:
                                type: integer
                              synced_row_count:
                                type: integer
                              total_row_count:
                                type: integer
                              sync_progress_completion:
                                type: number
                              estimated_completion_time_seconds:
                                type: number
                      failed_status:
                        type: object
                        properties:
                          last_processed_commit_version:
                            type: integer
                          timestamp:
                            type: string
                  table_serving_url:
                    type: string
                  unity_catalog_provisioning_state:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                spec:
                  type: object
              example:
                name: string
                spec:
                  run_continuously: {}
                  run_triggered: {}
                  source_table_full_name: string
                  primary_key_columns:
                  - string
                  timeseries_key: string
                  perform_full_copy: false
                  pipeline_id: string
        description: Online Table information.
      description: Create a new Online Table.
  /api/2.0/online-tables/{name}:
    delete:
      operationId: online-tables-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/onlinetables/delete
      x-stackQL-resource: online_tables
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: 'Delete an online table. Warning: This will delete all the data
        in the online table. If the source Delta table was deleted or modified since
        this Online Table was created, this will lose the data forever!'
    get:
      operationId: online-tables-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/onlinetables/get
      x-stackQL-resource: online_tables
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  spec:
                    type: object
                    properties:
                      run_continuously:
                        type: object
                        properties: {}
                      run_triggered:
                        type: object
                        properties: {}
                      source_table_full_name:
                        type: string
                      primary_key_columns:
                        type: array
                        items:
                          type: string
                      timeseries_key:
                        type: string
                      perform_full_copy:
                        type: boolean
                      pipeline_id:
                        type: string
                  status:
                    type: object
                    properties:
                      detailed_state:
                        type: string
                      message:
                        type: string
                      provisioning_status:
                        type: object
                        properties:
                          initial_pipeline_sync_progress:
                            type: object
                            properties:
                              latest_version_currently_processing:
                                type: integer
                              synced_row_count:
                                type: integer
                              total_row_count:
                                type: integer
                              sync_progress_completion:
                                type: number
                              estimated_completion_time_seconds:
                                type: number
                      continuous_update_status:
                        type: object
                        properties:
                          last_processed_commit_version:
                            type: integer
                          timestamp:
                            type: string
                          initial_pipeline_sync_progress:
                            type: object
                            properties:
                              latest_version_currently_processing:
                                type: integer
                              synced_row_count:
                                type: integer
                              total_row_count:
                                type: integer
                              sync_progress_completion:
                                type: number
                              estimated_completion_time_seconds:
                                type: number
                      triggered_update_status:
                        type: object
                        properties:
                          last_processed_commit_version:
                            type: integer
                          timestamp:
                            type: string
                          triggered_update_progress:
                            type: object
                            properties:
                              latest_version_currently_processing:
                                type: integer
                              synced_row_count:
                                type: integer
                              total_row_count:
                                type: integer
                              sync_progress_completion:
                                type: number
                              estimated_completion_time_seconds:
                                type: number
                      failed_status:
                        type: object
                        properties:
                          last_processed_commit_version:
                            type: integer
                          timestamp:
                            type: string
                  table_serving_url:
                    type: string
                  unity_catalog_provisioning_state:
                    type: string
      description: Get information about an existing online table and its status.
  /api/2.1/unity-catalog/tables/{table_name}/monitor:
    post:
      operationId: quality-monitors-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/qualitymonitors/create
      x-stackQL-resource: quality_monitors
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 1
      parameters:
      - name: table_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The new monitor was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets_dir:
                    type: string
                  output_schema_name:
                    type: string
                  inference_log:
                    type: object
                    properties:
                      problem_type:
                        type: string
                      timestamp_col:
                        type: string
                      granularities:
                        type: array
                        items:
                          type: string
                      prediction_col:
                        type: string
                      label_col:
                        type: string
                      model_id_col:
                        type: string
                      prediction_proba_col:
                        type: string
                  time_series:
                    type: object
                    properties:
                      timestamp_col:
                        type: string
                      granularities:
                        type: array
                        items:
                          type: string
                  snapshot:
                    type: object
                    properties: {}
                  slicing_exprs:
                    type: array
                    items:
                      type: string
                  custom_metrics:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        definition:
                          type: string
                        input_columns:
                          type: array
                          items:
                            type: string
                        output_data_type:
                          type: string
                        type:
                          type: string
                  baseline_table_name:
                    type: string
                  schedule:
                    type: object
                    properties:
                      quartz_cron_expression:
                        type: string
                      timezone_id:
                        type: string
                      pause_status:
                        type: string
                  notifications:
                    type: object
                    properties:
                      on_failure:
                        type: object
                        properties:
                          email_addresses:
                            type: array
                            items:
                              type: string
                  table_name:
                    type: string
                  status:
                    type: string
                  latest_monitor_failure_msg:
                    type: string
                  profile_metrics_table_name:
                    type: string
                  drift_metrics_table_name:
                    type: string
                  dashboard_id:
                    type: string
                  monitor_version:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skip_builtin_dashboard:
                  type: boolean
                warehouse_id:
                  type: string
                assets_dir:
                  type: required
                output_schema_name:
                  type: string
                snapshot:
                  type: required
                slicing_exprs:
                  type: string
                baseline_table_name:
                  type: object
                inference_log:
                  type: object
                time_series:
                  type: object
                custom_metrics:
                  type: Array of object
                schedule:
                  type: object
                notifications:
                  type: object
              example:
                skip_builtin_dashboard: true
                warehouse_id: string
                assets_dir: string
                output_schema_name: string
                inference_log:
                  problem_type: PROBLEM_TYPE_CLASSIFICATION
                  timestamp_col: string
                  granularities:
                  - string
                  prediction_col: string
                  label_col: string
                  model_id_col: string
                  prediction_proba_col: string
                time_series:
                  timestamp_col: string
                  granularities:
                  - string
                snapshot: {}
                slicing_exprs:
                - string
                custom_metrics:
                - name: string
                  definition: string
                  input_columns:
                  - string
                  output_data_type: string
                  type: CUSTOM_METRIC_TYPE_AGGREGATE
                baseline_table_name: string
                schedule:
                  quartz_cron_expression: string
                  timezone_id: string
                  pause_status: UNPAUSED
                notifications:
                  on_failure:
                    email_addresses:
                    - string
      description: Creates a new monitor for the specified table.
    delete:
      operationId: quality-monitors-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/qualitymonitors/delete
      x-stackQL-resource: quality_monitors
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: table_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The monitor was successfully deleted.
      description: Deletes a monitor for the specified table.
    get:
      operationId: quality-monitors-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/qualitymonitors/get
      x-stackQL-resource: quality_monitors
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: table_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The monitor was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets_dir:
                    type: string
                  output_schema_name:
                    type: string
                  inference_log:
                    type: object
                    properties:
                      problem_type:
                        type: string
                      timestamp_col:
                        type: string
                      granularities:
                        type: array
                        items:
                          type: string
                      prediction_col:
                        type: string
                      label_col:
                        type: string
                      model_id_col:
                        type: string
                      prediction_proba_col:
                        type: string
                  time_series:
                    type: object
                    properties:
                      timestamp_col:
                        type: string
                      granularities:
                        type: array
                        items:
                          type: string
                  snapshot:
                    type: object
                    properties: {}
                  slicing_exprs:
                    type: array
                    items:
                      type: string
                  custom_metrics:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        definition:
                          type: string
                        input_columns:
                          type: array
                          items:
                            type: string
                        output_data_type:
                          type: string
                        type:
                          type: string
                  baseline_table_name:
                    type: string
                  schedule:
                    type: object
                    properties:
                      quartz_cron_expression:
                        type: string
                      timezone_id:
                        type: string
                      pause_status:
                        type: string
                  notifications:
                    type: object
                    properties:
                      on_failure:
                        type: object
                        properties:
                          email_addresses:
                            type: array
                            items:
                              type: string
                  table_name:
                    type: string
                  status:
                    type: string
                  latest_monitor_failure_msg:
                    type: string
                  profile_metrics_table_name:
                    type: string
                  drift_metrics_table_name:
                    type: string
                  dashboard_id:
                    type: string
                  monitor_version:
                    type: string
      description: Gets a monitor for the specified table.
    put:
      operationId: quality-monitors-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/qualitymonitors/update
      x-stackQL-resource: quality_monitors
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: table_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The monitor was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets_dir:
                    type: string
                  output_schema_name:
                    type: string
                  inference_log:
                    type: object
                    properties:
                      problem_type:
                        type: string
                      timestamp_col:
                        type: string
                      granularities:
                        type: array
                        items:
                          type: string
                      prediction_col:
                        type: string
                      label_col:
                        type: string
                      model_id_col:
                        type: string
                      prediction_proba_col:
                        type: string
                  time_series:
                    type: object
                    properties:
                      timestamp_col:
                        type: string
                      granularities:
                        type: array
                        items:
                          type: string
                  snapshot:
                    type: object
                    properties: {}
                  slicing_exprs:
                    type: array
                    items:
                      type: string
                  custom_metrics:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        definition:
                          type: string
                        input_columns:
                          type: array
                          items:
                            type: string
                        output_data_type:
                          type: string
                        type:
                          type: string
                  baseline_table_name:
                    type: string
                  schedule:
                    type: object
                    properties:
                      quartz_cron_expression:
                        type: string
                      timezone_id:
                        type: string
                      pause_status:
                        type: string
                  notifications:
                    type: object
                    properties:
                      on_failure:
                        type: object
                        properties:
                          email_addresses:
                            type: array
                            items:
                              type: string
                  table_name:
                    type: string
                  status:
                    type: string
                  latest_monitor_failure_msg:
                    type: string
                  profile_metrics_table_name:
                    type: string
                  drift_metrics_table_name:
                    type: string
                  dashboard_id:
                    type: string
                  monitor_version:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                output_schema_name:
                  type: required
                snapshot:
                  type: string
                slicing_exprs:
                  type: object
                baseline_table_name:
                  type: Array of string
                dashboard_id:
                  type: string
                inference_log:
                  type: object
                time_series:
                  type: object
                custom_metrics:
                  type: Array of object
                schedule:
                  type: object
                notifications:
                  type: object
              example:
                output_schema_name: string
                inference_log:
                  problem_type: PROBLEM_TYPE_CLASSIFICATION
                  timestamp_col: string
                  granularities:
                  - string
                  prediction_col: string
                  label_col: string
                  model_id_col: string
                  prediction_proba_col: string
                time_series:
                  timestamp_col: string
                  granularities:
                  - string
                snapshot: {}
                slicing_exprs:
                - string
                custom_metrics:
                - name: string
                  definition: string
                  input_columns:
                  - string
                  output_data_type: string
                  type: CUSTOM_METRIC_TYPE_AGGREGATE
                baseline_table_name: string
                schedule:
                  quartz_cron_expression: string
                  timezone_id: string
                  pause_status: UNPAUSED
                notifications:
                  on_failure:
                    email_addresses:
                    - string
                dashboard_id: string
      description: Updates a monitor for the specified table.
  /api/2.1/unity-catalog/tables/{table_name}/monitor/refreshes/{refresh_id}:
    get:
      operationId: quality-monitor-refreshes-getrefresh
      externalDocs:
        url: https://docs.databricks.com/api/workspace/qualitymonitors/getrefresh
      x-stackQL-resource: quality_monitor_refreshes
      x-stackQL-method: getrefresh
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: table_name
        required: true
        description: string
        in: path
      - name: refresh_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The refresh info was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh_id:
                    type: integer
                  state:
                    type: string
                  message:
                    type: string
                  start_time_ms:
                    type: integer
                  end_time_ms:
                    type: integer
                  trigger:
                    type: string
      description: Gets info about a specific monitor refresh using the given refresh
        ID.
  /api/2.1/unity-catalog/tables/{table_name}/monitor/refreshes:
    get:
      operationId: quality-monitor-refreshes-listrefreshes
      externalDocs:
        url: https://docs.databricks.com/api/workspace/qualitymonitors/listrefreshes
      x-stackQL-resource: quality_monitor_refreshes
      x-stackQL-method: listrefreshes
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: table_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The list of refresh info was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  refreshes:
                    type: array
                    items:
                      type: object
                      properties:
                        refresh_id:
                          type: integer
                        state:
                          type: string
                        message:
                          type: string
                        start_time_ms:
                          type: integer
                        end_time_ms:
                          type: integer
                        trigger:
                          type: string
      x-stackQL-objectKey: $.refreshes
      description: Gets an array containing the history of the most recent refreshes
        (up to 25) for this table.
    post:
      operationId: quality-monitor-refreshes-runrefresh
      externalDocs:
        url: https://docs.databricks.com/api/workspace/qualitymonitors/runrefresh
      x-stackQL-resource: quality_monitor_refreshes
      x-stackQL-method: runrefresh
      x-stackQL-verb: exec
      x-numReqParams: 1
      parameters:
      - name: table_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The metric refresh was successfully queued.
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh_id:
                    type: integer
                  state:
                    type: string
                  message:
                    type: string
                  start_time_ms:
                    type: integer
                  end_time_ms:
                    type: integer
                  trigger:
                    type: string
      description: Queues a metric refresh on the monitor for the specified table.
        The refresh will execute in the background.
  /api/2.1/unity-catalog/models:
    post:
      operationId: registered-models-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/registeredmodels/create
      x-stackQL-resource: registered_models
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Successfully created the registered model
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  full_name:
                    type: string
                  owner:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
                  securable_type:
                    type: string
                  securable_kind:
                    type: string
                  comment:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                catalog_name:
                  type: required
                schema_name:
                  type: string
                name:
                  type: required
                storage_location:
                  type: string
                comment:
                  type: required
              example:
                name: revenue_forecasting_model
                catalog_name: main
                schema_name: default
                comment: This model contains model versions that forecast future revenue,
                  given historical data
      description: Creates a new registered model in Unity Catalog.
    get:
      operationId: registered-models-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/registeredmodels/list
      x-stackQL-resource: registered_models
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: catalog_name
        in: query
      - name: schema_name
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_browse
        in: query
      responses:
        '200':
          description: The registered model list was successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_models:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        catalog_name:
                          type: string
                        schema_name:
                          type: string
                        full_name:
                          type: string
                        owner:
                          type: string
                        id:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        storage_location:
                          type: string
                        securable_type:
                          type: string
                        securable_kind:
                          type: string
                        comment:
                          type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.registered_models
      description: List registered models. You can list registered models under a
        particular schema, or list all registered models in the current metastore.
  /api/2.1/unity-catalog/models/{full_name}:
    delete:
      operationId: registered-models-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/registeredmodels/delete
      x-stackQL-resource: registered_models
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Successfully deleted the registered model
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a registered model and all its model versions from the
        specified parent catalog and schema.
    get:
      operationId: registered-models-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/registeredmodels/get
      x-stackQL-resource: registered_models
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: include_browse
        in: query
      - name: include_aliases
        in: query
      responses:
        '200':
          description: Successfully retrieved the properties of the registered model
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  full_name:
                    type: string
                  owner:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
                  securable_type:
                    type: string
                  securable_kind:
                    type: string
                  comment:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Get a registered model.
    patch:
      operationId: registered-models-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/registeredmodels/update
      x-stackQL-resource: registered_models
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Successfully updated the properties of the registered model
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  full_name:
                    type: string
                  owner:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
                  securable_type:
                    type: string
                  securable_kind:
                    type: string
                  comment:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                comment:
                  type: string
                new_name:
                  type: string
              example:
                new_name: my_new_model
      description: Updates the specified registered model.
  /api/2.1/unity-catalog/resource-quotas/{parent_securable_type}/{parent_full_name}/{quota_name}:
    get:
      operationId: resource-quotas-getquota
      externalDocs:
        url: https://docs.databricks.com/api/workspace/resourcequotas/getquota
      x-stackQL-resource: resource_quotas
      x-stackQL-method: getquota
      x-stackQL-verb: select
      x-numReqParams: 3
      parameters:
      - name: parent_securable_type
        required: true
        description: string
        in: path
      - name: parent_full_name
        required: true
        description: string
        in: path
      - name: quota_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  quota_info:
                    type: object
                    properties:
                      parent_securable_type:
                        type: string
                      parent_full_name:
                        type: string
                      quota_name:
                        type: string
                      quota_count:
                        type: integer
                      quota_limit:
                        type: integer
                      last_refreshed_at:
                        type: integer
      x-stackQL-objectKey: $.quota_info
      description: The GetQuota API returns usage information for a single resource
        quota, defined as a child-parent pair. This API also refreshes the quota count
        if it is out of date. Refreshes are triggered asynchronously. The updated
        count might not be returned in the first call.
  /api/2.1/unity-catalog/resource-quotas/all-resource-quotas:
    get:
      operationId: resource-quotas-listquotas
      externalDocs:
        url: https://docs.databricks.com/api/workspace/resourcequotas/listquotas
      x-stackQL-resource: resource_quotas
      x-stackQL-method: listquotas
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  quotas:
                    type: array
                    items:
                      type: object
                      properties:
                        parent_securable_type:
                          type: string
                        parent_full_name:
                          type: string
                        quota_name:
                          type: string
                        quota_count:
                          type: integer
                        quota_limit:
                          type: integer
                        last_refreshed_at:
                          type: integer
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.quotas
      description: ListQuotas returns all quota values under the metastore. There
        are no SLAs on the freshness of the counts returned. This API does not trigger
        a refresh of quota counts.
  /api/2.1/unity-catalog/schemas:
    post:
      operationId: schemas-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/schemas/create
      x-stackQL-resource: schemas
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The new schema was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  storage_root:
                    type: string
                  enable_predictive_optimization:
                    type: string
                  metastore_id:
                    type: string
                  full_name:
                    type: string
                  storage_location:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  catalog_type:
                    type: string
                  effective_predictive_optimization_flag:
                    type: object
                    properties:
                      value:
                        type: string
                      inherited_from_type:
                        type: string
                      inherited_from_name:
                        type: string
                  browse_only:
                    type: boolean
                  schema_id:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                catalog_name:
                  type: string
                comment:
                  type: required
                storage_root:
                  type: string
                properties:
                  type: object
              example:
                name: string
                catalog_name: string
                comment: string
                properties:
                  property1: string
                  property2: string
                storage_root: string
      description: Creates a new schema for catalog in the Metatastore. The caller
        must be a metastore admin, or have the
    get:
      operationId: schemas-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/schemas/list
      x-stackQL-resource: schemas
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: catalog_name
        required: true
        description: string
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_browse
        in: query
      responses:
        '200':
          description: The schemas list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        catalog_name:
                          type: string
                        owner:
                          type: string
                        comment:
                          type: string
                        properties:
                          type: object
                          properties:
                            property1:
                              type: string
                            property2:
                              type: string
                        storage_root:
                          type: string
                        enable_predictive_optimization:
                          type: string
                        metastore_id:
                          type: string
                        full_name:
                          type: string
                        storage_location:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        catalog_type:
                          type: string
                        effective_predictive_optimization_flag:
                          type: object
                          properties:
                            value:
                              type: string
                            inherited_from_type:
                              type: string
                            inherited_from_name:
                              type: string
                        browse_only:
                          type: boolean
                        schema_id:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.schemas
      description: Gets an array of schemas for a catalog in the metastore. If the
        caller is the metastore admin or the owner of the parent catalog, all schemas
        for the catalog will be retrieved. Otherwise, only schemas owned by the caller
        (or for which the caller has the
  /api/2.1/unity-catalog/schemas/{full_name}:
    delete:
      operationId: schemas-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/schemas/delete
      x-stackQL-resource: schemas
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: force
        in: query
      responses:
        '200':
          description: The schema was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes the specified schema from the parent catalog. The caller
        must be the owner of the schema or an owner of the parent catalog.
    get:
      operationId: schemas-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/schemas/get
      x-stackQL-resource: schemas
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: include_browse
        in: query
      responses:
        '200':
          description: The schema was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  storage_root:
                    type: string
                  enable_predictive_optimization:
                    type: string
                  metastore_id:
                    type: string
                  full_name:
                    type: string
                  storage_location:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  catalog_type:
                    type: string
                  effective_predictive_optimization_flag:
                    type: object
                    properties:
                      value:
                        type: string
                      inherited_from_type:
                        type: string
                      inherited_from_name:
                        type: string
                  browse_only:
                    type: boolean
                  schema_id:
                    type: string
      description: Gets the specified schema within the metastore. The caller must
        be a metastore admin, the owner of the schema, or a user that has the
    patch:
      operationId: schemas-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/schemas/update
      x-stackQL-resource: schemas
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The schema was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  storage_root:
                    type: string
                  enable_predictive_optimization:
                    type: string
                  metastore_id:
                    type: string
                  full_name:
                    type: string
                  storage_location:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  catalog_type:
                    type: string
                  effective_predictive_optimization_flag:
                    type: object
                    properties:
                      value:
                        type: string
                      inherited_from_type:
                        type: string
                      inherited_from_name:
                        type: string
                  browse_only:
                    type: boolean
                  schema_id:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                comment:
                  type: string
                enable_predictive_optimization:
                  type: string
                new_name:
                  type: string
                properties:
                  type: object
              example:
                owner: string
                comment: string
                properties:
                  property1: string
                  property2: string
                enable_predictive_optimization: DISABLE
                new_name: string
      description: Updates a schema for a catalog. The caller must be the owner of
        the schema or a metastore admin. If the caller is a metastore admin, only
        the
  /api/2.1/unity-catalog/storage-credentials:
    post:
      operationId: storage-credentials-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/storagecredentials/create
      x-stackQL-resource: storage_credentials
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The new storage credential was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  aws_iam_role:
                    type: object
                    properties:
                      role_arn:
                        type: string
                      unity_catalog_iam_arn:
                        type: string
                      external_id:
                        type: string
                  comment:
                    type: string
                  read_only:
                    type: boolean
                  owner:
                    type: string
                  full_name:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  used_for_managed_storage:
                    type: boolean
                  isolation_mode:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                comment:
                  type: string
                read_only:
                  type: string
                skip_validation:
                  type: boolean
                aws_iam_role:
                  type: object
              example:
                name: string
                comment: string
                read_only: true
                aws_iam_role:
                  role_arn: string
                skip_validation: false
      description: Creates a new storage credential.
    get:
      operationId: storage-credentials-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/storagecredentials/list
      x-stackQL-resource: storage_credentials
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: The storage credentials list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  storage_credentials:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        aws_iam_role:
                          type: object
                          properties:
                            role_arn:
                              type: string
                            unity_catalog_iam_arn:
                              type: string
                            external_id:
                              type: string
                        comment:
                          type: string
                        read_only:
                          type: boolean
                        owner:
                          type: string
                        full_name:
                          type: string
                        id:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        used_for_managed_storage:
                          type: boolean
                        isolation_mode:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.storage_credentials
      description: Gets an array of storage credentials (as
  /api/2.1/unity-catalog/storage-credentials/{name}:
    delete:
      operationId: storage-credentials-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/storagecredentials/delete
      x-stackQL-resource: storage_credentials
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: force
        in: query
      responses:
        '200':
          description: The storage credential was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a storage credential from the metastore. The caller must
        be an owner of the storage credential.
    get:
      operationId: storage-credentials-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/storagecredentials/get
      x-stackQL-resource: storage_credentials
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The storage credential was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  aws_iam_role:
                    type: object
                    properties:
                      role_arn:
                        type: string
                      unity_catalog_iam_arn:
                        type: string
                      external_id:
                        type: string
                  comment:
                    type: string
                  read_only:
                    type: boolean
                  owner:
                    type: string
                  full_name:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  used_for_managed_storage:
                    type: boolean
                  isolation_mode:
                    type: string
      description: Gets a storage credential from the metastore. The caller must be
        a metastore admin, the owner of the storage credential, or have some permission
        on the storage credential.
    patch:
      operationId: storage-credentials-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/storagecredentials/update
      x-stackQL-resource: storage_credentials
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The storage credential was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  aws_iam_role:
                    type: object
                    properties:
                      role_arn:
                        type: string
                      unity_catalog_iam_arn:
                        type: string
                      external_id:
                        type: string
                  comment:
                    type: string
                  read_only:
                    type: boolean
                  owner:
                    type: string
                  full_name:
                    type: string
                  id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  used_for_managed_storage:
                    type: boolean
                  isolation_mode:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                read_only:
                  type: boolean
                owner:
                  type: string
                isolation_mode:
                  type: string
                new_name:
                  type: string
                skip_validation:
                  type: boolean
                force:
                  type: boolean
                aws_iam_role:
                  type: object
              example:
                comment: string
                read_only: true
                owner: string
                aws_iam_role:
                  role_arn: string
                isolation_mode: ISOLATION_MODE_OPEN
                new_name: string
                skip_validation: false
                force: true
      description: Updates a storage credential on the metastore.
  /api/2.1/unity-catalog/validate-storage-credentials:
    post:
      operationId: storage-credential-validation-validate
      externalDocs:
        url: https://docs.databricks.com/api/workspace/storagecredentials/validate
      x-stackQL-resource: storage_credential_validation
      x-stackQL-method: validate
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The storage credential validation operation completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  isDir:
                    type: boolean
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        operation:
                          type: string
                        result:
                          type: string
                        message:
                          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_credential_name:
                  type: string
                external_location_name:
                  type: string
                url:
                  type: string
                read_only:
                  type: boolean
                aws_iam_role:
                  type: object
              example:
                storage_credential_name: string
                aws_iam_role:
                  role_arn: string
                external_location_name: string
                url: string
                read_only: true
      description: Validates a storage credential. At least one of
  /api/2.1/unity-catalog/metastores/{metastore_id}/systemschemas/{schema_name}:
    delete:
      operationId: system-schemas-disable
      externalDocs:
        url: https://docs.databricks.com/api/workspace/systemschemas/disable
      x-stackQL-resource: system_schemas
      x-stackQL-method: disable
      x-stackQL-verb: exec
      x-numReqParams: 2
      parameters:
      - name: metastore_id
        required: true
        description: string
        in: path
      - name: schema_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The schema was successfully disabled.
      description: Disables the system schema and removes it from the system catalog.
        The caller must be an account admin or a metastore admin.
    put:
      operationId: system-schemas-enable
      externalDocs:
        url: https://docs.databricks.com/api/workspace/systemschemas/enable
      x-stackQL-resource: system_schemas
      x-stackQL-method: enable
      x-stackQL-verb: exec
      x-numReqParams: 2
      parameters:
      - name: metastore_id
        required: true
        description: string
        in: path
      - name: schema_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The system schema was successfully enabled.
      description: Enables the system schema and adds it to the system catalog. The
        caller must be an account admin or a metastore admin.
  /api/2.1/unity-catalog/metastores/{metastore_id}/systemschemas:
    get:
      operationId: system-schemas-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/systemschemas/list
      x-stackQL-resource: system_schemas
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: metastore_id
        required: true
        description: string
        in: path
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: The schemas list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: object
                      properties:
                        schema:
                          type: string
                        state:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.schemas
      description: Gets an array of system schemas for a metastore. The caller must
        be an account admin or a metastore admin.
  /api/2.1/unity-catalog/tables/{full_name}:
    delete:
      operationId: tables-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/tables/delete
      x-stackQL-resource: tables
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The table was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a table from the specified parent catalog and schema. The
        caller must be the owner of the parent catalog, have the
    get:
      operationId: tables-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/tables/get
      x-stackQL-resource: tables
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: include_delta_metadata
        in: query
      - name: include_browse
        in: query
      - name: include_manifest_capabilities
        in: query
      responses:
        '200':
          description: The table was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  table_type:
                    type: string
                  data_source_format:
                    type: string
                  columns:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        type_text:
                          type: string
                        type_name:
                          type: string
                        position:
                          type: integer
                        type_precision:
                          type: integer
                        type_scale:
                          type: integer
                        type_interval_type:
                          type: string
                        type_json:
                          type: string
                        comment:
                          type: string
                        nullable:
                          type: boolean
                        partition_index:
                          type: integer
                        mask:
                          type: object
                          properties:
                            function_name:
                              type: string
                            using_column_names:
                              type: array
                              items:
                                type: string
                  storage_location:
                    type: string
                  view_definition:
                    type: string
                  view_dependencies:
                    type: object
                    properties:
                      dependencies:
                        type: array
                        items:
                          type: object
                          properties:
                            table:
                              type: object
                              properties:
                                table_full_name:
                                  type: string
                            function:
                              type: object
                              properties:
                                function_full_name:
                                  type: string
                  sql_path:
                    type: string
                  owner:
                    type: string
                  comment:
                    type: string
                  properties:
                    type: object
                    properties:
                      property1:
                        type: string
                      property2:
                        type: string
                  storage_credential_name:
                    type: string
                  table_constraints:
                    type: array
                    items:
                      type: object
                      properties:
                        primary_key_constraint:
                          type: object
                          properties:
                            name:
                              type: string
                            child_columns:
                              type: array
                              items:
                                type: string
                        foreign_key_constraint:
                          type: object
                          properties:
                            name:
                              type: string
                            child_columns:
                              type: array
                              items:
                                type: string
                            parent_table:
                              type: string
                            parent_columns:
                              type: array
                              items:
                                type: string
                        named_table_constraint:
                          type: object
                          properties:
                            name:
                              type: string
                  row_filter:
                    type: object
                    properties:
                      function_name:
                        type: string
                      input_column_names:
                        type: array
                        items:
                          type: string
                  enable_predictive_optimization:
                    type: string
                  metastore_id:
                    type: string
                  full_name:
                    type: string
                  data_access_configuration_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  deleted_at:
                    type: integer
                  table_id:
                    type: string
                  delta_runtime_properties_kvpairs:
                    type: object
                    properties:
                      delta_runtime_properties:
                        type: object
                        properties:
                          property1:
                            type: string
                          property2:
                            type: string
                  effective_predictive_optimization_flag:
                    type: object
                    properties:
                      value:
                        type: string
                      inherited_from_type:
                        type: string
                      inherited_from_name:
                        type: string
                  access_point:
                    type: string
                  pipeline_id:
                    type: string
                  browse_only:
                    type: boolean
      description: 'Gets a table from the metastore for a specific catalog and schema.
        The caller must satisfy one of the following requirements:'
  /api/2.1/unity-catalog/tables:
    get:
      operationId: tables-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/tables/list
      x-stackQL-resource: tables
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: catalog_name
        required: true
        description: string
        in: query
      - name: schema_name
        required: true
        description: string
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_delta_metadata
        in: query
      - name: omit_columns
        in: query
      - name: omit_properties
        in: query
      - name: omit_username
        in: query
      - name: include_browse
        in: query
      - name: include_manifest_capabilities
        in: query
      responses:
        '200':
          description: The tables list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tables:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        catalog_name:
                          type: string
                        schema_name:
                          type: string
                        table_type:
                          type: string
                        data_source_format:
                          type: string
                        columns:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              type_text:
                                type: string
                              type_name:
                                type: string
                              position:
                                type: integer
                              type_precision:
                                type: integer
                              type_scale:
                                type: integer
                              type_interval_type:
                                type: string
                              type_json:
                                type: string
                              comment:
                                type: string
                              nullable:
                                type: boolean
                              partition_index:
                                type: integer
                              mask:
                                type: object
                                properties:
                                  function_name:
                                    type: string
                                  using_column_names:
                                    type: array
                                    items:
                                      type: string
                        storage_location:
                          type: string
                        view_definition:
                          type: string
                        view_dependencies:
                          type: object
                          properties:
                            dependencies:
                              type: array
                              items:
                                type: object
                                properties:
                                  table:
                                    type: object
                                    properties:
                                      table_full_name:
                                        type: string
                                  function:
                                    type: object
                                    properties:
                                      function_full_name:
                                        type: string
                        sql_path:
                          type: string
                        owner:
                          type: string
                        comment:
                          type: string
                        properties:
                          type: object
                          properties:
                            property1:
                              type: string
                            property2:
                              type: string
                        storage_credential_name:
                          type: string
                        table_constraints:
                          type: array
                          items:
                            type: object
                            properties:
                              primary_key_constraint:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  child_columns:
                                    type: array
                                    items:
                                      type: string
                              foreign_key_constraint:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  child_columns:
                                    type: array
                                    items:
                                      type: string
                                  parent_table:
                                    type: string
                                  parent_columns:
                                    type: array
                                    items:
                                      type: string
                              named_table_constraint:
                                type: object
                                properties:
                                  name:
                                    type: string
                        row_filter:
                          type: object
                          properties:
                            function_name:
                              type: string
                            input_column_names:
                              type: array
                              items:
                                type: string
                        enable_predictive_optimization:
                          type: string
                        metastore_id:
                          type: string
                        full_name:
                          type: string
                        data_access_configuration_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        deleted_at:
                          type: integer
                        table_id:
                          type: string
                        delta_runtime_properties_kvpairs:
                          type: object
                          properties:
                            delta_runtime_properties:
                              type: object
                              properties:
                                property1:
                                  type: string
                                property2:
                                  type: string
                        effective_predictive_optimization_flag:
                          type: object
                          properties:
                            value:
                              type: string
                            inherited_from_type:
                              type: string
                            inherited_from_name:
                              type: string
                        access_point:
                          type: string
                        pipeline_id:
                          type: string
                        browse_only:
                          type: boolean
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.tables
      description: Gets an array of all tables for the current metastore under the
        parent catalog and schema. The caller must be a metastore admin or an owner
        of (or have the
  /api/2.1/unity-catalog/constraints:
    post:
      operationId: table-constraints-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/tableconstraints/create
      x-stackQL-resource: table_constraints
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: The new table constraint was successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  primary_key_constraint:
                    type: object
                    properties:
                      name:
                        type: string
                      child_columns:
                        type: array
                        items:
                          type: string
                  foreign_key_constraint:
                    type: object
                    properties:
                      name:
                        type: string
                      child_columns:
                        type: array
                        items:
                          type: string
                      parent_table:
                        type: string
                      parent_columns:
                        type: array
                        items:
                          type: string
                  named_table_constraint:
                    type: object
                    properties:
                      name:
                        type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name_arg:
                  type: required
                constraint:
                  type: required
              example:
                full_name_arg: string
                constraint:
                  primary_key_constraint:
                    name: string
                    child_columns:
                    - string
                  foreign_key_constraint:
                    name: string
                    child_columns:
                    - string
                    parent_table: string
                    parent_columns:
                    - string
                  named_table_constraint:
                    name: string
      description: Creates a new table constraint.
  /api/2.1/unity-catalog/constraints/{full_name}:
    delete:
      operationId: table-constraints-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/tableconstraints/delete
      x-stackQL-resource: table_constraints
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 3
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      - name: constraint_name
        required: true
        description: string
        in: query
      - name: cascade
        required: true
        description: boolean
        in: query
      responses:
        '200':
          description: The table constraint was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a table constraint.
  /api/2.1/unity-catalog/tables/{full_name}/exists:
    get:
      operationId: table-exists-exists
      externalDocs:
        url: https://docs.databricks.com/api/workspace/tables/exists
      x-stackQL-resource: table_exists
      x-stackQL-method: exists
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: full_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The boolean reflecting if the table exists was successfully
            returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  table_exists:
                    type: boolean
      description: 'Gets if a table exists in the metastore for a specific catalog
        and schema. The caller must satisfy one of the following requirements:'
  /api/2.1/unity-catalog/table-summaries:
    get:
      operationId: table-summaries-listsummaries
      externalDocs:
        url: https://docs.databricks.com/api/workspace/tables/listsummaries
      x-stackQL-resource: table_summaries
      x-stackQL-method: listsummaries
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: catalog_name
        required: true
        description: string
        in: query
      - name: schema_name_pattern
        in: query
      - name: table_name_pattern
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_manifest_capabilities
        in: query
      responses:
        '200':
          description: The table summaries list was successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tables:
                    type: array
                    items:
                      type: object
                      properties:
                        full_name:
                          type: string
                        table_type:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.tables
      description: 'Gets an array of summaries for tables for a schema and catalog
        within the metastore. The table summaries returned are either:'
  /api/2.0/unity-catalog/temporary-table-credentials:
    post:
      operationId: temporary-table-credentials-generatetemporarytablecredentials
      externalDocs:
        url: https://docs.databricks.com/api/workspace/temporarytablecredentials/generatetemporarytablecredentials
      x-stackQL-resource: temporary_table_credentials
      x-stackQL-method: generatetemporarytablecredentials
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  aws_temp_credentials:
                    type: object
                    properties:
                      access_key_id:
                        type: string
                      secret_access_key:
                        type: string
                      session_token:
                        type: string
                      access_point:
                        type: string
                  azure_user_delegation_sas:
                    type: object
                    properties:
                      sas_token:
                        type: string
                  gcp_oauth_token:
                    type: object
                    properties:
                      oauth_token:
                        type: string
                  r2_temp_credentials:
                    type: object
                    properties:
                      access_key_id:
                        type: string
                      secret_access_key:
                        type: string
                      session_token:
                        type: string
                  expiration_time:
                    type: integer
                  url:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                table_id:
                  type: string
                operation:
                  type: string
              example:
                table_id: string
                operation: READ
      description: Get a short-lived credential for directly accessing the table data
        on cloud storage. The metastore must have external_access_enabled flag set
        to true (default false). The caller must have EXTERNAL_USE_SCHEMA privilege
        on the parent schema and this privilege can only be granted by catalog owners.
  /api/2.1/unity-catalog/volumes:
    post:
      operationId: volumes-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/volumes/create
      x-stackQL-resource: volumes
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Successfully created the volume
          content:
            application/json:
              schema:
                type: object
                properties:
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  name:
                    type: string
                  full_name:
                    type: string
                  volume_type:
                    type: string
                  owner:
                    type: string
                  volume_id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
                  comment:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                catalog_name:
                  type: required
                schema_name:
                  type: string
                name:
                  type: required
                volume_type:
                  type: string
                storage_location:
                  type: required
                comment:
                  type: string
              example:
                catalog_name: main
                schema_name: default
                name: my_volume
                volume_type: EXTERNAL
                storage_location: s3://my-bucket/hello/world/my-volume
                comment: This is my first volume
      description: Creates a new volume.
    get:
      operationId: volumes-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/volumes/list
      x-stackQL-resource: volumes
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: catalog_name
        required: true
        description: string
        in: query
      - name: schema_name
        required: true
        description: string
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      - name: include_browse
        in: query
      responses:
        '200':
          description: The volume list was successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  volumes:
                    type: array
                    items:
                      type: object
                      properties:
                        catalog_name:
                          type: string
                        schema_name:
                          type: string
                        name:
                          type: string
                        full_name:
                          type: string
                        volume_type:
                          type: string
                        owner:
                          type: string
                        volume_id:
                          type: string
                        metastore_id:
                          type: string
                        created_at:
                          type: integer
                        created_by:
                          type: string
                        updated_at:
                          type: integer
                        updated_by:
                          type: string
                        storage_location:
                          type: string
                        comment:
                          type: string
      x-stackQL-objectKey: $.volumes
      description: Gets an array of volumes for the current metastore under the parent
        catalog and schema.
  /api/2.1/unity-catalog/volumes/{name}:
    delete:
      operationId: volumes-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/volumes/delete
      x-stackQL-resource: volumes
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Successfully deleted the volume
      description: Deletes a volume from the specified parent catalog and schema.
    get:
      operationId: volumes-read
      externalDocs:
        url: https://docs.databricks.com/api/workspace/volumes/read
      x-stackQL-resource: volumes
      x-stackQL-method: read
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      - name: include_browse
        in: query
      responses:
        '200':
          description: Successfully retrieved the properties of the volume
          content:
            application/json:
              schema:
                type: object
                properties:
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  name:
                    type: string
                  full_name:
                    type: string
                  volume_type:
                    type: string
                  owner:
                    type: string
                  volume_id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
                  comment:
                    type: string
      description: Gets a volume from the metastore for a specific catalog and schema.
    patch:
      operationId: volumes-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/volumes/update
      x-stackQL-resource: volumes
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Successfully updated the properties of the volume
          content:
            application/json:
              schema:
                type: object
                properties:
                  catalog_name:
                    type: string
                  schema_name:
                    type: string
                  name:
                    type: string
                  full_name:
                    type: string
                  volume_type:
                    type: string
                  owner:
                    type: string
                  volume_id:
                    type: string
                  metastore_id:
                    type: string
                  created_at:
                    type: integer
                  created_by:
                    type: string
                  updated_at:
                    type: integer
                  updated_by:
                    type: string
                  storage_location:
                    type: string
                  comment:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                comment:
                  type: string
                new_name:
                  type: string
              example:
                new_name: my_new_volume
      description: Updates the specified volume under the specified parent catalog
        and schema.
  /api/2.1/unity-catalog/bindings/{securable_type}/{securable_name}:
    get:
      operationId: workspace-bindings-getbindings
      externalDocs:
        url: https://docs.databricks.com/api/workspace/workspacebindings/getbindings
      x-stackQL-resource: workspace_bindings
      x-stackQL-method: getbindings
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: securable_type
        required: true
        description: string
        in: path
      - name: securable_name
        required: true
        description: string
        in: path
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: A list of workspace IDs that are bound to the securable
          content:
            application/json:
              schema:
                type: object
                properties:
                  bindings:
                    type: array
                    items:
                      type: object
                      properties:
                        workspace_id:
                          type: integer
                        binding_type:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.bindings
      description: Gets workspace bindings of the securable. The caller must be a
        metastore admin or an owner of the securable.
    patch:
      operationId: workspace-bindings-updatebindings
      externalDocs:
        url: https://docs.databricks.com/api/workspace/workspacebindings/updatebindings
      x-stackQL-resource: workspace_bindings
      x-stackQL-method: updatebindings
      x-stackQL-verb: update
      x-numReqParams: 2
      parameters:
      - name: securable_type
        required: true
        description: string
        in: path
      - name: securable_name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: A list of workspace bindings that are bound to the securable.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bindings:
                    type: array
                    items:
                      type: object
                      properties:
                        workspace_id:
                          type: integer
                        binding_type:
                          type: string
                  next_page_token:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                add:
                  type: Array of object
                remove:
                  type: Array of object
              example:
                add:
                - workspace_id: 0
                  binding_type: BINDING_TYPE_READ_WRITE
                remove:
                - workspace_id: 0
                  binding_type: BINDING_TYPE_READ_WRITE
      description: Updates workspace bindings of the securable. The caller must be
        a metastore admin or an owner of the securable.
  /api/2.1/unity-catalog/workspace-bindings/catalogs/{name}:
    patch:
      operationId: workspace-bindings-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/workspacebindings/update
      x-stackQL-resource: workspace_bindings
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: path
      responses:
        '200':
          description: A list of workspace IDs that are bound to the catalog.
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspaces:
                    type: array
                    items:
                      type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assign_workspaces:
                  type: Array of int64
                unassign_workspaces:
                  type: Array of int64
              example:
                assign_workspaces:
                - 0
                unassign_workspaces:
                - 0
      description: Updates workspace bindings of the catalog. The caller must be a
        metastore admin or an owner of the catalog.
components:
  x-stackQL-resources:
    artifact_allow_lists:
      id: databricks_workspace.unitycatalog.artifact_allow_lists
      name: artifact_allow_lists
      title: Artifact_allow_lists
      methods:
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1artifact-allowlists~1{artifact_type}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1artifact-allowlists~1{artifact_type}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/artifact_allow_lists/methods/get'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/artifact_allow_lists/methods/update'
        replace: []
        delete: []
        exec: []
    catalogs:
      id: databricks_workspace.unitycatalog.catalogs
      name: catalogs
      title: Catalogs
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1catalogs/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1catalogs/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.catalogs
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1catalogs~1{name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1catalogs~1{name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1catalogs~1{name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/catalogs/methods/get'
        - $ref: '#/components/x-stackQL-resources/catalogs/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/catalogs/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/catalogs/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/catalogs/methods/delete'
        exec: []
    connections:
      id: databricks_workspace.unitycatalog.connections
      name: connections
      title: Connections
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1connections/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1connections/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.connections
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1connections~1{name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1connections~1{name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1connections~1{name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/connections/methods/get'
        - $ref: '#/components/x-stackQL-resources/connections/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/connections/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/connections/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/connections/methods/delete'
        exec: []
    credentials:
      id: databricks_workspace.unitycatalog.credentials
      name: credentials
      title: Credentials
      methods:
        createcredential:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1credentials/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        listcredentials:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1credentials/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.credentials
        deletecredential:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1credentials~1{name_arg}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getcredential:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1credentials~1{name_arg}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatecredential:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1credentials~1{name_arg}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        generatetemporaryservicecredential:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1temporary-service-credentials/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/credentials/methods/generatetemporaryservicecredential'
        - $ref: '#/components/x-stackQL-resources/credentials/methods/getcredential'
        - $ref: '#/components/x-stackQL-resources/credentials/methods/listcredentials'
        insert:
        - $ref: '#/components/x-stackQL-resources/credentials/methods/createcredential'
        update:
        - $ref: '#/components/x-stackQL-resources/credentials/methods/updatecredential'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/credentials/methods/deletecredential'
        exec: []
    credential_validation:
      id: databricks_workspace.unitycatalog.credential_validation
      name: credential_validation
      title: Credential_validation
      methods:
        validatecredential:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1validate-credentials/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/credential_validation/methods/validatecredential'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    effective_grants:
      id: databricks_workspace.unitycatalog.effective_grants
      name: effective_grants
      title: Effective_grants
      methods:
        geteffective:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1effective-permissions~1{securable_type}~1{full_name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.privilege_assignments
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/effective_grants/methods/geteffective'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    external_locations:
      id: databricks_workspace.unitycatalog.external_locations
      name: external_locations
      title: External_locations
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1external-locations/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1external-locations/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.external_locations
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1external-locations~1{name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1external-locations~1{name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1external-locations~1{name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/external_locations/methods/get'
        - $ref: '#/components/x-stackQL-resources/external_locations/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/external_locations/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/external_locations/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/external_locations/methods/delete'
        exec: []
    functions:
      id: databricks_workspace.unitycatalog.functions
      name: functions
      title: Functions
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1functions/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1functions/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.functions
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1functions~1{name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1functions~1{name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1functions~1{name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/functions/methods/get'
        - $ref: '#/components/x-stackQL-resources/functions/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/functions/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/functions/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/functions/methods/delete'
        exec: []
    grants:
      id: databricks_workspace.unitycatalog.grants
      name: grants
      title: Grants
      methods:
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1permissions~1{securable_type}~1{full_name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.privilege_assignments
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1permissions~1{securable_type}~1{full_name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/grants/methods/get'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/grants/methods/update'
        replace: []
        delete: []
        exec: []
    metastores:
      id: databricks_workspace.unitycatalog.metastores
      name: metastores
      title: Metastores
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.metastores
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores~1{id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores~1{id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores~1{id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/metastores/methods/get'
        - $ref: '#/components/x-stackQL-resources/metastores/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/metastores/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/metastores/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/metastores/methods/delete'
        exec: []
    metastore_assignments:
      id: databricks_workspace.unitycatalog.metastore_assignments
      name: metastore_assignments
      title: Metastore_assignments
      methods:
        assign:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1workspaces~1{workspace_id}~1metastore/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        unassign:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1workspaces~1{workspace_id}~1metastore/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updateassignment:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1workspaces~1{workspace_id}~1metastore/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        current:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1current-metastore-assignment/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/metastore_assignments/methods/current'
        insert:
        - $ref: '#/components/x-stackQL-resources/metastore_assignments/methods/assign'
        update:
        - $ref: '#/components/x-stackQL-resources/metastore_assignments/methods/updateassignment'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/metastore_assignments/methods/unassign'
        exec: []
    metastore_summary:
      id: databricks_workspace.unitycatalog.metastore_summary
      name: metastore_summary
      title: Metastore_summary
      methods:
        summary:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastore_summary/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/metastore_summary/methods/summary'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    model_versions:
      id: databricks_workspace.unitycatalog.model_versions
      name: model_versions
      title: Model_versions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}~1versions~1{version}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}~1versions~1{version}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}~1versions~1{version}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getbyalias:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}~1aliases~1{alias}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}~1versions/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.model_versions
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/list'
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/getbyalias'
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/get'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/delete'
        exec: []
    registered_model_aliases:
      id: databricks_workspace.unitycatalog.registered_model_aliases
      name: registered_model_aliases
      title: Registered_model_aliases
      methods:
        deletealias:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}~1aliases~1{alias}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setalias:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}~1aliases~1{alias}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/registered_model_aliases/methods/setalias'
        delete:
        - $ref: '#/components/x-stackQL-resources/registered_model_aliases/methods/deletealias'
        exec: []
    online_tables:
      id: databricks_workspace.unitycatalog.online_tables
      name: online_tables
      title: Online_tables
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1online-tables/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1online-tables~1{name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1online-tables~1{name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/online_tables/methods/get'
        insert:
        - $ref: '#/components/x-stackQL-resources/online_tables/methods/create'
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/online_tables/methods/delete'
        exec: []
    quality_monitors:
      id: databricks_workspace.unitycatalog.quality_monitors
      name: quality_monitors
      title: Quality_monitors
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{table_name}~1monitor/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{table_name}~1monitor/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{table_name}~1monitor/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{table_name}~1monitor/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/quality_monitors/methods/get'
        insert:
        - $ref: '#/components/x-stackQL-resources/quality_monitors/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/quality_monitors/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/quality_monitors/methods/delete'
        exec: []
    quality_monitor_refreshes:
      id: databricks_workspace.unitycatalog.quality_monitor_refreshes
      name: quality_monitor_refreshes
      title: Quality_monitor_refreshes
      methods:
        getrefresh:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{table_name}~1monitor~1refreshes~1{refresh_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        listrefreshes:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{table_name}~1monitor~1refreshes/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.refreshes
        runrefresh:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{table_name}~1monitor~1refreshes/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/quality_monitor_refreshes/methods/listrefreshes'
        - $ref: '#/components/x-stackQL-resources/quality_monitor_refreshes/methods/getrefresh'
        insert: []
        update: []
        replace: []
        delete: []
        exec:
        - $ref: '#/components/x-stackQL-resources/quality_monitor_refreshes/methods/runrefresh'
    registered_models:
      id: databricks_workspace.unitycatalog.registered_models
      name: registered_models
      title: Registered_models
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.registered_models
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1models~1{full_name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/registered_models/methods/get'
        - $ref: '#/components/x-stackQL-resources/registered_models/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/registered_models/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/registered_models/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/registered_models/methods/delete'
        exec: []
    resource_quotas:
      id: databricks_workspace.unitycatalog.resource_quotas
      name: resource_quotas
      title: Resource_quotas
      methods:
        getquota:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1resource-quotas~1{parent_securable_type}~1{parent_full_name}~1{quota_name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.quota_info
        listquotas:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1resource-quotas~1all-resource-quotas/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.quotas
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/resource_quotas/methods/listquotas'
        - $ref: '#/components/x-stackQL-resources/resource_quotas/methods/getquota'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    schemas:
      id: databricks_workspace.unitycatalog.schemas
      name: schemas
      title: Schemas
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1schemas/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1schemas/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1schemas~1{full_name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1schemas~1{full_name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1schemas~1{full_name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/schemas/methods/get'
        - $ref: '#/components/x-stackQL-resources/schemas/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/schemas/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/schemas/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/schemas/methods/delete'
        exec: []
    storage_credentials:
      id: databricks_workspace.unitycatalog.storage_credentials
      name: storage_credentials
      title: Storage_credentials
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1storage-credentials/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1storage-credentials/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.storage_credentials
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1storage-credentials~1{name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1storage-credentials~1{name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1storage-credentials~1{name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/storage_credentials/methods/get'
        - $ref: '#/components/x-stackQL-resources/storage_credentials/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/storage_credentials/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/storage_credentials/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/storage_credentials/methods/delete'
        exec: []
    storage_credential_validation:
      id: databricks_workspace.unitycatalog.storage_credential_validation
      name: storage_credential_validation
      title: Storage_credential_validation
      methods:
        validate:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1validate-storage-credentials/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/storage_credential_validation/methods/validate'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    system_schemas:
      id: databricks_workspace.unitycatalog.system_schemas
      name: system_schemas
      title: System_schemas
      methods:
        disable:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores~1{metastore_id}~1systemschemas~1{schema_name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        enable:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores~1{metastore_id}~1systemschemas~1{schema_name}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1metastores~1{metastore_id}~1systemschemas/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.schemas
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/system_schemas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
        exec:
        - $ref: '#/components/x-stackQL-resources/system_schemas/methods/enable'
        - $ref: '#/components/x-stackQL-resources/system_schemas/methods/disable'
    tables:
      id: databricks_workspace.unitycatalog.tables
      name: tables
      title: Tables
      methods:
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{full_name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{full_name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tables
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/tables/methods/list'
        - $ref: '#/components/x-stackQL-resources/tables/methods/get'
        insert: []
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/tables/methods/delete'
        exec: []
    table_constraints:
      id: databricks_workspace.unitycatalog.table_constraints
      name: table_constraints
      title: Table_constraints
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1constraints/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1constraints~1{full_name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
        - $ref: '#/components/x-stackQL-resources/table_constraints/methods/create'
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/table_constraints/methods/delete'
        exec: []
    table_exists:
      id: databricks_workspace.unitycatalog.table_exists
      name: table_exists
      title: Table_exists
      methods:
        exists:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1tables~1{full_name}~1exists/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/table_exists/methods/exists'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    table_summaries:
      id: databricks_workspace.unitycatalog.table_summaries
      name: table_summaries
      title: Table_summaries
      methods:
        listsummaries:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1table-summaries/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.tables
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/table_summaries/methods/listsummaries'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    temporary_table_credentials:
      id: databricks_workspace.unitycatalog.temporary_table_credentials
      name: temporary_table_credentials
      title: Temporary_table_credentials
      methods:
        generatetemporarytablecredentials:
          operation:
            $ref: '#/paths/~1api~12.0~1unity-catalog~1temporary-table-credentials/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/temporary_table_credentials/methods/generatetemporarytablecredentials'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    volumes:
      id: databricks_workspace.unitycatalog.volumes
      name: volumes
      title: Volumes
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1volumes/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1volumes/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.volumes
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1volumes~1{name}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        read:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1volumes~1{name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1volumes~1{name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/read'
        - $ref: '#/components/x-stackQL-resources/volumes/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/volumes/methods/delete'
        exec: []
    workspace_bindings:
      id: databricks_workspace.unitycatalog.workspace_bindings
      name: workspace_bindings
      title: Workspace_bindings
      methods:
        getbindings:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1bindings~1{securable_type}~1{securable_name}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.bindings
        updatebindings:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1bindings~1{securable_type}~1{securable_name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1unity-catalog~1workspace-bindings~1catalogs~1{name}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/workspace_bindings/methods/getbindings'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/workspace_bindings/methods/update'
        - $ref: '#/components/x-stackQL-resources/workspace_bindings/methods/updatebindings'
        replace: []
        delete: []
        exec: []
