openapi: 3.0.0
info:
  version: 2024-12-19-stackql-generated
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  title: Databricks Iam API
  description: Iam
servers:
- url: https://{deployment_name}.cloud.databricks.com
  variables:
    deployment_name:
      description: The Databricks Workspace Deployment Name
      default: dbc-abcd0123-a1bc
paths:
  /api/2.0/preview/accounts/access-control/assignable-roles:
    get:
      operationId: assignable-roles-getassignablerolesforresource
      externalDocs:
        url: https://docs.databricks.com/api/workspace/accountaccesscontrolproxy/getassignablerolesforresource
      x-stackQL-resource: assignable_roles
      x-stackQL-method: getassignablerolesforresource
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: resource
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Assignable roles were returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.roles
      description: Gets all the roles that can be granted on an account-level resource.
        A role is grantable if the rule set on the resource can contain an access
        rule of the role.
  /api/2.0/preview/scim/v2/Me:
    get:
      operationId: currentuser-me
      externalDocs:
        url: https://docs.databricks.com/api/workspace/currentuser/me
      x-stackQL-resource: currentuser
      x-stackQL-method: me
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: User information was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  userName:
                    type: string
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  name:
                    type: object
                    properties:
                      givenName:
                        type: string
                      familyName:
                        type: string
                  displayName:
                    type: string
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  entitlements:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Get details about the current method caller's identity.
  /api/2.0/preview/scim/v2/Groups:
    post:
      operationId: groups-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/groups/create
      x-stackQL-resource: groups
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '201':
          description: The group creation request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  displayName:
                    type: string
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  entitlements:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                id:
                  type: integer
                  format: int64
                displayName:
                  type: string
                externalId:
                  type: string
                members:
                  type: Array of object
                groups:
                  type: Array of object
                roles:
                  type: Array of object
                entitlements:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:Group
                id: string
                displayName: string
                members:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                groups:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                entitlements:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
        description: Properties of the new group.
      description: Creates a group in the Databricks workspace with a unique name,
        using the supplied group details.
    get:
      operationId: groups-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/groups/list
      x-stackQL-resource: groups
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: List groups operation was succesful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  totalResults:
                    type: integer
                  startIndex:
                    type: integer
                  itemsPerPage:
                    type: integer
                  Resources:
                    type: array
                    items:
                      type: object
                      properties:
                        schemas:
                          type: array
                          items:
                            type: string
                        id:
                          type: string
                        displayName:
                          type: string
                        members:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        groups:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        entitlements:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        externalId:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.Resources
      description: Gets all details of the groups associated with the Databricks workspace.
  /api/2.0/preview/scim/v2/Groups/{id}:
    delete:
      operationId: groups-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/groups/delete
      x-stackQL-resource: groups
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '204':
          description: Group was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a group from the Databricks workspace.
    get:
      operationId: groups-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/groups/get
      x-stackQL-resource: groups
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Group information was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  displayName:
                    type: string
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  entitlements:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the information for a specific group in the Databricks workspace.
    patch:
      operationId: groups-patch
      externalDocs:
        url: https://docs.databricks.com/api/workspace/groups/patch
      x-stackQL-resource: groups
      x-stackQL-method: patch
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Group information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                Operations:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
                Operations:
                - op: add
                  path: string
                  value: null
        description: Operations to be applied on group information.
      description: Partially updates the details of a group.
    put:
      operationId: groups-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/groups/update
      x-stackQL-resource: groups
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Group information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                id:
                  type: integer
                  format: int64
                displayName:
                  type: string
                externalId:
                  type: string
                members:
                  type: Array of object
                groups:
                  type: Array of object
                roles:
                  type: Array of object
                entitlements:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:Group
                id: string
                displayName: string
                members:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                groups:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                entitlements:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
        description: Operations to be applied on group information.
      description: Updates the details of a group by replacing the entire group entity.
  /api/2.0/permissions/{request_object_type}/{request_object_id}:
    get:
      operationId: permissions-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/permissions/get
      x-stackQL-resource: permissions
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: request_object_type
        required: true
        description: string
        in: path
      - name: request_object_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of an object. Objects can inherit permissions
        from their parent objects or root object.
    put:
      operationId: permissions-set
      externalDocs:
        url: https://docs.databricks.com/api/workspace/permissions/set
      x-stackQL-resource: permissions
      x-stackQL-method: set
      x-stackQL-verb: replace
      x-numReqParams: 2
      parameters:
      - name: request_object_type
        required: true
        description: string
        in: path
      - name: request_object_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their parent objects or root object.
    patch:
      operationId: permissions-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/permissions/update
      x-stackQL-resource: permissions
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 2
      parameters:
      - name: request_object_type
        required: true
        description: string
        in: path
      - name: request_object_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Updates the permissions on an object. Objects can inherit permissions
        from their parent objects or root object.
  /api/2.0/permissions/{request_object_type}/{request_object_id}/permissionLevels:
    get:
      operationId: permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/permissions/getpermissionlevels
      x-stackQL-resource: permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: request_object_type
        required: true
        description: string
        in: path
      - name: request_object_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
  /api/2.0/preview/accounts/access-control/rule-sets:
    get:
      operationId: rule-sets-getruleset
      externalDocs:
        url: https://docs.databricks.com/api/workspace/accountaccesscontrolproxy/getruleset
      x-stackQL-resource: rule_sets
      x-stackQL-method: getruleset
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: etag
        required: true
        description: string
        in: query
      responses:
        '200':
          description: The rule set was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  grant_rules:
                    type: array
                    items:
                      type: object
                      properties:
                        principals:
                          type: array
                          items:
                            type: string
                        role:
                          type: string
                  etag:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      description: Get a rule set by its name. A rule set is always attached to a
        resource and contains a list of access rules on the said resource. Currently
        only a default rule set for each resource is supported.
    put:
      operationId: rule-sets-updateruleset
      externalDocs:
        url: https://docs.databricks.com/api/workspace/accountaccesscontrolproxy/updateruleset
      x-stackQL-resource: rule_sets
      x-stackQL-method: updateruleset
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Rule sets on the resource was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  grant_rules:
                    type: array
                    items:
                      type: object
                      properties:
                        role:
                          type: string
                        principals:
                          type: array
                          items:
                            type: string
                  etag:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                rule_set:
                  type: object
              example:
                name: string
                rule_set:
                  name: string
                  grant_rules:
                  - principals:
                    - string
                    role: string
                  etag: string
        description: The rule set to update to.
      description: Replace the rules of a rule set. First, use a GET rule set request
        to read the current version of the rule set before modifying it. This pattern
        helps prevent conflicts between concurrent updates.
  /api/2.0/preview/scim/v2/ServicePrincipals:
    post:
      operationId: service-principals-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/serviceprincipals/create
      x-stackQL-resource: service_principals
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '201':
          description: The user creation request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  applicationId:
                    type: string
                  displayName:
                    type: string
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  entitlements:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                id:
                  type: integer
                  format: int64
                applicationId:
                  type: uuid
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                groups:
                  type: Array of object
                roles:
                  type: Array of object
                entitlements:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal
                id: string
                applicationId: 97ab27fa-30e2-43e3-92a3-160e80f4c0d5
                displayName: etl-service
                groups:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                entitlements:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
        description: Properties of the new service principal.
      description: Creates a new service principal in the Databricks workspace.
    get:
      operationId: service-principals-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/serviceprincipals/list
      x-stackQL-resource: service_principals
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: List service principals operation was succesful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  totalResults:
                    type: integer
                  startIndex:
                    type: integer
                  itemsPerPage:
                    type: integer
                  Resources:
                    type: array
                    items:
                      type: object
                      properties:
                        schemas:
                          type: array
                          items:
                            type: string
                        id:
                          type: string
                        applicationId:
                          type: string
                        displayName:
                          type: string
                        groups:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        entitlements:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        externalId:
                          type: string
                        active:
                          type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.Resources
      description: Gets the set of service principals associated with a Databricks
        workspace.
  /api/2.0/preview/scim/v2/ServicePrincipals/{id}:
    delete:
      operationId: service-principals-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/serviceprincipals/delete
      x-stackQL-resource: service_principals
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '204':
          description: Service principal was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Delete a single service principal in the Databricks workspace.
    get:
      operationId: service-principals-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/serviceprincipals/get
      x-stackQL-resource: service_principals
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Service principal information was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  applicationId:
                    type: string
                  displayName:
                    type: string
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  entitlements:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the details for a single service principal define in the Databricks
        workspace.
    patch:
      operationId: service-principals-patch
      externalDocs:
        url: https://docs.databricks.com/api/workspace/serviceprincipals/patch
      x-stackQL-resource: service_principals
      x-stackQL-method: patch
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Service principal information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                Operations:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
                Operations:
                - op: add
                  path: string
                  value: null
        description: Operations to be applied on service principal information.
      description: Partially updates the details of a single service principal in
        the Databricks workspace.
    put:
      operationId: service-principals-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/serviceprincipals/update
      x-stackQL-resource: service_principals
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Service principal information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                id:
                  type: integer
                  format: int64
                applicationId:
                  type: uuid
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                groups:
                  type: Array of object
                roles:
                  type: Array of object
                entitlements:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal
                id: string
                applicationId: 97ab27fa-30e2-43e3-92a3-160e80f4c0d5
                displayName: etl-service
                groups:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                entitlements:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
      description: Updates the details of a single service principal.
  /api/2.0/preview/scim/v2/Users:
    post:
      operationId: users-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/create
      x-stackQL-resource: users
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '201':
          description: The user creation request succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  userName:
                    type: string
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  name:
                    type: object
                    properties:
                      givenName:
                        type: string
                      familyName:
                        type: string
                  displayName:
                    type: string
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  entitlements:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                id:
                  type: integer
                  format: int64
                userName:
                  type: email
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                emails:
                  type: Array of object
                name:
                  type: object
                groups:
                  type: Array of object
                roles:
                  type: Array of object
                entitlements:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:User
                id: string
                userName: user@example.com
                emails:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                name:
                  givenName: string
                  familyName: string
                displayName: string
                groups:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                entitlements:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
        description: Properties of the new user.
      description: Creates a new user in the Databricks workspace. This new user will
        also be added to the Databricks account.
    get:
      operationId: users-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/list
      x-stackQL-resource: users
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: List users operation was succesful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  totalResults:
                    type: integer
                  startIndex:
                    type: integer
                  itemsPerPage:
                    type: integer
                  Resources:
                    type: array
                    items:
                      type: object
                      properties:
                        schemas:
                          type: array
                          items:
                            type: string
                        id:
                          type: string
                        userName:
                          type: string
                        emails:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        name:
                          type: object
                          properties:
                            givenName:
                              type: string
                            familyName:
                              type: string
                        displayName:
                          type: string
                        groups:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        entitlements:
                          type: array
                          items:
                            type: object
                            properties:
                              $ref:
                                type: string
                              value:
                                type: string
                              display:
                                type: string
                              primary:
                                type: boolean
                              type:
                                type: string
                        externalId:
                          type: string
                        active:
                          type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.Resources
      description: Gets details for all the users associated with a Databricks workspace.
  /api/2.0/preview/scim/v2/Users/{id}:
    delete:
      operationId: users-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/delete
      x-stackQL-resource: users
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '204':
          description: User was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a user. Deleting a user from a Databricks workspace also
        removes objects associated with the user.
    get:
      operationId: users-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/get
      x-stackQL-resource: users
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      - name: filter
        in: query
      - name: attributes
        in: query
      - name: excludedAttributes
        in: query
      - name: startIndex
        in: query
      - name: count
        in: query
      - name: sortBy
        in: query
      - name: sortOrder
        in: query
      responses:
        '200':
          description: User information was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      type: string
                  id:
                    type: string
                  userName:
                    type: string
                  emails:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  name:
                    type: object
                    properties:
                      givenName:
                        type: string
                      familyName:
                        type: string
                  displayName:
                    type: string
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  entitlements:
                    type: array
                    items:
                      type: object
                      properties:
                        $ref:
                          type: string
                        value:
                          type: string
                        display:
                          type: string
                        primary:
                          type: boolean
                        type:
                          type: string
                  externalId:
                    type: string
                  active:
                    type: boolean
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets information for a specific user in Databricks workspace.
    patch:
      operationId: users-patch
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/patch
      x-stackQL-resource: users
      x-stackQL-method: patch
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: User information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                Operations:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
                Operations:
                - op: add
                  path: string
                  value: null
        description: Operations to be applied on user information.
      description: Partially updates a user resource by applying the supplied operations
        on specific user attributes.
    put:
      operationId: users-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/update
      x-stackQL-resource: users
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: User information was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: Array of string
                id:
                  type: integer
                  format: int64
                userName:
                  type: email
                displayName:
                  type: string
                externalId:
                  type: string
                active:
                  type: boolean
                emails:
                  type: Array of object
                name:
                  type: object
                groups:
                  type: Array of object
                roles:
                  type: Array of object
                entitlements:
                  type: Array of object
              example:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:User
                id: string
                userName: user@example.com
                emails:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                name:
                  givenName: string
                  familyName: string
                displayName: string
                groups:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                roles:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                entitlements:
                - $ref: string
                  value: string
                  display: string
                  primary: true
                  type: string
                externalId: string
                active: true
      description: Replaces a user's information with the data supplied in request.
  /api/2.0/permissions/authorization/passwords:
    get:
      operationId: user-permissions-getpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/getpermissions
      x-stackQL-resource: user_permissions
      x-stackQL-method: getpermissions
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of all passwords. Passwords can inherit permissions
        from their root object.
    put:
      operationId: user-permissions-setpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/setpermissions
      x-stackQL-resource: user_permissions
      x-stackQL-method: setpermissions
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_USE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their root object.
    patch:
      operationId: user-permissions-updatepermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/updatepermissions
      x-stackQL-resource: user_permissions
      x-stackQL-method: updatepermissions
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_USE
      description: Updates the permissions on all passwords. Passwords can inherit
        permissions from their root object.
  /api/2.0/permissions/authorization/passwords/permissionLevels:
    get:
      operationId: user-permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/users/getpermissionlevels
      x-stackQL-resource: user_permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
components:
  x-stackQL-resources:
    assignable_roles:
      id: databricks_workspace.iam.assignable_roles
      name: assignable_roles
      title: Assignable_roles
      methods:
        getassignablerolesforresource:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1accounts~1access-control~1assignable-roles/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.roles
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/assignable_roles/methods/getassignablerolesforresource'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    currentuser:
      id: databricks_workspace.iam.currentuser
      name: currentuser
      title: Currentuser
      methods:
        me:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Me/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/currentuser/methods/me'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    groups:
      id: databricks_workspace.iam.groups
      name: groups
      title: Groups
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Groups/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Groups/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.Resources
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Groups~1{id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Groups~1{id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Groups~1{id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Groups~1{id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/groups/methods/get'
        - $ref: '#/components/x-stackQL-resources/groups/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/groups/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/groups/methods/update'
        - $ref: '#/components/x-stackQL-resources/groups/methods/patch'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/groups/methods/delete'
        exec: []
    permissions:
      id: databricks_workspace.iam.permissions
      name: permissions
      title: Permissions
      methods:
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1{request_object_type}~1{request_object_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        set:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1{request_object_type}~1{request_object_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1{request_object_type}~1{request_object_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/permissions/methods/get'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/permissions/methods/update'
        replace:
        - $ref: '#/components/x-stackQL-resources/permissions/methods/set'
        delete: []
        exec: []
    permission_levels:
      id: databricks_workspace.iam.permission_levels
      name: permission_levels
      title: Permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1{request_object_type}~1{request_object_id}~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    rule_sets:
      id: databricks_workspace.iam.rule_sets
      name: rule_sets
      title: Rule_sets
      methods:
        getruleset:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1accounts~1access-control~1rule-sets/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updateruleset:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1accounts~1access-control~1rule-sets/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/rule_sets/methods/getruleset'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/rule_sets/methods/updateruleset'
        replace: []
        delete: []
        exec: []
    service_principals:
      id: databricks_workspace.iam.service_principals
      name: service_principals
      title: Service_principals
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1ServicePrincipals/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1ServicePrincipals/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.Resources
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1ServicePrincipals~1{id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1ServicePrincipals~1{id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1ServicePrincipals~1{id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1ServicePrincipals~1{id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/get'
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/update'
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/patch'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/service_principals/methods/delete'
        exec: []
    users:
      id: databricks_workspace.iam.users
      name: users
      title: Users
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Users/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Users/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.Resources
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Users~1{id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Users~1{id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Users~1{id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1preview~1scim~1v2~1Users~1{id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/users/methods/get'
        - $ref: '#/components/x-stackQL-resources/users/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/users/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/users/methods/update'
        - $ref: '#/components/x-stackQL-resources/users/methods/patch'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/users/methods/delete'
        exec: []
    user_permissions:
      id: databricks_workspace.iam.user_permissions
      name: user_permissions
      title: User_permissions
      methods:
        getpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1authorization~1passwords/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1authorization~1passwords/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatepermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1authorization~1passwords/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/user_permissions/methods/getpermissions'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/user_permissions/methods/updatepermissions'
        replace:
        - $ref: '#/components/x-stackQL-resources/user_permissions/methods/setpermissions'
        delete: []
        exec: []
    user_permission_levels:
      id: databricks_workspace.iam.user_permission_levels
      name: user_permission_levels
      title: User_permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1authorization~1passwords~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/user_permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
