openapi: 3.0.0
info:
  version: 2024-12-19-stackql-generated
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  title: Databricks Machinelearning API
  description: Machinelearning
servers:
- url: https://{deployment_name}.cloud.databricks.com
  variables:
    deployment_name:
      description: The Databricks Workspace Deployment Name
      default: dbc-abcd0123-a1bc
paths:
  /api/2.0/mlflow/experiments/create:
    post:
      operationId: experiments-createexperiment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/createexperiment
      x-stackQL-resource: experiments
      x-stackQL-method: createexperiment
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiment_id:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                artifact_location:
                  type: string
                tags:
                  type: Array of object
              example:
                name: string
                artifact_location: string
                tags:
                - key: string
                  value: string
      description: Creates an experiment with a name. Returns the ID of the newly
        created experiment. Validates that another experiment with the same name does
        not already exist and fails if another experiment with the same name already
        exists.
  /api/2.0/mlflow/experiments/delete:
    post:
      operationId: experiments-deleteexperiment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/deleteexperiment
      x-stackQL-resource: experiments
      x-stackQL-method: deleteexperiment
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: required
              example:
                experiment_id: string
      description: Marks an experiment and associated metadata, runs, metrics, params,
        and tags for deletion. If the experiment uses FileStore, artifacts associated
        with experiment are also deleted.
  /api/2.0/mlflow/experiments/get-by-name:
    get:
      operationId: experiments-getbyname
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/getbyname
      x-stackQL-resource: experiments
      x-stackQL-method: getbyname
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: experiment_name
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiment:
                    type: object
                    properties:
                      experiment_id:
                        type: string
                      name:
                        type: string
                      artifact_location:
                        type: string
                      lifecycle_stage:
                        type: string
                      last_update_time:
                        type: integer
                      creation_time:
                        type: integer
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.experiment
      description: Gets metadata for an experiment.
  /api/2.0/mlflow/experiments/get:
    get:
      operationId: experiments-getexperiment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/getexperiment
      x-stackQL-resource: experiments
      x-stackQL-method: getexperiment
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: experiment_id
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiment:
                    type: object
                    properties:
                      experiment_id:
                        type: string
                      name:
                        type: string
                      artifact_location:
                        type: string
                      lifecycle_stage:
                        type: string
                      last_update_time:
                        type: integer
                      creation_time:
                        type: integer
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.experiment
      description: Gets metadata for an experiment. This method works on deleted experiments.
  /api/2.0/mlflow/experiments/list:
    get:
      operationId: experiments-listexperiments
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/listexperiments
      x-stackQL-resource: experiments
      x-stackQL-method: listexperiments
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: view_type
        in: query
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiments:
                    type: array
                    items:
                      type: object
                      properties:
                        experiment_id:
                          type: string
                        name:
                          type: string
                        artifact_location:
                          type: string
                        lifecycle_stage:
                          type: string
                        last_update_time:
                          type: integer
                        creation_time:
                          type: integer
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.experiments
      description: Gets a list of all experiments.
  /api/2.0/mlflow/experiments/restore:
    post:
      operationId: experiments-restoreexperiment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/restoreexperiment
      x-stackQL-resource: experiments
      x-stackQL-method: restoreexperiment
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: required
              example:
                experiment_id: string
      description: Restore an experiment marked for deletion. This also restores associated
        metadata, runs, metrics, params, and tags. If experiment uses FileStore, underlying
        artifacts associated with experiment are also restored.
  /api/2.0/mlflow/experiments/search:
    post:
      operationId: experiments-searchexperiments
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/searchexperiments
      x-stackQL-resource: experiments
      x-stackQL-method: searchexperiments
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  experiments:
                    type: array
                    items:
                      type: object
                      properties:
                        experiment_id:
                          type: string
                        name:
                          type: string
                        artifact_location:
                          type: string
                        lifecycle_stage:
                          type: string
                        last_update_time:
                          type: integer
                        creation_time:
                          type: integer
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.experiments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                max_results:
                  type: integer
                  format: int64
                page_token:
                  type: string
                filter:
                  type: string
                order_by:
                  type: Array of string
                view_type:
                  type: string
              example:
                max_results: 0
                page_token: string
                filter: string
                order_by:
                - string
                view_type: ACTIVE_ONLY
      description: Searches for experiments that satisfy specified search criteria.
  /api/2.0/mlflow/experiments/update:
    post:
      operationId: experiments-updateexperiment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/updateexperiment
      x-stackQL-resource: experiments
      x-stackQL-method: updateexperiment
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: required
                new_name:
                  type: string
              example:
                experiment_id: string
                new_name: string
      description: Updates experiment metadata.
  /api/2.0/mlflow/metrics/get-history:
    get:
      operationId: experiments-history-gethistory
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/gethistory
      x-stackQL-resource: experiments_history
      x-stackQL-method: gethistory
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: run_id
        in: query
      - name: run_uuid
        in: query
      - name: metric_key
        required: true
        description: string
        in: query
      - name: page_token
        in: query
      - name: max_results
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: number
                        timestamp:
                          type: integer
                        step:
                          type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.metrics
      description: Gets a list of all values for the specified metric for a given
        run.
  /api/2.0/mlflow/artifacts/list:
    get:
      operationId: experiment-artifacts-listartifacts
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/listartifacts
      x-stackQL-resource: experiment_artifacts
      x-stackQL-method: listartifacts
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: run_id
        in: query
      - name: run_uuid
        in: query
      - name: path
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  root_uri:
                    type: string
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                        is_dir:
                          type: boolean
                        file_size:
                          type: integer
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: List artifacts for a run. Takes an optional
  /api/2.0/permissions/experiments/{experiment_id}:
    get:
      operationId: experiment-permissions-getpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/getpermissions
      x-stackQL-resource: experiment_permissions
      x-stackQL-method: getpermissions
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: experiment_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of an experiment. Experiments can inherit
        permissions from their root object.
    put:
      operationId: experiment-permissions-setpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/setpermissions
      x-stackQL-resource: experiment_permissions
      x-stackQL-method: setpermissions
      x-stackQL-verb: replace
      x-numReqParams: 1
      parameters:
      - name: experiment_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their root object.
    patch:
      operationId: experiment-permissions-updatepermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/updatepermissions
      x-stackQL-resource: experiment_permissions
      x-stackQL-method: updatepermissions
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: experiment_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Updates the permissions on an experiment. Experiments can inherit
        permissions from their root object.
  /api/2.0/permissions/experiments/{experiment_id}/permissionLevels:
    get:
      operationId: experiment-permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/getpermissionlevels
      x-stackQL-resource: experiment_permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: experiment_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
  /api/2.0/mlflow/runs/create:
    post:
      operationId: experiment-runs-createrun
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/createrun
      x-stackQL-resource: experiment_runs
      x-stackQL-method: createrun
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  run:
                    type: object
                    properties:
                      info:
                        type: object
                        properties:
                          run_id:
                            type: string
                          run_uuid:
                            type: string
                          experiment_id:
                            type: string
                          user_id:
                            type: string
                          status:
                            type: string
                          start_time:
                            type: integer
                          end_time:
                            type: integer
                          artifact_uri:
                            type: string
                          lifecycle_stage:
                            type: string
                      data:
                        type: object
                        properties:
                          metrics:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: number
                                timestamp:
                                  type: integer
                                step:
                                  type: string
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                          tags:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                      inputs:
                        type: object
                        properties:
                          dataset_inputs:
                            type: array
                            items:
                              type: object
                              properties:
                                tags:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                dataset:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    digest:
                                      type: string
                                    source_type:
                                      type: string
                                    source:
                                      type: string
                                    schema:
                                      type: string
                                    profile:
                                      type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: string
                user_id:
                  type: string
                start_time:
                  type: integer
                  format: int64
                tags:
                  type: Array of object
              example:
                experiment_id: string
                user_id: string
                start_time: 0
                tags:
                - key: string
                  value: string
      description: Creates a new run within an experiment. A run is usually a single
        execution of a machine learning or data ETL pipeline. MLflow uses runs to
        track the
  /api/2.0/mlflow/runs/delete:
    post:
      operationId: experiment-runs-deleterun
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/deleterun
      x-stackQL-resource: experiment_runs
      x-stackQL-method: deleterun
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: required
              example:
                run_id: string
      description: Marks a run for deletion.
  /api/2.0/mlflow/databricks/runs/delete-runs:
    post:
      operationId: experiment-runs-deleteruns
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/deleteruns
      x-stackQL-resource: experiment_runs
      x-stackQL-method: deleteruns
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  runs_deleted:
                    type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: required
                max_timestamp_millis:
                  type: string
                max_runs:
                  type: required
              example:
                experiment_id: string
                max_timestamp_millis: 0
                max_runs: '10000'
      description: Bulk delete runs in an experiment that were created prior to or
        at the specified timestamp. Deletes at most max_runs per request. To call
        this API from a Databricks Notebook in Python, you can use the client code
        snippet on
  /api/2.0/mlflow/runs/get:
    get:
      operationId: experiment-runs-getrun
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/getrun
      x-stackQL-resource: experiment_runs
      x-stackQL-method: getrun
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: run_id
        required: true
        description: string
        in: query
      - name: run_uuid
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  run:
                    type: object
                    properties:
                      info:
                        type: object
                        properties:
                          run_id:
                            type: string
                          run_uuid:
                            type: string
                          experiment_id:
                            type: string
                          user_id:
                            type: string
                          status:
                            type: string
                          start_time:
                            type: integer
                          end_time:
                            type: integer
                          artifact_uri:
                            type: string
                          lifecycle_stage:
                            type: string
                      data:
                        type: object
                        properties:
                          metrics:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: number
                                timestamp:
                                  type: integer
                                step:
                                  type: string
                          params:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                          tags:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                      inputs:
                        type: object
                        properties:
                          dataset_inputs:
                            type: array
                            items:
                              type: object
                              properties:
                                tags:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                dataset:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    digest:
                                      type: string
                                    source_type:
                                      type: string
                                    source:
                                      type: string
                                    schema:
                                      type: string
                                    profile:
                                      type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.run
      description: Gets the metadata, metrics, params, and tags for a run. In the
        case where multiple metrics with the same key are logged for a run, return
        only the value with the latest timestamp.
  /api/2.0/mlflow/runs/log-batch:
    post:
      operationId: experiment-runs-logbatch
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/logbatch
      x-stackQL-resource: experiment_runs
      x-stackQL-method: logbatch
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                metrics:
                  type: Array of object
                params:
                  type: Array of object
                tags:
                  type: Array of object
              example:
                run_id: 2a14ed5c6a87499199e0106c3501eab8
                metrics:
                - key: mae
                  value: 2.5
                  timestamp: 1552550804
                - key: rmse
                  value: 2.7
                  timestamp: 1552550804
                params:
                - key: model_class
                  value: LogisticRegression
      description: Logs a batch of metrics, params, and tags for a run. If any data
        failed to be persisted, the server will respond with an error (non-200 status
        code).
  /api/2.0/mlflow/runs/log-inputs:
    post:
      operationId: experiment-runs-loginputs
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/loginputs
      x-stackQL-resource: experiment_runs
      x-stackQL-method: loginputs
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                datasets:
                  type: Array of object
              example:
                run_id: string
                datasets:
                - tags:
                  - key: string
                    value: string
                  dataset:
                    name: string
                    digest: string
                    source_type: string
                    source: string
                    schema: string
                    profile: string
      description: 'Experimental: This API may change or be removed in a future release
        without warning.'
  /api/2.0/mlflow/runs/log-metric:
    post:
      operationId: experiment-runs-logmetric
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/logmetric
      x-stackQL-resource: experiment_runs
      x-stackQL-method: logmetric
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                run_uuid:
                  type: string
                key:
                  type: required
                value:
                  type: string
                timestamp:
                  type: required
                step:
                  type: double
              example:
                run_id: string
                run_uuid: string
                key: string
                value: 0.1
                timestamp: 0
                step: '0'
      description: Logs a metric for a run. A metric is a key-value pair (string key,
        float value) with an associated timestamp. Examples include the various metrics
        that represent ML model accuracy. A metric can be logged multiple times.
  /api/2.0/mlflow/runs/log-model:
    post:
      operationId: experiment-runs-logmodel
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/logmodel
      x-stackQL-resource: experiment_runs
      x-stackQL-method: logmodel
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                model_json:
                  type: string
              example:
                run_id: string
                model_json: string
      description: 'Experimental: This API may change or be removed in a future release
        without warning.'
  /api/2.0/mlflow/runs/log-parameter:
    post:
      operationId: experiment-runs-logparam
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/logparam
      x-stackQL-resource: experiment_runs
      x-stackQL-method: logparam
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                run_uuid:
                  type: string
                key:
                  type: required
                value:
                  type: string
              example:
                run_id: string
                run_uuid: string
                key: string
                value: string
      description: Logs a param used for a run. A param is a key-value pair (string
        key, string value). Examples include hyperparameters used for ML model training
        and constant dates and values used in an ETL pipeline. A param can be logged
        only once for a run.
  /api/2.0/mlflow/runs/restore:
    post:
      operationId: experiment-runs-restorerun
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/restorerun
      x-stackQL-resource: experiment_runs
      x-stackQL-method: restorerun
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: required
              example:
                run_id: string
      description: Restores a deleted run.
  /api/2.0/mlflow/databricks/runs/restore-runs:
    post:
      operationId: experiment-runs-restoreruns
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/restoreruns
      x-stackQL-resource: experiment_runs
      x-stackQL-method: restoreruns
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  runs_restored:
                    type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: required
                min_timestamp_millis:
                  type: string
                max_runs:
                  type: required
              example:
                experiment_id: string
                min_timestamp_millis: 0
                max_runs: '10000'
      description: Bulk restore runs in an experiment that were deleted no earlier
        than the specified timestamp. Restores at most max_runs per request. To call
        this API from a Databricks Notebook in Python, you can use the client code
        snippet on
  /api/2.0/mlflow/runs/search:
    post:
      operationId: experiment-runs-searchruns
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/searchruns
      x-stackQL-resource: experiment_runs
      x-stackQL-method: searchruns
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  runs:
                    type: array
                    items:
                      type: object
                      properties:
                        info:
                          type: object
                          properties:
                            run_id:
                              type: string
                            run_uuid:
                              type: string
                            experiment_id:
                              type: string
                            user_id:
                              type: string
                            status:
                              type: string
                            start_time:
                              type: integer
                            end_time:
                              type: integer
                            artifact_uri:
                              type: string
                            lifecycle_stage:
                              type: string
                        data:
                          type: object
                          properties:
                            metrics:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: number
                                  timestamp:
                                    type: integer
                                  step:
                                    type: string
                            params:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                            tags:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                        inputs:
                          type: object
                          properties:
                            dataset_inputs:
                              type: array
                              items:
                                type: object
                                properties:
                                  tags:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                  dataset:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                                      digest:
                                        type: string
                                      source_type:
                                        type: string
                                      source:
                                        type: string
                                      schema:
                                        type: string
                                      profile:
                                        type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.runs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_ids:
                  type: Array of string
                filter:
                  type: string
                run_view_type:
                  type: string
                max_results:
                  type: int32
                order_by:
                  type: Array of string
                page_token:
                  type: string
              example:
                experiment_ids:
                - string
                filter: string
                run_view_type: ACTIVE_ONLY
                max_results: '1000'
                order_by:
                - string
                page_token: string
      description: Searches for runs that satisfy expressions.
  /api/2.0/mlflow/runs/update:
    post:
      operationId: experiment-runs-updaterun
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/updaterun
      x-stackQL-resource: experiment_runs
      x-stackQL-method: updaterun
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  run_info:
                    type: object
                    properties:
                      run_id:
                        type: string
                      run_uuid:
                        type: string
                      experiment_id:
                        type: string
                      user_id:
                        type: string
                      status:
                        type: string
                      start_time:
                        type: integer
                      end_time:
                        type: integer
                      artifact_uri:
                        type: string
                      lifecycle_stage:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                run_uuid:
                  type: string
                status:
                  type: string
                end_time:
                  type: integer
                  format: int64
              example:
                run_id: string
                run_uuid: string
                status: RUNNING
                end_time: 0
      description: Updates run metadata.
  /api/2.0/mlflow/runs/set-tag:
    post:
      operationId: experiment-run-tags-settag
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/settag
      x-stackQL-resource: experiment_run_tags
      x-stackQL-method: settag
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: string
                run_uuid:
                  type: string
                key:
                  type: required
                value:
                  type: string
              example:
                run_id: string
                run_uuid: string
                key: string
                value: string
      description: Sets a tag on a run. Tags are run metadata that can be updated
        during a run and after a run completes.
  /api/2.0/mlflow/runs/delete-tag:
    post:
      operationId: experiment-tags-deletetag
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/deletetag
      x-stackQL-resource: experiment_tags
      x-stackQL-method: deletetag
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                run_id:
                  type: required
                key:
                  type: string
              example:
                run_id: string
                key: string
      description: Deletes a tag on a run. Tags are run metadata that can be updated
        during a run and after a run completes.
  /api/2.0/mlflow/experiments/set-experiment-tag:
    post:
      operationId: experiment-tags-setexperimenttag
      externalDocs:
        url: https://docs.databricks.com/api/workspace/experiments/setexperimenttag
      x-stackQL-resource: experiment_tags
      x-stackQL-method: setexperimenttag
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                experiment_id:
                  type: required
                key:
                  type: string
                value:
                  type: required
              example:
                experiment_id: string
                key: string
                value: string
      description: Sets a tag on an experiment. Experiment tags are metadata that
        can be updated.
  /api/2.0/mlflow/registered-models/create:
    post:
      operationId: models-createmodel
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/createmodel
      x-stackQL-resource: models
      x-stackQL-method: createmodel
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_model:
                    type: object
                    properties:
                      name:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      description:
                        type: string
                      latest_versions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            version:
                              type: string
                            creation_timestamp:
                              type: integer
                            last_updated_timestamp:
                              type: integer
                            user_id:
                              type: string
                            current_stage:
                              type: string
                            description:
                              type: string
                            source:
                              type: string
                            run_id:
                              type: string
                            status:
                              type: string
                            status_message:
                              type: string
                            tags:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                            run_link:
                              type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                description:
                  type: string
                tags:
                  type: Array of object
              example:
                name: string
                tags:
                - key: string
                  value: string
                description: string
      description: Creates a new registered model with the name specified in the request
        body.
  /api/2.0/mlflow/registered-models/delete:
    delete:
      operationId: models-deletemodel
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/deletemodel
      x-stackQL-resource: models
      x-stackQL-method: deletemodel
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a registered model.
  /api/2.0/mlflow/databricks/registered-models/get:
    get:
      operationId: models-getmodel
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/getmodel
      x-stackQL-resource: models
      x-stackQL-method: getmodel
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: name
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Model details were returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_model_databricks:
                    type: object
                    properties:
                      name:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      description:
                        type: string
                      latest_versions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            version:
                              type: string
                            creation_timestamp:
                              type: integer
                            last_updated_timestamp:
                              type: integer
                            user_id:
                              type: string
                            current_stage:
                              type: string
                            description:
                              type: string
                            source:
                              type: string
                            run_id:
                              type: string
                            status:
                              type: string
                            status_message:
                              type: string
                            tags:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                            run_link:
                              type: string
                      id:
                        type: string
                      permission_level:
                        type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Get the details of a model. This is a Databricks workspace version
        of the
  /api/2.0/mlflow/registered-models/list:
    get:
      operationId: models-listmodels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/listmodels
      x-stackQL-resource: models
      x-stackQL-method: listmodels
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_models:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        creation_timestamp:
                          type: integer
                        last_updated_timestamp:
                          type: integer
                        user_id:
                          type: string
                        description:
                          type: string
                        latest_versions:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              version:
                                type: string
                              creation_timestamp:
                                type: integer
                              last_updated_timestamp:
                                type: integer
                              user_id:
                                type: string
                              current_stage:
                                type: string
                              description:
                                type: string
                              source:
                                type: string
                              run_id:
                                type: string
                              status:
                                type: string
                              status_message:
                                type: string
                              tags:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                              run_link:
                                type: string
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.registered_models
      description: Lists all available registered models, up to the limit specified
        in
  /api/2.0/mlflow/registered-models/rename:
    post:
      operationId: models-renamemodel
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/renamemodel
      x-stackQL-resource: models
      x-stackQL-method: renamemodel
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_model:
                    type: object
                    properties:
                      name:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      description:
                        type: string
                      latest_versions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            version:
                              type: string
                            creation_timestamp:
                              type: integer
                            last_updated_timestamp:
                              type: integer
                            user_id:
                              type: string
                            current_stage:
                              type: string
                            description:
                              type: string
                            source:
                              type: string
                            run_id:
                              type: string
                            status:
                              type: string
                            status_message:
                              type: string
                            tags:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                            run_link:
                              type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                new_name:
                  type: string
              example:
                name: string
                new_name: string
      description: Renames a registered model.
  /api/2.0/mlflow/registered-models/search:
    get:
      operationId: models-searchmodels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/searchmodels
      x-stackQL-resource: models
      x-stackQL-method: searchmodels
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: filter
        in: query
      - name: max_results
        in: query
      - name: order_by
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  registered_models:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        creation_timestamp:
                          type: integer
                        last_updated_timestamp:
                          type: integer
                        user_id:
                          type: string
                        description:
                          type: string
                        latest_versions:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              version:
                                type: string
                              creation_timestamp:
                                type: integer
                              last_updated_timestamp:
                                type: integer
                              user_id:
                                type: string
                              current_stage:
                                type: string
                              description:
                                type: string
                              source:
                                type: string
                              run_id:
                                type: string
                              status:
                                type: string
                              status_message:
                                type: string
                              tags:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                              run_link:
                                type: string
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.registered_models
      description: Search for registered models based on the specified
  /api/2.0/mlflow/registered-models/update:
    patch:
      operationId: models-updatemodel
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/updatemodel
      x-stackQL-resource: models
      x-stackQL-method: updatemodel
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                description:
                  type: string
              example:
                name: string
                description: string
      description: Updates a registered model.
  /api/2.0/mlflow/registered-models/get-latest-versions:
    post:
      operationId: model-latest-versions-getlatestversions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/getlatestversions
      x-stackQL-resource: model_latest_versions
      x-stackQL-method: getlatestversions
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_versions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                        creation_timestamp:
                          type: integer
                        last_updated_timestamp:
                          type: integer
                        user_id:
                          type: string
                        current_stage:
                          type: string
                        description:
                          type: string
                        source:
                          type: string
                        run_id:
                          type: string
                        status:
                          type: string
                        status_message:
                          type: string
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                        run_link:
                          type: string
      x-stackQL-objectKey: $.model_versions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                stages:
                  type: string
              example:
                name: string
                stages:
                - string
      description: Gets the latest version of a registered model.
  /api/2.0/permissions/registered-models/{registered_model_id}:
    get:
      operationId: model-permissions-getpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/getpermissions
      x-stackQL-resource: model_permissions
      x-stackQL-method: getpermissions
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: registered_model_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of a registered model. Registered models can
        inherit permissions from their root object.
    put:
      operationId: model-permissions-setpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/setpermissions
      x-stackQL-resource: model_permissions
      x-stackQL-method: setpermissions
      x-stackQL-verb: replace
      x-numReqParams: 1
      parameters:
      - name: registered_model_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their root object.
    patch:
      operationId: model-permissions-updatepermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/updatepermissions
      x-stackQL-resource: model_permissions
      x-stackQL-method: updatepermissions
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: registered_model_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Updates the permissions on a registered model. Registered models
        can inherit permissions from their root object.
  /api/2.0/permissions/registered-models/{registered_model_id}/permissionLevels:
    get:
      operationId: model-permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/getpermissionlevels
      x-stackQL-resource: model_permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: registered_model_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
  /api/2.0/mlflow/registered-models/delete-tag:
    delete:
      operationId: model-tags-deletemodeltag
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/deletemodeltag
      x-stackQL-resource: model_tags
      x-stackQL-method: deletemodeltag
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: key
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes the tag for a registered model.
  /api/2.0/mlflow/registered-models/set-tag:
    post:
      operationId: model-tags-setmodeltag
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/setmodeltag
      x-stackQL-resource: model_tags
      x-stackQL-method: setmodeltag
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                key:
                  type: string
                value:
                  type: required
              example:
                name: string
                key: string
                value: string
      description: Sets a tag on a registered model.
  /api/2.0/mlflow/transition-requests/approve:
    post:
      operationId: model-transition-requests-approvetransitionrequest
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/approvetransitionrequest
      x-stackQL-resource: model_transition_requests
      x-stackQL-method: approvetransitionrequest
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Model version's stage was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: object
                    properties:
                      id:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      activity_type:
                        type: string
                      from_stage:
                        type: string
                      to_stage:
                        type: string
                      comment:
                        type: string
                      system_comment:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                version:
                  type: string
                stage:
                  type: required
                archive_existing_versions:
                  type: string
                comment:
                  type: required
              example:
                name: search_ads_model
                version: '1'
                stage: Staging
                archive_existing_versions: true
                comment: This version is great!
        description: Details required to identify and approve a model version stage
          transition request.
      description: Approves a model version stage transition request.
  /api/2.0/mlflow/transition-requests/create:
    post:
      operationId: model-transition-requests-createtransitionrequest
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/createtransitionrequest
      x-stackQL-resource: model_transition_requests
      x-stackQL-method: createtransitionrequest
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Transition request was made successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  request:
                    type: object
                    properties:
                      creation_timestamp:
                        type: integer
                      to_stage:
                        type: string
                      user_id:
                        type: string
                      comment:
                        type: string
                      available_actions:
                        type: array
                        items:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                version:
                  type: string
                stage:
                  type: required
                comment:
                  type: string
              example:
                name: search_ads_model
                version: '1'
                stage: Staging
                comment: This version is great!
        description: Details required to create a model version stage transition request.
      description: Creates a model version stage transition request.
  /api/2.0/mlflow/transition-requests/delete:
    delete:
      operationId: model-transition-requests-deletetransitionrequest
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/deletetransitionrequest
      x-stackQL-resource: model_transition_requests
      x-stackQL-method: deletetransitionrequest
      x-stackQL-verb: delete
      x-numReqParams: 4
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: version
        required: true
        description: string
        in: query
      - name: stage
        required: true
        description: string
        in: query
      - name: creator
        required: true
        description: email
        in: query
      - name: comment
        in: query
      responses:
        '200':
          description: Transition request was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Cancels a model version stage transition request.
  /api/2.0/mlflow/transition-requests/list:
    get:
      operationId: model-transition-requests-listtransitionrequests
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/listtransitionrequests
      x-stackQL-resource: model_transition_requests
      x-stackQL-method: listtransitionrequests
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: version
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Fetched all open requests successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  requests:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        creation_timestamp:
                          type: integer
                        last_updated_timestamp:
                          type: integer
                        user_id:
                          type: string
                        activity_type:
                          type: string
                        from_stage:
                          type: string
                        to_stage:
                          type: string
                        comment:
                          type: string
                        system_comment:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.requests
      description: Gets a list of all open stage transition requests for the model
        version.
  /api/2.0/mlflow/transition-requests/reject:
    post:
      operationId: model-transition-requests-rejecttransitionrequest
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/rejecttransitionrequest
      x-stackQL-resource: model_transition_requests
      x-stackQL-method: rejecttransitionrequest
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Transition request was rejected successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: object
                    properties:
                      id:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      activity_type:
                        type: string
                      from_stage:
                        type: string
                      to_stage:
                        type: string
                      comment:
                        type: string
                      system_comment:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                version:
                  type: string
                stage:
                  type: required
                comment:
                  type: string
              example:
                name: search_ads_model
                version: '1'
                stage: Staging
                comment: This version is great!
        description: Details required to identify and reject a model version stage
          transition request.
      description: Rejects a model version stage transition request.
  /api/2.0/mlflow/databricks/model-versions/transition-stage:
    post:
      operationId: model-transition-requests-transitionstage
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/transitionstage
      x-stackQL-resource: model_transition_requests
      x-stackQL-method: transitionstage
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Model version's stage was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_version:
                    type: object
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      current_stage:
                        type: string
                      description:
                        type: string
                      source:
                        type: string
                      run_id:
                        type: string
                      status:
                        type: string
                      status_message:
                        type: string
                      permission_level:
                        type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                      run_link:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                version:
                  type: string
                stage:
                  type: required
                archive_existing_versions:
                  type: string
                comment:
                  type: required
              example:
                name: search_ads_model
                version: '1'
                stage: Staging
                archive_existing_versions: true
                comment: This version is great!
        description: Details required to transition a model version's stage.
      description: Transition a model version's stage. This is a Databricks workspace
        version of the
  /api/2.0/mlflow/model-versions/create:
    post:
      operationId: model-versions-createmodelversion
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/createmodelversion
      x-stackQL-resource: model_versions
      x-stackQL-method: createmodelversion
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_version:
                    type: object
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      current_stage:
                        type: string
                      description:
                        type: string
                      source:
                        type: string
                      run_id:
                        type: string
                      status:
                        type: string
                      status_message:
                        type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                      run_link:
                        type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                source:
                  type: string
                run_id:
                  type: required
                run_link:
                  type: string
                description:
                  type: string
                tags:
                  type: Array of object
              example:
                name: string
                source: string
                run_id: string
                tags:
                - key: string
                  value: string
                run_link: string
                description: string
      description: Creates a model version.
  /api/2.0/mlflow/model-versions/delete:
    delete:
      operationId: model-versions-deletemodelversion
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/deletemodelversion
      x-stackQL-resource: model_versions
      x-stackQL-method: deletemodelversion
      x-stackQL-verb: delete
      x-numReqParams: 2
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: version
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a model version.
  /api/2.0/mlflow/model-versions/get:
    get:
      operationId: model-versions-getmodelversion
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/getmodelversion
      x-stackQL-resource: model_versions
      x-stackQL-method: getmodelversion
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: version
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_version:
                    type: object
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      current_stage:
                        type: string
                      description:
                        type: string
                      source:
                        type: string
                      run_id:
                        type: string
                      status:
                        type: string
                      status_message:
                        type: string
                      tags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                      run_link:
                        type: string
      x-stackQL-objectKey: $.model_version
      description: Get a model version.
  /api/2.0/mlflow/model-versions/search:
    get:
      operationId: model-versions-searchmodelversions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/searchmodelversions
      x-stackQL-resource: model_versions
      x-stackQL-method: searchmodelversions
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: filter
        in: query
      - name: max_results
        in: query
      - name: order_by
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_versions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                        creation_timestamp:
                          type: integer
                        last_updated_timestamp:
                          type: integer
                        user_id:
                          type: string
                        current_stage:
                          type: string
                        description:
                          type: string
                        source:
                          type: string
                        run_id:
                          type: string
                        status:
                          type: string
                        status_message:
                          type: string
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                        run_link:
                          type: string
                  next_page_token:
                    type: string
      x-stackQL-objectKey: $.model_versions
      description: Searches for specific model versions based on the supplied
  /api/2.0/mlflow/model-versions/update:
    patch:
      operationId: model-versions-updatemodelversion
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/updatemodelversion
      x-stackQL-resource: model_versions
      x-stackQL-method: updatemodelversion
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                version:
                  type: string
                description:
                  type: required
              example:
                name: string
                version: string
                description: string
      description: Updates the model version.
  /api/2.0/mlflow/comments/create:
    post:
      operationId: model-version-comments-createcomment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/createcomment
      x-stackQL-resource: model_version_comments
      x-stackQL-method: createcomment
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Comment was made successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    type: object
                    properties:
                      id:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      comment:
                        type: string
                      available_actions:
                        type: array
                        items:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '409':
          description: Request was rejected due a conflict with an existing resource.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                version:
                  type: string
                comment:
                  type: required
              example:
                name: search_ads_model
                version: '1'
                comment: This version is great!
        description: Details required to create a comment on a model version.
      description: Posts a comment on a model version. A comment can be submitted
        either by a user or programmatically to display relevant information about
        the model. For example, test results or deployment errors.
  /api/2.0/mlflow/comments/delete:
    delete:
      operationId: model-version-comments-deletecomment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/deletecomment
      x-stackQL-resource: model_version_comments
      x-stackQL-method: deletecomment
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: id
        required: true
        description: uuid
        in: query
      responses:
        '200':
          description: Comment was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes a comment on a model version.
  /api/2.0/mlflow/comments/update:
    patch:
      operationId: model-version-comments-updatecomment
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/updatecomment
      x-stackQL-resource: model_version_comments
      x-stackQL-method: updatecomment
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Comment was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    type: object
                    properties:
                      id:
                        type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      user_id:
                        type: string
                      comment:
                        type: string
                      available_actions:
                        type: array
                        items:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: required
                comment:
                  type: uuid
              example:
                id: 6fc74c92704341aaa49e74dcc6031057
                comment: This version is great!
        description: Details required to edit a comment on a model version.
      description: Post an edit to a comment on a model version.
  /api/2.0/mlflow/model-versions/get-download-uri:
    get:
      operationId: model-version-download-urls-getmodelversiondownloaduri
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/getmodelversiondownloaduri
      x-stackQL-resource: model_version_download_urls
      x-stackQL-method: getmodelversiondownloaduri
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: version
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  artifact_uri:
                    type: string
      description: Gets a URI to download the model version.
  /api/2.0/mlflow/model-versions/delete-tag:
    delete:
      operationId: model-version-tags-deletemodelversiontag
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/deletemodelversiontag
      x-stackQL-resource: model_version_tags
      x-stackQL-method: deletemodelversiontag
      x-stackQL-verb: delete
      x-numReqParams: 3
      parameters:
      - name: name
        required: true
        description: string
        in: query
      - name: version
        required: true
        description: string
        in: query
      - name: key
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: Deletes a model version tag.
  /api/2.0/mlflow/model-versions/set-tag:
    post:
      operationId: model-version-tags-setmodelversiontag
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/setmodelversiontag
      x-stackQL-resource: model_version_tags
      x-stackQL-method: setmodelversiontag
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                version:
                  type: string
                key:
                  type: required
                value:
                  type: string
              example:
                name: string
                version: string
                key: string
                value: string
      description: Sets a model version tag.
  /api/2.0/mlflow/registry-webhooks/create:
    post:
      operationId: model-web-hooks-createwebhook
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/createwebhook
      x-stackQL-resource: model_web_hooks
      x-stackQL-method: createwebhook
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Registry webhook was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook:
                    type: object
                    properties:
                      id:
                        type: string
                      events:
                        type: array
                        items:
                          type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      description:
                        type: string
                      status:
                        type: string
                      http_url_spec:
                        type: object
                        properties:
                          url:
                            type: string
                          enable_ssl_verification:
                            type: boolean
                      model_name:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  type: required
                model_name:
                  type: Array of string
                description:
                  type: string
                status:
                  type: string
                job_spec:
                  type: object
                http_url_spec:
                  type: object
              example:
                job_spec:
                  job_id: '1'
                  access_token: dapi12345678935845824
                  workspace_url: string
                http_url_spec:
                  url: https://hooks.slack.com/services/...
                  secret: anyRandomString
                  enable_ssl_verification: true
                  authorization: Bearer <access_token>
                events:
                - MODEL_VERSION_CREATED
                - MODEL_VERSION_TRANSITIONED_TO_STAGING
                - COMMENT_CREATED
                model_name: registered-model-1
                description: Webhook for comment creation
                status: ACTIVE
        description: Details required to create a registry webhook.
      description: ': This endpoint is in Public Preview.'
  /api/2.0/mlflow/registry-webhooks/delete:
    delete:
      operationId: model-web-hooks-deletewebhook
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/deletewebhook
      x-stackQL-resource: model_web_hooks
      x-stackQL-method: deletewebhook
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters:
      - name: id
        in: query
      responses:
        '200':
          description: Registry webhook was deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: This endpoint is in Public Preview.
  /api/2.0/mlflow/registry-webhooks/list:
    get:
      operationId: model-web-hooks-listwebhooks
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/listwebhooks
      x-stackQL-resource: model_web_hooks
      x-stackQL-method: listwebhooks
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: model_name
        in: query
      - name: events
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: Registry webhooks listed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhooks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        events:
                          type: array
                          items:
                            type: string
                        creation_timestamp:
                          type: integer
                        last_updated_timestamp:
                          type: integer
                        description:
                          type: string
                        status:
                          type: string
                        http_url_spec:
                          type: object
                          properties:
                            url:
                              type: string
                            enable_ssl_verification:
                              type: boolean
                        model_name:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.webhooks
      description: This endpoint is in Public Preview.
  /api/2.0/mlflow/registry-webhooks/test:
    post:
      operationId: model-web-hooks-testregistrywebhook
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/testregistrywebhook
      x-stackQL-resource: model_web_hooks
      x-stackQL-method: testregistrywebhook
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Registry webhook was tested successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook:
                    type: object
                    properties:
                      status_code:
                        type: integer
                      body:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: required
                event:
                  type: string
              example:
                id: '124323'
                event: MODEL_VERSION_CREATED
        description: Details required to test a registry webhook.
      description: This endpoint is in Public Preview.
  /api/2.0/mlflow/registry-webhooks/update:
    patch:
      operationId: model-web-hooks-updatewebhook
      externalDocs:
        url: https://docs.databricks.com/api/workspace/modelregistry/updatewebhook
      x-stackQL-resource: model_web_hooks
      x-stackQL-method: updatewebhook
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Registry webhook was updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook:
                    type: object
                    properties:
                      id:
                        type: string
                      events:
                        type: array
                        items:
                          type: string
                      creation_timestamp:
                        type: integer
                      last_updated_timestamp:
                        type: integer
                      description:
                        type: string
                      status:
                        type: string
                      http_url_spec:
                        type: object
                        properties:
                          url:
                            type: string
                          enable_ssl_verification:
                            type: boolean
                      model_name:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: required
                events:
                  type: string
                description:
                  type: Array of string
                status:
                  type: string
                http_url_spec:
                  type: object
                job_spec:
                  type: object
              example:
                id: '124323'
                status: DISABLED
        description: Details required to update a registry webhook. Only the fields
          that need to be updated should be specified, and both
      description: This endpoint is in Public Preview.
components:
  x-stackQL-resources:
    experiments:
      id: databricks_workspace.machinelearning.experiments
      name: experiments
      title: Experiments
      methods:
        createexperiment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deleteexperiment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1delete/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getbyname:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1get-by-name/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.experiment
        getexperiment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1get/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.experiment
        listexperiments:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.experiments
        restoreexperiment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1restore/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        searchexperiments:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1search/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.experiments
        updateexperiment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1update/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/experiments/methods/searchexperiments'
        - $ref: '#/components/x-stackQL-resources/experiments/methods/listexperiments'
        - $ref: '#/components/x-stackQL-resources/experiments/methods/getexperiment'
        - $ref: '#/components/x-stackQL-resources/experiments/methods/getbyname'
        insert:
        - $ref: '#/components/x-stackQL-resources/experiments/methods/createexperiment'
        update:
        - $ref: '#/components/x-stackQL-resources/experiments/methods/updateexperiment'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/experiments/methods/deleteexperiment'
        exec:
        - $ref: '#/components/x-stackQL-resources/experiments/methods/restoreexperiment'
    experiments_history:
      id: databricks_workspace.machinelearning.experiments_history
      name: experiments_history
      title: Experiments_history
      methods:
        gethistory:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1metrics~1get-history/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.metrics
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/experiments_history/methods/gethistory'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    experiment_artifacts:
      id: databricks_workspace.machinelearning.experiment_artifacts
      name: experiment_artifacts
      title: Experiment_artifacts
      methods:
        listartifacts:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1artifacts~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/experiment_artifacts/methods/listartifacts'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    experiment_permissions:
      id: databricks_workspace.machinelearning.experiment_permissions
      name: experiment_permissions
      title: Experiment_permissions
      methods:
        getpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1experiments~1{experiment_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1experiments~1{experiment_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatepermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1experiments~1{experiment_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/experiment_permissions/methods/getpermissions'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/experiment_permissions/methods/updatepermissions'
        replace:
        - $ref: '#/components/x-stackQL-resources/experiment_permissions/methods/setpermissions'
        delete: []
        exec: []
    experiment_permission_levels:
      id: databricks_workspace.machinelearning.experiment_permission_levels
      name: experiment_permission_levels
      title: Experiment_permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1experiments~1{experiment_id}~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/experiment_permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    experiment_runs:
      id: databricks_workspace.machinelearning.experiment_runs
      name: experiment_runs
      title: Experiment_runs
      methods:
        createrun:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deleterun:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1delete/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deleteruns:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1databricks~1runs~1delete-runs/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getrun:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1get/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.run
        logbatch:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1log-batch/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        loginputs:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1log-inputs/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        logmetric:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1log-metric/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        logmodel:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1log-model/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        logparam:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1log-parameter/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        restorerun:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1restore/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        restoreruns:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1databricks~1runs~1restore-runs/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        searchruns:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1search/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.runs
        updaterun:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1update/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/searchruns'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/getrun'
        insert:
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/createrun'
        update:
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/updaterun'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/deleteruns'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/deleterun'
        exec:
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/restoreruns'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/restorerun'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/logparam'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/logmodel'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/logmetric'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/loginputs'
        - $ref: '#/components/x-stackQL-resources/experiment_runs/methods/logbatch'
    experiment_run_tags:
      id: databricks_workspace.machinelearning.experiment_run_tags
      name: experiment_run_tags
      title: Experiment_run_tags
      methods:
        settag:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1set-tag/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/experiment_run_tags/methods/settag'
        delete: []
        exec: []
    experiment_tags:
      id: databricks_workspace.machinelearning.experiment_tags
      name: experiment_tags
      title: Experiment_tags
      methods:
        deletetag:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1runs~1delete-tag/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setexperimenttag:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1experiments~1set-experiment-tag/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/experiment_tags/methods/setexperimenttag'
        delete:
        - $ref: '#/components/x-stackQL-resources/experiment_tags/methods/deletetag'
        exec: []
    models:
      id: databricks_workspace.machinelearning.models
      name: models
      title: Models
      methods:
        createmodel:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deletemodel:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1delete/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getmodel:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1databricks~1registered-models~1get/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        listmodels:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.registered_models
        renamemodel:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1rename/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        searchmodels:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1search/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.registered_models
        updatemodel:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1update/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/models/methods/searchmodels'
        - $ref: '#/components/x-stackQL-resources/models/methods/listmodels'
        - $ref: '#/components/x-stackQL-resources/models/methods/getmodel'
        insert:
        - $ref: '#/components/x-stackQL-resources/models/methods/createmodel'
        update:
        - $ref: '#/components/x-stackQL-resources/models/methods/updatemodel'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/models/methods/deletemodel'
        exec:
        - $ref: '#/components/x-stackQL-resources/models/methods/renamemodel'
    model_latest_versions:
      id: databricks_workspace.machinelearning.model_latest_versions
      name: model_latest_versions
      title: Model_latest_versions
      methods:
        getlatestversions:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1get-latest-versions/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.model_versions
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_latest_versions/methods/getlatestversions'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    model_permissions:
      id: databricks_workspace.machinelearning.model_permissions
      name: model_permissions
      title: Model_permissions
      methods:
        getpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1registered-models~1{registered_model_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1registered-models~1{registered_model_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatepermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1registered-models~1{registered_model_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_permissions/methods/getpermissions'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/model_permissions/methods/updatepermissions'
        replace:
        - $ref: '#/components/x-stackQL-resources/model_permissions/methods/setpermissions'
        delete: []
        exec: []
    model_permission_levels:
      id: databricks_workspace.machinelearning.model_permission_levels
      name: model_permission_levels
      title: Model_permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1registered-models~1{registered_model_id}~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    model_tags:
      id: databricks_workspace.machinelearning.model_tags
      name: model_tags
      title: Model_tags
      methods:
        deletemodeltag:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1delete-tag/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setmodeltag:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registered-models~1set-tag/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/model_tags/methods/setmodeltag'
        delete:
        - $ref: '#/components/x-stackQL-resources/model_tags/methods/deletemodeltag'
        exec: []
    model_transition_requests:
      id: databricks_workspace.machinelearning.model_transition_requests
      name: model_transition_requests
      title: Model_transition_requests
      methods:
        approvetransitionrequest:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1transition-requests~1approve/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        createtransitionrequest:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1transition-requests~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deletetransitionrequest:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1transition-requests~1delete/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        listtransitionrequests:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1transition-requests~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.requests
        rejecttransitionrequest:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1transition-requests~1reject/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        transitionstage:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1databricks~1model-versions~1transition-stage/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_transition_requests/methods/listtransitionrequests'
        insert:
        - $ref: '#/components/x-stackQL-resources/model_transition_requests/methods/createtransitionrequest'
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/model_transition_requests/methods/deletetransitionrequest'
        exec:
        - $ref: '#/components/x-stackQL-resources/model_transition_requests/methods/transitionstage'
        - $ref: '#/components/x-stackQL-resources/model_transition_requests/methods/rejecttransitionrequest'
        - $ref: '#/components/x-stackQL-resources/model_transition_requests/methods/approvetransitionrequest'
    model_versions:
      id: databricks_workspace.machinelearning.model_versions
      name: model_versions
      title: Model_versions
      methods:
        createmodelversion:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deletemodelversion:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1delete/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getmodelversion:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1get/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.model_version
        searchmodelversions:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1search/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.model_versions
        updatemodelversion:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1update/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/searchmodelversions'
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/getmodelversion'
        insert:
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/createmodelversion'
        update:
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/updatemodelversion'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/model_versions/methods/deletemodelversion'
        exec: []
    model_version_comments:
      id: databricks_workspace.machinelearning.model_version_comments
      name: model_version_comments
      title: Model_version_comments
      methods:
        createcomment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1comments~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deletecomment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1comments~1delete/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatecomment:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1comments~1update/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
        - $ref: '#/components/x-stackQL-resources/model_version_comments/methods/createcomment'
        update:
        - $ref: '#/components/x-stackQL-resources/model_version_comments/methods/updatecomment'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/model_version_comments/methods/deletecomment'
        exec: []
    model_version_download_urls:
      id: databricks_workspace.machinelearning.model_version_download_urls
      name: model_version_download_urls
      title: Model_version_download_urls
      methods:
        getmodelversiondownloaduri:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1get-download-uri/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_version_download_urls/methods/getmodelversiondownloaduri'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    model_version_tags:
      id: databricks_workspace.machinelearning.model_version_tags
      name: model_version_tags
      title: Model_version_tags
      methods:
        deletemodelversiontag:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1delete-tag/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setmodelversiontag:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1model-versions~1set-tag/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/model_version_tags/methods/setmodelversiontag'
        delete:
        - $ref: '#/components/x-stackQL-resources/model_version_tags/methods/deletemodelversiontag'
        exec: []
    model_web_hooks:
      id: databricks_workspace.machinelearning.model_web_hooks
      name: model_web_hooks
      title: Model_web_hooks
      methods:
        createwebhook:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registry-webhooks~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        deletewebhook:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registry-webhooks~1delete/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        listwebhooks:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registry-webhooks~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.webhooks
        testregistrywebhook:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registry-webhooks~1test/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatewebhook:
          operation:
            $ref: '#/paths/~1api~12.0~1mlflow~1registry-webhooks~1update/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/model_web_hooks/methods/listwebhooks'
        insert:
        - $ref: '#/components/x-stackQL-resources/model_web_hooks/methods/createwebhook'
        update:
        - $ref: '#/components/x-stackQL-resources/model_web_hooks/methods/updatewebhook'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/model_web_hooks/methods/deletewebhook'
        exec:
        - $ref: '#/components/x-stackQL-resources/model_web_hooks/methods/testregistrywebhook'
