openapi: 3.0.0
info:
  version: 2024-12-19-stackql-generated
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  title: Databricks Compute API
  description: Compute
servers:
- url: https://{deployment_name}.cloud.databricks.com
  variables:
    deployment_name:
      description: The Databricks Workspace Deployment Name
      default: dbc-abcd0123-a1bc
paths:
  /api/2.0/policies/clusters/list-compliance:
    get:
      operationId: all-clusters-policy-compliance-listcompliance
      externalDocs:
        url: https://docs.databricks.com/api/workspace/policycomplianceforclusters/listcompliance
      x-stackQL-resource: all_clusters_policy_compliance
      x-stackQL-method: listcompliance
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: policy_id
        required: true
        description: string
        in: query
      - name: page_token
        in: query
      - name: page_size
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: array
                    items:
                      type: object
                      properties:
                        cluster_id:
                          type: string
                        is_compliant:
                          type: boolean
                        violations:
                          type: object
                          properties:
                            custom_tags.test_tag:
                              type: string
                  next_page_token:
                    type: string
                  prev_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.clusters
      description: Returns the policy compliance status of all clusters that use a
        given policy. Clusters could be out of compliance if their policy was updated
        after the cluster was last edited.
  /api/2.1/clusters/change-owner:
    post:
      operationId: clusters-changeowner
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/changeowner
      x-stackQL-resource: clusters
      x-stackQL-method: changeowner
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                owner_username:
                  type: string
              example:
                cluster_id: string
                owner_username: string
      description: Change the owner of the cluster. You must be an admin and the cluster
        must be terminated to perform this operation. The service principal application
        ID can be supplied as an argument to
  /api/2.1/clusters/create:
    post:
      operationId: clusters-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/create
      x-stackQL-resource: clusters
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  cluster_id:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                num_workers:
                  type: int32
                kind:
                  type: string
                cluster_name:
                  type: string
                spark_version:
                  type: required
                use_ml_runtime:
                  type: string
                is_single_node:
                  type: boolean
                node_type_id:
                  type: boolean
                driver_node_type_id:
                  type: string
                ssh_public_keys:
                  type: string
                autotermination_minutes:
                  type: Array of string
                enable_elastic_disk:
                  type: int32
                instance_pool_id:
                  type: boolean
                policy_id:
                  type: string
                enable_local_disk_encryption:
                  type: string
                driver_instance_pool_id:
                  type: boolean
                runtime_engine:
                  type: string
                data_security_mode:
                  type: string
                single_user_name:
                  type: string
                apply_policy_default_values:
                  type: string
                autoscale:
                  type: object
                spark_conf:
                  type: object
                aws_attributes:
                  type: object
                custom_tags:
                  type: object
                cluster_log_conf:
                  type: object
                init_scripts:
                  type: Array of object
                spark_env_vars:
                  type: object
                workload_type:
                  type: object
                docker_image:
                  type: object
                clone_from:
                  type: object
              example:
                cluster_name: single-node-with-kind-cluster
                is_single_node: true
                kind: CLASSIC_PREVIEW
                spark_version: 14.3.x-scala2.12
                node_type_id: i3.xlarge
                aws_attributes:
                  first_on_demand: 1
                  availability: SPOT_WITH_FALLBACK
                  zone_id: auto
                  spot_bid_price_percent: 100
                  ebs_volume_count: 0
      description: Creates a new Spark cluster. This method will acquire new instances
        from the cloud provider if necessary. This method is asynchronous; the returned
  /api/2.1/clusters/delete:
    post:
      operationId: clusters-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/delete
      x-stackQL-resource: clusters
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
              example:
                cluster_id: 1234-567890-frays123
      description: Terminates the Spark cluster with the specified ID. The cluster
        is removed asynchronously. Once the termination has completed, the cluster
        will be in a
  /api/2.1/clusters/edit:
    post:
      operationId: clusters-edit
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/edit
      x-stackQL-resource: clusters
      x-stackQL-method: edit
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                num_workers:
                  type: string
                kind:
                  type: int32
                cluster_name:
                  type: string
                spark_version:
                  type: string
                use_ml_runtime:
                  type: required
                is_single_node:
                  type: string
                node_type_id:
                  type: boolean
                driver_node_type_id:
                  type: boolean
                ssh_public_keys:
                  type: string
                autotermination_minutes:
                  type: string
                enable_elastic_disk:
                  type: Array of string
                instance_pool_id:
                  type: int32
                policy_id:
                  type: boolean
                enable_local_disk_encryption:
                  type: string
                driver_instance_pool_id:
                  type: string
                runtime_engine:
                  type: boolean
                data_security_mode:
                  type: string
                single_user_name:
                  type: string
                apply_policy_default_values:
                  type: string
                autoscale:
                  type: object
                spark_conf:
                  type: object
                aws_attributes:
                  type: object
                custom_tags:
                  type: object
                cluster_log_conf:
                  type: object
                init_scripts:
                  type: Array of object
                spark_env_vars:
                  type: object
                workload_type:
                  type: object
                docker_image:
                  type: object
              example:
                cluster_id: 1202-211320-brick1
                num_workers: 10
                spark_version: 3.3.x-scala2.11
                node_type_id: i3.2xlarge
      description: Updates the configuration of a cluster to match the provided attributes
        and size. A cluster can be updated if it is in a
  /api/2.1/clusters/get:
    get:
      operationId: clusters-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/get
      x-stackQL-resource: clusters
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: cluster_id
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  cluster_id:
                    type: string
                  spark_context_id:
                    type: integer
                  cluster_name:
                    type: string
                  spark_version:
                    type: string
                  aws_attributes:
                    type: object
                    properties:
                      zone_id:
                        type: string
                      first_on_demand:
                        type: integer
                      availability:
                        type: string
                      spot_bid_price_percent:
                        type: integer
                      ebs_volume_count:
                        type: integer
                  node_type_id:
                    type: string
                  driver_node_type_id:
                    type: string
                  autotermination_minutes:
                    type: integer
                  enable_elastic_disk:
                    type: boolean
                  disk_spec:
                    type: object
                    properties:
                      disk_count:
                        type: integer
                  cluster_source:
                    type: string
                  enable_local_disk_encryption:
                    type: boolean
                  instance_source:
                    type: object
                    properties:
                      node_type_id:
                        type: string
                  driver_instance_source:
                    type: object
                    properties:
                      node_type_id:
                        type: string
                  state:
                    type: string
                  state_message:
                    type: string
                  start_time:
                    type: integer
                  terminated_time:
                    type: integer
                  last_state_loss_time:
                    type: integer
                  num_workers:
                    type: integer
                  default_tags:
                    type: object
                    properties:
                      Vendor:
                        type: string
                      Creator:
                        type: string
                      ClusterName:
                        type: string
                      ClusterId:
                        type: string
                  creator_user_name:
                    type: string
                  termination_reason:
                    type: object
                    properties:
                      code:
                        type: string
                      parameters:
                        type: object
                        properties:
                          inactivity_duration_min:
                            type: string
                      type:
                        type: string
                  init_scripts_safe_mode:
                    type: boolean
                  spec:
                    type: object
                    properties:
                      spark_version:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Retrieves the information for a cluster given its identifier. Clusters
        can be described while they are running, or up to 60 days after they are terminated.
  /api/2.1/clusters/list:
    get:
      operationId: clusters-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/list
      x-stackQL-resource: clusters
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: page_token
        in: query
      - name: page_size
        in: query
      - name: null
        in: query
      - name: null
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  clusters:
                    type: array
                    items:
                      type: object
                      properties:
                        cluster_id:
                          type: string
                        spark_context_id:
                          type: integer
                        cluster_name:
                          type: string
                        spark_version:
                          type: string
                        aws_attributes:
                          type: object
                          properties:
                            zone_id:
                              type: string
                            first_on_demand:
                              type: integer
                            availability:
                              type: string
                            spot_bid_price_percent:
                              type: integer
                            ebs_volume_count:
                              type: integer
                        node_type_id:
                          type: string
                        driver_node_type_id:
                          type: string
                        autotermination_minutes:
                          type: integer
                        enable_elastic_disk:
                          type: boolean
                        disk_spec:
                          type: object
                          properties:
                            disk_count:
                              type: integer
                        cluster_source:
                          type: string
                        enable_local_disk_encryption:
                          type: boolean
                        instance_source:
                          type: object
                          properties:
                            node_type_id:
                              type: string
                        driver_instance_source:
                          type: object
                          properties:
                            node_type_id:
                              type: string
                        state:
                          type: string
                        state_message:
                          type: string
                        start_time:
                          type: integer
                        terminated_time:
                          type: integer
                        last_state_loss_time:
                          type: integer
                        num_workers:
                          type: integer
                        default_tags:
                          type: object
                          properties:
                            Vendor:
                              type: string
                            Creator:
                              type: string
                            ClusterName:
                              type: string
                            ClusterId:
                              type: string
                        creator_user_name:
                          type: string
                        termination_reason:
                          type: object
                          properties:
                            code:
                              type: string
                            parameters:
                              type: object
                              properties:
                                inactivity_duration_min:
                                  type: string
                            type:
                              type: string
                        init_scripts_safe_mode:
                          type: boolean
                  prev_page_token:
                    type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.clusters
      description: Return information about all pinned and active clusters, and all
        clusters terminated within the last 30 days. Clusters terminated prior to
        this period are not included.
  /api/2.1/clusters/permanent-delete:
    post:
      operationId: clusters-permanentdelete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/permanentdelete
      x-stackQL-resource: clusters
      x-stackQL-method: permanentdelete
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
              example:
                cluster_id: 1202-211320-brick1
      description: Permanently deletes a Spark cluster. This cluster is terminated
        and resources are asynchronously removed.
  /api/2.1/clusters/pin:
    post:
      operationId: clusters-pin
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/pin
      x-stackQL-resource: clusters
      x-stackQL-method: pin
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
              example:
                cluster_id: 1234-567890-reef123
      description: Pinning a cluster ensures that the cluster will always be returned
        by the ListClusters API. Pinning a cluster that is already pinned will have
        no effect. This API can only be called by workspace admins.
  /api/2.1/clusters/resize:
    post:
      operationId: clusters-resize
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/resize
      x-stackQL-resource: clusters
      x-stackQL-method: resize
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                num_workers:
                  type: int32
                cluster_id:
                  type: required
                autoscale:
                  type: object
              example:
                cluster_id: 1202-211320-brick1
                num_workers: 30
      description: Resizes a cluster to have a desired number of workers. This will
        fail unless the cluster is in a
  /api/2.1/clusters/restart:
    post:
      operationId: clusters-restart
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/restart
      x-stackQL-resource: clusters
      x-stackQL-method: restart
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                restart_user:
                  type: string
              example:
                cluster_id: 1202-211320-brick1
      description: Restarts a Spark cluster with the supplied ID. If the cluster is
        not currently in a
  /api/2.1/clusters/start:
    post:
      operationId: clusters-start
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/start
      x-stackQL-resource: clusters
      x-stackQL-method: start
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
              example:
                cluster_id: 1202-211320-brick1
      description: Starts a terminated Spark cluster with the supplied ID. This works
        similar to
  /api/2.1/clusters/unpin:
    post:
      operationId: clusters-unpin
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/unpin
      x-stackQL-resource: clusters
      x-stackQL-method: unpin
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
              example:
                cluster_id: 1234-567890-reef123
      description: Unpinning a cluster will allow the cluster to eventually be removed
        from the ListClusters API. Unpinning a cluster that is not pinned will have
        no effect. This API can only be called by workspace admins.
  /api/2.1/clusters/update:
    post:
      operationId: clusters-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/update
      x-stackQL-resource: clusters
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                update_mask:
                  type: string
                cluster:
                  type: object
              example:
                cluster_id: 1202-211320-brick1
                cluster:
                  num_workers: 10
                  spark_version: 14.3.x-scala2.12
                  spark_conf:
                    spark.databricks.cluster.profile: singleNode
                    spark.master: '[*, 4]'
                update_mask: num_workers,spark_version,spark_conf
      description: Updates the configuration of a cluster to match the partial set
        of attributes and size. Denote which fields to update using the
  /api/2.1/clusters/events:
    post:
      operationId: cluster-events-events
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/events
      x-stackQL-resource: cluster_events
      x-stackQL-method: events
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        cluster_id:
                          type: string
                        timestamp:
                          type: integer
                        event_type:
                          type: string
                        event_details:
                          type: object
                          properties:
                            username:
                              type: string
                  next_page:
                    type: object
                    properties:
                      cluster_id:
                        type: string
                      end_time:
                        type: integer
                      order:
                        type: string
                      offset:
                        type: integer
                  total_count:
                    type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                start_time:
                  type: string
                end_time:
                  type: integer
                  format: int64
                order:
                  type: integer
                  format: int64
                event_types:
                  type: string
                offset:
                  type: Array of string
                limit:
                  type: integer
                  format: int64
              example:
                start_time: 1617238800000
                end_time: 1619485200000
                offset: 5
                order: DESC
                event_types:
                - RUNNING
                cluster_id: 1234-567890-reef123
                limit: 5
      description: Retrieves a list of events about the activity of a cluster. This
        API is paginated. If there are more events to read, the response includes
        all the nparameters necessary to request the next page of events.
  /api/2.0/permissions/clusters/{cluster_id}:
    get:
      operationId: cluster-permissions-getpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/getpermissions
      x-stackQL-resource: cluster_permissions
      x-stackQL-method: getpermissions
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: cluster_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of a cluster. Clusters can inherit permissions
        from their root object.
    put:
      operationId: cluster-permissions-setpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/setpermissions
      x-stackQL-resource: cluster_permissions
      x-stackQL-method: setpermissions
      x-stackQL-verb: replace
      x-numReqParams: 1
      parameters:
      - name: cluster_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their root object.
    patch:
      operationId: cluster-permissions-updatepermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/updatepermissions
      x-stackQL-resource: cluster_permissions
      x-stackQL-method: updatepermissions
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: cluster_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Updates the permissions on a cluster. Clusters can inherit permissions
        from their root object.
  /api/2.0/permissions/clusters/{cluster_id}/permissionLevels:
    get:
      operationId: cluster-permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/getpermissionlevels
      x-stackQL-resource: cluster_permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: cluster_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
  /api/2.0/policies/clusters/create:
    post:
      operationId: cluster-policies-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/create
      x-stackQL-resource: cluster_policies
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  policy_id:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                definition:
                  type: JSON
                description:
                  type: string
                policy_family_id:
                  type: string
                policy_family_definition_overrides:
                  type: JSON
                max_clusters_per_user:
                  type: integer
                  format: int64
                libraries:
                  type: Array of object
              example:
                definition: '{ "custom_tags.test_tag": { "type": "fixed", "value":
                  "test_value" } }'
                name: Test policy
      description: Creates a new policy with prescribed settings.
  /api/2.0/policies/clusters/delete:
    post:
      operationId: cluster-policies-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/delete
      x-stackQL-resource: cluster_policies
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policy_id:
                  type: required
              example:
                policy_id: string
      description: Delete a policy for a cluster. Clusters governed by this policy
        can still run, but cannot be edited.
  /api/2.0/policies/clusters/edit:
    post:
      operationId: cluster-policies-edit
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/edit
      x-stackQL-resource: cluster_policies
      x-stackQL-method: edit
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policy_id:
                  type: required
                name:
                  type: string
                definition:
                  type: string
                description:
                  type: JSON
                policy_family_id:
                  type: string
                policy_family_definition_overrides:
                  type: string
                max_clusters_per_user:
                  type: JSON
                libraries:
                  type: Array of object
              example:
                definition: '{ "custom_tags.test_tag": { "type": "fixed", "value":
                  "test_value" } }'
                name: Test policy
                policy_id: ABCD000000000000
      description: Update an existing policy for cluster. This operation may make
        some clusters governed by the previous policy invalid.
  /api/2.0/policies/clusters/get:
    get:
      operationId: cluster-policies-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/get
      x-stackQL-resource: cluster_policies
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: policy_id
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  policy_id:
                    type: string
                  name:
                    type: string
                  definition:
                    type: object
                    properties:
                      custom_tags.test_tag:
                        type: object
                        properties:
                          type:
                            type: string
                          value:
                            type: string
                  description:
                    type: string
                  policy_family_id:
                    type: string
                  policy_family_definition_overrides:
                    type: object
                    properties:
                      custom_tags.test_tag:
                        type: object
                        properties:
                          type:
                            type: string
                          value:
                            type: string
                  max_clusters_per_user:
                    type: integer
                  libraries:
                    type: array
                    items:
                      type: object
                      properties:
                        jar:
                          type: string
                        egg:
                          type: string
                        pypi:
                          type: object
                          properties:
                            package:
                              type: string
                            repo:
                              type: string
                        maven:
                          type: object
                          properties:
                            coordinates:
                              type: string
                            repo:
                              type: string
                            exclusions:
                              type: array
                              items:
                                type: string
                        cran:
                          type: object
                          properties:
                            package:
                              type: string
                            repo:
                              type: string
                        whl:
                          type: string
                        requirements:
                          type: string
                  creator_user_name:
                    type: string
                  created_at_timestamp:
                    type: integer
                  is_default:
                    type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      description: Get a cluster policy entity. Creation and editing is available
        to admins only.
  /api/2.0/policies/clusters/list:
    get:
      operationId: cluster-policies-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/list
      x-stackQL-resource: cluster_policies
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: sort_order
        in: query
      - name: sort_column
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  policies:
                    type: array
                    items:
                      type: object
                      properties:
                        policy_id:
                          type: string
                        name:
                          type: string
                        definition:
                          type: object
                          properties:
                            custom_tags.test_tag:
                              type: object
                              properties:
                                type:
                                  type: string
                                value:
                                  type: string
                        description:
                          type: string
                        policy_family_id:
                          type: string
                        policy_family_definition_overrides:
                          type: object
                          properties:
                            custom_tags.test_tag:
                              type: object
                              properties:
                                type:
                                  type: string
                                value:
                                  type: string
                        max_clusters_per_user:
                          type: integer
                        libraries:
                          type: array
                          items:
                            type: object
                            properties:
                              jar:
                                type: string
                              egg:
                                type: string
                              pypi:
                                type: object
                                properties:
                                  package:
                                    type: string
                                  repo:
                                    type: string
                              maven:
                                type: object
                                properties:
                                  coordinates:
                                    type: string
                                  repo:
                                    type: string
                                  exclusions:
                                    type: array
                                    items:
                                      type: string
                              cran:
                                type: object
                                properties:
                                  package:
                                    type: string
                                  repo:
                                    type: string
                              whl:
                                type: string
                              requirements:
                                type: string
                        creator_user_name:
                          type: string
                        created_at_timestamp:
                          type: integer
                        is_default:
                          type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
        '503':
          description: Service is currently unavailable.
        '504':
          description: Deadline expired before the operation could complete.
      x-stackQL-objectKey: $.policies
      description: Returns a list of policies accessible by the requesting user.
  /api/2.0/permissions/cluster-policies/{cluster_policy_id}:
    get:
      operationId: cluster-policies-permissions-getpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/getpermissions
      x-stackQL-resource: cluster_policies_permissions
      x-stackQL-method: getpermissions
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: cluster_policy_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of a cluster policy. Cluster policies can
        inherit permissions from their root object.
    put:
      operationId: cluster-policies-permissions-setpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/setpermissions
      x-stackQL-resource: cluster_policies_permissions
      x-stackQL-method: setpermissions
      x-stackQL-verb: replace
      x-numReqParams: 1
      parameters:
      - name: cluster_policy_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_USE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their root object.
    patch:
      operationId: cluster-policies-permissions-updatepermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/updatepermissions
      x-stackQL-resource: cluster_policies_permissions
      x-stackQL-method: updatepermissions
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: cluster_policy_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_USE
      description: Updates the permissions on a cluster policy. Cluster policies can
        inherit permissions from their root object.
  /api/2.0/policies/clusters/enforce-compliance:
    post:
      operationId: cluster-policy-compliance-enforcecompliance
      externalDocs:
        url: https://docs.databricks.com/api/workspace/policycomplianceforclusters/enforcecompliance
      x-stackQL-resource: cluster_policy_compliance
      x-stackQL-method: enforcecompliance
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  has_changes:
                    type: boolean
                  changes:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        previous_value:
                          type: string
                        new_value:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                validate_only:
                  type: string
              example:
                cluster_id: string
                validate_only: false
      description: Updates a cluster to be compliant with the current version of its
        policy. A cluster can be updated if it is in a
  /api/2.0/policies/clusters/get-compliance:
    get:
      operationId: cluster-policy-compliance-getcompliance
      externalDocs:
        url: https://docs.databricks.com/api/workspace/policycomplianceforclusters/getcompliance
      x-stackQL-resource: cluster_policy_compliance
      x-stackQL-method: getcompliance
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: cluster_id
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_compliant:
                    type: boolean
                  violations:
                    type: object
                    properties:
                      custom_tags.test_tag:
                        type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      description: Returns the policy compliance status of a cluster. Clusters could
        be out of compliance if their policy was updated after the cluster was last
        edited.
  /api/1.2/commands/cancel:
    post:
      operationId: commands-cancel
      externalDocs:
        url: https://docs.databricks.com/api/workspace/commandexecution/cancel
      x-stackQL-resource: commands
      x-stackQL-method: cancel
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Status was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterId:
                  type: string
                contextId:
                  type: string
                commandId:
                  type: string
              example:
                clusterId: string
                contextId: string
                commandId: string
      description: Cancels a currently running command within an execution context.
  /api/1.2/commands/status:
    get:
      operationId: commands-commandstatus
      externalDocs:
        url: https://docs.databricks.com/api/workspace/commandexecution/commandstatus
      x-stackQL-resource: commands
      x-stackQL-method: commandstatus
      x-stackQL-verb: select
      x-numReqParams: 3
      parameters:
      - name: clusterId
        required: true
        description: string
        in: query
      - name: contextId
        required: true
        description: string
        in: query
      - name: commandId
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Status was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string
                  results:
                    type: object
                    properties:
                      resultType:
                        type: string
                      data:
                        type: string
      description: Gets the status of and, if available, the results from a currently
        executing command.
  /api/1.2/contexts/create:
    post:
      operationId: commands-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/commandexecution/create
      x-stackQL-resource: commands
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Status was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterId:
                  type: string
                language:
                  type: string
              example:
                clusterId: string
                language: python
      description: Creates an execution context for running cluster commands.
  /api/1.2/contexts/destroy:
    post:
      operationId: commands-destroy
      externalDocs:
        url: https://docs.databricks.com/api/workspace/commandexecution/destroy
      x-stackQL-resource: commands
      x-stackQL-method: destroy
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Status was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterId:
                  type: required
                contextId:
                  type: string
              example:
                clusterId: string
                contextId: string
      description: Deletes an execution context.
  /api/1.2/commands/execute:
    post:
      operationId: commands-execute
      externalDocs:
        url: https://docs.databricks.com/api/workspace/commandexecution/execute
      x-stackQL-resource: commands
      x-stackQL-method: execute
      x-stackQL-verb: exec
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Status was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterId:
                  type: string
                contextId:
                  type: string
                language:
                  type: string
                command:
                  type: string
              example:
                clusterId: 1234-567890-span123
                contextId: '1234567890123456789'
                language: python
                command: print('Hello, World!')
      description: Runs a cluster command in the given execution context, using the
        provided language.
  /api/1.2/contexts/status:
    get:
      operationId: command-status-contextstatus
      externalDocs:
        url: https://docs.databricks.com/api/workspace/commandexecution/contextstatus
      x-stackQL-resource: command_status
      x-stackQL-method: contextstatus
      x-stackQL-verb: select
      x-numReqParams: 2
      parameters:
      - name: clusterId
        required: true
        description: string
        in: query
      - name: contextId
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Status was returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string
      description: Gets the status for an execution context.
  /api/2.0/global-init-scripts:
    post:
      operationId: global-init-scripts-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/globalinitscripts/create
      x-stackQL-resource: global_init_scripts
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Response indicating that the script was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  script_id:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                script:
                  type: string
                position:
                  type: required
                enabled:
                  type: byte
              example:
                name: My example script name
                script: ZWNobyBoZWxsbw==
                position: 0
                enabled: false
      description: Manages global init scripts for this workspace.
    get:
      operationId: global-init-scripts-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/globalinitscripts/list
      x-stackQL-resource: global_init_scripts
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Response indicating that the scripts were retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  scripts:
                    type: array
                    items:
                      type: object
                      properties:
                        script_id:
                          type: string
                        name:
                          type: string
                        position:
                          type: integer
                        enabled:
                          type: boolean
                        created_by:
                          type: string
                        created_at:
                          type: integer
                        updated_by:
                          type: string
                        updated_at:
                          type: integer
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.scripts
      description: Manages global init scripts for this workspace.
  /api/2.0/global-init-scripts/{script_id}:
    delete:
      operationId: global-init-scripts-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/globalinitscripts/delete
      x-stackQL-resource: global_init_scripts
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: script_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The script was deleted successfully.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Manage a specific global init script with ID
    get:
      operationId: global-init-scripts-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/globalinitscripts/get
      x-stackQL-resource: global_init_scripts
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: script_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: Response indicating that the script was retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  script_id:
                    type: string
                  name:
                    type: string
                  position:
                    type: integer
                  enabled:
                    type: boolean
                  created_by:
                    type: string
                  created_at:
                    type: integer
                  updated_by:
                    type: string
                  updated_at:
                    type: integer
                  script:
                    type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Manage a specific global init script with ID
    patch:
      operationId: global-init-scripts-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/globalinitscripts/update
      x-stackQL-resource: global_init_scripts
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: script_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: The script was updated successfully.
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                script:
                  type: string
                position:
                  type: required
                enabled:
                  type: byte
              example:
                name: My example script name
                script: ZWNobyBoZWxsbw==
                position: 0
                enabled: false
      description: Manage a specific global init script with ID
  /api/2.0/instance-pools/create:
    post:
      operationId: instance-pools-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/create
      x-stackQL-resource: instance_pools
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  instance_pool_id:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_pool_name:
                  type: required
                min_idle_instances:
                  type: string
                max_capacity:
                  type: int32
                node_type_id:
                  type: int32
                idle_instance_autotermination_minutes:
                  type: required
                enable_elastic_disk:
                  type: string
                preloaded_spark_versions:
                  type: int32
                aws_attributes:
                  type: object
                custom_tags:
                  type: object
                disk_spec:
                  type: object
                preloaded_docker_images:
                  type: Array of object
              example:
                instance_pool_name: my-pool
                node_type_id: i3.xlarge
                min_idle_instances: 10
                aws_attributes:
                  availability: SPOT
                custom_tags:
                - key: my-key
                  value: my-value
      description: Creates a new instance pool using idle and ready-to-use cloud instances.
  /api/2.0/instance-pools/delete:
    post:
      operationId: instance-pools-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/delete
      x-stackQL-resource: instance_pools
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_pool_id:
                  type: required
              example:
                instance_pool_id: 1234-567890-fetch12-pool-A3BcdEFg
      description: Deletes the instance pool permanently. The idle instances in the
        pool are terminated asynchronously.
  /api/2.0/instance-pools/edit:
    post:
      operationId: instance-pools-edit
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/edit
      x-stackQL-resource: instance_pools
      x-stackQL-method: edit
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_pool_name:
                  type: required
                min_idle_instances:
                  type: string
                max_capacity:
                  type: int32
                idle_instance_autotermination_minutes:
                  type: int32
                instance_pool_id:
                  type: int32
                node_type_id:
                  type: required
                custom_tags:
                  type: object
              example:
                max_capacity: 200
                idle_instance_autotermination_minutes: 30
                min_idle_instances: 5
                instance_pool_id: 1234-567890-fetch12-pool-A3BcdEFg
                instance_pool_name: my-edited-pool
      description: Modifies the configuration of an existing instance pool.
  /api/2.0/instance-pools/get:
    get:
      operationId: instance-pools-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/get
      x-stackQL-resource: instance_pools
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: instance_pool_id
        required: true
        description: string
        in: query
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  instance_pool_name:
                    type: string
                  min_idle_instances:
                    type: integer
                  aws_attributes:
                    type: object
                    properties:
                      availability:
                        type: string
                      zone_id:
                        type: string
                      spot_bid_price_percent:
                        type: integer
                  node_type_id:
                    type: string
                  custom_tags:
                    type: object
                    properties:
                      my-key:
                        type: string
                  idle_instance_autotermination_minutes:
                    type: integer
                  enable_elastic_disk:
                    type: boolean
                  disk_spec:
                    type: object
                    properties:
                      disk_type:
                        type: object
                        properties:
                          ebs_volume_type:
                            type: string
                      disk_count:
                        type: integer
                      disk_size:
                        type: integer
                  preloaded_spark_versions:
                    type: array
                    items:
                      type: string
                  instance_pool_id:
                    type: string
                  default_tags:
                    type: object
                    properties:
                      Vendor:
                        type: string
                      DatabricksInstancePoolCreatorId:
                        type: string
                      DatabricksInstancePoolId:
                        type: string
                  state:
                    type: string
                  stats:
                    type: object
                    properties:
                      used_count:
                        type: integer
                      idle_count:
                        type: integer
                      pending_used_count:
                        type: integer
                      pending_idle_count:
                        type: integer
                  status:
                    type: object
                    properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Retrieve the information for an instance pool based on its identifier.
  /api/2.0/instance-pools/list:
    get:
      operationId: instance-pools-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/list
      x-stackQL-resource: instance_pools
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  instance_pools:
                    type: array
                    items:
                      type: object
                      properties:
                        instance_pool_name:
                          type: string
                        min_idle_instances:
                          type: integer
                        aws_attributes:
                          type: object
                          properties:
                            availability:
                              type: string
                            zone_id:
                              type: string
                            spot_bid_price_percent:
                              type: integer
                        node_type_id:
                          type: string
                        idle_instance_autotermination_minutes:
                          type: integer
                        enable_elastic_disk:
                          type: boolean
                        disk_spec:
                          type: object
                          properties:
                            disk_type:
                              type: object
                              properties:
                                ebs_volume_type:
                                  type: string
                            disk_count:
                              type: integer
                            disk_size:
                              type: integer
                        preloaded_spark_versions:
                          type: array
                          items:
                            type: string
                        instance_pool_id:
                          type: string
                        default_tags:
                          type: object
                          properties:
                            Vendor:
                              type: string
                            DatabricksInstancePoolCreatorId:
                              type: string
                            DatabricksInstancePoolId:
                              type: string
                        state:
                          type: string
                        stats:
                          type: object
                          properties:
                            used_count:
                              type: integer
                            idle_count:
                              type: integer
                            pending_used_count:
                              type: integer
                            pending_idle_count:
                              type: integer
                        status:
                          type: object
                          properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.instance_pools
      description: Gets a list of instance pools with their statistics.
  /api/2.0/permissions/instance-pools/{instance_pool_id}:
    get:
      operationId: instance-pool-permissions-getpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/getpermissions
      x-stackQL-resource: instance_pool_permissions
      x-stackQL-method: getpermissions
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: instance_pool_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of an instance pool. Instance pools can inherit
        permissions from their root object.
    put:
      operationId: instance-pool-permissions-setpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/setpermissions
      x-stackQL-resource: instance_pool_permissions
      x-stackQL-method: setpermissions
      x-stackQL-verb: replace
      x-numReqParams: 1
      parameters:
      - name: instance_pool_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their root object.
    patch:
      operationId: instance-pool-permissions-updatepermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/updatepermissions
      x-stackQL-resource: instance_pool_permissions
      x-stackQL-method: updatepermissions
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: instance_pool_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Updates the permissions on an instance pool. Instance pools can
        inherit permissions from their root object.
  /api/2.0/permissions/instance-pools/{instance_pool_id}/permissionLevels:
    get:
      operationId: instance-pool-permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instancepools/getpermissionlevels
      x-stackQL-resource: instance_pool_permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: instance_pool_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
  /api/2.0/instance-profiles/add:
    post:
      operationId: instance-profiles-add
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instanceprofiles/add
      x-stackQL-resource: instance_profiles
      x-stackQL-method: add
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skip_validation:
                  type: boolean
                instance_profile_arn:
                  type: required
                iam_role_arn:
                  type: string
                is_meta_instance_profile:
                  type: string
              example:
                instance_profile_arn: arn:aws:iam::123456789012:instance-profile/my-profile
      description: In the UI, you can select the instance profile when launching clusters.
        This API is only available to admin users.
  /api/2.0/instance-profiles/edit:
    post:
      operationId: instance-profiles-edit
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instanceprofiles/edit
      x-stackQL-resource: instance_profiles
      x-stackQL-method: edit
      x-stackQL-verb: replace
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_profile_arn:
                  type: required
                iam_role_arn:
                  type: string
                is_meta_instance_profile:
                  type: string
              example:
                instance_profile_arn: arn:aws:iam::123456789012:instance-profile/my-profile
                iam_role_arn: arn:aws:iam::123456789012:role/my-profile2
      description: 'The only supported field to change is the optional IAM role ARN
        associated with the instance profile. It is required to specify the IAM role
        ARN if both of the following are true:'
  /api/2.0/instance-profiles/list:
    get:
      operationId: instance-profiles-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instanceprofiles/list
      x-stackQL-resource: instance_profiles
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  instance_profiles:
                    type: array
                    items:
                      type: object
                      properties:
                        instance_profile_arn:
                          type: string
                        is_meta_instance_profile:
                          type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.instance_profiles
      description: List the instance profiles that the calling user can use to launch
        a cluster.
  /api/2.0/instance-profiles/remove:
    post:
      operationId: instance-profiles-remove
      externalDocs:
        url: https://docs.databricks.com/api/workspace/instanceprofiles/remove
      x-stackQL-resource: instance_profiles
      x-stackQL-method: remove
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_profile_arn:
                  type: required
              example:
                instance_profile_arn: arn:aws:iam::123456789012:instance-profile/my-profile
      description: Remove the instance profile with the provided ARN. Existing clusters
        with this instance profile will continue to function.
  /api/2.0/libraries/all-cluster-statuses:
    get:
      operationId: libraries-allclusterlibrarystatuses
      externalDocs:
        url: https://docs.databricks.com/api/workspace/libraries/allclusterlibrarystatuses
      x-stackQL-resource: libraries
      x-stackQL-method: allclusterlibrarystatuses
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        cluster_id:
                          type: string
                        library_statuses:
                          type: array
                          items:
                            type: object
                            properties:
                              is_library_for_all_clusters:
                                type: boolean
                              library:
                                type: object
                                properties:
                                  pypi:
                                    type: object
                                    properties:
                                      package:
                                        type: string
                                      repo:
                                        type: string
                              status:
                                type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.statuses
      description: Get the status of all libraries on all clusters. A status is returned
        for all libraries installed on this cluster via the API or the libraries UI.
  /api/2.0/libraries/cluster-status:
    get:
      operationId: libraries-clusterstatus
      externalDocs:
        url: https://docs.databricks.com/api/workspace/libraries/clusterstatus
      x-stackQL-resource: libraries
      x-stackQL-method: clusterstatus
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: cluster_id
        required: true
        description: string
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  cluster_id:
                    type: string
                  library_statuses:
                    type: array
                    items:
                      type: object
                      properties:
                        is_library_for_all_clusters:
                          type: boolean
                        library:
                          type: object
                          properties:
                            pypi:
                              type: object
                              properties:
                                package:
                                  type: string
                                repo:
                                  type: string
                        status:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      description: 'Get the status of libraries on a cluster. A status is returned
        for all libraries installed on this cluster via the API or the libraries UI.
        The order of returned libraries is as follows:'
  /api/2.0/libraries/install:
    post:
      operationId: libraries-install
      externalDocs:
        url: https://docs.databricks.com/api/workspace/libraries/install
      x-stackQL-resource: libraries
      x-stackQL-method: install
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                libraries:
                  type: required
              example:
                cluster_id: 1234-56789-abcde
                libraries:
                - pypi:
                    package: numpy
                    repo: http://my-pypi-repo.com
                - jar: /Workspace/path/to/library.jar
                - whl: /Workspace/path/to/library.whl
                - maven:
                    coordinates: com.databricks:spark-csv_2.11:1.5.0
                    exclusions:
                    - org.slf4j:slf4j-log4j12
                    repo: http://my-maven-repo.com
                - cran:
                    package: ggplot2
                    repo: http://cran.us.r-project.org
                - requirements: /Workspace/path/to/requirements.txt
      description: Add libraries to install on a cluster. The installation is asynchronous;
        it happens in the background after the completion of this request.
  /api/2.0/libraries/uninstall:
    post:
      operationId: libraries-uninstall
      externalDocs:
        url: https://docs.databricks.com/api/workspace/libraries/uninstall
      x-stackQL-resource: libraries
      x-stackQL-method: uninstall
      x-stackQL-verb: delete
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '429':
          description: Operation is rejected due to throttling, e.g. some resource
            has been exhausted, per-user quota.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cluster_id:
                  type: required
                libraries:
                  type: required
              example:
                cluster_id: 1234-56789-abcde
                libraries:
                - pypi:
                    package: numpy
                    repo: http://my-pypi-repo.com
                - jar: /Workspace/path/to/library.jar
                - whl: /Workspace/path/to/library.whl
                - maven:
                    coordinates: com.databricks:spark-csv_2.11:1.5.0
                    exclusions:
                    - org.slf4j:slf4j-log4j12
                    repo: http://my-maven-repo.com
                - cran:
                    package: ggplot2
                    repo: http://cran.us.r-project.org
                - requirements: /Workspace/path/to/requirements.txt
      description: Set libraries to uninstall from a cluster. The libraries won't
        be uninstalled until the cluster is restarted. A request to uninstall a library
        that is not currently installed is ignored.
  /api/2.1/clusters/list-node-types:
    get:
      operationId: node-types-listnodetypes
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/listnodetypes
      x-stackQL-resource: node_types
      x-stackQL-method: listnodetypes
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  node_types:
                    type: array
                    items:
                      type: object
                      properties:
                        node_type_id:
                          type: string
                        memory_mb:
                          type: integer
                        num_cores:
                          type: integer
                        description:
                          type: string
                        instance_type_id:
                          type: string
                        is_deprecated:
                          type: boolean
                        category:
                          type: string
                        support_ebs_volumes:
                          type: boolean
                        support_cluster_tags:
                          type: boolean
                        num_gpus:
                          type: integer
                        node_instance_type:
                          type: object
                          properties:
                            instance_type_id:
                              type: string
                            local_disks:
                              type: integer
                            local_disk_size_gb:
                              type: integer
                            instance_family:
                              type: string
                            swap_size:
                              type: string
                        is_hidden:
                          type: boolean
                        support_port_forwarding:
                          type: boolean
                        supports_elastic_disk:
                          type: boolean
                        display_order:
                          type: integer
                        is_io_cache_enabled:
                          type: boolean
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.node_types
      description: Returns a list of supported Spark node types. These node types
        can be used to launch a cluster.
  /api/2.0/policy-families/{policy_family_id}:
    get:
      operationId: policy-families-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/policyfamilies/get
      x-stackQL-resource: policy_families
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: policy_family_id
        required: true
        description: string
        in: path
      - name: version
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  policy_family_id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  definition:
                    type: object
                    properties:
                      custom_tags.test_tag:
                        type: object
                        properties:
                          type:
                            type: string
                          value:
                            type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Retrieve the information for an policy family based on its identifier
        and version
  /api/2.0/policy-families:
    get:
      operationId: policy-families-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/policyfamilies/list
      x-stackQL-resource: policy_families
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: max_results
        in: query
      - name: page_token
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  policy_families:
                    type: array
                    items:
                      type: object
                      properties:
                        policy_family_id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        definition:
                          type: object
                          properties:
                            custom_tags.test_tag:
                              type: object
                              properties:
                                type:
                                  type: string
                                value:
                                  type: string
                  next_page_token:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.policy_families
      description: Returns the list of policy definition types available to use at
        their latest version. This API is paginated.
  /api/2.0/permissions/cluster-policies/{cluster_policy_id}/permissionLevels:
    get:
      operationId: policy-permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusterpolicies/getpermissionlevels
      x-stackQL-resource: policy_permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: cluster_policy_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
  /api/2.1/clusters/spark-versions:
    get:
      operationId: spark-versions-sparkversions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/sparkversions
      x-stackQL-resource: spark_versions
      x-stackQL-method: sparkversions
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        name:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.versions
      description: Returns the list of available Spark versions. These versions can
        be used to launch a cluster.
  /api/2.1/clusters/list-zones:
    get:
      operationId: zones-listzones
      externalDocs:
        url: https://docs.databricks.com/api/workspace/clusters/listzones
      x-stackQL-resource: zones
      x-stackQL-method: listzones
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  zones:
                    type: array
                    items:
                      type: string
                  default_zone:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '500':
          description: Internal error.
      description: Returns a list of availability zones where clusters can be created
        in (For example, us-west-2a). These zones can be used to launch a cluster.
components:
  x-stackQL-resources:
    all_clusters_policy_compliance:
      id: databricks_workspace.compute.all_clusters_policy_compliance
      name: all_clusters_policy_compliance
      title: All_clusters_policy_compliance
      methods:
        listcompliance:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1list-compliance/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/all_clusters_policy_compliance/methods/listcompliance'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    clusters:
      id: databricks_workspace.compute.clusters
      name: clusters
      title: Clusters
      methods:
        changeowner:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1change-owner/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1delete/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        edit:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1edit/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1get/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.clusters
        permanentdelete:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1permanent-delete/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        pin:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1pin/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        resize:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1resize/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1restart/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1start/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        unpin:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1unpin/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1update/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
        insert:
        - $ref: '#/components/x-stackQL-resources/clusters/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/clusters/methods/update'
        replace:
        - $ref: '#/components/x-stackQL-resources/clusters/methods/edit'
        delete:
        - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
        exec:
        - $ref: '#/components/x-stackQL-resources/clusters/methods/unpin'
        - $ref: '#/components/x-stackQL-resources/clusters/methods/start'
        - $ref: '#/components/x-stackQL-resources/clusters/methods/restart'
        - $ref: '#/components/x-stackQL-resources/clusters/methods/resize'
        - $ref: '#/components/x-stackQL-resources/clusters/methods/pin'
        - $ref: '#/components/x-stackQL-resources/clusters/methods/permanentdelete'
        - $ref: '#/components/x-stackQL-resources/clusters/methods/changeowner'
    cluster_events:
      id: databricks_workspace.compute.cluster_events
      name: cluster_events
      title: Cluster_events
      methods:
        events:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1events/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/cluster_events/methods/events'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    cluster_permissions:
      id: databricks_workspace.compute.cluster_permissions
      name: cluster_permissions
      title: Cluster_permissions
      methods:
        getpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1clusters~1{cluster_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1clusters~1{cluster_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatepermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1clusters~1{cluster_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/cluster_permissions/methods/getpermissions'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/cluster_permissions/methods/updatepermissions'
        replace:
        - $ref: '#/components/x-stackQL-resources/cluster_permissions/methods/setpermissions'
        delete: []
        exec: []
    cluster_permission_levels:
      id: databricks_workspace.compute.cluster_permission_levels
      name: cluster_permission_levels
      title: Cluster_permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1clusters~1{cluster_id}~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/cluster_permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    cluster_policies:
      id: databricks_workspace.compute.cluster_policies
      name: cluster_policies
      title: Cluster_policies
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1delete/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        edit:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1edit/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1get/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policies
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/list'
        - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/get'
        insert:
        - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/create'
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/edit'
        delete:
        - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/delete'
        exec: []
    cluster_policies_permissions:
      id: databricks_workspace.compute.cluster_policies_permissions
      name: cluster_policies_permissions
      title: Cluster_policies_permissions
      methods:
        getpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1cluster-policies~1{cluster_policy_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1cluster-policies~1{cluster_policy_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatepermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1cluster-policies~1{cluster_policy_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/cluster_policies_permissions/methods/getpermissions'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/cluster_policies_permissions/methods/updatepermissions'
        replace:
        - $ref: '#/components/x-stackQL-resources/cluster_policies_permissions/methods/setpermissions'
        delete: []
        exec: []
    cluster_policy_compliance:
      id: databricks_workspace.compute.cluster_policy_compliance
      name: cluster_policy_compliance
      title: Cluster_policy_compliance
      methods:
        enforcecompliance:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1enforce-compliance/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        getcompliance:
          operation:
            $ref: '#/paths/~1api~12.0~1policies~1clusters~1get-compliance/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/cluster_policy_compliance/methods/getcompliance'
        insert: []
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/cluster_policy_compliance/methods/enforcecompliance'
        delete: []
        exec: []
    commands:
      id: databricks_workspace.compute.commands
      name: commands
      title: Commands
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1api~11.2~1commands~1cancel/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        commandstatus:
          operation:
            $ref: '#/paths/~1api~11.2~1commands~1status/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1api~11.2~1contexts~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        destroy:
          operation:
            $ref: '#/paths/~1api~11.2~1contexts~1destroy/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        execute:
          operation:
            $ref: '#/paths/~1api~11.2~1commands~1execute/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/commands/methods/commandstatus'
        insert:
        - $ref: '#/components/x-stackQL-resources/commands/methods/create'
        update: []
        replace: []
        delete: []
        exec:
        - $ref: '#/components/x-stackQL-resources/commands/methods/execute'
        - $ref: '#/components/x-stackQL-resources/commands/methods/destroy'
        - $ref: '#/components/x-stackQL-resources/commands/methods/cancel'
    command_status:
      id: databricks_workspace.compute.command_status
      name: command_status
      title: Command_status
      methods:
        contextstatus:
          operation:
            $ref: '#/paths/~1api~11.2~1contexts~1status/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/command_status/methods/contextstatus'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    global_init_scripts:
      id: databricks_workspace.compute.global_init_scripts
      name: global_init_scripts
      title: Global_init_scripts
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1global-init-scripts/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1global-init-scripts/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.scripts
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1global-init-scripts~1{script_id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1global-init-scripts~1{script_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1global-init-scripts~1{script_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/global_init_scripts/methods/get'
        - $ref: '#/components/x-stackQL-resources/global_init_scripts/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/global_init_scripts/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/global_init_scripts/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/global_init_scripts/methods/delete'
        exec: []
    instance_pools:
      id: databricks_workspace.compute.instance_pools
      name: instance_pools
      title: Instance_pools
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-pools~1create/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-pools~1delete/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        edit:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-pools~1edit/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-pools~1get/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-pools~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instance_pools
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/instance_pools/methods/list'
        - $ref: '#/components/x-stackQL-resources/instance_pools/methods/get'
        insert:
        - $ref: '#/components/x-stackQL-resources/instance_pools/methods/create'
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/instance_pools/methods/edit'
        delete:
        - $ref: '#/components/x-stackQL-resources/instance_pools/methods/delete'
        exec: []
    instance_pool_permissions:
      id: databricks_workspace.compute.instance_pool_permissions
      name: instance_pool_permissions
      title: Instance_pool_permissions
      methods:
        getpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1instance-pools~1{instance_pool_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1instance-pools~1{instance_pool_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatepermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1instance-pools~1{instance_pool_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/instance_pool_permissions/methods/getpermissions'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/instance_pool_permissions/methods/updatepermissions'
        replace:
        - $ref: '#/components/x-stackQL-resources/instance_pool_permissions/methods/setpermissions'
        delete: []
        exec: []
    instance_pool_permission_levels:
      id: databricks_workspace.compute.instance_pool_permission_levels
      name: instance_pool_permission_levels
      title: Instance_pool_permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1instance-pools~1{instance_pool_id}~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/instance_pool_permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    instance_profiles:
      id: databricks_workspace.compute.instance_profiles
      name: instance_profiles
      title: Instance_profiles
      methods:
        add:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-profiles~1add/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        edit:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-profiles~1edit/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-profiles~1list/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.instance_profiles
        remove:
          operation:
            $ref: '#/paths/~1api~12.0~1instance-profiles~1remove/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/add'
        update: []
        replace:
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/edit'
        delete:
        - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/remove'
        exec: []
    libraries:
      id: databricks_workspace.compute.libraries
      name: libraries
      title: Libraries
      methods:
        allclusterlibrarystatuses:
          operation:
            $ref: '#/paths/~1api~12.0~1libraries~1all-cluster-statuses/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.statuses
        clusterstatus:
          operation:
            $ref: '#/paths/~1api~12.0~1libraries~1cluster-status/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        install:
          operation:
            $ref: '#/paths/~1api~12.0~1libraries~1install/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        uninstall:
          operation:
            $ref: '#/paths/~1api~12.0~1libraries~1uninstall/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/libraries/methods/clusterstatus'
        - $ref: '#/components/x-stackQL-resources/libraries/methods/allclusterlibrarystatuses'
        insert:
        - $ref: '#/components/x-stackQL-resources/libraries/methods/install'
        update: []
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/libraries/methods/uninstall'
        exec: []
    node_types:
      id: databricks_workspace.compute.node_types
      name: node_types
      title: Node_types
      methods:
        listnodetypes:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1list-node-types/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.node_types
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/node_types/methods/listnodetypes'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    policy_families:
      id: databricks_workspace.compute.policy_families
      name: policy_families
      title: Policy_families
      methods:
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1policy-families~1{policy_family_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1policy-families/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.policy_families
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/policy_families/methods/list'
        - $ref: '#/components/x-stackQL-resources/policy_families/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    policy_permission_levels:
      id: databricks_workspace.compute.policy_permission_levels
      name: policy_permission_levels
      title: Policy_permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1cluster-policies~1{cluster_policy_id}~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/policy_permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    spark_versions:
      id: databricks_workspace.compute.spark_versions
      name: spark_versions
      title: Spark_versions
      methods:
        sparkversions:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1spark-versions/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.versions
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/spark_versions/methods/sparkversions'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    zones:
      id: databricks_workspace.compute.zones
      name: zones
      title: Zones
      methods:
        listzones:
          operation:
            $ref: '#/paths/~1api~12.1~1clusters~1list-zones/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/zones/methods/listzones'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
