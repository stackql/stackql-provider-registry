openapi: 3.0.0
info:
  version: 2024-12-19-stackql-generated
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  title: Databricks Repos API
  description: Repos
servers:
- url: https://{deployment_name}.cloud.databricks.com
  variables:
    deployment_name:
      description: The Databricks Workspace Deployment Name
      default: dbc-abcd0123-a1bc
paths:
  /api/2.0/git-credentials:
    post:
      operationId: git-credentials-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/gitcredentials/create
      x-stackQL-resource: git_credentials
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  credential_id:
                    type: string
                  git_provider:
                    type: string
                  git_username:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                git_provider:
                  type: required
                git_username:
                  type: string
                personal_access_token:
                  type: string
              example:
                git_provider: gitHub
                git_username: testuser
                personal_access_token: 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
      description: Creates a Git credential entry for the user. Only one Git credential
        per user is supported, so any attempts to create credentials if an entry already
        exists will fail. Use the PATCH endpoint to update existing credentials, or
        the DELETE endpoint to delete existing credentials.
    get:
      operationId: git-credentials-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/gitcredentials/list
      x-stackQL-resource: git_credentials
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentials:
                    type: array
                    items:
                      type: object
                      properties:
                        credential_id:
                          type: string
                        git_provider:
                          type: string
                        git_username:
                          type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.credentials
      description: Lists the calling user's Git credentials. One credential per user
        is supported.
  /api/2.0/git-credentials/{credential_id}:
    delete:
      operationId: git-credentials-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/gitcredentials/delete
      x-stackQL-resource: git_credentials
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: credential_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes the specified Git credential.
    get:
      operationId: git-credentials-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/gitcredentials/get
      x-stackQL-resource: git_credentials
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: credential_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  credential_id:
                    type: string
                  git_provider:
                    type: string
                  git_username:
                    type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the Git credential with the specified credential ID.
    patch:
      operationId: git-credentials-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/gitcredentials/update
      x-stackQL-resource: git_credentials
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: credential_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                personal_access_token:
                  type: string
                git_provider:
                  type: required
                git_username:
                  type: string
              example:
                git_provider: gitHub
                git_username: testuser
                id: '93488329053511'
                personal_access_token: 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
      description: Updates the specified Git credential.
  /api/2.0/permissions/repos/{repo_id}:
    get:
      operationId: permissions-getpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/getpermissions
      x-stackQL-resource: permissions
      x-stackQL-method: getpermissions
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: repo_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Gets the permissions of a repo. Repos can inherit permissions from
        their root object.
    put:
      operationId: permissions-setpermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/setpermissions
      x-stackQL-resource: permissions
      x-stackQL-method: setpermissions
      x-stackQL-verb: replace
      x-numReqParams: 1
      parameters:
      - name: repo_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Sets permissions on an object, replacing existing permissions if
        they exist. Deletes all direct permissions if none are specified. Objects
        can inherit permissions from their root object.
    patch:
      operationId: permissions-updatepermissions
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/updatepermissions
      x-stackQL-resource: permissions
      x-stackQL-method: updatepermissions
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: repo_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  object_id:
                    type: string
                  object_type:
                    type: string
                  access_control_list:
                    type: array
                    items:
                      type: object
                      properties:
                        user_name:
                          type: string
                        group_name:
                          type: string
                        service_principal_name:
                          type: string
                        display_name:
                          type: string
                        all_permissions:
                          type: array
                          items:
                            type: object
                            properties:
                              permission_level:
                                type: string
                              inherited:
                                type: boolean
                              inherited_from_object:
                                type: array
                                items:
                                  type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_control_list:
                  type: Array of object
              example:
                access_control_list:
                - user_name: string
                  group_name: string
                  service_principal_name: string
                  permission_level: CAN_MANAGE
      description: Updates the permissions on a repo. Repos can inherit permissions
        from their root object.
  /api/2.0/permissions/repos/{repo_id}/permissionLevels:
    get:
      operationId: permission-levels-getpermissionlevels
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/getpermissionlevels
      x-stackQL-resource: permission_levels
      x-stackQL-method: getpermissionlevels
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: repo_id
        required: true
        description: string
        in: path
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_levels:
                    type: array
                    items:
                      type: object
                      properties:
                        permission_level:
                          type: string
                        description:
                          type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.permission_levels
      description: Gets the permission levels that a user can have on an object.
  /api/2.0/repos:
    post:
      operationId: repos-create
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/create
      x-stackQL-resource: repos
      x-stackQL-method: create
      x-stackQL-verb: insert
      x-numReqParams: 0
      parameters: []
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  branch:
                    type: string
                  head_commit_id:
                    type: string
                  id:
                    type: string
                  path:
                    type: string
                  provider:
                    type: string
                  sparse_checkout:
                    type: object
                    properties:
                      patterns:
                        type: array
                        items:
                          type: string
                  url:
                    type: string
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: required
                provider:
                  type: string
                path:
                  type: required
                sparse_checkout:
                  type: object
              example:
                branch: main
                path: /Users/user@company.com/clitest
                provider: gitHub
                sparse_checkout:
                  patterns:
                  - parent-folder/child-folder
                  - src
                  - test
                url: https://github.com/databricks/cli.git
      description: Creates a repo in the workspace and links it to the remote Git
        repo specified. Note that repos created programmatically must be linked to
        a remote Git repo, unlike repos created in the browser.
    get:
      operationId: repos-list
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/list
      x-stackQL-resource: repos
      x-stackQL-method: list
      x-stackQL-verb: select
      x-numReqParams: 0
      parameters:
      - name: path_prefix
        in: query
      - name: next_page_token
        in: query
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_page_token:
                    type: string
                  repos:
                    type: array
                    items:
                      type: object
                      properties:
                        branch:
                          type: string
                        path:
                          type: string
                        provider:
                          type: string
                        sparse_checkout:
                          type: object
                          properties:
                            patterns:
                              type: array
                              items:
                                type: string
                        url:
                          type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      x-stackQL-objectKey: $.repos
      description: Returns repos that the calling user has Manage permissions on.
        Use
  /api/2.0/repos/{repo_id}:
    delete:
      operationId: repos-delete
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/delete
      x-stackQL-resource: repos
      x-stackQL-method: delete
      x-stackQL-verb: delete
      x-numReqParams: 1
      parameters:
      - name: repo_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Deletes the specified repo.
    get:
      operationId: repos-get
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/get
      x-stackQL-resource: repos
      x-stackQL-method: get
      x-stackQL-verb: select
      x-numReqParams: 1
      parameters:
      - name: repo_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  branch:
                    type: string
                  head_commit_id:
                    type: string
                  id:
                    type: string
                  path:
                    type: string
                  provider:
                    type: string
                  url:
                    type: string
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      description: Returns the repo with the given repo ID.
    patch:
      operationId: repos-update
      externalDocs:
        url: https://docs.databricks.com/api/workspace/repos/update
      x-stackQL-resource: repos
      x-stackQL-method: update
      x-stackQL-verb: update
      x-numReqParams: 1
      parameters:
      - name: repo_id
        required: true
        description: int64
        in: path
      responses:
        '200':
          description: Request completed successfully.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Request is invalid or malformed.
        '401':
          description: The request does not have valid authentication credentials
            for the operation.
        '403':
          description: Caller does not have permission to execute the specified operation.
        '404':
          description: Operation was performed on a resource that does not exist.
        '500':
          description: Internal error.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: string
                tag:
                  type: string
                sparse_checkout:
                  type: object
              example:
                branch: main
                sparse_checkout:
                  patterns:
                  - parent-folder/child-folder
                  - src
                  - test
      description: Updates the repo to a different branch or tag, or updates the repo
        to the latest commit on the same branch.
components:
  x-stackQL-resources:
    git_credentials:
      id: databricks_workspace.repos.git_credentials
      name: git_credentials
      title: Git_credentials
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1git-credentials/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1git-credentials/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.credentials
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1git-credentials~1{credential_id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1git-credentials~1{credential_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1git-credentials~1{credential_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/git_credentials/methods/get'
        - $ref: '#/components/x-stackQL-resources/git_credentials/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/git_credentials/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/git_credentials/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/git_credentials/methods/delete'
        exec: []
    permissions:
      id: databricks_workspace.repos.permissions
      name: permissions
      title: Permissions
      methods:
        getpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1repos~1{repo_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        setpermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1repos~1{repo_id}/put'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        updatepermissions:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1repos~1{repo_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/permissions/methods/getpermissions'
        insert: []
        update:
        - $ref: '#/components/x-stackQL-resources/permissions/methods/updatepermissions'
        replace:
        - $ref: '#/components/x-stackQL-resources/permissions/methods/setpermissions'
        delete: []
        exec: []
    permission_levels:
      id: databricks_workspace.repos.permission_levels
      name: permission_levels
      title: Permission_levels
      methods:
        getpermissionlevels:
          operation:
            $ref: '#/paths/~1api~12.0~1permissions~1repos~1{repo_id}~1permissionLevels/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.permission_levels
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/permission_levels/methods/getpermissionlevels'
        insert: []
        update: []
        replace: []
        delete: []
        exec: []
    repos:
      id: databricks_workspace.repos.repos
      name: repos
      title: Repos
      methods:
        create:
          operation:
            $ref: '#/paths/~1api~12.0~1repos/post'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~12.0~1repos/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.repos
        delete:
          operation:
            $ref: '#/paths/~1api~12.0~1repos~1{repo_id}/delete'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1api~12.0~1repos~1{repo_id}/get'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~12.0~1repos~1{repo_id}/patch'
          response:
            mediaType: application/json
            overrideMediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
        - $ref: '#/components/x-stackQL-resources/repos/methods/get'
        - $ref: '#/components/x-stackQL-resources/repos/methods/list'
        insert:
        - $ref: '#/components/x-stackQL-resources/repos/methods/create'
        update:
        - $ref: '#/components/x-stackQL-resources/repos/methods/update'
        replace: []
        delete:
        - $ref: '#/components/x-stackQL-resources/repos/methods/delete'
        exec: []
