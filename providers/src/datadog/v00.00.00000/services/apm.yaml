openapi: 3.0.0
info:
  title: apm API
  description: datadog apm API
  version: '1.0'
paths:
  /api/v2/apm/config/metrics:
    get:
      description: Get the list of configured span-based metrics with their definitions.
      operationId: ListSpansMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all span-based metrics
      tags:
        - Spans Metrics
      x-permission:
        operator: OR
        permissions:
          - apm_read
    post:
      description: >-
        Create a metric based on your ingested spans in your organization.

        Returns the span-based metric object from the request body when the
        request is successful.
      operationId: CreateSpansMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansMetricCreateRequest'
        description: The definition of the new span-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a span-based metric
      tags:
        - Spans Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_generate_metrics
  /api/v2/apm/config/metrics/{metric_id}:
    delete:
      description: Delete a specific span-based metric from your organization.
      operationId: DeleteSpansMetric
      parameters:
        - $ref: '#/components/parameters/SpansMetricIDParameter'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a span-based metric
      tags:
        - Spans Metrics
      x-permission:
        operator: OR
        permissions:
          - apm_generate_metrics
    get:
      description: Get a specific span-based metric from your organization.
      operationId: GetSpansMetric
      parameters:
        - $ref: '#/components/parameters/SpansMetricIDParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a span-based metric
      tags:
        - Spans Metrics
      x-permission:
        operator: OR
        permissions:
          - apm_read
    patch:
      description: >-
        Update a specific span-based metric from your organization.

        Returns the span-based metric object from the request body when the
        request is successful.
      operationId: UpdateSpansMetric
      parameters:
        - $ref: '#/components/parameters/SpansMetricIDParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansMetricUpdateRequest'
        description: New definition of the span-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a span-based metric
      tags:
        - Spans Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_generate_metrics
  /api/v2/apm/config/retention-filters:
    get:
      description: Get the list of APM retention filters.
      operationId: ListApmRetentionFilters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFiltersResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all APM retention filters
      tags:
        - APM Retention Filters
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_read
          - apm_pipelines_read
    post:
      description: >-
        Create a retention filter to index spans in your organization.

        Returns the retention filter definition when the request is successful.


        Default filters with types spans-errors-sampling-processor and
        spans-appsec-sampling-processor cannot be created.
      operationId: CreateApmRetentionFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionFilterCreateRequest'
        description: The definition of the new retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterCreateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a retention filter
      tags:
        - APM Retention Filters
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
  /api/v2/apm/config/retention-filters-execution-order:
    put:
      description: Re-order the execution order of retention filters.
      operationId: ReorderApmRetentionFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderRetentionFiltersRequest'
        description: The list of retention filters in the new order.
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Re-order retention filters
      tags:
        - APM Retention Filters
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
  /api/v2/apm/config/retention-filters/{filter_id}:
    delete:
      description: >-
        Delete a specific retention filter from your organization.


        Default filters with types spans-errors-sampling-processor and
        spans-appsec-sampling-processor cannot be deleted.
      operationId: DeleteApmRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RetentionFilterIdParam'
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a retention filter
      tags:
        - APM Retention Filters
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
    get:
      description: Get an APM retention filter.
      operationId: GetApmRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RetentionFilterIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a given APM retention filter
      tags:
        - APM Retention Filters
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_read
          - apm_pipelines_read
    put:
      description: >-
        Update a retention filter from your organization.


        Default filters (filters with types spans-errors-sampling-processor and
        spans-appsec-sampling-processor) cannot be renamed or removed.
      operationId: UpdateApmRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RetentionFilterIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionFilterUpdateRequest'
        description: The updated definition of the retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a retention filter
      tags:
        - APM Retention Filters
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
  /api/v2/scorecard/outcomes:
    get:
      description: Fetches all rule outcomes.
      operationId: ListScorecardOutcomes
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - description: Include related rule details in the response.
          in: query
          name: include
          required: false
          schema:
            example: rule
            type: string
        - description: Return only specified values in the outcome attributes.
          in: query
          name: fields[outcome]
          required: false
          schema:
            example: state, service_name
            type: string
        - description: Return only specified values in the included rule details.
          in: query
          name: fields[rule]
          required: false
          schema:
            example: name
            type: string
        - description: Filter the outcomes on a specific service name.
          in: query
          name: filter[outcome][service_name]
          required: false
          schema:
            example: web-store
            type: string
        - description: Filter the outcomes by a specific state.
          in: query
          name: filter[outcome][state]
          required: false
          schema:
            example: fail
            type: string
        - description: Filter outcomes on whether a rule is enabled/disabled.
          in: query
          name: filter[rule][enabled]
          required: false
          schema:
            example: true
            type: boolean
        - description: Filter outcomes based on rule ID.
          in: query
          name: filter[rule][id]
          required: false
          schema:
            example: f4485c79-0762-449c-96cf-c31e54a659f6
            type: string
        - description: Filter outcomes based on rule name.
          in: query
          name: filter[rule][name]
          required: false
          schema:
            example: SLOs Defined
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutcomesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_read
      summary: List all rule outcomes
      tags:
        - Service Scorecards
      x-pagination:
        limitParam: page[size]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    post:
      description: Updates multiple scorecard rule outcomes in a single batched request.
      operationId: UpdateScorecardOutcomesAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutcomesAsyncRequest'
        description: Set of scorecard outcomes.
        required: true
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Update Scorecard outcomes asynchronously
      tags:
        - Service Scorecards
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/scorecard/outcomes/batch:
    post:
      description: Sets multiple service-rule outcomes in a single batched request.
      operationId: CreateScorecardOutcomesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutcomesBatchRequest'
        description: Set of scorecard outcomes.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutcomesBatchResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Create outcomes batch
      tags:
        - Service Scorecards
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/scorecard/rules:
    get:
      description: Fetch all rules.
      operationId: ListScorecardRules
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - description: Include related scorecard details in the response.
          in: query
          name: include
          required: false
          schema:
            example: scorecard
            type: string
        - description: Filter the rules on a rule ID.
          in: query
          name: filter[rule][id]
          required: false
          schema:
            example: 37d2f990-c885-4972-949b-8b798213a166
            type: string
        - description: Filter for enabled rules only.
          in: query
          name: filter[rule][enabled]
          required: false
          schema:
            example: true
            type: boolean
        - description: Filter for custom rules only.
          in: query
          name: filter[rule][custom]
          required: false
          schema:
            example: true
            type: boolean
        - description: Filter rules on the rule name.
          in: query
          name: filter[rule][name]
          required: false
          schema:
            example: Code Repos Defined
            type: string
        - description: Filter rules on the rule description.
          in: query
          name: filter[rule][description]
          required: false
          schema:
            example: Identifying
            type: string
        - description: Return only specific fields in the response for rule attributes.
          in: query
          name: fields[rule]
          required: false
          schema:
            example: name, description
            type: string
        - description: >-
            Return only specific fields in the included response for scorecard
            attributes.
          in: query
          name: fields[scorecard]
          required: false
          schema:
            example: name
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_read
      summary: List all rules
      tags:
        - Service Scorecards
      x-pagination:
        limitParam: page[size]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    post:
      description: Creates a new rule.
      operationId: CreateScorecardRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRuleRequest'
        description: Rule attributes.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRuleResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Create a new rule
      tags:
        - Service Scorecards
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/scorecard/rules/{rule_id}:
    delete:
      description: Deletes a single rule.
      operationId: DeleteScorecardRule
      parameters:
        - $ref: '#/components/parameters/RuleId'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Delete a rule
      tags:
        - Service Scorecards
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    put:
      description: Updates an existing rule.
      operationId: UpdateScorecardRule
      parameters:
        - $ref: '#/components/parameters/RuleId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleRequest'
        description: Rule attributes.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleResponse'
          description: Rule updated successfully
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Update an existing rule
      tags:
        - Service Scorecards
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
components:
  schemas:
    SpansMetricsResponse:
      description: All the available span-based metric objects.
      properties:
        data:
          description: A list of span-based metric objects.
          items:
            $ref: '#/components/schemas/SpansMetricResponseData'
          type: array
      type: object
    SpansMetricCreateRequest:
      description: The new span-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricCreateData'
      required:
        - data
      type: object
    SpansMetricResponse:
      description: The span-based metric object.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricResponseData'
      type: object
    SpansMetricUpdateRequest:
      description: The new span-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricUpdateData'
      required:
        - data
      type: object
    RetentionFiltersResponse:
      description: An ordered list of retention filters.
      properties:
        data:
          description: A list of retention filters objects.
          items:
            $ref: '#/components/schemas/RetentionFilterAll'
          type: array
      required:
        - data
      type: object
    RetentionFilterCreateRequest:
      description: The body of the retention filter to be created.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterCreateData'
      required:
        - data
      type: object
    RetentionFilterCreateResponse:
      description: The retention filters definition.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilter'
      type: object
    ReorderRetentionFiltersRequest:
      description: A list of retention filters to reorder.
      properties:
        data:
          description: A list of retention filters objects.
          items:
            $ref: '#/components/schemas/RetentionFilterWithoutAttributes'
          type: array
      required:
        - data
      type: object
    RetentionFilterResponse:
      description: The retention filters definition.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterAll'
      type: object
    RetentionFilterUpdateRequest:
      description: The body of the retention filter to be updated.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterUpdateData'
      required:
        - data
      type: object
    OutcomesResponse:
      description: Scorecard outcomes - the result of a rule for a service.
      properties:
        data:
          $ref: '#/components/schemas/OutcomesResponseData'
        included:
          $ref: '#/components/schemas/OutcomesResponseIncluded'
        links:
          $ref: '#/components/schemas/OutcomesResponseLinks'
      type: object
    UpdateOutcomesAsyncRequest:
      description: Scorecard outcomes batch request.
      properties:
        data:
          $ref: '#/components/schemas/UpdateOutcomesAsyncRequestData'
      type: object
    OutcomesBatchRequest:
      description: Scorecard outcomes batch request.
      properties:
        data:
          $ref: '#/components/schemas/OutcomesBatchRequestData'
      type: object
    OutcomesBatchResponse:
      description: Scorecard outcomes batch response.
      properties:
        data:
          $ref: '#/components/schemas/OutcomesBatchResponseData'
        meta:
          $ref: '#/components/schemas/OutcomesBatchResponseMeta'
      required:
        - data
        - meta
      type: object
    ListRulesResponse:
      description: Scorecard rules response.
      properties:
        data:
          $ref: '#/components/schemas/ListRulesResponseData'
        links:
          $ref: '#/components/schemas/ListRulesResponseLinks'
      type: object
    CreateRuleRequest:
      description: Scorecard create rule request.
      properties:
        data:
          $ref: '#/components/schemas/CreateRuleRequestData'
      type: object
    CreateRuleResponse:
      description: Created rule in response.
      properties:
        data:
          $ref: '#/components/schemas/CreateRuleResponseData'
      type: object
    UpdateRuleRequest:
      description: Request to update a scorecard rule.
      properties:
        data:
          $ref: '#/components/schemas/UpdateRuleRequestData'
      type: object
    UpdateRuleResponse:
      description: The response from a rule update request.
      properties:
        data:
          $ref: '#/components/schemas/UpdateRuleResponseData'
      type: object
    SpansMetricResponseData:
      description: The span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricResponseAttributes'
        id:
          $ref: '#/components/schemas/SpansMetricID'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    SpansMetricCreateData:
      description: The new span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricCreateAttributes'
        id:
          $ref: '#/components/schemas/SpansMetricID'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      required:
        - id
        - type
        - attributes
      type: object
    SpansMetricUpdateData:
      description: The new span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricUpdateAttributes'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      required:
        - type
        - attributes
      type: object
    RetentionFilterAll:
      description: The definition of the retention filter.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterAllAttributes'
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - type
        - attributes
      type: object
    RetentionFilterCreateData:
      description: The body of the retention filter to be created.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterCreateAttributes'
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - attributes
        - type
      type: object
    RetentionFilter:
      description: The definition of the retention filter.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterAttributes'
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - type
        - attributes
      type: object
    RetentionFilterWithoutAttributes:
      description: The retention filter object .
      properties:
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - type
      type: object
    RetentionFilterUpdateData:
      description: The body of the retention filter to be updated.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterUpdateAttributes'
        id:
          description: The ID of the retention filter.
          example: retention-filter-id
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - attributes
        - type
      type: object
    OutcomesResponseData:
      description: List of rule outcomes.
      items:
        $ref: '#/components/schemas/OutcomesResponseDataItem'
      type: array
    OutcomesResponseIncluded:
      description: Array of rule details.
      items:
        $ref: '#/components/schemas/OutcomesResponseIncludedItem'
      type: array
    OutcomesResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: Link for the next set of results.
          example: >-
            /api/v2/scorecard/outcomes?include=rule&page%5Blimit%5D=100&page%5Boffset%5D=100
          type: string
      type: object
    UpdateOutcomesAsyncRequestData:
      description: Scorecard outcomes batch request data.
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateOutcomesAsyncAttributes'
        type:
          $ref: '#/components/schemas/UpdateOutcomesAsyncType'
      type: object
    OutcomesBatchRequestData:
      description: Scorecard outcomes batch request data.
      properties:
        attributes:
          $ref: '#/components/schemas/OutcomesBatchAttributes'
        type:
          $ref: '#/components/schemas/OutcomesBatchType'
      type: object
    OutcomesBatchResponseData:
      description: List of rule outcomes which were affected during the bulk operation.
      items:
        $ref: '#/components/schemas/OutcomesResponseDataItem'
      type: array
    OutcomesBatchResponseMeta:
      description: Metadata pertaining to the bulk operation.
      properties:
        total_received:
          description: >-
            Total number of scorecard results received during the bulk
            operation.
          format: int64
          type: integer
        total_updated:
          description: >-
            Total number of scorecard results modified during the bulk
            operation.
          format: int64
          type: integer
      type: object
    ListRulesResponseData:
      description: Array of rule details.
      items:
        $ref: '#/components/schemas/ListRulesResponseDataItem'
      type: array
    ListRulesResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: Link for the next set of rules.
          example: >-
            /api/v2/scorecard/rules?page%5Blimit%5D=2&page%5Boffset%5D=2&page%5Bsize%5D=2
          type: string
      type: object
    CreateRuleRequestData:
      description: Scorecard create rule request data.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    CreateRuleResponseData:
      description: Create rule response data.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        relationships:
          $ref: '#/components/schemas/RelationshipToRule'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    UpdateRuleRequestData:
      description: Data for the request to update a scorecard rule.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    UpdateRuleResponseData:
      description: The data for a rule update response.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        relationships:
          $ref: '#/components/schemas/RelationshipToRule'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    SpansMetricResponseAttributes:
      description: The object describing a Datadog span-based metric.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricResponseCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricResponseGroupBy'
          type: array
      type: object
    SpansMetricID:
      description: The name of the span-based metric.
      example: my.metric
      type: string
    SpansMetricType:
      default: spans_metrics
      description: The type of resource. The value should always be spans_metrics.
      enum:
        - spans_metrics
      example: spans_metrics
      type: string
      x-enum-varnames:
        - SPANS_METRICS
    SpansMetricCreateAttributes:
      description: The object describing the Datadog span-based metric to create.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricGroupBy'
          type: array
      required:
        - compute
      type: object
    SpansMetricUpdateAttributes:
      description: The span-based metric properties that will be updated.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricUpdateCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricGroupBy'
          type: array
      type: object
    RetentionFilterAllAttributes:
      description: The attributes of the retention filter.
      properties:
        created_at:
          description: The creation timestamp of the retention filter.
          format: int64
          type: integer
        created_by:
          description: The creator of the retention filter.
          type: string
        editable:
          description: Shows whether the filter can be edited.
          example: true
          type: boolean
        enabled:
          description: The status of the retention filter (Enabled/Disabled).
          example: true
          type: boolean
        execution_order:
          description: The execution order of the retention filter.
          format: int64
          type: integer
        filter:
          $ref: '#/components/schemas/SpansFilter'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterAllType'
        modified_at:
          description: The modification timestamp of the retention filter.
          format: int64
          type: integer
        modified_by:
          description: The modifier of the retention filter.
          type: string
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      type: object
    ApmRetentionFilterType:
      default: apm_retention_filter
      description: The type of the resource.
      enum:
        - apm_retention_filter
      example: apm_retention_filter
      type: string
      x-enum-varnames:
        - apm_retention_filter
    RetentionFilterCreateAttributes:
      description: >-
        The object describing the configuration of the retention filter to
        create/update.
      properties:
        enabled:
          description: Enable/Disable the retention filter.
          example: true
          type: boolean
        filter:
          $ref: '#/components/schemas/SpansFilterCreate'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterType'
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      required:
        - name
        - filter
        - enabled
        - filter_type
        - rate
      type: object
    RetentionFilterAttributes:
      description: The attributes of the retention filter.
      properties:
        created_at:
          description: The creation timestamp of the retention filter.
          format: int64
          type: integer
        created_by:
          description: The creator of the retention filter.
          type: string
        editable:
          description: Shows whether the filter can be edited.
          example: true
          type: boolean
        enabled:
          description: The status of the retention filter (Enabled/Disabled).
          example: true
          type: boolean
        execution_order:
          description: The execution order of the retention filter.
          format: int64
          type: integer
        filter:
          $ref: '#/components/schemas/SpansFilter'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterType'
        modified_at:
          description: The modification timestamp of the retention filter.
          format: int64
          type: integer
        modified_by:
          description: The modifier of the retention filter.
          type: string
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      type: object
    RetentionFilterUpdateAttributes:
      description: >-
        The object describing the configuration of the retention filter to
        create/update.
      properties:
        enabled:
          description: Enable/Disable the retention filter.
          example: true
          type: boolean
        filter:
          $ref: '#/components/schemas/SpansFilterCreate'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterAllType'
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      required:
        - name
        - filter
        - enabled
        - filter_type
        - rate
      type: object
    OutcomesResponseDataItem:
      description: A single rule outcome.
      properties:
        attributes:
          $ref: '#/components/schemas/OutcomesBatchResponseAttributes'
        id:
          description: The unique ID for a rule outcome.
          type: string
        relationships:
          $ref: '#/components/schemas/RuleOutcomeRelationships'
        type:
          $ref: '#/components/schemas/OutcomeType'
      type: object
    OutcomesResponseIncludedItem:
      description: Attributes of the included rule.
      properties:
        attributes:
          $ref: '#/components/schemas/OutcomesResponseIncludedRuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    UpdateOutcomesAsyncAttributes:
      description: The JSON:API attributes for a batched set of scorecard outcomes.
      properties:
        results:
          description: Set of scorecard outcomes to update asynchronously.
          items:
            $ref: '#/components/schemas/UpdateOutcomesAsyncRequestItem'
          type: array
      type: object
    UpdateOutcomesAsyncType:
      default: batched-outcome
      description: The JSON:API type for scorecard outcomes.
      enum:
        - batched-outcome
      example: batched-outcome
      type: string
      x-enum-varnames:
        - BATCHED_OUTCOME
    OutcomesBatchAttributes:
      description: The JSON:API attributes for a batched set of scorecard outcomes.
      properties:
        results:
          description: Set of scorecard outcomes to update.
          items:
            $ref: '#/components/schemas/OutcomesBatchRequestItem'
          type: array
      type: object
    OutcomesBatchType:
      default: batched-outcome
      description: The JSON:API type for scorecard outcomes.
      enum:
        - batched-outcome
      example: batched-outcome
      type: string
      x-enum-varnames:
        - BATCHED_OUTCOME
    ListRulesResponseDataItem:
      description: Rule details.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        relationships:
          $ref: '#/components/schemas/RelationshipToRule'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    RuleAttributes:
      description: Details of a rule.
      properties:
        category:
          deprecated: true
          description: The scorecard name to which this rule must belong.
          type: string
        created_at:
          description: Creation time of the rule outcome.
          format: date-time
          type: string
        custom:
          description: Defines if the rule is a custom rule.
          type: boolean
        description:
          description: Explanation of the rule.
          type: string
        enabled:
          description: If enabled, the rule is calculated as part of the score.
          example: true
          type: boolean
        level:
          $ref: '#/components/schemas/RuleLevel'
        modified_at:
          description: Time of the last rule outcome modification.
          format: date-time
          type: string
        name:
          description: Name of the rule.
          example: Team Defined
          type: string
        owner:
          description: Owner of the rule.
          type: string
        scorecard_name:
          description: The scorecard name to which this rule must belong.
          example: Deployments automated via Deployment Trains
          type: string
      type: object
    RuleType:
      default: rule
      description: The JSON:API type for scorecard rules.
      enum:
        - rule
      example: rule
      type: string
      x-enum-varnames:
        - RULE
    RuleId:
      description: The unique ID for a scorecard rule.
      example: q8MQxk8TCqrHnWkx
      type: string
    RelationshipToRule:
      description: Scorecard create rule response relationship.
      properties:
        scorecard:
          $ref: '#/components/schemas/RelationshipToRuleData'
      type: object
    SpansMetricResponseCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/SpansMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the span-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      type: object
    SpansMetricResponseFilter:
      description: >-
        The span-based metric filter. Spans matching this filter will be
        aggregated in this metric.
      properties:
        query:
          description: The search query - following the span search syntax.
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    SpansMetricResponseGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the span-based metric will be aggregated over.
          example: resource_name
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: resource_name
          type: string
      type: object
    SpansMetricCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/SpansMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the span-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      required:
        - aggregation_type
      type: object
    SpansMetricFilter:
      description: >-
        The span-based metric filter. Spans matching this filter will be
        aggregated in this metric.
      properties:
        query:
          default: '*'
          description: The search query - following the span search syntax.
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    SpansMetricGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the span-based metric will be aggregated over.
          example: resource_name
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: resource_name
          type: string
      required:
        - path
      type: object
    SpansMetricUpdateCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
      type: object
    SpansFilter:
      description: The spans filter used to index spans.
      properties:
        query:
          description: >-
            The search query - following the [span search
            syntax](https://docs.datadoghq.com/tracing/trace_explorer/query_syntax/).
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    RetentionFilterAllType:
      default: spans-sampling-processor
      description: The type of retention filter.
      enum:
        - spans-sampling-processor
        - spans-errors-sampling-processor
        - spans-appsec-sampling-processor
      example: spans-sampling-processor
      type: string
      x-enum-varnames:
        - SPANS_SAMPLING_PROCESSOR
        - SPANS_ERRORS_SAMPLING_PROCESSOR
        - SPANS_APPSEC_SAMPLING_PROCESSOR
    SpansFilterCreate:
      description: The spans filter. Spans matching this filter will be indexed and stored.
      properties:
        query:
          description: >-
            The search query - following the [span search
            syntax](https://docs.datadoghq.com/tracing/trace_explorer/query_syntax/).
          example: '@http.status_code:200 service:my-service'
          type: string
      required:
        - query
      type: object
    RetentionFilterType:
      default: spans-sampling-processor
      description: >-
        The type of retention filter. The value should always be
        spans-sampling-processor.
      enum:
        - spans-sampling-processor
      example: spans-sampling-processor
      type: string
      x-enum-varnames:
        - SPANS_SAMPLING_PROCESSOR
    OutcomesBatchResponseAttributes:
      description: The JSON:API attributes for an outcome.
      properties:
        created_at:
          description: Creation time of the rule outcome.
          format: date-time
          type: string
        modified_at:
          description: Time of last rule outcome modification.
          format: date-time
          type: string
        remarks:
          description: >-
            Any remarks regarding the scorecard rule's evaluation, and supports
            HTML hyperlinks.
          example: 'See: <a href="https://app.datadoghq.com/services">Services</a>'
          type: string
        service_name:
          description: The unique name for a service in the catalog.
          example: my-service
          type: string
        state:
          $ref: '#/components/schemas/State'
      type: object
    RuleOutcomeRelationships:
      description: The JSON:API relationship to a scorecard rule.
      properties:
        rule:
          $ref: '#/components/schemas/RelationshipToOutcome'
      type: object
    OutcomeType:
      default: outcome
      description: The JSON:API type for an outcome.
      enum:
        - outcome
      example: outcome
      type: string
      x-enum-varnames:
        - OUTCOME
    OutcomesResponseIncludedRuleAttributes:
      description: Details of a rule.
      properties:
        name:
          description: Name of the rule.
          example: Team Defined
          type: string
        scorecard_name:
          description: The scorecard name to which this rule must belong.
          example: Observability Best Practices
          type: string
      type: object
    UpdateOutcomesAsyncRequestItem:
      description: Scorecard outcome for a single entity and rule.
      properties:
        entity_reference:
          $ref: '#/components/schemas/EntityReference'
        remarks:
          description: >-
            Any remarks regarding the scorecard rule's evaluation. Supports HTML
            hyperlinks.
          example: 'See: <a href="https://app.datadoghq.com/services">Services</a>'
          type: string
        rule_id:
          $ref: '#/components/schemas/RuleId'
        state:
          $ref: '#/components/schemas/State'
      required:
        - rule_id
        - entity_reference
        - state
      type: object
    OutcomesBatchRequestItem:
      description: >-
        Scorecard outcome for a specific rule, for a given service within a
        batched update.
      properties:
        remarks:
          description: >-
            Any remarks regarding the scorecard rule's evaluation, and supports
            HTML hyperlinks.
          example: 'See: <a href="https://app.datadoghq.com/services">Services</a>'
          type: string
        rule_id:
          $ref: '#/components/schemas/RuleId'
        service_name:
          description: The unique name for a service in the catalog.
          example: my-service
          type: string
        state:
          $ref: '#/components/schemas/State'
      required:
        - rule_id
        - service_name
        - state
      type: object
    RuleLevel:
      description: The maturity level of the rule (1, 2, or 3).
      example: 2
      format: int32
      maximum: 3
      minimum: 1
      type: integer
    RelationshipToRuleData:
      description: Relationship data for a rule.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToRuleDataObject'
      type: object
    SpansMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    SpansMetricComputeIncludePercentiles:
      description: >-
        Toggle to include or exclude percentile aggregations for distribution
        metrics.

        Only present when the `aggregation_type` is `distribution`.
      example: false
      type: boolean
    State:
      description: The state of the rule evaluation.
      enum:
        - pass
        - fail
        - skip
      example: pass
      type: string
      x-enum-varnames:
        - PASS
        - FAIL
        - SKIP
    RelationshipToOutcome:
      description: The JSON:API relationship to a scorecard outcome.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOutcomeData'
      type: object
    EntityReference:
      description: The unique reference for an IDP entity.
      example: service:my-service
      type: string
    RelationshipToRuleDataObject:
      description: Rule relationship data.
      properties:
        id:
          description: The unique ID for a scorecard.
          example: q8MQxk8TCqrHnWkp
          type: string
        type:
          $ref: '#/components/schemas/ScorecardType'
      type: object
    RelationshipToOutcomeData:
      description: >-
        The JSON:API relationship to an outcome, which returns the related rule
        id.
      properties:
        id:
          $ref: '#/components/schemas/RuleId'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    ScorecardType:
      default: scorecard
      description: The JSON:API type for scorecard.
      enum:
        - scorecard
      example: scorecard
      type: string
      x-enum-varnames:
        - SCORECARD
  responses:
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
  parameters:
    SpansMetricIDParameter:
      description: The name of the span-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    RetentionFilterIdParam:
      description: The ID of the retention filter.
      in: path
      name: filter_id
      required: true
      schema:
        type: string
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: page[size]
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: page[offset]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    RuleId:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
  x-stackQL-resources:
    spans_metrics:
      id: datadog.apm.spans_metrics
      name: spans_metrics
      title: Spans Metrics
      methods:
        list_spans_metrics:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_spans_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1metrics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_spans_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1metrics~1{metric_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_spans_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1metrics~1{metric_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_spans_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1metrics~1{metric_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/spans_metrics/methods/get_spans_metric
          - $ref: >-
              #/components/x-stackQL-resources/spans_metrics/methods/list_spans_metrics
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/spans_metrics/methods/create_spans_metric
        update:
          - $ref: >-
              #/components/x-stackQL-resources/spans_metrics/methods/update_spans_metric
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/spans_metrics/methods/delete_spans_metric
        replace: []
    retention_filters:
      id: datadog.apm.retention_filters
      name: retention_filters
      title: Retention Filters
      methods:
        list_apm_retention_filters:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1retention-filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_apm_retention_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1retention-filters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reorder_apm_retention_filters:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1apm~1config~1retention-filters-execution-order/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_apm_retention_filter:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1apm~1config~1retention-filters~1{filter_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_apm_retention_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1retention-filters~1{filter_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_apm_retention_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1apm~1config~1retention-filters~1{filter_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/retention_filters/methods/get_apm_retention_filter
          - $ref: >-
              #/components/x-stackQL-resources/retention_filters/methods/list_apm_retention_filters
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/retention_filters/methods/create_apm_retention_filter
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/retention_filters/methods/delete_apm_retention_filter
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/retention_filters/methods/update_apm_retention_filter
    scorecard_outcomes:
      id: datadog.apm.scorecard_outcomes
      name: scorecard_outcomes
      title: Scorecard Outcomes
      methods:
        list_scorecard_outcomes:
          operation:
            $ref: '#/paths/~1api~1v2~1scorecard~1outcomes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_scorecard_outcomes_async:
          operation:
            $ref: '#/paths/~1api~1v2~1scorecard~1outcomes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        create_scorecard_outcomes_batch:
          operation:
            $ref: '#/paths/~1api~1v2~1scorecard~1outcomes~1batch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/scorecard_outcomes/methods/list_scorecard_outcomes
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/scorecard_outcomes/methods/create_scorecard_outcomes_batch
        update: []
        delete: []
        replace: []
    scorecard_rules:
      id: datadog.apm.scorecard_rules
      name: scorecard_rules
      title: Scorecard Rules
      methods:
        list_scorecard_rules:
          operation:
            $ref: '#/paths/~1api~1v2~1scorecard~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_scorecard_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1scorecard~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_scorecard_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1scorecard~1rules~1{rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_scorecard_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1scorecard~1rules~1{rule_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/scorecard_rules/methods/list_scorecard_rules
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/scorecard_rules/methods/create_scorecard_rule
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/scorecard_rules/methods/delete_scorecard_rule
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/scorecard_rules/methods/update_scorecard_rule
servers:
  - url: >-
      https://{region:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/
    variables:
      region:
        default: datadoghq.com
