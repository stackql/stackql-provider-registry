openapi: 3.0.0
servers:
  - url: 'https://api.datadoghq.com'
    description: Datadog API
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: 'https://www.datadoghq.com/support/'
  version: '1.0'
  title: Datadog API V2 Collection - teams
  description: View and manage teams within Datadog.
security:
  - apiKeyAuth: []
    appKeyAuth: []
tags:
  - description: 'Manage configuration of [APM retention filters](https://app.datadoghq.com/apm/traces/retention-filters) for your organization. You need an API and application key with Admin rights to interact with this endpoint.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/'
    name: APM Retention Filters
  - description: Search your Audit Logs events over HTTP.
    name: Audit
  - description: |-
      [AuthN Mappings API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)
      is used to automatically map group of users to roles in Datadog using attributes
      sent from Identity Providers.
    name: AuthN Mappings
  - description: Search or aggregate your CI Visibility pipeline events and send them to your Datadog site over HTTP.
    name: CI Visibility Pipelines
  - description: Search or aggregate your CI Visibility test events over HTTP.
    name: CI Visibility Tests
  - description: Workload activity security rules for generating events using the Datadog security Agent.
    name: Cloud Workload Security
  - description: Configure your Datadog Cloudflare integration directly through the Datadog API.
    name: Cloudflare Integration
  - description: Configure your Datadog Confluent Cloud integration directly through the Datadog API.
    name: Confluent Cloud
  - description: The Container Images API allows you to query Container Image data for your organization.
    name: Container Images
  - description: The Containers API allows you to query container data for your organization.
    name: Containers
  - description: Send events for DORA Metrics to measure and improve software delivery.
    name: DORA Metrics
  - description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
    name: Dashboard Lists
  - description: |-
      **Note**: Downtime V2 is currently in private beta. To request access, contact [Datadog support](https://docs.datadoghq.com/help/).

      [Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives
      you greater control over monitor notifications by allowing you to globally exclude
      scopes from alerting. Downtime settings, which can be scheduled with start and
      end times, prevent all alerting related to specified Datadog tags.
    name: Downtimes
  - description: |-
      The events service allows you to programmatically post events to the event stream
      and fetch events from the event stream. Events are limited to 4000 characters.
      If an event is sent out with a message containing more than 4000 characters, only the
      first 4000 characters are displayed.
    name: Events
  - description: Configure your Datadog Fastly integration directly through the Datadog API.
    name: Fastly Integration
  - description: |-
      Configure your Datadog-Google Cloud Platform (GCP) integration directly
      through the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform).
    externalDocs:
      url: 'https://docs.datadoghq.com/integrations/google_cloud_platform'
    name: GCP Integration
  - description: |-
      The IP allowlist API is used to manage the IP addresses that
      can access the Datadog API and web UI. It does not block
      access to intake APIs or public dashboards.

      This is an enterprise-only feature. Request access by
      contacting Datadog support.
    name: IP Allowlist
  - description: 'Create, update, delete, and retrieve services which can be associated with incidents.'
    name: Incident Services
  - description: 'The Incident Teams endpoints are deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/) to create, update, delete, and retrieve teams which can be associated with incidents.'
    name: Incident Teams
  - description: Manage incident response.
    name: Incidents
  - description: |-
      Manage your Datadog API and application keys. You need an API key and
      an application key for a user with the required permissions to interact
      with these endpoints. The full list of API and application keys can be
      seen on your [Datadog API page](https://app.datadoghq.com/account/settings#api).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/api-app-keys/'
    name: Key Management
  - description: Search your logs and send them to your Datadog platform over HTTP.
    name: Logs
  - description: |-
      Archives forward all the logs ingested to a cloud storage system.

      See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)
      for a list of the archives currently configured in web UI.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/archives/'
    name: Logs Archives
  - description: 'Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/logs_to_metrics/'
    name: Logs Metrics
  - description: |-
      The metrics endpoint allows you to:

      - Post metrics data so it can be graphed on Datadogâ€™s dashboards
      - Query metrics from any time period (timeseries and scalar)
      - Modify tag configurations for metrics
      - View tags and volumes for metrics

      **Note**: A graph can only contain a set number of points
      and as the timeframe over which a metric is viewed increases,
      aggregation between points occurs to stay below that set number.

      The Post, Patch, and Delete `manage_tags` API methods can only be performed by
      a user who has the `Manage Tags for Metrics` permission.
    name: Metrics
  - description: |-
      [Monitors](https://docs.datadoghq.com/monitors) allow you to watch a metric or check that you care about and
      notifies your team when a defined threshold has exceeded.

      For more information, see [Creating Monitors](https://docs.datadoghq.com/monitors/create/types/) and
      [Tag Policies](https://docs.datadoghq.com/monitors/settings/).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/monitors/create/types/'
    name: Monitors
  - description: Configure your Datadog Okta integration directly through the Datadog API.
    name: Okta Integration
  - description: |-
      Configure your [Datadog Opsgenie integration](https://docs.datadoghq.com/integrations/opsgenie/)
      directly through the Datadog API.
    externalDocs:
      url: 'https://docs.datadoghq.com/api/latest/opsgenie-integration'
    name: Opsgenie Integration
  - description: 'Create, edit, and manage your organizations. Read more about [multi-org accounts](https://docs.datadoghq.com/account_management/multi_organization).'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/multi_organization'
    name: Organizations
  - description: |-
      The powerpack endpoints allow you to:

      - Get a powerpack
      - Create a powerpack
      - Delete a powerpack
      - Get a list of all powerpacks

      The Patch and Delete API methods can only be performed on a powerpack by
      a user who has the powerpack create permission for that specific powerpack.
    name: Powerpack
  - description: The processes API allows you to query processes data for your organization.
    name: Processes
  - description: Search or aggregate your RUM events over HTTP.
    name: RUM
  - description: |-
      A restriction policy defines the access control rules for a resource, mapping a set of relations
      (such as editor and viewer) to a set of allowed principals (such as roles, teams, or users).
      The restriction policy determines who is authorized to perform what actions on the resource.
    name: Restriction Policies
  - description: |-
      The Roles API is used to create and manage Datadog roles, what
      [global permissions](https://docs.datadoghq.com/account_management/rbac/)
      they grant, and which users belong to them.

      Permissions related to specific account assets can be granted to roles
      in the Datadog application without using this API. For example, granting
      read access on a specific log index to a role can be done in Datadog from the
      [Pipelines page](https://app.datadoghq.com/logs/pipelines).
    name: Roles
  - description: |-
      Detection rules for generating signals and listing of generated
      signals.
    name: Security Monitoring
  - description: 'Create, update, delete, and retrieve sensitive data scanner groups and rules.'
    name: Sensitive Data Scanner
  - description: 'Create, edit, and disable service accounts.'
    name: Service Accounts
  - description: 'API to create, update, retrieve and delete service definitions.'
    externalDocs:
      url: 'https://docs.datadoghq.com/tracing/service_catalog/'
    name: Service Definition
  - description: |-
      API to create, update scorecard rules and outcomes.

      This feature is currently in BETA. If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    name: Service Scorecards
  - description: Search and aggregate your spans from your Datadog platform over HTTP.
    name: Spans
  - description: 'Manage configuration of [span-based metrics](https://app.datadoghq.com/apm/traces/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/metrics/metrics_namespace/'
    name: Spans Metrics
  - description: |-
      Datadog Synthetics uses simulated user requests and browser rendering to help you ensure uptime,
      identify regional issues, and track your application performance. Datadog Synthetics tests come in
      two different flavors, [API tests](https://docs.datadoghq.com/synthetics/api_tests/)
      and [browser tests](https://docs.datadoghq.com/synthetics/browser_tests). You can use Datadogâ€™s API to
      manage both test types programmatically.

      For more information about Synthetics, see the [Synthetics overview](https://docs.datadoghq.com/synthetics/).
    name: Synthetics
  - description: View and manage teams within Datadog.
    name: Teams
  - description: |-
      The usage metering API allows you to get hourly, daily, and
      monthly usage across multiple facets of Datadog.
      This API is available to all Pro and Enterprise customers.
      Usage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).

      **Note**: Usage data is delayed by up to 72 hours from when it was incurred.
      It is retained for 15 months.

      You can retrieve up to 24 hours of hourly usage data for multiple organizations,
      and up to two months of hourly usage data for a single organization in one request.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/billing/usage_details/'
    name: Usage Metering
  - description: 'Create, edit, and disable users.'
    externalDocs:
      url: 'https://docs.datadoghq.com/account_management/users'
    name: Users
components:
  schemas:
    ListTeamsSort:
      description: Specifies the order of the returned teams
      enum:
        - name
        - '-name'
        - user_count
        - '-user_count'
      type: string
      x-enum-varnames:
        - NAME
        - _NAME
        - USER_COUNT
        - _USER_COUNT
    ListTeamsInclude:
      description: Included related resources optionally requested.
      enum:
        - team_links
        - user_team_permissions
      type: string
      x-enum-varnames:
        - TEAM_LINKS
        - USER_TEAM_PERMISSIONS
    TeamsField:
      description: Supported teams field.
      enum:
        - id
        - name
        - handle
        - summary
        - description
        - avatar
        - banner
        - visible_modules
        - hidden_modules
        - created_at
        - modified_at
        - user_count
        - link_count
        - team_links
        - user_team_permissions
      type: string
      x-enum-varnames:
        - ID
        - NAME
        - HANDLE
        - SUMMARY
        - DESCRIPTION
        - AVATAR
        - BANNER
        - VISIBLE_MODULES
        - HIDDEN_MODULES
        - CREATED_AT
        - MODIFIED_AT
        - USER_COUNT
        - LINK_COUNT
        - TEAM_LINKS
        - USER_TEAM_PERMISSIONS
    TeamsResponse:
      description: Response with multiple teams
      properties:
        data:
          description: Teams response data
          items:
            $ref: '#/components/schemas/Team'
          type: array
        included:
          description: Resources related to the team
          items:
            $ref: '#/components/schemas/TeamIncluded'
          type: array
        links:
          $ref: '#/components/schemas/TeamsResponseLinks'
        meta:
          $ref: '#/components/schemas/TeamsResponseMeta'
      type: object
    Team:
      description: A team
      properties:
        attributes:
          $ref: '#/components/schemas/TeamAttributes'
        id:
          description: The team's identifier
          example: aeadc05e-98a8-11ec-ac2c-da7ad0900001
          type: string
        relationships:
          $ref: '#/components/schemas/TeamRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - id
        - type
      type: object
    TeamIncluded:
      description: Included resources related to the team
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/TeamLink'
        - $ref: '#/components/schemas/UserTeamPermission'
    TeamsResponseLinks:
      description: Teams response links.
      properties:
        first:
          description: First link.
          type: string
        last:
          description: Last link.
          nullable: true
          type: string
        next:
          description: Next link.
          type: string
        prev:
          description: Previous link.
          nullable: true
          type: string
        self:
          description: Current link.
          type: string
      type: object
    TeamsResponseMeta:
      description: Teams response metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/TeamsResponseMetaPagination'
      type: object
    APIKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - modified_at
        - '-modified_at'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    ApplicationKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    IncidentAttachmentAttachmentType:
      description: The type of the incident attachment attributes.
      enum:
        - link
        - postmortem
      example: link
      type: string
      x-enum-varnames:
        - LINK
        - POSTMORTEM
    IncidentAttachmentRelatedObject:
      description: The object related to an incident attachment.
      enum:
        - users
      type: string
      x-enum-varnames:
        - USERS
    IncidentRelatedObject:
      description: Object related to an incident.
      enum:
        - users
        - attachments
      type: string
      x-enum-varnames:
        - USERS
        - ATTACHMENTS
    IncidentSearchSortOrder:
      description: The ways searched incidents can be sorted.
      enum:
        - created
        - '-created'
      type: string
      x-enum-varnames:
        - CREATED_ASCENDING
        - CREATED_DESCENDING
    ServiceDefinitionSchemaVersions:
      description: Schema versions
      enum:
        - v1
        - v2
        - v2.1
        - v2.2
      type: string
      x-enum-varnames:
        - V1
        - V2
        - V2_1
        - V2_2
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    TeamAttributes:
      description: Team attributes
      properties:
        avatar:
          description: 'Unicode representation of the avatar for the team, limited to a single grapheme'
          example: "\U0001F951"
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        created_at:
          description: Creation date of the team
          format: date-time
          type: string
        description:
          description: Free-form markdown description/content for the team's homepage
          nullable: true
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        link_count:
          description: The number of links belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        modified_at:
          description: Modification date of the team
          format: date-time
          type: string
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        summary:
          description: 'A brief summary of the team, derived from the `description`'
          maxLength: 120
          nullable: true
          type: string
        user_count:
          description: The number of users belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamRelationships:
      description: Resources related to a team
      properties:
        team_links:
          $ref: '#/components/schemas/RelationshipToTeamLinks'
        user_team_permissions:
          $ref: '#/components/schemas/RelationshipToUserTeamPermission'
      type: object
    TeamType:
      default: team
      description: Team type
      enum:
        - team
      example: team
      type: string
      x-enum-varnames:
        - TEAM
    User:
      description: User object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        id:
          description: ID of the user.
          type: string
        relationships:
          $ref: '#/components/schemas/UserResponseRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    TeamLink:
      description: Team link
      properties:
        attributes:
          $ref: '#/components/schemas/TeamLinkAttributes'
        id:
          description: The team link's identifier
          example: b8626d7e-cedd-11eb-abf5-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - attributes
        - id
        - type
      type: object
    UserTeamPermission:
      description: A user's permissions for a given team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamPermissionAttributes'
        id:
          description: The user team permission's identifier
          example: UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
          type: string
        type:
          $ref: '#/components/schemas/UserTeamPermissionType'
      required:
        - id
        - type
      type: object
    TeamsResponseMetaPagination:
      description: Teams response metadata.
      properties:
        first_offset:
          description: The first offset.
          format: int64
          type: integer
        last_offset:
          description: The last offset.
          format: int64
          type: integer
        limit:
          description: Pagination limit.
          format: int64
          type: integer
        next_offset:
          description: The next offset.
          format: int64
          type: integer
        offset:
          description: The offset.
          format: int64
          type: integer
        prev_offset:
          description: The previous offset.
          format: int64
          type: integer
        total:
          description: Total results.
          format: int64
          type: integer
        type:
          description: Offset type.
          type: string
      type: object
    RelationshipToTeamLinks:
      description: Relationship between a team and a team link
      properties:
        data:
          description: Related team links
          items:
            $ref: '#/components/schemas/RelationshipToTeamLinkData'
          type: array
        links:
          $ref: '#/components/schemas/TeamRelationshipsLinks'
      type: object
    RelationshipToUserTeamPermission:
      description: Relationship between a user team permission and a team
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamPermissionData'
        links:
          $ref: '#/components/schemas/TeamRelationshipsLinks'
      type: object
    UserAttributes:
      description: Attributes of user object returned by the API.
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        modified_at:
          description: Time that the user was last modified.
          format: date-time
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        service_account:
          description: Whether the user is a service account.
          type: boolean
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          nullable: true
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    UserResponseRelationships:
      description: Relationships of the user object returned by the API.
      properties:
        org:
          $ref: '#/components/schemas/RelationshipToOrganization'
        other_orgs:
          $ref: '#/components/schemas/RelationshipToOrganizations'
        other_users:
          $ref: '#/components/schemas/RelationshipToUsers'
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    UsersType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    TeamLinkAttributes:
      description: Team link attributes
      properties:
        label:
          description: The link's label
          example: Link label
          maxLength: 256
          type: string
        position:
          description: 'The link''s position, used to sort links for the team'
          format: int32
          maximum: 2147483647
          type: integer
        team_id:
          description: ID of the team the link is associated with
          readOnly: true
          type: string
        url:
          description: The URL for the link
          example: 'https://example.com'
          type: string
      required:
        - label
        - url
      type: object
    TeamLinkType:
      default: team_links
      description: Team link type
      enum:
        - team_links
      example: team_links
      type: string
      x-enum-varnames:
        - TEAM_LINKS
    UserTeamPermissionAttributes:
      description: User team permission attributes
      properties:
        permissions:
          description: Object of team permission actions and boolean values that a logged in user can perform on this team.
          readOnly: true
          type: object
      type: object
    UserTeamPermissionType:
      default: user_team_permissions
      description: User team permission type
      enum:
        - user_team_permissions
      example: user_team_permissions
      type: string
      x-enum-varnames:
        - USER_TEAM_PERMISSIONS
    RelationshipToTeamLinkData:
      description: Relationship between a link and a team
      properties:
        id:
          description: The team link's identifier
          example: f9bb8444-af7f-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - id
        - type
      type: object
    TeamRelationshipsLinks:
      description: Links attributes.
      properties:
        related:
          description: Related link.
          example: /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
          type: string
      type: object
    RelationshipToUserTeamPermissionData:
      description: Related user team permission data
      properties:
        id:
          description: The ID of the user team permission
          example: UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
          type: string
        type:
          $ref: '#/components/schemas/UserTeamPermissionType'
      required:
        - id
        - type
      type: object
    RelationshipToOrganization:
      description: Relationship to an organization.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
        - data
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
        - data
      type: object
    RelationshipToUsers:
      description: Relationship to users.
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToUserData'
          type: array
      required:
        - data
      type: object
    RelationshipToRoles:
      description: Relationship to roles.
      properties:
        data:
          description: An array containing type and the unique identifier of a role.
          items:
            $ref: '#/components/schemas/RelationshipToRoleData'
          type: array
      type: object
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-beef-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - id
        - type
      type: object
    RelationshipToUserData:
      description: Relationship to user object.
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToRoleData:
      description: Relationship to role object.
      properties:
        id:
          description: The unique identifier of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
    TeamCreateRequest:
      description: Request to create a team
      properties:
        data:
          $ref: '#/components/schemas/TeamCreate'
      required:
        - data
      type: object
    TeamResponse:
      description: Response with a team
      properties:
        data:
          $ref: '#/components/schemas/Team'
      type: object
    TeamCreate:
      description: Team create
      properties:
        attributes:
          $ref: '#/components/schemas/TeamCreateAttributes'
        relationships:
          $ref: '#/components/schemas/TeamCreateRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - type
      type: object
    TeamCreateAttributes:
      description: Team creation attributes
      properties:
        avatar:
          description: 'Unicode representation of the avatar for the team, limited to a single grapheme'
          example: "\U0001F951"
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        description:
          description: Free-form markdown description/content for the team's homepage
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamCreateRelationships:
      description: Relationships formed with the team on creation
      properties:
        users:
          $ref: '#/components/schemas/RelationshipToUsers'
      type: object
    TeamUpdateRequest:
      description: Team update request
      properties:
        data:
          $ref: '#/components/schemas/TeamUpdate'
      required:
        - data
      type: object
    TeamUpdate:
      description: Team update request
      properties:
        attributes:
          $ref: '#/components/schemas/TeamUpdateAttributes'
        relationships:
          $ref: '#/components/schemas/TeamUpdateRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - type
      type: object
    TeamUpdateAttributes:
      description: Team update attributes
      properties:
        avatar:
          description: 'Unicode representation of the avatar for the team, limited to a single grapheme'
          example: "\U0001F951"
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        color:
          description: An identifier for the color representing the team
          format: int32
          maximum: 13
          minimum: 0
          type: integer
        description:
          description: Free-form markdown description/content for the team's homepage
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamUpdateRelationships:
      description: Team update relationships
      properties:
        team_links:
          $ref: '#/components/schemas/RelationshipToTeamLinks'
      type: object
    TeamLinksResponse:
      description: Team links response
      properties:
        data:
          description: Team links response data
          items:
            $ref: '#/components/schemas/TeamLink'
          type: array
      type: object
    TeamLinkCreateRequest:
      description: Team link create request
      properties:
        data:
          $ref: '#/components/schemas/TeamLinkCreate'
      required:
        - data
      type: object
    TeamLinkResponse:
      description: Team link response
      properties:
        data:
          $ref: '#/components/schemas/TeamLink'
      type: object
    TeamLinkCreate:
      description: Team link create
      properties:
        attributes:
          $ref: '#/components/schemas/TeamLinkAttributes'
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - attributes
        - type
      type: object
    GetTeamMembershipsSort:
      description: Specifies the order of returned team memberships
      enum:
        - manager_name
        - '-manager_name'
        - name
        - '-name'
        - handle
        - '-handle'
        - email
        - '-email'
      type: string
      x-enum-varnames:
        - MANAGER_NAME
        - _MANAGER_NAME
        - NAME
        - _NAME
        - HANDLE
        - _HANDLE
        - EMAIL
        - _EMAIL
    UserTeamsResponse:
      description: Team memberships response
      properties:
        data:
          description: Team memberships response data
          items:
            $ref: '#/components/schemas/UserTeam'
          type: array
        links:
          $ref: '#/components/schemas/TeamsResponseLinks'
        meta:
          $ref: '#/components/schemas/TeamsResponseMeta'
      type: object
    UserTeam:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        id:
          description: The ID of a user's relationship with a team
          example: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
          type: string
        relationships:
          $ref: '#/components/schemas/UserTeamRelationships'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - id
        - type
      type: object
    UserTeamAttributes:
      description: Team membership attributes
      properties:
        role:
          $ref: '#/components/schemas/UserTeamRole'
      type: object
    UserTeamRelationships:
      description: Relationship between membership and a user
      properties:
        user:
          $ref: '#/components/schemas/RelationshipToUserTeamUser'
      type: object
    UserTeamType:
      default: team_memberships
      description: Team membership type
      enum:
        - team_memberships
      example: team_memberships
      type: string
      x-enum-varnames:
        - TEAM_MEMBERSHIPS
    UserTeamRole:
      description: The user's role within the team
      enum:
        - admin
      nullable: true
      type: string
      x-enum-varnames:
        - ADMIN
    RelationshipToUserTeamUser:
      description: Relationship between team membership and user
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamUserData'
      required:
        - data
      type: object
    RelationshipToUserTeamUserData:
      description: A user's relationship with a team
      properties:
        id:
          description: The ID of the user associated with the team
          example: b8626d7e-cedd-11eb-abf5-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/UserTeamUserType'
      required:
        - id
        - type
      type: object
    UserTeamUserType:
      default: users
      description: User team user type
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    UserTeamRequest:
      description: Team membership request
      properties:
        data:
          $ref: '#/components/schemas/UserTeamCreate'
      required:
        - data
      type: object
    UserTeamResponse:
      description: Team membership response
      properties:
        data:
          $ref: '#/components/schemas/UserTeam'
      type: object
    UserTeamCreate:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        relationships:
          $ref: '#/components/schemas/UserTeamRelationships'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - type
      type: object
    UserTeamUpdateRequest:
      description: Team membership request
      properties:
        data:
          $ref: '#/components/schemas/UserTeamUpdate'
      required:
        - data
      type: object
    UserTeamUpdate:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - type
      type: object
    TeamPermissionSettingsResponse:
      description: Team permission settings response
      properties:
        data:
          description: Team permission settings response data
          items:
            $ref: '#/components/schemas/TeamPermissionSetting'
          type: array
      type: object
    TeamPermissionSetting:
      description: Team permission setting
      properties:
        attributes:
          $ref: '#/components/schemas/TeamPermissionSettingAttributes'
        id:
          description: The team permission setting's identifier
          example: TeamPermission-aeadc05e-98a8-11ec-ac2c-da7ad0900001-edit
          type: string
        type:
          $ref: '#/components/schemas/TeamPermissionSettingType'
      required:
        - id
        - type
      type: object
    TeamPermissionSettingAttributes:
      description: Team permission setting attributes
      properties:
        action:
          $ref: '#/components/schemas/TeamPermissionSettingSerializerAction'
        editable:
          description: Whether or not the permission setting is editable by the current user
          readOnly: true
          type: boolean
        options:
          $ref: '#/components/schemas/TeamPermissionSettingValues'
        title:
          description: The team permission name
          readOnly: true
          type: string
        value:
          $ref: '#/components/schemas/TeamPermissionSettingValue'
      type: object
    TeamPermissionSettingType:
      default: team_permission_settings
      description: Team permission setting type
      enum:
        - team_permission_settings
      example: team_permission_settings
      type: string
      x-enum-varnames:
        - TEAM_PERMISSION_SETTINGS
    TeamPermissionSettingSerializerAction:
      description: The identifier for the action
      enum:
        - manage_membership
        - edit
      readOnly: true
      type: string
      x-enum-varnames:
        - MANAGE_MEMBERSHIP
        - EDIT
    TeamPermissionSettingValues:
      description: Possible values for action
      items:
        $ref: '#/components/schemas/TeamPermissionSettingValue'
      readOnly: true
      type: array
    TeamPermissionSettingValue:
      description: What type of user is allowed to perform the specified action
      enum:
        - admins
        - members
        - organization
        - user_access_manage
        - teams_manage
      type: string
      x-enum-varnames:
        - ADMINS
        - MEMBERS
        - ORGANIZATION
        - USER_ACCESS_MANAGE
        - TEAMS_MANAGE
    TeamPermissionSettingUpdateRequest:
      description: Team permission setting update request
      properties:
        data:
          $ref: '#/components/schemas/TeamPermissionSettingUpdate'
      required:
        - data
      type: object
    TeamPermissionSettingResponse:
      description: Team permission setting response
      properties:
        data:
          $ref: '#/components/schemas/TeamPermissionSetting'
      type: object
    TeamPermissionSettingUpdate:
      description: Team permission setting update
      properties:
        attributes:
          $ref: '#/components/schemas/TeamPermissionSettingUpdateAttributes'
        type:
          $ref: '#/components/schemas/TeamPermissionSettingType'
      required:
        - type
      type: object
    TeamPermissionSettingUpdateAttributes:
      description: Team permission setting update attributes
      properties:
        value:
          $ref: '#/components/schemas/TeamPermissionSettingValue'
      type: object
  parameters:
    APIKeyCategoryParameter:
      description: Filter API keys by category.
      in: query
      name: 'filter[category]'
      required: false
      schema:
        type: string
    APIKeyFilterCreatedAtEndParameter:
      description: Only include API keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterCreatedAtStartParameter:
      description: Only include API keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtEndParameter:
      description: Only include API keys modified on or before the specified date.
      in: query
      name: 'filter[modified_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtStartParameter:
      description: Only include API keys modified on or after the specified date.
      in: query
      name: 'filter[modified_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterParameter:
      description: Filter API keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    APIKeyId:
      description: The ID of the API key.
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
    APIKeyIncludeParameter:
      description: Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`.
      in: query
      name: include
      required: false
      schema:
        example: 'created_by,modified_by'
        type: string
    APIKeyReadConfigReadEnabledParameter:
      description: Filter API keys by remote config read enabled status.
      in: query
      name: 'filter[remote_config_read_enabled]'
      required: false
      schema:
        type: boolean
    APIKeysSortParameter:
      description: |-
        API key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/APIKeysSort'
    ApplicationKeyFilterCreatedAtEndParameter:
      description: Only include application keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterCreatedAtStartParameter:
      description: Only include application keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterParameter:
      description: Filter application keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    ApplicationKeyID:
      description: The ID of the application key.
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
    ApplicationKeyIncludeParameter:
      description: Resource path for related resources to include in the response. Only `owned_by` is supported.
      in: query
      name: include
      required: false
      schema:
        example: owned_by
        type: string
    ApplicationKeysSortParameter:
      description: |-
        Application key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationKeysSort'
    ArchiveID:
      description: The ID of the archive.
      in: path
      name: archive_id
      required: true
      schema:
        type: string
    AuthNMappingID:
      description: The UUID of the AuthN Mapping.
      in: path
      name: authn_mapping_id
      required: true
      schema:
        type: string
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule.
      example: 3b5-v82-ns6
      in: path
      name: agent_rule_id
      required: true
      schema:
        type: string
    ConfluentAccountID:
      description: Confluent Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    ConfluentResourceID:
      description: Confluent Account Resource ID.
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    FastlyAccountID:
      description: Fastly Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    FastlyServiceID:
      description: Fastly Service ID.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    GCPSTSServiceAccountID:
      description: Your GCP STS enabled service account's unique ID.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    IncidentAttachmentFilterQueryParameter:
      description: Specifies which types of attachments are included in the response.
      explode: false
      in: query
      name: 'filter[attachment_type]'
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentAttachmentType'
        type: array
    IncidentAttachmentIncludeQueryParameter:
      description: Specifies which types of related objects are included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentRelatedObject'
        type: array
    IncidentIDPathParameter:
      description: The UUID of the incident.
      in: path
      name: incident_id
      required: true
      schema:
        type: string
    IncidentIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentRelatedObject'
        type: array
    IncidentIntegrationMetadataIDPathParameter:
      description: The UUID of the incident integration metadata.
      in: path
      name: integration_metadata_id
      required: true
      schema:
        type: string
    IncidentSearchIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentSearchQueryQueryParameter:
      description: |-
        Specifies which incidents should be returned. The query can contain any number of incident facets
        joined by `ANDs`, along with multiple values for each of those facets joined by `OR`s. For
        example: `state:active AND severity:(SEV-2 OR SEV-1)`.
      explode: false
      in: query
      name: query
      required: true
      schema:
        type: string
    IncidentSearchSortQueryParameter:
      description: Specifies the order of returned incidents.
      explode: false
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/IncidentSearchSortOrder'
    IncidentServiceIDPathParameter:
      description: The ID of the incident service.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    IncidentServiceIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentServiceSearchQueryParameter:
      description: A search query that filters services by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleServiceName
        type: string
    IncidentTeamIDPathParameter:
      description: The ID of the incident team.
      in: path
      name: team_id
      required: true
      schema:
        type: string
    IncidentTeamIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentTeamSearchQueryParameter:
      description: A search query that filters teams by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleTeamName
        type: string
    IncidentTodoIDPathParameter:
      description: The UUID of the incident todo.
      in: path
      name: todo_id
      required: true
      schema:
        type: string
    MetricID:
      description: The name of the log-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    MetricName:
      description: The name of the metric.
      example: dist.http.endpoint.request
      in: path
      name: metric_name
      required: true
      schema:
        type: string
    OpsgenieServiceIDPathParameter:
      description: The UUID of the service.
      in: path
      name: integration_service_id
      required: true
      schema:
        type: string
    PageNumber:
      description: Specific page number to return.
      in: query
      name: 'page[number]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: 'page[offset]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: 'page[size]'
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    ResourceID:
      description: 'Identifier, formatted as `type:id`. Supported types: `connection`, `dashboard`, `notebook`, `security-rule`, `slo`.'
      example: 'dashboard:abc-def-ghi'
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    RetentionFilterIdParam:
      description: The ID of the retention filter.
      in: path
      name: filter_id
      required: true
      schema:
        type: string
    RoleID:
      description: The unique identifier of the role.
      in: path
      name: role_id
      required: true
      schema:
        type: string
    RuleId:
      description: The ID of the rule/scorecard.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SchemaVersion:
      description: The schema version desired in the response.
      in: query
      name: schema_version
      required: false
      schema:
        $ref: '#/components/schemas/ServiceDefinitionSchemaVersions'
    SecurityFilterID:
      description: The ID of the security filter.
      in: path
      name: security_filter_id
      required: true
      schema:
        type: string
    SecurityMonitoringRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SensitiveDataScannerGroupID:
      description: The ID of a group of rules.
      in: path
      name: group_id
      required: true
      schema:
        type: string
    SensitiveDataScannerRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    ServiceAccountID:
      description: The ID of the service account.
      in: path
      name: service_account_id
      required: true
      schema:
        example: 00000000-0000-1234-0000-000000000000
        type: string
    ServiceName:
      description: The name of the service.
      in: path
      name: service_name
      required: true
      schema:
        example: my-service
        type: string
    SignalID:
      description: The ID of the signal.
      in: path
      name: signal_id
      required: true
      schema:
        type: string
    SpansMetricIDParameter:
      description: The name of the span-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    UserID:
      description: The ID of the user.
      in: path
      name: user_id
      required: true
      schema:
        example: 00000000-0000-9999-0000-000000000000
        type: string
  responses:
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
  securitySchemes:
    AuthZ:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: 'Add, modify, and delete service catalog definitions when those definitions are maintained by Datadog.'
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using the API.
            ci_visibility_read: View CI Visibility.
            create_webhooks: Create webhooks integrations.
            dashboards_public_share: Generate public and authenticated links to share dashboards or embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            events_read: Read Events data.
            incident_notification_settings_write: Configure Incidents Notification settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: 'Create, view, and manage incidents in Datadog.'
            metrics_read: View custom metrics.
            monitors_downtime: Set downtimes to suppress alerts from any monitor in an organization. Mute and unmute hosts. The ability to write monitors is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit and delete individual monitors.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: 'Create, edit, and delete Security Filters.'
            security_monitoring_findings_read: View CSPM Findings.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            slos_corrections: 'Apply, edit, and delete SLO status corrections. A user with this permission can make status corrections, even if they do not have permission to edit those SLOs.'
            slos_read: View SLOs and status corrections.
            slos_write: 'Create, edit, and delete SLOs.'
            synthetics_global_variable_read: 'View, search, and use Synthetics global variables.'
            synthetics_global_variable_write: 'Create, edit, and delete global variables for Synthetics.'
            synthetics_private_location_read: 'View, search, and use Synthetics private locations.'
            synthetics_private_location_write: Create and delete private locations in addition to having access to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: 'Create, edit, and delete Synthetic tests.'
            teams_manage: 'Manage Teams. Create, delete, rename, and edit metadata of all Teams. To control Team membership across all Teams, use the User Access Manage permission.'
            teams_read: 'Read Teams data. A User with this permission can view Team names, metadata, and which Users are on each Team.'
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: 'Disable users, manage user roles, manage SAML-to-role mappings, and configure logs restriction queries.'
            user_access_read: View users and their roles and settings.
          tokenUrl: /oauth2/v1/token
      type: oauth2
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    teams:
      id: datadog.teams.teams
      name: teams
      title: Teams
      methods:
        list_teams:
          operation:
            $ref: '#/paths/~1api~1v2~1team/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_teams:
          operation:
            $ref: '#/paths/~1api~1v2~1team/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/teams/methods/get_team'
          - $ref: '#/components/x-stackQL-resources/teams/methods/list_teams'
        insert:
          - $ref: '#/components/x-stackQL-resources/teams/methods/create_team'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/teams/methods/delete_team'
    team_links:
      id: datadog.teams.team_links
      name: team_links
      title: Team Links
      methods:
        get_team_links:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_team_links:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links~1{link_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links~1{link_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links~1{link_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links~1{link_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/team_links/methods/get_team_link'
          - $ref: '#/components/x-stackQL-resources/team_links/methods/get_team_links'
        insert:
          - $ref: '#/components/x-stackQL-resources/team_links/methods/create_team_link'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/team_links/methods/delete_team_link'
    team_memberships:
      id: datadog.teams.team_memberships
      name: team_memberships
      title: Team Memberships
      methods:
        get_team_memberships:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_team_memberships:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_team_membership:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team_membership:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships~1{user_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_team_membership:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships~1{user_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/team_memberships/methods/get_team_memberships'
        insert:
          - $ref: '#/components/x-stackQL-resources/team_memberships/methods/create_team_membership'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/team_memberships/methods/delete_team_membership'
    team_permission_settings:
      id: datadog.teams.team_permission_settings
      name: team_permission_settings
      title: Team Permission Settings
      methods:
        get_team_permission_settings:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1permission-settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_team_permission_settings:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1permission-settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_team_permission_setting:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1permission-settings~1{action}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/team_permission_settings/methods/get_team_permission_settings'
        insert: []
        update: []
        delete: []
    user_memberships:
      id: datadog.teams.user_memberships
      name: user_memberships
      title: User Memberships
      methods:
        get_user_memberships:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_uuid}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_user_memberships:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_uuid}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_memberships/methods/get_user_memberships'
        insert: []
        update: []
        delete: []
paths:
  /api/v2/team:
    get:
      description: |-
        Get all teams.
        Can be used to search for teams using the `filter[keyword]` and `filter[me]` query parameters.
      operationId: ListTeams
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - description: Specifies the order of the returned teams
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/ListTeamsSort'
        - description: 'Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`'
          in: query
          name: include
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ListTeamsInclude'
            type: array
        - description: 'Search query. Can be team name, team handle, or email of team member'
          in: query
          name: 'filter[keyword]'
          required: false
          schema:
            type: string
        - description: 'When true, only returns teams the current user belongs to'
          in: query
          name: 'filter[me]'
          required: false
          schema:
            type: boolean
        - description: List of fields that need to be fetched.
          explode: false
          in: query
          name: 'fields[team]'
          required: false
          schema:
            items:
              $ref: '#/components/schemas/TeamsField'
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get all teams
      tags:
        - Teams
      x-pagination:
        limitParam: 'page[size]'
        pageParam: 'page[number]'
        resultsPath: data
    post:
      description: |-
        Create a new team.
        User IDs passed through the `users` relationship field are added to the team.
      operationId: CreateTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: CREATED
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
            - teams_manage
      summary: Create a team
      tags:
        - Teams
      x-codegen-request-body-name: body
  '/api/v2/team/{team_id}':
    delete:
      description: Remove a team using the team's `id`.
      operationId: DeleteTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
            - teams_manage
      summary: Remove a team
      tags:
        - Teams
    get:
      description: Get a single team using the team's `id`.
      operationId: GetTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get a team
      tags:
        - Teams
    patch:
      description: |-
        Update a team using the team's `id`.
        If the `team_links` relationship is present, the associated links are updated to be in the order they appear in the array, and any existing team links not present are removed.
      operationId: UpdateTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a team
      tags:
        - Teams
      x-codegen-request-body-name: body
  '/api/v2/team/{team_id}/links':
    get:
      description: Get all links for a given team.
      operationId: GetTeamLinks
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinksResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get links for a team
      tags:
        - Teams
    post:
      description: Add a new link to a team.
      operationId: CreateTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamLinkCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Create a team link
      tags:
        - Teams
      x-codegen-request-body-name: body
  '/api/v2/team/{team_id}/links/{link_id}':
    delete:
      description: Remove a link from a team.
      operationId: DeleteTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Remove a team link
      tags:
        - Teams
    get:
      description: Get a single link for a team.
      operationId: GetTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get a team link
      tags:
        - Teams
    patch:
      description: Update a team link.
      operationId: UpdateTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamLinkCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a team link
      tags:
        - Teams
      x-codegen-request-body-name: body
  '/api/v2/team/{team_id}/memberships':
    get:
      description: Get a paginated list of members for a team
      operationId: GetTeamMemberships
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: Specifies the order of returned team memberships
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/GetTeamMembershipsSort'
        - description: 'Search query, can be user email or name'
          in: query
          name: 'filter[keyword]'
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get team memberships
      tags:
        - Teams
    post:
      description: Add a user to a team.
      operationId: CreateTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTeamRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Add a user to a team
      tags:
        - Teams
      x-codegen-request-body-name: body
  '/api/v2/team/{team_id}/memberships/{user_id}':
    delete:
      description: Remove a user from a team.
      operationId: DeleteTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Remove a user from a team
      tags:
        - Teams
    patch:
      description: Update a user's membership attributes on a team.
      operationId: UpdateTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTeamUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a user's membership attributes on a team
      tags:
        - Teams
      x-codegen-request-body-name: body
  '/api/v2/team/{team_id}/permission-settings':
    get:
      description: Get all permission settings for a given team.
      operationId: GetTeamPermissionSettings
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamPermissionSettingsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get permission settings for a team
      tags:
        - Teams
  '/api/v2/team/{team_id}/permission-settings/{action}':
    put:
      description: Update a team permission setting for a given team.
      operationId: UpdateTeamPermissionSetting
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: action
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPermissionSettingUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamPermissionSettingResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update permission setting for team
      tags:
        - Teams
      x-codegen-request-body-name: body
  '/api/v2/users/{user_uuid}/memberships':
    get:
      description: Get a list of memberships for a user
      operationId: GetUserMemberships
      parameters:
        - description: None
          in: path
          name: user_uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsResponse'
          description: Represents a user's association to a team
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get user memberships
      tags:
        - Teams
