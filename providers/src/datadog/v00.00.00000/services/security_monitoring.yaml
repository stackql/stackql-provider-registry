openapi: 3.0.0
servers:
  - url: 'https://api.datadoghq.com'
    description: Datadog API
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: 'https://www.datadoghq.com/support/'
  version: '1.0'
  title: Datadog API V2 Collection - security_monitoring
  description: Security_Monitoring
security:
  - apiKeyAuth: []
    appKeyAuth: []
tags:
  - description: 'Manage configuration of [APM retention filters](https://app.datadoghq.com/apm/traces/retention-filters) for your organization. You need an API and application key with Admin rights to interact with this endpoint.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/'
    name: APM Retention Filters
  - description: Search your Audit Logs events over HTTP.
    name: Audit
  - description: |-
      [AuthN Mappings API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)
      is used to automatically map group of users to roles in Datadog using attributes
      sent from Identity Providers.
    name: AuthN Mappings
  - description: Search or aggregate your CI Visibility pipeline events and send them to your Datadog site over HTTP.
    name: CI Visibility Pipelines
  - description: Search or aggregate your CI Visibility test events over HTTP.
    name: CI Visibility Tests
  - description: Workload activity security rules for generating events using the Datadog security Agent.
    name: Cloud Workload Security
  - description: Configure your Datadog Cloudflare integration directly through the Datadog API.
    name: Cloudflare Integration
  - description: Configure your Datadog Confluent Cloud integration directly through the Datadog API.
    name: Confluent Cloud
  - description: The Container Images API allows you to query Container Image data for your organization.
    name: Container Images
  - description: The Containers API allows you to query container data for your organization.
    name: Containers
  - description: Send events for DORA Metrics to measure and improve software delivery.
    name: DORA Metrics
  - description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
    name: Dashboard Lists
  - description: |-
      **Note**: Downtime V2 is currently in private beta. To request access, contact [Datadog support](https://docs.datadoghq.com/help/).

      [Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives
      you greater control over monitor notifications by allowing you to globally exclude
      scopes from alerting. Downtime settings, which can be scheduled with start and
      end times, prevent all alerting related to specified Datadog tags.
    name: Downtimes
  - description: |-
      The events service allows you to programmatically post events to the event stream
      and fetch events from the event stream. Events are limited to 4000 characters.
      If an event is sent out with a message containing more than 4000 characters, only the
      first 4000 characters are displayed.
    name: Events
  - description: Configure your Datadog Fastly integration directly through the Datadog API.
    name: Fastly Integration
  - description: |-
      Configure your Datadog-Google Cloud Platform (GCP) integration directly
      through the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform).
    externalDocs:
      url: 'https://docs.datadoghq.com/integrations/google_cloud_platform'
    name: GCP Integration
  - description: |-
      The IP allowlist API is used to manage the IP addresses that
      can access the Datadog API and web UI. It does not block
      access to intake APIs or public dashboards.

      This is an enterprise-only feature. Request access by
      contacting Datadog support.
    name: IP Allowlist
  - description: 'Create, update, delete, and retrieve services which can be associated with incidents.'
    name: Incident Services
  - description: 'The Incident Teams endpoints are deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/) to create, update, delete, and retrieve teams which can be associated with incidents.'
    name: Incident Teams
  - description: Manage incident response.
    name: Incidents
  - description: |-
      Manage your Datadog API and application keys. You need an API key and
      an application key for a user with the required permissions to interact
      with these endpoints. The full list of API and application keys can be
      seen on your [Datadog API page](https://app.datadoghq.com/account/settings#api).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/api-app-keys/'
    name: Key Management
  - description: Search your logs and send them to your Datadog platform over HTTP.
    name: Logs
  - description: |-
      Archives forward all the logs ingested to a cloud storage system.

      See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)
      for a list of the archives currently configured in web UI.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/archives/'
    name: Logs Archives
  - description: 'Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/logs_to_metrics/'
    name: Logs Metrics
  - description: |-
      The metrics endpoint allows you to:

      - Post metrics data so it can be graphed on Datadog’s dashboards
      - Query metrics from any time period (timeseries and scalar)
      - Modify tag configurations for metrics
      - View tags and volumes for metrics

      **Note**: A graph can only contain a set number of points
      and as the timeframe over which a metric is viewed increases,
      aggregation between points occurs to stay below that set number.

      The Post, Patch, and Delete `manage_tags` API methods can only be performed by
      a user who has the `Manage Tags for Metrics` permission.
    name: Metrics
  - description: |-
      [Monitors](https://docs.datadoghq.com/monitors) allow you to watch a metric or check that you care about and
      notifies your team when a defined threshold has exceeded.

      For more information, see [Creating Monitors](https://docs.datadoghq.com/monitors/create/types/) and
      [Tag Policies](https://docs.datadoghq.com/monitors/settings/).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/monitors/create/types/'
    name: Monitors
  - description: Configure your Datadog Okta integration directly through the Datadog API.
    name: Okta Integration
  - description: |-
      Configure your [Datadog Opsgenie integration](https://docs.datadoghq.com/integrations/opsgenie/)
      directly through the Datadog API.
    externalDocs:
      url: 'https://docs.datadoghq.com/api/latest/opsgenie-integration'
    name: Opsgenie Integration
  - description: 'Create, edit, and manage your organizations. Read more about [multi-org accounts](https://docs.datadoghq.com/account_management/multi_organization).'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/multi_organization'
    name: Organizations
  - description: |-
      The powerpack endpoints allow you to:

      - Get a powerpack
      - Create a powerpack
      - Delete a powerpack
      - Get a list of all powerpacks

      The Patch and Delete API methods can only be performed on a powerpack by
      a user who has the powerpack create permission for that specific powerpack.
    name: Powerpack
  - description: The processes API allows you to query processes data for your organization.
    name: Processes
  - description: Search or aggregate your RUM events over HTTP.
    name: RUM
  - description: |-
      A restriction policy defines the access control rules for a resource, mapping a set of relations
      (such as editor and viewer) to a set of allowed principals (such as roles, teams, or users).
      The restriction policy determines who is authorized to perform what actions on the resource.
    name: Restriction Policies
  - description: |-
      The Roles API is used to create and manage Datadog roles, what
      [global permissions](https://docs.datadoghq.com/account_management/rbac/)
      they grant, and which users belong to them.

      Permissions related to specific account assets can be granted to roles
      in the Datadog application without using this API. For example, granting
      read access on a specific log index to a role can be done in Datadog from the
      [Pipelines page](https://app.datadoghq.com/logs/pipelines).
    name: Roles
  - description: |-
      Detection rules for generating signals and listing of generated
      signals.
    name: Security Monitoring
  - description: 'Create, update, delete, and retrieve sensitive data scanner groups and rules.'
    name: Sensitive Data Scanner
  - description: 'Create, edit, and disable service accounts.'
    name: Service Accounts
  - description: 'API to create, update, retrieve and delete service definitions.'
    externalDocs:
      url: 'https://docs.datadoghq.com/tracing/service_catalog/'
    name: Service Definition
  - description: |-
      API to create, update scorecard rules and outcomes.

      This feature is currently in BETA. If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    name: Service Scorecards
  - description: Search and aggregate your spans from your Datadog platform over HTTP.
    name: Spans
  - description: 'Manage configuration of [span-based metrics](https://app.datadoghq.com/apm/traces/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/metrics/metrics_namespace/'
    name: Spans Metrics
  - description: |-
      Datadog Synthetics uses simulated user requests and browser rendering to help you ensure uptime,
      identify regional issues, and track your application performance. Datadog Synthetics tests come in
      two different flavors, [API tests](https://docs.datadoghq.com/synthetics/api_tests/)
      and [browser tests](https://docs.datadoghq.com/synthetics/browser_tests). You can use Datadog’s API to
      manage both test types programmatically.

      For more information about Synthetics, see the [Synthetics overview](https://docs.datadoghq.com/synthetics/).
    name: Synthetics
  - description: View and manage teams within Datadog.
    name: Teams
  - description: |-
      The usage metering API allows you to get hourly, daily, and
      monthly usage across multiple facets of Datadog.
      This API is available to all Pro and Enterprise customers.
      Usage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).

      **Note**: Usage data is delayed by up to 72 hours from when it was incurred.
      It is retained for 15 months.

      You can retrieve up to 24 hours of hourly usage data for multiple organizations,
      and up to two months of hourly usage data for a single organization in one request.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/billing/usage_details/'
    name: Usage Metering
  - description: 'Create, edit, and disable users.'
    externalDocs:
      url: 'https://docs.datadoghq.com/account_management/users'
    name: Users
components:
  schemas:
    FindingEvaluation:
      description: The evaluation of the finding.
      enum:
        - pass
        - fail
      example: pass
      type: string
      x-enum-varnames:
        - PASS
        - FAIL
    FindingStatus:
      description: The status of the finding.
      enum:
        - critical
        - high
        - medium
        - low
        - info
      example: critical
      type: string
      x-enum-varnames:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - INFO
    ListFindingsResponse:
      description: The expected response schema when listing findings.
      properties:
        data:
          $ref: '#/components/schemas/ListFindingsData'
        meta:
          $ref: '#/components/schemas/ListFindingsMeta'
      required:
        - data
        - meta
      type: object
    ListFindingsData:
      description: Array of findings.
      items:
        $ref: '#/components/schemas/Finding'
      type: array
    ListFindingsMeta:
      additionalProperties: false
      description: Metadata for pagination.
      properties:
        page:
          $ref: '#/components/schemas/ListFindingsPage'
        snapshot_timestamp:
          description: The point in time corresponding to the listed findings.
          example: 1678721573794
          format: int64
          minimum: 1
          type: integer
      type: object
    APIKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - modified_at
        - '-modified_at'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    ApplicationKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    IncidentAttachmentAttachmentType:
      description: The type of the incident attachment attributes.
      enum:
        - link
        - postmortem
      example: link
      type: string
      x-enum-varnames:
        - LINK
        - POSTMORTEM
    IncidentAttachmentRelatedObject:
      description: The object related to an incident attachment.
      enum:
        - users
      type: string
      x-enum-varnames:
        - USERS
    IncidentRelatedObject:
      description: Object related to an incident.
      enum:
        - users
        - attachments
      type: string
      x-enum-varnames:
        - USERS
        - ATTACHMENTS
    IncidentSearchSortOrder:
      description: The ways searched incidents can be sorted.
      enum:
        - created
        - '-created'
      type: string
      x-enum-varnames:
        - CREATED_ASCENDING
        - CREATED_DESCENDING
    ServiceDefinitionSchemaVersions:
      description: Schema versions
      enum:
        - v1
        - v2
        - v2.1
        - v2.2
      type: string
      x-enum-varnames:
        - V1
        - V2
        - V2_1
        - V2_2
    JSONAPIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            $ref: '#/components/schemas/JSONAPIErrorItem'
          type: array
      required:
        - errors
      type: object
    Finding:
      description: A single finding without the message and resource configuration.
      properties:
        attributes:
          $ref: '#/components/schemas/FindingAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/FindingType'
      type: object
    ListFindingsPage:
      additionalProperties: false
      description: Pagination and findings count information.
      properties:
        cursor:
          description: The cursor used to paginate requests.
          example: eyJhZnRlciI6IkFRQUFBWWJiaEJXQS1OY1dqUUFBQUFCQldXSmlhRUpYUVVGQlJFSktkbTlDTUdaWFRVbDNRVUUiLCJ2YWx1ZXMiOlsiY3JpdGljYWwiXX0=
          type: string
        total_filtered_count:
          description: The total count of findings after the filter has been applied.
          example: 213
          format: int64
          type: integer
      type: object
    JSONAPIErrorItem:
      description: API error response body
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of the error.
          example: Missing required attribute in body
          type: string
        status:
          description: Status code of the response.
          example: '400'
          type: string
        title:
          description: Short human-readable summary of the error.
          example: Bad Request
          type: string
      type: object
    FindingAttributes:
      description: 'The JSON:API attributes of the finding.'
      properties:
        evaluation:
          $ref: '#/components/schemas/FindingEvaluation'
        evaluation_changed_at:
          $ref: '#/components/schemas/FindingEvaluationChangedAt'
        mute:
          $ref: '#/components/schemas/FindingMute'
        resource:
          $ref: '#/components/schemas/FindingResource'
        resource_discovery_date:
          $ref: '#/components/schemas/FindingResourceDiscoveryDate'
        resource_type:
          $ref: '#/components/schemas/FindingResourceType'
        rule:
          $ref: '#/components/schemas/FindingRule'
        status:
          $ref: '#/components/schemas/FindingStatus'
        tags:
          $ref: '#/components/schemas/FindingTags'
      type: object
    FindingID:
      description: The unique ID for this finding.
      example: ZGVmLTAwcC1pZXJ-aS0wZjhjNjMyZDNmMzRlZTgzNw==
      type: string
    FindingType:
      default: finding
      description: 'The JSON:API type for findings.'
      enum:
        - finding
      example: finding
      type: string
      x-enum-varnames:
        - FINDING
    FindingEvaluationChangedAt:
      description: The date on which the evaluation for this finding changed (Unix ms).
      example: 1678721573794
      format: int64
      minimum: 1
      type: integer
    FindingMute:
      additionalProperties: false
      description: Information about the mute status of this finding.
      properties:
        description:
          description: Additional information about the reason why this finding is muted or unmuted.
          example: To be resolved later
          type: string
        expiration_date:
          description: The expiration date of the mute or unmute action (Unix ms).
          example: 1778721573794
          format: int64
          type: integer
        muted:
          description: Whether this finding is muted or unmuted.
          example: true
          type: boolean
        reason:
          $ref: '#/components/schemas/FindingMuteReason'
        start_date:
          description: The start of the mute period.
          example: 1678721573794
          format: int64
          type: integer
        uuid:
          description: The ID of the user who muted or unmuted this finding.
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
      type: object
    FindingResource:
      description: The resource name of this finding.
      example: my_resource_name
      type: string
    FindingResourceDiscoveryDate:
      description: The date on which the resource was discovered (Unix ms).
      example: 1678721573794
      format: int64
      minimum: 1
      type: integer
    FindingResourceType:
      description: The resource type of this finding.
      example: azure_storage_account
      type: string
    FindingRule:
      additionalProperties: false
      description: The rule that triggered this finding.
      properties:
        id:
          description: The ID of the rule that triggered this finding.
          example: dv2-jzf-41i
          type: string
        name:
          description: The name of the rule that triggered this finding.
          example: Soft delete is enabled for Azure Storage
          type: string
      type: object
    FindingTags:
      description: The tags associated with this finding.
      example:
        - 'cloud_provider:aws'
        - 'myTag:myValue'
      items:
        description: The list of tags.
        type: string
      type: array
    FindingMuteReason:
      description: The reason why this finding is muted or unmuted.
      enum:
        - PENDING_FIX
        - FALSE_POSITIVE
        - ACCEPTED_RISK
        - NO_PENDING_FIX
        - HUMAN_ERROR
        - NO_LONGER_ACCEPTED_RISK
        - OTHER
      example: ACCEPTED_RISK
      type: string
      x-enum-varnames:
        - PENDING_FIX
        - FALSE_POSITIVE
        - ACCEPTED_RISK
        - NO_PENDING_FIX
        - HUMAN_ERROR
        - NO_LONGER_ACCEPTED_RISK
        - OTHER
    BulkMuteFindingsRequest:
      description: The new bulk mute finding request.
      properties:
        data:
          $ref: '#/components/schemas/BulkMuteFindingsRequestData'
      required:
        - data
      type: object
    BulkMuteFindingsResponse:
      description: The expected response schema.
      properties:
        data:
          $ref: '#/components/schemas/BulkMuteFindingsResponseData'
      required:
        - data
      type: object
    BulkMuteFindingsRequestData:
      description: Data object containing the new bulk mute properties of the finding.
      properties:
        attributes:
          $ref: '#/components/schemas/BulkMuteFindingsRequestAttributes'
        id:
          description: UUID to identify the request
          example: dbe5f567-192b-4404-b908-29b70e1c9f76
          type: string
        meta:
          $ref: '#/components/schemas/BulkMuteFindingsRequestMeta'
        type:
          $ref: '#/components/schemas/FindingType'
      required:
        - id
        - type
        - attributes
        - meta
      type: object
    BulkMuteFindingsResponseData:
      description: Data object containing the ID of the request that was updated.
      properties:
        id:
          description: UUID used to identify the request
          example: 93bfeb70-af47-424d-908a-948d3f08e37f
          type: string
        type:
          $ref: '#/components/schemas/FindingType'
      type: object
    BulkMuteFindingsRequestAttributes:
      additionalProperties: false
      description: The mute properties to be updated.
      properties:
        mute:
          $ref: '#/components/schemas/BulkMuteFindingsRequestProperties'
      required:
        - mute
      type: object
    BulkMuteFindingsRequestMeta:
      description: Meta object containing the findings to be updated.
      properties:
        findings:
          description: Array of findings.
          items:
            $ref: '#/components/schemas/BulkMuteFindingsRequestMetaFindings'
          type: array
      type: object
    BulkMuteFindingsRequestProperties:
      additionalProperties: false
      description: Object containing the new mute properties of the findings.
      properties:
        description:
          description: Additional information about the reason why those findings are muted or unmuted. This field has a maximum limit of 280 characters.
          type: string
        expiration_date:
          description: |
            The expiration date of the mute or unmute action (Unix ms). It must be set to a value greater than the current timestamp.
            If this field is not provided, the finding will be muted or unmuted indefinitely, which is equivalent to setting the expiration date to 9999999999999.
          example: 1778721573794
          format: int64
          type: integer
        muted:
          description: Whether those findings should be muted or unmuted.
          example: true
          type: boolean
        reason:
          $ref: '#/components/schemas/FindingMuteReason'
      required:
        - muted
        - reason
      type: object
    BulkMuteFindingsRequestMetaFindings:
      description: Finding object containing the finding information.
      properties:
        finding_id:
          $ref: '#/components/schemas/FindingID'
      type: object
    GetFindingResponse:
      description: The expected response schema when getting a finding.
      properties:
        data:
          $ref: '#/components/schemas/DetailedFinding'
      required:
        - data
      type: object
    DetailedFinding:
      description: A single finding with with message and resource configuration.
      properties:
        attributes:
          $ref: '#/components/schemas/DetailedFindingAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/DetailedFindingType'
      type: object
    DetailedFindingAttributes:
      description: 'The JSON:API attributes of the detailed finding.'
      properties:
        evaluation:
          $ref: '#/components/schemas/FindingEvaluation'
        evaluation_changed_at:
          $ref: '#/components/schemas/FindingEvaluationChangedAt'
        message:
          description: The remediation message for this finding.
          example: |-
            ## Remediation

            ### From the console

            1. Go to Storage Account
            2. For each Storage Account, navigate to Data Protection
            3. Select Set soft delete enabled and enter the number of days to retain soft deleted data.
          type: string
        mute:
          $ref: '#/components/schemas/FindingMute'
        resource:
          $ref: '#/components/schemas/FindingResource'
        resource_configuration:
          description: The resource configuration for this finding.
          type: object
        resource_discovery_date:
          $ref: '#/components/schemas/FindingResourceDiscoveryDate'
        resource_type:
          $ref: '#/components/schemas/FindingResourceType'
        rule:
          $ref: '#/components/schemas/FindingRule'
        status:
          $ref: '#/components/schemas/FindingStatus'
        tags:
          $ref: '#/components/schemas/FindingTags'
      type: object
    DetailedFindingType:
      default: detailed_finding
      description: 'The JSON:API type for findings that have the message and resource configuration.'
      enum:
        - detailed_finding
      example: detailed_finding
      type: string
      x-enum-varnames:
        - DETAILED_FINDING
    SecurityFiltersResponse:
      description: All the available security filters objects.
      properties:
        data:
          description: A list of security filters objects.
          items:
            $ref: '#/components/schemas/SecurityFilter'
          type: array
        meta:
          $ref: '#/components/schemas/SecurityFilterMeta'
      type: object
    SecurityFilter:
      description: The security filter's properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterAttributes'
        id:
          $ref: '#/components/schemas/SecurityFilterID'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      type: object
    SecurityFilterMeta:
      description: Optional metadata associated to the response.
      properties:
        warning:
          description: A warning message.
          example: 'All the security filters are disabled. As a result, no logs are being analyzed.'
          type: string
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    SecurityFilterAttributes:
      description: The object describing a security filter.
      properties:
        exclusion_filters:
          description: The list of exclusion filters applied in this security filter.
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilterResponse'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_builtin:
          description: Whether the security filter is the built-in filter.
          example: false
          type: boolean
        is_enabled:
          description: Whether the security filter is enabled.
          example: false
          type: boolean
        name:
          description: The security filter name.
          example: Custom security filter
          type: string
        query:
          description: The security filter query. Logs accepted by this query will be accepted by this filter.
          example: 'service:api'
          type: string
        version:
          description: The version of the security filter.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityFilterID:
      description: The ID of the security filter.
      example: 3dd-0uc-h1s
      type: string
    SecurityFilterType:
      default: security_filters
      description: The type of the resource. The value should always be `security_filters`.
      enum:
        - security_filters
      example: security_filters
      type: string
      x-enum-varnames:
        - SECURITY_FILTERS
    SecurityFilterExclusionFilterResponse:
      description: A single exclusion filter.
      properties:
        name:
          description: The exclusion filter name.
          example: Exclude staging
          type: string
        query:
          description: The exclusion filter query.
          example: 'source:staging'
          type: string
      type: object
    SecurityFilterFilteredDataType:
      description: The filtered data type.
      enum:
        - logs
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
    SecurityFilterCreateRequest:
      description: Request object that includes the security filter that you would like to create.
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilterCreateData'
      required:
        - data
      type: object
    SecurityFilterResponse:
      description: Response object which includes a single security filter.
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilter'
        meta:
          $ref: '#/components/schemas/SecurityFilterMeta'
      type: object
    SecurityFilterCreateData:
      description: Object for a single security filter.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterCreateAttributes'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      required:
        - type
        - attributes
      type: object
    SecurityFilterCreateAttributes:
      description: Object containing the attributes of the security filter to be created.
      properties:
        exclusion_filters:
          description: Exclusion filters to exclude some logs from the security filter.
          example:
            - name: Exclude staging
              query: 'source:staging'
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilter'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_enabled:
          description: Whether the security filter is enabled.
          example: true
          type: boolean
        name:
          description: The name of the security filter.
          example: Custom security filter
          type: string
        query:
          description: The query of the security filter.
          example: 'service:api'
          type: string
      required:
        - name
        - query
        - exclusion_filters
        - filtered_data_type
        - is_enabled
      type: object
    SecurityFilterExclusionFilter:
      description: Exclusion filter for the security filter.
      example:
        name: Exclude staging
        query: 'source:staging'
      properties:
        name:
          description: Exclusion filter name.
          example: Exclude staging
          type: string
        query:
          description: Exclusion filter query. Logs that match this query are excluded from the security filter.
          example: 'source:staging'
          type: string
      required:
        - name
        - query
      type: object
    SecurityFilterUpdateRequest:
      description: The new security filter body.
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilterUpdateData'
      required:
        - data
      type: object
    SecurityFilterUpdateData:
      description: The new security filter properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterUpdateAttributes'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      required:
        - type
        - attributes
      type: object
    SecurityFilterUpdateAttributes:
      description: The security filters properties to be updated.
      properties:
        exclusion_filters:
          description: Exclusion filters to exclude some logs from the security filter.
          example: []
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilter'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_enabled:
          description: Whether the security filter is enabled.
          example: true
          type: boolean
        name:
          description: The name of the security filter.
          example: Custom security filter
          type: string
        query:
          description: The query of the security filter.
          example: 'service:api'
          type: string
        version:
          description: The version of the security filter to update.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityMonitoringListRulesResponse:
      description: List of rules.
      properties:
        data:
          description: Array containing the list of rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    SecurityMonitoringRuleResponse:
      description: Create a new rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRuleResponse'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRuleResponse'
    ResponseMetaAttributes:
      description: Object describing meta attributes of response.
      properties:
        page:
          $ref: '#/components/schemas/Pagination'
      type: object
    SecurityMonitoringStandardRuleResponse:
      description: Rule.
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        complianceSignalOptions:
          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'
        createdAt:
          description: 'When the rule was created, timestamp in milliseconds.'
          format: int64
          type: integer
        creationAuthorId:
          description: User ID of the user who created the rule.
          format: int64
          type: integer
        deprecationDate:
          description: 'When the rule will be deprecated, timestamp in milliseconds.'
          format: int64
          type: integer
        filters:
          description: Additional queries to filter matched events before they are processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values in their title.
          type: boolean
        id:
          description: The ID of the rule.
          type: string
        isDefault:
          description: Whether the rule is included by default.
          type: boolean
        isDeleted:
          description: Whether the rule has been deleted.
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: The name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringRuleTypeRead'
        updateAuthorId:
          description: User ID of the user who updated the rule.
          format: int64
          type: integer
        version:
          description: The version of the rule.
          format: int64
          type: integer
    SecurityMonitoringSignalRuleResponse:
      description: Rule.
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        createdAt:
          description: 'When the rule was created, timestamp in milliseconds.'
          format: int64
          type: integer
        creationAuthorId:
          description: User ID of the user who created the rule.
          format: int64
          type: integer
        deprecationDate:
          description: 'When the rule will be deprecated, timestamp in milliseconds.'
          format: int64
          type: integer
        filters:
          description: Additional queries to filter matched events before they are processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values in their title.
          type: boolean
        id:
          description: The ID of the rule.
          type: string
        isDefault:
          description: Whether the rule is included by default.
          type: boolean
        isDeleted:
          description: Whether the rule has been deleted.
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: The name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignalRuleResponseQuery'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalRuleType'
        updateAuthorId:
          description: User ID of the user who updated the rule.
          format: int64
          type: integer
        version:
          description: The version of the rule.
          format: int64
          type: integer
    Pagination:
      description: Pagination object.
      properties:
        total_count:
          description: Total count.
          format: int64
          type: integer
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    SecurityMonitoringRuleCase:
      description: Case when signal is generated.
      properties:
        condition:
          description: |-
            A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated
            based on the event counts in the previously defined queries.
          type: string
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      type: object
    CloudConfigurationRuleComplianceSignalOptions:
      description: How to generate compliance signals. Useful for cloud_configuration rules only.
      properties:
        defaultActivationStatus:
          description: The default activation status.
          nullable: true
          type: boolean
        defaultGroupByFields:
          description: The default group by fields.
          items:
            type: string
          nullable: true
          type: array
        userActivationStatus:
          description: Whether signals will be sent.
          nullable: true
          type: boolean
        userGroupByFields:
          description: Fields to use to group findings by when sending signals.
          items:
            type: string
          nullable: true
          type: array
      type: object
    SecurityMonitoringFilter:
      description: The rule's suppression filter.
      properties:
        action:
          $ref: '#/components/schemas/SecurityMonitoringFilterAction'
        query:
          description: Query for selecting logs to apply the filtering action.
          type: string
      type: object
    SecurityMonitoringRuleOptions:
      description: Options on rules.
      properties:
        complianceRuleOptions:
          $ref: '#/components/schemas/CloudConfigurationComplianceRuleOptions'
        decreaseCriticalityBasedOnEnv:
          $ref: '#/components/schemas/SecurityMonitoringRuleDecreaseCriticalityBasedOnEnv'
        detectionMethod:
          $ref: '#/components/schemas/SecurityMonitoringRuleDetectionMethod'
        evaluationWindow:
          $ref: '#/components/schemas/SecurityMonitoringRuleEvaluationWindow'
        hardcodedEvaluatorType:
          $ref: '#/components/schemas/SecurityMonitoringRuleHardcodedEvaluatorType'
        impossibleTravelOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleImpossibleTravelOptions'
        keepAlive:
          $ref: '#/components/schemas/SecurityMonitoringRuleKeepAlive'
        maxSignalDuration:
          $ref: '#/components/schemas/SecurityMonitoringRuleMaxSignalDuration'
        newValueOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptions'
      type: object
    SecurityMonitoringStandardRuleQuery:
      description: Query for matching rule.
      properties:
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        distinctFields:
          description: Field for which the cardinality is measured. Sent as an array.
          items:
            description: Field.
            type: string
          type: array
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        hasOptionalGroupByFields:
          description: 'When false, events without a group-by value are ignored by the rule. When true, events with missing group-by fields are processed with `N/A`, replacing the missing values.'
          example: false
          readOnly: true
          type: boolean
        metric:
          deprecated: true
          description: |-
            (Deprecated) The target field to aggregate over when using the sum or max
            aggregations. `metrics` field should be used instead.
          type: string
        metrics:
          description: 'Group of target fields to aggregate over when using the sum, max, geo data, or new value aggregations. The sum, max, and geo data aggregations only accept one value in this list, whereas the new value aggregation accepts up to five values.'
          items:
            description: Field.
            type: string
          type: array
        name:
          description: Name of the query.
          type: string
        query:
          description: Query to run on logs.
          example: a > 3
          type: string
      type: object
    SecurityMonitoringRuleTypeRead:
      description: The rule type.
      enum:
        - log_detection
        - infrastructure_configuration
        - workload_security
        - cloud_configuration
        - application_security
      type: string
      x-enum-varnames:
        - LOG_DETECTION
        - INFRASTRUCTURE_CONFIGURATION
        - WORKLOAD_SECURITY
        - CLOUD_CONFIGURATION
        - APPLICATION_SECURITY
    SecurityMonitoringSignalRuleResponseQuery:
      description: Query for matching rule on signals.
      properties:
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        correlatedByFields:
          description: Fields to correlate by.
          items:
            description: Field.
            type: string
          type: array
        correlatedQueryIndex:
          description: Index of the rule query used to retrieve the correlated field.
          format: int32
          maximum: 9
          type: integer
        defaultRuleId:
          description: Default Rule ID to match on signals.
          example: d3f-ru1-e1d
          type: string
        distinctFields:
          description: Field for which the cardinality is measured. Sent as an array.
          items:
            description: Field.
            type: string
          type: array
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        metrics:
          description: Group of target fields to aggregate over.
          items:
            description: Field.
            type: string
          type: array
        name:
          description: Name of the query.
          type: string
        ruleId:
          description: Rule ID to match on signals.
          example: org-ru1-e1d
          type: string
      type: object
    SecurityMonitoringSignalRuleType:
      description: The rule type.
      enum:
        - signal_correlation
      type: string
      x-enum-varnames:
        - SIGNAL_CORRELATION
    SecurityMonitoringRuleSeverity:
      description: Severity of the Security Signal.
      enum:
        - info
        - low
        - medium
        - high
        - critical
      example: critical
      type: string
      x-enum-varnames:
        - INFO
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    SecurityMonitoringFilterAction:
      description: The type of filtering action.
      enum:
        - require
        - suppress
      type: string
      x-enum-varnames:
        - REQUIRE
        - SUPPRESS
    CloudConfigurationComplianceRuleOptions:
      additionalProperties: {}
      description: |
        Options for cloud_configuration rules.
        Fields `resourceType` and `regoRule` are mandatory when managing custom `cloud_configuration` rules.
      properties:
        complexRule:
          description: |
            Whether the rule is a complex one.
            Must be set to true if `regoRule.resourceTypes` contains more than one item. Defaults to false.
          type: boolean
        regoRule:
          $ref: '#/components/schemas/CloudConfigurationRegoRule'
        resourceType:
          description: |
            Main resource type to be checked by the rule. It should be specified again in `regoRule.resourceTypes`.
          example: aws_acm
          type: string
      type: object
    SecurityMonitoringRuleDecreaseCriticalityBasedOnEnv:
      description: |-
        If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce signal noise.
        The severity is decreased by one level: `CRITICAL` in production becomes `HIGH` in non-production, `HIGH` becomes `MEDIUM` and so on. `INFO` remains `INFO`.
        The decrement is applied when the environment tag of the signal starts with `staging`, `test` or `dev`.
      example: false
      type: boolean
    SecurityMonitoringRuleDetectionMethod:
      description: The detection method.
      enum:
        - threshold
        - new_value
        - anomaly_detection
        - impossible_travel
        - hardcoded
        - third_party
      type: string
      x-enum-varnames:
        - THRESHOLD
        - NEW_VALUE
        - ANOMALY_DETECTION
        - IMPOSSIBLE_TRAVEL
        - HARDCODED
        - THIRD_PARTY
    SecurityMonitoringRuleEvaluationWindow:
      description: |-
        A time window is specified to match when at least one of the cases matches true. This is a sliding window
        and evaluates in real time.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
    SecurityMonitoringRuleHardcodedEvaluatorType:
      description: Hardcoded evaluator type.
      enum:
        - log4shell
      type: string
      x-enum-varnames:
        - LOG4SHELL
    SecurityMonitoringRuleImpossibleTravelOptions:
      description: Options on impossible travel rules.
      properties:
        baselineUserLocations:
          $ref: '#/components/schemas/SecurityMonitoringRuleImpossibleTravelOptionsBaselineUserLocations'
      type: object
    SecurityMonitoringRuleKeepAlive:
      description: |-
        Once a signal is generated, the signal will remain “open” if a case is matched at least once within
        this keep alive window.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
        - 10800
        - 21600
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
        - THREE_HOURS
        - SIX_HOURS
    SecurityMonitoringRuleMaxSignalDuration:
      description: |-
        A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.
        This time is calculated from the first seen timestamp.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
        - 10800
        - 21600
        - 43200
        - 86400
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
        - THREE_HOURS
        - SIX_HOURS
        - TWELVE_HOURS
        - ONE_DAY
    SecurityMonitoringRuleNewValueOptions:
      description: Options on new value rules.
      properties:
        forgetAfter:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsForgetAfter'
        learningDuration:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningDuration'
        learningMethod:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningMethod'
        learningThreshold:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningThreshold'
      type: object
    SecurityMonitoringRuleQueryAggregation:
      description: The aggregation type.
      enum:
        - count
        - cardinality
        - sum
        - max
        - new_value
        - geo_data
        - event_count
        - none
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - SUM
        - MAX
        - NEW_VALUE
        - GEO_DATA
        - EVENT_COUNT
        - NONE
    CloudConfigurationRegoRule:
      description: Rule details.
      properties:
        policy:
          description: 'The policy written in `rego`, see: https://www.openpolicyagent.org/docs/latest/policy-language/'
          example: |
            package datadog

            import data.datadog.output as dd_output
            import future.keywords.contains
            import future.keywords.if
            import future.keywords.in

            eval(resource) = "skip" if {
              # Logic that evaluates to true if the resource should be skipped
              true
            } else = "pass" {
              # Logic that evaluates to true if the resource is compliant
              true
            } else = "fail" {
              # Logic that evaluates to true if the resource is not compliant
              true
            }

            # This part remains unchanged for all rules
            results contains result if {
              some resource in input.resources[input.main_resource_type]
              result := dd_output.format(resource, eval(resource))
            }
          type: string
        resourceTypes:
          description: List of resource types that will be evaluated upon. Must have at least one element.
          example:
            - gcp_iam_service_account
            - gcp_iam_policy
          items:
            type: string
          type: array
      required:
        - policy
        - resourceTypes
      type: object
    SecurityMonitoringRuleImpossibleTravelOptionsBaselineUserLocations:
      description: |-
        If true, signals are suppressed for the first 24 hours. In that time, Datadog learns the user's regular
        access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
      example: true
      type: boolean
    SecurityMonitoringRuleNewValueOptionsForgetAfter:
      description: The duration in days after which a learned value is forgotten.
      enum:
        - 1
        - 2
        - 7
        - 14
        - 21
        - 28
      format: int32
      type: integer
      x-enum-varnames:
        - ONE_DAY
        - TWO_DAYS
        - ONE_WEEK
        - TWO_WEEKS
        - THREE_WEEKS
        - FOUR_WEEKS
    SecurityMonitoringRuleNewValueOptionsLearningDuration:
      default: 0
      description: |-
        The duration in days during which values are learned, and after which signals will be generated for values that
        weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
      enum:
        - 0
        - 1
        - 7
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_DAYS
        - ONE_DAY
        - SEVEN_DAYS
    SecurityMonitoringRuleNewValueOptionsLearningMethod:
      default: duration
      description: The learning method used to determine when signals should be generated for values that weren't learned.
      enum:
        - duration
        - threshold
      type: string
      x-enum-varnames:
        - DURATION
        - THRESHOLD
    SecurityMonitoringRuleNewValueOptionsLearningThreshold:
      default: 0
      description: A number of occurrences after which signals will be generated for values that weren't learned.
      enum:
        - 0
        - 1
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_OCCURRENCES
        - ONE_OCCURRENCE
    SecurityMonitoringRuleCreatePayload:
      description: Create a new rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRuleCreatePayload'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRuleCreatePayload'
        - $ref: '#/components/schemas/CloudConfigurationRuleCreatePayload'
    SecurityMonitoringStandardRuleCreatePayload:
      description: Create a new rule.
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: Additional queries to filter matched events before they are processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values in their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ''
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - 'env:prod'
            - 'team:security'
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringRuleTypeCreate'
      required:
        - name
        - isEnabled
        - queries
        - options
        - cases
        - message
      type: object
    SecurityMonitoringSignalRuleCreatePayload:
      description: Create a new signal correlation rule.
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: Additional queries to filter matched events before they are processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values in their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ''
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting signals which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignalRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - 'env:prod'
            - 'team:security'
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalRuleType'
      required:
        - name
        - isEnabled
        - queries
        - options
        - cases
        - message
      type: object
    CloudConfigurationRuleCreatePayload:
      description: Create a new cloud configuration rule.
      properties:
        cases:
          description: |
            Description of generated findings and signals (severity and channels to be notified in case of a signal). Must contain exactly one item.
          items:
            $ref: '#/components/schemas/CloudConfigurationRuleCaseCreate'
          type: array
        complianceSignalOptions:
          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'
        filters:
          description: Additional queries to filter matched events before they are processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message in markdown format for generated findings and signals.
          example: |
            #Description
            Explanation of the rule.

            #Remediation
            How to fix the security issue.
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/CloudConfigurationRuleOptions'
        tags:
          description: Tags for generated findings and signals.
          example:
            - 'env:prod'
            - 'team:security'
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/CloudConfigurationRuleType'
      required:
        - name
        - isEnabled
        - options
        - complianceSignalOptions
        - cases
        - message
      type: object
    SecurityMonitoringRuleCaseCreate:
      description: Case when signal is generated.
      properties:
        condition:
          description: |-
            A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated
            based on the event counts in the previously defined queries.
          type: string
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      required:
        - status
      type: object
    SecurityMonitoringRuleTypeCreate:
      description: The rule type.
      enum:
        - application_security
        - log_detection
        - workload_security
      type: string
      x-enum-varnames:
        - APPLICATION_SECURITY
        - LOG_DETECTION
        - WORKLOAD_SECURITY
    SecurityMonitoringSignalRuleQuery:
      description: Query for matching rule on signals.
      properties:
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        correlatedByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        correlatedQueryIndex:
          description: Index of the rule query used to retrieve the correlated field.
          format: int32
          maximum: 9
          type: integer
        metrics:
          description: Group of target fields to aggregate over.
          items:
            description: Field.
            type: string
          type: array
        name:
          description: Name of the query.
          type: string
        ruleId:
          description: Rule ID to match on signals.
          example: org-ru1-e1d
          type: string
      required:
        - ruleId
      type: object
    CloudConfigurationRuleCaseCreate:
      description: Description of signals.
      properties:
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      required:
        - status
      type: object
    CloudConfigurationRuleOptions:
      description: Options on cloud configuration rules.
      properties:
        complianceRuleOptions:
          $ref: '#/components/schemas/CloudConfigurationComplianceRuleOptions'
      required:
        - complianceRuleOptions
      type: object
    CloudConfigurationRuleType:
      description: The rule type.
      enum:
        - cloud_configuration
      type: string
      x-enum-varnames:
        - CLOUD_CONFIGURATION
    SecurityMonitoringRuleUpdatePayload:
      description: Update an existing rule.
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        complianceSignalOptions:
          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'
        filters:
          description: Additional queries to filter matched events before they are processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values in their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: Name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        version:
          description: The version of the rule being updated.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityMonitoringRuleQuery:
      description: Query for matching rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRuleQuery'
    SecurityMonitoringSignalsSort:
      description: The sort parameters used for querying security signals.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    SecurityMonitoringSignalsListResponse:
      description: |-
        The response object with all security signals matching the request
        and pagination information.
      properties:
        data:
          description: An array of security signals matching the request.
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignal'
          type: array
        links:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseLinks'
        meta:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseMeta'
      type: object
    SecurityMonitoringSignal:
      description: Object description of a security signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalAttributes'
        id:
          description: The unique ID of the security signal.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalType'
      type: object
    SecurityMonitoringSignalsListResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: |-
            The link for the next set of results. **Note**: The request can also be made using the
            POST endpoint.
          example: 'https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ=='
          type: string
      type: object
    SecurityMonitoringSignalsListResponseMeta:
      description: Meta attributes.
      properties:
        page:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseMetaPage'
      type: object
    SecurityMonitoringSignalAttributes:
      additionalProperties: {}
      description: |-
        The object containing all signal attributes and their
        associated values.
      properties:
        custom:
          additionalProperties: {}
          description: A JSON object of attributes in the security signal.
          example:
            workflow:
              first_seen: '2020-06-23T14:46:01.000Z'
              last_seen: '2020-06-23T14:46:49.000Z'
              rule:
                id: 0f5-e0c-805
                name: 'Brute Force Attack Grouped By User '
                version: 12
          type: object
        message:
          description: The message in the security signal defined by the rule that generated the signal.
          example: Detect Account Take Over (ATO) through brute force attempts
          type: string
        tags:
          description: An array of tags associated with the security signal.
          example:
            - 'security:attack'
            - 'technique:T1110-brute-force'
          items:
            description: The tag associated with the security signal.
            type: string
          type: array
        timestamp:
          description: The timestamp of the security signal.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    SecurityMonitoringSignalType:
      default: signal
      description: The type of event.
      enum:
        - signal
      example: signal
      type: string
      x-enum-varnames:
        - SIGNAL
    SecurityMonitoringSignalsListResponseMetaPage:
      description: Paging attributes.
      properties:
        after:
          description: |-
            The cursor used to get the next results, if any. To make the next request, use the same
            parameters with the addition of the `page[cursor]`.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    SecurityMonitoringSignalListRequest:
      description: The request for a security signal list.
      properties:
        filter:
          $ref: '#/components/schemas/SecurityMonitoringSignalListRequestFilter'
        page:
          $ref: '#/components/schemas/SecurityMonitoringSignalListRequestPage'
        sort:
          $ref: '#/components/schemas/SecurityMonitoringSignalsSort'
      type: object
    SecurityMonitoringSignalListRequestFilter:
      description: Search filters for listing security signals.
      properties:
        from:
          description: The minimum timestamp for requested security signals.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
        query:
          description: Search query for listing security signals.
          example: 'security:attack status:high'
          type: string
        to:
          description: The maximum timestamp for requested security signals.
          example: '2019-01-03T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    SecurityMonitoringSignalListRequestPage:
      description: The paging attributes for listing security signals.
      properties:
        cursor:
          description: A list of results using the cursor provided in the previous query.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: The maximum number of security signals in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    SecurityMonitoringSignalResponse:
      description: Security Signal response data object.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignal'
      type: object
    SecurityMonitoringSignalAssigneeUpdateRequest:
      description: Request body for changing the assignee of a given security monitoring signal.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalAssigneeUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringSignalTriageUpdateResponse:
      description: 'The response returned after all triage operations, containing the updated signal triage data.'
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringSignalAssigneeUpdateData:
      description: Data containing the patch for changing the assignee of a signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalAssigneeUpdateAttributes'
      required:
        - attributes
      type: object
    SecurityMonitoringSignalTriageUpdateData:
      description: Data containing the updated triage attributes of the signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalTriageAttributes'
        id:
          description: The unique ID of the security signal.
          type: string
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalMetadataType'
      type: object
    SecurityMonitoringSignalAssigneeUpdateAttributes:
      description: Attributes describing the new assignee of a security signal.
      properties:
        assignee:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
        version:
          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'
      required:
        - assignee
      type: object
    SecurityMonitoringSignalTriageAttributes:
      description: Attributes describing a triage state update operation over a security signal.
      properties:
        archive_comment:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveComment'
        archive_comment_timestamp:
          description: Timestamp of the last edit to the comment.
          format: int64
          minimum: 0
          type: integer
        archive_comment_user:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
        archive_reason:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveReason'
        assignee:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
        incident_ids:
          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentIds'
        state:
          $ref: '#/components/schemas/SecurityMonitoringSignalState'
        state_update_timestamp:
          description: Timestamp of the last update to the signal state.
          format: int64
          minimum: 0
          type: integer
        state_update_user:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
      required:
        - assignee
        - state
        - incident_ids
      type: object
    SecurityMonitoringSignalMetadataType:
      default: signal_metadata
      description: The type of event.
      enum:
        - signal_metadata
      example: signal_metadata
      type: string
      x-enum-varnames:
        - SIGNAL_METADATA
    SecurityMonitoringTriageUser:
      description: Object representing a given user entity.
      properties:
        handle:
          description: The handle for this user account.
          type: string
        icon:
          description: Gravatar icon associated to the user.
          example: /path/to/matching/gravatar/icon
          readOnly: true
          type: string
        id:
          description: Numerical ID assigned by Datadog to this user account.
          format: int64
          type: integer
        name:
          description: The name for this user account.
          nullable: true
          type: string
        uuid:
          description: UUID assigned by Datadog to this user account.
          example: 773b045d-ccf8-4808-bd3b-955ef6a8c940
          type: string
      required:
        - uuid
      type: object
    SecurityMonitoringSignalVersion:
      description: 'Version of the updated signal. If server side version is higher, update will be rejected.'
      format: int64
      type: integer
    SecurityMonitoringSignalArchiveComment:
      description: Optional comment to display on archived signals.
      type: string
    SecurityMonitoringSignalArchiveReason:
      description: Reason a signal is archived.
      enum:
        - none
        - false_positive
        - testing_or_maintenance
        - investigated_case_opened
        - other
      type: string
      x-enum-varnames:
        - NONE
        - FALSE_POSITIVE
        - TESTING_OR_MAINTENANCE
        - INVESTIGATED_CASE_OPENED
        - OTHER
    SecurityMonitoringSignalIncidentIds:
      description: Array of incidents that are associated with this signal.
      items:
        description: Public ID attribute of the incident that is associated with the signal.
        example: 2066
        format: int64
        type: integer
      type: array
    SecurityMonitoringSignalState:
      description: The new triage state of the signal.
      enum:
        - open
        - archived
        - under_review
      example: open
      type: string
      x-enum-varnames:
        - OPEN
        - ARCHIVED
        - UNDER_REVIEW
    SecurityMonitoringSignalIncidentsUpdateRequest:
      description: Request body for changing the related incidents of a given security monitoring signal.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentsUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringSignalIncidentsUpdateData:
      description: Data containing the patch for changing the related incidents of a signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentsUpdateAttributes'
      required:
        - attributes
      type: object
    SecurityMonitoringSignalIncidentsUpdateAttributes:
      description: Attributes describing the new list of related signals for a security signal.
      properties:
        incident_ids:
          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentIds'
        version:
          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'
      required:
        - incident_ids
      type: object
    SecurityMonitoringSignalStateUpdateRequest:
      description: Request body for changing the state of a given security monitoring signal.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringSignalStateUpdateData:
      description: Data containing the patch for changing the state of a signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateAttributes'
        id:
          description: The unique ID of the security signal.
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalMetadataType'
      required:
        - attributes
      type: object
    SecurityMonitoringSignalStateUpdateAttributes:
      description: Attributes describing the change of state of a security signal.
      properties:
        archive_comment:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveComment'
        archive_reason:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveReason'
        state:
          $ref: '#/components/schemas/SecurityMonitoringSignalState'
        version:
          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'
      required:
        - state
      type: object
  parameters:
    APIKeyCategoryParameter:
      description: Filter API keys by category.
      in: query
      name: 'filter[category]'
      required: false
      schema:
        type: string
    APIKeyFilterCreatedAtEndParameter:
      description: Only include API keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterCreatedAtStartParameter:
      description: Only include API keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtEndParameter:
      description: Only include API keys modified on or before the specified date.
      in: query
      name: 'filter[modified_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtStartParameter:
      description: Only include API keys modified on or after the specified date.
      in: query
      name: 'filter[modified_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterParameter:
      description: Filter API keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    APIKeyId:
      description: The ID of the API key.
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
    APIKeyIncludeParameter:
      description: Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`.
      in: query
      name: include
      required: false
      schema:
        example: 'created_by,modified_by'
        type: string
    APIKeyReadConfigReadEnabledParameter:
      description: Filter API keys by remote config read enabled status.
      in: query
      name: 'filter[remote_config_read_enabled]'
      required: false
      schema:
        type: boolean
    APIKeysSortParameter:
      description: |-
        API key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/APIKeysSort'
    ApplicationKeyFilterCreatedAtEndParameter:
      description: Only include application keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterCreatedAtStartParameter:
      description: Only include application keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterParameter:
      description: Filter application keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    ApplicationKeyID:
      description: The ID of the application key.
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
    ApplicationKeyIncludeParameter:
      description: Resource path for related resources to include in the response. Only `owned_by` is supported.
      in: query
      name: include
      required: false
      schema:
        example: owned_by
        type: string
    ApplicationKeysSortParameter:
      description: |-
        Application key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationKeysSort'
    ArchiveID:
      description: The ID of the archive.
      in: path
      name: archive_id
      required: true
      schema:
        type: string
    AuthNMappingID:
      description: The UUID of the AuthN Mapping.
      in: path
      name: authn_mapping_id
      required: true
      schema:
        type: string
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule.
      example: 3b5-v82-ns6
      in: path
      name: agent_rule_id
      required: true
      schema:
        type: string
    ConfluentAccountID:
      description: Confluent Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    ConfluentResourceID:
      description: Confluent Account Resource ID.
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    FastlyAccountID:
      description: Fastly Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    FastlyServiceID:
      description: Fastly Service ID.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    GCPSTSServiceAccountID:
      description: Your GCP STS enabled service account's unique ID.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    IncidentAttachmentFilterQueryParameter:
      description: Specifies which types of attachments are included in the response.
      explode: false
      in: query
      name: 'filter[attachment_type]'
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentAttachmentType'
        type: array
    IncidentAttachmentIncludeQueryParameter:
      description: Specifies which types of related objects are included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentRelatedObject'
        type: array
    IncidentIDPathParameter:
      description: The UUID of the incident.
      in: path
      name: incident_id
      required: true
      schema:
        type: string
    IncidentIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentRelatedObject'
        type: array
    IncidentIntegrationMetadataIDPathParameter:
      description: The UUID of the incident integration metadata.
      in: path
      name: integration_metadata_id
      required: true
      schema:
        type: string
    IncidentSearchIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentSearchQueryQueryParameter:
      description: |-
        Specifies which incidents should be returned. The query can contain any number of incident facets
        joined by `ANDs`, along with multiple values for each of those facets joined by `OR`s. For
        example: `state:active AND severity:(SEV-2 OR SEV-1)`.
      explode: false
      in: query
      name: query
      required: true
      schema:
        type: string
    IncidentSearchSortQueryParameter:
      description: Specifies the order of returned incidents.
      explode: false
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/IncidentSearchSortOrder'
    IncidentServiceIDPathParameter:
      description: The ID of the incident service.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    IncidentServiceIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentServiceSearchQueryParameter:
      description: A search query that filters services by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleServiceName
        type: string
    IncidentTeamIDPathParameter:
      description: The ID of the incident team.
      in: path
      name: team_id
      required: true
      schema:
        type: string
    IncidentTeamIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentTeamSearchQueryParameter:
      description: A search query that filters teams by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleTeamName
        type: string
    IncidentTodoIDPathParameter:
      description: The UUID of the incident todo.
      in: path
      name: todo_id
      required: true
      schema:
        type: string
    MetricID:
      description: The name of the log-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    MetricName:
      description: The name of the metric.
      example: dist.http.endpoint.request
      in: path
      name: metric_name
      required: true
      schema:
        type: string
    OpsgenieServiceIDPathParameter:
      description: The UUID of the service.
      in: path
      name: integration_service_id
      required: true
      schema:
        type: string
    PageNumber:
      description: Specific page number to return.
      in: query
      name: 'page[number]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: 'page[offset]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: 'page[size]'
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    ResourceID:
      description: 'Identifier, formatted as `type:id`. Supported types: `connection`, `dashboard`, `notebook`, `security-rule`, `slo`.'
      example: 'dashboard:abc-def-ghi'
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    RetentionFilterIdParam:
      description: The ID of the retention filter.
      in: path
      name: filter_id
      required: true
      schema:
        type: string
    RoleID:
      description: The unique identifier of the role.
      in: path
      name: role_id
      required: true
      schema:
        type: string
    RuleId:
      description: The ID of the rule/scorecard.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SchemaVersion:
      description: The schema version desired in the response.
      in: query
      name: schema_version
      required: false
      schema:
        $ref: '#/components/schemas/ServiceDefinitionSchemaVersions'
    SecurityFilterID:
      description: The ID of the security filter.
      in: path
      name: security_filter_id
      required: true
      schema:
        type: string
    SecurityMonitoringRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SensitiveDataScannerGroupID:
      description: The ID of a group of rules.
      in: path
      name: group_id
      required: true
      schema:
        type: string
    SensitiveDataScannerRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    ServiceAccountID:
      description: The ID of the service account.
      in: path
      name: service_account_id
      required: true
      schema:
        example: 00000000-0000-1234-0000-000000000000
        type: string
    ServiceName:
      description: The name of the service.
      in: path
      name: service_name
      required: true
      schema:
        example: my-service
        type: string
    SignalID:
      description: The ID of the signal.
      in: path
      name: signal_id
      required: true
      schema:
        type: string
    SpansMetricIDParameter:
      description: The name of the span-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    UserID:
      description: The ID of the user.
      in: path
      name: user_id
      required: true
      schema:
        example: 00000000-0000-9999-0000-000000000000
        type: string
  responses:
    FindingsBadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Bad Request: The server cannot process the request due to invalid syntax in the request.'
    FindingsForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Forbidden: Access denied'
    FindingsNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Not Found: The requested finding cannot be found.'
    FindingsTooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Too many requests: The rate limit set by the API has been exceeded.'
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    ConcurrentModificationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Concurrent Modification
  securitySchemes:
    AuthZ:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: 'Add, modify, and delete service catalog definitions when those definitions are maintained by Datadog.'
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using the API.
            ci_visibility_read: View CI Visibility.
            create_webhooks: Create webhooks integrations.
            dashboards_public_share: Generate public and authenticated links to share dashboards or embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            events_read: Read Events data.
            incident_notification_settings_write: Configure Incidents Notification settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: 'Create, view, and manage incidents in Datadog.'
            metrics_read: View custom metrics.
            monitors_downtime: Set downtimes to suppress alerts from any monitor in an organization. Mute and unmute hosts. The ability to write monitors is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit and delete individual monitors.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: 'Create, edit, and delete Security Filters.'
            security_monitoring_findings_read: View CSPM Findings.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            slos_corrections: 'Apply, edit, and delete SLO status corrections. A user with this permission can make status corrections, even if they do not have permission to edit those SLOs.'
            slos_read: View SLOs and status corrections.
            slos_write: 'Create, edit, and delete SLOs.'
            synthetics_global_variable_read: 'View, search, and use Synthetics global variables.'
            synthetics_global_variable_write: 'Create, edit, and delete global variables for Synthetics.'
            synthetics_private_location_read: 'View, search, and use Synthetics private locations.'
            synthetics_private_location_write: Create and delete private locations in addition to having access to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: 'Create, edit, and delete Synthetic tests.'
            teams_manage: 'Manage Teams. Create, delete, rename, and edit metadata of all Teams. To control Team membership across all Teams, use the User Access Manage permission.'
            teams_read: 'Read Teams data. A User with this permission can view Team names, metadata, and which Users are on each Team.'
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: 'Disable users, manage user roles, manage SAML-to-role mappings, and configure logs restriction queries.'
            user_access_read: View users and their roles and settings.
          tokenUrl: /oauth2/v1/token
      type: oauth2
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    findings:
      id: datadog.security_monitoring.findings
      name: findings
      title: Findings
      methods:
        list_findings:
          operation:
            $ref: '#/paths/~1api~1v2~1posture_management~1findings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_findings:
          operation:
            $ref: '#/paths/~1api~1v2~1posture_management~1findings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        mute_findings:
          operation:
            $ref: '#/paths/~1api~1v2~1posture_management~1findings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_finding:
          operation:
            $ref: '#/paths/~1api~1v2~1posture_management~1findings~1{finding_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_finding:
          operation:
            $ref: '#/paths/~1api~1v2~1posture_management~1findings~1{finding_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/findings/methods/get_finding'
          - $ref: '#/components/x-stackQL-resources/findings/methods/list_findings'
        insert: []
        update: []
        delete: []
    security_filters:
      id: datadog.security_monitoring.security_filters
      name: security_filters
      title: Security Filters
      methods:
        list_security_filters:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1configuration~1security_filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_security_filters:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1configuration~1security_filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_security_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1configuration~1security_filters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_security_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1configuration~1security_filters~1{security_filter_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_security_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1configuration~1security_filters~1{security_filter_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_security_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1configuration~1security_filters~1{security_filter_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_security_filter:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1configuration~1security_filters~1{security_filter_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_filters/methods/get_security_filter'
          - $ref: '#/components/x-stackQL-resources/security_filters/methods/list_security_filters'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_filters/methods/create_security_filter'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_filters/methods/delete_security_filter'
    security_monitoring_rules:
      id: datadog.security_monitoring.security_monitoring_rules
      name: security_monitoring_rules
      title: Security Monitoring Rules
      methods:
        list_security_monitoring_rules:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_security_monitoring_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_security_monitoring_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1rules~1{rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_security_monitoring_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1rules~1{rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_security_monitoring_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1rules~1{rule_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_monitoring_rules/methods/get_security_monitoring_rule'
          - $ref: '#/components/x-stackQL-resources/security_monitoring_rules/methods/list_security_monitoring_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_monitoring_rules/methods/create_security_monitoring_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_monitoring_rules/methods/delete_security_monitoring_rule'
    security_monitoring_signals:
      id: datadog.security_monitoring.security_monitoring_signals
      name: security_monitoring_signals
      title: Security Monitoring Signals
      methods:
        list_security_monitoring_signals:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_security_monitoring_signals:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        search_security_monitoring_signals:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals~1search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_security_monitoring_signal:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals~1{signal_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_security_monitoring_signal:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals~1{signal_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        edit_security_monitoring_signal_assignee:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals~1{signal_id}~1assignee/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        edit_security_monitoring_signal_incidents:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals~1{signal_id}~1incidents/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        edit_security_monitoring_signal_state:
          operation:
            $ref: '#/paths/~1api~1v2~1security_monitoring~1signals~1{signal_id}~1state/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_monitoring_signals/methods/get_security_monitoring_signal'
          - $ref: '#/components/x-stackQL-resources/security_monitoring_signals/methods/list_security_monitoring_signals'
        insert: []
        update: []
        delete: []
paths:
  /api/v2/posture_management/findings:
    get:
      description: |
        Get a list of CSPM findings.

        ### Filtering

        Filters can be applied by appending query parameters to the URL.

          - Using a single filter: `?filter[attribute_key]=attribute_value`
          - Chaining filters: `?filter[attribute_key]=attribute_value&filter[attribute_key]=attribute_value...`
          - Filtering on tags: `?filter[tags]=tag_key:tag_value&filter[tags]=tag_key_2:tag_value_2`

        Here, `attribute_key` can be any of the filter keys described further below.

        Query parameters of type `integer` support comparison operators (`>`, `>=`, `<`, `<=`). This is particularly useful when filtering by `evaluation_changed_at` or `resource_discovery_timestamp`. For example: `?filter[evaluation_changed_at]=>20123123121`.

        You can also use the negation operator on strings. For example, use `filter[resource_type]=-aws*` to filter for any non-AWS resources.

        The operator must come after the equal sign. For example, to filter with the `>=` operator, add the operator after the equal sign: `filter[evaluation_changed_at]=>=1678809373257`.

        Query parameters must be only among the documented ones and with values of correct types. Duplicated query parameters (e.g. `filter[status]=low&filter[status]=info`) are not allowed.

        ### Response

        The response includes an array of finding objects, pagination metadata, and a count of items that match the query.

        Each finding object contains the following:

        - The finding ID that can be used in a `GetFinding` request to retrieve the full finding details.
        - Core attributes, including status, evaluation, high-level resource details, muted state, and rule details.
        - `evaluation_changed_at` and `resource_discovery_date` time stamps.
        - An array of associated tags.
      operationId: ListFindings
      parameters:
        - description: Limit the number of findings returned. Must be <= 1000.
          example: 50
          in: query
          name: 'page[limit]'
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            minimum: 1
            type: integer
        - description: Return findings for a given snapshot of time (Unix ms).
          example: 1678721573794
          in: query
          name: snapshot_timestamp
          required: false
          schema:
            format: int64
            minimum: 1
            type: integer
        - description: Return the next page of findings pointed to by the cursor.
          example: eyJhZnRlciI6IkFRQUFBWWJiaEJXQS1OY1dqUUFBQUFCQldXSmlhRUpYUVVGQlJFSktkbTlDTUdaWFRVbDNRVUUiLCJ2YWx1ZXMiOlsiY3JpdGljYWwiXX0=
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            type: string
        - description: Return findings that have these associated tags (repeatable).
          example: 'filter[tags]=cloud_provider:aws&filter[tags]=aws_account:999999999999'
          in: query
          name: 'filter[tags]'
          required: false
          schema:
            type: string
        - description: Return findings that have changed from pass to fail or vice versa on a specified date (Unix ms) or date range (using comparison operators).
          example: '>=1678721573794'
          in: query
          name: 'filter[evaluation_changed_at]'
          required: false
          schema:
            type: string
        - description: Set to `true` to return findings that are muted. Set to `false` to return unmuted findings.
          in: query
          name: 'filter[muted]'
          required: false
          schema:
            type: boolean
        - description: Return findings for the specified rule ID.
          in: query
          name: 'filter[rule_id]'
          required: false
          schema:
            type: string
        - description: Return findings for the specified rule.
          in: query
          name: 'filter[rule_name]'
          required: false
          schema:
            type: string
        - description: Return only findings for the specified resource type.
          in: query
          name: 'filter[resource_type]'
          required: false
          schema:
            type: string
        - description: Return findings that were found on a specified date (Unix ms) or date range (using comparison operators).
          example: '>=1678721573794'
          in: query
          name: 'filter[discovery_timestamp]'
          required: false
          schema:
            type: string
        - description: Return only `pass` or `fail` findings.
          example: pass
          in: query
          name: 'filter[evaluation]'
          required: false
          schema:
            $ref: '#/components/schemas/FindingEvaluation'
        - description: Return only findings with the specified status.
          example: critical
          in: query
          name: 'filter[status]'
          required: false
          schema:
            $ref: '#/components/schemas/FindingStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_findings_read
      summary: List findings
      tags:
        - Security Monitoring
      x-pagination:
        cursorParam: 'page[cursor]'
        cursorPath: meta.page.cursor
        limitParam: 'page[limit]'
        resultsPath: data
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Mute or unmute findings.
      operationId: MuteFindings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkMuteFindingsRequest'
        description: |
          ### Attributes

          All findings are updated with the same attributes. The request body must include at least two attributes: `muted` and `reason`.
          The allowed reasons depend on whether the finding is being muted or unmuted:
            - To mute a finding: `PENDING_FIX`, `FALSE_POSITIVE`, `ACCEPTED_RISK`, `OTHER`.
            - To unmute a finding : `NO_PENDING_FIX`, `HUMAN_ERROR`, `NO_LONGER_ACCEPTED_RISK`, `OTHER`.

          ### Meta

          The request body must include a list of the finding IDs to be updated.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkMuteFindingsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Invalid Request: The server understands the request syntax but cannot process it due to invalid data.'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Mute or unmute a batch of findings
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/posture_management/findings/{finding_id}':
    get:
      description: Returns a single finding with message and resource configuration.
      operationId: GetFinding
      parameters:
        - description: The ID of the finding.
          in: path
          name: finding_id
          required: true
          schema:
            type: string
        - description: Return the finding for a given snapshot of time (Unix ms).
          example: 1678721573794
          in: query
          name: snapshot_timestamp
          required: false
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_findings_read
      summary: Get a finding
      tags:
        - Security Monitoring
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/security_monitoring/configuration/security_filters:
    get:
      description: Get the list of configured security filters with their definitions.
      operationId: ListSecurityFilters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFiltersResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_read
      summary: Get all security filters
      tags:
        - Security Monitoring
    post:
      description: |-
        Create a security filter.

        See the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)
        for more examples.
      operationId: CreateSecurityFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityFilterCreateRequest'
        description: The definition of the new security filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_write
      summary: Create a security filter
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
  '/api/v2/security_monitoring/configuration/security_filters/{security_filter_id}':
    delete:
      description: Delete a specific security filter.
      operationId: DeleteSecurityFilter
      parameters:
        - $ref: '#/components/parameters/SecurityFilterID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_write
      summary: Delete a security filter
      tags:
        - Security Monitoring
    get:
      description: |-
        Get the details of a specific security filter.

        See the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)
        for more examples.
      operationId: GetSecurityFilter
      parameters:
        - $ref: '#/components/parameters/SecurityFilterID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_read
      summary: Get a security filter
      tags:
        - Security Monitoring
    patch:
      description: |-
        Update a specific security filter.
        Returns the security filter object when the request is successful.
      operationId: UpdateSecurityFilter
      parameters:
        - $ref: '#/components/parameters/SecurityFilterID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityFilterUpdateRequest'
        description: New definition of the security filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_write
      summary: Update a security filter
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
  /api/v2/security_monitoring/rules:
    get:
      description: List rules.
      operationId: ListSecurityMonitoringRules
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringListRulesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_read
      summary: List rules
      tags:
        - Security Monitoring
    post:
      description: Create a detection rule.
      operationId: CreateSecurityMonitoringRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleCreatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Create a detection rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
  '/api/v2/security_monitoring/rules/{rule_id}':
    delete:
      description: Delete an existing rule. Default rules cannot be deleted.
      operationId: DeleteSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Delete an existing rule
      tags:
        - Security Monitoring
    get:
      description: Get a rule's details.
      operationId: GetSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_read
      summary: Get a rule's details
      tags:
        - Security Monitoring
    put:
      description: |-
        Update an existing rule. When updating `cases`, `queries` or `options`, the whole field
        must be included. For example, when modifying a query all queries must be included.
        Default rules can only be updated to be enabled and to change notifications.
      operationId: UpdateSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleUpdatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Update an existing rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
  /api/v2/security_monitoring/signals:
    get:
      description: |-
        The list endpoint returns security signals that match a search query.
        Both this endpoint and the POST endpoint can be used interchangeably when listing
        security signals.
      operationId: ListSecurityMonitoringSignals
      parameters:
        - description: The search query for security signals.
          example: 'security:attack status:high'
          in: query
          name: 'filter[query]'
          required: false
          schema:
            type: string
        - description: The minimum timestamp for requested security signals.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: 'filter[from]'
          required: false
          schema:
            format: date-time
            type: string
        - description: The maximum timestamp for requested security signals.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: 'filter[to]'
          required: false
          schema:
            format: date-time
            type: string
        - description: The order of the security signals in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SecurityMonitoringSignalsSort'
        - description: A list of results using the cursor provided in the previous query.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            type: string
        - description: The maximum number of security signals in the response.
          example: 25
          in: query
          name: 'page[limit]'
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_signals_read
      summary: Get a quick list of security signals
      tags:
        - Security Monitoring
      x-pagination:
        cursorParam: 'page[cursor]'
        cursorPath: meta.page.after
        limitParam: 'page[limit]'
        resultsPath: data
  /api/v2/security_monitoring/signals/search:
    post:
      description: |-
        Returns security signals that match a search query.
        Both this endpoint and the GET endpoint can be used interchangeably for listing
        security signals.
      operationId: SearchSecurityMonitoringSignals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSignalListRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_signals_read
      summary: Get a list of security signals
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
  '/api/v2/security_monitoring/signals/{signal_id}':
    get:
      description: Get a signal's details.
      operationId: GetSecurityMonitoringSignal
      parameters:
        - $ref: '#/components/parameters/SignalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalResponse'
          description: OK
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_signals_read
      summary: Get a signal's details
      tags:
        - Security Monitoring
  '/api/v2/security_monitoring/signals/{signal_id}/assignee':
    patch:
      description: Modify the triage assignee of a security signal.
      operationId: EditSecurityMonitoringSignalAssignee
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSignalAssigneeUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Modify the triage assignee of a security signal
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
  '/api/v2/security_monitoring/signals/{signal_id}/incidents':
    patch:
      description: Change the related incidents for a security signal.
      operationId: EditSecurityMonitoringSignalIncidents
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSignalIncidentsUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Change the related incidents of a security signal
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
  '/api/v2/security_monitoring/signals/{signal_id}/state':
    patch:
      description: Change the triage state of a security signal.
      operationId: EditSecurityMonitoringSignalState
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Change the triage state of a security signal
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
